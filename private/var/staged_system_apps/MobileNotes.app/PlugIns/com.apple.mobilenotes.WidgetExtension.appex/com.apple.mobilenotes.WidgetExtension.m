void sub_100003DCC(id a1)
{
  uint64_t vars8;

  qword_1000A6490 = objc_alloc_init(QuickNoteAlertManager);

  _objc_release_x1();
}

void sub_10000417C(uint64_t a1)
{
  if ([*(id *)(a1 + 32) isEqual:*(void *)(*(void *)(a1 + 40) + 8)])
  {
    [*(id *)(a1 + 32) invalidate];
    [*(id *)(a1 + 32) unregisterObserver:*(void *)(a1 + 40)];
    uint64_t v2 = *(void *)(a1 + 40);
    v3 = *(void **)(v2 + 8);
    *(void *)(v2 + 8) = 0;
  }
}

void sub_1000044FC(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100004528(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100004538(uint64_t a1)
{
}

void sub_100004540(uint64_t a1)
{
  uint64_t v2 = +[ICWidget sharedWidget];
  unsigned __int8 v3 = [v2 hidesObject:*(void *)(a1 + 32)];

  if ((v3 & 1) == 0)
  {
    id v4 = *(id *)(a1 + 40);
    v5 = +[ICAppURLUtilities appURLForNote:*(void *)(a1 + 32)];
    v6 = [v5 absoluteString];
    v7 = [*(id *)(a1 + 32) title];
    v8 = +[ICNoteListSortUtilities dateForCurrentSortTypeForNote:*(void *)(a1 + 32) folderNoteSortType:*(void *)(a1 + 48)];
    v9 = [*(id *)(a1 + 32) contentInfoText];
    id v10 = [*(id *)(a1 + 32) isPasswordProtected];
    id v11 = [*(id *)(a1 + 32) isSharedViaICloud];
    unsigned int v12 = [*(id *)(a1 + 32) isSharedViaICloud];
    if (v12) {
      LOBYTE(v12) = [*(id *)(a1 + 32) hasUnreadChanges];
    }
    LOBYTE(v17) = v12;
    id v13 = [v4 initWithIdentifier:v6 title:v7 date:v8 contentInfo:v9 isLocked:v10 isShared:v11 isUnread:v17];
    uint64_t v14 = *(void *)(*(void *)(a1 + 56) + 8);
    v15 = *(void **)(v14 + 40);
    *(void *)(v14 + 40) = v13;

    v16 = *(void **)(a1 + 32);
    _[v16 turnAttachmentsIntoFaults];
  }
}

void sub_1000046C8(uint64_t a1)
{
  uint64_t v2 = +[ICWidget sharedWidget];
  unsigned __int8 v3 = [v2 hidesObject:*(void *)(a1 + 32)];

  if ((v3 & 1) == 0)
  {
    id v4 = *(id *)(a1 + 40);
    id v13 = +[ICAppURLUtilities appURLForHTMLNote:*(void *)(a1 + 32)];
    v5 = [v13 absoluteString];
    v6 = [*(id *)(a1 + 32) title];
    v7 = +[ICNoteListSortUtilities dateForCurrentSortTypeForNote:*(void *)(a1 + 32) folderNoteSortType:*(void *)(a1 + 48)];
    v8 = [*(id *)(a1 + 32) contentInfoText];
    LOBYTE(v12) = 0;
    id v9 = [v4 initWithIdentifier:v5 title:v6 date:v7 contentInfo:v8 isLocked:0 isShared:0 isUnread:v12];
    uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8);
    id v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;
  }
}

void sub_100004F5C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100004F80(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100004F90(uint64_t a1)
{
}

void sub_100004F98(uint64_t a1)
{
  uint64_t v2 = +[ICWidget sharedWidget];
  unsigned __int8 v3 = [v2 hidesObject:*(void *)(a1 + 32)];

  if ((v3 & 1) == 0)
  {
    objc_opt_class();
    id v4 = ICDynamicCast();
    v5 = v4;
    if (v4)
    {
      id v15 = v4;
    }
    else
    {
      objc_opt_class();
      v6 = ICDynamicCast();
      id v15 = [v6 account];
    }
    id v7 = *(id *)(a1 + 40);
    v8 = +[ICAppURLUtilities appURLForFolder:v15];
    id v9 = [v8 absoluteString];
    uint64_t v10 = [v15 allItemsFolderLocalizedTitle];
    id v11 = +[ICFolder defaultSystemImageName];
    id v12 = [v7 initWithIdentifier:v9 title:v10 depth:0 shareDescription:0 systemImageName:v11];
    uint64_t v13 = *(void *)(*(void *)(a1 + 48) + 8);
    uint64_t v14 = *(void **)(v13 + 40);
    *(void *)(v13 + 40) = v12;
  }
}

void sub_100005114(uint64_t a1)
{
  uint64_t v2 = +[ICWidget sharedWidget];
  unsigned __int8 v3 = [v2 hidesObject:*(void *)(a1 + 32)];

  if ((v3 & 1) == 0)
  {
    objc_opt_class();
    ICClassAndProtocolCast();
    id v12 = (id)objc_claimAutoreleasedReturnValue();
    id v4 = *(id *)(a1 + 40);
    v5 = +[ICAppURLUtilities appURLForHTMLFolder:](ICAppURLUtilities, "appURLForHTMLFolder:", v12, &OBJC_PROTOCOL___ICLegacyAccount);
    v6 = [v5 absoluteString];
    id v7 = [v12 allItemsFolderLocalizedTitle];
    v8 = +[ICFolder defaultSystemImageName];
    id v9 = [v4 initWithIdentifier:v6 title:v7 depth:0 shareDescription:0 systemImageName:v8];
    uint64_t v10 = *(void *)(*(void *)(a1 + 48) + 8);
    id v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;
  }
}

void sub_100005268(uint64_t a1)
{
  uint64_t v2 = +[ICWidget sharedWidget];
  unsigned __int8 v3 = [v2 hidesObject:*(void *)(a1 + 32)];

  if ((v3 & 1) == 0)
  {
    objc_opt_class();
    ICDynamicCast();
    id v14 = (id)objc_claimAutoreleasedReturnValue();
    id v4 = *(id *)(a1 + 40);
    v5 = +[ICAppURLUtilities appURLForFolder:v14];
    v6 = [v5 absoluteString];
    id v7 = [v14 localizedTitle];
    id v8 = [v14 depth];
    id v9 = [v14 shareDescription];
    uint64_t v10 = [v14 systemImageName];
    id v11 = [v4 initWithIdentifier:v6 title:v7 depth:v8 shareDescription:v9 systemImageName:v10];
    uint64_t v12 = *(void *)(*(void *)(a1 + 48) + 8);
    uint64_t v13 = *(void **)(v12 + 40);
    *(void *)(v12 + 40) = v11;
  }
}

void sub_1000053CC(uint64_t a1)
{
  uint64_t v2 = +[ICWidget sharedWidget];
  unsigned __int8 v3 = [v2 hidesObject:*(void *)(a1 + 32)];

  if ((v3 & 1) == 0)
  {
    objc_opt_class();
    ICClassAndProtocolCast();
    id v13 = (id)objc_claimAutoreleasedReturnValue();
    id v4 = *(id *)(a1 + 40);
    v5 = +[ICAppURLUtilities appURLForHTMLFolder:](ICAppURLUtilities, "appURLForHTMLFolder:", v13, &OBJC_PROTOCOL___ICLegacyFolder);
    v6 = [v5 absoluteString];
    id v7 = [v13 localizedTitle];
    id v8 = [v13 depth];
    id v9 = +[ICFolder defaultSystemImageName];
    id v10 = [v4 initWithIdentifier:v6 title:v7 depth:v8 shareDescription:0 systemImageName:v9];
    uint64_t v11 = *(void *)(*(void *)(a1 + 48) + 8);
    uint64_t v12 = *(void **)(v11 + 40);
    *(void *)(v11 + 40) = v10;
  }
}

uint64_t sub_100005878@<X0>(uint64_t a1@<X8>)
{
  uint64_t v44 = a1;
  uint64_t v1 = sub_100008FA4(&qword_1000A3310);
  ((void (*)(void))__chkstk_darwin)();
  unsigned __int8 v3 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for QuickNoteContent(0);
  uint64_t v4 = ((uint64_t (*)(void))__chkstk_darwin)();
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v40 = (uint64_t)&v37 - v7;
  uint64_t v8 = type metadata accessor for Note();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v38 = (uint64_t)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v39 = (uint64_t)&v37 - v12;
  uint64_t v42 = sub_100008FA4(&qword_1000A3318);
  __chkstk_darwin(v42);
  id v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100008FA4(&qword_1000A3268);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100008FA4(&qword_1000A3320);
  __chkstk_darwin(v18);
  v20 = (char *)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = &type metadata for PencilAndPaperFeature;
  *(void *)&long long v48 = sub_10000A2EC();
  *(void *)&long long v45 = "QNWidget";
  *((void *)&v45 + 1) = 8;
  char v46 = 2;
  char v21 = sub_10007C250();
  sub_10000A340((uint64_t)&v45);
  if (v21)
  {
    uint64_t v37 = v1;
    sub_10000CB64(v41, (uint64_t)v17, &qword_1000A3268);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v17, 2, v8))
    {
      swift_storeEnumTagMultiPayload();
      sub_10000A484();
      sub_10000C328(&qword_1000A3348, (void (*)(uint64_t))type metadata accessor for QuickNoteContent);
      sub_10007C650();
    }
    else
    {
      uint64_t v30 = v39;
      sub_10000A4E0((uint64_t)v17, v39, (uint64_t (*)(void))type metadata accessor for Note);
      uint64_t v31 = v38;
      sub_10000A548(v30, v38, (uint64_t (*)(void))type metadata accessor for Note);
      uint64_t v32 = v43;
      v33 = (uint64_t *)&v6[*(int *)(v43 + 20)];
      uint64_t *v33 = swift_getKeyPath();
      sub_100008FA4(&qword_1000A3358);
      swift_storeEnumTagMultiPayload();
      v34 = &v6[*(int *)(v32 + 24)];
      *(void *)v34 = swift_getKeyPath();
      v34[8] = 0;
      v35 = (uint64_t *)&v6[*(int *)(v32 + 28)];
      uint64_t *v35 = swift_getKeyPath();
      sub_100008FA4(&qword_1000A3360);
      swift_storeEnumTagMultiPayload();
      sub_10000A4E0(v31, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Note);
      uint64_t v36 = v40;
      sub_10000A4E0((uint64_t)v6, v40, type metadata accessor for QuickNoteContent);
      sub_10000A548(v36, (uint64_t)v14, type metadata accessor for QuickNoteContent);
      swift_storeEnumTagMultiPayload();
      sub_10000A484();
      sub_10000C328(&qword_1000A3348, (void (*)(uint64_t))type metadata accessor for QuickNoteContent);
      sub_10007C650();
      sub_10000A5B0(v36, type metadata accessor for QuickNoteContent);
      sub_10000A5B0(v30, (uint64_t (*)(void))type metadata accessor for Note);
    }
    sub_10000CB64((uint64_t)v20, (uint64_t)v3, &qword_1000A3320);
    swift_storeEnumTagMultiPayload();
    sub_100008FA4(&qword_1000A3330);
    sub_10000A390();
    sub_10000CAB4(&qword_1000A3350, &qword_1000A3330);
    sub_10007C650();
    return sub_10000CBC8((uint64_t)v20, &qword_1000A3320);
  }
  else
  {
    uint64_t v22 = sub_10007C600();
    sub_100005EDC((uint64_t)&v45);
    char v23 = v46;
    v24 = v47;
    char v25 = v49;
    uint64_t v26 = v50;
    long long v27 = v45;
    long long v28 = v48;
    *(void *)unsigned __int8 v3 = v22;
    *((void *)v3 + 1) = 0;
    v3[16] = 1;
    *(_OWORD *)(v3 + 24) = v27;
    v3[40] = v23;
    *((void *)v3 + 6) = v24;
    *(_OWORD *)(v3 + 56) = v28;
    v3[72] = v25;
    *((void *)v3 + 10) = v26;
    swift_storeEnumTagMultiPayload();
    sub_100008FA4(&qword_1000A3330);
    sub_10000A390();
    sub_10000CAB4(&qword_1000A3350, &qword_1000A3330);
    return sub_10007C650();
  }
}

uint64_t sub_100005EDC@<X0>(uint64_t a1@<X8>)
{
  sub_10007C7C0();
  uint64_t v2 = sub_10007C890();
  uint64_t v20 = v3;
  uint64_t v21 = v2;
  char v5 = v4;
  uint64_t v22 = v6;
  swift_release();
  sub_10007C7B0();
  uint64_t v7 = sub_10007C890();
  uint64_t v9 = v8;
  char v11 = v10;
  swift_release();
  sub_10007CA90();
  uint64_t v12 = sub_10007C860();
  uint64_t v14 = v13;
  char v16 = v15;
  uint64_t v18 = v17;
  swift_release();
  v16 &= 1u;
  sub_10000A610(v7, v9, v11 & 1);
  swift_bridgeObjectRelease();
  *(void *)a1 = v21;
  *(void *)(a1 + 8) = v20;
  *(unsigned char *)(a1 + 16) = v5 & 1;
  *(void *)(a1 + 24) = v22;
  *(void *)(a1 + 32) = v12;
  *(void *)(a1 + 40) = v14;
  *(unsigned char *)(a1 + 48) = v16;
  *(void *)(a1 + 56) = v18;
  sub_10000A620(v21, v20, v5 & 1);
  swift_bridgeObjectRetain();
  sub_10000A620(v12, v14, v16);
  swift_bridgeObjectRetain();
  sub_10000A610(v12, v14, v16);
  swift_bridgeObjectRelease();
  sub_10000A610(v21, v20, v5 & 1);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000060B0()
{
  return sub_10007C970();
}

uint64_t sub_1000060D0()
{
  return sub_10007C440();
}

uint64_t sub_1000060F8()
{
  sub_10007CA30();
  uint64_t result = sub_10007CBB0();
  qword_1000B21F0 = result;
  qword_1000B21F8 = v1;
  return result;
}

uint64_t sub_100006130(uint64_t a1)
{
  return sub_100006170(a1, &qword_1000B2200, &qword_1000B2208);
}

uint64_t sub_100006150(uint64_t a1)
{
  return sub_100006170(a1, &qword_1000B2210, &qword_1000B2218);
}

uint64_t sub_100006170(uint64_t a1, uint64_t *a2, void *a3)
{
  sub_10007CA30();
  sub_10007CA70();
  swift_release();
  uint64_t result = sub_10007CBB0();
  *a2 = result;
  *a3 = v6;
  return result;
}

uint64_t sub_1000061DC()
{
  sub_100008FA4(&qword_1000A35C0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1000807D0;
  if (qword_1000A30F8 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1000B21F8;
  *(void *)(v0 + 32) = qword_1000B21F0;
  *(void *)(v0 + 40) = v1;
  uint64_t v2 = qword_1000A3100;
  swift_retain();
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1000B2208;
  *(void *)(v0 + 48) = qword_1000B2200;
  *(void *)(v0 + 56) = v3;
  uint64_t v4 = qword_1000A3108;
  swift_retain();
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_1000B2218;
  *(void *)(v0 + 64) = qword_1000B2210;
  *(void *)(v0 + 72) = v5;
  qword_1000B2220 = v0;

  return swift_retain();
}

uint64_t sub_100006318@<X0>(uint64_t a1@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v2 = sub_100008FA4(&qword_1000A34F8);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v27 = (uint64_t)&v25 - v6;
  uint64_t v7 = sub_100008FA4(&qword_1000A3500);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100008FA4(&qword_1000A3508);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v1 + *(int *)(type metadata accessor for QuickNoteContent(0) + 24);
  uint64_t v14 = *(void *)v13;
  char v15 = *(unsigned char *)(v13 + 8);
  sub_10000A9EC(*(void *)v13, v15);
  char v16 = sub_10003EFB4(v14, v15);
  sub_10000AC28(v14, v15);
  sub_100006668((uint64_t)v12);
  if (v16)
  {
    uint64_t v17 = &qword_1000A3508;
    sub_10000CB64((uint64_t)v12, (uint64_t)v9, &qword_1000A3508);
    swift_storeEnumTagMultiPayload();
    sub_10000C590();
    sub_10000CA14();
    sub_10007C650();
    uint64_t v18 = (uint64_t)v12;
  }
  else
  {
    uint64_t v26 = v10;
    if (qword_1000A3110 != -1) {
      swift_once();
    }
    swift_bridgeObjectRetain();
    sub_10007CC20();
    sub_10007CC30();
    sub_10007CBC0();
    sub_10007C3D0();
    uint64_t v19 = v29;
    long long v25 = v30;
    uint64_t v20 = v31;
    uint64_t v21 = v32;
    sub_10000CB64((uint64_t)v12, (uint64_t)v5, &qword_1000A3508);
    uint64_t v22 = &v5[*(int *)(v2 + 36)];
    *(void *)uint64_t v22 = v19;
    *(_OWORD *)(v22 + 8) = v25;
    *((void *)v22 + 3) = v20;
    *((void *)v22 + 4) = v21;
    sub_10000CBC8((uint64_t)v12, &qword_1000A3508);
    uint64_t v17 = &qword_1000A34F8;
    uint64_t v23 = v27;
    sub_10000CB00((uint64_t)v5, v27, &qword_1000A34F8);
    sub_10000CB64(v23, (uint64_t)v9, &qword_1000A34F8);
    swift_storeEnumTagMultiPayload();
    sub_10000C590();
    sub_10000CA14();
    sub_10007C650();
    uint64_t v18 = v23;
  }
  return sub_10000CBC8(v18, v17);
}

uint64_t sub_100006668@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v163 = a1;
  uint64_t v164 = sub_10007C360();
  uint64_t v162 = *(void *)(v164 - 8);
  __chkstk_darwin(v164);
  uint64_t v161 = (uint64_t)&v126 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100008FA4(&qword_1000A3270);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  v127 = (char *)&v126 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  v151 = (char *)&v126 - v8;
  __chkstk_darwin(v7);
  uint64_t v160 = (uint64_t)&v126 - v9;
  uint64_t v156 = sub_10007C6B0();
  uint64_t v155 = *(void *)(v156 - 8);
  __chkstk_darwin(v156);
  v152 = (char *)&v126 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v147 = sub_10007C700();
  uint64_t v145 = *(void *)(v147 - 8);
  __chkstk_darwin(v147);
  v140 = (char *)&v126 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = sub_10007C5F0();
  uint64_t v134 = *(void *)(v136 - 8);
  __chkstk_darwin(v136);
  v132 = (char *)&v126 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = sub_10007C800();
  uint64_t v13 = *(void *)(v129 - 8);
  __chkstk_darwin(v129);
  char v15 = (char *)&v126 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100008FA4(&qword_1000A3590);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v126 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100008FA4(&qword_1000A3580);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v126 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100008FA4(&qword_1000A3568);
  __chkstk_darwin(v22);
  v24 = (char *)&v126 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = sub_100008FA4(&qword_1000A3560);
  uint64_t v131 = *(void *)(v130 - 8);
  __chkstk_darwin(v130);
  uint64_t v26 = (char *)&v126 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = sub_100008FA4(&qword_1000A35C8);
  uint64_t v135 = *(void *)(v137 - 8);
  __chkstk_darwin(v137);
  v128 = (char *)&v126 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = sub_100008FA4(&qword_1000A3558) - 8;
  __chkstk_darwin(v133);
  uint64_t v29 = (char *)&v126 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = sub_100008FA4(&qword_1000A3548) - 8;
  __chkstk_darwin(v139);
  uint64_t v138 = (uint64_t)&v126 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = sub_100008FA4(&qword_1000A3530);
  __chkstk_darwin(v143);
  uint64_t v141 = (uint64_t)&v126 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = sub_100008FA4(&qword_1000A35D0);
  uint64_t v150 = *(void *)(v148 - 8);
  __chkstk_darwin(v148);
  v142 = (char *)&v126 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = sub_100008FA4(&qword_1000A3520);
  uint64_t v33 = __chkstk_darwin(v149);
  v144 = (char *)&v126 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v146 = (char *)&v126 - v35;
  uint64_t v154 = sub_100008FA4(&qword_1000A3518);
  uint64_t v153 = *(void *)(v154 - 8);
  __chkstk_darwin(v154);
  v165 = (char *)&v126 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_100008FA4(&qword_1000A35D8);
  uint64_t v158 = *(void *)(v37 - 8);
  uint64_t v159 = v37;
  __chkstk_darwin(v37);
  v157 = (char *)&v126 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v18 = sub_10007C600();
  *((void *)v18 + 1) = 0;
  v18[16] = 1;
  uint64_t v39 = sub_100008FA4(&qword_1000A35E0);
  sub_1000078B0(v2, (uint64_t)&v18[*(int *)(v39 + 44)]);
  uint64_t v40 = sub_10007CBF0();
  sub_1000705B4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v21, 0.0, 1, INFINITY, 0, v40, v41);
  sub_10000CBC8((uint64_t)v18, &qword_1000A3590);
  uint64_t v42 = v129;
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, enum case for Font.TextStyle.footnote(_:), v129);
  uint64_t v43 = sub_10007C790();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v42);
  uint64_t KeyPath = swift_getKeyPath();
  sub_10000CB64((uint64_t)v21, (uint64_t)v24, &qword_1000A3580);
  long long v45 = (uint64_t *)&v24[*(int *)(v22 + 36)];
  *long long v45 = KeyPath;
  v45[1] = v43;
  sub_10000CBC8((uint64_t)v21, &qword_1000A3580);
  uint64_t v46 = v134;
  v47 = v132;
  uint64_t v48 = v136;
  (*(void (**)(char *, void, uint64_t))(v134 + 104))(v132, enum case for ContentSizeCategory.extraExtraExtraLarge(_:), v136);
  unint64_t v49 = sub_10000C954();
  sub_10007C8E0();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v48);
  sub_10000CBC8((uint64_t)v24, &qword_1000A3568);
  uint64_t v50 = v140;
  sub_10007C6F0();
  uint64_t v51 = v2;
  uint64_t v166 = v2;
  sub_10007CBF0();
  uint64_t v167 = v22;
  unint64_t v168 = v49;
  swift_getOpaqueTypeConformance2();
  v52 = v128;
  uint64_t v53 = v130;
  sub_10007C9A0();
  (*(void (**)(char *, uint64_t))(v145 + 8))(v50, v147);
  uint64_t v54 = (uint64_t)v151;
  (*(void (**)(char *, uint64_t))(v131 + 8))(v26, v53);
  LOBYTE(v43) = sub_10007C760();
  uint64_t v147 = type metadata accessor for QuickNoteContent(0);
  uint64_t v55 = v51 + *(int *)(v147 + 24);
  uint64_t v56 = *(void *)v55;
  LOBYTE(v49) = *(unsigned char *)(v55 + 8);
  sub_10000A9EC(*(void *)v55, v49);
  sub_10003EFB4(v56, v49);
  sub_10000AC28(v56, v49);
  sub_10007C340();
  uint64_t v58 = v57;
  uint64_t v60 = v59;
  uint64_t v62 = v61;
  uint64_t v64 = v63;
  uint64_t v65 = v135;
  uint64_t v66 = v137;
  (*(void (**)(char *, char *, uint64_t))(v135 + 16))(v29, v52, v137);
  v67 = &v29[*(int *)(v133 + 44)];
  char *v67 = v43;
  *((void *)v67 + 1) = v58;
  *((void *)v67 + 2) = v60;
  *((void *)v67 + 3) = v62;
  *((void *)v67 + 4) = v64;
  v67[40] = 0;
  (*(void (**)(char *, uint64_t))(v65 + 8))(v52, v66);
  LOBYTE(v43) = sub_10007C740();
  uint64_t v68 = *(void *)v55;
  LOBYTE(v65) = *(unsigned char *)(v55 + 8);
  sub_10000A9EC(*(void *)v55, v65);
  sub_10003EFB4(v68, v65);
  sub_10000AC28(v68, v65);
  sub_10007C340();
  uint64_t v70 = v69;
  uint64_t v72 = v71;
  uint64_t v74 = v73;
  uint64_t v76 = v75;
  uint64_t v77 = v138;
  sub_10000CB64((uint64_t)v29, v138, &qword_1000A3558);
  uint64_t v78 = v77 + *(int *)(v139 + 44);
  *(unsigned char *)uint64_t v78 = v43;
  *(void *)(v78 + 8) = v70;
  *(void *)(v78 + 16) = v72;
  *(void *)(v78 + 24) = v74;
  *(void *)(v78 + 32) = v76;
  *(unsigned char *)(v78 + 40) = 0;
  uint64_t v79 = (uint64_t)v29;
  uint64_t v80 = v51;
  sub_10000CBC8(v79, &qword_1000A3558);
  LOBYTE(v43) = sub_10007C770();
  uint64_t v81 = *(void *)v55;
  LOBYTE(v65) = *(unsigned char *)(v55 + 8);
  sub_10000A9EC(*(void *)v55, v65);
  sub_10003EFB4(v81, v65);
  sub_10000AC28(v81, v65);
  sub_10007C340();
  uint64_t v83 = v82;
  uint64_t v85 = v84;
  uint64_t v87 = v86;
  uint64_t v89 = v88;
  uint64_t v90 = v141;
  sub_10000CB64(v77, v141, &qword_1000A3548);
  uint64_t v91 = v143;
  uint64_t v92 = v90 + *(int *)(v143 + 36);
  *(unsigned char *)uint64_t v92 = v43;
  *(void *)(v92 + 8) = v83;
  *(void *)(v92 + 16) = v85;
  *(void *)(v92 + 24) = v87;
  *(void *)(v92 + 32) = v89;
  *(unsigned char *)(v92 + 40) = 0;
  sub_10000CBC8(v77, &qword_1000A3548);
  v93 = v152;
  sub_10007C690();
  uint64_t v94 = sub_10000C7D4(&qword_1000A3538, &qword_1000A3530, (void (*)(void))sub_10000C7AC);
  v95 = v142;
  sub_10007C9B0();
  (*(void (**)(char *, uint64_t))(v155 + 8))(v93, v156);
  sub_10000CBC8(v90, &qword_1000A3530);
  sub_100073354();
  uint64_t v167 = v91;
  unint64_t v168 = v94;
  swift_getOpaqueTypeConformance2();
  uint64_t v96 = (uint64_t)v144;
  uint64_t v97 = v148;
  sub_10007C950();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v150 + 8))(v95, v97);
  swift_bridgeObjectRetain();
  uint64_t v98 = (uint64_t)v146;
  uint64_t v99 = v149;
  sub_10007C3E0();
  swift_bridgeObjectRelease();
  sub_10000CBC8(v96, &qword_1000A3520);
  unint64_t v100 = sub_10000C6A0();
  uint64_t v101 = v99;
  sub_10007C980();
  sub_10000CBC8(v98, &qword_1000A3520);
  uint64_t v102 = type metadata accessor for Note();
  sub_10000CB64(v80 + *(int *)(v102 + 44), v54, &qword_1000A3270);
  uint64_t v103 = sub_10007C110();
  uint64_t v104 = *(void *)(v103 - 8);
  uint64_t v105 = v54;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v104 + 48))(v54, 1, v103) == 1)
  {
    v106 = self;
    id v107 = [self globalVirtualSystemPaperFolder];
    id v108 = [v106 appURLForVirtualSmartFolder:v107];

    if (v108)
    {
      uint64_t v109 = (uint64_t)v127;
      sub_10007C0E0();

      uint64_t v110 = 0;
      uint64_t v111 = v162;
    }
    else
    {
      uint64_t v110 = 1;
      uint64_t v111 = v162;
      uint64_t v109 = (uint64_t)v127;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v104 + 56))(v109, v110, 1, v103);
    uint64_t v112 = v160;
    sub_10000CB00(v109, v160, &qword_1000A3270);
    sub_10000CBC8(v105, &qword_1000A3270);
  }
  else
  {
    uint64_t v112 = v160;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v104 + 32))(v160, v54, v103);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v104 + 56))(v112, 0, 1, v103);
    uint64_t v111 = v162;
  }
  uint64_t v167 = v101;
  unint64_t v168 = v100;
  swift_getOpaqueTypeConformance2();
  v113 = v157;
  uint64_t v114 = v154;
  v115 = v165;
  sub_10007C910();
  sub_10000CBC8(v112, &qword_1000A3270);
  (*(void (**)(char *, uint64_t))(v153 + 8))(v115, v114);
  uint64_t v116 = v161;
  if (*(unsigned char *)(v80 + *(int *)(v102 + 64)) == 1)
  {
    uint64_t v117 = v164;
    (*(void (**)(uint64_t, void, uint64_t))(v111 + 104))(v161, enum case for ColorScheme.light(_:), v164);
  }
  else
  {
    sub_10003EF78(v161);
    uint64_t v117 = v164;
  }
  uint64_t v118 = swift_getKeyPath();
  uint64_t v119 = sub_100008FA4(&qword_1000A3508);
  uint64_t v120 = v163;
  v121 = (uint64_t *)(v163 + *(int *)(v119 + 36));
  uint64_t v122 = sub_100008FA4(&qword_1000A35A0);
  (*(void (**)(char *, uint64_t, uint64_t))(v111 + 16))((char *)v121 + *(int *)(v122 + 28), v116, v117);
  uint64_t *v121 = v118;
  uint64_t v124 = v158;
  uint64_t v123 = v159;
  (*(void (**)(uint64_t, char *, uint64_t))(v158 + 16))(v120, v113, v159);
  (*(void (**)(uint64_t, uint64_t))(v111 + 8))(v116, v117);
  return (*(uint64_t (**)(char *, uint64_t))(v124 + 8))(v113, v123);
}

uint64_t sub_1000078B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v49 = a2;
  uint64_t v3 = sub_100008FA4(&qword_1000A35E8);
  __chkstk_darwin(v3 - 8);
  uint64_t v48 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10007CAF0();
  uint64_t v44 = *(void *)(v5 - 8);
  uint64_t v45 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10007CD30();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100008FA4(&qword_1000A35F0);
  uint64_t v46 = *(void *)(v12 - 8);
  uint64_t v47 = v12;
  __chkstk_darwin(v12);
  uint64_t v43 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100008FA4(&qword_1000A35F8);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v42 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v42 - v21;
  type metadata accessor for QuickNoteContent(0);
  uint64_t v23 = a1;
  sub_10003F1B8((uint64_t)v11);
  int v24 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v11, v8);
  LODWORD(a1) = enum case for WidgetFamily.systemSmall(_:);
  uint64_t v25 = type metadata accessor for Note();
  if (v24 != a1)
  {
    uint64_t v37 = *(void *)(v23 + *(int *)(v25 + 56));
    uint64_t v38 = *(void (**)(char *, uint64_t))(v9 + 8);
    swift_retain();
    v38(v11, v8);
    uint64_t v27 = v49;
    if (v37) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v39 = sub_100008FA4(&qword_1000A3600);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v20, 1, 1, v39);
    goto LABEL_6;
  }
  uint64_t v26 = *(void *)(v23 + *(int *)(v25 + 60));
  swift_retain();
  uint64_t v27 = v49;
  if (!v26) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v29 = v44;
  uint64_t v28 = v45;
  (*(void (**)(char *, void, uint64_t))(v44 + 104))(v7, enum case for Image.ResizingMode.stretch(_:), v45);
  sub_10007CB40();
  swift_release();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v28);
  uint64_t v30 = (uint64_t)v48;
  sub_10007CD10();
  uint64_t v31 = sub_10007CD20();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 0, 1, v31);
  uint64_t v32 = v43;
  sub_10007CB30();
  swift_release();
  sub_10000CBC8(v30, &qword_1000A35E8);
  uint64_t v34 = v46;
  uint64_t v33 = v47;
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v20, v32, v47);
  uint64_t v35 = sub_100008FA4(&qword_1000A3600);
  uint64_t v36 = &v20[*(int *)(v35 + 36)];
  *(void *)uint64_t v36 = 0;
  *((_WORD *)v36 + 4) = 257;
  (*(void (**)(char *, uint64_t))(v34 + 8))(v32, v33);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v20, 0, 1, v35);
LABEL_6:
  sub_10000CB00((uint64_t)v20, (uint64_t)v22, &qword_1000A35F8);
  sub_10000CB64((uint64_t)v22, (uint64_t)v17, &qword_1000A35F8);
  sub_10000CB64((uint64_t)v17, v27, &qword_1000A35F8);
  uint64_t v40 = v27 + *(int *)(sub_100008FA4(&qword_1000A3608) + 48);
  *(void *)uint64_t v40 = 0;
  *(unsigned char *)(v40 + 8) = 0;
  sub_10000CBC8((uint64_t)v22, &qword_1000A35F8);
  return sub_10000CBC8((uint64_t)v17, &qword_1000A35F8);
}

uint64_t sub_100007DFC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  if (*(unsigned char *)(a1 + *(int *)(type metadata accessor for Note() + 64)) == 1)
  {
    uint64_t result = sub_10007CA50();
  }
  else
  {
    if (qword_1000A3220 != -1) {
      swift_once();
    }
    uint64_t result = swift_retain();
  }
  *a2 = result;
  return result;
}

uint64_t sub_100007E84@<X0>(uint64_t a1@<X8>)
{
  uint64_t v73 = a1;
  uint64_t v1 = sub_100008FA4(&qword_1000A3270);
  __chkstk_darwin(v1 - 8);
  uint64_t v72 = (char *)&v54 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10007C6B0();
  uint64_t v65 = *(void *)(v3 - 8);
  uint64_t v66 = v3;
  __chkstk_darwin(v3);
  uint64_t v64 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_10007C700();
  uint64_t v60 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100008FA4(&qword_1000A3430);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100008FA4(&qword_1000A3438);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100008FA4(&qword_1000A3440);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_100008FA4(&qword_1000A3448);
  uint64_t v58 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_100008FA4(&qword_1000A3450);
  uint64_t v63 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v55 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_100008FA4(&qword_1000A3458);
  __chkstk_darwin(v59);
  uint64_t v20 = (char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100008FA4(&qword_1000A3460);
  uint64_t v70 = *(void *)(v21 - 8);
  uint64_t v71 = v21;
  __chkstk_darwin(v21);
  uint64_t v57 = (char *)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100008FA4(&qword_1000A3468);
  uint64_t v68 = *(void *)(v23 - 8);
  uint64_t v69 = v23;
  __chkstk_darwin(v23);
  v67 = (char *)&v54 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v9 = sub_10007C600();
  *((void *)v9 + 1) = 0x4014000000000000;
  v9[16] = 0;
  uint64_t v25 = sub_100008FA4(&qword_1000A3470);
  sub_1000087C8((uint64_t *)&v9[*(int *)(v25 + 44)]);
  uint64_t v26 = sub_10007CBF0();
  sub_100070610(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v12, 0.0, 1, INFINITY, 0, v26, v27);
  sub_10000CBC8((uint64_t)v9, &qword_1000A3430);
  LOBYTE(v9) = sub_10007C730();
  sub_10000CB64((uint64_t)v12, (uint64_t)v15, &qword_1000A3438);
  uint64_t v28 = &v15[*(int *)(v13 + 36)];
  *uint64_t v28 = (char)v9;
  *(_OWORD *)(v28 + 8) = 0u;
  *(_OWORD *)(v28 + 24) = 0u;
  v28[40] = 1;
  sub_10000CBC8((uint64_t)v12, &qword_1000A3438);
  sub_10007C6F0();
  sub_10007CBF0();
  unint64_t v29 = sub_10000C0C0();
  sub_10007C9A0();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v6, v62);
  sub_10000CBC8((uint64_t)v15, &qword_1000A3440);
  uint64_t v30 = v64;
  sub_10007C690();
  uint64_t v74 = v13;
  uint64_t v75 = &type metadata for Color;
  unint64_t v76 = v29;
  uint64_t v77 = &protocol witness table for Color;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v32 = v55;
  uint64_t v33 = v56;
  sub_10007C9B0();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v30, v66);
  uint64_t v34 = v33;
  (*(void (**)(char *, uint64_t))(v58 + 8))(v17, v33);
  sub_10007C5A0();
  uint64_t v35 = sub_10007C8A0();
  uint64_t v37 = v36;
  char v39 = v38 & 1;
  uint64_t v74 = v34;
  uint64_t v75 = (void *)OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v40 = v61;
  sub_10007C950();
  uint64_t v41 = v37;
  uint64_t v42 = v59;
  sub_10000A610(v35, v41, v39);
  uint64_t v43 = v57;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v32, v40);
  unint64_t v44 = sub_10000C1F8();
  sub_10007C980();
  sub_10000CBC8((uint64_t)v20, &qword_1000A3458);
  uint64_t v45 = self;
  id v46 = [self globalVirtualSystemPaperFolder];
  id v47 = [v45 appURLForVirtualSmartFolder:v46];

  if (v47)
  {
    uint64_t v48 = (uint64_t)v72;
    sub_10007C0E0();

    uint64_t v49 = sub_10007C110();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v48, 0, 1, v49);
  }
  else
  {
    uint64_t v50 = sub_10007C110();
    uint64_t v48 = (uint64_t)v72;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v72, 1, 1, v50);
  }
  uint64_t v74 = v42;
  uint64_t v75 = (void *)v44;
  swift_getOpaqueTypeConformance2();
  uint64_t v51 = v67;
  uint64_t v52 = v71;
  sub_10007C910();
  sub_10000CBC8(v48, &qword_1000A3270);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v43, v52);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v68 + 32))(v73, v51, v69);
}

uint64_t sub_1000087C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v48 = a1;
  uint64_t v1 = sub_100008FA4(&qword_1000A34A0);
  uint64_t v46 = *(void *)(v1 - 8);
  uint64_t v47 = v1;
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_100008FA4(&qword_1000A34A8) - 8;
  uint64_t v4 = __chkstk_darwin(v44);
  uint64_t v45 = (uint64_t)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  char v39 = (char *)v36 - v7;
  __chkstk_darwin(v6);
  uint64_t v42 = (uint64_t)v36 - v8;
  uint64_t v43 = sub_10007CB00();
  uint64_t v41 = sub_10007C7A0();
  uint64_t KeyPath = swift_getKeyPath();
  id v9 = [self ICTintColor];
  uint64_t v38 = sub_10007C9F0();
  int v37 = sub_10007C680();
  sub_10007C5A0();
  uint64_t v10 = sub_10007C8A0();
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  v36[1] = v13;
  char v16 = v15 & 1;
  uint64_t v17 = swift_getKeyPath();
  uint64_t v18 = sub_10007C7B0();
  uint64_t v19 = swift_getKeyPath();
  uint64_t v49 = v10;
  uint64_t v50 = v12;
  char v51 = v16;
  uint64_t v52 = v14;
  uint64_t v53 = v17;
  char v54 = 1;
  uint64_t v55 = v19;
  uint64_t v56 = v18;
  sub_10007C7F0();
  sub_100008FA4(&qword_1000A34B0);
  sub_10000C448();
  sub_10007C940();
  sub_10000A610(v10, v12, v16);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v20 = sub_10007CA90();
  uint64_t v21 = swift_getKeyPath();
  uint64_t v23 = v46;
  uint64_t v22 = v47;
  uint64_t v24 = v39;
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v39, v3, v47);
  uint64_t v25 = (uint64_t *)&v24[*(int *)(v44 + 44)];
  *uint64_t v25 = v21;
  v25[1] = v20;
  (*(void (**)(char *, uint64_t))(v23 + 8))(v3, v22);
  uint64_t v26 = (uint64_t)v24;
  uint64_t v27 = v42;
  sub_10000CB00(v26, v42, &qword_1000A34A8);
  uint64_t v28 = v45;
  sub_10000CB64(v27, v45, &qword_1000A34A8);
  unint64_t v29 = v48;
  uint64_t v31 = KeyPath;
  uint64_t v30 = v41;
  *uint64_t v48 = v43;
  v29[1] = v31;
  uint64_t v32 = v38;
  v29[2] = v30;
  v29[3] = v32;
  *((_DWORD *)v29 + 8) = v37;
  uint64_t v33 = v29;
  uint64_t v34 = sub_100008FA4(&qword_1000A34F0);
  sub_10000CB64(v28, (uint64_t)v33 + *(int *)(v34 + 48), &qword_1000A34A8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10000CBC8(v27, &qword_1000A34A8);
  sub_10000CBC8(v28, &qword_1000A34A8);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_100008BD0@<X0>(void *a1@<X8>)
{
  if (qword_1000A3220 != -1) {
    swift_once();
  }
  *a1 = qword_1000B2458;

  return swift_retain();
}

void type metadata accessor for ICPaperStyleType()
{
  if (!qword_1000A3260)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1000A3260);
    }
  }
}

uint64_t *sub_100008C98(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)(sub_100008FA4(&qword_1000A3268) - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    uint64_t v7 = (int *)type metadata accessor for Note();
    uint64_t v8 = *((void *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v26 = v8;
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      uint64_t v11 = a2[3];
      a1[2] = a2[2];
      a1[3] = v11;
      uint64_t v12 = a2[5];
      a1[4] = a2[4];
      a1[5] = v12;
      uint64_t v13 = a2[7];
      a1[6] = a2[6];
      a1[7] = v13;
      uint64_t v14 = a2[9];
      a1[8] = a2[8];
      a1[9] = v14;
      *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
      uint64_t v15 = a2[12];
      a1[11] = a2[11];
      a1[12] = v15;
      uint64_t v16 = v7[11];
      __dst = (char *)a1 + v16;
      uint64_t v25 = (char *)a2 + v16;
      uint64_t v17 = sub_10007C110();
      uint64_t v22 = *(void *)(v17 - 8);
      uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
      uint64_t v18 = v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v24(v25, 1, v18))
      {
        uint64_t v19 = sub_100008FA4(&qword_1000A3270);
        memcpy(__dst, v25, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 16))(__dst, v25, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v18);
      }
      *(uint64_t *)((char *)a1 + v7[12]) = *(uint64_t *)((char *)a2 + v7[12]);
      *(uint64_t *)((char *)a1 + v7[13]) = *(uint64_t *)((char *)a2 + v7[13]);
      *(uint64_t *)((char *)a1 + v7[14]) = *(uint64_t *)((char *)a2 + v7[14]);
      *(uint64_t *)((char *)a1 + v7[15]) = *(uint64_t *)((char *)a2 + v7[15]);
      *((unsigned char *)a1 + v7[16]) = *((unsigned char *)a2 + v7[16]);
      uint64_t v20 = *(void (**)(uint64_t *, void, uint64_t, int *))(v26 + 56);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      v20(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t sub_100008FA4(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_100008FE8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Note();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 2, v2);
  if (!result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = a1 + *(int *)(v2 + 44);
    uint64_t v5 = sub_10007C110();
    uint64_t v6 = *(void *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

void *sub_100009158(void *a1, void *a2)
{
  uint64_t v4 = (int *)type metadata accessor for Note();
  uint64_t v5 = *((void *)v4 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v5 + 48))(a2, 2, v4))
  {
    uint64_t v6 = sub_100008FA4(&qword_1000A3268);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    uint64_t v23 = v5;
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v10 = a2[7];
    a1[6] = a2[6];
    a1[7] = v10;
    uint64_t v11 = a2[9];
    a1[8] = a2[8];
    a1[9] = v11;
    *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
    uint64_t v12 = a2[12];
    a1[11] = a2[11];
    a1[12] = v12;
    uint64_t v13 = v4[11];
    uint64_t v21 = (char *)a2 + v13;
    __dst = (char *)a1 + v13;
    uint64_t v14 = sub_10007C110();
    uint64_t v19 = *(void *)(v14 - 8);
    uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
    uint64_t v15 = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v20(v21, 1, v15))
    {
      uint64_t v16 = sub_100008FA4(&qword_1000A3270);
      memcpy(__dst, v21, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(__dst, v21, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v15);
    }
    *(void *)((char *)a1 + v4[12]) = *(void *)((char *)a2 + v4[12]);
    *(void *)((char *)a1 + v4[13]) = *(void *)((char *)a2 + v4[13]);
    *(void *)((char *)a1 + v4[14]) = *(void *)((char *)a2 + v4[14]);
    *(void *)((char *)a1 + v4[15]) = *(void *)((char *)a2 + v4[15]);
    *((unsigned char *)a1 + v4[16]) = *((unsigned char *)a2 + v4[16]);
    uint64_t v17 = *(void (**)(void *, void, uint64_t, int *))(v23 + 56);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    v17(a1, 0, 2, v4);
  }
  return a1;
}

uint64_t sub_100009420(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for Note();
  uint64_t v5 = *((void *)v4 - 1);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v5 + 48);
  int v7 = v6(a1, 2, v4);
  int v8 = v6(a2, 2, v4);
  if (!v7)
  {
    if (v8)
    {
      sub_10000A5B0(a1, (uint64_t (*)(void))type metadata accessor for Note);
      goto LABEL_7;
    }
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v14 = v4[11];
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (void *)(a2 + v14);
    uint64_t v17 = sub_10007C110();
    uint64_t v18 = *(void *)(v17 - 8);
    uint64_t v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 48);
    int v20 = v19(v15, 1, v17);
    int v21 = v19(v16, 1, v17);
    if (v20)
    {
      if (!v21)
      {
        (*(void (**)(void *, void *, uint64_t))(v18 + 16))(v15, v16, v17);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
LABEL_16:
        *(void *)(a1 + v4[12]) = *(void *)(a2 + v4[12]);
        swift_retain();
        swift_release();
        *(void *)(a1 + v4[13]) = *(void *)(a2 + v4[13]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)(a1 + v4[14]) = *(void *)(a2 + v4[14]);
        swift_retain();
        swift_release();
        *(void *)(a1 + v4[15]) = *(void *)(a2 + v4[15]);
        swift_retain();
        swift_release();
        *(unsigned char *)(a1 + v4[16]) = *(unsigned char *)(a2 + v4[16]);
        return a1;
      }
    }
    else
    {
      if (!v21)
      {
        (*(void (**)(void *, void *, uint64_t))(v18 + 24))(v15, v16, v17);
        goto LABEL_16;
      }
      (*(void (**)(void *, uint64_t))(v18 + 8))(v15, v17);
    }
    uint64_t v23 = sub_100008FA4(&qword_1000A3270);
    memcpy(v15, v16, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_16;
  }
  if (v8)
  {
LABEL_7:
    uint64_t v13 = sub_100008FA4(&qword_1000A3268);
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v13 - 8) + 64));
    return a1;
  }
  uint64_t v29 = v5;
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  uint64_t v9 = v4[11];
  uint64_t v27 = (const void *)(a2 + v9);
  __dst = (void *)(a1 + v9);
  uint64_t v10 = sub_10007C110();
  uint64_t v25 = *(void *)(v10 - 8);
  uint64_t v26 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48);
  uint64_t v11 = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v26(v27, 1, v11))
  {
    uint64_t v12 = sub_100008FA4(&qword_1000A3270);
    memcpy(__dst, v27, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v25 + 16))(__dst, v27, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v11);
  }
  *(void *)(a1 + v4[12]) = *(void *)(a2 + v4[12]);
  *(void *)(a1 + v4[13]) = *(void *)(a2 + v4[13]);
  *(void *)(a1 + v4[14]) = *(void *)(a2 + v4[14]);
  *(void *)(a1 + v4[15]) = *(void *)(a2 + v4[15]);
  *(unsigned char *)(a1 + v4[16]) = *(unsigned char *)(a2 + v4[16]);
  uint64_t v22 = *(void (**)(uint64_t, void, uint64_t, int *))(v29 + 56);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v22(a1, 0, 2, v4);
  return a1;
}

_OWORD *sub_1000099D4(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4 = (int *)type metadata accessor for Note();
  uint64_t v5 = *((void *)v4 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v5 + 48))(a2, 2, v4))
  {
    uint64_t v6 = sub_100008FA4(&qword_1000A3268);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    long long v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    long long v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    a1[4] = a2[4];
    *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
    *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
    uint64_t v9 = v4[11];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_10007C110();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = sub_100008FA4(&qword_1000A3270);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    *(void *)((char *)a1 + v4[12]) = *(void *)((char *)a2 + v4[12]);
    *(void *)((char *)a1 + v4[13]) = *(void *)((char *)a2 + v4[13]);
    *(void *)((char *)a1 + v4[14]) = *(void *)((char *)a2 + v4[14]);
    *(void *)((char *)a1 + v4[15]) = *(void *)((char *)a2 + v4[15]);
    *((unsigned char *)a1 + v4[16]) = *((unsigned char *)a2 + v4[16]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v5 + 56))(a1, 0, 2, v4);
  }
  return a1;
}

uint64_t sub_100009C10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for Note();
  uint64_t v5 = *((void *)v4 - 1);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v5 + 48);
  int v7 = v6(a1, 2, v4);
  int v8 = v6(a2, 2, v4);
  if (!v7)
  {
    if (v8)
    {
      sub_10000A5B0(a1, (uint64_t (*)(void))type metadata accessor for Note);
      goto LABEL_7;
    }
    uint64_t v18 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v18;
    swift_bridgeObjectRelease();
    uint64_t v19 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v19;
    swift_bridgeObjectRelease();
    uint64_t v20 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v20;
    swift_bridgeObjectRelease();
    uint64_t v21 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v21;
    swift_bridgeObjectRelease();
    uint64_t v22 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = v22;
    swift_bridgeObjectRelease();
    *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
    uint64_t v23 = *(void *)(a2 + 96);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = v23;
    swift_bridgeObjectRelease();
    uint64_t v24 = v4[11];
    uint64_t v25 = (void *)(a1 + v24);
    uint64_t v26 = (void *)(a2 + v24);
    uint64_t v27 = sub_10007C110();
    uint64_t v28 = *(void *)(v27 - 8);
    uint64_t v29 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v28 + 48);
    int v30 = v29(v25, 1, v27);
    int v31 = v29(v26, 1, v27);
    if (v30)
    {
      if (!v31)
      {
        (*(void (**)(void *, void *, uint64_t))(v28 + 32))(v25, v26, v27);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
LABEL_16:
        *(void *)(a1 + v4[12]) = *(void *)(a2 + v4[12]);
        swift_release();
        *(void *)(a1 + v4[13]) = *(void *)(a2 + v4[13]);
        swift_bridgeObjectRelease();
        *(void *)(a1 + v4[14]) = *(void *)(a2 + v4[14]);
        swift_release();
        *(void *)(a1 + v4[15]) = *(void *)(a2 + v4[15]);
        swift_release();
        *(unsigned char *)(a1 + v4[16]) = *(unsigned char *)(a2 + v4[16]);
        return a1;
      }
    }
    else
    {
      if (!v31)
      {
        (*(void (**)(void *, void *, uint64_t))(v28 + 40))(v25, v26, v27);
        goto LABEL_16;
      }
      (*(void (**)(void *, uint64_t))(v28 + 8))(v25, v27);
    }
    uint64_t v32 = sub_100008FA4(&qword_1000A3270);
    memcpy(v25, v26, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_16;
  }
  if (v8)
  {
LABEL_7:
    uint64_t v17 = sub_100008FA4(&qword_1000A3268);
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  long long v10 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v10;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  uint64_t v11 = v4[11];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = sub_10007C110();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_100008FA4(&qword_1000A3270);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  *(void *)(a1 + v4[12]) = *(void *)(a2 + v4[12]);
  *(void *)(a1 + v4[13]) = *(void *)(a2 + v4[13]);
  *(void *)(a1 + v4[14]) = *(void *)(a2 + v4[14]);
  *(void *)(a1 + v4[15]) = *(void *)(a2 + v4[15]);
  *(unsigned char *)(a1 + v4[16]) = *(unsigned char *)(a2 + v4[16]);
  (*(void (**)(uint64_t, void, uint64_t, int *))(v5 + 56))(a1, 0, 2, v4);
  return a1;
}

uint64_t sub_10000A090(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10000A0A4);
}

uint64_t sub_10000A0A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100008FA4(&qword_1000A3268);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_10000A114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10000A128);
}

uint64_t sub_10000A128(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100008FA4(&qword_1000A3268);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for QuickNoteWidgetView(uint64_t a1)
{
  return sub_10000A2B4(a1, (uint64_t *)&unk_1000A32D0);
}

void sub_10000A1BC()
{
  sub_10000BF70(319, (unint64_t *)&qword_1000A32E0, (uint64_t (*)(uint64_t))type metadata accessor for Note, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for ObjectStates);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_10000A278()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for QuickNoteContent(uint64_t a1)
{
  return sub_10000A2B4(a1, (uint64_t *)&unk_1000A33D0);
}

uint64_t sub_10000A2B4(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_10000A2EC()
{
  unint64_t result = qword_1000A3328;
  if (!qword_1000A3328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3328);
  }
  return result;
}

uint64_t sub_10000A340(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

unint64_t sub_10000A390()
{
  unint64_t result = qword_1000A3338;
  if (!qword_1000A3338)
  {
    sub_10000A43C(&qword_1000A3320);
    sub_10000A484();
    sub_10000C328(&qword_1000A3348, (void (*)(uint64_t))type metadata accessor for QuickNoteContent);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3338);
  }
  return result;
}

uint64_t sub_10000A43C(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_10000A484()
{
  unint64_t result = qword_1000A3340;
  if (!qword_1000A3340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3340);
  }
  return result;
}

uint64_t sub_10000A4E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10000A548(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10000A5B0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10000A610(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10000A620(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

void *sub_10000A630(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v6;
    uint64_t v7 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v7;
    uint64_t v8 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v8;
    uint64_t v9 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v9;
    uint64_t v10 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v10;
    *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
    uint64_t v11 = a2[12];
    *(void *)(a1 + 88) = a2[11];
    *(void *)(a1 + 96) = v11;
    uint64_t v12 = (int *)type metadata accessor for Note();
    uint64_t v13 = v12[11];
    __dst = (char *)v4 + v13;
    uint64_t v33 = (char *)a2 + v13;
    uint64_t v14 = sub_10007C110();
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v32(v33, 1, v14))
    {
      uint64_t v16 = sub_100008FA4(&qword_1000A3270);
      memcpy(__dst, v33, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(__dst, v33, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
    }
    *(void *)((char *)v4 + v12[12]) = *(uint64_t *)((char *)a2 + v12[12]);
    *(void *)((char *)v4 + v12[13]) = *(uint64_t *)((char *)a2 + v12[13]);
    *(void *)((char *)v4 + v12[14]) = *(uint64_t *)((char *)a2 + v12[14]);
    *(void *)((char *)v4 + v12[15]) = *(uint64_t *)((char *)a2 + v12[15]);
    *((unsigned char *)v4 + v12[16]) = *((unsigned char *)a2 + v12[16]);
    uint64_t v18 = a3[5];
    uint64_t v19 = (void *)((char *)v4 + v18);
    uint64_t v20 = (uint64_t *)((char *)a2 + v18);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_100008FA4(&qword_1000A3358);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = sub_10007C360();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      *uint64_t v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v22 = a3[6];
    uint64_t v23 = (char *)v4 + v22;
    uint64_t v24 = (uint64_t)a2 + v22;
    uint64_t v25 = *(void *)v24;
    char v26 = *(unsigned char *)(v24 + 8);
    sub_10000A9EC(*(void *)v24, v26);
    *(void *)uint64_t v23 = v25;
    v23[8] = v26;
    uint64_t v27 = a3[7];
    uint64_t v28 = (void *)((char *)v4 + v27);
    uint64_t v29 = (uint64_t *)((char *)a2 + v27);
    sub_100008FA4(&qword_1000A3360);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v30 = sub_10007CD30();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
    }
    else
    {
      *uint64_t v28 = *v29;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_10000A9EC(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_10000A9F8(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(type metadata accessor for Note() + 44);
  uint64_t v5 = sub_10007C110();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v7 = a1 + a2[5];
  sub_100008FA4(&qword_1000A3358);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_10007C360();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  sub_10000AC28(*(void *)(a1 + a2[6]), *(unsigned char *)(a1 + a2[6] + 8));
  uint64_t v9 = a1 + a2[7];
  sub_100008FA4(&qword_1000A3360);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_10007CD30();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
    return v11(v9, v10);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_10000AC28(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_10000AC34(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v10 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v10;
  uint64_t v11 = (int *)type metadata accessor for Note();
  uint64_t v12 = v11[11];
  __dst = (void *)(a1 + v12);
  int v31 = (const void *)(a2 + v12);
  uint64_t v13 = sub_10007C110();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v30 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v30(v31, 1, v13))
  {
    uint64_t v15 = sub_100008FA4(&qword_1000A3270);
    memcpy(__dst, v31, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(__dst, v31, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
  }
  *(void *)(a1 + v11[12]) = *(void *)(a2 + v11[12]);
  *(void *)(a1 + v11[13]) = *(void *)(a2 + v11[13]);
  *(void *)(a1 + v11[14]) = *(void *)(a2 + v11[14]);
  *(void *)(a1 + v11[15]) = *(void *)(a2 + v11[15]);
  *(unsigned char *)(a1 + v11[16]) = *(unsigned char *)(a2 + v11[16]);
  uint64_t v16 = a3[5];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_100008FA4(&qword_1000A3358);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = sub_10007C360();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  else
  {
    *uint64_t v17 = *v18;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = a3[6];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = *(void *)v22;
  char v24 = *(unsigned char *)(v22 + 8);
  sub_10000A9EC(*(void *)v22, v24);
  *(void *)uint64_t v21 = v23;
  *(unsigned char *)(v21 + 8) = v24;
  uint64_t v25 = a3[7];
  char v26 = (void *)(a1 + v25);
  uint64_t v27 = (void *)(a2 + v25);
  sub_100008FA4(&qword_1000A3360);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v28 = sub_10007CD30();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
  }
  else
  {
    *char v26 = *v27;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10000AF98(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = (int *)type metadata accessor for Note();
  uint64_t v6 = v5[11];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_10007C110();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_100008FA4(&qword_1000A3270);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  *(void *)(a1 + v5[12]) = *(void *)(a2 + v5[12]);
  swift_retain();
  swift_release();
  *(void *)(a1 + v5[13]) = *(void *)(a2 + v5[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v5[14]) = *(void *)(a2 + v5[14]);
  swift_retain();
  swift_release();
  *(void *)(a1 + v5[15]) = *(void *)(a2 + v5[15]);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + v5[16]) = *(unsigned char *)(a2 + v5[16]);
  if (a1 != a2)
  {
    uint64_t v15 = a3[5];
    uint64_t v16 = (void *)(a1 + v15);
    uint64_t v17 = (void *)(a2 + v15);
    sub_10000CBC8(a1 + v15, &qword_1000A3358);
    sub_100008FA4(&qword_1000A3358);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = sub_10007C360();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else
    {
      void *v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v19 = a3[6];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = *(void *)v21;
  char v23 = *(unsigned char *)(v21 + 8);
  sub_10000A9EC(*(void *)v21, v23);
  uint64_t v24 = *(void *)v20;
  char v25 = *(unsigned char *)(v20 + 8);
  *(void *)uint64_t v20 = v22;
  *(unsigned char *)(v20 + 8) = v23;
  sub_10000AC28(v24, v25);
  if (a1 != a2)
  {
    uint64_t v26 = a3[7];
    uint64_t v27 = (void *)(a1 + v26);
    uint64_t v28 = (void *)(a2 + v26);
    sub_10000CBC8(a1 + v26, &qword_1000A3360);
    sub_100008FA4(&qword_1000A3360);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v29 = sub_10007CD30();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
    }
    else
    {
      *uint64_t v27 = *v28;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10000B3F8(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  uint64_t v8 = (int *)type metadata accessor for Note();
  uint64_t v9 = v8[11];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  uint64_t v12 = sub_10007C110();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = sub_100008FA4(&qword_1000A3270);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  *(void *)(a1 + v8[12]) = *(void *)(a2 + v8[12]);
  *(void *)(a1 + v8[13]) = *(void *)(a2 + v8[13]);
  *(void *)(a1 + v8[14]) = *(void *)(a2 + v8[14]);
  *(void *)(a1 + v8[15]) = *(void *)(a2 + v8[15]);
  *(unsigned char *)(a1 + v8[16]) = *(unsigned char *)(a2 + v8[16]);
  uint64_t v15 = a3[5];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  uint64_t v18 = sub_100008FA4(&qword_1000A3358);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = sub_10007C360();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v19 - 8) + 32))(v16, v17, v19);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  uint64_t v20 = a3[6];
  uint64_t v21 = a3[7];
  uint64_t v22 = a1 + v20;
  uint64_t v23 = a2 + v20;
  *(void *)uint64_t v22 = *(void *)v23;
  *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
  uint64_t v24 = (void *)(a1 + v21);
  char v25 = (const void *)(a2 + v21);
  uint64_t v26 = sub_100008FA4(&qword_1000A3360);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v27 = sub_10007CD30();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v27 - 8) + 32))(v24, v25, v27);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10000B6DC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v10 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = (int *)type metadata accessor for Note();
  uint64_t v12 = v11[11];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = sub_10007C110();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 32))(v13, v14, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
LABEL_6:
    uint64_t v20 = sub_100008FA4(&qword_1000A3270);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 40))(v13, v14, v15);
LABEL_7:
  *(void *)(a1 + v11[12]) = *(void *)(a2 + v11[12]);
  swift_release();
  *(void *)(a1 + v11[13]) = *(void *)(a2 + v11[13]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + v11[14]) = *(void *)(a2 + v11[14]);
  swift_release();
  *(void *)(a1 + v11[15]) = *(void *)(a2 + v11[15]);
  swift_release();
  *(unsigned char *)(a1 + v11[16]) = *(unsigned char *)(a2 + v11[16]);
  if (a1 != a2)
  {
    uint64_t v21 = a3[5];
    uint64_t v22 = (void *)(a1 + v21);
    uint64_t v23 = (const void *)(a2 + v21);
    sub_10000CBC8(a1 + v21, &qword_1000A3358);
    uint64_t v24 = sub_100008FA4(&qword_1000A3358);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v25 = sub_10007C360();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v25 - 8) + 32))(v22, v23, v25);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
  }
  uint64_t v26 = a3[6];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = (uint64_t *)(a2 + v26);
  uint64_t v29 = *v28;
  LOBYTE(v28) = *((unsigned char *)v28 + 8);
  uint64_t v30 = *(void *)v27;
  char v31 = *(unsigned char *)(v27 + 8);
  *(void *)uint64_t v27 = v29;
  *(unsigned char *)(v27 + 8) = (_BYTE)v28;
  sub_10000AC28(v30, v31);
  if (a1 != a2)
  {
    uint64_t v32 = a3[7];
    uint64_t v33 = (void *)(a1 + v32);
    uint64_t v34 = (const void *)(a2 + v32);
    sub_10000CBC8(a1 + v32, &qword_1000A3360);
    uint64_t v35 = sub_100008FA4(&qword_1000A3360);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v36 = sub_10007CD30();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v36 - 8) + 32))(v33, v34, v36);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10000BAD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10000BAE4);
}

uint64_t sub_10000BAE4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Note();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_100008FA4(&qword_1000A3368);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + a3[5];
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  if (a2 == 254)
  {
    unsigned int v14 = *(unsigned __int8 *)(a1 + a3[6] + 8);
    if (v14 > 1) {
      return (v14 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v15 = sub_100008FA4(&qword_1000A3370);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[7];
    return v16(v18, a2, v17);
  }
}

uint64_t sub_10000BC68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10000BC7C);
}

uint64_t sub_10000BC7C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = type metadata accessor for Note();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = sub_100008FA4(&qword_1000A3368);
  uint64_t v14 = *(void *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v12 = a1 + a4[5];
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  if (a3 == 254)
  {
    *(unsigned char *)(a1 + a4[6] + 8) = -(char)a2;
  }
  else
  {
    uint64_t v15 = sub_100008FA4(&qword_1000A3370);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a4[7];
    return v16(v18, a2, a2, v17);
  }
  return result;
}

void sub_10000BE04()
{
  type metadata accessor for Note();
  if (v0 <= 0x3F)
  {
    sub_10000BF70(319, &qword_1000A33E0, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v1 <= 0x3F)
    {
      sub_10000BF70(319, (unint64_t *)&unk_1000A33E8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_10000BF70(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

ValueMetadata *type metadata accessor for QuickNoteEmpty()
{
  return &type metadata for QuickNoteEmpty;
}

unint64_t sub_10000BFE8()
{
  unint64_t result = qword_1000A3420;
  if (!qword_1000A3420)
  {
    sub_10000A43C(&qword_1000A3428);
    sub_10000A390();
    sub_10000CAB4(&qword_1000A3350, &qword_1000A3330);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3420);
  }
  return result;
}

uint64_t sub_10000C088()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10000C0A4()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10000C0C0()
{
  unint64_t result = qword_1000A3478;
  if (!qword_1000A3478)
  {
    sub_10000A43C(&qword_1000A3440);
    sub_10000C15C(&qword_1000A3480, &qword_1000A3438, &qword_1000A3488, &qword_1000A3430);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3478);
  }
  return result;
}

uint64_t sub_10000C15C(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000A43C(a2);
    sub_10000CAB4(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10000C1F8()
{
  unint64_t result = qword_1000A3490;
  if (!qword_1000A3490)
  {
    sub_10000A43C(&qword_1000A3458);
    sub_10000A43C(&qword_1000A3448);
    sub_10000A43C(&qword_1000A3440);
    sub_10000C0C0();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_10000C328(&qword_1000A3498, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3490);
  }
  return result;
}

uint64_t sub_10000C328(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10000C378(uint64_t a1)
{
  uint64_t v2 = sub_10007C360();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_10007C450();
}

unint64_t sub_10000C448()
{
  unint64_t result = qword_1000A34B8;
  if (!qword_1000A34B8)
  {
    sub_10000A43C(&qword_1000A34B0);
    sub_10000C4E8();
    sub_10000CAB4(&qword_1000A34E0, &qword_1000A34E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A34B8);
  }
  return result;
}

unint64_t sub_10000C4E8()
{
  unint64_t result = qword_1000A34C0;
  if (!qword_1000A34C0)
  {
    sub_10000A43C(&qword_1000A34C8);
    sub_10000CAB4(&qword_1000A34D0, &qword_1000A34D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A34C0);
  }
  return result;
}

unint64_t sub_10000C590()
{
  unint64_t result = qword_1000A3510;
  if (!qword_1000A3510)
  {
    sub_10000A43C(&qword_1000A3508);
    sub_10000A43C(&qword_1000A3518);
    sub_10000A43C(&qword_1000A3520);
    sub_10000C6A0();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_10000CAB4(&qword_1000A3598, &qword_1000A35A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3510);
  }
  return result;
}

unint64_t sub_10000C6A0()
{
  unint64_t result = qword_1000A3528;
  if (!qword_1000A3528)
  {
    sub_10000A43C(&qword_1000A3520);
    sub_10000A43C(&qword_1000A3530);
    sub_10000C7D4(&qword_1000A3538, &qword_1000A3530, (void (*)(void))sub_10000C7AC);
    swift_getOpaqueTypeConformance2();
    sub_10000C328(&qword_1000A3498, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3528);
  }
  return result;
}

uint64_t sub_10000C7AC()
{
  return sub_10000C7D4(&qword_1000A3540, &qword_1000A3548, (void (*)(void))sub_10000C854);
}

uint64_t sub_10000C7D4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000A43C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10000C854()
{
  unint64_t result = qword_1000A3550;
  if (!qword_1000A3550)
  {
    sub_10000A43C(&qword_1000A3558);
    sub_10000A43C(&qword_1000A3560);
    sub_10000A43C(&qword_1000A3568);
    sub_10000C954();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3550);
  }
  return result;
}

unint64_t sub_10000C954()
{
  unint64_t result = qword_1000A3570;
  if (!qword_1000A3570)
  {
    sub_10000A43C(&qword_1000A3568);
    sub_10000C15C(&qword_1000A3578, &qword_1000A3580, &qword_1000A3588, &qword_1000A3590);
    sub_10000CAB4(&qword_1000A34E0, &qword_1000A34E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3570);
  }
  return result;
}

unint64_t sub_10000CA14()
{
  unint64_t result = qword_1000A35A8;
  if (!qword_1000A35A8)
  {
    sub_10000A43C(&qword_1000A34F8);
    sub_10000C590();
    sub_10000CAB4(&qword_1000A35B0, &qword_1000A35B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A35A8);
  }
  return result;
}

uint64_t sub_10000CAB4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000A43C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10000CAF8@<X0>(uint64_t *a1@<X8>)
{
  return sub_100007DFC(*(void *)(v1 + 16), a1);
}

uint64_t sub_10000CB00(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100008FA4(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10000CB64(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100008FA4(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10000CBC8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_100008FA4(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10000CC24()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10000CCB8()
{
  unint64_t result = qword_1000A3610;
  if (!qword_1000A3610)
  {
    sub_10000A43C(&qword_1000A3618);
    sub_10000C590();
    sub_10000CA14();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3610);
  }
  return result;
}

uint64_t sub_10000CD38()
{
  uint64_t v0 = sub_10007C2E0();
  sub_1000112B4(v0, qword_1000A3620);
  sub_100010740(v0, (uint64_t)qword_1000A3620);
  return sub_10007C2C0();
}

uint64_t sub_10000CD88@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10000CD98()
{
  id v1 = [self mainBundle];
  NSString v2 = sub_10007CF30();
  id v3 = [v1 localizedStringForKey:v2 value:0 table:0];

  uint64_t v4 = sub_10007CF40();
  uint64_t v6 = v5;

  sub_100008FA4(&qword_1000A3738);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000807D0;
  uint64_t v9 = v0[2];
  uint64_t v8 = v0[3];
  *(void *)(inited + 32) = v9;
  *(void *)(inited + 40) = v8;
  *(void *)(inited + 48) = v4;
  *(void *)(inited + 56) = v6;
  uint64_t v11 = v0[5];
  uint64_t v10 = v0[6];
  *(void *)(inited + 64) = v11;
  *(void *)(inited + 72) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  uint64_t v12 = sub_1000764CC(0, 1, 1, (char *)_swiftEmptyArrayStorage);
  unint64_t v14 = *((void *)v12 + 2);
  unint64_t v13 = *((void *)v12 + 3);
  unint64_t v15 = v14 + 1;
  if (v14 >= v13 >> 1) {
    uint64_t v12 = sub_1000764CC((char *)(v13 > 1), v14 + 1, 1, v12);
  }
  *((void *)v12 + 2) = v15;
  uint64_t v16 = &v12[16 * v14];
  *((void *)v16 + 4) = v9;
  *((void *)v16 + 5) = v8;
  unint64_t v17 = *((void *)v12 + 3);
  swift_bridgeObjectRetain();
  if (v15 >= v17 >> 1) {
    uint64_t v12 = sub_1000764CC((char *)(v17 > 1), v14 + 2, 1, v12);
  }
  *((void *)v12 + 2) = v14 + 2;
  uint64_t v18 = &v12[16 * v15];
  *((void *)v18 + 4) = v4;
  *((void *)v18 + 5) = v6;
  if (v10)
  {
    unint64_t v19 = *((void *)v12 + 2);
    unint64_t v20 = *((void *)v12 + 3);
    swift_bridgeObjectRetain();
    if (v19 >= v20 >> 1) {
      uint64_t v12 = sub_1000764CC((char *)(v20 > 1), v19 + 1, 1, v12);
    }
    *((void *)v12 + 2) = v19 + 1;
    uint64_t v21 = &v12[16 * v19];
    *((void *)v21 + 4) = v11;
    *((void *)v21 + 5) = v10;
  }
  swift_release();
  sub_100008FA4(&qword_1000A3728);
  sub_100012020();
  uint64_t v22 = sub_10007CEF0();
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_10000CFE8(void *a1)
{
  id v2 = [self mainBundle];
  NSString v3 = sub_10007CF30();
  id v4 = [v2 localizedStringForKey:v3 value:0 table:0];

  uint64_t v5 = sub_10007CF40();
  uint64_t v7 = v6;

  uint64_t v9 = a1[2];
  uint64_t v8 = a1[3];
  uint64_t v11 = a1[8];
  uint64_t v10 = a1[9];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1000764CC(0, 1, 1, (char *)_swiftEmptyArrayStorage);
  unint64_t v14 = *((void *)v12 + 2);
  unint64_t v13 = *((void *)v12 + 3);
  unint64_t v15 = v14 + 1;
  if (v14 >= v13 >> 1) {
    uint64_t v12 = sub_1000764CC((char *)(v13 > 1), v14 + 1, 1, v12);
  }
  *((void *)v12 + 2) = v15;
  uint64_t v16 = &v12[16 * v14];
  *((void *)v16 + 4) = v9;
  *((void *)v16 + 5) = v8;
  unint64_t v17 = *((void *)v12 + 3);
  swift_bridgeObjectRetain();
  if (v15 >= v17 >> 1) {
    uint64_t v12 = sub_1000764CC((char *)(v17 > 1), v14 + 2, 1, v12);
  }
  *((void *)v12 + 2) = v14 + 2;
  uint64_t v18 = &v12[16 * v15];
  *((void *)v18 + 4) = v5;
  *((void *)v18 + 5) = v7;
  unint64_t v19 = *((void *)v12 + 2);
  unint64_t v20 = *((void *)v12 + 3);
  swift_bridgeObjectRetain();
  if (v19 >= v20 >> 1) {
    uint64_t v12 = sub_1000764CC((char *)(v20 > 1), v19 + 1, 1, v12);
  }
  *((void *)v12 + 2) = v19 + 1;
  uint64_t v21 = &v12[16 * v19];
  *((void *)v21 + 4) = v11;
  *((void *)v21 + 5) = v10;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100008FA4(&qword_1000A3728);
  sub_100012020();
  uint64_t v22 = sub_10007CEF0();
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_10000D208@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100008FA4(&qword_1000A3270);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [a1 identifier];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = sub_10007CF40();
    unint64_t v32 = v10;
    uint64_t v33 = v9;
  }
  else
  {
    unint64_t v32 = 0xE000000000000000;
    uint64_t v33 = 0;
  }
  id v11 = [a1 localizedTitle];
  uint64_t v31 = sub_10007CF40();
  uint64_t v13 = v12;

  unsigned __int8 v14 = [a1 isSharedViaICloud];
  id v15 = [a1 shareDescription];
  if (v15)
  {
    uint64_t v16 = v15;
    uint64_t v17 = sub_10007CF40();
    uint64_t v19 = v18;
  }
  else
  {
    uint64_t v17 = 0;
    uint64_t v19 = 0;
  }
  id v20 = [self appURLForFolder:a1];
  if (v20)
  {
    uint64_t v21 = v20;
    sub_10007C0E0();

    uint64_t v22 = sub_10007C110();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v6, 0, 1, v22);
  }
  else
  {
    uint64_t v23 = sub_10007C110();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v6, 1, 1, v23);
  }
  id v24 = [a1 systemImageName];
  sub_10007CF40();

  uint64_t v25 = sub_10007CB00();
  uint64_t v26 = sub_100010D84(a1);

  unint64_t v27 = v32;
  *(void *)a2 = v33;
  *(void *)(a2 + 8) = v27;
  *(void *)(a2 + 16) = v31;
  *(void *)(a2 + 24) = v13;
  *(unsigned char *)(a2 + 32) = v14;
  *(void *)(a2 + 40) = v17;
  *(void *)(a2 + 48) = v19;
  uint64_t v28 = (int *)type metadata accessor for NotesFolder();
  uint64_t result = sub_10000CB00((uint64_t)v6, a2 + v28[8], &qword_1000A3270);
  *(void *)(a2 + v28[9]) = v25;
  *(void *)(a2 + v28[10]) = v26;
  return result;
}

uint64_t sub_10000D494@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100008FA4(&qword_1000A3270);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [a1 identifier];
  uint64_t v8 = sub_10007CF40();
  uint64_t v10 = v9;

  id v11 = [a1 title];
  uint64_t v12 = sub_10007CF40();
  uint64_t v14 = v13;

  id v15 = [self appURLForVirtualSmartFolder:a1];
  if (v15)
  {
    uint64_t v16 = v15;
    sub_10007C0E0();

    uint64_t v17 = sub_10007C110();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v6, 0, 1, v17);
  }
  else
  {
    uint64_t v18 = sub_10007C110();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v6, 1, 1, v18);
  }
  id v19 = [a1 systemImageName];
  sub_10007CF40();

  uint64_t v20 = sub_10007CB00();
  *(void *)a2 = v8;
  *(void *)(a2 + 8) = v10;
  *(void *)(a2 + 16) = v12;
  *(void *)(a2 + 24) = v14;
  *(unsigned char *)(a2 + 32) = 0;
  uint64_t v21 = (int *)type metadata accessor for NotesFolder();
  *(void *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = 0;
  uint64_t result = sub_10000CB00((uint64_t)v6, a2 + v21[8], &qword_1000A3270);
  *(void *)(a2 + v21[9]) = v20;
  *(void *)(a2 + v21[10]) = &_swiftEmptyArrayStorage;
  return result;
}

uint64_t sub_10000D6B0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100008FA4(&qword_1000A3270);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [a1 identifier];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = sub_10007CF40();
    unint64_t v11 = v10;
  }
  else
  {
    uint64_t v9 = 0;
    unint64_t v11 = 0xE000000000000000;
  }
  id v12 = [a1 allItemsFolderLocalizedTitle];
  uint64_t v13 = sub_10007CF40();
  uint64_t v15 = v14;

  id v16 = [self appURLForFolder:a1];
  if (v16)
  {
    uint64_t v17 = v16;
    sub_10007C0E0();

    uint64_t v18 = sub_10007C110();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v6, 0, 1, v18);
  }
  else
  {
    uint64_t v19 = sub_10007C110();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v6, 1, 1, v19);
  }
  id v20 = [self defaultSystemImageName];
  sub_10007CF40();

  uint64_t v21 = sub_10007CAE0();
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  *(void *)(a2 + 16) = v13;
  *(void *)(a2 + 24) = v15;
  *(unsigned char *)(a2 + 32) = 0;
  uint64_t v22 = (int *)type metadata accessor for NotesFolder();
  *(void *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = 0;
  uint64_t result = sub_10000CB00((uint64_t)v6, a2 + v22[8], &qword_1000A3270);
  *(void *)(a2 + v22[9]) = v21;
  *(void *)(a2 + v22[10]) = &_swiftEmptyArrayStorage;
  return result;
}

id sub_10000D8E4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100008FA4(&qword_1000A3270);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = [a1 externalIdentifier];
  if (result)
  {
    uint64_t v8 = result;
    uint64_t v9 = sub_10007CF40();
    uint64_t v11 = v10;

    id v12 = [a1 localizedTitle];
    uint64_t v13 = sub_10007CF40();
    uint64_t v15 = v14;

    id v16 = [self appURLForHTMLFolder:a1];
    if (v16)
    {
      uint64_t v17 = v16;
      sub_10007C0E0();

      uint64_t v18 = sub_10007C110();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v6, 0, 1, v18);
    }
    else
    {
      uint64_t v19 = sub_10007C110();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v6, 1, 1, v19);
    }
    id v20 = [self defaultSystemImageName];
    sub_10007CF40();

    uint64_t v21 = sub_10007CAE0();
    *(void *)a2 = v9;
    *(void *)(a2 + 8) = v11;
    *(void *)(a2 + 16) = v13;
    *(void *)(a2 + 24) = v15;
    *(unsigned char *)(a2 + 32) = 0;
    uint64_t v22 = (int *)type metadata accessor for NotesFolder();
    *(void *)(a2 + 40) = 0;
    *(void *)(a2 + 48) = 0;
    id result = (id)sub_10000CB00((uint64_t)v6, a2 + v22[8], &qword_1000A3270);
    *(void *)(a2 + v22[9]) = v21;
    *(void *)(a2 + v22[10]) = &_swiftEmptyArrayStorage;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_10000DB10@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100008FA4(&qword_1000A3270);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = [a1 accountIdentifier];
  if (result)
  {
    uint64_t v8 = result;
    uint64_t v9 = sub_10007CF40();
    uint64_t v11 = v10;

    id v12 = [a1 allItemsFolderLocalizedTitle];
    if (v12)
    {
      uint64_t v13 = v12;
      uint64_t v14 = sub_10007CF40();
      unint64_t v16 = v15;
    }
    else
    {
      uint64_t v14 = 0;
      unint64_t v16 = 0xE000000000000000;
    }
    id v17 = [self appURLForHTMLFolder:a1];
    if (v17)
    {
      uint64_t v18 = v17;
      sub_10007C0E0();

      uint64_t v19 = sub_10007C110();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v6, 0, 1, v19);
    }
    else
    {
      uint64_t v20 = sub_10007C110();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v6, 1, 1, v20);
    }
    id v21 = [self defaultSystemImageName];
    sub_10007CF40();

    uint64_t v22 = sub_10007CAE0();
    *(void *)a2 = v9;
    *(void *)(a2 + 8) = v11;
    *(void *)(a2 + 16) = v14;
    *(void *)(a2 + 24) = v16;
    *(unsigned char *)(a2 + 32) = 0;
    uint64_t v23 = (int *)type metadata accessor for NotesFolder();
    *(void *)(a2 + 40) = 0;
    *(void *)(a2 + 48) = 0;
    id result = (id)sub_10000CB00((uint64_t)v6, a2 + v23[8], &qword_1000A3270);
    *(void *)(a2 + v23[9]) = v22;
    *(void *)(a2 + v23[10]) = &_swiftEmptyArrayStorage;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10000DD4C@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  id v171 = a3;
  id v165 = a2;
  uint64_t v166 = a4;
  id v169 = a1;
  uint64_t v159 = sub_100008FA4(&qword_1000A3638);
  uint64_t v4 = __chkstk_darwin(v159);
  uint64_t v158 = (char *)&v148 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v148 = (char *)&v148 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  v152 = (char *)&v148 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v156 = (char *)&v148 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v154 = (char *)&v148 - v13;
  __chkstk_darwin(v12);
  uint64_t v157 = (uint64_t)&v148 - v14;
  uint64_t v15 = sub_10007C2E0();
  uint64_t v162 = *(void *)(v15 - 8);
  uint64_t v163 = v15;
  __chkstk_darwin(v15);
  unint64_t v168 = (char *)&v148 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100008FA4(&qword_1000A3270);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v148 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10007C110();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v153 = (char *)&v148 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v149 = (char *)&v148 - v25;
  __chkstk_darwin(v24);
  uint64_t v160 = (char *)&v148 - v26;
  uint64_t v27 = sub_10007C180();
  uint64_t v28 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v148 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = (int *)type metadata accessor for NotesFolder();
  uint64_t v170 = *((void *)v31 - 1);
  uint64_t v32 = __chkstk_darwin(v31);
  uint64_t v155 = (uint64_t)&v148 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v150 = (char *)&v148 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  v151 = (char *)&v148 - v37;
  __chkstk_darwin(v36);
  char v39 = (char *)&v148 - v38;
  sub_10007C170();
  uint64_t v40 = sub_10007C160();
  uint64_t v42 = v41;
  (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
  *(void *)char v39 = v40;
  *((void *)v39 + 1) = v42;
  *((void *)v39 + 2) = 0;
  *((void *)v39 + 3) = 0xE000000000000000;
  v39[32] = 0;
  *((void *)v39 + 5) = 0;
  *((void *)v39 + 6) = 0;
  uint64_t v43 = &v39[v31[8]];
  uint64_t v161 = v21;
  uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  v44(v43, 1, 1, v20);
  uint64_t v45 = v31[9];
  id v46 = [self defaultSystemImageName];
  sub_10007CF40();

  *(void *)&v39[v45] = sub_10007CAE0();
  uint64_t v167 = v31;
  uint64_t v47 = v31[10];
  id v48 = v169;
  uint64_t v164 = v39;
  *(void *)&v39[v47] = &_swiftEmptyArrayStorage;
  id v49 = [v48 identifier];
  if (!v49)
  {
    v44(v19, 1, 1, v20);
    goto LABEL_8;
  }
  uint64_t v50 = v49;
  sub_10007CF40();

  swift_bridgeObjectRetain();
  sub_10007C100();
  swift_bridgeObjectRelease_n();
  uint64_t v51 = v161;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v161 + 48))(v19, 1, v20) == 1)
  {
LABEL_8:
    sub_10000CBC8((uint64_t)v19, &qword_1000A3270);
    if (qword_1000A3118 != -1) {
      swift_once();
    }
    uint64_t v66 = v163;
    uint64_t v67 = sub_100010740(v163, (uint64_t)qword_1000A3620);
    uint64_t v68 = v162;
    uint64_t v69 = v168;
    (*(void (**)(char *, uint64_t, uint64_t))(v162 + 16))(v168, v67, v66);
    id v70 = v48;
    uint64_t v71 = sub_10007C2D0();
    os_log_type_t v72 = sub_10007D060();
    if (os_log_type_enabled(v71, v72))
    {
      uint64_t v73 = (uint8_t *)swift_slowAlloc();
      v173[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v73 = 136315138;
      id v74 = [v70 identifier];
      if (v74)
      {
        uint64_t v75 = v74;
        uint64_t v76 = sub_10007CF40();
        unint64_t v78 = v77;
      }
      else
      {
        unint64_t v78 = 0xA300000000000000;
        uint64_t v76 = 9732322;
      }
      uint64_t v172 = sub_100037524(v76, v78, v173);
      sub_10007D0F0();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v71, v72, "Cannot create notes folder URL from intent note folder identifier — returning nil {identifier: %s}", v73, 0xCu);
      uint64_t v79 = 1;
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v68 + 8))(v168, v66);
      sub_100010778((uint64_t)v164);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v68 + 8))(v69, v66);
      sub_100010778((uint64_t)v164);
      uint64_t v79 = 1;
    }
    uint64_t v89 = v166;
    uint64_t v65 = v167;
    goto LABEL_27;
  }
  uint64_t v52 = (char *)v20;
  uint64_t v53 = v160;
  (*(void (**)(char *, char *, char *))(v51 + 32))(v160, v19, v52);
  char v54 = self;
  sub_10007C0D0(v55);
  uint64_t v57 = v56;
  unsigned int v58 = [v54 isShowFolderURL:v56];

  if (v58
    && (uint64_t v60 = (char *)[self sharedContext]) != 0)
  {
    uint64_t v61 = v60;
    id v62 = [v60 managedObjectContext];
    __chkstk_darwin(v62);
    *(&v148 - 2) = v53;
    *(&v148 - 1) = v61;
    uint64_t v63 = (uint64_t)v154;
    sub_10007D0D0();

    uint64_t v64 = v170;
    uint64_t v65 = v167;
    if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v170 + 48))(v63, 1, v167) != 1)
    {

      uint64_t v87 = (uint64_t)v164;
      sub_100010778((uint64_t)v164);
      (*(void (**)(char *, char *))(v51 + 8))(v53, v52);
      uint64_t v122 = v63;
      uint64_t v123 = &v175;
      goto LABEL_35;
    }
    sub_10000CBC8(v63, &qword_1000A3638);
  }
  else
  {
    uint64_t v65 = v167;
  }
  sub_10007C0D0(v59);
  uint64_t v81 = v80;
  unsigned int v82 = [v54 isShowVirtualSmartFolderURL:v80];

  if (!v82)
  {
    sub_10007C0D0(v83);
    uint64_t v91 = v90;
    unsigned int v92 = [v54 isShowHTMLFolderURL:v90];

    if (!v92) {
      goto LABEL_20;
    }
    unint64_t v168 = v52;
    uint64_t v95 = v51;
    uint64_t v96 = v48;
    __chkstk_darwin(v93);
    uint64_t v97 = (char *)v171;
    *(&v148 - 2) = v53;
    *(&v148 - 1) = v97;
    sub_100011278(0, &qword_1000A3650);
    uint64_t v98 = v97;
    uint64_t v99 = (uint64_t)v152;
    sub_10007D080();

    uint64_t v64 = v170;
    if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v170 + 48))(v99, 1, v65) == 1)
    {
      sub_10000CBC8(v99, &qword_1000A3638);
      id v48 = v96;
      uint64_t v51 = v95;
      uint64_t v52 = v168;
LABEL_20:
      sub_10007C0D0(v94);
      uint64_t v101 = v100;
      unsigned int v102 = [v54 isShowDefaultFolderURL:v100];

      if (v102)
      {
        id v103 = [self defaultFolderWithHTMLNoteContext:v171];
        if (v103)
        {
          uint64_t v104 = v103;
          self;
          uint64_t v105 = swift_dynamicCastObjCClass();
          if (v105)
          {
            v106 = (char *)v105;
            id v107 = v104;
            id v108 = v165;
            id v109 = [v165 managedObjectContext];
            unint64_t v168 = v52;
            uint64_t v110 = v51;
            uint64_t v111 = v48;
            uint64_t v167 = (int *)&v148;
            __chkstk_darwin(v109);
            *(&v148 - 2) = v106;
            uint64_t v112 = (uint64_t)v156;
            sub_10007D0D0();

            uint64_t v87 = (uint64_t)v164;
            sub_100010778((uint64_t)v164);

            (*(void (**)(char *, char *))(v110 + 8))(v53, v168);
            uint64_t v64 = v170;
            (*(void (**)(uint64_t, void, uint64_t, int *))(v170 + 56))(v112, 0, 1, v65);
            uint64_t v88 = v157;
            sub_10000CB00(v112, v157, &qword_1000A3638);
LABEL_36:
            uint64_t v89 = v166;
            goto LABEL_37;
          }
          self;
          uint64_t v130 = swift_dynamicCastObjCClass();
          if (v130)
          {
            uint64_t v131 = (char *)v130;
            id v132 = v104;
            id v133 = v171;
            id v134 = [v171 managedObjectContext];
            if (v134)
            {
              uint64_t v135 = v134;
              unint64_t v168 = v52;
              uint64_t v136 = v51;
              uint64_t v137 = v48;
              uint64_t v167 = (int *)&v148;
              __chkstk_darwin(v134);
              *(&v148 - 2) = v131;
              uint64_t v138 = (uint64_t)v148;
              sub_10007D0D0();

              uint64_t v51 = v136;
              uint64_t v52 = v168;

              uint64_t v89 = v166;
              uint64_t v139 = 0;
              uint64_t v125 = (uint64_t)v158;
            }
            else
            {

              uint64_t v139 = 1;
              uint64_t v89 = v166;
              uint64_t v125 = (uint64_t)v158;
              uint64_t v138 = (uint64_t)v148;
            }
            uint64_t v87 = (uint64_t)v164;
            sub_100010778((uint64_t)v164);
            (*(void (**)(char *, char *))(v51 + 8))(v53, v52);
            uint64_t v147 = v139;
            uint64_t v64 = v170;
            (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v170 + 56))(v138, v147, 1, v65);
            uint64_t v88 = v157;
            sub_10000CB00(v138, v157, &qword_1000A3638);
            goto LABEL_38;
          }
          if (qword_1000A3118 != -1) {
            swift_once();
          }
          sub_100010740(v163, (uint64_t)qword_1000A3620);
          id v140 = v104;
          uint64_t v141 = sub_10007C2D0();
          os_log_type_t v142 = sub_10007D060();
          if (os_log_type_enabled(v141, v142))
          {
            uint64_t v143 = (uint8_t *)swift_slowAlloc();
            v144 = (void *)swift_slowAlloc();
            *(_DWORD *)uint64_t v143 = 138412290;
            uint64_t v145 = v52;
            id v146 = [v140 objectID];
            v173[0] = (uint64_t)v146;
            uint64_t v51 = v161;
            sub_10007D0F0();
            void *v144 = v146;
            uint64_t v52 = v145;
            uint64_t v53 = v160;

            _os_log_impl((void *)&_mh_execute_header, v141, v142, "Unknown object type — returning nil {objectID: %@}", v143, 0xCu);
            sub_100008FA4(&qword_1000A3648);
            swift_arrayDestroy();
            id v48 = v169;
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
          }
          uint64_t v89 = v166;

          sub_100010778((uint64_t)v164);
          (*(void (**)(char *, char *))(v51 + 8))(v53, v52);
          uint64_t v79 = 1;
LABEL_27:
          uint64_t v64 = v170;
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v64 + 56))(v89, v79, 1, v65);
        }
        if (qword_1000A3118 != -1) {
          swift_once();
        }
        sub_100010740(v163, (uint64_t)qword_1000A3620);
        uint64_t v114 = v149;
        (*(void (**)(char *, char *, char *))(v51 + 16))(v149, v53, v52);
        v115 = sub_10007C2D0();
        os_log_type_t v116 = sub_10007D060();
        if (os_log_type_enabled(v115, v116))
        {
          uint64_t v117 = (uint8_t *)swift_slowAlloc();
          v173[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v117 = 136315138;
          unint64_t v168 = (char *)(v117 + 4);
          sub_100011FDC(&qword_1000A3640);
          uint64_t v128 = sub_10007D230();
          uint64_t v172 = sub_100037524(v128, v129, v173);
          sub_10007D0F0();
          swift_bridgeObjectRelease();
          uint64_t v120 = *(void (**)(char *, char *))(v51 + 8);
          v120(v149, v52);
          v121 = "Cannot find object for current default notes folder URL — returning nil {notesFolderURL: %s}";
          goto LABEL_45;
        }
      }
      else
      {
        if (qword_1000A3118 != -1) {
          swift_once();
        }
        sub_100010740(v163, (uint64_t)qword_1000A3620);
        uint64_t v114 = v153;
        (*(void (**)(char *, char *, char *))(v51 + 16))(v153, v53, v52);
        v115 = sub_10007C2D0();
        os_log_type_t v116 = sub_10007D060();
        if (os_log_type_enabled(v115, v116))
        {
          uint64_t v117 = (uint8_t *)swift_slowAlloc();
          v173[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v117 = 136315138;
          unint64_t v168 = (char *)(v117 + 4);
          sub_100011FDC(&qword_1000A3640);
          uint64_t v118 = sub_10007D230();
          uint64_t v172 = sub_100037524(v118, v119, v173);
          sub_10007D0F0();
          swift_bridgeObjectRelease();
          uint64_t v120 = *(void (**)(char *, char *))(v51 + 8);
          v120(v153, v52);
          v121 = "Unknown notes folder URL type — returning nil {notesFolderURL: %s}";
LABEL_45:
          _os_log_impl((void *)&_mh_execute_header, v115, v116, v121, v117, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

LABEL_47:
          sub_100010778((uint64_t)v164);
          uint64_t v89 = v166;
          v120(v53, v52);
          uint64_t v79 = 1;
          goto LABEL_27;
        }
      }

      uint64_t v120 = *(void (**)(char *, char *))(v51 + 8);
      v120(v114, v52);
      goto LABEL_47;
    }

    uint64_t v87 = (uint64_t)v164;
    sub_100010778((uint64_t)v164);
    (*(void (**)(char *, char *))(v95 + 8))(v53, v168);
    uint64_t v122 = v99;
    uint64_t v123 = &v174;
LABEL_35:
    uint64_t v124 = *(v123 - 32);
    sub_1000107D4(v122, v124);
    uint64_t v88 = v157;
    sub_1000107D4(v124, v157);
    (*(void (**)(uint64_t, void, uint64_t, int *))(v64 + 56))(v88, 0, 1, v65);
    goto LABEL_36;
  }
  uint64_t v84 = (char *)v165;
  id v85 = [v165 managedObjectContext];
  __chkstk_darwin(v85);
  *(&v148 - 2) = v53;
  *(&v148 - 1) = v84;
  uint64_t v86 = (uint64_t)v156;
  sub_10007D0D0();

  uint64_t v87 = (uint64_t)v164;
  sub_100010778((uint64_t)v164);
  (*(void (**)(char *, char *))(v51 + 8))(v53, v52);
  uint64_t v88 = v157;
  sub_10000CB00(v86, v157, &qword_1000A3638);
  uint64_t v89 = v166;
  uint64_t v64 = v170;
LABEL_37:
  uint64_t v125 = (uint64_t)v158;
LABEL_38:
  sub_10000CB00(v88, v125, &qword_1000A3638);
  if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v64 + 48))(v125, 1, v65) == 1)
  {
    sub_10000CBC8(v125, &qword_1000A3638);
    uint64_t v79 = 1;
  }
  else
  {
    uint64_t v126 = v125;
    uint64_t v127 = v155;
    sub_1000107D4(v126, v155);
    sub_1000107D4(v127, v87);
    sub_1000107D4(v87, v89);
    uint64_t v79 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v64 + 56))(v89, v79, 1, v65);
}

uint64_t sub_10000F240@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_10007C110();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = self;
  sub_10007C0D0(v11);
  uint64_t v13 = v12;
  id v14 = [a2 managedObjectContext];
  id v15 = [v10 virtualSmartFolderMentionedInURL:v13 context:v14];

  if (v15)
  {
    sub_10000D494(v15, a3);
    uint64_t v16 = type metadata accessor for NotesFolder();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a3, 0, 1, v16);
  }
  else
  {
    uint64_t v27 = a3;
    if (qword_1000A3118 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_10007C2E0();
    sub_100010740(v18, (uint64_t)qword_1000A3620);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
    uint64_t v19 = sub_10007C2D0();
    os_log_type_t v20 = sub_10007D060();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 136315138;
      uint64_t v26 = v21 + 4;
      sub_100011FDC(&qword_1000A3640);
      uint64_t v22 = sub_10007D230();
      uint64_t v28 = sub_100037524(v22, v23, &v29);
      sub_10007D0F0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Cannot find notes object for notes folder URL — returning nil {notesFolderURL: %s}", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }

    uint64_t v24 = v27;
    uint64_t v25 = type metadata accessor for NotesFolder();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 1, 1, v25);
  }
}

uint64_t sub_10000F5E0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v60 = a3;
  uint64_t v5 = sub_10007C110();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v57 - v10;
  uint64_t v12 = self;
  sub_10007C0D0(v13);
  id v15 = v14;
  id v16 = [v12 objectIDForModernFolderMentionedInURL:v14 noteContext:a2];

  if (!v16) {
    goto LABEL_9;
  }
  id v17 = [a2 managedObjectContext];
  uint64_t v63 = 0;
  uint64_t v18 = [v17 existingObjectWithID:v16 error:&v63];

  uint64_t v19 = v63;
  if (!v18)
  {
    uint64_t v31 = v63;
    sub_10007C070();

    swift_willThrow();
    swift_errorRelease();
    uint64_t v61 = 0;
LABEL_9:
    uint64_t v32 = v5;
    if (qword_1000A3118 != -1) {
      swift_once();
    }
    uint64_t v33 = sub_10007C2E0();
    sub_100010740(v33, (uint64_t)qword_1000A3620);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, v5);
    uint64_t v34 = sub_10007C2D0();
    os_log_type_t v35 = sub_10007D060();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      uint64_t v59 = swift_slowAlloc();
      uint64_t v63 = v59;
      *(_DWORD *)uint64_t v36 = 136315138;
      sub_100011FDC(&qword_1000A3640);
      uint64_t v37 = sub_10007D230();
      uint64_t v62 = sub_100037524(v37, v38, (uint64_t *)&v63);
      uint64_t v39 = v60;
      sub_10007D0F0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v32);
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "Cannot find notes object for notes folder URL — returning nil {notesFolderURL: %s}", v36, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);

      uint64_t v39 = v60;
    }
    uint64_t v40 = type metadata accessor for NotesFolder();
    uint64_t v41 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56);
    uint64_t v42 = v39;
    return v41(v42, 1, 1, v40);
  }
  uint64_t v20 = self;
  uint64_t v21 = v19;
  id v22 = [(id)v20 sharedWidget];
  LOBYTE(v20) = [v22 hidesObject:v18];

  if (v20)
  {
    if (qword_1000A3118 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_10007C2E0();
    sub_100010740(v23, (uint64_t)qword_1000A3620);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v11, a1, v5);
    uint64_t v24 = sub_10007C2D0();
    os_log_type_t v25 = sub_10007D040();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = swift_slowAlloc();
      os_log_t v58 = v24;
      uint64_t v27 = (uint8_t *)v26;
      uint64_t v59 = swift_slowAlloc();
      uint64_t v63 = v59;
      *(_DWORD *)uint64_t v27 = 136315138;
      uint64_t v57 = v27 + 4;
      sub_100011FDC(&qword_1000A3640);
      uint64_t v28 = sub_10007D230();
      uint64_t v62 = sub_100037524(v28, v29, (uint64_t *)&v63);
      sub_10007D0F0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
      os_log_t v30 = v58;
      _os_log_impl((void *)&_mh_execute_header, v58, v25, "Widget hides object for notes folder URL — returning nil {notesFolderURL: %s}", v27, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    }
    uint64_t v47 = v60;
    uint64_t v40 = type metadata accessor for NotesFolder();
    uint64_t v41 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56);
    uint64_t v42 = v47;
    return v41(v42, 1, 1, v40);
  }
  self;
  uint64_t v43 = swift_dynamicCastObjCClass();
  if (v43)
  {
    uint64_t v44 = (void *)v43;
    uint64_t v45 = v18;
    uint64_t v46 = v60;
    sub_10000D6B0(v44, v60);
  }
  else
  {
    self;
    uint64_t v49 = swift_dynamicCastObjCClass();
    if (!v49)
    {
      if (qword_1000A3118 != -1) {
        swift_once();
      }
      uint64_t v52 = sub_10007C2E0();
      sub_100010740(v52, (uint64_t)qword_1000A3620);
      uint64_t v53 = v16;
      char v54 = sub_10007C2D0();
      os_log_type_t v55 = sub_10007D060();
      if (os_log_type_enabled(v54, v55))
      {
        uint64_t v56 = (uint8_t *)swift_slowAlloc();
        uint64_t v59 = swift_slowAlloc();
        *(_DWORD *)uint64_t v56 = 138412290;
        uint64_t v63 = v53;
        uint64_t v53 = v53;
        sub_10007D0F0();
        v59->isa = (Class)v16;

        _os_log_impl((void *)&_mh_execute_header, v54, v55, "Unknown object type — returning nil {objectID: %@}", v56, 0xCu);
        sub_100008FA4(&qword_1000A3648);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        uint64_t v18 = v53;
        char v54 = v53;
      }

      uint64_t v40 = type metadata accessor for NotesFolder();
      uint64_t v41 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56);
      uint64_t v42 = v60;
      return v41(v42, 1, 1, v40);
    }
    uint64_t v50 = (void *)v49;
    uint64_t v45 = v18;
    uint64_t v46 = v60;
    sub_10000D208(v50, v60);
  }

  uint64_t v51 = type metadata accessor for NotesFolder();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v46, 0, 1, v51);
}

uint64_t sub_10000FE78@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v60 = a3;
  uint64_t v5 = sub_10007C110();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v57 - v10;
  uint64_t v12 = self;
  sub_10007C0D0(v13);
  id v15 = v14;
  id v16 = [v12 objectIDForHTMLFolderMentionedInURL:v14 context:a2];

  if (!v16) {
    goto LABEL_9;
  }
  uint64_t v63 = 0;
  id v17 = [a2 existingObjectWithID:v16 error:&v63];
  uint64_t v18 = v63;
  if (!v17)
  {
    uint64_t v31 = v63;
    sub_10007C070();

    swift_willThrow();
    swift_errorRelease();
    uint64_t v61 = 0;
LABEL_9:
    uint64_t v32 = v5;
    if (qword_1000A3118 != -1) {
      swift_once();
    }
    uint64_t v33 = sub_10007C2E0();
    sub_100010740(v33, (uint64_t)qword_1000A3620);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, v5);
    uint64_t v34 = sub_10007C2D0();
    os_log_type_t v35 = sub_10007D060();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      uint64_t v59 = swift_slowAlloc();
      uint64_t v63 = v59;
      *(_DWORD *)uint64_t v36 = 136315138;
      sub_100011FDC(&qword_1000A3640);
      uint64_t v37 = sub_10007D230();
      uint64_t v62 = sub_100037524(v37, v38, (uint64_t *)&v63);
      uint64_t v39 = v60;
      sub_10007D0F0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v32);
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "Cannot find HTML object for notes folder URL — returning nil {notesFolderURL: %s}", v36, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);

      uint64_t v39 = v60;
    }
    uint64_t v40 = type metadata accessor for NotesFolder();
    uint64_t v41 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56);
    uint64_t v42 = v39;
    return v41(v42, 1, 1, v40);
  }
  uint64_t v19 = v17;
  uint64_t v20 = self;
  uint64_t v21 = v18;
  id v22 = [(id)v20 sharedWidget];
  LOBYTE(v20) = [v22 hidesObject:v19];

  if (v20)
  {
    if (qword_1000A3118 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_10007C2E0();
    sub_100010740(v23, (uint64_t)qword_1000A3620);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v11, a1, v5);
    uint64_t v24 = sub_10007C2D0();
    os_log_type_t v25 = sub_10007D040();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = swift_slowAlloc();
      os_log_t v58 = v24;
      uint64_t v27 = (uint8_t *)v26;
      uint64_t v59 = swift_slowAlloc();
      uint64_t v63 = v59;
      *(_DWORD *)uint64_t v27 = 136315138;
      uint64_t v57 = v27 + 4;
      sub_100011FDC(&qword_1000A3640);
      uint64_t v28 = sub_10007D230();
      uint64_t v62 = sub_100037524(v28, v29, (uint64_t *)&v63);
      sub_10007D0F0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
      os_log_t v30 = v58;
      _os_log_impl((void *)&_mh_execute_header, v58, v25, "Widget hides object for notes folder URL — returning nil {notesFolderURL: %s}", v27, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    }
    uint64_t v47 = v60;
    uint64_t v40 = type metadata accessor for NotesFolder();
    uint64_t v41 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56);
    uint64_t v42 = v47;
    return v41(v42, 1, 1, v40);
  }
  self;
  uint64_t v43 = swift_dynamicCastObjCClass();
  if (v43)
  {
    uint64_t v44 = (void *)v43;
    uint64_t v45 = v19;
    uint64_t v46 = v60;
    sub_10000DB10(v44, v60);
  }
  else
  {
    self;
    uint64_t v49 = swift_dynamicCastObjCClass();
    if (!v49)
    {
      if (qword_1000A3118 != -1) {
        swift_once();
      }
      uint64_t v52 = sub_10007C2E0();
      sub_100010740(v52, (uint64_t)qword_1000A3620);
      uint64_t v53 = v16;
      char v54 = sub_10007C2D0();
      os_log_type_t v55 = sub_10007D060();
      if (os_log_type_enabled(v54, v55))
      {
        uint64_t v56 = (uint8_t *)swift_slowAlloc();
        uint64_t v59 = swift_slowAlloc();
        *(_DWORD *)uint64_t v56 = 138412290;
        uint64_t v63 = v53;
        uint64_t v53 = v53;
        sub_10007D0F0();
        v59->isa = (Class)v16;

        _os_log_impl((void *)&_mh_execute_header, v54, v55, "Unknown object type — returning nil {objectID: %@}", v56, 0xCu);
        sub_100008FA4(&qword_1000A3648);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        uint64_t v19 = v53;
        char v54 = v53;
      }

      uint64_t v40 = type metadata accessor for NotesFolder();
      uint64_t v41 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56);
      uint64_t v42 = v60;
      return v41(v42, 1, 1, v40);
    }
    uint64_t v50 = (void *)v49;
    uint64_t v45 = v19;
    uint64_t v46 = v60;
    sub_10000D8E4(v50, v60);
  }

  uint64_t v51 = type metadata accessor for NotesFolder();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v46, 0, 1, v51);
}

uint64_t type metadata accessor for NotesFolder()
{
  uint64_t result = qword_1000A36C0;
  if (!qword_1000A36C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100010740(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_100010778(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NotesFolder();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000107D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NotesFolder();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_100010838@<X0>(uint64_t a1@<X8>)
{
  return sub_10000D8E4(*(id *)(v1 + 16), a1);
}

uint64_t sub_100010870@<X0>(uint64_t a1@<X8>)
{
  return sub_10000D208(*(id *)(v1 + 16), a1);
}

uint64_t sub_1000108A8@<X0>(uint64_t a1@<X8>)
{
  return sub_10000FE78(*(void *)(v1 + 16), *(void **)(v1 + 24), a1);
}

uint64_t sub_1000108C4@<X0>(uint64_t a1@<X8>)
{
  return sub_10000F240(*(void *)(v1 + 16), *(void **)(v1 + 24), a1);
}

uint64_t sub_1000108E0@<X0>(uint64_t a1@<X8>)
{
  return sub_10000F5E0(*(void *)(v1 + 16), *(void **)(v1 + 24), a1);
}

uint64_t sub_1000108FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10007C110();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100008FA4(&qword_1000A3718);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100008FA4(&qword_1000A3270);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  id v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  id v17 = (char *)&v33 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v33 - v18;
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (v20 = sub_10007D240(), char v21 = 0, (v20 & 1) != 0))
  {
    if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)
      || (v22 = sub_10007D240(), char v21 = 0, (v22 & 1) != 0))
    {
      if (*(unsigned __int8 *)(a1 + 32) != *(unsigned __int8 *)(a2 + 32))
      {
LABEL_8:
        char v21 = 0;
        return v21 & 1;
      }
      uint64_t v24 = *(void *)(a1 + 48);
      uint64_t v25 = *(void *)(a2 + 48);
      if (!v24)
      {
        if (v25) {
          goto LABEL_8;
        }
        goto LABEL_17;
      }
      if (!v25) {
        goto LABEL_8;
      }
      if (*(void *)(a1 + 40) == *(void *)(a2 + 40) && v24 == v25
        || (v26 = sub_10007D240(), char v21 = 0, (v26 & 1) != 0))
      {
LABEL_17:
        uint64_t v27 = type metadata accessor for NotesFolder();
        uint64_t v34 = v5;
        uint64_t v28 = v27;
        sub_100011F74(a1 + *(int *)(v27 + 32), (uint64_t)v19);
        uint64_t v33 = v28;
        sub_100011F74(a2 + *(int *)(v28 + 32), (uint64_t)v17);
        uint64_t v29 = (uint64_t)&v10[*(int *)(v8 + 48)];
        sub_100011F74((uint64_t)v19, (uint64_t)v10);
        uint64_t v36 = v29;
        sub_100011F74((uint64_t)v17, v29);
        uint64_t v30 = v34;
        os_log_type_t v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
        if (v35((uint64_t)v10, 1, v4) == 1)
        {
          sub_10000CBC8((uint64_t)v17, &qword_1000A3270);
          sub_10000CBC8((uint64_t)v19, &qword_1000A3270);
          if (v35(v36, 1, v4) == 1)
          {
            sub_10000CBC8((uint64_t)v10, &qword_1000A3270);
            goto LABEL_24;
          }
        }
        else
        {
          sub_100011F74((uint64_t)v10, (uint64_t)v14);
          if (v35(v36, 1, v4) != 1)
          {
            (*(void (**)(char *, uint64_t, uint64_t))(v30 + 32))(v7, v36, v4);
            sub_100011FDC(&qword_1000A3720);
            LODWORD(v36) = sub_10007CF00();
            uint64_t v31 = *(void (**)(char *, uint64_t))(v30 + 8);
            v31(v7, v4);
            sub_10000CBC8((uint64_t)v17, &qword_1000A3270);
            sub_10000CBC8((uint64_t)v19, &qword_1000A3270);
            v31(v14, v4);
            sub_10000CBC8((uint64_t)v10, &qword_1000A3270);
            if ((v36 & 1) == 0) {
              goto LABEL_8;
            }
LABEL_24:
            uint64_t v32 = v33;
            if (sub_10007CB10())
            {
              char v21 = sub_1000763D0(*(void *)(a1 + *(int *)(v32 + 40)), *(void *)(a2 + *(int *)(v32 + 40)));
              return v21 & 1;
            }
            goto LABEL_8;
          }
          sub_10000CBC8((uint64_t)v17, &qword_1000A3270);
          sub_10000CBC8((uint64_t)v19, &qword_1000A3270);
          (*(void (**)(char *, uint64_t))(v30 + 8))(v14, v4);
        }
        sub_10000CBC8((uint64_t)v10, &qword_1000A3718);
        goto LABEL_8;
      }
    }
  }
  return v21 & 1;
}

void *sub_100010D84(void *a1)
{
  id v1 = [a1 serverShareCheckingParent];
  uint64_t v2 = &_swiftEmptyArrayStorage;
  if (!v1) {
    return v2;
  }
  NSString v3 = v1;
  id v4 = [v1 ic_nonCurrentUserParticipants];

  sub_100011278(0, &qword_1000A3658);
  unint64_t v5 = sub_10007CFD0();

  unint64_t v6 = v5 >> 62;
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_10007D1E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v37 = sub_10007D1E0();
    swift_bridgeObjectRelease();
    if ((v37 & 0x8000000000000000) == 0) {
      goto LABEL_44;
    }
    __break(1u);
    goto LABEL_39;
  }
  if (*(uint64_t *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 3) {
    uint64_t v7 = 3;
  }
  else {
    uint64_t v7 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  while (1)
  {
    if ((v5 & 0xC000000000000001) != 0 && v7 != 0)
    {
      Swift::Int v9 = 0;
      do
      {
        Swift::Int v10 = v9 + 1;
        sub_10007D150(v9);
        Swift::Int v9 = v10;
      }
      while (v7 != v10);
    }
    if (v6)
    {
      swift_bridgeObjectRetain();
      unint64_t v6 = sub_10007D1F0();
      uint64_t v12 = v13;
      uint64_t v11 = v14;
      unint64_t v16 = v15;
      swift_bridgeObjectRelease_n();
      uint64_t v7 = v16 >> 1;
    }
    else
    {
      uint64_t v11 = 0;
      unint64_t v6 = v5 & 0xFFFFFFFFFFFFFF8;
      uint64_t v12 = (v5 & 0xFFFFFFFFFFFFFF8) + 32;
    }
    uint64_t v41 = (uint64_t)&_swiftEmptyArrayStorage;
    uint64_t v17 = (uint64_t)&_swiftEmptyArrayStorage;
    if (v7 == v11) {
      break;
    }
    uint64_t v18 = self;
    uint64_t v19 = v7 - v11;
    if (v7 > v11)
    {
      char v20 = (void *)v18;
      swift_unknownObjectRetain();
      char v21 = (void **)(v12 + 8 * v11);
      do
      {
        char v22 = *v21;
        sub_100008FA4(&qword_1000A3660);
        uint64_t v23 = swift_allocObject();
        *(_OWORD *)(v23 + 16) = xmmword_100080AE0;
        *(void *)(v23 + 32) = v22;
        id v24 = v22;
        sub_10007CFE0();
        uint64_t v25 = qword_1000A31E0;
        id v26 = v24;
        if (v25 != -1) {
          swift_once();
        }
        long long v27 = xmmword_1000B2440;
        id v28 = objc_allocWithZone((Class)ICThumbnailConfiguration);
        Class isa = sub_10007CFC0().super.isa;
        swift_bridgeObjectRelease();
        id v30 = [v28 initForAvatarWithParticipants:isa preferredSize:0 hasBorder:v27];

        id v31 = [v20 sharedThumbnailService];
        id v32 = [v31 thumbnailWithConfiguration:v30];

        if (v32)
        {
          id v33 = [v32 image];

          if (v33)
          {
            sub_10007CFB0();
            if (*(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_10007CFF0();
            }
            sub_10007D000();
            sub_10007CFE0();
          }
        }
        else
        {
        }
        ++v21;
        --v19;
      }
      while (v19);
      swift_unknownObjectRelease();
      uint64_t v17 = v41;
      break;
    }
LABEL_43:
    __break(1u);
LABEL_44:
    if (v17 >= 3) {
      uint64_t v39 = 3;
    }
    else {
      uint64_t v39 = v17;
    }
    if (v17 >= 0) {
      uint64_t v7 = v39;
    }
    else {
      uint64_t v7 = 3;
    }
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_10007D1E0();
    swift_bridgeObjectRelease();
    if (v40 < v7) {
      __break(1u);
    }
  }
  swift_unknownObjectRelease();
  if ((unint64_t)v17 >> 62)
  {
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_10007D1E0();
    swift_bridgeObjectRelease();
    if (!v34)
    {
LABEL_40:
      swift_bridgeObjectRelease();
      return &_swiftEmptyArrayStorage;
    }
  }
  else
  {
    uint64_t v34 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v34) {
      goto LABEL_40;
    }
  }
  uint64_t v41 = (uint64_t)&_swiftEmptyArrayStorage;
  unint64_t v5 = (unint64_t)&v41;
  sub_10007D1A0();
  if (v34 < 0)
  {
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v35 = 0;
  do
  {
    if ((v17 & 0xC000000000000001) != 0) {
      sub_10007D160();
    }
    else {
      id v36 = *(id *)(v17 + 8 * v35 + 32);
    }
    ++v35;
    sub_10007CAD0();
    sub_10007D180();
    sub_10007D1B0();
    sub_10007D1C0();
    sub_10007D190();
  }
  while (v34 != v35);
  uint64_t v2 = (void *)v41;
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_100011278(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t *sub_1000112B4(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

void *sub_100011318(uint64_t a1, uint64_t *a2, int *a3)
{
  id v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *id v4 = *a2;
    id v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v9 = a2[6];
    uint64_t v10 = a3[8];
    __dst = (void *)(a1 + v10);
    uint64_t v11 = (char *)a2 + v10;
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v9;
    uint64_t v12 = sub_10007C110();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v18 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v18(v11, 1, v12))
    {
      uint64_t v14 = sub_100008FA4(&qword_1000A3270);
      memcpy(__dst, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    uint64_t v16 = a3[10];
    *(void *)((char *)v4 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *(void *)((char *)v4 + v16) = *(uint64_t *)((char *)a2 + v16);
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_100011500(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_10007C110();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000115EC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 48);
  uint64_t v8 = a3[8];
  __dst = (void *)(a1 + v8);
  uint64_t v9 = (const void *)(a2 + v8);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  uint64_t v10 = sub_10007C110();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_100008FA4(&qword_1000A3270);
    memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v14 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100011778(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[8];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_10007C110();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_100008FA4(&qword_1000A3270);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100011998(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v7 = a3[8];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_10007C110();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_100008FA4(&qword_1000A3270);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  return a1;
}

uint64_t sub_100011AE0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[8];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = sub_10007C110();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_100008FA4(&qword_1000A3270);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_release();
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100011CC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100011CD4);
}

uint64_t sub_100011CD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100008FA4(&qword_1000A3270);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100011D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100011D9C);
}

uint64_t sub_100011D9C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100008FA4(&qword_1000A3270);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_100011E48()
{
  sub_100011F10();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_100011F10()
{
  if (!qword_1000A36D0)
  {
    sub_10007C110();
    unint64_t v0 = sub_10007D0E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000A36D0);
    }
  }
}

void *sub_100011F68()
{
  return &protocol witness table for String;
}

uint64_t sub_100011F74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100008FA4(&qword_1000A3270);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100011FDC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10007C110();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100012020()
{
  unint64_t result = qword_1000A3730;
  if (!qword_1000A3730)
  {
    sub_10000A43C(&qword_1000A3728);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3730);
  }
  return result;
}

uint64_t sub_10001207C()
{
  uint64_t v0 = sub_100008FA4(&qword_1000A3908);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_10007C090();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10007C1A0();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_10007CF20();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_10007C0A0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_10007C050();
  sub_1000112B4(v10, qword_1000B2228);
  sub_100010740(v10, (uint64_t)qword_1000B2228);
  sub_10007CF10();
  sub_10007C190();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_10007C0B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_10007C040();
}

uint64_t sub_10001235C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v29 = a1;
  uint64_t v1 = sub_100008FA4(&qword_1000A3970);
  __chkstk_darwin(v1 - 8);
  long long v27 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100008FA4(&qword_1000A3908);
  __chkstk_darwin(v3 - 8);
  id v30 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10007C090();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10007C1A0();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_10007CF20();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = sub_10007C0A0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  id v28 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  id v26 = (char *)&v24 - v15;
  sub_10007CF10();
  sub_10007C190();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  uint64_t v25 = v5;
  v17(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  sub_10007C0B0();
  sub_10007CF10();
  sub_10007C190();
  v17(v8, v16, v5);
  uint64_t v18 = v30;
  sub_10007C0B0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v18, 0, 1, v11);
  id v19 = (id)ICNotesAppBundleIdentifier();
  sub_10007CF40();

  char v20 = v27;
  sub_10007BEF0();
  uint64_t v21 = sub_10007BF00();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 0, 1, v21);
  sub_100008FA4(&qword_1000A3978);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100080BC0;
  sub_10007CF10();
  sub_10007C190();
  uint64_t v22 = v25;
  v17(v8, v16, v25);
  sub_10007C0B0();
  sub_10007CF10();
  sub_10007C190();
  v17(v8, v16, v22);
  sub_10007C0B0();
  return sub_10007BF10();
}

uint64_t sub_1000128AC()
{
  return sub_10007C020();
}

uint64_t sub_1000128D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a1;
  v3[4] = a3;
  sub_10007C0A0();
  v3[5] = swift_task_alloc();
  uint64_t v4 = sub_100008FA4(&qword_1000A3988);
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  return _swift_task_switch(sub_1000129C0, 0, 0);
}

uint64_t sub_1000129C0()
{
  uint64_t KeyPath = swift_getKeyPath();
  v0[9] = KeyPath;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[10] = v2;
  uint64_t v3 = sub_100008FA4(&qword_1000A3990);
  uint64_t v4 = sub_10000CAB4(&qword_1000A3950, &qword_1000A3958);
  v0[11] = v4;
  *uint64_t v2 = v0;
  v2[1] = sub_100012AC0;
  uint64_t v5 = v0[8];
  return _AppEntityUpdate.value<A>(of:)(v5, KeyPath, v3, v4);
}

uint64_t sub_100012AC0()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100012BD8, 0, 0);
}

uint64_t sub_100012BD8()
{
  if ((*(unsigned int (**)(void, void))(*(void *)(v0 + 56) + 88))(*(void *)(v0 + 64), *(void *)(v0 + 48)) == enum case for _IntentValueState.set<A>(_:))
  {
    uint64_t v1 = *(char **)(v0 + 64);
    (*(void (**)(char *, void))(*(void *)(v0 + 56) + 96))(v1, *(void *)(v0 + 48));
    char v2 = *v1;
    sub_100008FA4(&qword_1000A3938);
    sub_10007C080();
    *(void *)(v0 + 16) = sub_10007C030();
    *(unsigned char *)(v0 + 120) = v2;
    uint64_t KeyPath = swift_getKeyPath();
    *(void *)(v0 + 96) = KeyPath;
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_100012E0C;
    uint64_t v5 = *(void *)(v0 + 88);
    return AppEntity._setValue<A>(_:for:)(v0 + 120, KeyPath, v5);
  }
  else
  {
    (*(void (**)(void, void))(*(void *)(v0 + 56) + 8))(*(void *)(v0 + 64), *(void *)(v0 + 48));
    sub_10007BC30();
    sub_100016C94();
    swift_allocError();
    sub_10007BEC0();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
}

uint64_t sub_100012E0C()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    char v2 = sub_100012FE0;
  }
  else {
    char v2 = sub_100012F48;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100012F48()
{
  sub_1000155E0();
  sub_10007BC20();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100012FE0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100013050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_1000130F0;
  return sub_1000128D0(a1, v6, a3);
}

uint64_t sub_1000130F0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1000131E8()
{
  uint64_t v0 = qword_1000A3740;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_100013220(uint64_t a1)
{
  unint64_t v2 = sub_100015638();

  return _EntityURLRepresentation.init(stringLiteral:)(0xD00000000000004FLL, 0x80000001000876D0, a1, v2);
}

uint64_t sub_10001327C()
{
  sub_100016AF8();
  uint64_t v2 = sub_10007BFC0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_100016C54(v3, v0, v2, v1);
}

uint64_t sub_100013310@<X0>(uint64_t *a1@<X8>)
{
  sub_100015FE0();
  uint64_t result = sub_10007BD10();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100013354@<X0>(uint64_t a1@<X8>)
{
  return sub_100014F9C(&qword_1000A3120, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1000B2228, a1);
}

uint64_t sub_10001338C(uint64_t a1)
{
  unint64_t v2 = sub_100015638();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_1000133DC(uint64_t a1)
{
  unint64_t v2 = sub_100015A0C();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_100013428()
{
  uint64_t v0 = sub_100008FA4(&qword_1000A3908);
  __chkstk_darwin(v0 - 8);
  unint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_10007C090();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10007C1A0();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_10007CF20();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_10007C0A0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_10007C050();
  sub_1000112B4(v10, static LinesAndGridsOption.typeDisplayRepresentation);
  sub_100010740(v10, (uint64_t)static LinesAndGridsOption.typeDisplayRepresentation);
  sub_10007CF10();
  sub_10007C190();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_10007C0B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_10007C040();
}

uint64_t LinesAndGridsOption.typeDisplayRepresentation.unsafeMutableAddressor()
{
  if (qword_1000A3128 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_10007C050();

  return sub_100010740(v0, (uint64_t)static LinesAndGridsOption.typeDisplayRepresentation);
}

uint64_t static LinesAndGridsOption.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1000A3128 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10007C050();
  uint64_t v3 = sub_100010740(v2, (uint64_t)static LinesAndGridsOption.typeDisplayRepresentation);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

unint64_t sub_100013810()
{
  uint64_t v0 = sub_100008FA4(&qword_1000A3970);
  __chkstk_darwin(v0 - 8);
  uint64_t v89 = (char *)&v66 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_100008FA4(&qword_1000A3908);
  __chkstk_darwin(v2 - 8);
  uint64_t v76 = (char *)&v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10007C090();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10007C1A0();
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10007CF20();
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_10007C0A0();
  uint64_t v91 = *(void *)(v86 - 8);
  uint64_t v14 = __chkstk_darwin(v86);
  uint64_t v73 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v71 = (char *)&v66 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  id v70 = (char *)&v66 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v69 = (char *)&v66 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v68 = (char *)&v66 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v67 = (char *)&v66 - v25;
  __chkstk_darwin(v24);
  sub_100008FA4(&qword_1000A39A0);
  id v26 = (int *)(sub_100008FA4(&qword_1000A39A8) - 8);
  uint64_t v27 = *(void *)v26;
  uint64_t v79 = *(void *)(*(void *)v26 + 72);
  unint64_t v28 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  uint64_t v29 = swift_allocObject();
  uint64_t v72 = v29;
  *(_OWORD *)(v29 + 16) = xmmword_100080BD0;
  unsigned int v82 = v26;
  unint64_t v83 = v29 + v28;
  *(unsigned char *)(v29 + v28) = 0;
  uint64_t v66 = (unsigned char *)(v29 + v28 + v26[14]);
  sub_10007CF10();
  uint64_t v75 = v10;
  sub_10007C190();
  unsigned int v80 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  id v30 = *(void (**)(void))(v5 + 104);
  uint64_t v84 = v5 + 104;
  id v85 = (void (*)(char *, void, uint64_t))v30;
  uint64_t v90 = v7;
  id v31 = v7;
  uint64_t v32 = v4;
  uint64_t v81 = v4;
  v30(v31);
  sub_10007C0B0();
  unint64_t v77 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v91 + 56);
  v91 += 56;
  id v33 = v76;
  uint64_t v34 = v86;
  v77(v76, 1, 1, v86);
  uint64_t v78 = sub_10007BF00();
  uint64_t v35 = *(void *)(v78 - 8);
  id v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56);
  uint64_t v87 = v35 + 56;
  uint64_t v88 = v36;
  uint64_t v37 = v89;
  v36(v89, 1, 1, v78);
  unint64_t v38 = v33;
  uint64_t v39 = v37;
  sub_10007BF20();
  unint64_t v40 = v83;
  uint64_t v41 = v79;
  *(unsigned char *)(v83 + v79) = 1;
  uint64_t v66 = (unsigned char *)(v40 + v41 + v26[14]);
  sub_10007CF10();
  sub_10007C190();
  uint64_t v42 = v80;
  v85(v90, v80, v32);
  sub_10007C0B0();
  uint64_t v43 = v38;
  uint64_t v44 = v77;
  v77(v43, 1, 1, v34);
  v88(v39, 1, 1, v78);
  sub_10007BF20();
  uint64_t v67 = (char *)(2 * v41);
  uint64_t v45 = (unsigned char *)(v40 + 2 * v41);
  *uint64_t v45 = 2;
  uint64_t v66 = &v45[v82[14]];
  id v74 = v13;
  sub_10007CF10();
  sub_10007C190();
  uint64_t v46 = v81;
  uint64_t v47 = v85;
  v85(v90, v42, v81);
  sub_10007C0B0();
  id v48 = v76;
  v44(v76, 1, 1, v86);
  uint64_t v49 = v78;
  v88(v89, 1, 1, v78);
  sub_10007BF20();
  uint64_t v50 = v82;
  unint64_t v51 = v83;
  uint64_t v52 = &v67[v79 + v83];
  char *v52 = 3;
  uint64_t v68 = &v52[v50[14]];
  sub_10007CF10();
  sub_10007C190();
  v47(v90, v80, v46);
  sub_10007C0B0();
  uint64_t v53 = v86;
  v77(v48, 1, 1, v86);
  v88(v89, 1, 1, v49);
  sub_10007BF20();
  uint64_t v54 = v79;
  os_log_type_t v55 = (unsigned char *)(v51 + 4 * v79);
  *os_log_type_t v55 = 4;
  uint64_t v69 = &v55[v50[14]];
  sub_10007CF10();
  sub_10007C190();
  uint64_t v56 = v80;
  v47(v90, v80, v81);
  sub_10007C0B0();
  uint64_t v57 = v77;
  v77(v48, 1, 1, v53);
  uint64_t v58 = v78;
  v88(v89, 1, 1, v78);
  sub_10007BF20();
  uint64_t v59 = (unsigned char *)(v83 + 5 * v54);
  *uint64_t v59 = 5;
  id v70 = &v59[v82[14]];
  sub_10007CF10();
  sub_10007C190();
  v85(v90, v56, v81);
  sub_10007C0B0();
  uint64_t v60 = v76;
  uint64_t v61 = v86;
  v57(v76, 1, 1, v86);
  uint64_t v62 = v89;
  uint64_t v63 = v58;
  uint64_t v64 = v88;
  v88(v89, 1, 1, v63);
  sub_10007BF20();
  *(unsigned char *)(v83 + 6 * v79) = 6;
  sub_10007CF10();
  sub_10007C190();
  v85(v90, v80, v81);
  sub_10007C0B0();
  v77(v60, 1, 1, v61);
  v64(v62, 1, 1, v78);
  sub_10007BF20();
  unint64_t result = sub_100025844(v72);
  static LinesAndGridsOption.caseDisplayRepresentations = result;
  return result;
}

uint64_t *LinesAndGridsOption.caseDisplayRepresentations.unsafeMutableAddressor()
{
  if (qword_1000A3130 != -1) {
    swift_once();
  }
  return &static LinesAndGridsOption.caseDisplayRepresentations;
}

uint64_t static LinesAndGridsOption.caseDisplayRepresentations.getter()
{
  if (qword_1000A3130 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static LinesAndGridsOption.caseDisplayRepresentations.setter(uint64_t a1)
{
  if (qword_1000A3130 != -1) {
    swift_once();
  }
  swift_beginAccess();
  static LinesAndGridsOption.caseDisplayRepresentations = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static LinesAndGridsOption.caseDisplayRepresentations.modify())()
{
  if (qword_1000A3130 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

_UNKNOWN **static LinesAndGridsOption.allCases.getter()
{
  return &off_10009E680;
}

uint64_t LinesAndGridsOption.rawValue.getter(char a1)
{
  return *(void *)&aNone_1[8 * a1];
}

uint64_t sub_100014590(char *a1, char *a2)
{
  return sub_100025A90(*a1, *a2);
}

uint64_t sub_10001459C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = _s37com_apple_mobilenotes_WidgetExtension19LinesAndGridsOptionO8rawValueACSgSS_tcfC_0(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_1000145CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = LinesAndGridsOption.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

Swift::Int sub_1000145F8()
{
  return sub_100025D1C();
}

uint64_t sub_100014604()
{
  return sub_100025C0C();
}

Swift::Int sub_10001460C()
{
  return sub_100025D1C();
}

uint64_t sub_100014614@<X0>(uint64_t a1@<X8>)
{
  return sub_100014F9C(&qword_1000A3128, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)static LinesAndGridsOption.typeDisplayRepresentation, a1);
}

uint64_t sub_10001464C(uint64_t a1)
{
  unint64_t v2 = sub_100015DEC();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_100014698(uint64_t a1)
{
  unint64_t v2 = sub_100015D6C();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

void sub_1000146E4(void *a1@<X8>)
{
  *a1 = &off_10009E680;
}

uint64_t sub_1000146F4(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_1000A3930 + dword_1000A3930);
  unint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *unint64_t v2 = v1;
  v2[1] = sub_100016CEC;
  return v4();
}

uint64_t sub_100014798(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_1000156E8();
  *uint64_t v4 = v2;
  v4[1] = sub_100014848;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

uint64_t sub_100014848(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (!v1) {
    **(void **)(v4 + 16) = a1;
  }
  uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
  return v6();
}

uint64_t sub_10001495C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1000156E8();
  void *v5 = v2;
  v5[1] = sub_100014A10;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_100014A10(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_100014B10(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_1000156E8();
  *uint64_t v4 = v2;
  v4[1] = sub_100016CEC;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

uint64_t sub_100014BC0(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1000158A0();
  void *v5 = v2;
  v5[1] = sub_100016CF0;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t sub_100014C74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_1000130F0;
  return DynamicOptionsProvider.defaultResult()(a1, a2, a3);
}

uint64_t sub_100014D2C()
{
  uint64_t v0 = sub_10007C0A0();
  sub_1000112B4(v0, qword_1000B2260);
  sub_100010740(v0, (uint64_t)qword_1000B2260);
  return sub_10007C080();
}

uint64_t sub_100014D90@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_10007BD30();
  *a1 = v3;
  return result;
}

uint64_t sub_100014DCC()
{
  return swift_release();
}

void (*sub_100014E14(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_10007BD20();
  return sub_100014E70;
}

void sub_100014E70(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);

  free(v1);
}

uint64_t sub_100014EBC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100016A50();
  unint64_t v5 = sub_100016AF8();

  return static _URLRepresentableIntent<>.urlRepresentation.getter(a1, v4, a2, v5);
}

uint64_t sub_100014F28()
{
  uint64_t v0 = qword_1000A3750;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_100014F64@<X0>(uint64_t a1@<X8>)
{
  return sub_100014F9C(&qword_1000A3138, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1000B2260, a1);
}

uint64_t sub_100014F9C@<X0>(void *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = sub_100010740(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t sub_100015040()
{
  return 0;
}

uint64_t sub_10001504C()
{
  return 1;
}

uint64_t sub_10001505C(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100016A50();
  unint64_t v7 = sub_100016AA4();
  unint64_t v8 = sub_100016AF8();
  void *v5 = v2;
  v5[1] = sub_100015130;
  return _URLRepresentableIntent<>.perform()(a1, a2, v6, v7, v8);
}

uint64_t sub_100015130()
{
  uint64_t v2 = *v1;
  uint64_t result = swift_task_dealloc();
  if (v0)
  {
    unint64_t v4 = *(uint64_t (**)(void))(v2 + 8);
    return v4();
  }
  return result;
}

uint64_t sub_100015238@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10001676C();
  *a1 = result;
  return result;
}

uint64_t sub_100015260(uint64_t a1)
{
  unint64_t v2 = sub_100016210();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t sub_10001529C(uint64_t a1)
{
  *(void *)(v1 + 88) = a1;
  return _swift_task_switch(sub_1000152BC, 0, 0);
}

uint64_t sub_1000152BC()
{
  uint64_t v1 = self;
  NSString v2 = sub_10007CF30();
  id v3 = [v1 objectForKey:v2];

  if (v3)
  {
    sub_10007D110();
    swift_unknownObjectRelease();
  }
  else
  {
    *(_OWORD *)(v0 + 48) = 0u;
    *(_OWORD *)(v0 + 64) = 0u;
  }
  sub_100016B4C(v0 + 48, v0 + 16);
  if (!*(void *)(v0 + 40))
  {
    sub_100016BB4(v0 + 16);
    goto LABEL_9;
  }
  unint64_t v4 = (id *)(v0 + 80);
  sub_100016C14();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    LOBYTE(v7) = 0;
    goto LABEL_10;
  }
  id v5 = *v4;
  id v6 = [*v4 unsignedIntegerValue];

  unint64_t v7 = 0x605040302010000uLL >> (8 * v6);
  if ((unint64_t)v6 >= 8) {
    LOBYTE(v7) = 0;
  }
LABEL_10:
  **(unsigned char **)(v0 + 88) = v7;
  unint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_100015434(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 24) = *a2;
  return _swift_task_switch(sub_100015458, 0, 0);
}

uint64_t sub_100015458()
{
  *(void *)(v0 + 16) = *(unsigned __int8 *)(v0 + 24) + 1;
  type metadata accessor for ICPaperStyleType();
  uint64_t v1 = sub_10007D250();
  uint64_t v2 = self;
  NSString v3 = sub_10007CF30();
  [v2 setObject:v1 forKey:v3];

  swift_unknownObjectRelease();
  unint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t _s37com_apple_mobilenotes_WidgetExtension19LinesAndGridsOptionO8rawValueACSgSS_tcfC_0(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_10009E5B8;
  v6._object = a2;
  unint64_t v4 = sub_10007D220(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 7) {
    return 7;
  }
  else {
    return v4;
  }
}

unint64_t sub_100015588()
{
  unint64_t result = qword_1000A3760;
  if (!qword_1000A3760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3760);
  }
  return result;
}

unint64_t sub_1000155E0()
{
  unint64_t result = qword_1000A3768;
  if (!qword_1000A3768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3768);
  }
  return result;
}

unint64_t sub_100015638()
{
  unint64_t result = qword_1000A3778;
  if (!qword_1000A3778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3778);
  }
  return result;
}

unint64_t sub_100015690()
{
  unint64_t result = qword_1000A3780;
  if (!qword_1000A3780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3780);
  }
  return result;
}

unint64_t sub_1000156E8()
{
  unint64_t result = qword_1000A3788;
  if (!qword_1000A3788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3788);
  }
  return result;
}

unint64_t sub_100015740()
{
  unint64_t result = qword_1000A3790;
  if (!qword_1000A3790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3790);
  }
  return result;
}

unint64_t sub_100015798()
{
  unint64_t result = qword_1000A3798;
  if (!qword_1000A3798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3798);
  }
  return result;
}

unint64_t sub_1000157F0()
{
  unint64_t result = qword_1000A37A0;
  if (!qword_1000A37A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A37A0);
  }
  return result;
}

unint64_t sub_100015848()
{
  unint64_t result = qword_1000A37A8;
  if (!qword_1000A37A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A37A8);
  }
  return result;
}

unint64_t sub_1000158A0()
{
  unint64_t result = qword_1000A37B0;
  if (!qword_1000A37B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A37B0);
  }
  return result;
}

void *sub_1000158F4()
{
  return &protocol witness table for String;
}

unint64_t sub_100015904()
{
  unint64_t result = qword_1000A37C0;
  if (!qword_1000A37C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A37C0);
  }
  return result;
}

unint64_t sub_10001595C()
{
  unint64_t result = qword_1000A37C8;
  if (!qword_1000A37C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A37C8);
  }
  return result;
}

unint64_t sub_1000159B4()
{
  unint64_t result = qword_1000A37D0;
  if (!qword_1000A37D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A37D0);
  }
  return result;
}

unint64_t sub_100015A0C()
{
  unint64_t result = qword_1000A37D8;
  if (!qword_1000A37D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A37D8);
  }
  return result;
}

uint64_t sub_100015A60()
{
  return sub_10000CAB4(&qword_1000A37E0, &qword_1000A37E8);
}

unint64_t sub_100015AA0()
{
  unint64_t result = qword_1000A37F0;
  if (!qword_1000A37F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A37F0);
  }
  return result;
}

unint64_t sub_100015AF8()
{
  unint64_t result = qword_1000A37F8;
  if (!qword_1000A37F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A37F8);
  }
  return result;
}

unint64_t sub_100015B50()
{
  unint64_t result = qword_1000A3800;
  if (!qword_1000A3800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3800);
  }
  return result;
}

unint64_t sub_100015BA8()
{
  unint64_t result = qword_1000A3808;
  if (!qword_1000A3808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3808);
  }
  return result;
}

unint64_t sub_100015C00()
{
  unint64_t result = qword_1000A3810;
  if (!qword_1000A3810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3810);
  }
  return result;
}

void *sub_100015C54()
{
  return &protocol witness table for String;
}

unint64_t sub_100015C64()
{
  unint64_t result = qword_1000A3818;
  if (!qword_1000A3818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3818);
  }
  return result;
}

unint64_t sub_100015CBC()
{
  unint64_t result = qword_1000A3820;
  if (!qword_1000A3820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3820);
  }
  return result;
}

unint64_t sub_100015D14()
{
  unint64_t result = qword_1000A3828;
  if (!qword_1000A3828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3828);
  }
  return result;
}

unint64_t sub_100015D6C()
{
  unint64_t result = qword_1000A3830;
  if (!qword_1000A3830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3830);
  }
  return result;
}

uint64_t sub_100015DC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100016398(a1, a2, a3, (void (*)(void))sub_100015DEC);
}

unint64_t sub_100015DEC()
{
  unint64_t result = qword_1000A3838;
  if (!qword_1000A3838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3838);
  }
  return result;
}

unint64_t sub_100015E44()
{
  unint64_t result = qword_1000A3840;
  if (!qword_1000A3840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3840);
  }
  return result;
}

unint64_t sub_100015E9C()
{
  unint64_t result = qword_1000A3848;
  if (!qword_1000A3848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3848);
  }
  return result;
}

unint64_t sub_100015EF4()
{
  unint64_t result = qword_1000A3850;
  if (!qword_1000A3850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3850);
  }
  return result;
}

uint64_t sub_100015F48()
{
  return sub_10000CAB4(&qword_1000A3858, &qword_1000A3860);
}

unint64_t sub_100015F88()
{
  unint64_t result = qword_1000A3868;
  if (!qword_1000A3868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3868);
  }
  return result;
}

unint64_t sub_100015FE0()
{
  unint64_t result = qword_1000A3870[0];
  if (!qword_1000A3870[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000A3870);
  }
  return result;
}

unint64_t sub_100016038()
{
  unint64_t result = qword_1000A3888;
  if (!qword_1000A3888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3888);
  }
  return result;
}

unint64_t sub_100016090()
{
  unint64_t result = qword_1000A3890[0];
  if (!qword_1000A3890[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000A3890);
  }
  return result;
}

unint64_t sub_1000160E8()
{
  unint64_t result = qword_1000A38A8;
  if (!qword_1000A38A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A38A8);
  }
  return result;
}

unint64_t sub_100016140()
{
  unint64_t result = qword_1000A38B0;
  if (!qword_1000A38B0)
  {
    sub_10000A43C(qword_1000A38B8);
    sub_1000159B4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A38B0);
  }
  return result;
}

unint64_t sub_1000161B8()
{
  unint64_t result = qword_1000A38D0;
  if (!qword_1000A38D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A38D0);
  }
  return result;
}

unint64_t sub_100016210()
{
  unint64_t result = qword_1000A38D8;
  if (!qword_1000A38D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A38D8);
  }
  return result;
}

unint64_t sub_100016268()
{
  unint64_t result = qword_1000A38E0;
  if (!qword_1000A38E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A38E0);
  }
  return result;
}

unint64_t sub_1000162C0()
{
  unint64_t result = qword_1000A38E8;
  if (!qword_1000A38E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A38E8);
  }
  return result;
}

unint64_t sub_100016318()
{
  unint64_t result = qword_1000A38F0;
  if (!qword_1000A38F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A38F0);
  }
  return result;
}

uint64_t sub_10001636C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100016398(a1, a2, a3, (void (*)(void))sub_100016210);
}

uint64_t sub_100016398(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return swift_getOpaqueTypeConformance2();
}

unsigned char *initializeBufferWithCopyOfBuffer for LinesAndGridsOption(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for LinesAndGridsOption(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for LinesAndGridsOption(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10001654CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

uint64_t sub_100016574(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_10001657C(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for LinesAndGridsOption()
{
  return &type metadata for LinesAndGridsOption;
}

ValueMetadata *type metadata accessor for OpenLinesAndGridsDeepLink()
{
  return &type metadata for OpenLinesAndGridsDeepLink;
}

ValueMetadata *type metadata accessor for LinesAndGridsEntityQuery()
{
  return &type metadata for LinesAndGridsEntityQuery;
}

ValueMetadata *type metadata accessor for LinesAndGridsEntity()
{
  return &type metadata for LinesAndGridsEntity;
}

ValueMetadata *type metadata accessor for LinesAndGridsEntity.ChangeLinesAndGridsEntityHandler()
{
  return &type metadata for LinesAndGridsEntity.ChangeLinesAndGridsEntityHandler;
}

uint64_t sub_1000165D4()
{
  sub_10007C0A0();
  *(void *)(v0 + 16) = swift_task_alloc();
  return _swift_task_switch(sub_100016660, 0, 0);
}

uint64_t sub_100016660()
{
  sub_100008FA4(&qword_1000A3938);
  sub_10007C080();
  sub_10000CAB4(&qword_1000A3950, &qword_1000A3958);
  uint64_t v1 = sub_10007C030();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_10001676C()
{
  v17[0] = sub_10007BFB0();
  uint64_t v0 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v2 = (char *)v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100008FA4(&qword_1000A3900);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  unsigned int v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  int v8 = (char *)v17 - v7;
  uint64_t v9 = sub_100008FA4(&qword_1000A3908);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10007C0A0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  sub_100008FA4(&qword_1000A3910);
  sub_10007C080();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  v17[1] = 0;
  uint64_t v14 = sub_10007BCF0();
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  v15(v8, 1, 1, v14);
  v15(v6, 1, 1, v14);
  (*(void (**)(char *, void, void))(v0 + 104))(v2, enum case for InputConnectionBehavior.default(_:), v17[0]);
  sub_100015638();
  return sub_10007BD50();
}

unint64_t sub_100016A50()
{
  unint64_t result = qword_1000A3918;
  if (!qword_1000A3918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3918);
  }
  return result;
}

unint64_t sub_100016AA4()
{
  unint64_t result = qword_1000A3920;
  if (!qword_1000A3920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3920);
  }
  return result;
}

unint64_t sub_100016AF8()
{
  unint64_t result = qword_1000A3928;
  if (!qword_1000A3928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3928);
  }
  return result;
}

uint64_t sub_100016B4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100008FA4(&qword_1000A3960);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100016BB4(uint64_t a1)
{
  uint64_t v2 = sub_100008FA4(&qword_1000A3960);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100016C14()
{
  unint64_t result = qword_1000A3968;
  if (!qword_1000A3968)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000A3968);
  }
  return result;
}

uint64_t sub_100016C54(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1(a3, a4);
}

uint64_t sub_100016C68@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10007C020();
  *a1 = result;
  return result;
}

unint64_t sub_100016C94()
{
  unint64_t result = qword_1000A3998;
  if (!qword_1000A3998)
  {
    sub_10007BC30();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3998);
  }
  return result;
}

unint64_t sub_100016CF8()
{
  unint64_t result = qword_1000A39D0;
  if (!qword_1000A39D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A39D0);
  }
  return result;
}

unint64_t sub_100016D50()
{
  unint64_t result = qword_1000A39D8;
  if (!qword_1000A39D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A39D8);
  }
  return result;
}

uint64_t sub_100016DA4()
{
  uint64_t v0 = sub_100008FA4(&qword_1000A3908);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_10007C090();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10007C1A0();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_10007CF20();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_10007C0A0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_10007C050();
  sub_1000112B4(v10, qword_1000B2278);
  sub_100010740(v10, (uint64_t)qword_1000B2278);
  sub_10007CF10();
  sub_10007C190();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_10007C0B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_10007C040();
}

uint64_t sub_10001707C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v1 = sub_100008FA4(&qword_1000A3970);
  __chkstk_darwin(v1 - 8);
  id v30 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100008FA4(&qword_1000A3908);
  __chkstk_darwin(v3 - 8);
  uint64_t v29 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10007C090();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10007C1A0();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_10007CF20();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = sub_10007C0A0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v27 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  id v26 = (char *)&v24 - v15;
  sub_10007CF10();
  sub_10007C190();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  uint64_t v25 = v5;
  v17(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  sub_10007C0B0();
  sub_10007CF10();
  sub_10007C190();
  v17(v8, v16, v5);
  uint64_t v18 = v29;
  sub_10007C0B0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v18, 0, 1, v11);
  id v19 = (id)ICNotesAppBundleIdentifier();
  sub_10007CF40();

  uint64_t v20 = v30;
  sub_10007BEF0();
  uint64_t v21 = sub_10007BF00();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 0, 1, v21);
  sub_100008FA4(&qword_1000A3978);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100080BC0;
  sub_10007CF10();
  sub_10007C190();
  uint64_t v22 = v25;
  v17(v8, v16, v25);
  sub_10007C0B0();
  sub_10007CF10();
  sub_10007C190();
  v17(v8, v16, v22);
  sub_10007C0B0();
  return sub_10007BF10();
}

uint64_t sub_1000175BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a1;
  v3[4] = a3;
  sub_10007C0A0();
  v3[5] = swift_task_alloc();
  uint64_t v4 = sub_100008FA4(&qword_1000A3B48);
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  return _swift_task_switch(sub_1000176AC, 0, 0);
}

uint64_t sub_1000176AC()
{
  uint64_t KeyPath = swift_getKeyPath();
  v0[9] = KeyPath;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[10] = v2;
  uint64_t v3 = sub_100008FA4(&qword_1000A3B50);
  uint64_t v4 = sub_10000CAB4(&qword_1000A3B30, &qword_1000A3B38);
  v0[11] = v4;
  *uint64_t v2 = v0;
  v2[1] = sub_1000177AC;
  uint64_t v5 = v0[8];
  return _AppEntityUpdate.value<A>(of:)(v5, KeyPath, v3, v4);
}

uint64_t sub_1000177AC()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_1000178C4, 0, 0);
}

uint64_t sub_1000178C4()
{
  if ((*(unsigned int (**)(void, void))(*(void *)(v0 + 56) + 88))(*(void *)(v0 + 64), *(void *)(v0 + 48)) == enum case for _IntentValueState.set<A>(_:))
  {
    uint64_t v1 = *(char **)(v0 + 64);
    (*(void (**)(char *, void))(*(void *)(v0 + 56) + 96))(v1, *(void *)(v0 + 48));
    char v2 = *v1;
    sub_100008FA4(&qword_1000A3B18);
    sub_10007C080();
    *(void *)(v0 + 16) = sub_10007C030();
    *(unsigned char *)(v0 + 120) = v2;
    uint64_t KeyPath = swift_getKeyPath();
    *(void *)(v0 + 96) = KeyPath;
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_100017AF0;
    uint64_t v5 = *(void *)(v0 + 88);
    return AppEntity._setValue<A>(_:for:)(v0 + 120, KeyPath, v5);
  }
  else
  {
    (*(void (**)(void, void))(*(void *)(v0 + 56) + 8))(*(void *)(v0 + 64), *(void *)(v0 + 48));
    sub_10007BC30();
    sub_100016C94();
    swift_allocError();
    sub_10007BEC0();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
}

uint64_t sub_100017AF0()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    char v2 = sub_100012FE0;
  }
  else {
    char v2 = sub_100017C2C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100017C2C()
{
  sub_100016D50();
  sub_10007BC20();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100017CC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_1000130F0;
  return sub_1000175BC(a1, v6, a3);
}

unint64_t sub_100017D68()
{
  unint64_t result = qword_1000A39E8;
  if (!qword_1000A39E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A39E8);
  }
  return result;
}

unint64_t sub_100017DC0()
{
  unint64_t result = qword_1000A39F0;
  if (!qword_1000A39F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A39F0);
  }
  return result;
}

unint64_t sub_100017E18()
{
  unint64_t result = qword_1000A39F8;
  if (!qword_1000A39F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A39F8);
  }
  return result;
}

uint64_t sub_100017E6C()
{
  uint64_t v0 = qword_1000A39B0;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_100017EA8()
{
  unint64_t result = qword_1000A3A00;
  if (!qword_1000A3A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3A00);
  }
  return result;
}

uint64_t sub_100017EFC(uint64_t a1)
{
  unint64_t v2 = sub_100017D68();

  return _EntityURLRepresentation.init(stringLiteral:)(0xD000000000000057, 0x8000000100087830, a1, v2);
}

unint64_t sub_100017F5C()
{
  unint64_t result = qword_1000A3A08;
  if (!qword_1000A3A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3A08);
  }
  return result;
}

unint64_t sub_100017FB4()
{
  unint64_t result = qword_1000A3A10;
  if (!qword_1000A3A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3A10);
  }
  return result;
}

unint64_t sub_10001800C()
{
  unint64_t result = qword_1000A3A18;
  if (!qword_1000A3A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3A18);
  }
  return result;
}

unint64_t sub_100018064()
{
  unint64_t result = qword_1000A3A20;
  if (!qword_1000A3A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3A20);
  }
  return result;
}

uint64_t sub_1000180B8()
{
  sub_1000194B4();
  uint64_t v2 = sub_10007BFC0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_100016C54(v3, v0, v2, v1);
}

unint64_t sub_100018150()
{
  unint64_t result = qword_1000A3A30;
  if (!qword_1000A3A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3A30);
  }
  return result;
}

unint64_t sub_1000181A8()
{
  unint64_t result = qword_1000A3A38;
  if (!qword_1000A3A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3A38);
  }
  return result;
}

unint64_t sub_100018200()
{
  unint64_t result = qword_1000A3A40;
  if (!qword_1000A3A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3A40);
  }
  return result;
}

unint64_t sub_100018258()
{
  unint64_t result = qword_1000A3A48;
  if (!qword_1000A3A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3A48);
  }
  return result;
}

uint64_t sub_1000182AC@<X0>(uint64_t *a1@<X8>)
{
  sub_1000184B0();
  uint64_t result = sub_10007BD10();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1000182EC@<X0>(uint64_t a1@<X8>)
{
  return sub_100018DD0(&qword_1000A3140, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1000B2278, a1);
}

uint64_t sub_100018324()
{
  return sub_10000CAB4(&qword_1000A3A50, &qword_1000A3A58);
}

uint64_t sub_100018360(uint64_t a1)
{
  unint64_t v2 = sub_100017D68();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1000183B0()
{
  unint64_t result = qword_1000A3A60;
  if (!qword_1000A3A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3A60);
  }
  return result;
}

uint64_t sub_100018408(uint64_t a1)
{
  unint64_t v2 = sub_100018258();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_100018458()
{
  unint64_t result = qword_1000A3A68;
  if (!qword_1000A3A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3A68);
  }
  return result;
}

unint64_t sub_1000184B0()
{
  unint64_t result = qword_1000A3A70[0];
  if (!qword_1000A3A70[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000A3A70);
  }
  return result;
}

uint64_t sub_100018504(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  sub_10007C0A0();
  *(void *)(v1 + 24) = swift_task_alloc();
  return _swift_task_switch(sub_100018594, 0, 0);
}

uint64_t sub_100018594()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  sub_100008FA4(&qword_1000A3B18);
  sub_10007C080();
  sub_10000CAB4(&qword_1000A3B30, &qword_1000A3B38);
  *uint64_t v1 = sub_10007C030();
  swift_task_dealloc();
  unint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10001869C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_100017E18();
  *uint64_t v4 = v2;
  v4[1] = sub_100014848;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_100018750()
{
  unint64_t result = qword_1000A3A88;
  if (!qword_1000A3A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3A88);
  }
  return result;
}

unint64_t sub_1000187A8()
{
  unint64_t result = qword_1000A3A90[0];
  if (!qword_1000A3A90[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000A3A90);
  }
  return result;
}

uint64_t sub_1000187FC(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100017E18();
  void *v5 = v2;
  v5[1] = sub_100014A10;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_1000188B0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_100017E18();
  *uint64_t v4 = v2;
  v4[1] = sub_100016CEC;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_100018964()
{
  unint64_t result = qword_1000A3AA8;
  if (!qword_1000A3AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3AA8);
  }
  return result;
}

unint64_t sub_1000189BC()
{
  unint64_t result = qword_1000A3AB0;
  if (!qword_1000A3AB0)
  {
    sub_10000A43C(qword_1000A3AB8);
    sub_100018200();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3AB0);
  }
  return result;
}

uint64_t sub_100018A30(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100018064();
  void *v5 = v2;
  v5[1] = sub_100016CF0;
  return EntityQuery.results()(a1, a2, v6);
}

unint64_t sub_100018AE8()
{
  unint64_t result = qword_1000A3AD0;
  if (!qword_1000A3AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3AD0);
  }
  return result;
}

uint64_t sub_100018B3C()
{
  uint64_t v0 = sub_10007C0A0();
  sub_1000112B4(v0, qword_1000B2290);
  sub_100010740(v0, (uint64_t)qword_1000B2290);
  return sub_10007C080();
}

unint64_t sub_100018BA4()
{
  unint64_t result = qword_1000A3AD8;
  if (!qword_1000A3AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3AD8);
  }
  return result;
}

uint64_t sub_100018BF8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_10001940C();
  unint64_t v5 = sub_1000194B4();

  return static _URLRepresentableIntent<>.urlRepresentation.getter(a1, v4, a2, v5);
}

uint64_t sub_100018C60()
{
  uint64_t v0 = qword_1000A39C0;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_100018C9C()
{
  unint64_t result = qword_1000A3AE0;
  if (!qword_1000A3AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3AE0);
  }
  return result;
}

unint64_t sub_100018CF4()
{
  unint64_t result = qword_1000A3AE8;
  if (!qword_1000A3AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3AE8);
  }
  return result;
}

uint64_t sub_100018D48()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100018D98@<X0>(uint64_t a1@<X8>)
{
  return sub_100018DD0(&qword_1000A3148, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1000B2290, a1);
}

uint64_t sub_100018DD0@<X0>(void *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = sub_100010740(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t sub_100018E74(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10001940C();
  unint64_t v7 = sub_100019460();
  unint64_t v8 = sub_1000194B4();
  void *v5 = v2;
  v5[1] = sub_100015130;
  return _URLRepresentableIntent<>.perform()(a1, a2, v6, v7, v8);
}

uint64_t sub_100018F48@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100019128();
  *a1 = result;
  return result;
}

uint64_t sub_100018F70(uint64_t a1)
{
  unint64_t v2 = sub_100018BA4();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenAutoConvertToTagDeepLink()
{
  return &type metadata for OpenAutoConvertToTagDeepLink;
}

ValueMetadata *type metadata accessor for AutoConvertToTagEntityQuery()
{
  return &type metadata for AutoConvertToTagEntityQuery;
}

ValueMetadata *type metadata accessor for AutoConvertToTagEntity()
{
  return &type metadata for AutoConvertToTagEntity;
}

ValueMetadata *type metadata accessor for AutoConvertToTagEntity.ChangeAutoConvertToTagEntityHandler()
{
  return &type metadata for AutoConvertToTagEntity.ChangeAutoConvertToTagEntityHandler;
}

uint64_t sub_100018FEC(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_10001900C, 0, 0);
}

uint64_t sub_10001900C()
{
  uint64_t v1 = *(unsigned char **)(v0 + 16);
  *uint64_t v1 = [self shouldAutoConvertToTag];
  unint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100019088(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_1000190AC, 0, 0);
}

uint64_t sub_1000190AC()
{
  [self setShouldAutoConvertToTag:*(unsigned __int8 *)(v0 + 16)];
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100019128()
{
  v17[0] = sub_10007BFB0();
  uint64_t v0 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v2 = (char *)v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100008FA4(&qword_1000A3900);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  unint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unint64_t v8 = (char *)v17 - v7;
  uint64_t v9 = sub_100008FA4(&qword_1000A3908);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10007C0A0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  sub_100008FA4(&qword_1000A3AF8);
  sub_10007C080();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  v17[1] = 0;
  uint64_t v14 = sub_10007BCF0();
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  v15(v8, 1, 1, v14);
  v15(v6, 1, 1, v14);
  (*(void (**)(char *, void, void))(v0 + 104))(v2, enum case for InputConnectionBehavior.default(_:), v17[0]);
  sub_100017D68();
  return sub_10007BD50();
}

unint64_t sub_10001940C()
{
  unint64_t result = qword_1000A3B00;
  if (!qword_1000A3B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3B00);
  }
  return result;
}

unint64_t sub_100019460()
{
  unint64_t result = qword_1000A3B08;
  if (!qword_1000A3B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3B08);
  }
  return result;
}

unint64_t sub_1000194B4()
{
  unint64_t result = qword_1000A3B10;
  if (!qword_1000A3B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3B10);
  }
  return result;
}

uint64_t sub_100019508@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10007C020();
  *a1 = result;
  return result;
}

unint64_t sub_100019538()
{
  unint64_t result = qword_1000A3B78;
  if (!qword_1000A3B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3B78);
  }
  return result;
}

unint64_t sub_100019590()
{
  unint64_t result = qword_1000A3B80;
  if (!qword_1000A3B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3B80);
  }
  return result;
}

uint64_t sub_1000195E4()
{
  uint64_t v0 = sub_100008FA4(&qword_1000A3908);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_10007C090();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10007C1A0();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_10007CF20();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_10007C0A0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_10007C050();
  sub_1000112B4(v10, qword_1000B22A8);
  sub_100010740(v10, (uint64_t)qword_1000B22A8);
  sub_10007CF10();
  sub_10007C190();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_10007C0B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_10007C040();
}

uint64_t sub_1000198BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v1 = sub_100008FA4(&qword_1000A3970);
  __chkstk_darwin(v1 - 8);
  id v30 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100008FA4(&qword_1000A3908);
  __chkstk_darwin(v3 - 8);
  uint64_t v29 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10007C090();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10007C1A0();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_10007CF20();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = sub_10007C0A0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v27 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  id v26 = (char *)&v24 - v15;
  sub_10007CF10();
  sub_10007C190();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  uint64_t v25 = v5;
  v17(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  sub_10007C0B0();
  sub_10007CF10();
  sub_10007C190();
  v17(v8, v16, v5);
  uint64_t v18 = v29;
  sub_10007C0B0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v18, 0, 1, v11);
  id v19 = (id)ICNotesAppBundleIdentifier();
  sub_10007CF40();

  uint64_t v20 = v30;
  sub_10007BEF0();
  uint64_t v21 = sub_10007BF00();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 0, 1, v21);
  sub_100008FA4(&qword_1000A3978);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100080BC0;
  sub_10007CF10();
  sub_10007C190();
  uint64_t v22 = v25;
  v17(v8, v16, v25);
  sub_10007C0B0();
  sub_10007CF10();
  sub_10007C190();
  v17(v8, v16, v22);
  sub_10007C0B0();
  return sub_10007BF10();
}

uint64_t sub_100019DFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a1;
  v3[4] = a3;
  sub_10007C0A0();
  v3[5] = swift_task_alloc();
  uint64_t v4 = sub_100008FA4(&qword_1000A3B48);
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  return _swift_task_switch(sub_100019EEC, 0, 0);
}

uint64_t sub_100019EEC()
{
  uint64_t KeyPath = swift_getKeyPath();
  v0[9] = KeyPath;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[10] = v2;
  uint64_t v3 = sub_100008FA4(&qword_1000A3CF8);
  uint64_t v4 = sub_10000CAB4(&qword_1000A3CE0, &qword_1000A3CE8);
  v0[11] = v4;
  *uint64_t v2 = v0;
  v2[1] = sub_100019FEC;
  uint64_t v5 = v0[8];
  return _AppEntityUpdate.value<A>(of:)(v5, KeyPath, v3, v4);
}

uint64_t sub_100019FEC()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_10001A104, 0, 0);
}

uint64_t sub_10001A104()
{
  if ((*(unsigned int (**)(void, void))(*(void *)(v0 + 56) + 88))(*(void *)(v0 + 64), *(void *)(v0 + 48)) == enum case for _IntentValueState.set<A>(_:))
  {
    uint64_t v1 = *(char **)(v0 + 64);
    (*(void (**)(char *, void))(*(void *)(v0 + 56) + 96))(v1, *(void *)(v0 + 48));
    char v2 = *v1;
    sub_100008FA4(&qword_1000A3CC8);
    sub_10007C080();
    *(void *)(v0 + 16) = sub_10007C030();
    *(unsigned char *)(v0 + 120) = v2;
    uint64_t KeyPath = swift_getKeyPath();
    *(void *)(v0 + 96) = KeyPath;
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_10001A330;
    uint64_t v5 = *(void *)(v0 + 88);
    return AppEntity._setValue<A>(_:for:)(v0 + 120, KeyPath, v5);
  }
  else
  {
    (*(void (**)(void, void))(*(void *)(v0 + 56) + 8))(*(void *)(v0 + 64), *(void *)(v0 + 48));
    sub_10007BC30();
    sub_100016C94();
    swift_allocError();
    sub_10007BEC0();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
}

uint64_t sub_10001A330()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    char v2 = sub_100012FE0;
  }
  else {
    char v2 = sub_10001A46C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10001A46C()
{
  sub_100019590();
  sub_10007BC20();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10001A504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_1000130F0;
  return sub_100019DFC(a1, v6, a3);
}

unint64_t sub_10001A5A8()
{
  unint64_t result = qword_1000A3B90;
  if (!qword_1000A3B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3B90);
  }
  return result;
}

unint64_t sub_10001A600()
{
  unint64_t result = qword_1000A3B98;
  if (!qword_1000A3B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3B98);
  }
  return result;
}

unint64_t sub_10001A658()
{
  unint64_t result = qword_1000A3BA0;
  if (!qword_1000A3BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3BA0);
  }
  return result;
}

uint64_t sub_10001A6AC()
{
  uint64_t v0 = qword_1000A3B58;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_10001A6E8()
{
  unint64_t result = qword_1000A3BA8;
  if (!qword_1000A3BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3BA8);
  }
  return result;
}

uint64_t sub_10001A73C(uint64_t a1)
{
  unint64_t v2 = sub_10001A5A8();

  return _EntityURLRepresentation.init(stringLiteral:)(0xD00000000000005ALL, 0x8000000100087950, a1, v2);
}

unint64_t sub_10001A79C()
{
  unint64_t result = qword_1000A3BB0;
  if (!qword_1000A3BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3BB0);
  }
  return result;
}

unint64_t sub_10001A7F4()
{
  unint64_t result = qword_1000A3BB8;
  if (!qword_1000A3BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3BB8);
  }
  return result;
}

unint64_t sub_10001A84C()
{
  unint64_t result = qword_1000A3BC0;
  if (!qword_1000A3BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3BC0);
  }
  return result;
}

unint64_t sub_10001A8A4()
{
  unint64_t result = qword_1000A3BC8;
  if (!qword_1000A3BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3BC8);
  }
  return result;
}

uint64_t sub_10001A8F8()
{
  sub_10001BF14();
  uint64_t v2 = sub_10007BFC0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_100016C54(v3, v0, v2, v1);
}

unint64_t sub_10001A990()
{
  unint64_t result = qword_1000A3BD8;
  if (!qword_1000A3BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3BD8);
  }
  return result;
}

unint64_t sub_10001A9E8()
{
  unint64_t result = qword_1000A3BE0;
  if (!qword_1000A3BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3BE0);
  }
  return result;
}

unint64_t sub_10001AA40()
{
  unint64_t result = qword_1000A3BE8;
  if (!qword_1000A3BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3BE8);
  }
  return result;
}

unint64_t sub_10001AA98()
{
  unint64_t result = qword_1000A3BF0;
  if (!qword_1000A3BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3BF0);
  }
  return result;
}

uint64_t sub_10001AAEC@<X0>(uint64_t *a1@<X8>)
{
  sub_10001ACF0();
  uint64_t result = sub_10007BD10();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10001AB2C@<X0>(uint64_t a1@<X8>)
{
  return sub_100018DD0(&qword_1000A3150, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1000B22A8, a1);
}

uint64_t sub_10001AB64()
{
  return sub_10000CAB4(&qword_1000A3BF8, &qword_1000A3C00);
}

uint64_t sub_10001ABA0(uint64_t a1)
{
  unint64_t v2 = sub_10001A5A8();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10001ABF0()
{
  unint64_t result = qword_1000A3C08;
  if (!qword_1000A3C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3C08);
  }
  return result;
}

uint64_t sub_10001AC48(uint64_t a1)
{
  unint64_t v2 = sub_10001AA98();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_10001AC98()
{
  unint64_t result = qword_1000A3C10;
  if (!qword_1000A3C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3C10);
  }
  return result;
}

unint64_t sub_10001ACF0()
{
  unint64_t result = qword_1000A3C18[0];
  if (!qword_1000A3C18[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000A3C18);
  }
  return result;
}

uint64_t sub_10001AD44(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_1000A3CC0 + dword_1000A3CC0);
  unint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *unint64_t v2 = v1;
  v2[1] = sub_100016CEC;
  return v4();
}

uint64_t sub_10001ADE8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10001A658();
  *uint64_t v4 = v2;
  v4[1] = sub_100014848;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_10001AE9C()
{
  unint64_t result = qword_1000A3C30;
  if (!qword_1000A3C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3C30);
  }
  return result;
}

unint64_t sub_10001AEF4()
{
  unint64_t result = qword_1000A3C38[0];
  if (!qword_1000A3C38[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000A3C38);
  }
  return result;
}

uint64_t sub_10001AF48(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10001A658();
  void *v5 = v2;
  v5[1] = sub_100014A10;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_10001AFFC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10001A658();
  *uint64_t v4 = v2;
  v4[1] = sub_100016CEC;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_10001B0B0()
{
  unint64_t result = qword_1000A3C50;
  if (!qword_1000A3C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3C50);
  }
  return result;
}

unint64_t sub_10001B108()
{
  unint64_t result = qword_1000A3C58;
  if (!qword_1000A3C58)
  {
    sub_10000A43C(qword_1000A3C60);
    sub_10001AA40();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3C58);
  }
  return result;
}

uint64_t sub_10001B17C(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10001A8A4();
  void *v5 = v2;
  v5[1] = sub_100016CF0;
  return EntityQuery.results()(a1, a2, v6);
}

unint64_t sub_10001B234()
{
  unint64_t result = qword_1000A3C78;
  if (!qword_1000A3C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3C78);
  }
  return result;
}

uint64_t sub_10001B288()
{
  uint64_t v0 = sub_10007C0A0();
  sub_1000112B4(v0, qword_1000B22C0);
  sub_100010740(v0, (uint64_t)qword_1000B22C0);
  return sub_10007C080();
}

unint64_t sub_10001B2F0()
{
  unint64_t result = qword_1000A3C80;
  if (!qword_1000A3C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3C80);
  }
  return result;
}

uint64_t sub_10001B344(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_10001BE6C();
  unint64_t v5 = sub_10001BF14();

  return static _URLRepresentableIntent<>.urlRepresentation.getter(a1, v4, a2, v5);
}

uint64_t sub_10001B3AC()
{
  uint64_t v0 = qword_1000A3B68;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_10001B3E8()
{
  unint64_t result = qword_1000A3C88;
  if (!qword_1000A3C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3C88);
  }
  return result;
}

unint64_t sub_10001B440()
{
  unint64_t result = qword_1000A3C90;
  if (!qword_1000A3C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3C90);
  }
  return result;
}

uint64_t sub_10001B494()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10001B4E4@<X0>(uint64_t a1@<X8>)
{
  return sub_100018DD0(&qword_1000A3158, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1000B22C0, a1);
}

uint64_t sub_10001B51C(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10001BE6C();
  unint64_t v7 = sub_10001BEC0();
  unint64_t v8 = sub_10001BF14();
  void *v5 = v2;
  v5[1] = sub_100015130;
  return _URLRepresentableIntent<>.perform()(a1, a2, v6, v7, v8);
}

uint64_t sub_10001B5F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10001BB88();
  *a1 = result;
  return result;
}

uint64_t sub_10001B618(uint64_t a1)
{
  unint64_t v2 = sub_10001B2F0();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenAllowDarkBackgroundsDeepLink()
{
  return &type metadata for OpenAllowDarkBackgroundsDeepLink;
}

ValueMetadata *type metadata accessor for AllowDarkBackgroundsEntityQuery()
{
  return &type metadata for AllowDarkBackgroundsEntityQuery;
}

ValueMetadata *type metadata accessor for AllowDarkBackgroundsEntity()
{
  return &type metadata for AllowDarkBackgroundsEntity;
}

ValueMetadata *type metadata accessor for AllowDarkBackgroundsEntity.ChangeAllowDarkBackgroundsEntityHandler()
{
  return &type metadata for AllowDarkBackgroundsEntity.ChangeAllowDarkBackgroundsEntityHandler;
}

uint64_t sub_10001B694(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_10001B6B4, 0, 0);
}

uint64_t sub_10001B6B4()
{
  uint64_t v1 = *(unsigned char **)(v0 + 16);
  *uint64_t v1 = [self ic_alwaysShowLightContent] ^ 1;
  unint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10001B734(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_10001B758, 0, 0);
}

uint64_t sub_10001B758()
{
  [self setIc_alwaysShowLightContent:((*(unsigned char *)(v0 + 16) & 1) == 0)];
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10001B7D8()
{
  sub_10007C0A0();
  *(void *)(v0 + 16) = swift_task_alloc();
  return _swift_task_switch(sub_10001B864, 0, 0);
}

uint64_t sub_10001B864()
{
  *(void *)(v0 + 24) = self;
  sub_10007D030();
  *(void *)(v0 + 32) = sub_10007D020();
  uint64_t v2 = sub_10007D010();
  return _swift_task_switch(sub_10001B908, v2, v1);
}

uint64_t sub_10001B908()
{
  uint64_t v1 = *(void **)(v0 + 24);
  swift_release();
  *(unsigned char *)(v0 + 40) = [v1 ic_isVision];
  return _swift_task_switch(sub_10001B984, 0, 0);
}

uint64_t sub_10001B984()
{
  if (*(unsigned char *)(v0 + 40) == 1)
  {
    sub_10007BC30();
    sub_100016C94();
    swift_allocError();
    sub_10007BED0();
LABEL_8:
    swift_willThrow();
    swift_task_dealloc();
    unint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
  id v1 = [self currentTraitCollection];
  id v2 = [v1 userInterfaceStyle];

  if (v2 != (id)2)
  {
    sub_10007BC30();
    sub_100016C94();
    swift_allocError();
    sub_10007BEE0();
    goto LABEL_8;
  }
  sub_100008FA4(&qword_1000A3CC8);
  sub_10007C080();
  sub_10000CAB4(&qword_1000A3CE0, &qword_1000A3CE8);
  uint64_t v3 = sub_10007C030();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v4(v3);
}

uint64_t sub_10001BB88()
{
  v17[0] = sub_10007BFB0();
  uint64_t v0 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  id v2 = (char *)v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100008FA4(&qword_1000A3900);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  unint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unint64_t v8 = (char *)v17 - v7;
  uint64_t v9 = sub_100008FA4(&qword_1000A3908);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10007C0A0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  sub_100008FA4(&qword_1000A3CA0);
  sub_10007C080();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  v17[1] = 0;
  uint64_t v14 = sub_10007BCF0();
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  v15(v8, 1, 1, v14);
  v15(v6, 1, 1, v14);
  (*(void (**)(char *, void, void))(v0 + 104))(v2, enum case for InputConnectionBehavior.default(_:), v17[0]);
  sub_10001A5A8();
  return sub_10007BD50();
}

unint64_t sub_10001BE6C()
{
  unint64_t result = qword_1000A3CA8;
  if (!qword_1000A3CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3CA8);
  }
  return result;
}

unint64_t sub_10001BEC0()
{
  unint64_t result = qword_1000A3CB0;
  if (!qword_1000A3CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3CB0);
  }
  return result;
}

unint64_t sub_10001BF14()
{
  unint64_t result = qword_1000A3CB8;
  if (!qword_1000A3CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3CB8);
  }
  return result;
}

uint64_t sub_10001BF68@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10007C020();
  *a1 = result;
  return result;
}

unint64_t sub_10001BF98()
{
  unint64_t result = qword_1000A3D20;
  if (!qword_1000A3D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3D20);
  }
  return result;
}

unint64_t sub_10001BFF0()
{
  unint64_t result = qword_1000A3D28;
  if (!qword_1000A3D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3D28);
  }
  return result;
}

uint64_t sub_10001C044()
{
  uint64_t v0 = sub_100008FA4(&qword_1000A3908);
  __chkstk_darwin(v0 - 8);
  id v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_10007C090();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10007C1A0();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_10007CF20();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_10007C0A0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_10007C050();
  sub_1000112B4(v10, qword_1000B22D8);
  sub_100010740(v10, (uint64_t)qword_1000B22D8);
  sub_10007CF10();
  sub_10007C190();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_10007C0B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_10007C040();
}

uint64_t sub_10001C31C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v29 = a1;
  uint64_t v1 = sub_100008FA4(&qword_1000A3970);
  __chkstk_darwin(v1 - 8);
  uint64_t v27 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100008FA4(&qword_1000A3908);
  __chkstk_darwin(v3 - 8);
  id v30 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10007C090();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10007C1A0();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_10007CF20();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = sub_10007C0A0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v28 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  id v26 = (char *)&v24 - v15;
  sub_10007CF10();
  sub_10007C190();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  uint64_t v25 = v5;
  v17(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  sub_10007C0B0();
  sub_10007CF10();
  sub_10007C190();
  v17(v8, v16, v5);
  uint64_t v18 = v30;
  sub_10007C0B0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v18, 0, 1, v11);
  id v19 = (id)ICNotesAppBundleIdentifier();
  sub_10007CF40();

  uint64_t v20 = v27;
  sub_10007BEF0();
  uint64_t v21 = sub_10007BF00();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 0, 1, v21);
  sub_100008FA4(&qword_1000A3978);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100080BC0;
  sub_10007CF10();
  sub_10007C190();
  uint64_t v22 = v25;
  v17(v8, v16, v25);
  sub_10007C0B0();
  sub_10007CF10();
  sub_10007C190();
  v17(v8, v16, v22);
  sub_10007C0B0();
  return sub_10007BF10();
}

uint64_t sub_10001C868(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a1;
  v3[4] = a3;
  sub_10007C0A0();
  v3[5] = swift_task_alloc();
  uint64_t v4 = sub_100008FA4(&qword_1000A3B48);
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  return _swift_task_switch(sub_10001C958, 0, 0);
}

uint64_t sub_10001C958()
{
  uint64_t KeyPath = swift_getKeyPath();
  v0[9] = KeyPath;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[10] = v2;
  uint64_t v3 = sub_100008FA4(&qword_1000A3E98);
  uint64_t v4 = sub_10000CAB4(&qword_1000A3E80, &qword_1000A3E88);
  v0[11] = v4;
  *uint64_t v2 = v0;
  v2[1] = sub_10001CA58;
  uint64_t v5 = v0[8];
  return _AppEntityUpdate.value<A>(of:)(v5, KeyPath, v3, v4);
}

uint64_t sub_10001CA58()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_10001CB70, 0, 0);
}

uint64_t sub_10001CB70()
{
  if ((*(unsigned int (**)(void, void))(*(void *)(v0 + 56) + 88))(*(void *)(v0 + 64), *(void *)(v0 + 48)) == enum case for _IntentValueState.set<A>(_:))
  {
    uint64_t v1 = *(char **)(v0 + 64);
    (*(void (**)(char *, void))(*(void *)(v0 + 56) + 96))(v1, *(void *)(v0 + 48));
    char v2 = *v1;
    sub_100008FA4(&qword_1000A3E68);
    sub_10007C080();
    *(void *)(v0 + 16) = sub_10007C030();
    *(unsigned char *)(v0 + 120) = v2;
    uint64_t KeyPath = swift_getKeyPath();
    *(void *)(v0 + 96) = KeyPath;
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_10001CD9C;
    uint64_t v5 = *(void *)(v0 + 88);
    return AppEntity._setValue<A>(_:for:)(v0 + 120, KeyPath, v5);
  }
  else
  {
    (*(void (**)(void, void))(*(void *)(v0 + 56) + 8))(*(void *)(v0 + 64), *(void *)(v0 + 48));
    sub_10007BC30();
    sub_100016C94();
    swift_allocError();
    sub_10007BEC0();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
}

uint64_t sub_10001CD9C()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    char v2 = sub_100012FE0;
  }
  else {
    char v2 = sub_10001CED8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10001CED8()
{
  sub_10001BFF0();
  sub_10007BC20();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10001CF70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_1000130F0;
  return sub_10001C868(a1, v6, a3);
}

unint64_t sub_10001D014()
{
  unint64_t result = qword_1000A3D38;
  if (!qword_1000A3D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3D38);
  }
  return result;
}

unint64_t sub_10001D06C()
{
  unint64_t result = qword_1000A3D40;
  if (!qword_1000A3D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3D40);
  }
  return result;
}

unint64_t sub_10001D0C4()
{
  unint64_t result = qword_1000A3D48;
  if (!qword_1000A3D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3D48);
  }
  return result;
}

uint64_t sub_10001D118()
{
  uint64_t v0 = qword_1000A3D00;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_10001D154()
{
  unint64_t result = qword_1000A3D50;
  if (!qword_1000A3D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3D50);
  }
  return result;
}

uint64_t sub_10001D1A8(uint64_t a1)
{
  unint64_t v2 = sub_10001D014();

  return _EntityURLRepresentation.init(stringLiteral:)(0xD000000000000050, 0x8000000100087A40, a1, v2);
}

unint64_t sub_10001D208()
{
  unint64_t result = qword_1000A3D58;
  if (!qword_1000A3D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3D58);
  }
  return result;
}

unint64_t sub_10001D260()
{
  unint64_t result = qword_1000A3D60;
  if (!qword_1000A3D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3D60);
  }
  return result;
}

unint64_t sub_10001D2B8()
{
  unint64_t result = qword_1000A3D68;
  if (!qword_1000A3D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3D68);
  }
  return result;
}

unint64_t sub_10001D310()
{
  unint64_t result = qword_1000A3D70;
  if (!qword_1000A3D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3D70);
  }
  return result;
}

uint64_t sub_10001D364()
{
  sub_10001E6CC();
  uint64_t v2 = sub_10007BFC0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_100016C54(v3, v0, v2, v1);
}

unint64_t sub_10001D3FC()
{
  unint64_t result = qword_1000A3D80;
  if (!qword_1000A3D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3D80);
  }
  return result;
}

unint64_t sub_10001D454()
{
  unint64_t result = qword_1000A3D88;
  if (!qword_1000A3D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3D88);
  }
  return result;
}

unint64_t sub_10001D4AC()
{
  unint64_t result = qword_1000A3D90;
  if (!qword_1000A3D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3D90);
  }
  return result;
}

unint64_t sub_10001D504()
{
  unint64_t result = qword_1000A3D98;
  if (!qword_1000A3D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3D98);
  }
  return result;
}

uint64_t sub_10001D558@<X0>(uint64_t *a1@<X8>)
{
  sub_10001D75C();
  uint64_t result = sub_10007BD10();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10001D598@<X0>(uint64_t a1@<X8>)
{
  return sub_100018DD0(&qword_1000A3160, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1000B22D8, a1);
}

uint64_t sub_10001D5D0()
{
  return sub_10000CAB4(&qword_1000A3DA0, &qword_1000A3DA8);
}

uint64_t sub_10001D60C(uint64_t a1)
{
  unint64_t v2 = sub_10001D014();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10001D65C()
{
  unint64_t result = qword_1000A3DB0;
  if (!qword_1000A3DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3DB0);
  }
  return result;
}

uint64_t sub_10001D6B4(uint64_t a1)
{
  unint64_t v2 = sub_10001D504();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_10001D704()
{
  unint64_t result = qword_1000A3DB8;
  if (!qword_1000A3DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3DB8);
  }
  return result;
}

unint64_t sub_10001D75C()
{
  unint64_t result = qword_1000A3DC0[0];
  if (!qword_1000A3DC0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000A3DC0);
  }
  return result;
}

uint64_t sub_10001D7B0(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  sub_10007C0A0();
  *(void *)(v1 + 24) = swift_task_alloc();
  return _swift_task_switch(sub_10001D840, 0, 0);
}

uint64_t sub_10001D840()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  sub_100008FA4(&qword_1000A3E68);
  sub_10007C080();
  sub_10000CAB4(&qword_1000A3E80, &qword_1000A3E88);
  *uint64_t v1 = sub_10007C030();
  swift_task_dealloc();
  unint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10001D948(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10001D0C4();
  *uint64_t v4 = v2;
  v4[1] = sub_100014848;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_10001D9FC()
{
  unint64_t result = qword_1000A3DD8;
  if (!qword_1000A3DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3DD8);
  }
  return result;
}

unint64_t sub_10001DA54()
{
  unint64_t result = qword_1000A3DE0[0];
  if (!qword_1000A3DE0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000A3DE0);
  }
  return result;
}

uint64_t sub_10001DAA8(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10001D0C4();
  void *v5 = v2;
  v5[1] = sub_100014A10;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_10001DB5C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10001D0C4();
  *uint64_t v4 = v2;
  v4[1] = sub_100016CEC;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_10001DC10()
{
  unint64_t result = qword_1000A3DF8;
  if (!qword_1000A3DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3DF8);
  }
  return result;
}

unint64_t sub_10001DC68()
{
  unint64_t result = qword_1000A3E00;
  if (!qword_1000A3E00)
  {
    sub_10000A43C(qword_1000A3E08);
    sub_10001D4AC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3E00);
  }
  return result;
}

uint64_t sub_10001DCDC(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10001D310();
  void *v5 = v2;
  v5[1] = sub_100016CF0;
  return EntityQuery.results()(a1, a2, v6);
}

unint64_t sub_10001DD94()
{
  unint64_t result = qword_1000A3E20;
  if (!qword_1000A3E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3E20);
  }
  return result;
}

uint64_t sub_10001DDE8()
{
  uint64_t v0 = sub_10007C0A0();
  sub_1000112B4(v0, qword_1000B22F0);
  sub_100010740(v0, (uint64_t)qword_1000B22F0);
  return sub_10007C080();
}

unint64_t sub_10001DE50()
{
  unint64_t result = qword_1000A3E28;
  if (!qword_1000A3E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3E28);
  }
  return result;
}

uint64_t sub_10001DEA4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_10001E624();
  unint64_t v5 = sub_10001E6CC();

  return static _URLRepresentableIntent<>.urlRepresentation.getter(a1, v4, a2, v5);
}

uint64_t sub_10001DF0C()
{
  uint64_t v0 = qword_1000A3D10;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_10001DF48()
{
  unint64_t result = qword_1000A3E30;
  if (!qword_1000A3E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3E30);
  }
  return result;
}

unint64_t sub_10001DFA0()
{
  unint64_t result = qword_1000A3E38;
  if (!qword_1000A3E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3E38);
  }
  return result;
}

uint64_t sub_10001DFF4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10001E044@<X0>(uint64_t a1@<X8>)
{
  return sub_100018DD0(&qword_1000A3168, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1000B22F0, a1);
}

uint64_t sub_10001E07C(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10001E624();
  unint64_t v7 = sub_10001E678();
  unint64_t v8 = sub_10001E6CC();
  void *v5 = v2;
  v5[1] = sub_100015130;
  return _URLRepresentableIntent<>.perform()(a1, a2, v6, v7, v8);
}

uint64_t sub_10001E150@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10001E340();
  *a1 = result;
  return result;
}

uint64_t sub_10001E178(uint64_t a1)
{
  unint64_t v2 = sub_10001DE50();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenDateHeadersDeepLink()
{
  return &type metadata for OpenDateHeadersDeepLink;
}

ValueMetadata *type metadata accessor for DateHeadersEntityQuery()
{
  return &type metadata for DateHeadersEntityQuery;
}

ValueMetadata *type metadata accessor for DateHeadersEntity()
{
  return &type metadata for DateHeadersEntity;
}

ValueMetadata *type metadata accessor for DateHeadersEntity.ChangeDateHeadersEntityHandler()
{
  return &type metadata for DateHeadersEntity.ChangeDateHeadersEntityHandler;
}

uint64_t sub_10001E1F4(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_10001E214, 0, 0);
}

uint64_t sub_10001E214()
{
  uint64_t v1 = *(BOOL **)(v0 + 16);
  *uint64_t v1 = [self defaultDateHeadersType] != 1;
  unint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10001E298(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_10001E2BC, 0, 0);
}

uint64_t sub_10001E2BC()
{
  int v1 = *(unsigned __int8 *)(v0 + 16);
  uint64_t v2 = self;
  if (v1) {
    uint64_t v3 = 2;
  }
  else {
    uint64_t v3 = 1;
  }
  [v2 setDefaultDateHeadersType:v3];
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10001E340()
{
  v17[0] = sub_10007BFB0();
  uint64_t v0 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v2 = (char *)v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100008FA4(&qword_1000A3900);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unint64_t v8 = (char *)v17 - v7;
  uint64_t v9 = sub_100008FA4(&qword_1000A3908);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10007C0A0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  sub_100008FA4(&qword_1000A3E48);
  sub_10007C080();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  v17[1] = 0;
  uint64_t v14 = sub_10007BCF0();
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  v15(v8, 1, 1, v14);
  v15(v6, 1, 1, v14);
  (*(void (**)(char *, void, void))(v0 + 104))(v2, enum case for InputConnectionBehavior.default(_:), v17[0]);
  sub_10001D014();
  return sub_10007BD50();
}

unint64_t sub_10001E624()
{
  unint64_t result = qword_1000A3E50;
  if (!qword_1000A3E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3E50);
  }
  return result;
}

unint64_t sub_10001E678()
{
  unint64_t result = qword_1000A3E58;
  if (!qword_1000A3E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3E58);
  }
  return result;
}

unint64_t sub_10001E6CC()
{
  unint64_t result = qword_1000A3E60;
  if (!qword_1000A3E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3E60);
  }
  return result;
}

uint64_t sub_10001E720@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10007C020();
  *a1 = result;
  return result;
}

uint64_t sub_10001E74C()
{
  uint64_t v0 = sub_100008FA4(&qword_1000A3908);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_10007C090();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10007C1A0();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_10007CF20();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_10007C0A0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_10007C050();
  sub_1000112B4(v10, qword_1000B2308);
  sub_100010740(v10, (uint64_t)qword_1000B2308);
  sub_10007CF10();
  sub_10007C190();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_10007C0B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_10007C040();
}

uint64_t sub_10001EA24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v1 = sub_100008FA4(&qword_1000A3970);
  __chkstk_darwin(v1 - 8);
  id v30 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100008FA4(&qword_1000A3908);
  __chkstk_darwin(v3 - 8);
  uint64_t v29 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10007C090();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10007C1A0();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_10007CF20();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = sub_10007C0A0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v27 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  id v26 = (char *)&v24 - v15;
  sub_10007CF10();
  sub_10007C190();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  uint64_t v25 = v5;
  v17(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  sub_10007C0B0();
  sub_10007CF10();
  sub_10007C190();
  v17(v8, v16, v5);
  uint64_t v18 = v29;
  sub_10007C0B0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v18, 0, 1, v11);
  id v19 = (id)ICNotesAppBundleIdentifier();
  sub_10007CF40();

  uint64_t v20 = v30;
  sub_10007BEF0();
  uint64_t v21 = sub_10007BF00();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 0, 1, v21);
  sub_100008FA4(&qword_1000A3978);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100080BC0;
  sub_10007CF10();
  sub_10007C190();
  uint64_t v22 = v25;
  v17(v8, v16, v25);
  sub_10007C0B0();
  sub_10007CF10();
  sub_10007C190();
  v17(v8, v16, v22);
  sub_10007C0B0();
  return sub_10007BF10();
}

uint64_t sub_10001EF64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a1;
  v3[4] = a3;
  sub_10007C0A0();
  v3[5] = swift_task_alloc();
  uint64_t v4 = sub_100008FA4(&qword_1000A40A8);
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  return _swift_task_switch(sub_10001F054, 0, 0);
}

uint64_t sub_10001F054()
{
  uint64_t KeyPath = swift_getKeyPath();
  v0[9] = KeyPath;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[10] = v2;
  uint64_t v3 = sub_100008FA4(&qword_1000A40B0);
  uint64_t v4 = sub_10000CAB4(&qword_1000A4090, &qword_1000A4098);
  v0[11] = v4;
  *uint64_t v2 = v0;
  v2[1] = sub_10001F154;
  uint64_t v5 = v0[8];
  return _AppEntityUpdate.value<A>(of:)(v5, KeyPath, v3, v4);
}

uint64_t sub_10001F154()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_10001F26C, 0, 0);
}

uint64_t sub_10001F26C()
{
  if ((*(unsigned int (**)(void, void))(*(void *)(v0 + 56) + 88))(*(void *)(v0 + 64), *(void *)(v0 + 48)) == enum case for _IntentValueState.set<A>(_:))
  {
    uint64_t v1 = *(char **)(v0 + 64);
    (*(void (**)(char *, void))(*(void *)(v0 + 56) + 96))(v1, *(void *)(v0 + 48));
    char v2 = *v1;
    sub_100008FA4(&qword_1000A4078);
    sub_10007C080();
    *(void *)(v0 + 16) = sub_10007C030();
    *(unsigned char *)(v0 + 120) = v2;
    uint64_t KeyPath = swift_getKeyPath();
    *(void *)(v0 + 96) = KeyPath;
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_10001F498;
    uint64_t v5 = *(void *)(v0 + 88);
    return AppEntity._setValue<A>(_:for:)(v0 + 120, KeyPath, v5);
  }
  else
  {
    (*(void (**)(void, void))(*(void *)(v0 + 56) + 8))(*(void *)(v0 + 64), *(void *)(v0 + 48));
    sub_10007BC30();
    sub_100016C94();
    swift_allocError();
    sub_10007BEC0();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
}

uint64_t sub_10001F498()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    char v2 = sub_100012FE0;
  }
  else {
    char v2 = sub_10001F5D4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10001F5D4()
{
  sub_100021BC0();
  sub_10007BC20();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10001F66C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_1000130F0;
  return sub_10001EF64(a1, v6, a3);
}

uint64_t sub_10001F70C()
{
  uint64_t v0 = qword_1000A3EA0;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_10001F744(uint64_t a1)
{
  unint64_t v2 = sub_100021C18();

  return _EntityURLRepresentation.init(stringLiteral:)(0xD000000000000051, 0x8000000100087B60, a1, v2);
}

uint64_t sub_10001F7A0()
{
  sub_100022EB0();
  uint64_t v2 = sub_10007BFC0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_100016C54(v3, v0, v2, v1);
}

uint64_t sub_10001F834@<X0>(uint64_t *a1@<X8>)
{
  sub_1000225A8();
  uint64_t result = sub_10007BD10();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10001F874@<X0>(uint64_t a1@<X8>)
{
  return sub_100014F9C(&qword_1000A3170, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1000B2308, a1);
}

uint64_t sub_10001F8AC(uint64_t a1)
{
  unint64_t v2 = sub_100021C18();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_10001F8FC(uint64_t a1)
{
  unint64_t v2 = sub_100021FE0();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_10001F948()
{
  uint64_t v0 = sub_100008FA4(&qword_1000A3908);
  __chkstk_darwin(v0 - 8);
  unint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_10007C090();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10007C1A0();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_10007CF20();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_10007C0A0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_10007C050();
  sub_1000112B4(v10, static ParagraphStyle.typeDisplayRepresentation);
  sub_100010740(v10, (uint64_t)static ParagraphStyle.typeDisplayRepresentation);
  sub_10007CF10();
  sub_10007C190();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_10007C0B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_10007C040();
}

uint64_t ParagraphStyle.typeDisplayRepresentation.unsafeMutableAddressor()
{
  if (qword_1000A3178 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_10007C050();

  return sub_100010740(v0, (uint64_t)static ParagraphStyle.typeDisplayRepresentation);
}

uint64_t static ParagraphStyle.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1000A3178 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10007C050();
  uint64_t v3 = sub_100010740(v2, (uint64_t)static ParagraphStyle.typeDisplayRepresentation);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

unint64_t sub_10001FD34()
{
  uint64_t v0 = sub_100008FA4(&qword_1000A3970);
  __chkstk_darwin(v0 - 8);
  uint64_t v111 = (char *)&v85 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_100008FA4(&qword_1000A3908);
  __chkstk_darwin(v2 - 8);
  uint64_t v101 = (char *)&v85 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10007C090();
  uint64_t v110 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10007C1A0();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10007CF20();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10007C0A0();
  uint64_t v113 = *(void *)(v13 - 8);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v94 = (char *)&v85 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v93 = (char *)&v85 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v91 = (char *)&v85 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v95 = (char *)&v85 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v90 = (char *)&v85 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v89 = (char *)&v85 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v88 = (char *)&v85 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v87 = (char *)&v85 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v86 = (char *)&v85 - v31;
  __chkstk_darwin(v30);
  sub_100008FA4(&qword_1000A40B8);
  uint64_t v32 = (int *)(sub_100008FA4(&qword_1000A40C0) - 8);
  uint64_t v33 = *(void *)v32;
  uint64_t v109 = *(void *)(*(void *)v32 + 72);
  unint64_t v34 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  uint64_t v35 = swift_allocObject();
  uint64_t v92 = v35;
  *(_OWORD *)(v35 + 16) = xmmword_100082C50;
  unint64_t v102 = v35 + v34;
  id v103 = v32;
  *(unsigned char *)(v35 + v34) = 0;
  unint64_t v85 = v35 + v34 + v32[14];
  id v36 = v12;
  sub_10007CF10();
  sub_10007C190();
  unsigned int v105 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v110 + 104);
  v110 += 104;
  uint64_t v104 = v37;
  uint64_t v38 = v4;
  uint64_t v99 = v4;
  ((void (*)(char *))v37)(v6);
  sub_10007C0B0();
  uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v113 + 56);
  uint64_t v112 = v13;
  v113 += 56;
  v106 = v39;
  uint64_t v40 = v13;
  v39(v101, 1, 1, v13);
  uint64_t v98 = sub_10007BF00();
  uint64_t v41 = *(void *)(v98 - 8);
  unint64_t v100 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56);
  uint64_t v107 = v41 + 56;
  v100(v111, 1, 1, v98);
  sub_10007BF20();
  unint64_t v42 = v102;
  uint64_t v43 = v109;
  *(unsigned char *)(v102 + v109) = 1;
  unint64_t v85 = v42 + v43 + v32[14];
  id v108 = v36;
  sub_10007CF10();
  uint64_t v97 = v9;
  sub_10007C190();
  uint64_t v96 = v6;
  uint64_t v44 = v105;
  uint64_t v45 = v104;
  v104(v6, v105, v38);
  sub_10007C0B0();
  uint64_t v46 = v101;
  v106(v101, 1, 1, v40);
  uint64_t v47 = v100;
  v100(v111, 1, 1, v98);
  sub_10007BF20();
  uint64_t v48 = 2 * v43;
  uint64_t v49 = (unsigned char *)(v42 + 2 * v43);
  *uint64_t v49 = 2;
  uint64_t v86 = &v49[v103[14]];
  sub_10007CF10();
  sub_10007C190();
  uint64_t v50 = v96;
  v45(v96, v44, v99);
  unint64_t v51 = v50;
  sub_10007C0B0();
  uint64_t v52 = v106;
  v106(v46, 1, 1, v112);
  uint64_t v53 = v111;
  uint64_t v54 = v98;
  v47(v111, 1, 1, v98);
  sub_10007BF20();
  unint64_t v55 = v102;
  uint64_t v56 = (unsigned char *)(v102 + v48 + v109);
  *uint64_t v56 = 3;
  uint64_t v87 = &v56[v103[14]];
  sub_10007CF10();
  sub_10007C190();
  uint64_t v57 = v99;
  v104(v51, v105, v99);
  sub_10007C0B0();
  uint64_t v58 = v101;
  v52(v101, 1, 1, v112);
  uint64_t v59 = v100;
  v100(v53, 1, 1, v54);
  sub_10007BF20();
  uint64_t v88 = (char *)(4 * v109);
  uint64_t v60 = (unsigned char *)(v55 + 4 * v109);
  *uint64_t v60 = 4;
  uint64_t v87 = &v60[v103[14]];
  sub_10007CF10();
  sub_10007C190();
  uint64_t v61 = v105;
  uint64_t v62 = v104;
  v104(v51, v105, v57);
  sub_10007C0B0();
  v106(v58, 1, 1, v112);
  uint64_t v63 = v98;
  v59(v53, 1, 1, v98);
  sub_10007BF20();
  unint64_t v64 = v102;
  uint64_t v65 = &v88[v109 + v102];
  *uint64_t v65 = 5;
  uint64_t v89 = &v65[v103[14]];
  sub_10007CF10();
  sub_10007C190();
  uint64_t v66 = v61;
  uint64_t v67 = v99;
  v62(v51, v66, v99);
  sub_10007C0B0();
  uint64_t v68 = v101;
  uint64_t v69 = v106;
  v106(v101, 1, 1, v112);
  v100(v111, 1, 1, v63);
  sub_10007BF20();
  id v70 = (unsigned char *)(v64 + 6 * v109);
  *id v70 = 6;
  uint64_t v71 = v103;
  uint64_t v90 = &v70[v103[14]];
  sub_10007CF10();
  sub_10007C190();
  uint64_t v72 = v67;
  uint64_t v73 = v104;
  v104(v51, v105, v72);
  sub_10007C0B0();
  v69(v68, 1, 1, v112);
  v100(v111, 1, 1, v98);
  id v74 = v68;
  sub_10007BF20();
  uint64_t v95 = (char *)(8 * v109);
  uint64_t v75 = (unsigned char *)(v102 + 7 * v109);
  *uint64_t v75 = 7;
  uint64_t v90 = &v75[v71[14]];
  sub_10007CF10();
  sub_10007C190();
  uint64_t v76 = v105;
  uint64_t v77 = v99;
  v73(v96, v105, v99);
  sub_10007C0B0();
  uint64_t v78 = v106;
  v106(v74, 1, 1, v112);
  uint64_t v79 = v98;
  unsigned int v80 = v100;
  v100(v111, 1, 1, v98);
  sub_10007BF20();
  uint64_t v81 = &v95[v102];
  *uint64_t v81 = 8;
  uint64_t v91 = &v81[v71[14]];
  sub_10007CF10();
  sub_10007C190();
  v104(v96, v76, v77);
  sub_10007C0B0();
  unsigned int v82 = v101;
  v78(v101, 1, 1, v112);
  unint64_t v83 = v111;
  v80(v111, 1, 1, v79);
  sub_10007BF20();
  v95[v109 + v102] = 9;
  sub_10007CF10();
  sub_10007C190();
  v104(v96, v105, v99);
  sub_10007C0B0();
  v106(v82, 1, 1, v112);
  v80(v83, 1, 1, v79);
  sub_10007BF20();
  unint64_t result = sub_10002586C(v92);
  static ParagraphStyle.caseDisplayRepresentations = result;
  return result;
}

uint64_t *ParagraphStyle.caseDisplayRepresentations.unsafeMutableAddressor()
{
  if (qword_1000A3180 != -1) {
    swift_once();
  }
  return &static ParagraphStyle.caseDisplayRepresentations;
}

uint64_t static ParagraphStyle.caseDisplayRepresentations.getter()
{
  if (qword_1000A3180 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static ParagraphStyle.caseDisplayRepresentations.setter(uint64_t a1)
{
  if (qword_1000A3180 != -1) {
    swift_once();
  }
  swift_beginAccess();
  static ParagraphStyle.caseDisplayRepresentations = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static ParagraphStyle.caseDisplayRepresentations.modify())()
{
  if (qword_1000A3180 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t ParagraphStyle.init(namedStyle:)(int a1)
{
  uint64_t result = 0;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      uint64_t result = 1;
      break;
    case 2:
      uint64_t result = 2;
      break;
    case 3:
LABEL_5:
      uint64_t result = 3;
      break;
    case 4:
      uint64_t result = 4;
      break;
    case 5:
      uint64_t result = 5;
      break;
    default:
      switch(a1)
      {
        case 'd':
          uint64_t result = 6;
          break;
        case 'e':
          uint64_t result = 7;
          break;
        case 'f':
          uint64_t result = 8;
          break;
        case 'g':
          uint64_t result = 9;
          break;
        default:
          goto LABEL_5;
      }
      break;
  }
  return result;
}

uint64_t ParagraphStyle.namedStyle.getter(char a1)
{
  return dword_100083728[a1];
}

_UNKNOWN **static ParagraphStyle.allCases.getter()
{
  return &off_10009E7B8;
}

uint64_t ParagraphStyle.rawValue.getter(char a1)
{
  return *(void *)&aTitle_5[8 * a1];
}

uint64_t sub_100020F54(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = ParagraphStyle.rawValue.getter(*a1);
  uint64_t v5 = v4;
  if (v3 == ParagraphStyle.rawValue.getter(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_10007D240();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_100020FE0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = _s37com_apple_mobilenotes_WidgetExtension14ParagraphStyleO8rawValueACSgSS_tcfC_0(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_100021010@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ParagraphStyle.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

Swift::Int sub_10002103C()
{
  char v1 = *v0;
  sub_10007D270();
  ParagraphStyle.rawValue.getter(v1);
  sub_10007CF60();
  swift_bridgeObjectRelease();
  return sub_10007D280();
}

uint64_t sub_1000210A0()
{
  ParagraphStyle.rawValue.getter(*v0);
  sub_10007CF60();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000210F4()
{
  char v1 = *v0;
  sub_10007D270();
  ParagraphStyle.rawValue.getter(v1);
  sub_10007CF60();
  swift_bridgeObjectRelease();
  return sub_10007D280();
}

uint64_t sub_100021154@<X0>(uint64_t a1@<X8>)
{
  return sub_100014F9C(&qword_1000A3178, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)static ParagraphStyle.typeDisplayRepresentation, a1);
}

uint64_t sub_10002118C(uint64_t a1)
{
  unint64_t v2 = sub_1000223B4();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_1000211D8(uint64_t a1)
{
  unint64_t v2 = sub_100022334();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

void sub_100021224(void *a1@<X8>)
{
  *a1 = &off_10009E7B8;
}

uint64_t sub_100021234(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  sub_10007C0A0();
  *(void *)(v1 + 24) = swift_task_alloc();
  return _swift_task_switch(sub_1000212C4, 0, 0);
}

uint64_t sub_1000212C4()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  sub_100008FA4(&qword_1000A4078);
  sub_10007C080();
  sub_10000CAB4(&qword_1000A4090, &qword_1000A4098);
  *uint64_t v1 = sub_10007C030();
  swift_task_dealloc();
  unint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1000213CC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_100021CC8();
  *uint64_t v4 = v2;
  v4[1] = sub_100014848;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

uint64_t sub_10002147C(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100021CC8();
  void *v5 = v2;
  v5[1] = sub_100014A10;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_100021530(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_100021CC8();
  *uint64_t v4 = v2;
  v4[1] = sub_100016CEC;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

uint64_t sub_1000215E0(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100021E80();
  void *v5 = v2;
  v5[1] = sub_100016CF0;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t sub_100021694()
{
  uint64_t v0 = sub_10007C0A0();
  sub_1000112B4(v0, qword_1000B2340);
  sub_100010740(v0, (uint64_t)qword_1000B2340);
  return sub_10007C080();
}

uint64_t sub_1000216F8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100022E08();
  unint64_t v5 = sub_100022EB0();

  return static _URLRepresentableIntent<>.urlRepresentation.getter(a1, v4, a2, v5);
}

uint64_t sub_100021760()
{
  uint64_t v0 = qword_1000A3EB0;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_100021798@<X0>(uint64_t a1@<X8>)
{
  return sub_100014F9C(&qword_1000A3188, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1000B2340, a1);
}

uint64_t sub_1000217D0(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100022E08();
  unint64_t v7 = sub_100022E5C();
  unint64_t v8 = sub_100022EB0();
  void *v5 = v2;
  v5[1] = sub_100015130;
  return _URLRepresentableIntent<>.perform()(a1, a2, v6, v7, v8);
}

uint64_t sub_1000218A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100022B24();
  *a1 = result;
  return result;
}

uint64_t sub_1000218CC(uint64_t a1)
{
  unint64_t v2 = sub_1000227D8();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t sub_100021908(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_100021928, 0, 0);
}

uint64_t sub_100021928()
{
  unsigned int v1 = [self noteDefaultNamedStyle];
  char v2 = 0;
  switch(v1)
  {
    case 0u:
      break;
    case 1u:
      char v2 = 1;
      break;
    case 2u:
      char v2 = 2;
      break;
    case 3u:
LABEL_5:
      char v2 = 3;
      break;
    case 4u:
      char v2 = 4;
      break;
    case 5u:
      char v2 = 5;
      break;
    default:
      switch(v1)
      {
        case 'd':
          char v2 = 6;
          break;
        case 'e':
          char v2 = 7;
          break;
        case 'f':
          char v2 = 8;
          break;
        case 'g':
          char v2 = 9;
          break;
        default:
          goto LABEL_5;
      }
      break;
  }
  **(unsigned char **)(v0 + 16) = v2;
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100021A6C(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_100021A90, 0, 0);
}

uint64_t sub_100021A90()
{
  [self setNoteDefaultNamedStyle:dword_100083728[*(char *)(v0 + 16)]];
  unsigned int v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t _s37com_apple_mobilenotes_WidgetExtension14ParagraphStyleO8rawValueACSgSS_tcfC_0(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_10009E6A8;
  v6._object = a2;
  unint64_t v4 = sub_10007D220(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 0xA) {
    return 10;
  }
  else {
    return v4;
  }
}

unint64_t sub_100021B68()
{
  unint64_t result = qword_1000A3EC0;
  if (!qword_1000A3EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3EC0);
  }
  return result;
}

unint64_t sub_100021BC0()
{
  unint64_t result = qword_1000A3EC8;
  if (!qword_1000A3EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3EC8);
  }
  return result;
}

unint64_t sub_100021C18()
{
  unint64_t result = qword_1000A3ED8;
  if (!qword_1000A3ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3ED8);
  }
  return result;
}

unint64_t sub_100021C70()
{
  unint64_t result = qword_1000A3EE0;
  if (!qword_1000A3EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3EE0);
  }
  return result;
}

unint64_t sub_100021CC8()
{
  unint64_t result = qword_1000A3EE8;
  if (!qword_1000A3EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3EE8);
  }
  return result;
}

unint64_t sub_100021D20()
{
  unint64_t result = qword_1000A3EF0;
  if (!qword_1000A3EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3EF0);
  }
  return result;
}

unint64_t sub_100021D78()
{
  unint64_t result = qword_1000A3EF8;
  if (!qword_1000A3EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3EF8);
  }
  return result;
}

unint64_t sub_100021DD0()
{
  unint64_t result = qword_1000A3F00;
  if (!qword_1000A3F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3F00);
  }
  return result;
}

unint64_t sub_100021E28()
{
  unint64_t result = qword_1000A3F08;
  if (!qword_1000A3F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3F08);
  }
  return result;
}

unint64_t sub_100021E80()
{
  unint64_t result = qword_1000A3F10;
  if (!qword_1000A3F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3F10);
  }
  return result;
}

unint64_t sub_100021ED8()
{
  unint64_t result = qword_1000A3F20;
  if (!qword_1000A3F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3F20);
  }
  return result;
}

unint64_t sub_100021F30()
{
  unint64_t result = qword_1000A3F28;
  if (!qword_1000A3F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3F28);
  }
  return result;
}

unint64_t sub_100021F88()
{
  unint64_t result = qword_1000A3F30;
  if (!qword_1000A3F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3F30);
  }
  return result;
}

unint64_t sub_100021FE0()
{
  unint64_t result = qword_1000A3F38;
  if (!qword_1000A3F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3F38);
  }
  return result;
}

uint64_t sub_100022034()
{
  return sub_10000CAB4(&qword_1000A3F40, &qword_1000A3F48);
}

unint64_t sub_100022074()
{
  unint64_t result = qword_1000A3F50;
  if (!qword_1000A3F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3F50);
  }
  return result;
}

unint64_t sub_1000220CC()
{
  unint64_t result = qword_1000A3F58;
  if (!qword_1000A3F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3F58);
  }
  return result;
}

unint64_t sub_100022124()
{
  unint64_t result = qword_1000A3F60;
  if (!qword_1000A3F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3F60);
  }
  return result;
}

unint64_t sub_10002217C()
{
  unint64_t result = qword_1000A3F68;
  if (!qword_1000A3F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3F68);
  }
  return result;
}

unint64_t sub_1000221D4()
{
  unint64_t result = qword_1000A3F70;
  if (!qword_1000A3F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3F70);
  }
  return result;
}

unint64_t sub_10002222C()
{
  unint64_t result = qword_1000A3F78;
  if (!qword_1000A3F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3F78);
  }
  return result;
}

unint64_t sub_100022284()
{
  unint64_t result = qword_1000A3F80;
  if (!qword_1000A3F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3F80);
  }
  return result;
}

unint64_t sub_1000222DC()
{
  unint64_t result = qword_1000A3F88;
  if (!qword_1000A3F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3F88);
  }
  return result;
}

unint64_t sub_100022334()
{
  unint64_t result = qword_1000A3F90;
  if (!qword_1000A3F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3F90);
  }
  return result;
}

uint64_t sub_100022388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100022908(a1, a2, a3, (void (*)(void))sub_1000223B4);
}

unint64_t sub_1000223B4()
{
  unint64_t result = qword_1000A3F98;
  if (!qword_1000A3F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3F98);
  }
  return result;
}

unint64_t sub_10002240C()
{
  unint64_t result = qword_1000A3FA0;
  if (!qword_1000A3FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3FA0);
  }
  return result;
}

unint64_t sub_100022464()
{
  unint64_t result = qword_1000A3FA8;
  if (!qword_1000A3FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3FA8);
  }
  return result;
}

unint64_t sub_1000224BC()
{
  unint64_t result = qword_1000A3FB0;
  if (!qword_1000A3FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3FB0);
  }
  return result;
}

uint64_t sub_100022510()
{
  return sub_10000CAB4(&qword_1000A3FB8, &qword_1000A3FC0);
}

unint64_t sub_100022550()
{
  unint64_t result = qword_1000A3FC8;
  if (!qword_1000A3FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3FC8);
  }
  return result;
}

unint64_t sub_1000225A8()
{
  unint64_t result = qword_1000A3FD0[0];
  if (!qword_1000A3FD0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000A3FD0);
  }
  return result;
}

unint64_t sub_100022600()
{
  unint64_t result = qword_1000A3FE8;
  if (!qword_1000A3FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A3FE8);
  }
  return result;
}

unint64_t sub_100022658()
{
  unint64_t result = qword_1000A3FF0[0];
  if (!qword_1000A3FF0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000A3FF0);
  }
  return result;
}

unint64_t sub_1000226B0()
{
  unint64_t result = qword_1000A4008;
  if (!qword_1000A4008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4008);
  }
  return result;
}

unint64_t sub_100022708()
{
  unint64_t result = qword_1000A4010;
  if (!qword_1000A4010)
  {
    sub_10000A43C(qword_1000A4018);
    sub_100021F88();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4010);
  }
  return result;
}

unint64_t sub_100022780()
{
  unint64_t result = qword_1000A4030;
  if (!qword_1000A4030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4030);
  }
  return result;
}

unint64_t sub_1000227D8()
{
  unint64_t result = qword_1000A4038;
  if (!qword_1000A4038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4038);
  }
  return result;
}

unint64_t sub_100022830()
{
  unint64_t result = qword_1000A4040;
  if (!qword_1000A4040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4040);
  }
  return result;
}

unint64_t sub_100022888()
{
  unint64_t result = qword_1000A4048;
  if (!qword_1000A4048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4048);
  }
  return result;
}

uint64_t sub_1000228DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100022908(a1, a2, a3, (void (*)(void))sub_1000227D8);
}

uint64_t sub_100022908(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t getEnumTagSinglePayload for ParagraphStyle(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ParagraphStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100022AACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParagraphStyle()
{
  return &type metadata for ParagraphStyle;
}

ValueMetadata *type metadata accessor for OpenDefaultParagraphStyleDeepLink()
{
  return &type metadata for OpenDefaultParagraphStyleDeepLink;
}

ValueMetadata *type metadata accessor for DefaultParagraphStyleEntityQuery()
{
  return &type metadata for DefaultParagraphStyleEntityQuery;
}

ValueMetadata *type metadata accessor for DefaultParagraphStyleEntity()
{
  return &type metadata for DefaultParagraphStyleEntity;
}

ValueMetadata *type metadata accessor for DefaultParagraphStyleEntity.ChangeDefaultParagraphStyleEntityHandler()
{
  return &type metadata for DefaultParagraphStyleEntity.ChangeDefaultParagraphStyleEntityHandler;
}

uint64_t sub_100022B24()
{
  v17[0] = sub_10007BFB0();
  uint64_t v0 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  int v2 = (char *)v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100008FA4(&qword_1000A3900);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  unsigned int v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  int v8 = (char *)v17 - v7;
  uint64_t v9 = sub_100008FA4(&qword_1000A3908);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10007C0A0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  sub_100008FA4(&qword_1000A4058);
  sub_10007C080();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  v17[1] = 0;
  uint64_t v14 = sub_10007BCF0();
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  v15(v8, 1, 1, v14);
  v15(v6, 1, 1, v14);
  (*(void (**)(char *, void, void))(v0 + 104))(v2, enum case for InputConnectionBehavior.default(_:), v17[0]);
  sub_100021C18();
  return sub_10007BD50();
}

unint64_t sub_100022E08()
{
  unint64_t result = qword_1000A4060;
  if (!qword_1000A4060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4060);
  }
  return result;
}

unint64_t sub_100022E5C()
{
  unint64_t result = qword_1000A4068;
  if (!qword_1000A4068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4068);
  }
  return result;
}

unint64_t sub_100022EB0()
{
  unint64_t result = qword_1000A4070;
  if (!qword_1000A4070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4070);
  }
  return result;
}

uint64_t sub_100022F04@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10007C020();
  *a1 = result;
  return result;
}

unint64_t sub_100022F34()
{
  unint64_t result = qword_1000A40E8;
  if (!qword_1000A40E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A40E8);
  }
  return result;
}

unint64_t sub_100022F8C()
{
  unint64_t result = qword_1000A40F0;
  if (!qword_1000A40F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A40F0);
  }
  return result;
}

uint64_t sub_100022FE0()
{
  uint64_t v0 = sub_100008FA4(&qword_1000A3908);
  __chkstk_darwin(v0 - 8);
  int v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_10007C090();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10007C1A0();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_10007CF20();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_10007C0A0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_10007C050();
  sub_1000112B4(v10, qword_1000B2358);
  sub_100010740(v10, (uint64_t)qword_1000B2358);
  sub_10007CF10();
  sub_10007C190();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_10007C0B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_10007C040();
}

uint64_t sub_1000232B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v29 = a1;
  uint64_t v1 = sub_100008FA4(&qword_1000A3970);
  __chkstk_darwin(v1 - 8);
  uint64_t v30 = (char *)v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100008FA4(&qword_1000A3908);
  __chkstk_darwin(v3 - 8);
  uint64_t v31 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10007C090();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10007C1A0();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_10007CF20();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = sub_10007C0A0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v28 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v27 = (char *)v24 - v15;
  sub_10007CF10();
  sub_10007C190();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  uint64_t v25 = v5;
  v17(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  sub_10007C0B0();
  sub_10007CF10();
  sub_10007C190();
  v17(v8, v16, v5);
  uint64_t v18 = v31;
  sub_10007C0B0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v18, 0, 1, v11);
  id v19 = (id)ICNotesAppBundleIdentifier();
  sub_10007CF40();

  uint64_t v20 = v30;
  sub_10007BEF0();
  uint64_t v21 = sub_10007BF00();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 0, 1, v21);
  sub_100008FA4(&qword_1000A3978);
  v24[1] = 2 * *(void *)(v12 + 72);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1000807D0;
  sub_10007CF10();
  sub_10007C190();
  uint64_t v22 = v25;
  v17(v8, v16, v25);
  sub_10007C0B0();
  sub_10007CF10();
  sub_10007C190();
  v17(v8, v16, v22);
  sub_10007C0B0();
  sub_10007CF10();
  sub_10007C190();
  v17(v8, v16, v22);
  sub_10007C0B0();
  sub_10007CF10();
  sub_10007C190();
  v17(v8, v16, v22);
  sub_10007C0B0();
  return sub_10007BF10();
}

uint64_t sub_1000238FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a1;
  v3[4] = a3;
  sub_10007C0A0();
  v3[5] = swift_task_alloc();
  uint64_t v4 = sub_100008FA4(&qword_1000A3B48);
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  return _swift_task_switch(sub_1000239EC, 0, 0);
}

uint64_t sub_1000239EC()
{
  uint64_t KeyPath = swift_getKeyPath();
  v0[9] = KeyPath;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[10] = v2;
  uint64_t v3 = sub_100008FA4(&qword_1000A4260);
  uint64_t v4 = sub_10000CAB4(&qword_1000A4248, &qword_1000A4250);
  v0[11] = v4;
  *uint64_t v2 = v0;
  v2[1] = sub_100023AEC;
  uint64_t v5 = v0[8];
  return _AppEntityUpdate.value<A>(of:)(v5, KeyPath, v3, v4);
}

uint64_t sub_100023AEC()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100023C04, 0, 0);
}

uint64_t sub_100023C04()
{
  if ((*(unsigned int (**)(void, void))(*(void *)(v0 + 56) + 88))(*(void *)(v0 + 64), *(void *)(v0 + 48)) == enum case for _IntentValueState.set<A>(_:))
  {
    uint64_t v1 = *(char **)(v0 + 64);
    (*(void (**)(char *, void))(*(void *)(v0 + 56) + 96))(v1, *(void *)(v0 + 48));
    char v2 = *v1;
    sub_100008FA4(&qword_1000A4230);
    sub_10007C080();
    *(void *)(v0 + 16) = sub_10007C030();
    *(unsigned char *)(v0 + 120) = v2;
    uint64_t KeyPath = swift_getKeyPath();
    *(void *)(v0 + 96) = KeyPath;
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_100023E30;
    uint64_t v5 = *(void *)(v0 + 88);
    return AppEntity._setValue<A>(_:for:)(v0 + 120, KeyPath, v5);
  }
  else
  {
    (*(void (**)(void, void))(*(void *)(v0 + 56) + 8))(*(void *)(v0 + 64), *(void *)(v0 + 48));
    sub_10007BC30();
    sub_100016C94();
    swift_allocError();
    sub_10007BEC0();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
}

uint64_t sub_100023E30()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    char v2 = sub_100012FE0;
  }
  else {
    char v2 = sub_100023F6C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100023F6C()
{
  sub_100022F8C();
  sub_10007BC20();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100024004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_1000130F0;
  return sub_1000238FC(a1, v6, a3);
}

unint64_t sub_1000240A8()
{
  unint64_t result = qword_1000A4100;
  if (!qword_1000A4100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4100);
  }
  return result;
}

unint64_t sub_100024100()
{
  unint64_t result = qword_1000A4108;
  if (!qword_1000A4108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4108);
  }
  return result;
}

unint64_t sub_100024158()
{
  unint64_t result = qword_1000A4110;
  if (!qword_1000A4110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4110);
  }
  return result;
}

uint64_t sub_1000241AC()
{
  uint64_t v0 = qword_1000A40C8;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_1000241E8()
{
  unint64_t result = qword_1000A4118;
  if (!qword_1000A4118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4118);
  }
  return result;
}

uint64_t sub_10002423C(uint64_t a1)
{
  unint64_t v2 = sub_1000240A8();

  return _EntityURLRepresentation.init(stringLiteral:)(0xD000000000000056, 0x8000000100087D00, a1, v2);
}

unint64_t sub_10002429C()
{
  unint64_t result = qword_1000A4120;
  if (!qword_1000A4120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4120);
  }
  return result;
}

unint64_t sub_1000242F4()
{
  unint64_t result = qword_1000A4128;
  if (!qword_1000A4128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4128);
  }
  return result;
}

unint64_t sub_10002434C()
{
  unint64_t result = qword_1000A4130;
  if (!qword_1000A4130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4130);
  }
  return result;
}

unint64_t sub_1000243A4()
{
  unint64_t result = qword_1000A4138;
  if (!qword_1000A4138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4138);
  }
  return result;
}

uint64_t sub_1000243F8()
{
  sub_1000257C4();
  uint64_t v2 = sub_10007BFC0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_100016C54(v3, v0, v2, v1);
}

unint64_t sub_100024490()
{
  unint64_t result = qword_1000A4148;
  if (!qword_1000A4148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4148);
  }
  return result;
}

unint64_t sub_1000244E8()
{
  unint64_t result = qword_1000A4150;
  if (!qword_1000A4150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4150);
  }
  return result;
}

unint64_t sub_100024540()
{
  unint64_t result = qword_1000A4158;
  if (!qword_1000A4158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4158);
  }
  return result;
}

unint64_t sub_100024598()
{
  unint64_t result = qword_1000A4160;
  if (!qword_1000A4160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4160);
  }
  return result;
}

uint64_t sub_1000245EC@<X0>(uint64_t *a1@<X8>)
{
  sub_1000247F0();
  uint64_t result = sub_10007BD10();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10002462C@<X0>(uint64_t a1@<X8>)
{
  return sub_100018DD0(&qword_1000A3190, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1000B2358, a1);
}

uint64_t sub_100024664()
{
  return sub_10000CAB4(&qword_1000A4168, &qword_1000A4170);
}

uint64_t sub_1000246A0(uint64_t a1)
{
  unint64_t v2 = sub_1000240A8();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1000246F0()
{
  unint64_t result = qword_1000A4178;
  if (!qword_1000A4178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4178);
  }
  return result;
}

uint64_t sub_100024748(uint64_t a1)
{
  unint64_t v2 = sub_100024598();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_100024798()
{
  unint64_t result = qword_1000A4180;
  if (!qword_1000A4180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4180);
  }
  return result;
}

unint64_t sub_1000247F0()
{
  unint64_t result = qword_1000A4188[0];
  if (!qword_1000A4188[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000A4188);
  }
  return result;
}

uint64_t sub_100024844(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  sub_10007C0A0();
  *(void *)(v1 + 24) = swift_task_alloc();
  return _swift_task_switch(sub_1000248D4, 0, 0);
}

uint64_t sub_1000248D4()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  sub_100008FA4(&qword_1000A4230);
  sub_10007C080();
  sub_10000CAB4(&qword_1000A4248, &qword_1000A4250);
  *uint64_t v1 = sub_10007C030();
  swift_task_dealloc();
  unint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1000249DC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_100024158();
  *uint64_t v4 = v2;
  v4[1] = sub_100014848;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_100024A90()
{
  unint64_t result = qword_1000A41A0;
  if (!qword_1000A41A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A41A0);
  }
  return result;
}

unint64_t sub_100024AE8()
{
  unint64_t result = qword_1000A41A8[0];
  if (!qword_1000A41A8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000A41A8);
  }
  return result;
}

uint64_t sub_100024B3C(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100024158();
  void *v5 = v2;
  v5[1] = sub_100014A10;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_100024BF0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_100024158();
  *uint64_t v4 = v2;
  v4[1] = sub_100016CEC;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_100024CA4()
{
  unint64_t result = qword_1000A41C0;
  if (!qword_1000A41C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A41C0);
  }
  return result;
}

unint64_t sub_100024CFC()
{
  unint64_t result = qword_1000A41C8;
  if (!qword_1000A41C8)
  {
    sub_10000A43C(qword_1000A41D0);
    sub_100024540();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A41C8);
  }
  return result;
}

uint64_t sub_100024D70(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1000243A4();
  void *v5 = v2;
  v5[1] = sub_100016CF0;
  return EntityQuery.results()(a1, a2, v6);
}

unint64_t sub_100024E28()
{
  unint64_t result = qword_1000A41E8;
  if (!qword_1000A41E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A41E8);
  }
  return result;
}

uint64_t sub_100024E7C()
{
  uint64_t v0 = sub_10007C0A0();
  sub_1000112B4(v0, qword_1000B2370);
  sub_100010740(v0, (uint64_t)qword_1000B2370);
  return sub_10007C080();
}

unint64_t sub_100024EE4()
{
  unint64_t result = qword_1000A41F0;
  if (!qword_1000A41F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A41F0);
  }
  return result;
}

uint64_t sub_100024F38(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_10002571C();
  unint64_t v5 = sub_1000257C4();

  return static _URLRepresentableIntent<>.urlRepresentation.getter(a1, v4, a2, v5);
}

uint64_t sub_100024FA0()
{
  uint64_t v0 = qword_1000A40D8;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_100024FDC()
{
  unint64_t result = qword_1000A41F8;
  if (!qword_1000A41F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A41F8);
  }
  return result;
}

unint64_t sub_100025034()
{
  unint64_t result = qword_1000A4200;
  if (!qword_1000A4200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4200);
  }
  return result;
}

uint64_t sub_100025088()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000250D8@<X0>(uint64_t a1@<X8>)
{
  return sub_100018DD0(&qword_1000A3198, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1000B2370, a1);
}

uint64_t sub_100025110(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10002571C();
  unint64_t v7 = sub_100025770();
  unint64_t v8 = sub_1000257C4();
  void *v5 = v2;
  v5[1] = sub_100015130;
  return _URLRepresentableIntent<>.perform()(a1, a2, v6, v7, v8);
}

uint64_t sub_1000251E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100025438();
  *a1 = result;
  return result;
}

uint64_t sub_10002520C(uint64_t a1)
{
  unint64_t v2 = sub_100024EE4();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenAutoSortCheckedItemsDeepLink()
{
  return &type metadata for OpenAutoSortCheckedItemsDeepLink;
}

ValueMetadata *type metadata accessor for AutoSortCheckedItemsEntityQuery()
{
  return &type metadata for AutoSortCheckedItemsEntityQuery;
}

ValueMetadata *type metadata accessor for AutoSortCheckedItemsEntity()
{
  return &type metadata for AutoSortCheckedItemsEntity;
}

ValueMetadata *type metadata accessor for AutoSortCheckedItemsEntity.ChangeAutoSortCheckedItemsEntityHandler()
{
  return &type metadata for AutoSortCheckedItemsEntity.ChangeAutoSortCheckedItemsEntityHandler;
}

uint64_t sub_100025288(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_1000252A8, 0, 0);
}

uint64_t sub_1000252A8()
{
  uint64_t v1 = *(unsigned char **)(v0 + 16);
  unint64_t v2 = self;
  NSString v3 = sub_10007CF30();
  LOBYTE(v2) = [v2 BOOLForKey:v3];

  *uint64_t v1 = (_BYTE)v2;
  unint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100025360(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_100025384, 0, 0);
}

uint64_t sub_100025384()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 16);
  uint64_t v2 = self;
  NSString v3 = sub_10007CF30();
  [v2 setBool:v1 forKey:v3];

  unint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100025438()
{
  v17[0] = sub_10007BFB0();
  uint64_t v0 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v2 = (char *)v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100008FA4(&qword_1000A3900);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unint64_t v8 = (char *)v17 - v7;
  uint64_t v9 = sub_100008FA4(&qword_1000A3908);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10007C0A0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  sub_100008FA4(&qword_1000A4210);
  sub_10007C080();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  v17[1] = 0;
  uint64_t v14 = sub_10007BCF0();
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  v15(v8, 1, 1, v14);
  v15(v6, 1, 1, v14);
  (*(void (**)(char *, void, void))(v0 + 104))(v2, enum case for InputConnectionBehavior.default(_:), v17[0]);
  sub_1000240A8();
  return sub_10007BD50();
}

unint64_t sub_10002571C()
{
  unint64_t result = qword_1000A4218;
  if (!qword_1000A4218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4218);
  }
  return result;
}

unint64_t sub_100025770()
{
  unint64_t result = qword_1000A4220;
  if (!qword_1000A4220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4220);
  }
  return result;
}

unint64_t sub_1000257C4()
{
  unint64_t result = qword_1000A4228;
  if (!qword_1000A4228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4228);
  }
  return result;
}

uint64_t sub_100025818@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10007C020();
  *a1 = result;
  return result;
}

unint64_t sub_100025844(uint64_t a1)
{
  return sub_100025894(a1, &qword_1000A39A8, &qword_1000A44A8, (uint64_t (*)(void))sub_1000281FC);
}

unint64_t sub_10002586C(uint64_t a1)
{
  return sub_100025894(a1, &qword_1000A40C0, &qword_1000A44A0, (uint64_t (*)(void))sub_100028240);
}

unint64_t sub_100025894(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v29 = a4;
  uint64_t v7 = sub_100008FA4(a2);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v12 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100008FA4(a3);
  uint64_t v11 = sub_10007D200();
  uint64_t v12 = (void *)v11;
  uint64_t v13 = *(void *)(a1 + 16);
  if (!v13)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v12;
  }
  uint64_t v14 = &v10[*(int *)(v7 + 48)];
  uint64_t v15 = v11 + 64;
  unint64_t v16 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v28 = a1;
  uint64_t v17 = a1 + v16;
  uint64_t v18 = *(void *)(v8 + 72);
  swift_retain();
  while (1)
  {
    sub_10000CB64(v17, (uint64_t)v10, a2);
    char v19 = *v10;
    unint64_t result = v29(*v10);
    if (v21) {
      break;
    }
    unint64_t v22 = result;
    *(void *)(v15 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(unsigned char *)(v12[6] + result) = v19;
    uint64_t v23 = v12[7];
    uint64_t v24 = sub_10007BF30();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v23 + *(void *)(*(void *)(v24 - 8) + 72) * v22, v14, v24);
    uint64_t v25 = v12[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26) {
      goto LABEL_11;
    }
    void v12[2] = v27;
    v17 += v18;
    if (!--v13)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100025A90(char a1, char a2)
{
  if (*(void *)&aNone_2[8 * a1] == *(void *)&aNone_2[8 * a2]
    && *(void *)&aGridsmalgridme_0[8 * a1 + 48] == *(void *)&aGridsmalgridme_0[8 * a2 + 48])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_10007D240();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_100025B18(char a1, char a2)
{
  if (*(void *)&aModifiedcreate[8 * a1] == *(void *)&aModifiedcreate[8 * a2]
    && *(void *)&aDate_2[8 * a1] == *(void *)&aDate_2[8 * a2])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_10007D240();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

Swift::Int sub_100025BA0()
{
  return sub_10007D280();
}

uint64_t sub_100025C0C()
{
  sub_10007CF60();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100025C60()
{
  sub_10007CF60();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100025CB4()
{
  return sub_10007D280();
}

Swift::Int sub_100025D1C()
{
  return sub_10007D280();
}

uint64_t sub_100025D84(uint64_t a1)
{
  return sub_100026CEC(a1, qword_1000B2388, (uint64_t)"Device Expert Type Display Representation", 41);
}

uint64_t sub_100025D9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v1 = sub_100008FA4(&qword_1000A3970);
  __chkstk_darwin(v1 - 8);
  uint64_t v30 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100008FA4(&qword_1000A3908);
  __chkstk_darwin(v3 - 8);
  uint64_t v29 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10007C090();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10007C1A0();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_10007CF20();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = sub_10007C0A0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v27 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  BOOL v26 = (char *)&v24 - v15;
  sub_10007CF10();
  sub_10007C190();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  uint64_t v25 = v5;
  v17(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  sub_10007C0B0();
  sub_10007CF10();
  sub_10007C190();
  v17(v8, v16, v5);
  uint64_t v18 = v29;
  sub_10007C0B0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v18, 0, 1, v11);
  id v19 = (id)ICNotesAppBundleIdentifier();
  sub_10007CF40();

  uint64_t v20 = v30;
  sub_10007BEF0();
  uint64_t v21 = sub_10007BF00();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 0, 1, v21);
  sub_100008FA4(&qword_1000A3978);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100080BC0;
  sub_10007CF10();
  sub_10007C190();
  uint64_t v22 = v25;
  v17(v8, v16, v25);
  sub_10007C0B0();
  sub_10007CF10();
  sub_10007C190();
  v17(v8, v16, v22);
  sub_10007C0B0();
  return sub_10007BF10();
}

uint64_t sub_1000262E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a1;
  v3[4] = a3;
  sub_10007C0A0();
  v3[5] = swift_task_alloc();
  uint64_t v4 = sub_100008FA4(&qword_1000A4478);
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  return _swift_task_switch(sub_1000263D8, 0, 0);
}

uint64_t sub_1000263D8()
{
  uint64_t KeyPath = swift_getKeyPath();
  v0[9] = KeyPath;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[10] = v2;
  uint64_t v3 = sub_100008FA4(&qword_1000A4480);
  uint64_t v4 = sub_10000CAB4(&qword_1000A4460, &qword_1000A4468);
  v0[11] = v4;
  *uint64_t v2 = v0;
  v2[1] = sub_1000264D8;
  uint64_t v5 = v0[8];
  return _AppEntityUpdate.value<A>(of:)(v5, KeyPath, v3, v4);
}

uint64_t sub_1000264D8()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_1000265F0, 0, 0);
}

uint64_t sub_1000265F0()
{
  if ((*(unsigned int (**)(void, void))(*(void *)(v0 + 56) + 88))(*(void *)(v0 + 64), *(void *)(v0 + 48)) == enum case for _IntentValueState.set<A>(_:))
  {
    uint64_t v1 = *(char **)(v0 + 64);
    (*(void (**)(char *, void))(*(void *)(v0 + 56) + 96))(v1, *(void *)(v0 + 48));
    char v2 = *v1;
    sub_100008FA4(&qword_1000A4448);
    sub_10007C080();
    *(void *)(v0 + 16) = sub_10007C030();
    *(unsigned char *)(v0 + 120) = v2;
    uint64_t KeyPath = swift_getKeyPath();
    *(void *)(v0 + 96) = KeyPath;
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_100026824;
    uint64_t v5 = *(void *)(v0 + 88);
    return AppEntity._setValue<A>(_:for:)(v0 + 120, KeyPath, v5);
  }
  else
  {
    (*(void (**)(void, void))(*(void *)(v0 + 56) + 8))(*(void *)(v0 + 64), *(void *)(v0 + 48));
    sub_10007BC30();
    sub_100016C94();
    swift_allocError();
    sub_10007BEC0();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
}

uint64_t sub_100026824()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    char v2 = sub_100012FE0;
  }
  else {
    char v2 = sub_100026960;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100026960()
{
  sub_10002873C();
  sub_10007BC20();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000269F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_1000130F0;
  return sub_1000262E8(a1, v6, a3);
}

uint64_t sub_100026A98()
{
  uint64_t v0 = qword_1000A4268;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_100026AD0(uint64_t a1)
{
  unint64_t v2 = sub_100028794();

  return _EntityURLRepresentation.init(stringLiteral:)(0xD00000000000004DLL, 0x8000000100087DE0, a1, v2);
}

uint64_t sub_100026B2C()
{
  sub_100029BCC();
  uint64_t v2 = sub_10007BFC0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_100016C54(v3, v0, v2, v1);
}

uint64_t sub_100026BC0@<X0>(uint64_t *a1@<X8>)
{
  sub_100029124();
  uint64_t result = sub_10007BD10();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100026C00@<X0>(uint64_t a1@<X8>)
{
  return sub_100014F9C(&qword_1000A31A0, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1000B2388, a1);
}

uint64_t sub_100026C38(uint64_t a1)
{
  unint64_t v2 = sub_100028794();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_100026C88(uint64_t a1)
{
  unint64_t v2 = sub_100028B5C();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_100026CD4(uint64_t a1)
{
  return sub_100026CEC(a1, static NoteListSortType.typeDisplayRepresentation, (uint64_t)"Title for entity representing note list sort types", 50);
}

uint64_t sub_100026CEC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  v17[1] = a3;
  void v17[2] = a4;
  uint64_t v5 = sub_100008FA4(&qword_1000A3908);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_10007C090();
  uint64_t v8 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10007C1A0();
  __chkstk_darwin(v11 - 8);
  uint64_t v12 = sub_10007CF20();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = sub_10007C0A0();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = sub_10007C050();
  sub_1000112B4(v15, a2);
  sub_100010740(v15, (uint64_t)a2);
  sub_10007CF10();
  sub_10007C190();
  (*(void (**)(char *, void, void))(v8 + 104))(v10, enum case for LocalizedStringResource.BundleDescription.main(_:), v17[0]);
  sub_10007C0B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v7, 1, 1, v13);
  return sub_10007C040();
}

uint64_t NoteListSortType.typeDisplayRepresentation.unsafeMutableAddressor()
{
  if (qword_1000A31A8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_10007C050();

  return sub_100010740(v0, (uint64_t)static NoteListSortType.typeDisplayRepresentation);
}

uint64_t static NoteListSortType.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1000A31A8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10007C050();
  uint64_t v3 = sub_100010740(v2, (uint64_t)static NoteListSortType.typeDisplayRepresentation);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

unint64_t sub_1000270D0()
{
  uint64_t v0 = sub_100008FA4(&qword_1000A3970);
  __chkstk_darwin(v0 - 8);
  uint64_t v39 = (char *)v29 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_100008FA4(&qword_1000A3908);
  __chkstk_darwin(v2 - 8);
  uint64_t v46 = (char *)v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_10007C090();
  uint64_t v4 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10007C1A0();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10007CF20();
  __chkstk_darwin(v10 - 8);
  uint64_t v45 = sub_10007C0A0();
  uint64_t v47 = *(void *)(v45 - 8);
  uint64_t v11 = __chkstk_darwin(v45);
  uint64_t v38 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v35 = (char *)v29 - v14;
  __chkstk_darwin(v13);
  sub_100008FA4(&qword_1000A4488);
  uint64_t v15 = (int *)(sub_100008FA4(&qword_1000A4490) - 8);
  uint64_t v16 = *(void *)(*(void *)v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(*(void *)v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v15 + 80);
  uint64_t v36 = 2 * v16;
  uint64_t v18 = swift_allocObject();
  uint64_t v37 = v18;
  *(_OWORD *)(v18 + 16) = xmmword_1000807D0;
  unint64_t v43 = v18 + v17;
  *(unsigned char *)(v18 + v17) = 0;
  uint64_t v31 = (unsigned char *)(v18 + v17 + v15[14]);
  sub_10007CF10();
  sub_10007C190();
  unsigned int v32 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  id v19 = *(void (**)(char *))(v4 + 104);
  uint64_t v33 = v4 + 104;
  v19(v6);
  uint64_t v30 = (void (*)(char *, uint64_t, uint64_t))v19;
  sub_10007C0B0();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v47 + 56);
  v47 += 56;
  uint64_t v44 = v20;
  v20(v46, 1, 1, v45);
  uint64_t v41 = sub_10007BF00();
  uint64_t v21 = *(void *)(v41 - 8);
  uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  uint64_t v42 = v21 + 56;
  uint64_t v22 = v39;
  v40(v39, 1, 1, v41);
  sub_10007BF20();
  uint64_t v23 = (unsigned char *)(v43 + v16);
  *uint64_t v23 = 1;
  uint64_t v31 = &v23[v15[14]];
  sub_10007CF10();
  v29[1] = v9;
  sub_10007C190();
  uint64_t v24 = v32;
  uint64_t v25 = v34;
  ((void (*)(char *, void, uint64_t))v19)(v6, v32, v34);
  sub_10007C0B0();
  uint64_t v27 = v45;
  BOOL v26 = v46;
  v44(v46, 1, 1, v45);
  v40(v22, 1, 1, v41);
  sub_10007BF20();
  *(unsigned char *)(v43 + v36) = 2;
  sub_10007CF10();
  sub_10007C190();
  v30(v6, v24, v25);
  sub_10007C0B0();
  v44(v26, 1, 1, v27);
  v40(v22, 1, 1, v41);
  sub_10007BF20();
  unint64_t result = sub_100025894(v37, &qword_1000A4490, &qword_1000A4498, (uint64_t (*)(void))sub_1000282C8);
  static NoteListSortType.caseDisplayRepresentations = result;
  return result;
}

uint64_t *NoteListSortType.caseDisplayRepresentations.unsafeMutableAddressor()
{
  if (qword_1000A31B0 != -1) {
    swift_once();
  }
  return &static NoteListSortType.caseDisplayRepresentations;
}

uint64_t static NoteListSortType.caseDisplayRepresentations.getter()
{
  if (qword_1000A31B0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static NoteListSortType.caseDisplayRepresentations.setter(uint64_t a1)
{
  if (qword_1000A31B0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  static NoteListSortType.caseDisplayRepresentations = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static NoteListSortType.caseDisplayRepresentations.modify())()
{
  if (qword_1000A31B0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

_UNKNOWN **static NoteListSortType.allCases.getter()
{
  return &off_10009E850;
}

uint64_t NoteListSortType.rawValue.getter(char a1)
{
  return *(void *)&aModifiedcreate[8 * a1];
}

uint64_t sub_10002796C(char *a1, char *a2)
{
  return sub_100025B18(*a1, *a2);
}

uint64_t sub_100027978@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = _s37com_apple_mobilenotes_WidgetExtension16NoteListSortTypeO8rawValueACSgSS_tcfC_0(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_1000279A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = NoteListSortType.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

Swift::Int sub_1000279D4()
{
  return sub_100025BA0();
}

uint64_t sub_1000279DC()
{
  return sub_100025C60();
}

Swift::Int sub_1000279E4()
{
  return sub_100025CB4();
}

uint64_t sub_1000279EC@<X0>(uint64_t a1@<X8>)
{
  return sub_100014F9C(&qword_1000A31A8, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)static NoteListSortType.typeDisplayRepresentation, a1);
}

uint64_t sub_100027A24(uint64_t a1)
{
  unint64_t v2 = sub_100028F30();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_100027A70(uint64_t a1)
{
  unint64_t v2 = sub_100028EB0();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

void sub_100027ABC(void *a1@<X8>)
{
  *a1 = &off_10009E878;
}

uint64_t sub_100027ACC(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_1000A4440 + dword_1000A4440);
  unint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *unint64_t v2 = v1;
  v2[1] = sub_100016CEC;
  return v4();
}

uint64_t sub_100027B70(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_100028844();
  *uint64_t v4 = v2;
  v4[1] = sub_100014848;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

uint64_t sub_100027C20(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100028844();
  void *v5 = v2;
  v5[1] = sub_100014A10;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_100027CD4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_100028844();
  *uint64_t v4 = v2;
  v4[1] = sub_100016CEC;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

uint64_t sub_100027D84(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1000289FC();
  void *v5 = v2;
  v5[1] = sub_100016CF0;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t sub_100027E38()
{
  uint64_t v0 = sub_10007C0A0();
  sub_1000112B4(v0, qword_1000B23C0);
  sub_100010740(v0, (uint64_t)qword_1000B23C0);
  return sub_10007C080();
}

uint64_t sub_100027E9C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100029B24();
  unint64_t v5 = sub_100029BCC();

  return static _URLRepresentableIntent<>.urlRepresentation.getter(a1, v4, a2, v5);
}

uint64_t sub_100027F04()
{
  uint64_t v0 = qword_1000A4278;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_100027F3C@<X0>(uint64_t a1@<X8>)
{
  return sub_100014F9C(&qword_1000A31B8, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1000B23C0, a1);
}

uint64_t sub_100027F74(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100029B24();
  unint64_t v7 = sub_100029B78();
  unint64_t v8 = sub_100029BCC();
  void *v5 = v2;
  v5[1] = sub_100015130;
  return _URLRepresentableIntent<>.perform()(a1, a2, v6, v7, v8);
}

uint64_t sub_100028048@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100029840();
  *a1 = result;
  return result;
}

uint64_t sub_100028070(uint64_t a1)
{
  unint64_t v2 = sub_10002935C();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t sub_1000280AC(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_1000280CC, 0, 0);
}

uint64_t sub_1000280CC()
{
  uint64_t v1 = *(char **)(v0 + 16);
  id v2 = [self currentNoteListSortType];
  if (v2 == (id)2) {
    char v3 = 2;
  }
  else {
    char v3 = v2 == (id)1;
  }
  *uint64_t v1 = v3;
  unint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10002815C(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_100028180, 0, 0);
}

uint64_t sub_100028180()
{
  [self setCurrentNoteListSortType:*(unsigned __int8 *)(v0 + 16)];
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_1000281FC(char a1)
{
  Swift::Int v2 = sub_100025D1C();

  return sub_100028358(a1, v2);
}

unint64_t sub_100028240(char a1)
{
  sub_10007D270();
  ParagraphStyle.rawValue.getter(a1);
  sub_10007CF60();
  swift_bridgeObjectRelease();
  Swift::Int v2 = sub_10007D280();

  return sub_10002846C(a1, v2);
}

unint64_t sub_1000282C8(char a1)
{
  sub_10007D270();
  sub_10007CF60();
  swift_bridgeObjectRelease();
  Swift::Int v2 = sub_10007D280();

  return sub_100028580(a1, v2);
}

unint64_t sub_100028358(char a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = 8 * a1;
    uint64_t v7 = *(void *)&aNone_2[v6];
    uint64_t v8 = *(void *)&aGridsmalgridme_0[v6 + 48];
    while (*(void *)&aNone_2[8 * *(char *)(*(void *)(v2 + 48) + v4)] != v7
         || *(void *)&aGridsmalgridme_0[8 * *(char *)(*(void *)(v2 + 48) + v4) + 48] != v8)
    {
      char v10 = sub_10007D240();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v10 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v5;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v4;
}

unint64_t sub_10002846C(char a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = 8 * a1;
    uint64_t v7 = *(void *)&aTitle_6[v6];
    uint64_t v8 = *(void *)&aListbulllistda_0[v6 + 32];
    while (*(void *)&aTitle_6[8 * *(char *)(*(void *)(v2 + 48) + v4)] != v7
         || *(void *)&aListbulllistda_0[8 * *(char *)(*(void *)(v2 + 48) + v4) + 32] != v8)
    {
      char v10 = sub_10007D240();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v10 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v5;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v4;
}

unint64_t sub_100028580(char a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = 8 * a1;
    uint64_t v7 = *(void *)&aModifiedcreate[v6];
    uint64_t v8 = *(void *)&aDate_2[v6];
    while (*(void *)&aModifiedcreate[8 * *(char *)(*(void *)(v2 + 48) + v4)] != v7
         || *(void *)&aDate_2[8 * *(char *)(*(void *)(v2 + 48) + v4)] != v8)
    {
      char v10 = sub_10007D240();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v10 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v5;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v4;
}

uint64_t _s37com_apple_mobilenotes_WidgetExtension16NoteListSortTypeO8rawValueACSgSS_tcfC_0(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_10009E7E8;
  v6._object = a2;
  unint64_t v4 = sub_10007D220(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 3) {
    return 3;
  }
  else {
    return v4;
  }
}

unint64_t sub_1000286E4()
{
  unint64_t result = qword_1000A4288;
  if (!qword_1000A4288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4288);
  }
  return result;
}

unint64_t sub_10002873C()
{
  unint64_t result = qword_1000A4290;
  if (!qword_1000A4290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4290);
  }
  return result;
}

unint64_t sub_100028794()
{
  unint64_t result = qword_1000A42A0;
  if (!qword_1000A42A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A42A0);
  }
  return result;
}

unint64_t sub_1000287EC()
{
  unint64_t result = qword_1000A42A8;
  if (!qword_1000A42A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A42A8);
  }
  return result;
}

unint64_t sub_100028844()
{
  unint64_t result = qword_1000A42B0;
  if (!qword_1000A42B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A42B0);
  }
  return result;
}

unint64_t sub_10002889C()
{
  unint64_t result = qword_1000A42B8;
  if (!qword_1000A42B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A42B8);
  }
  return result;
}

unint64_t sub_1000288F4()
{
  unint64_t result = qword_1000A42C0;
  if (!qword_1000A42C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A42C0);
  }
  return result;
}

unint64_t sub_10002894C()
{
  unint64_t result = qword_1000A42C8;
  if (!qword_1000A42C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A42C8);
  }
  return result;
}

unint64_t sub_1000289A4()
{
  unint64_t result = qword_1000A42D0;
  if (!qword_1000A42D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A42D0);
  }
  return result;
}

unint64_t sub_1000289FC()
{
  unint64_t result = qword_1000A42D8;
  if (!qword_1000A42D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A42D8);
  }
  return result;
}

unint64_t sub_100028A54()
{
  unint64_t result = qword_1000A42E8;
  if (!qword_1000A42E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A42E8);
  }
  return result;
}

unint64_t sub_100028AAC()
{
  unint64_t result = qword_1000A42F0;
  if (!qword_1000A42F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A42F0);
  }
  return result;
}

unint64_t sub_100028B04()
{
  unint64_t result = qword_1000A42F8;
  if (!qword_1000A42F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A42F8);
  }
  return result;
}

unint64_t sub_100028B5C()
{
  unint64_t result = qword_1000A4300;
  if (!qword_1000A4300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4300);
  }
  return result;
}

uint64_t sub_100028BB0()
{
  return sub_10000CAB4(&qword_1000A4308, &qword_1000A4310);
}

unint64_t sub_100028BF0()
{
  unint64_t result = qword_1000A4318;
  if (!qword_1000A4318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4318);
  }
  return result;
}

unint64_t sub_100028C48()
{
  unint64_t result = qword_1000A4320;
  if (!qword_1000A4320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4320);
  }
  return result;
}

unint64_t sub_100028CA0()
{
  unint64_t result = qword_1000A4328;
  if (!qword_1000A4328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4328);
  }
  return result;
}

unint64_t sub_100028CF8()
{
  unint64_t result = qword_1000A4330;
  if (!qword_1000A4330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4330);
  }
  return result;
}

unint64_t sub_100028D50()
{
  unint64_t result = qword_1000A4338;
  if (!qword_1000A4338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4338);
  }
  return result;
}

unint64_t sub_100028DA8()
{
  unint64_t result = qword_1000A4340;
  if (!qword_1000A4340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4340);
  }
  return result;
}

unint64_t sub_100028E00()
{
  unint64_t result = qword_1000A4348;
  if (!qword_1000A4348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4348);
  }
  return result;
}

unint64_t sub_100028E58()
{
  unint64_t result = qword_1000A4350;
  if (!qword_1000A4350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4350);
  }
  return result;
}

unint64_t sub_100028EB0()
{
  unint64_t result = qword_1000A4358;
  if (!qword_1000A4358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4358);
  }
  return result;
}

uint64_t sub_100028F04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10002948C(a1, a2, a3, (void (*)(void))sub_100028F30);
}

unint64_t sub_100028F30()
{
  unint64_t result = qword_1000A4360;
  if (!qword_1000A4360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4360);
  }
  return result;
}

unint64_t sub_100028F88()
{
  unint64_t result = qword_1000A4368;
  if (!qword_1000A4368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4368);
  }
  return result;
}

unint64_t sub_100028FE0()
{
  unint64_t result = qword_1000A4370;
  if (!qword_1000A4370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4370);
  }
  return result;
}

unint64_t sub_100029038()
{
  unint64_t result = qword_1000A4378;
  if (!qword_1000A4378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4378);
  }
  return result;
}

uint64_t sub_10002908C()
{
  return sub_10000CAB4(&qword_1000A4380, &qword_1000A4388);
}

unint64_t sub_1000290CC()
{
  unint64_t result = qword_1000A4390;
  if (!qword_1000A4390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4390);
  }
  return result;
}

unint64_t sub_100029124()
{
  unint64_t result = qword_1000A4398[0];
  if (!qword_1000A4398[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000A4398);
  }
  return result;
}

unint64_t sub_100029180()
{
  unint64_t result = qword_1000A43B0;
  if (!qword_1000A43B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A43B0);
  }
  return result;
}

unint64_t sub_1000291D8()
{
  unint64_t result = qword_1000A43B8[0];
  if (!qword_1000A43B8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000A43B8);
  }
  return result;
}

unint64_t sub_100029230()
{
  unint64_t result = qword_1000A43D0;
  if (!qword_1000A43D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A43D0);
  }
  return result;
}

unint64_t sub_100029288()
{
  unint64_t result = qword_1000A43D8;
  if (!qword_1000A43D8)
  {
    sub_10000A43C(qword_1000A43E0);
    sub_100028B04();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A43D8);
  }
  return result;
}

unint64_t sub_100029300()
{
  unint64_t result = qword_1000A43F8;
  if (!qword_1000A43F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A43F8);
  }
  return result;
}

unint64_t sub_10002935C()
{
  unint64_t result = qword_1000A4400;
  if (!qword_1000A4400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4400);
  }
  return result;
}

unint64_t sub_1000293B4()
{
  unint64_t result = qword_1000A4408;
  if (!qword_1000A4408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4408);
  }
  return result;
}

unint64_t sub_10002940C()
{
  unint64_t result = qword_1000A4410;
  if (!qword_1000A4410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4410);
  }
  return result;
}

uint64_t sub_100029460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10002948C(a1, a2, a3, (void (*)(void))sub_10002935C);
}

uint64_t sub_10002948C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t getEnumTagSinglePayload for NoteListSortType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for NoteListSortType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100029630);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NoteListSortType()
{
  return &type metadata for NoteListSortType;
}

ValueMetadata *type metadata accessor for OpenNoteListSortTypeDeepLink()
{
  return &type metadata for OpenNoteListSortTypeDeepLink;
}

ValueMetadata *type metadata accessor for NoteListSortTypeEntityQuery()
{
  return &type metadata for NoteListSortTypeEntityQuery;
}

ValueMetadata *type metadata accessor for NoteListSortTypeEntity()
{
  return &type metadata for NoteListSortTypeEntity;
}

ValueMetadata *type metadata accessor for NoteListSortTypeEntity.ChangeNoteListSortTypeEntityHandler()
{
  return &type metadata for NoteListSortTypeEntity.ChangeNoteListSortTypeEntityHandler;
}

uint64_t sub_1000296A8()
{
  sub_10007C0A0();
  *(void *)(v0 + 16) = swift_task_alloc();
  return _swift_task_switch(sub_100029734, 0, 0);
}

uint64_t sub_100029734()
{
  sub_100008FA4(&qword_1000A4448);
  sub_10007C080();
  sub_10000CAB4(&qword_1000A4460, &qword_1000A4468);
  uint64_t v1 = sub_10007C030();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_100029840()
{
  v17[0] = sub_10007BFB0();
  uint64_t v0 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v2 = (char *)v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100008FA4(&qword_1000A3900);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  unsigned int v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  int v8 = (char *)v17 - v7;
  uint64_t v9 = sub_100008FA4(&qword_1000A3908);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10007C0A0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  sub_100008FA4(&qword_1000A4420);
  sub_10007C080();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  v17[1] = 0;
  uint64_t v14 = sub_10007BCF0();
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  v15(v8, 1, 1, v14);
  v15(v6, 1, 1, v14);
  (*(void (**)(char *, void, void))(v0 + 104))(v2, enum case for InputConnectionBehavior.default(_:), v17[0]);
  sub_100028794();
  return sub_10007BD50();
}

unint64_t sub_100029B24()
{
  unint64_t result = qword_1000A4428;
  if (!qword_1000A4428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4428);
  }
  return result;
}

unint64_t sub_100029B78()
{
  unint64_t result = qword_1000A4430;
  if (!qword_1000A4430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4430);
  }
  return result;
}

unint64_t sub_100029BCC()
{
  unint64_t result = qword_1000A4438;
  if (!qword_1000A4438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4438);
  }
  return result;
}

uint64_t sub_100029C20@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10007C020();
  *a1 = result;
  return result;
}

unint64_t sub_100029C50()
{
  unint64_t result = qword_1000A44D0;
  if (!qword_1000A44D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A44D0);
  }
  return result;
}

unint64_t sub_100029CA8()
{
  unint64_t result = qword_1000A44D8;
  if (!qword_1000A44D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A44D8);
  }
  return result;
}

uint64_t sub_100029CFC()
{
  uint64_t v0 = sub_100008FA4(&qword_1000A3908);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_10007C090();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10007C1A0();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_10007CF20();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_10007C0A0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_10007C050();
  sub_1000112B4(v10, qword_1000B23D8);
  sub_100010740(v10, (uint64_t)qword_1000B23D8);
  sub_10007CF10();
  sub_10007C190();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_10007C0B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_10007C040();
}

uint64_t sub_100029FDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v29 = a1;
  uint64_t v1 = sub_100008FA4(&qword_1000A3970);
  __chkstk_darwin(v1 - 8);
  uint64_t v27 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100008FA4(&qword_1000A3908);
  __chkstk_darwin(v3 - 8);
  uint64_t v30 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10007C090();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10007C1A0();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_10007CF20();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = sub_10007C0A0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v28 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  BOOL v26 = (char *)&v24 - v15;
  sub_10007CF10();
  sub_10007C190();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  unint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  uint64_t v25 = v5;
  v17(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  sub_10007C0B0();
  sub_10007CF10();
  sub_10007C190();
  v17(v8, v16, v5);
  uint64_t v18 = v30;
  sub_10007C0B0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v18, 0, 1, v11);
  id v19 = (id)ICNotesAppBundleIdentifier();
  sub_10007CF40();

  uint64_t v20 = v27;
  sub_10007BEF0();
  uint64_t v21 = sub_10007BF00();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 0, 1, v21);
  sub_100008FA4(&qword_1000A3978);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100080BC0;
  sub_10007CF10();
  sub_10007C190();
  uint64_t v22 = v25;
  v17(v8, v16, v25);
  sub_10007C0B0();
  sub_10007CF10();
  sub_10007C190();
  v17(v8, v16, v22);
  sub_10007C0B0();
  return sub_10007BF10();
}

uint64_t sub_10002A530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a1;
  v3[4] = a3;
  sub_10007C0A0();
  v3[5] = swift_task_alloc();
  uint64_t v4 = sub_100008FA4(&qword_1000A3B48);
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  return _swift_task_switch(sub_10002A620, 0, 0);
}

uint64_t sub_10002A620()
{
  uint64_t KeyPath = swift_getKeyPath();
  v0[9] = KeyPath;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[10] = v2;
  uint64_t v3 = sub_100008FA4(&qword_1000A4650);
  uint64_t v4 = sub_10000CAB4(&qword_1000A4638, &qword_1000A4640);
  v0[11] = v4;
  *uint64_t v2 = v0;
  v2[1] = sub_10002A720;
  uint64_t v5 = v0[8];
  return _AppEntityUpdate.value<A>(of:)(v5, KeyPath, v3, v4);
}

uint64_t sub_10002A720()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_10002A838, 0, 0);
}

uint64_t sub_10002A838()
{
  if ((*(unsigned int (**)(void, void))(*(void *)(v0 + 56) + 88))(*(void *)(v0 + 64), *(void *)(v0 + 48)) == enum case for _IntentValueState.set<A>(_:))
  {
    uint64_t v1 = *(char **)(v0 + 64);
    (*(void (**)(char *, void))(*(void *)(v0 + 56) + 96))(v1, *(void *)(v0 + 48));
    char v2 = *v1;
    sub_100008FA4(&qword_1000A4620);
    sub_10007C080();
    *(void *)(v0 + 16) = sub_10007C030();
    *(unsigned char *)(v0 + 120) = v2;
    uint64_t KeyPath = swift_getKeyPath();
    *(void *)(v0 + 96) = KeyPath;
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_10002AA6C;
    uint64_t v5 = *(void *)(v0 + 88);
    return AppEntity._setValue<A>(_:for:)(v0 + 120, KeyPath, v5);
  }
  else
  {
    (*(void (**)(void, void))(*(void *)(v0 + 56) + 8))(*(void *)(v0 + 64), *(void *)(v0 + 48));
    sub_10007BC30();
    sub_100016C94();
    swift_allocError();
    sub_10007BEC0();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
}

uint64_t sub_10002AA6C()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    char v2 = sub_100012FE0;
  }
  else {
    char v2 = sub_10002ABA8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10002ABA8()
{
  sub_100029CA8();
  sub_10007BC20();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10002AC40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_1000130F0;
  return sub_10002A530(a1, v6, a3);
}

unint64_t sub_10002ACE4()
{
  unint64_t result = qword_1000A44E8;
  if (!qword_1000A44E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A44E8);
  }
  return result;
}

unint64_t sub_10002AD3C()
{
  unint64_t result = qword_1000A44F0;
  if (!qword_1000A44F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A44F0);
  }
  return result;
}

unint64_t sub_10002AD94()
{
  unint64_t result = qword_1000A44F8;
  if (!qword_1000A44F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A44F8);
  }
  return result;
}

uint64_t sub_10002ADE8()
{
  uint64_t v0 = qword_1000A44B0;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_10002AE24()
{
  unint64_t result = qword_1000A4500;
  if (!qword_1000A4500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4500);
  }
  return result;
}

uint64_t sub_10002AE78(uint64_t a1)
{
  unint64_t v2 = sub_10002ACE4();

  return _EntityURLRepresentation.init(stringLiteral:)(0xD00000000000004FLL, 0x8000000100087F20, a1, v2);
}

unint64_t sub_10002AED8()
{
  unint64_t result = qword_1000A4508;
  if (!qword_1000A4508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4508);
  }
  return result;
}

unint64_t sub_10002AF30()
{
  unint64_t result = qword_1000A4510;
  if (!qword_1000A4510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4510);
  }
  return result;
}

unint64_t sub_10002AF88()
{
  unint64_t result = qword_1000A4518;
  if (!qword_1000A4518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4518);
  }
  return result;
}

unint64_t sub_10002AFE0()
{
  unint64_t result = qword_1000A4520;
  if (!qword_1000A4520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4520);
  }
  return result;
}

uint64_t sub_10002B034()
{
  sub_10002C4A4();
  uint64_t v2 = sub_10007BFC0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_100016C54(v3, v0, v2, v1);
}

unint64_t sub_10002B0CC()
{
  unint64_t result = qword_1000A4530;
  if (!qword_1000A4530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4530);
  }
  return result;
}

unint64_t sub_10002B124()
{
  unint64_t result = qword_1000A4538;
  if (!qword_1000A4538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4538);
  }
  return result;
}

unint64_t sub_10002B17C()
{
  unint64_t result = qword_1000A4540;
  if (!qword_1000A4540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4540);
  }
  return result;
}

unint64_t sub_10002B1D4()
{
  unint64_t result = qword_1000A4548;
  if (!qword_1000A4548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4548);
  }
  return result;
}

uint64_t sub_10002B228@<X0>(uint64_t *a1@<X8>)
{
  sub_10002B42C();
  uint64_t result = sub_10007BD10();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10002B268@<X0>(uint64_t a1@<X8>)
{
  return sub_100018DD0(&qword_1000A31C0, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1000B23D8, a1);
}

uint64_t sub_10002B2A0()
{
  return sub_10000CAB4(&qword_1000A4550, &qword_1000A4558);
}

uint64_t sub_10002B2DC(uint64_t a1)
{
  unint64_t v2 = sub_10002ACE4();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10002B32C()
{
  unint64_t result = qword_1000A4560;
  if (!qword_1000A4560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4560);
  }
  return result;
}

uint64_t sub_10002B384(uint64_t a1)
{
  unint64_t v2 = sub_10002B1D4();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_10002B3D4()
{
  unint64_t result = qword_1000A4568;
  if (!qword_1000A4568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4568);
  }
  return result;
}

unint64_t sub_10002B42C()
{
  unint64_t result = qword_1000A4570[0];
  if (!qword_1000A4570[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000A4570);
  }
  return result;
}

uint64_t sub_10002B480(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_1000A4618 + dword_1000A4618);
  unint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *unint64_t v2 = v1;
  v2[1] = sub_100016CEC;
  return v4();
}

uint64_t sub_10002B524(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10002AD94();
  *uint64_t v4 = v2;
  v4[1] = sub_100014848;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_10002B5D8()
{
  unint64_t result = qword_1000A4588;
  if (!qword_1000A4588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4588);
  }
  return result;
}

unint64_t sub_10002B630()
{
  unint64_t result = qword_1000A4590[0];
  if (!qword_1000A4590[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000A4590);
  }
  return result;
}

uint64_t sub_10002B684(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10002AD94();
  void *v5 = v2;
  v5[1] = sub_100014A10;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_10002B738(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10002AD94();
  *uint64_t v4 = v2;
  v4[1] = sub_100016CEC;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_10002B7EC()
{
  unint64_t result = qword_1000A45A8;
  if (!qword_1000A45A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A45A8);
  }
  return result;
}

unint64_t sub_10002B844()
{
  unint64_t result = qword_1000A45B0;
  if (!qword_1000A45B0)
  {
    sub_10000A43C(qword_1000A45B8);
    sub_10002B17C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A45B0);
  }
  return result;
}

uint64_t sub_10002B8B8(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10002AFE0();
  void *v5 = v2;
  v5[1] = sub_100016CF0;
  return EntityQuery.results()(a1, a2, v6);
}

unint64_t sub_10002B970()
{
  unint64_t result = qword_1000A45D0;
  if (!qword_1000A45D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A45D0);
  }
  return result;
}

uint64_t sub_10002B9C4()
{
  uint64_t v0 = sub_10007C0A0();
  sub_1000112B4(v0, qword_1000B23F0);
  sub_100010740(v0, (uint64_t)qword_1000B23F0);
  return sub_10007C080();
}

unint64_t sub_10002BA2C()
{
  unint64_t result = qword_1000A45D8;
  if (!qword_1000A45D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A45D8);
  }
  return result;
}

uint64_t sub_10002BA80(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_10002C3FC();
  unint64_t v5 = sub_10002C4A4();

  return static _URLRepresentableIntent<>.urlRepresentation.getter(a1, v4, a2, v5);
}

uint64_t sub_10002BAE8()
{
  uint64_t v0 = qword_1000A44C0;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_10002BB24()
{
  unint64_t result = qword_1000A45E0;
  if (!qword_1000A45E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A45E0);
  }
  return result;
}

unint64_t sub_10002BB7C()
{
  unint64_t result = qword_1000A45E8;
  if (!qword_1000A45E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A45E8);
  }
  return result;
}

uint64_t sub_10002BBD0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10002BC20@<X0>(uint64_t a1@<X8>)
{
  return sub_100018DD0(&qword_1000A31C8, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1000B23F0, a1);
}

uint64_t sub_10002BC58(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10002C3FC();
  unint64_t v7 = sub_10002C450();
  unint64_t v8 = sub_10002C4A4();
  void *v5 = v2;
  v5[1] = sub_100015130;
  return _URLRepresentableIntent<>.perform()(a1, a2, v6, v7, v8);
}

uint64_t sub_10002BD2C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10002C118();
  *a1 = result;
  return result;
}

uint64_t sub_10002BD54(uint64_t a1)
{
  unint64_t v2 = sub_10002BA2C();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenSavePhotosDeepLink()
{
  return &type metadata for OpenSavePhotosDeepLink;
}

ValueMetadata *type metadata accessor for SavePhotosEntityQuery()
{
  return &type metadata for SavePhotosEntityQuery;
}

ValueMetadata *type metadata accessor for SavePhotosEntity()
{
  return &type metadata for SavePhotosEntity;
}

ValueMetadata *type metadata accessor for SavePhotosEntity.ChangeSavePhotosEntityHandler()
{
  return &type metadata for SavePhotosEntity.ChangeSavePhotosEntityHandler;
}

uint64_t sub_10002BDD0(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_10002BDF0, 0, 0);
}

uint64_t sub_10002BDF0()
{
  uint64_t v1 = *(unsigned char **)(v0 + 16);
  unint64_t v2 = self;
  NSString v3 = sub_10007CF30();
  LOBYTE(v2) = [v2 BOOLForKey:v3];

  *uint64_t v1 = (_BYTE)v2;
  unint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10002BEA8(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_10002BECC, 0, 0);
}

uint64_t sub_10002BECC()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 16);
  uint64_t v2 = self;
  NSString v3 = sub_10007CF30();
  [v2 setBool:v1 forKey:v3];

  unint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10002BF80()
{
  sub_10007C0A0();
  *(void *)(v0 + 16) = swift_task_alloc();
  return _swift_task_switch(sub_10002C00C, 0, 0);
}

uint64_t sub_10002C00C()
{
  sub_100008FA4(&qword_1000A4620);
  sub_10007C080();
  sub_10000CAB4(&qword_1000A4638, &qword_1000A4640);
  uint64_t v1 = sub_10007C030();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_10002C118()
{
  v17[0] = sub_10007BFB0();
  uint64_t v0 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v2 = (char *)v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100008FA4(&qword_1000A3900);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unint64_t v8 = (char *)v17 - v7;
  uint64_t v9 = sub_100008FA4(&qword_1000A3908);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10007C0A0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  sub_100008FA4(&qword_1000A45F8);
  sub_10007C080();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  v17[1] = 0;
  uint64_t v14 = sub_10007BCF0();
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  v15(v8, 1, 1, v14);
  v15(v6, 1, 1, v14);
  (*(void (**)(char *, void, void))(v0 + 104))(v2, enum case for InputConnectionBehavior.default(_:), v17[0]);
  sub_10002ACE4();
  return sub_10007BD50();
}

unint64_t sub_10002C3FC()
{
  unint64_t result = qword_1000A4600;
  if (!qword_1000A4600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4600);
  }
  return result;
}

unint64_t sub_10002C450()
{
  unint64_t result = qword_1000A4608;
  if (!qword_1000A4608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4608);
  }
  return result;
}

unint64_t sub_10002C4A4()
{
  unint64_t result = qword_1000A4610;
  if (!qword_1000A4610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4610);
  }
  return result;
}

uint64_t sub_10002C4F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10007C020();
  *a1 = result;
  return result;
}

unint64_t sub_10002C528()
{
  unint64_t result = qword_1000A4678;
  if (!qword_1000A4678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4678);
  }
  return result;
}

unint64_t sub_10002C580()
{
  unint64_t result = qword_1000A4680;
  if (!qword_1000A4680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4680);
  }
  return result;
}

uint64_t sub_10002C5D4()
{
  uint64_t v0 = sub_100008FA4(&qword_1000A3908);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_10007C090();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10007C1A0();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_10007CF20();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_10007C0A0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_10007C050();
  sub_1000112B4(v10, qword_1000B2408);
  sub_100010740(v10, (uint64_t)qword_1000B2408);
  sub_10007CF10();
  sub_10007C190();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_10007C0B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_10007C040();
}

uint64_t sub_10002C8AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v1 = sub_100008FA4(&qword_1000A3970);
  __chkstk_darwin(v1 - 8);
  uint64_t v30 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100008FA4(&qword_1000A3908);
  __chkstk_darwin(v3 - 8);
  uint64_t v29 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10007C090();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10007C1A0();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_10007CF20();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = sub_10007C0A0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v27 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  BOOL v26 = (char *)&v24 - v15;
  sub_10007CF10();
  sub_10007C190();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  unint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  uint64_t v25 = v5;
  v17(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  sub_10007C0B0();
  sub_10007CF10();
  sub_10007C190();
  v17(v8, v16, v5);
  uint64_t v18 = v29;
  sub_10007C0B0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v18, 0, 1, v11);
  id v19 = (id)ICNotesAppBundleIdentifier();
  sub_10007CF40();

  uint64_t v20 = v30;
  sub_10007BEF0();
  uint64_t v21 = sub_10007BF00();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 0, 1, v21);
  sub_100008FA4(&qword_1000A3978);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100080BC0;
  sub_10007CF10();
  sub_10007C190();
  uint64_t v22 = v25;
  v17(v8, v16, v25);
  sub_10007C0B0();
  sub_10007CF10();
  sub_10007C190();
  v17(v8, v16, v22);
  sub_10007C0B0();
  return sub_10007BF10();
}

uint64_t sub_10002CDEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a1;
  v3[4] = a3;
  sub_10007C0A0();
  v3[5] = swift_task_alloc();
  uint64_t v4 = sub_100008FA4(&qword_1000A3B48);
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  return _swift_task_switch(sub_10002CEDC, 0, 0);
}

uint64_t sub_10002CEDC()
{
  uint64_t KeyPath = swift_getKeyPath();
  v0[9] = KeyPath;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[10] = v2;
  uint64_t v3 = sub_100008FA4(&qword_1000A47F8);
  uint64_t v4 = sub_10000CAB4(&qword_1000A47D8, &qword_1000A47E0);
  v0[11] = v4;
  *uint64_t v2 = v0;
  v2[1] = sub_10002CFDC;
  uint64_t v5 = v0[8];
  return _AppEntityUpdate.value<A>(of:)(v5, KeyPath, v3, v4);
}

uint64_t sub_10002CFDC()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_10002D0F4, 0, 0);
}

uint64_t sub_10002D0F4()
{
  if ((*(unsigned int (**)(void, void))(*(void *)(v0 + 56) + 88))(*(void *)(v0 + 64), *(void *)(v0 + 48)) == enum case for _IntentValueState.set<A>(_:))
  {
    uint64_t v1 = *(char **)(v0 + 64);
    (*(void (**)(char *, void))(*(void *)(v0 + 56) + 96))(v1, *(void *)(v0 + 48));
    char v2 = *v1;
    sub_100008FA4(&qword_1000A47C0);
    sub_10007C080();
    *(void *)(v0 + 16) = sub_10007C030();
    *(unsigned char *)(v0 + 120) = v2;
    uint64_t KeyPath = swift_getKeyPath();
    *(void *)(v0 + 96) = KeyPath;
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_10002D320;
    uint64_t v5 = *(void *)(v0 + 88);
    return AppEntity._setValue<A>(_:for:)(v0 + 120, KeyPath, v5);
  }
  else
  {
    (*(void (**)(void, void))(*(void *)(v0 + 56) + 8))(*(void *)(v0 + 64), *(void *)(v0 + 48));
    sub_10007BC30();
    sub_100016C94();
    swift_allocError();
    sub_10007BEC0();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
}

uint64_t sub_10002D320()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    char v2 = sub_100012FE0;
  }
  else {
    char v2 = sub_10002D45C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10002D45C()
{
  sub_10002C580();
  sub_10007BC20();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10002D4F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_1000130F0;
  return sub_10002CDEC(a1, v6, a3);
}

unint64_t sub_10002D598()
{
  unint64_t result = qword_1000A4690;
  if (!qword_1000A4690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4690);
  }
  return result;
}

unint64_t sub_10002D5F0()
{
  unint64_t result = qword_1000A4698;
  if (!qword_1000A4698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4698);
  }
  return result;
}

unint64_t sub_10002D648()
{
  unint64_t result = qword_1000A46A0;
  if (!qword_1000A46A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A46A0);
  }
  return result;
}

uint64_t sub_10002D69C()
{
  uint64_t v0 = qword_1000A4658;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_10002D6D8()
{
  unint64_t result = qword_1000A46A8;
  if (!qword_1000A46A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A46A8);
  }
  return result;
}

uint64_t sub_10002D72C(uint64_t a1)
{
  unint64_t v2 = sub_10002D598();

  return _EntityURLRepresentation.init(stringLiteral:)(0xD000000000000059, 0x8000000100088040, a1, v2);
}

unint64_t sub_10002D78C()
{
  unint64_t result = qword_1000A46B0;
  if (!qword_1000A46B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A46B0);
  }
  return result;
}

unint64_t sub_10002D7E4()
{
  unint64_t result = qword_1000A46B8;
  if (!qword_1000A46B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A46B8);
  }
  return result;
}

unint64_t sub_10002D83C()
{
  unint64_t result = qword_1000A46C0;
  if (!qword_1000A46C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A46C0);
  }
  return result;
}

unint64_t sub_10002D894()
{
  unint64_t result = qword_1000A46C8;
  if (!qword_1000A46C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A46C8);
  }
  return result;
}

uint64_t sub_10002D8E8()
{
  sub_10002F1A8();
  uint64_t v2 = sub_10007BFC0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_100016C54(v3, v0, v2, v1);
}

unint64_t sub_10002D980()
{
  unint64_t result = qword_1000A46D8;
  if (!qword_1000A46D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A46D8);
  }
  return result;
}

unint64_t sub_10002D9D8()
{
  unint64_t result = qword_1000A46E0;
  if (!qword_1000A46E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A46E0);
  }
  return result;
}

unint64_t sub_10002DA30()
{
  unint64_t result = qword_1000A46E8;
  if (!qword_1000A46E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A46E8);
  }
  return result;
}

unint64_t sub_10002DA88()
{
  unint64_t result = qword_1000A46F0;
  if (!qword_1000A46F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A46F0);
  }
  return result;
}

uint64_t sub_10002DADC@<X0>(uint64_t *a1@<X8>)
{
  sub_10002DCE0();
  uint64_t result = sub_10007BD10();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10002DB1C@<X0>(uint64_t a1@<X8>)
{
  return sub_100018DD0(&qword_1000A31D0, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1000B2408, a1);
}

uint64_t sub_10002DB54()
{
  return sub_10000CAB4(&qword_1000A46F8, &qword_1000A4700);
}

uint64_t sub_10002DB90(uint64_t a1)
{
  unint64_t v2 = sub_10002D598();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10002DBE0()
{
  unint64_t result = qword_1000A4708;
  if (!qword_1000A4708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4708);
  }
  return result;
}

uint64_t sub_10002DC38(uint64_t a1)
{
  unint64_t v2 = sub_10002DA88();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_10002DC88()
{
  unint64_t result = qword_1000A4710;
  if (!qword_1000A4710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4710);
  }
  return result;
}

unint64_t sub_10002DCE0()
{
  unint64_t result = qword_1000A4718[0];
  if (!qword_1000A4718[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000A4718);
  }
  return result;
}

uint64_t sub_10002DD34(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  sub_10007C0A0();
  *(void *)(v1 + 24) = swift_task_alloc();
  return _swift_task_switch(sub_10002DDC4, 0, 0);
}

uint64_t sub_10002DDC4()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  sub_100008FA4(&qword_1000A47C0);
  sub_10007C080();
  sub_10000CAB4(&qword_1000A47D8, &qword_1000A47E0);
  *uint64_t v1 = sub_10007C030();
  swift_task_dealloc();
  unint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10002DECC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10002D648();
  *uint64_t v4 = v2;
  v4[1] = sub_100014848;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_10002DF80()
{
  unint64_t result = qword_1000A4730;
  if (!qword_1000A4730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4730);
  }
  return result;
}

unint64_t sub_10002DFD8()
{
  unint64_t result = qword_1000A4738[0];
  if (!qword_1000A4738[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000A4738);
  }
  return result;
}

uint64_t sub_10002E02C(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10002D648();
  void *v5 = v2;
  v5[1] = sub_100014A10;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_10002E0E0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10002D648();
  *uint64_t v4 = v2;
  v4[1] = sub_100016CEC;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_10002E194()
{
  unint64_t result = qword_1000A4750;
  if (!qword_1000A4750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4750);
  }
  return result;
}

unint64_t sub_10002E1EC()
{
  unint64_t result = qword_1000A4758;
  if (!qword_1000A4758)
  {
    sub_10000A43C(qword_1000A4760);
    sub_10002DA30();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4758);
  }
  return result;
}

uint64_t sub_10002E260(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10002D894();
  void *v5 = v2;
  v5[1] = sub_100016CF0;
  return EntityQuery.results()(a1, a2, v6);
}

unint64_t sub_10002E318()
{
  unint64_t result = qword_1000A4778;
  if (!qword_1000A4778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4778);
  }
  return result;
}

uint64_t sub_10002E36C()
{
  uint64_t v0 = sub_10007C0A0();
  sub_1000112B4(v0, qword_1000B2420);
  sub_100010740(v0, (uint64_t)qword_1000B2420);
  return sub_10007C080();
}

unint64_t sub_10002E3D4()
{
  unint64_t result = qword_1000A4780;
  if (!qword_1000A4780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4780);
  }
  return result;
}

uint64_t sub_10002E428(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_10002F100();
  unint64_t v5 = sub_10002F1A8();

  return static _URLRepresentableIntent<>.urlRepresentation.getter(a1, v4, a2, v5);
}

uint64_t sub_10002E490()
{
  uint64_t v0 = qword_1000A4668;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_10002E4CC()
{
  unint64_t result = qword_1000A4788;
  if (!qword_1000A4788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4788);
  }
  return result;
}

unint64_t sub_10002E524()
{
  unint64_t result = qword_1000A4790;
  if (!qword_1000A4790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4790);
  }
  return result;
}

uint64_t sub_10002E578()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10002E5C8@<X0>(uint64_t a1@<X8>)
{
  return sub_100018DD0(&qword_1000A31D8, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1000B2420, a1);
}

uint64_t sub_10002E600(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10002F100();
  unint64_t v7 = sub_10002F154();
  unint64_t v8 = sub_10002F1A8();
  void *v5 = v2;
  v5[1] = sub_100015130;
  return _URLRepresentableIntent<>.perform()(a1, a2, v6, v7, v8);
}

uint64_t sub_10002E6D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10002EE1C();
  *a1 = result;
  return result;
}

uint64_t sub_10002E6FC(uint64_t a1)
{
  unint64_t v2 = sub_10002E3D4();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenMentionNotificationsDeepLink()
{
  return &type metadata for OpenMentionNotificationsDeepLink;
}

ValueMetadata *type metadata accessor for MentionNotificationsEntityQuery()
{
  return &type metadata for MentionNotificationsEntityQuery;
}

ValueMetadata *type metadata accessor for MentionNotificationsEntity()
{
  return &type metadata for MentionNotificationsEntity;
}

ValueMetadata *type metadata accessor for MentionNotificationsEntity.ChangeMentionNotificationsEntityHandler()
{
  return &type metadata for MentionNotificationsEntity.ChangeMentionNotificationsEntityHandler;
}

uint64_t sub_10002E778(uint64_t a1)
{
  *(void *)(v1 + 48) = a1;
  return _swift_task_switch(sub_10002E798, 0, 0);
}

uint64_t sub_10002E798()
{
  sub_10007D030();
  *(void *)(v0 + 56) = sub_10007D020();
  uint64_t v2 = sub_10007D010();
  return _swift_task_switch(sub_10002E82C, v2, v1);
}

uint64_t sub_10002E82C()
{
  swift_release();
  if (qword_1000A31F8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_100008FA4(&qword_1000A47E8);
  sub_100010740(v1, (uint64_t)qword_1000A4F00);
  swift_beginAccess();
  sub_10007C210();
  *(void *)(v0 + 64) = *(void *)(v0 + 40);
  swift_endAccess();
  return _swift_task_switch(sub_10002E924, 0, 0);
}

uint64_t sub_10002E924()
{
  uint64_t v1 = *(void **)(v0 + 64);
  if (v1)
  {
    uint64_t v2 = self;
    id v3 = [v1 managedObjectContext];
    id v4 = [v2 defaultAccountInContext:v3];

    if (v4)
    {
      id v5 = [self sharedController];
      unsigned __int8 v6 = [v5 isSubscribedToMentionNotificationsForAccount:v4];

      goto LABEL_6;
    }
  }
  unsigned __int8 v6 = 0;
LABEL_6:
  **(unsigned char **)(v0 + 48) = v6;
  unint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_10002EA3C(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 88) = *a2;
  return _swift_task_switch(sub_10002EA60, 0, 0);
}

uint64_t sub_10002EA60()
{
  sub_10007D030();
  *(void *)(v0 + 72) = sub_10007D020();
  uint64_t v2 = sub_10007D010();
  return _swift_task_switch(sub_10002EAF4, v2, v1);
}

uint64_t sub_10002EAF4()
{
  swift_release();
  if (qword_1000A31F8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_100008FA4(&qword_1000A47E8);
  sub_100010740(v1, (uint64_t)qword_1000A4F00);
  swift_beginAccess();
  sub_10007C210();
  *(void *)(v0 + 80) = *(void *)(v0 + 64);
  swift_endAccess();
  return _swift_task_switch(sub_10002EBEC, 0, 0);
}

uint64_t sub_10002EBEC()
{
  uint64_t v1 = *(void **)(v0 + 80);
  if (v1)
  {
    char v2 = *(unsigned char *)(v0 + 88);
    id v3 = [*(id *)(v0 + 80) managedObjectContext];
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v1;
    *(unsigned char *)(v4 + 24) = v2;
    *(void *)(v0 + 48) = sub_10002F234;
    *(void *)(v0 + 56) = v4;
    *(void *)(v0 + 16) = _NSConcreteStackBlock;
    *(void *)(v0 + 24) = 1107296256;
    *(void *)(v0 + 32) = sub_1000444FC;
    *(void *)(v0 + 40) = &unk_10009EFC8;
    id v5 = _Block_copy((const void *)(v0 + 16));
    id v6 = v1;
    swift_release();
    [v3 performBlock:v5];
    _Block_release(v5);
  }
  unint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

void sub_10002ED30(void *a1, char a2)
{
  uint64_t v4 = self;
  id v5 = [a1 managedObjectContext];
  id v6 = [v4 defaultAccountInContext:v5];

  if (v6)
  {
    id v7 = [self sharedController];
    [v7 updateSubscriptionPreferenceForMentionNotifications:a2 & 1 forAccount:v6];
  }
}

uint64_t sub_10002EE1C()
{
  v17[0] = sub_10007BFB0();
  uint64_t v0 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  char v2 = (char *)v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100008FA4(&qword_1000A3900);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  id v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unint64_t v8 = (char *)v17 - v7;
  uint64_t v9 = sub_100008FA4(&qword_1000A3908);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10007C0A0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  sub_100008FA4(&qword_1000A47A0);
  sub_10007C080();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  v17[1] = 0;
  uint64_t v14 = sub_10007BCF0();
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  v15(v8, 1, 1, v14);
  v15(v6, 1, 1, v14);
  (*(void (**)(char *, void, void))(v0 + 104))(v2, enum case for InputConnectionBehavior.default(_:), v17[0]);
  sub_10002D598();
  return sub_10007BD50();
}

unint64_t sub_10002F100()
{
  unint64_t result = qword_1000A47A8;
  if (!qword_1000A47A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A47A8);
  }
  return result;
}

unint64_t sub_10002F154()
{
  unint64_t result = qword_1000A47B0;
  if (!qword_1000A47B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A47B0);
  }
  return result;
}

unint64_t sub_10002F1A8()
{
  unint64_t result = qword_1000A47B8;
  if (!qword_1000A47B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A47B8);
  }
  return result;
}

uint64_t sub_10002F1FC()
{
  return _swift_deallocObject(v0, 25, 7);
}

void sub_10002F234()
{
  sub_10002ED30(*(void **)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_10002F240(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10002F250()
{
  return swift_release();
}

uint64_t sub_10002F258@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10007C020();
  *a1 = result;
  return result;
}

__n128 initializeBufferWithCopyOfBuffer for TelephonyUtilitiesFeature(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for TelephonyUtilitiesFeature()
{
  return &type metadata for TelephonyUtilitiesFeature;
}

ValueMetadata *type metadata accessor for GreyParrotFeature()
{
  return &type metadata for GreyParrotFeature;
}

ValueMetadata *type metadata accessor for SiriSMARTFeature()
{
  return &type metadata for SiriSMARTFeature;
}

ValueMetadata *type metadata accessor for UniquelyiPadFeature()
{
  return &type metadata for UniquelyiPadFeature;
}

uint64_t getEnumTagSinglePayload for NotesFeature(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for NotesFeature(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 17) = v3;
  return result;
}

ValueMetadata *type metadata accessor for NotesFeature()
{
  return &type metadata for NotesFeature;
}

uint64_t sub_10002F334()
{
  uint64_t v1 = sub_10007D140();
  v2._countAndFlagsBits = 47;
  v2._object = (void *)0xE100000000000000;
  sub_10007CF70(v2);
  v3._countAndFlagsBits = sub_10007D140();
  sub_10007CF70(v3);
  swift_bridgeObjectRelease();
  return v1;
}

const char *sub_10002F3B8()
{
  return "Notes";
}

uint64_t sub_10002F3CC()
{
  return *(void *)v0;
}

uint64_t sub_10002F3D8()
{
  return sub_10002F334();
}

uint64_t sub_10002F404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10002F9A4(a1, a2, a3, (uint64_t (*)(void))sub_10002F430, (uint64_t (*)(void))sub_10002F484);
}

unint64_t sub_10002F430()
{
  unint64_t result = qword_1000A4800;
  if (!qword_1000A4800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4800);
  }
  return result;
}

unint64_t sub_10002F484()
{
  unint64_t result = qword_1000A4808;
  if (!qword_1000A4808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4808);
  }
  return result;
}

const char *sub_10002F4D8()
{
  return "PencilAndPaper";
}

uint64_t sub_10002F4EC()
{
  return sub_10002F334();
}

const char *sub_10002F518()
{
  return "TelephonyUtilities";
}

uint64_t sub_10002F52C()
{
  return sub_10002F334();
}

const char *sub_10002F558()
{
  return "GreyParrot";
}

uint64_t sub_10002F56C()
{
  return sub_10002F334();
}

const char *sub_10002F598()
{
  return "ResponseFramework";
}

uint64_t sub_10002F5AC()
{
  return sub_10002F334();
}

const char *sub_10002F5D8()
{
  return "UIKit";
}

uint64_t sub_10002F5EC()
{
  return sub_10002F334();
}

uint64_t sub_10002F618(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10002F9A4(a1, a2, a3, (uint64_t (*)(void))sub_10002F644, (uint64_t (*)(void))sub_10002F698);
}

unint64_t sub_10002F644()
{
  unint64_t result = qword_1000A4810;
  if (!qword_1000A4810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4810);
  }
  return result;
}

unint64_t sub_10002F698()
{
  unint64_t result = qword_1000A4818;
  if (!qword_1000A4818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4818);
  }
  return result;
}

uint64_t sub_10002F6EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10002F9A4(a1, a2, a3, (uint64_t (*)(void))sub_10002F718, (uint64_t (*)(void))sub_10002F76C);
}

unint64_t sub_10002F718()
{
  unint64_t result = qword_1000A4820;
  if (!qword_1000A4820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4820);
  }
  return result;
}

unint64_t sub_10002F76C()
{
  unint64_t result = qword_1000A4828;
  if (!qword_1000A4828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4828);
  }
  return result;
}

uint64_t sub_10002F7C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10002F9A4(a1, a2, a3, (uint64_t (*)(void))sub_10002F7EC, (uint64_t (*)(void))sub_10002F840);
}

unint64_t sub_10002F7EC()
{
  unint64_t result = qword_1000A4830;
  if (!qword_1000A4830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4830);
  }
  return result;
}

unint64_t sub_10002F840()
{
  unint64_t result = qword_1000A4838;
  if (!qword_1000A4838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4838);
  }
  return result;
}

uint64_t sub_10002F894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10002F9A4(a1, a2, a3, (uint64_t (*)(void))sub_10002F8C0, (uint64_t (*)(void))sub_10002F914);
}

unint64_t sub_10002F8C0()
{
  unint64_t result = qword_1000A4840;
  if (!qword_1000A4840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4840);
  }
  return result;
}

unint64_t sub_10002F914()
{
  unint64_t result = qword_1000A4848;
  if (!qword_1000A4848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4848);
  }
  return result;
}

ValueMetadata *type metadata accessor for PencilAndPaperFeature()
{
  return &type metadata for PencilAndPaperFeature;
}

uint64_t sub_10002F978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10002F9A4(a1, a2, a3, (uint64_t (*)(void))sub_10000A2EC, (uint64_t (*)(void))sub_10002F9E0);
}

uint64_t sub_10002F9A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_10002F9E0()
{
  unint64_t result = qword_1000A4850;
  if (!qword_1000A4850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4850);
  }
  return result;
}

ValueMetadata *type metadata accessor for NoteWidget()
{
  return &type metadata for NoteWidget;
}

uint64_t sub_10002FA50()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10002FA6C()
{
  sub_10007C500();
  sub_100030580(&qword_1000A48A8, (void (*)(uint64_t))&type metadata accessor for EnvironmentValues.ShowsWidgetBackgroundKey);
  sub_10007C580();
  return v1;
}

uint64_t sub_10002FAE8@<X0>(unsigned char *a1@<X8>)
{
  sub_10007C500();
  sub_100030580(&qword_1000A48A8, (void (*)(uint64_t))&type metadata accessor for EnvironmentValues.ShowsWidgetBackgroundKey);
  uint64_t result = sub_10007C580();
  *a1 = v3;
  return result;
}

uint64_t sub_10002FB78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v1 = sub_100008FA4(&qword_1000A4858);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100008FA4(&qword_1000A4860);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v34 = v5;
  uint64_t v35 = v6;
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100008FA4(&qword_1000A4868);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v36 = v9;
  uint64_t v37 = v10;
  __chkstk_darwin(v9);
  uint64_t v33 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007CF40();
  sub_1000302A4();
  type metadata accessor for NoteTimelineProvider();
  uint64_t v39 = swift_allocObject();
  type metadata accessor for NoteWidgetView();
  sub_100030580(&qword_1000A4878, (void (*)(uint64_t))type metadata accessor for NoteWidgetView);
  sub_100030580(&qword_1000A4880, (void (*)(uint64_t))type metadata accessor for NoteTimelineProvider);
  sub_10007CD90();
  sub_100008FA4(&qword_1000A4888);
  uint64_t v12 = sub_10007CD30();
  uint64_t v13 = *(void *)(v12 - 8);
  unint64_t v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_100080BC0;
  (*(void (**)(unint64_t, void, uint64_t))(v13 + 104))(v15 + v14, enum case for WidgetFamily.systemSmall(_:), v12);
  unint64_t v16 = sub_1000302E4();
  sub_10007C630();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_10007C5A0();
  uint64_t v17 = sub_10007C8A0();
  uint64_t v19 = v18;
  char v21 = v20 & 1;
  uint64_t v39 = v1;
  unint64_t v40 = v16;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v24 = v33;
  uint64_t v23 = v34;
  sub_10007C640();
  sub_10000A610(v17, v19, v21);
  swift_bridgeObjectRelease();
  uint64_t v25 = v23;
  (*(void (**)(char *, uint64_t))(v35 + 8))(v8, v23);
  sub_10007C5A0();
  uint64_t v26 = sub_10007C8A0();
  uint64_t v28 = v27;
  LOBYTE(v8) = v29 & 1;
  uint64_t v39 = v25;
  unint64_t v40 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v30 = v36;
  sub_10007C620();
  sub_10000A610(v26, v28, (char)v8);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v24, v30);
}

uint64_t sub_1000300D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100008FA4(&qword_1000A4898);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_100008FA4(&qword_1000A3268);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _s14descr10009E241C5EntryVMa();
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100030340(a1, (uint64_t)v13);
  sub_1000303A4((uint64_t)&v13[*(int *)(v11 + 28)], (uint64_t)v9);
  sub_10003040C((uint64_t)v13);
  uint64_t *v6 = swift_getKeyPath();
  sub_100008FA4(&qword_1000A48A0);
  swift_storeEnumTagMultiPayload();
  uint64_t KeyPath = swift_getKeyPath();
  sub_10000CB00((uint64_t)v9, a2, &qword_1000A3268);
  uint64_t v15 = (int *)type metadata accessor for NoteWidgetView();
  uint64_t result = sub_10000CB00((uint64_t)v6, a2 + v15[5], &qword_1000A4898);
  uint64_t v17 = a2 + v15[6];
  *(void *)uint64_t v17 = KeyPath;
  *(unsigned char *)(v17 + 8) = 0;
  *(void *)(a2 + v15[7]) = 10;
  return result;
}

unint64_t sub_1000302A4()
{
  unint64_t result = qword_1000A4870;
  if (!qword_1000A4870)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000A4870);
  }
  return result;
}

unint64_t sub_1000302E4()
{
  unint64_t result = qword_1000A4890;
  if (!qword_1000A4890)
  {
    sub_10000A43C(&qword_1000A4858);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4890);
  }
  return result;
}

uint64_t sub_100030340(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s14descr10009E241C5EntryVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000303A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100008FA4(&qword_1000A3268);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10003040C(uint64_t a1)
{
  uint64_t v2 = _s14descr10009E241C5EntryVMa();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100030468()
{
  return sub_10007C520();
}

uint64_t sub_10003048C()
{
  return sub_10007C520();
}

uint64_t sub_1000304B0(uint64_t a1)
{
  uint64_t v2 = sub_10007CD00();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_10007C530();
}

uint64_t sub_100030580(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000305C8()
{
  return swift_getOpaqueTypeConformance2();
}

__n128 sub_100030694()
{
  __asm { FMOV            V0.2D, #20.0 }
  xmmword_1000B2440 = (__int128)result;
  return result;
}

ValueMetadata *type metadata accessor for AvatarStack()
{
  return &type metadata for AvatarStack;
}

uint64_t sub_1000306B4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000306D0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_100008FA4(&qword_1000A48B8);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)v24 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v24 - v12;
  unint64_t v14 = *(void *)(a1 + 16);
  if (v14) {
    uint64_t v15 = 0;
  }
  else {
    uint64_t v15 = sub_10007CAE0();
  }
  uint64_t v16 = 3;
  if (v14 < 3) {
    uint64_t v16 = v14;
  }
  unint64_t v17 = (2 * v16) | 1;
  uint64_t v18 = swift_bridgeObjectRetain();
  uint64_t v19 = sub_100060858(v18, a1 + 32, 0, v17);
  swift_bridgeObjectRelease();
  v24[1] = v19;
  swift_getKeyPath();
  sub_100008FA4(&qword_1000A48C0);
  sub_10000CAB4(&qword_1000A48C8, &qword_1000A48C0);
  sub_100031450();
  sub_10007CB90();
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v13, v11, v4);
  char v20 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v20(v8, v13, v4);
  *a2 = v15;
  uint64_t v21 = sub_100008FA4(&qword_1000A48D8);
  v20((char *)a2 + *(int *)(v21 + 48), v8, v4);
  uint64_t v22 = *(void (**)(char *, uint64_t))(v5 + 8);
  swift_retain();
  v22(v13, v4);
  v22(v8, v4);
  return swift_release();
}

uint64_t sub_100030988@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 8);
  return swift_retain();
}

uint64_t sub_100030994@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  *(void *)a1 = sub_10007C590();
  *(void *)(a1 + 8) = 0xC028000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v4 = sub_100008FA4(&qword_1000A48B0);
  return sub_1000306D0(v3, (uint64_t *)(a1 + *(int *)(v4 + 44)));
}

uint64_t sub_1000309E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v92 = a1;
  uint64_t v1 = sub_10007C800();
  uint64_t v90 = *(void *)(v1 - 8);
  uint64_t v91 = v1;
  __chkstk_darwin(v1);
  uint64_t v89 = (char *)&v71 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100008FA4(&qword_1000A48F0);
  __chkstk_darwin(v3);
  uint64_t v81 = (uint64_t *)((char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v78 = sub_10007CB20();
  uint64_t v5 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v7 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10007CAF0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_100008FA4(&qword_1000A48F8);
  __chkstk_darwin(v74);
  uint64_t v13 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_100008FA4(&qword_1000A4900);
  __chkstk_darwin(v77);
  uint64_t v82 = (uint64_t)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_100008FA4(&qword_1000A4908);
  __chkstk_darwin(v75);
  uint64_t v83 = (uint64_t)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_100008FA4(&qword_1000A4910);
  __chkstk_darwin(v76);
  uint64_t v85 = (uint64_t)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_100008FA4(&qword_1000A4918);
  __chkstk_darwin(v80);
  uint64_t v84 = (uint64_t)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_100008FA4(&qword_1000A4920);
  __chkstk_darwin(v79);
  uint64_t v87 = (uint64_t)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_100008FA4(&qword_1000A4928);
  __chkstk_darwin(v86);
  uint64_t v88 = (uint64_t)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for Image.ResizingMode.stretch(_:), v8);
  uint64_t v20 = sub_10007CB40();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (qword_1000A31E0 != -1) {
    swift_once();
  }
  sub_10007CBF0();
  sub_10007C3A0();
  uint64_t v73 = v93;
  char v21 = v94;
  uint64_t v22 = v95;
  int v72 = v96;
  uint64_t v23 = v97;
  uint64_t v71 = v98;
  uint64_t v24 = v7;
  uint64_t v25 = v7;
  uint64_t v26 = v78;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v25, enum case for Image.Scale.large(_:), v78);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v28 = *(int *)(v3 + 28);
  char v29 = v81;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))((char *)v81 + v28, v24, v26);
  *char v29 = KeyPath;
  sub_10000CB64((uint64_t)v29, (uint64_t)&v13[*(int *)(v74 + 36)], &qword_1000A48F0);
  *(void *)uint64_t v13 = v20;
  *((void *)v13 + 1) = 0x3FF0000000000000;
  *((_WORD *)v13 + 8) = 0;
  *((void *)v13 + 3) = v73;
  v13[32] = v21;
  *((void *)v13 + 5) = v22;
  v13[48] = v72;
  uint64_t v30 = v71;
  *((void *)v13 + 7) = v23;
  *((void *)v13 + 8) = v30;
  swift_retain();
  sub_10000CBC8((uint64_t)v29, &qword_1000A48F0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v24, v26);
  swift_release();
  uint64_t v32 = v89;
  uint64_t v31 = v90;
  uint64_t v33 = v91;
  (*(void (**)(char *, void, uint64_t))(v90 + 104))(v89, enum case for Font.TextStyle.footnote(_:), v91);
  uint64_t v34 = sub_10007C790();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v33);
  uint64_t v35 = swift_getKeyPath();
  uint64_t v36 = v82;
  sub_10000CB64((uint64_t)v13, v82, &qword_1000A48F8);
  uint64_t v37 = (uint64_t *)(v36 + *(int *)(v77 + 36));
  *uint64_t v37 = v35;
  v37[1] = v34;
  sub_10000CBC8((uint64_t)v13, &qword_1000A48F8);
  uint64_t v38 = sub_10007CA20();
  uint64_t v39 = v83;
  sub_10000CB64(v36, v83, &qword_1000A4900);
  *(void *)(v39 + *(int *)(v75 + 36)) = v38;
  sub_10000CBC8(v36, &qword_1000A4900);
  uint64_t v40 = sub_10007CA50();
  LOBYTE(v36) = sub_10007C730();
  uint64_t v41 = v85;
  sub_10000CB64(v39, v85, &qword_1000A4908);
  uint64_t v42 = v41 + *(int *)(v76 + 36);
  *(void *)uint64_t v42 = v40;
  *(unsigned char *)(v42 + 8) = v36;
  sub_10000CBC8(v39, &qword_1000A4908);
  LOBYTE(v40) = sub_10007C730();
  sub_10007C340();
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  uint64_t v50 = v49;
  uint64_t v51 = v84;
  sub_10000CB64(v41, v84, &qword_1000A4910);
  uint64_t v52 = v51 + *(int *)(v80 + 36);
  *(unsigned char *)uint64_t v52 = v40;
  *(void *)(v52 + 8) = v44;
  *(void *)(v52 + 16) = v46;
  *(void *)(v52 + 24) = v48;
  *(void *)(v52 + 32) = v50;
  *(unsigned char *)(v52 + 40) = 0;
  sub_10000CBC8(v41, &qword_1000A4910);
  uint64_t v53 = v87;
  sub_10000CB64(v51, v87, &qword_1000A4918);
  *(_WORD *)(v53 + *(int *)(v79 + 36)) = 256;
  sub_10000CBC8(v51, &qword_1000A4918);
  uint64_t v54 = sub_10007CA50();
  sub_10007C370();
  double v55 = v99;
  uint64_t v56 = v101;
  uint64_t v57 = v102;
  uint64_t v58 = v103;
  uint64_t v59 = sub_10007CBF0();
  uint64_t v61 = v60;
  uint64_t v62 = sub_10007CBF0();
  uint64_t v64 = v63;
  uint64_t v65 = v88;
  sub_10000CB64(v53, v88, &qword_1000A4920);
  uint64_t v66 = v65 + *(int *)(v86 + 36);
  *(double *)uint64_t v66 = v55 * 0.5;
  *(double *)(v66 + 8) = v55;
  *(void *)(v66 + 16) = v100;
  *(void *)(v66 + 24) = v56;
  *(void *)(v66 + 32) = v57;
  *(void *)(v66 + 40) = v58;
  *(void *)(v66 + 48) = v54;
  *(_WORD *)(v66 + 56) = 256;
  *(void *)(v66 + 64) = v59;
  *(void *)(v66 + 72) = v61;
  *(void *)(v66 + 80) = v62;
  *(void *)(v66 + 88) = v64;
  sub_10000CBC8(v53, &qword_1000A4920);
  uint64_t v67 = sub_10007CAB0();
  uint64_t v68 = v92;
  sub_10000CB64(v65, v92, &qword_1000A4928);
  uint64_t v69 = v68 + *(int *)(sub_100008FA4(&qword_1000A4930) + 36);
  *(void *)uint64_t v69 = v67;
  *(_OWORD *)(v69 + 8) = xmmword_100085CD0;
  *(void *)(v69 + 24) = 0x3FF0000000000000;
  return sub_10000CBC8(v65, &qword_1000A4928);
}

uint64_t sub_100031380@<X0>(uint64_t a1@<X8>)
{
  return sub_1000309E4(a1);
}

uint64_t sub_100031388(uint64_t a1)
{
  uint64_t v2 = sub_10007CB20();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_10007C430();
}

unint64_t sub_100031450()
{
  unint64_t result = qword_1000A48D0;
  if (!qword_1000A48D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A48D0);
  }
  return result;
}

ValueMetadata *type metadata accessor for AvatarStack.AvatarView()
{
  return &type metadata for AvatarStack.AvatarView;
}

uint64_t sub_1000314B4()
{
  return sub_10000CAB4(&qword_1000A48E0, &qword_1000A48E8);
}

uint64_t sub_1000314F0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10003150C()
{
  return sub_10007C420();
}

uint64_t sub_10003153C()
{
  return sub_1000316EC(&qword_1000A4938, &qword_1000A4930, (void (*)(void))sub_100031580);
}

unint64_t sub_100031580()
{
  unint64_t result = qword_1000A4940;
  if (!qword_1000A4940)
  {
    sub_10000A43C(&qword_1000A4928);
    sub_100031620();
    sub_10000CAB4(&qword_1000A49D0, &qword_1000A49D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4940);
  }
  return result;
}

unint64_t sub_100031620()
{
  unint64_t result = qword_1000A4948;
  if (!qword_1000A4948)
  {
    sub_10000A43C(&qword_1000A4920);
    sub_1000316EC(&qword_1000A4950, &qword_1000A4918, (void (*)(void))sub_100031768);
    sub_10000CAB4(&qword_1000A49C0, &qword_1000A49C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4948);
  }
  return result;
}

uint64_t sub_1000316EC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000A43C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100031768()
{
  unint64_t result = qword_1000A4958;
  if (!qword_1000A4958)
  {
    sub_10000A43C(&qword_1000A4910);
    sub_100031808();
    sub_10000CAB4(&qword_1000A49B0, &qword_1000A49B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4958);
  }
  return result;
}

unint64_t sub_100031808()
{
  unint64_t result = qword_1000A4960;
  if (!qword_1000A4960)
  {
    sub_10000A43C(&qword_1000A4908);
    sub_1000318A8();
    sub_10000CAB4(&qword_1000A49A0, &qword_1000A49A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4960);
  }
  return result;
}

unint64_t sub_1000318A8()
{
  unint64_t result = qword_1000A4968;
  if (!qword_1000A4968)
  {
    sub_10000A43C(&qword_1000A4900);
    sub_100031948();
    sub_10000CAB4(&qword_1000A34E0, &qword_1000A34E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4968);
  }
  return result;
}

unint64_t sub_100031948()
{
  unint64_t result = qword_1000A4970;
  if (!qword_1000A4970)
  {
    sub_10000A43C(&qword_1000A48F8);
    sub_1000316EC(&qword_1000A4978, &qword_1000A4980, (void (*)(void))sub_100031A14);
    sub_10000CAB4(&qword_1000A4998, &qword_1000A48F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4970);
  }
  return result;
}

unint64_t sub_100031A14()
{
  unint64_t result = qword_1000A4988;
  if (!qword_1000A4988)
  {
    sub_10000A43C(&qword_1000A4990);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4988);
  }
  return result;
}

uint64_t sub_100031A88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10007C150();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_100031AF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_100008FA4(&qword_1000A49E0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100031C60(v2 + *(int *)(a1 + 20), (uint64_t)v7);
  uint64_t v8 = sub_100008FA4(&qword_1000A49E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 2, v8))
  {
    sub_10007CE20();
    uint64_t v9 = sub_10007CE30();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a2, 0, 1, v9);
  }
  else
  {
    uint64_t v11 = sub_10007CE30();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a2, 1, 1, v11);
    return sub_10000CBC8((uint64_t)v7, &qword_1000A49E0);
  }
}

uint64_t sub_100031C60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100008FA4(&qword_1000A49E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *sub_100031CC8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10007C150();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = sub_100008FA4(&qword_1000A49E8);
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(v10, 2, v11))
    {
      uint64_t v13 = sub_100008FA4(&qword_1000A49E0);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      uint64_t v15 = v10[1];
      void *v9 = *v10;
      v9[1] = v15;
      uint64_t v16 = v10[3];
      v9[2] = v10[2];
      v9[3] = v16;
      *((unsigned char *)v9 + 32) = *((unsigned char *)v10 + 32);
      uint64_t v17 = v10[6];
      v9[5] = v10[5];
      v9[6] = v17;
      uint64_t v18 = type metadata accessor for NotesFolder();
      uint64_t v19 = *(int *)(v18 + 32);
      __dst = (char *)v9 + v19;
      uint64_t v27 = (char *)v10 + v19;
      uint64_t v28 = v18;
      uint64_t v20 = sub_10007C110();
      uint64_t v21 = *(void *)(v20 - 8);
      uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v26(v27, 1, v20))
      {
        uint64_t v22 = sub_100008FA4(&qword_1000A3270);
        memcpy(__dst, v27, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(__dst, v27, v20);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
      }
      *(void *)((char *)v9 + *(int *)(v28 + 36)) = *(void *)((char *)v10 + *(int *)(v28 + 36));
      *(void *)((char *)v9 + *(int *)(v28 + 40)) = *(void *)((char *)v10 + *(int *)(v28 + 40));
      *(void *)((char *)v9 + *(int *)(v11 + 48)) = *(void *)((char *)v10 + *(int *)(v11 + 48));
      uint64_t v23 = *(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v23(v9, 0, 2, v11);
    }
  }
  return a1;
}

uint64_t sub_100031FD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10007C150();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_100008FA4(&qword_1000A49E8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 2, v6);
  if (!result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v8 = v5 + *(int *)(type metadata accessor for NotesFolder() + 32);
    uint64_t v9 = sub_10007C110();
    uint64_t v10 = *(void *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    }
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100032174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10007C150();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_100008FA4(&qword_1000A49E8);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v9, 2, v10))
  {
    uint64_t v12 = sub_100008FA4(&qword_1000A49E0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v27 = a1;
    uint64_t v13 = v9[1];
    void *v8 = *v9;
    v8[1] = v13;
    uint64_t v14 = v9[3];
    v8[2] = v9[2];
    v8[3] = v14;
    *((unsigned char *)v8 + 32) = *((unsigned char *)v9 + 32);
    uint64_t v15 = v9[6];
    v8[5] = v9[5];
    v8[6] = v15;
    uint64_t v16 = type metadata accessor for NotesFolder();
    uint64_t v17 = *(int *)(v16 + 32);
    __dst = (char *)v8 + v17;
    uint64_t v26 = v16;
    uint64_t v24 = (char *)v9 + v17;
    uint64_t v18 = sub_10007C110();
    uint64_t v19 = *(void *)(v18 - 8);
    uint64_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v23(v24, 1, v18))
    {
      uint64_t v20 = sub_100008FA4(&qword_1000A3270);
      memcpy(__dst, v24, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(__dst, v24, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
    }
    *(void *)((char *)v8 + *(int *)(v26 + 36)) = *(void *)((char *)v9 + *(int *)(v26 + 36));
    *(void *)((char *)v8 + *(int *)(v26 + 40)) = *(void *)((char *)v9 + *(int *)(v26 + 40));
    *(void *)((char *)v8 + *(int *)(v10 + 48)) = *(void *)((char *)v9 + *(int *)(v10 + 48));
    uint64_t v21 = *(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21(v8, 0, 2, v10);
    return v27;
  }
  return a1;
}

uint64_t sub_100032434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10007C150();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_100008FA4(&qword_1000A49E8);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 2, v10);
  int v14 = v12(v9, 2, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_10000CBC8(v8, &qword_1000A49E8);
      goto LABEL_7;
    }
    uint64_t v38 = a1;
    *(void *)uint64_t v8 = *(void *)v9;
    *(void *)(v8 + 8) = *(void *)(v9 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v8 + 16) = *(void *)(v9 + 16);
    *(void *)(v8 + 24) = *(void *)(v9 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
    *(void *)(v8 + 40) = *(void *)(v9 + 40);
    *(void *)(v8 + 48) = *(void *)(v9 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v36 = (int *)type metadata accessor for NotesFolder();
    uint64_t v21 = v36[8];
    uint64_t v22 = (void *)(v8 + v21);
    uint64_t v23 = (void *)(v9 + v21);
    uint64_t v24 = sub_10007C110();
    uint64_t v25 = *(void *)(v24 - 8);
    uint64_t v26 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v25 + 48);
    int v27 = v26(v22, 1, v24);
    int v28 = v26(v23, 1, v24);
    if (v27)
    {
      if (!v28)
      {
        (*(void (**)(void *, void *, uint64_t))(v25 + 16))(v22, v23, v24);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
LABEL_16:
        *(void *)(v8 + v36[9]) = *(void *)(v9 + v36[9]);
        swift_retain();
        swift_release();
        *(void *)(v8 + v36[10]) = *(void *)(v9 + v36[10]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)(v8 + *(int *)(v10 + 48)) = *(void *)(v9 + *(int *)(v10 + 48));
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        return v38;
      }
    }
    else
    {
      if (!v28)
      {
        (*(void (**)(void *, void *, uint64_t))(v25 + 24))(v22, v23, v24);
        goto LABEL_16;
      }
      (*(void (**)(void *, uint64_t))(v25 + 8))(v22, v24);
    }
    uint64_t v30 = sub_100008FA4(&qword_1000A3270);
    memcpy(v22, v23, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_16;
  }
  if (v14)
  {
LABEL_7:
    uint64_t v20 = sub_100008FA4(&qword_1000A49E0);
    memcpy((void *)v8, (const void *)v9, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  uint64_t v37 = a1;
  *(void *)uint64_t v8 = *(void *)v9;
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
  *(void *)(v8 + 40) = *(void *)(v9 + 40);
  *(void *)(v8 + 48) = *(void *)(v9 + 48);
  uint64_t v15 = type metadata accessor for NotesFolder();
  uint64_t v16 = *(int *)(v15 + 32);
  __dst = (void *)(v8 + v16);
  uint64_t v35 = v15;
  uint64_t v33 = (const void *)(v9 + v16);
  uint64_t v17 = sub_10007C110();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v32 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v32(v33, 1, v17))
  {
    uint64_t v19 = sub_100008FA4(&qword_1000A3270);
    memcpy(__dst, v33, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(__dst, v33, v17);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v17);
  }
  a1 = v37;
  *(void *)(v8 + *(int *)(v35 + 36)) = *(void *)(v9 + *(int *)(v35 + 36));
  *(void *)(v8 + *(int *)(v35 + 40)) = *(void *)(v9 + *(int *)(v35 + 40));
  *(void *)(v8 + *(int *)(v10 + 48)) = *(void *)(v9 + *(int *)(v10 + 48));
  char v29 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v29(v8, 0, 2, v10);
  return a1;
}

uint64_t sub_100032948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10007C150();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  uint64_t v10 = sub_100008FA4(&qword_1000A49E8);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 2, v10))
  {
    uint64_t v12 = sub_100008FA4(&qword_1000A49E0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    long long v13 = v9[1];
    _OWORD *v8 = *v9;
    v8[1] = v13;
    *((unsigned char *)v8 + 32) = *((unsigned char *)v9 + 32);
    *(_OWORD *)((char *)v8 + 40) = *(_OWORD *)((char *)v9 + 40);
    int v14 = (int *)type metadata accessor for NotesFolder();
    uint64_t v15 = v14[8];
    uint64_t v16 = (char *)v8 + v15;
    uint64_t v17 = (char *)v9 + v15;
    uint64_t v18 = sub_10007C110();
    uint64_t v19 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      uint64_t v20 = sub_100008FA4(&qword_1000A3270);
      memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    *(void *)((char *)v8 + v14[9]) = *(void *)((char *)v9 + v14[9]);
    *(void *)((char *)v8 + v14[10]) = *(void *)((char *)v9 + v14[10]);
    *(void *)((char *)v8 + *(int *)(v10 + 48)) = *(void *)((char *)v9 + *(int *)(v10 + 48));
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 2, v10);
  }
  return a1;
}

uint64_t sub_100032BAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10007C150();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_100008FA4(&qword_1000A49E8);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 2, v10);
  int v14 = v12(v9, 2, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_10000CBC8(v8, &qword_1000A49E8);
      goto LABEL_7;
    }
    uint64_t v24 = *(void *)(v9 + 8);
    *(void *)uint64_t v8 = *(void *)v9;
    *(void *)(v8 + 8) = v24;
    swift_bridgeObjectRelease();
    uint64_t v25 = *(void *)(v9 + 24);
    *(void *)(v8 + 16) = *(void *)(v9 + 16);
    *(void *)(v8 + 24) = v25;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
    uint64_t v26 = *(void *)(v9 + 48);
    *(void *)(v8 + 40) = *(void *)(v9 + 40);
    *(void *)(v8 + 48) = v26;
    swift_bridgeObjectRelease();
    uint64_t v38 = (int *)type metadata accessor for NotesFolder();
    uint64_t v27 = v38[8];
    int v28 = (void *)(v8 + v27);
    char v29 = (void *)(v9 + v27);
    uint64_t v30 = sub_10007C110();
    uint64_t v31 = *(void *)(v30 - 8);
    uint64_t v32 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v31 + 48);
    uint64_t v37 = v28;
    LODWORD(v28) = v32(v28, 1, v30);
    int v33 = v32(v29, 1, v30);
    if (v28)
    {
      if (!v33)
      {
        (*(void (**)(void *, void *, uint64_t))(v31 + 32))(v37, v29, v30);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(v37, 0, 1, v30);
        goto LABEL_18;
      }
      size_t v34 = *(void *)(*(void *)(sub_100008FA4(&qword_1000A3270) - 8) + 64);
      uint64_t v35 = v37;
    }
    else
    {
      if (!v33)
      {
        (*(void (**)(void *, void *, uint64_t))(v31 + 40))(v37, v29, v30);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v31 + 8))(v37, v30);
      size_t v34 = *(void *)(*(void *)(sub_100008FA4(&qword_1000A3270) - 8) + 64);
      uint64_t v35 = v37;
    }
    memcpy(v35, v29, v34);
LABEL_18:
    *(void *)(v8 + v38[9]) = *(void *)(v9 + v38[9]);
    swift_release();
    *(void *)(v8 + v38[10]) = *(void *)(v9 + v38[10]);
    swift_bridgeObjectRelease();
    *(void *)(v8 + *(int *)(v10 + 48)) = *(void *)(v9 + *(int *)(v10 + 48));
    swift_bridgeObjectRelease();
    return a1;
  }
  if (v14)
  {
LABEL_7:
    uint64_t v23 = sub_100008FA4(&qword_1000A49E0);
    memcpy((void *)v8, (const void *)v9, *(void *)(*(void *)(v23 - 8) + 64));
    return a1;
  }
  long long v15 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v15;
  *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
  *(_OWORD *)(v8 + 40) = *(_OWORD *)(v9 + 40);
  uint64_t v16 = (int *)type metadata accessor for NotesFolder();
  uint64_t v17 = v16[8];
  uint64_t v18 = (void *)(v8 + v17);
  uint64_t v19 = (const void *)(v9 + v17);
  uint64_t v20 = sub_10007C110();
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    uint64_t v22 = sub_100008FA4(&qword_1000A3270);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 32))(v18, v19, v20);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  *(void *)(v8 + v16[9]) = *(void *)(v9 + v16[9]);
  *(void *)(v8 + v16[10]) = *(void *)(v9 + v16[10]);
  *(void *)(v8 + *(int *)(v10 + 48)) = *(void *)(v9 + *(int *)(v10 + 48));
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 2, v10);
  return a1;
}

uint64_t sub_100033038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10003304C);
}

uint64_t sub_10003304C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10007C150();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_100008FA4(&qword_1000A49E0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_100033148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10003315C);
}

uint64_t sub_10003315C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_10007C150();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_100008FA4(&qword_1000A49E0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t _s5EntryVMa()
{
  uint64_t result = qword_1000A4A48;
  if (!qword_1000A4A48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000332B0()
{
  sub_10007C150();
  if (v0 <= 0x3F)
  {
    sub_100033378();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_100033378()
{
  if (!qword_1000A4A58)
  {
    sub_10000A43C(&qword_1000A49E8);
    unint64_t v0 = type metadata accessor for ObjectStates();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000A4A58);
    }
  }
}

uint64_t sub_1000333D4(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v3 = *(void *)(a2 + 16);
    if ((uint64_t)v3 >= result) {
      unint64_t v4 = result;
    }
    else {
      unint64_t v4 = *(void *)(a2 + 16);
    }
    if (result) {
      unint64_t v5 = v4;
    }
    else {
      unint64_t v5 = 0;
    }
    if (v3 >= v5)
    {
      type metadata accessor for Note();
      return a2;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100033468()
{
  uint64_t v0 = sub_10007C2E0();
  sub_1000112B4(v0, qword_1000A4A88);
  sub_100010740(v0, (uint64_t)qword_1000A4A88);
  return sub_10007C2C0();
}

id sub_1000334B4(void *a1)
{
  uint64_t v3 = sub_10007C2E0();
  uint64_t v106 = *(void *)(v3 - 8);
  uint64_t v107 = v3;
  __chkstk_darwin(v3);
  unint64_t v5 = (char *)&v101 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100008FA4(&qword_1000A3270);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v101 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10007C110();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v101 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v101 - v15;
  __chkstk_darwin(v14);
  unsigned int v105 = (char *)&v101 - v17;
  id v18 = [a1 identifier];
  if (!v18)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    goto LABEL_8;
  }
  uint64_t v19 = v18;
  uint64_t v102 = v16;
  uint64_t v103 = v1;
  sub_10007CF40();
  uint64_t v104 = v9;

  swift_bridgeObjectRetain();
  uint64_t v20 = v104;
  sub_10007C100();
  swift_bridgeObjectRelease_n();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v20) == 1)
  {
LABEL_8:
    sub_10000CBC8((uint64_t)v8, &qword_1000A3270);
    if (qword_1000A31E8 != -1) {
      swift_once();
    }
    uint64_t v33 = v107;
    uint64_t v34 = sub_100010740(v107, (uint64_t)qword_1000A4A88);
    uint64_t v35 = v106;
    (*(void (**)(char *, uint64_t, uint64_t))(v106 + 16))(v5, v34, v33);
    id v36 = a1;
    uint64_t v37 = sub_10007C2D0();
    os_log_type_t v38 = sub_10007D060();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      v108[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v39 = 136315138;
      id v40 = [v36 identifier];
      if (v40)
      {
        uint64_t v41 = v40;
        uint64_t v42 = sub_10007CF40();
        unint64_t v44 = v43;
      }
      else
      {
        unint64_t v44 = 0xA300000000000000;
        uint64_t v42 = 9732322;
      }
      uint64_t v109 = sub_100037524(v42, v44, v108);
      sub_10007D0F0();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "Cannot create notes folder URL from intent note folder identifier — returning nil {identifier: %s}", v39, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v106 + 8))(v5, v107);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v35 + 8))(v5, v33);
    }
    return 0;
  }
  uint64_t v21 = v10;
  uint64_t v22 = v105;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v105, v8, v20);
  uint64_t v23 = self;
  sub_10007C0D0(v24);
  uint64_t v26 = v25;
  unsigned int v27 = [v23 isShowFolderURL:v25];

  if (v27)
  {
    id v29 = [self sharedContext];
    if (v29)
    {
      uint64_t v30 = v29;
      id v31 = [v29 managedObjectContext];
      __chkstk_darwin(v31);
      *(&v101 - 4) = (uint64_t)v22;
      *(&v101 - 3) = (uint64_t)v30;
      *(&v101 - 2) = v103;
      sub_100008FA4(&qword_1000A4B88);
      sub_10007D0D0();

      id v32 = (id)v108[0];
      if (v108[0])
      {
        (*(void (**)(char *, uint64_t))(v10 + 8))(v22, v20);
        return v32;
      }
    }
    uint64_t v21 = v10;
  }
  sub_10007C0D0(v28);
  uint64_t v47 = v46;
  unsigned int v48 = [v23 isShowVirtualSmartFolderURL:v46];

  if (v48)
  {
    if (qword_1000A31F8 != -1) {
      swift_once();
    }
    uint64_t v50 = sub_100008FA4(&qword_1000A47E8);
    sub_100010740(v50, (uint64_t)qword_1000A4F00);
    swift_beginAccess();
    sub_10007C210();
    id v32 = (id)v109;
    swift_endAccess();
    if (!v32) {
      goto LABEL_26;
    }
    id v51 = [v32 managedObjectContext];

    __chkstk_darwin(v52);
    *(&v101 - 2) = v103;
    *(&v101 - 1) = (uint64_t)v22;
    sub_100008FA4(&qword_1000A4B88);
    sub_10007D0D0();

    goto LABEL_25;
  }
  sub_10007C0D0(v49);
  uint64_t v54 = v53;
  unsigned int v55 = [v23 isShowHTMLFolderURL:v53];

  if (v55)
  {
    if (qword_1000A3200 != -1) {
      swift_once();
    }
    uint64_t v57 = sub_100008FA4(&qword_1000A4B68);
    sub_100010740(v57, (uint64_t)qword_1000A4F18);
    swift_beginAccess();
    sub_10007C210();
    uint64_t v58 = (void *)v109;
    uint64_t v59 = swift_endAccess();
    if (v58)
    {
      __chkstk_darwin(v59);
      *(&v101 - 4) = (uint64_t)v22;
      *(&v101 - 3) = (uint64_t)v58;
      *(&v101 - 2) = v103;
      sub_100011278(0, &qword_1000A3650);
      id v60 = v58;
      sub_100008FA4(&qword_1000A4B88);
      sub_10007D080();

      id v32 = (id)v108[0];
      if (v108[0])
      {
        (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v104);
        return v32;
      }
      uint64_t v20 = v104;
    }
  }
  sub_10007C0D0(v56);
  uint64_t v62 = v61;
  unsigned int v63 = [v23 isShowDefaultFolderURL:v61];

  if (!v63)
  {
    if (qword_1000A31E8 != -1) {
      swift_once();
    }
    sub_100010740(v107, (uint64_t)qword_1000A4A88);
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v13, v22, v20);
    uint64_t v74 = sub_10007C2D0();
    uint64_t v75 = v20;
    os_log_type_t v76 = sub_10007D060();
    if (os_log_type_enabled(v74, v76))
    {
      uint64_t v77 = (uint8_t *)swift_slowAlloc();
      v108[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v77 = 136315138;
      sub_100037C44(&qword_1000A3640, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v78 = sub_10007D230();
      uint64_t v109 = sub_100037524(v78, v79, v108);
      sub_10007D0F0();
      swift_bridgeObjectRelease();
      uint64_t v80 = *(void (**)(char *, uint64_t))(v21 + 8);
      v80(v13, v75);
      _os_log_impl((void *)&_mh_execute_header, v74, v76, "Unknown notes folder URL type — returning nil {notesFolderURL: %s}", v77, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v80 = *(void (**)(char *, uint64_t))(v21 + 8);
      v80(v13, v75);
    }

    v80(v105, v75);
    return 0;
  }
  if (qword_1000A3200 != -1) {
    swift_once();
  }
  uint64_t v64 = sub_100008FA4(&qword_1000A4B68);
  sub_100010740(v64, (uint64_t)qword_1000A4F18);
  swift_beginAccess();
  sub_10007C210();
  uint64_t v65 = (void *)v109;
  swift_endAccess();
  id v66 = [self defaultFolderWithHTMLNoteContext:v65];

  if (!v66)
  {
    if (qword_1000A31E8 != -1) {
      swift_once();
    }
    sub_100010740(v107, (uint64_t)qword_1000A4A88);
    uint64_t v81 = v102;
    uint64_t v82 = v105;
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v102, v105, v20);
    uint64_t v83 = sub_10007C2D0();
    uint64_t v84 = v20;
    os_log_type_t v85 = sub_10007D060();
    if (os_log_type_enabled(v83, v85))
    {
      uint64_t v86 = (uint8_t *)swift_slowAlloc();
      v108[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v86 = 136315138;
      sub_100037C44(&qword_1000A3640, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v87 = sub_10007D230();
      uint64_t v109 = sub_100037524(v87, v88, v108);
      sub_10007D0F0();
      swift_bridgeObjectRelease();
      uint64_t v89 = *(void (**)(char *, uint64_t))(v21 + 8);
      v89(v81, v84);
      _os_log_impl((void *)&_mh_execute_header, v83, v85, "Cannot find object for current default notes folder URL — returning nil {notesFolderURL: %s}", v86, 0xCu);
      swift_arrayDestroy();
      uint64_t v82 = v105;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v89 = *(void (**)(char *, uint64_t))(v21 + 8);
      v89(v81, v84);
    }

    v89(v82, v84);
    return 0;
  }
  self;
  uint64_t v67 = swift_dynamicCastObjCClass();
  if (v67)
  {
    uint64_t v68 = v67;
    uint64_t v69 = qword_1000A31F8;
    id v70 = v66;
    if (v69 != -1) {
      swift_once();
    }
    uint64_t v71 = sub_100008FA4(&qword_1000A47E8);
    sub_100010740(v71, (uint64_t)qword_1000A4F00);
    swift_beginAccess();
    sub_10007C210();
    id v32 = (id)v109;
    swift_endAccess();
    uint64_t v22 = v105;
    if (!v32)
    {

      goto LABEL_26;
    }
    id v72 = [v32 managedObjectContext];

    __chkstk_darwin(v73);
    *(&v101 - 2) = v103;
    *(&v101 - 1) = v68;
    sub_100008FA4(&qword_1000A4B88);
    sub_10007D0D0();

LABEL_25:
    id v32 = (id)v108[0];
LABEL_26:
    (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v20);
    return v32;
  }
  self;
  uint64_t v90 = swift_dynamicCastObjCClass();
  if (!v90)
  {
    if (qword_1000A31E8 != -1) {
      swift_once();
    }
    sub_100010740(v107, (uint64_t)qword_1000A4A88);
    id v95 = v66;
    unsigned __int8 v96 = sub_10007C2D0();
    os_log_type_t v97 = sub_10007D060();
    if (os_log_type_enabled(v96, v97))
    {
      uint64_t v98 = (uint8_t *)swift_slowAlloc();
      double v99 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v98 = 138412290;
      id v100 = [v95 objectID];
      v108[0] = (uint64_t)v100;
      sub_10007D0F0();
      *double v99 = v100;

      _os_log_impl((void *)&_mh_execute_header, v96, v97, "Unknown object type — returning nil {objectID: %@}", v98, 0xCu);
      sub_100008FA4(&qword_1000A3648);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v105, v104);
    return 0;
  }
  uint64_t v91 = v90;
  swift_beginAccess();
  id v92 = v66;
  sub_10007C210();
  uint64_t v93 = (void *)v109;
  swift_endAccess();
  if (v93)
  {
    id v32 = [v93 managedObjectContext];

    if (v32)
    {
      __chkstk_darwin(v94);
      *(&v101 - 2) = v103;
      *(&v101 - 1) = v91;
      sub_100008FA4(&qword_1000A4B88);
      sub_10007D0D0();

      id v32 = (id)v108[0];
    }
    else
    {
    }
  }
  else
  {

    id v32 = 0;
  }
  (*(void (**)(char *, uint64_t))(v21 + 8))(v105, v20);
  return v32;
}

void sub_1000345B0(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_10007C110();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000A31F8 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_100008FA4(&qword_1000A47E8);
  sub_100010740(v9, (uint64_t)qword_1000A4F00);
  swift_beginAccess();
  sub_10007C210();
  uint64_t v10 = (void *)v29;
  swift_endAccess();
  if (v10)
  {
    id v11 = [v10 managedObjectContext];

    if (v11)
    {
      unsigned int v27 = a2;
      uint64_t v12 = self;
      sub_10007C0D0(v13);
      uint64_t v15 = v14;
      id v16 = [v12 virtualSmartFolderMentionedInURL:v14 context:v11];

      if (v16)
      {
        uint64_t v17 = sub_1000385B0(v16, (uint64_t)v11);

        a2 = v27;
        goto LABEL_14;
      }

      a2 = v27;
    }
  }
  if (qword_1000A31E8 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_10007C2E0();
  sub_100010740(v18, (uint64_t)qword_1000A4A88);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  uint64_t v19 = sub_10007C2D0();
  os_log_type_t v20 = sub_10007D060();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    v26[1] = v2;
    uint64_t v22 = (uint8_t *)v21;
    uint64_t v23 = swift_slowAlloc();
    unsigned int v27 = a2;
    v28[0] = v23;
    *(_DWORD *)uint64_t v22 = 136315138;
    v26[0] = v22 + 4;
    sub_100037C44(&qword_1000A3640, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v24 = sub_10007D230();
    uint64_t v29 = sub_100037524(v24, v25, v28);
    sub_10007D0F0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Cannot find notes object for notes folder URL — returning nil {notesFolderURL: %s}", v22, 0xCu);
    swift_arrayDestroy();
    a2 = v27;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }

  uint64_t v17 = 0;
LABEL_14:
  *a2 = v17;
}

void sub_100034978(uint64_t a1@<X0>, void *a2@<X1>, NSObject *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_10007C110();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = self;
  sub_10007C0D0(v13);
  uint64_t v15 = v14;
  id v16 = [v12 objectIDForModernFolderMentionedInURL:v14 noteContext:a2];

  if (!v16) {
    goto LABEL_6;
  }
  id v17 = [a2 managedObjectContext];
  id v52 = 0;
  id v18 = [v17 existingObjectWithID:v16 error:&v52];

  id v19 = v52;
  if (!v18)
  {
    id v25 = v52;
    sub_10007C070();

    swift_willThrow();
    swift_errorRelease();
    uint64_t v4 = 0;
LABEL_6:
    if (qword_1000A31E8 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_10007C2E0();
    sub_100010740(v26, (uint64_t)qword_1000A4A88);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
    unsigned int v27 = sub_10007C2D0();
    os_log_type_t v28 = sub_10007D050();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v50 = v4;
      uint64_t v30 = (uint8_t *)v29;
      id v31 = (void *)swift_slowAlloc();
      os_log_t v49 = a3;
      id v52 = v31;
      *(_DWORD *)uint64_t v30 = 136315138;
      unsigned int v48 = v30 + 4;
      sub_100037C44(&qword_1000A3640, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v32 = sub_10007D230();
      uint64_t v51 = sub_100037524(v32, v33, (uint64_t *)&v52);
      sub_10007D0F0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Cannot find notes object for notes folder URL — returning nil {notesFolderURL: %s}", v30, 0xCu);
      swift_arrayDestroy();
      a3 = v49;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }

    uint64_t v34 = 0;
    goto LABEL_15;
  }
  self;
  uint64_t v20 = swift_dynamicCastObjCClass();
  if (v20)
  {
    uint64_t v21 = (void *)v20;
    id v22 = v19;
    id v23 = v18;
    uint64_t v24 = (uint64_t)sub_1000392EC(v21);
LABEL_14:
    uint64_t v34 = (objc_class *)v24;

    goto LABEL_15;
  }
  self;
  uint64_t v35 = swift_dynamicCastObjCClass();
  if (v35)
  {
    id v36 = (void *)v35;
    id v37 = v19;
    id v23 = v18;
    uint64_t v24 = sub_1000389C8(v36);
    goto LABEL_14;
  }
  uint64_t v50 = v3;
  uint64_t v38 = qword_1000A31E8;
  id v39 = v19;
  if (v38 != -1) {
    swift_once();
  }
  uint64_t v40 = sub_10007C2E0();
  sub_100010740(v40, (uint64_t)qword_1000A4A88);
  id v41 = v16;
  uint64_t v42 = sub_10007C2D0();
  os_log_type_t v43 = sub_10007D060();
  if (os_log_type_enabled(v42, v43))
  {
    os_log_t v49 = v42;
    unint64_t v44 = (uint8_t *)swift_slowAlloc();
    uint64_t v45 = (void *)swift_slowAlloc();
    unsigned int v48 = v44;
    *(_DWORD *)unint64_t v44 = 138412290;
    id v52 = v41;
    id v46 = v41;
    sub_10007D0F0();
    *uint64_t v45 = v16;

    os_log_t v47 = v49;
    _os_log_impl((void *)&_mh_execute_header, v49, v43, "Unknown object type — returning nil {objectID: %@}", v48, 0xCu);
    sub_100008FA4(&qword_1000A3648);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v34 = 0;
LABEL_15:
  a3->Class isa = v34;
}

void sub_100034F2C(uint64_t a1@<X0>, void *a2@<X1>, NSObject *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_10007C110();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = self;
  sub_10007C0D0(v13);
  uint64_t v15 = v14;
  id v16 = [v12 objectIDForHTMLFolderMentionedInURL:v14 context:a2];

  if (!v16) {
    goto LABEL_6;
  }
  id v48 = 0;
  id v17 = [a2 existingObjectWithID:v16 error:&v48];
  id v18 = v48;
  if (!v17)
  {
    id v26 = v48;
    sub_10007C070();

    swift_willThrow();
    swift_errorRelease();
    uint64_t v4 = 0;
LABEL_6:
    uint64_t v46 = v4;
    if (qword_1000A31E8 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_10007C2E0();
    sub_100010740(v27, (uint64_t)qword_1000A4A88);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
    os_log_type_t v28 = sub_10007C2D0();
    os_log_type_t v29 = sub_10007D050();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      id v31 = (void *)swift_slowAlloc();
      os_log_t v45 = a3;
      id v48 = v31;
      *(_DWORD *)uint64_t v30 = 136315138;
      unint64_t v44 = v30 + 4;
      sub_100037C44(&qword_1000A3640, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v32 = sub_10007D230();
      uint64_t v47 = sub_100037524(v32, v33, (uint64_t *)&v48);
      sub_10007D0F0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "Cannot find HTML object for notes folder URL — returning nil {notesFolderURL: %s}", v30, 0xCu);
      swift_arrayDestroy();
      a3 = v45;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }

    goto LABEL_12;
  }
  id v19 = v17;
  self;
  uint64_t v20 = swift_dynamicCastObjCClass();
  if (!v20)
  {
    uint64_t v46 = v3;
    uint64_t v34 = qword_1000A31E8;
    id v35 = v18;
    if (v34 != -1) {
      swift_once();
    }
    uint64_t v36 = sub_10007C2E0();
    sub_100010740(v36, (uint64_t)qword_1000A4A88);
    id v37 = v16;
    uint64_t v38 = sub_10007C2D0();
    os_log_type_t v39 = sub_10007D060();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = swift_slowAlloc();
      os_log_t v45 = v38;
      id v41 = (uint8_t *)v40;
      unint64_t v44 = (void *)swift_slowAlloc();
      *(_DWORD *)id v41 = 138412290;
      id v48 = v37;
      id v42 = v37;
      sub_10007D0F0();
      *unint64_t v44 = v16;

      os_log_t v43 = v45;
      _os_log_impl((void *)&_mh_execute_header, v45, v39, "Unknown object type — returning nil {objectID: %@}", v41, 0xCu);
      sub_100008FA4(&qword_1000A3648);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
LABEL_12:
    id v25 = 0;
    goto LABEL_13;
  }
  uint64_t v21 = v20;
  id v22 = v18;
  id v23 = v19;
  sub_100038E0C(v21);
  id v25 = v24;

LABEL_13:
  a3->Class isa = v25;
}

uint64_t sub_100035484(uint64_t a1, void (*a2)(char *))
{
  uint64_t v3 = sub_100008FA4(&qword_1000A4BB8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = _s5EntryVMa();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008FA4(&qword_1000A4B58);
  uint64_t v10 = sub_10007CEE0();
  if (*(void *)(v10 + 16))
  {
    sub_1000399C8(v10 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), (uint64_t)v5, (uint64_t (*)(void))_s5EntryVMa);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    id v11 = &v9[*(int *)(v6 + 20)];
    uint64_t v12 = sub_100008FA4(&qword_1000A49E8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 2, 2, v12);
    sub_10007C140();
    sub_10000CBC8((uint64_t)v5, &qword_1000A4BB8);
  }
  else
  {
    sub_100039A90((uint64_t)v5, (uint64_t)v9, (uint64_t (*)(void))_s5EntryVMa);
  }
  a2(v9);
  return sub_100039A30((uint64_t)v9, (uint64_t (*)(void))_s5EntryVMa);
}

uint64_t sub_1000356E8(void *a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v130 = a4;
  uint64_t v131 = a3;
  uint64_t v119 = a2;
  uint64_t v5 = sub_10007CDD0();
  __chkstk_darwin(v5 - 8);
  uint64_t v126 = (char *)&v115 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10007C150();
  uint64_t v124 = *(void *)(v7 - 8);
  uint64_t v125 = v7;
  __chkstk_darwin(v7);
  uint64_t v122 = (char *)&v115 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100008FA4(&qword_1000A49E0);
  __chkstk_darwin(v9 - 8);
  uint64_t v123 = (char *)&v115 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100008FA4(&qword_1000A4B58);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v127 = v11;
  uint64_t v128 = v12;
  __chkstk_darwin(v11);
  uint64_t v129 = (uint64_t)&v115 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = sub_10007C2E0();
  uint64_t v121 = *(void *)(v132 - 8);
  uint64_t v14 = __chkstk_darwin(v132);
  id v16 = (char *)&v115 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v118 = (char *)&v115 - v17;
  uint64_t v18 = sub_100008FA4(&qword_1000A3638);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v21 = (char *)&v115 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  id v23 = (char *)&v115 - v22;
  uint64_t v24 = type metadata accessor for NotesFolder();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = __chkstk_darwin(v24);
  os_log_type_t v28 = (char *)&v115 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v120 = (uint64_t)&v115 - v29;
  if (qword_1000A31F8 != -1) {
    swift_once();
  }
  uint64_t v30 = sub_100008FA4(&qword_1000A47E8);
  sub_100010740(v30, (uint64_t)qword_1000A4F00);
  swift_beginAccess();
  sub_10007C210();
  id v31 = (void *)v133;
  swift_endAccess();
  if (!v31) {
    goto LABEL_11;
  }
  if (qword_1000A3200 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_100008FA4(&qword_1000A4B68);
  sub_100010740(v32, (uint64_t)qword_1000A4F18);
  swift_beginAccess();
  sub_10007C210();
  unint64_t v33 = (void *)v133;
  swift_endAccess();
  if (!v33)
  {

LABEL_11:
    if (qword_1000A31E8 != -1) {
      swift_once();
    }
    sub_100010740(v132, (uint64_t)qword_1000A4A88);
    id v41 = sub_10007C2D0();
    os_log_type_t v42 = sub_10007D060();
    BOOL v43 = os_log_type_enabled(v41, v42);
    uint64_t v45 = v127;
    uint64_t v44 = v128;
    if (v43)
    {
      uint64_t v46 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v46 = 0;
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "No modern or HTML note context — returning placeholder timeline", v46, 2u);
      swift_slowDealloc();
    }

    sub_100008FA4(&qword_1000A4B60);
    uint64_t v47 = _s5EntryVMa();
    unint64_t v48 = (*(unsigned __int8 *)(*(void *)(v47 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v47 - 8) + 80);
    uint64_t v49 = swift_allocObject();
    *(_OWORD *)(v49 + 16) = xmmword_100080BC0;
    unint64_t v50 = v49 + v48;
    uint64_t v51 = sub_100008FA4(&qword_1000A49E8);
    uint64_t v52 = (uint64_t)v123;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v123, 2, 2, v51);
    uint64_t v53 = v122;
    sub_10007C140();
    (*(void (**)(unint64_t, char *, uint64_t))(v124 + 32))(v50, v53, v125);
    sub_1000374BC(v52, v50 + *(int *)(v47 + 20));
    sub_10007CDC0();
    sub_100037C44(qword_1000A4B40, (void (*)(uint64_t))_s5EntryVMa);
    uint64_t v54 = v129;
    sub_10007CED0();
    v131(v54);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 8))(v54, v45);
  }
  id v34 = [a1 folder];
  if (v34)
  {
    id v35 = v34;
    id v36 = v31;
    id v37 = v33;
    id v117 = v36;
    sub_10000DD4C(v35, v36, v37, (uint64_t)v23);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) == 1)
    {
      sub_10000CBC8((uint64_t)v23, &qword_1000A3638);
      uint64_t v38 = v128;
      uint64_t v39 = v132;
      uint64_t v40 = v121;
LABEL_31:
      if (qword_1000A31E8 != -1) {
        swift_once();
      }
      uint64_t v85 = sub_100010740(v39, (uint64_t)qword_1000A4A88);
      (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v16, v85, v39);
      id v86 = v35;
      uint64_t v87 = sub_10007C2D0();
      os_log_type_t v88 = sub_10007D060();
      if (os_log_type_enabled(v87, v88))
      {
        id v116 = v37;
        uint64_t v89 = (uint8_t *)swift_slowAlloc();
        v134[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v89 = 136315138;
        id v90 = [v86 identifier];
        if (v90)
        {
          uint64_t v91 = v90;
          uint64_t v92 = sub_10007CF40();
          unint64_t v94 = v93;
        }
        else
        {
          uint64_t v92 = 9732322;
          unint64_t v94 = 0xA300000000000000;
        }
        uint64_t v133 = sub_100037524(v92, v94, v134);
        sub_10007D0F0();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v87, v88, "Cannot fetch notes folder and notes — returning deleted timeline {identifier: %s}", v89, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v121 + 8))(v16, v132);
        id v37 = v116;
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v40 + 8))(v16, v39);
      }
      sub_100008FA4(&qword_1000A4B60);
      uint64_t v95 = _s5EntryVMa();
      unint64_t v96 = (*(unsigned __int8 *)(*(void *)(v95 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v95 - 8) + 80);
      uint64_t v97 = swift_allocObject();
      *(_OWORD *)(v97 + 16) = xmmword_100080BC0;
      unint64_t v98 = v97 + v96;
      uint64_t v99 = sub_100008FA4(&qword_1000A49E8);
      uint64_t v100 = (uint64_t)v123;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v99 - 8) + 56))(v123, 1, 2, v99);
      uint64_t v101 = v122;
      sub_10007C140();
      (*(void (**)(unint64_t, char *, uint64_t))(v124 + 32))(v98, v101, v125);
      sub_1000374BC(v100, v98 + *(int *)(v95 + 20));
      sub_10007CDC0();
      sub_100037C44(qword_1000A4B40, (void (*)(uint64_t))_s5EntryVMa);
      uint64_t v102 = v129;
      sub_10007CED0();
      v131(v102);

      return (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 8))(v102, v127);
    }
    uint64_t v63 = (uint64_t)v23;
    uint64_t v64 = v120;
    sub_100039A90(v63, v120, (uint64_t (*)(void))type metadata accessor for NotesFolder);
    id v65 = sub_1000334B4(v35);
    uint64_t v38 = v128;
    uint64_t v39 = v132;
    uint64_t v40 = v121;
    if (!v65)
    {
      sub_100039A30(v64, (uint64_t (*)(void))type metadata accessor for NotesFolder);
      goto LABEL_31;
    }
    uint64_t v66 = (uint64_t)v65;
    if (qword_1000A31E8 != -1) {
      swift_once();
    }
    uint64_t v67 = sub_100010740(v39, (uint64_t)qword_1000A4A88);
    uint64_t v68 = v118;
    (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v118, v67, v39);
    id v69 = v35;
    id v70 = sub_10007C2D0();
    int v71 = sub_10007D050();
    if (os_log_type_enabled(v70, (os_log_type_t)v71))
    {
      LODWORD(v126) = v71;
      id v116 = v37;
      id v72 = (uint8_t *)swift_slowAlloc();
      v134[0] = swift_slowAlloc();
      *(_DWORD *)id v72 = 136315138;
      id v73 = [v69 identifier];
      if (v73)
      {
        uint64_t v74 = v73;
        uint64_t v75 = sub_10007CF40();
        unint64_t v77 = v76;
      }
      else
      {
        uint64_t v75 = 9732322;
        unint64_t v77 = 0xA300000000000000;
      }
      uint64_t v133 = sub_100037524(v75, v77, v134);
      sub_10007D0F0();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v70, (os_log_type_t)v126, "Returning timeline for notes folder {identifier: %s}", v72, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v121 + 8))(v118, v39);
      id v37 = v116;
      uint64_t v64 = v120;
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v40 + 8))(v68, v39);
    }
    uint64_t v114 = v129;
    sub_100036924(v64, v66, v129);
    swift_bridgeObjectRelease();
    v131(v114);

    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v114, v127);
    uint64_t v84 = v64;
    return sub_100039A30(v84, (uint64_t (*)(void))type metadata accessor for NotesFolder);
  }
  uint64_t v56 = self;
  id v57 = [v56 currentDefaultNotesFolder];
  id v58 = v31;
  id v59 = v33;
  sub_10000DD4C(v57, v58, v59, (uint64_t)v21);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v21, 1, v24) == 1)
  {
    sub_10000CBC8((uint64_t)v21, &qword_1000A3638);
    uint64_t v61 = v127;
    uint64_t v60 = v128;
    uint64_t v62 = v132;
  }
  else
  {
    sub_100039A90((uint64_t)v21, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for NotesFolder);
    id v78 = [v56 currentDefaultNotesFolder];
    id v79 = sub_1000334B4(v78);

    uint64_t v61 = v127;
    uint64_t v60 = v128;
    uint64_t v62 = v132;
    if (v79)
    {
      if (qword_1000A31E8 != -1) {
        swift_once();
      }
      sub_100010740(v62, (uint64_t)qword_1000A4A88);
      uint64_t v80 = sub_10007C2D0();
      os_log_type_t v81 = sub_10007D050();
      if (os_log_type_enabled(v80, v81))
      {
        uint64_t v82 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v82 = 0;
        _os_log_impl((void *)&_mh_execute_header, v80, v81, "Returning timeline for default notes folder", v82, 2u);
        swift_slowDealloc();
      }

      uint64_t v83 = v129;
      sub_100036924((uint64_t)v28, (uint64_t)v79, v129);
      swift_bridgeObjectRelease();
      v131(v83);

      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v83, v61);
      uint64_t v84 = (uint64_t)v28;
      return sub_100039A30(v84, (uint64_t (*)(void))type metadata accessor for NotesFolder);
    }
    sub_100039A30((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for NotesFolder);
  }
  if (qword_1000A31E8 != -1) {
    swift_once();
  }
  sub_100010740(v62, (uint64_t)qword_1000A4A88);
  uint64_t v103 = sub_10007C2D0();
  os_log_type_t v104 = sub_10007D060();
  if (os_log_type_enabled(v103, v104))
  {
    unsigned int v105 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unsigned int v105 = 0;
    _os_log_impl((void *)&_mh_execute_header, v103, v104, "There is no intent notes folder and cannot get current default notes folder — returning placeholder timeline", v105, 2u);
    swift_slowDealloc();
  }

  sub_100008FA4(&qword_1000A4B60);
  uint64_t v106 = _s5EntryVMa();
  unint64_t v107 = (*(unsigned __int8 *)(*(void *)(v106 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v106 - 8) + 80);
  uint64_t v108 = swift_allocObject();
  *(_OWORD *)(v108 + 16) = xmmword_100080BC0;
  unint64_t v109 = v108 + v107;
  uint64_t v110 = sub_100008FA4(&qword_1000A49E8);
  uint64_t v111 = (uint64_t)v123;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v110 - 8) + 56))(v123, 2, 2, v110);
  uint64_t v112 = v122;
  sub_10007C140();
  (*(void (**)(unint64_t, char *, uint64_t))(v124 + 32))(v109, v112, v125);
  sub_1000374BC(v111, v109 + *(int *)(v106 + 20));
  sub_10007CDC0();
  sub_100037C44(qword_1000A4B40, (void (*)(uint64_t))_s5EntryVMa);
  uint64_t v113 = v129;
  sub_10007CED0();
  v131(v113);

  return (*(uint64_t (**)(uint64_t, uint64_t))(v60 + 8))(v113, v61);
}

uint64_t sub_100036924@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v66 = a2;
  uint64_t v62 = a1;
  uint64_t v69 = a3;
  uint64_t v3 = sub_100008FA4(&qword_1000A49E0);
  __chkstk_darwin(v3 - 8);
  uint64_t v65 = (uint64_t)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100008FA4(&qword_1000A4B78);
  __chkstk_darwin(v5 - 8);
  uint64_t v61 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10007CDD0();
  uint64_t v67 = *(void *)(v7 - 8);
  uint64_t v68 = v7;
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v63 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v64 = (char *)&v56 - v10;
  uint64_t v11 = sub_10007C150();
  uint64_t v71 = *(void *)(v11 - 8);
  uint64_t v12 = v71;
  uint64_t v72 = v11;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v56 - v16;
  uint64_t v18 = sub_10007C1E0();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v57 = v18;
  uint64_t v58 = v19;
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_10007C1F0();
  id v73 = *(char **)(v60 - 8);
  uint64_t v22 = __chkstk_darwin(v60);
  uint64_t v24 = (char *)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v56 - v25;
  uint64_t v27 = sub_100008FA4(&qword_1000A4B80);
  uint64_t v28 = __chkstk_darwin(v27 - 8);
  id v59 = (char *)&v56 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  id v31 = (char *)&v56 - v30;
  sub_10007C1D0();
  (*(void (**)(char *, void, uint64_t))(v19 + 104))(v21, enum case for Calendar.Component.day(_:), v18);
  sub_10007C1D0();
  sub_10007C140();
  sub_10007C1B0();
  uint64_t v32 = *(void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v33 = v72;
  v32(v15, v72);
  id v34 = (void (*)(char *, uint64_t))*((void *)v73 + 1);
  v73 += 8;
  uint64_t v35 = v60;
  v34(v24, v60);
  sub_10007C1C0();
  id v70 = v17;
  id v36 = v17;
  uint64_t v37 = (uint64_t)v59;
  uint64_t v56 = v32;
  v32(v36, v33);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v21, v57);
  uint64_t v38 = v26;
  uint64_t v39 = (uint64_t)v61;
  v34(v38, v35);
  id v73 = v31;
  sub_100037BDC((uint64_t)v31, v37);
  int v40 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v71 + 48))(v37, 1, v33);
  uint64_t v41 = 1;
  if (v40 != 1)
  {
    os_log_type_t v42 = v70;
    uint64_t v43 = v72;
    (*(void (**)(char *, uint64_t, uint64_t))(v71 + 32))(v70, v37, v72);
    sub_10007CDB0();
    v56(v42, v43);
    uint64_t v41 = 0;
  }
  uint64_t v45 = v67;
  uint64_t v44 = v68;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 56))(v39, v41, 1, v68);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v39, 1, v44) == 1)
  {
    uint64_t v46 = v64;
    sub_10007CDC0();
    sub_10000CBC8(v39, &qword_1000A4B78);
  }
  else
  {
    uint64_t v46 = v64;
    (*(void (**)(char *, uint64_t, uint64_t))(v45 + 32))(v64, v39, v44);
  }
  sub_100008FA4(&qword_1000A4B60);
  uint64_t v47 = _s5EntryVMa();
  unint64_t v48 = (*(unsigned __int8 *)(*(void *)(v47 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v47 - 8) + 80);
  uint64_t v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = xmmword_100080BC0;
  unint64_t v50 = v49 + v48;
  uint64_t v51 = sub_100008FA4(&qword_1000A49E8);
  uint64_t v52 = *(int *)(v51 + 48);
  uint64_t v53 = v65;
  sub_1000399C8(v62, v65, (uint64_t (*)(void))type metadata accessor for NotesFolder);
  *(void *)(v53 + v52) = v66;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v53, 0, 2, v51);
  swift_bridgeObjectRetain();
  uint64_t v54 = v70;
  sub_10007C140();
  (*(void (**)(unint64_t, char *, uint64_t))(v71 + 32))(v50, v54, v72);
  sub_1000374BC(v53, v50 + *(int *)(v47 + 20));
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v63, v46, v44);
  sub_100037C44(qword_1000A4B40, (void (*)(uint64_t))_s5EntryVMa);
  sub_10007CED0();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v44);
  return sub_10000CBC8((uint64_t)v73, &qword_1000A4B80);
}

uint64_t sub_1000370B8()
{
  return _swift_deallocClassInstance(v0, 24, 7);
}

uint64_t type metadata accessor for NotesFolderTimelineProvider()
{
  return self;
}

uint64_t sub_1000370EC()
{
  return sub_100037C44(qword_1000A4B40, (void (*)(uint64_t))_s5EntryVMa);
}

uint64_t sub_100037138@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1 = a1 + *(int *)(_s5EntryVMa() + 20);
  uint64_t v2 = sub_100008FA4(&qword_1000A49E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 2, 2, v2);

  return sub_10007C140();
}

uint64_t sub_1000371C0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_10007CE40();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *v4;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = (char *)swift_allocObject();
  *((void *)v15 + 2) = a3;
  *((void *)v15 + 3) = a4;
  *((void *)v15 + 4) = v13;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v15[v14], v12, v9);
  swift_retain();
  swift_retain();
  sub_1000356E8(a1, a2, (void (*)(uint64_t))sub_100039950, (uint64_t)v15);
  return swift_release();
}

uint64_t sub_100037330(void *a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  return sub_1000356E8(a1, a2, a3, a4);
}

uint64_t sub_100037354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_1000130F0;
  return IntentTimelineProvider.relevances()(a1, a2, a3);
}

uint64_t sub_100037408(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_100016CF0;
  return IntentTimelineProvider.relevance()(a1, a2, a3);
}

uint64_t sub_1000374BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100008FA4(&qword_1000A49E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100037524(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1000375F8(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_100037B7C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_100037B7C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_10000A340((uint64_t)v12);
  return v7;
}

uint64_t sub_1000375F8(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_10007D100();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_1000377B4(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_10007D170();
  if (!v8)
  {
    sub_10007D1D0();
    __break(1u);
LABEL_17:
    uint64_t result = sub_10007D210();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1000377B4(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_10003784C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_100037A2C(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_100037A2C(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_10003784C(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1000379C4(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_10007D130();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      sub_10007D1D0();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_10007CF90();
      if (!v2) {
        return &_swiftEmptyArrayStorage;
      }
    }
    sub_10007D210();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)sub_10007D1D0();
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_1000379C4(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_100008FA4(&qword_1000A4B70);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_100037A2C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_100008FA4(&qword_1000A4B70);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_10007D210();
  __break(1u);
  return result;
}

uint64_t sub_100037B7C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_100037BDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100008FA4(&qword_1000A4B80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100037C44(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100037C8C(void *a1@<X8>)
{
  sub_100038E0C(*(void *)(v1 + 24));
  *a1 = v3;
}

uint64_t sub_100037CC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000389C8(*(void **)(v1 + 24));
  *a1 = result;
  return result;
}

void sub_100037CF4(NSObject *a1@<X8>)
{
  sub_100034F2C(*(void *)(v1 + 16), *(void **)(v1 + 24), a1);
}

void sub_100037D14(uint64_t *a1@<X8>)
{
  sub_1000345B0(*(void *)(v1 + 24), a1);
}

void sub_100037D30(NSObject *a1@<X8>)
{
  sub_100034978(*(void *)(v1 + 16), *(void **)(v1 + 24), a1);
}

uint64_t sub_100037D50(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100037D70(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100037D70(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100008FA4(&qword_1000A4BA8);
  uint64_t v10 = *(void *)(type metadata accessor for Note() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for Note() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = (char *)v13 + v17;
  uint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  uint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_10007D210();
  __break(1u);
  return result;
}

uint64_t sub_100037FB0(uint64_t result, unint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = a2;
    uint64_t v3 = result;
    unint64_t v4 = a2 >> 62;
    if (!(a2 >> 62))
    {
      uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_10007D1E0();
  uint64_t result = swift_bridgeObjectRelease();
LABEL_4:
  if (v5 >= v3) {
    uint64_t v6 = v3;
  }
  else {
    uint64_t v6 = v5;
  }
  if (v5 < 0) {
    uint64_t v6 = v3;
  }
  if (v3) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_10007D1E0();
    uint64_t result = swift_bridgeObjectRelease();
    if (v9 < 0)
    {
LABEL_28:
      __break(1u);
      return result;
    }
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_10007D1E0();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 < v7)
  {
    __break(1u);
    goto LABEL_28;
  }
  if ((v2 & 0xC000000000000001) != 0 && v7)
  {
    sub_100011278(0, &qword_1000A4BB0);
    Swift::Int v10 = 0;
    do
    {
      Swift::Int v11 = v10 + 1;
      sub_10007D150(v10);
      Swift::Int v10 = v11;
    }
    while (v7 != v11);
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_10007D1F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  return v12;
}

uint64_t sub_100038154(unint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Note();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    Swift::Int v11 = _swiftEmptyArrayStorage;
    if (!v10) {
      return (uint64_t)v11;
    }
    uint64_t v21 = _swiftEmptyArrayStorage;
    uint64_t result = sub_100037D50(0, v10 & ~(v10 >> 63), 0);
    if (v10 < 0) {
      break;
    }
    uint64_t v13 = 0;
    Swift::Int v11 = v21;
    uint64_t v19 = v3;
    unint64_t v20 = a1 & 0xC000000000000001;
    uint64_t v3 = a1;
    while (v10 != v13)
    {
      if (v20) {
        id v14 = (id)sub_10007D160();
      }
      else {
        id v14 = *(id *)(a1 + 8 * v13 + 32);
      }
      uint64_t v15 = v14;
      id v16 = a2;
      sub_100073690(v15, 0, 0, a2, 1, (uint64_t)v9);
      uint64_t v21 = v11;
      unint64_t v18 = (unint64_t)v11[2];
      unint64_t v17 = (unint64_t)v11[3];
      if (v18 >= v17 >> 1)
      {
        sub_100037D50(v17 > 1, v18 + 1, 1);
        Swift::Int v11 = v21;
      }
      ++v13;
      v11[2] = (id)(v18 + 1);
      sub_100039A90((uint64_t)v9, (uint64_t)v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v18, (uint64_t (*)(void))type metadata accessor for Note);
      a1 = v3;
      if (v10 == v13) {
        return (uint64_t)v11;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_10007D1E0();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_100038370(unint64_t a1, void *a2)
{
  unint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Note();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    Swift::Int v11 = (unint64_t *)&_swiftEmptyArrayStorage;
    if (!v10) {
      return (uint64_t)v11;
    }
    unint64_t v22 = (unint64_t *)&_swiftEmptyArrayStorage;
    uint64_t result = sub_100037D50(0, v10 & ~(v10 >> 63), 0);
    if (v10 < 0) {
      break;
    }
    uint64_t v13 = 0;
    Swift::Int v11 = v22;
    unint64_t v20 = v3;
    unint64_t v21 = a1 & 0xC000000000000001;
    unint64_t v14 = a1;
    while (v10 != v13)
    {
      if (v21) {
        id v15 = (id)sub_10007D160();
      }
      else {
        id v15 = *(id *)(a1 + 8 * v13 + 32);
      }
      id v16 = v15;
      id v17 = [a2 customNoteSortType];
      id v18 = a2;
      sub_100073690(v16, 0, v17, a2, 0, (uint64_t)v9);

      unint64_t v22 = v11;
      unint64_t v3 = v11[2];
      unint64_t v19 = v11[3];
      if (v3 >= v19 >> 1)
      {
        sub_100037D50(v19 > 1, v3 + 1, 1);
        Swift::Int v11 = v22;
      }
      ++v13;
      v11[2] = v3 + 1;
      sub_100039A90((uint64_t)v9, (uint64_t)v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v3, (uint64_t (*)(void))type metadata accessor for Note);
      a1 = v14;
      if (v10 == v13) {
        return (uint64_t)v11;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_10007D1E0();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1000385B0(void *a1, uint64_t a2)
{
  unint64_t v3 = a1;
  id v4 = [a1 predicateForContext:a2];
  uint64_t v5 = self;
  id v6 = [v3 noteSortType];
  Class isa = (Class)[v5 sortDescriptorsForCurrentTypeIncludingPinnedNotes:0 folderNoteSortType:v6];

  if (!isa)
  {
    sub_100011278(0, &qword_1000A4B90);
    sub_10007CFD0();
    Class isa = sub_10007CFC0().super.isa;
    swift_bridgeObjectRelease();
  }
  sub_100011278(0, &qword_1000A4B98);
  id v8 = [swift_getObjCClassFromMetadata() ic_objectsMatchingPredicate:v4 sortDescriptors:isa relationshipsKeyPathsForPrefetching:0 fetchLimit:16 context:a2];

  sub_100011278(0, &qword_1000A4BA0);
  unint64_t v9 = sub_10007CFD0();

  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_10007D1E0();
    uint64_t v10 = result;
    if (!result) {
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v10) {
      goto LABEL_18;
    }
  }
  if (v10 < 1)
  {
    __break(1u);
    goto LABEL_34;
  }
  for (uint64_t i = 0; i != v10; ++i)
  {
    if ((v9 & 0xC000000000000001) != 0) {
      id v13 = (id)sub_10007D160();
    }
    else {
      id v13 = *(id *)(v9 + 8 * i + 32);
    }
    unint64_t v14 = v13;
    self;
    if (swift_dynamicCastObjCClass())
    {
      sub_10007CFB0();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_10007CFF0();
      }
      sub_10007D000();
      sub_10007CFE0();
    }
    else
    {
    }
  }
LABEL_18:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
  {
    uint64_t v15 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v15) {
      goto LABEL_20;
    }
LABEL_31:
    swift_bridgeObjectRelease();
LABEL_32:
    id v22 = v3;
    uint64_t v23 = sub_100038154((unint64_t)_swiftEmptyArrayStorage, v22);
    swift_release();

    return v23;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_10007D1E0();
  swift_bridgeObjectRelease();
  if (!v15) {
    goto LABEL_31;
  }
LABEL_20:
  uint64_t result = self;
  if (v15 >= 1)
  {
    id v16 = (void *)result;
    uint64_t v24 = v3;
    for (uint64_t j = 0; j != v15; ++j)
    {
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0) {
        id v18 = (id)sub_10007D160();
      }
      else {
        id v18 = _swiftEmptyArrayStorage[j + 4];
      }
      unint64_t v19 = v18;
      id v20 = [v16 sharedWidget:v24];
      unsigned __int8 v21 = [v20 hidesObject:v19];

      if (v21)
      {
      }
      else
      {
        sub_10007D180();
        sub_10007D1B0();
        sub_10007D1C0();
        sub_10007D190();
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v3 = v24;
    goto LABEL_32;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1000389C8(void *a1)
{
  id v2 = [a1 managedObjectContext];
  if (!v2) {
    return 0;
  }
  unint64_t v3 = v2;
  id v4 = [a1 predicateForVisibleNotes];
  uint64_t v5 = self;
  id v6 = [a1 customNoteSortType];
  Class isa = (Class)[v5 sortDescriptorsForCurrentTypeIncludingPinnedNotes:0 folderNoteSortType:v6];

  if (!isa)
  {
    sub_100011278(0, &qword_1000A4B90);
    sub_10007CFD0();
    Class isa = sub_10007CFC0().super.isa;
    swift_bridgeObjectRelease();
  }
  sub_100011278(0, &qword_1000A4B98);
  id v8 = [swift_getObjCClassFromMetadata() ic_objectsMatchingPredicate:v4 sortDescriptors:isa relationshipKeyPathsForPrefetching:0 fetchLimit:16 context:v3];

  sub_100011278(0, &qword_1000A4BA0);
  unint64_t v9 = sub_10007CFD0();

  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_10007D1E0();
    uint64_t v10 = result;
    if (!result) {
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v10) {
      goto LABEL_20;
    }
  }
  if (v10 < 1)
  {
    __break(1u);
    goto LABEL_36;
  }
  for (uint64_t i = 0; i != v10; ++i)
  {
    if ((v9 & 0xC000000000000001) != 0) {
      id v13 = (id)sub_10007D160();
    }
    else {
      id v13 = *(id *)(v9 + 8 * i + 32);
    }
    unint64_t v14 = v13;
    self;
    if (swift_dynamicCastObjCClass())
    {
      sub_10007CFB0();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_10007CFF0();
      }
      sub_10007D000();
      sub_10007CFE0();
    }
    else
    {
    }
  }
LABEL_20:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
  {
    uint64_t v16 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v16) {
      goto LABEL_22;
    }
LABEL_33:
    swift_bridgeObjectRelease();
    id v23 = a1;
    uint64_t v15 = sub_100038370((unint64_t)_swiftEmptyArrayStorage, v23);
    swift_release();

    return v15;
  }
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_10007D1E0();
  swift_bridgeObjectRelease();
  if (!v16) {
    goto LABEL_33;
  }
LABEL_22:
  uint64_t result = self;
  if (v16 >= 1)
  {
    id v17 = (void *)result;
    for (uint64_t j = 0; j != v16; ++j)
    {
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0) {
        id v19 = (id)sub_10007D160();
      }
      else {
        id v19 = _swiftEmptyArrayStorage[j + 4];
      }
      id v20 = v19;
      id v21 = [v17 sharedWidget];
      unsigned __int8 v22 = [v21 hidesObject:v20];

      if (v22)
      {
      }
      else
      {
        sub_10007D180();
        sub_10007D1B0();
        sub_10007D1C0();
        sub_10007D190();
      }
    }
    goto LABEL_33;
  }
LABEL_36:
  __break(1u);
  return result;
}

void sub_100038E0C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Note();
  uint64_t v37 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000A3200 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100008FA4(&qword_1000A4B68);
  sub_100010740(v5, (uint64_t)qword_1000A4F18);
  swift_beginAccess();
  sub_10007C210();
  id v6 = v38;
  swift_endAccess();
  if (!v6) {
    return;
  }
  id v7 = [v6 allVisibleNotesInCollection:a1 sorted:1];

  if (!v7)
  {
LABEL_48:
    __break(1u);
    return;
  }
  uint64_t v8 = sub_10007CFD0();

  unint64_t v41 = (unint64_t)&_swiftEmptyArrayStorage;
  uint64_t v9 = *(void *)(v8 + 16);
  id v36 = v4;
  if (v9)
  {
    uint64_t v10 = v8 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_100037B7C(v10, (uint64_t)v40);
      sub_100037B7C((uint64_t)v40, (uint64_t)&v38);
      sub_100011278(0, &qword_1000A4BB0);
      if ((swift_dynamicCast() & 1) == 0) {
        uint64_t v39 = 0;
      }
      sub_10000A340((uint64_t)v40);
      if (v39)
      {
        sub_10007CFB0();
        if (*(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_10007CFF0();
        }
        sub_10007D000();
        sub_10007CFE0();
        id v4 = v36;
      }
      v10 += 32;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
    unint64_t v11 = v41;
  }
  else
  {
    unint64_t v11 = (unint64_t)&_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  v40[0] = &_swiftEmptyArrayStorage;
  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_10007D1E0();
    swift_bridgeObjectRelease();
    if (v12) {
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v12)
    {
LABEL_18:
      uint64_t v13 = self;
      if (v12 < 1)
      {
LABEL_46:
        __break(1u);
        goto LABEL_47;
      }
      unint64_t v14 = (void *)v13;
      for (uint64_t i = 0; i != v12; ++i)
      {
        if ((v11 & 0xC000000000000001) != 0) {
          id v16 = (id)sub_10007D160();
        }
        else {
          id v16 = *(id *)(v11 + 8 * i + 32);
        }
        id v17 = v16;
        id v18 = [v14 sharedWidget:v36, v37];
        unsigned __int8 v19 = [v18 hidesObject:v17];

        if (v19)
        {
        }
        else
        {
          sub_10007D180();
          sub_10007D1B0();
          sub_10007D1C0();
          sub_10007D190();
        }
      }
      swift_bridgeObjectRelease();
      id v20 = (void *)v40[0];
      id v4 = v36;
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRelease();
  id v20 = &_swiftEmptyArrayStorage;
LABEL_30:
  sub_100037FB0(16, (unint64_t)v20);
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  unint64_t v26 = v25;
  swift_release();
  int64_t v27 = v26 >> 1;
  BOOL v28 = __OFSUB__(v26 >> 1, v24);
  uint64_t v29 = (v26 >> 1) - v24;
  if (v28)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  if (v29)
  {
    v40[0] = &_swiftEmptyArrayStorage;
    sub_100037D50(0, v29 & ~(v29 >> 63), 0);
    if (v29 < 0)
    {
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
    uint64_t v30 = v40[0];
    if (v24 <= v27) {
      uint64_t v31 = v27;
    }
    else {
      uint64_t v31 = v24;
    }
    uint64_t v32 = v31 - v24;
    uint64_t v33 = (id *)(v22 + 8 * v24);
    while (v32)
    {
      sub_100073F70(*v33, (uint64_t)v4);
      v40[0] = v30;
      unint64_t v35 = *(void *)(v30 + 16);
      unint64_t v34 = *(void *)(v30 + 24);
      if (v35 >= v34 >> 1)
      {
        sub_100037D50(v34 > 1, v35 + 1, 1);
        uint64_t v30 = v40[0];
      }
      *(void *)(v30 + 16) = v35 + 1;
      sub_100039A90((uint64_t)v4, v30+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(void *)(v37 + 72) * v35, (uint64_t (*)(void))type metadata accessor for Note);
      --v32;
      ++v33;
      if (!--v29)
      {
        swift_unknownObjectRelease();
        return;
      }
    }
    __break(1u);
    goto LABEL_45;
  }
  swift_unknownObjectRelease();
}

id *sub_1000392EC(void *a1)
{
  uint64_t v2 = type metadata accessor for Note();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = [a1 managedObjectContext];
  if (!v6) {
    return 0;
  }
  id v7 = v6;
  id v8 = [a1 predicateForVisibleNotes];
  Class isa = (Class)[self sortDescriptorsForCurrentTypeIncludingPinnedNotes:0];
  if (!isa)
  {
    sub_100011278(0, &qword_1000A4B90);
    sub_10007CFD0();
    Class isa = sub_10007CFC0().super.isa;
    swift_bridgeObjectRelease();
  }
  sub_100011278(0, &qword_1000A4B98);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  id v36 = v7;
  id v11 = [ObjCClassFromMetadata ic_objectsMatchingPredicate:v8 sortDescriptors:isa context:v7];

  sub_100011278(0, &qword_1000A4BA0);
  unint64_t v12 = sub_10007CFD0();

  uint64_t v37 = _swiftEmptyArrayStorage;
  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = (id *)sub_10007D1E0();
    uint64_t v13 = (uint64_t)result;
    if (result) {
      goto LABEL_6;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    unint64_t v18 = (unint64_t)_swiftEmptyArrayStorage;
    goto LABEL_21;
  }
  uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = (id *)swift_bridgeObjectRetain();
  if (!v13) {
    goto LABEL_20;
  }
LABEL_6:
  if (v13 < 1)
  {
    __break(1u);
    goto LABEL_51;
  }
  for (uint64_t i = 0; i != v13; ++i)
  {
    if ((v12 & 0xC000000000000001) != 0) {
      id v16 = (id)sub_10007D160();
    }
    else {
      id v16 = *(id *)(v12 + 8 * i + 32);
    }
    id v17 = v16;
    self;
    if (swift_dynamicCastObjCClass())
    {
      sub_10007CFB0();
      if (*(void *)(((unint64_t)v37 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v37 & 0xFFFFFFFFFFFFFF8)
                                                                                          + 0x18) >> 1)
        sub_10007CFF0();
      sub_10007D000();
      sub_10007CFE0();
    }
    else
    {
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v18 = (unint64_t)v37;
LABEL_21:
  swift_bridgeObjectRelease();
  uint64_t v37 = _swiftEmptyArrayStorage;
  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_10007D1E0();
    swift_bridgeObjectRelease();
    if (v20)
    {
LABEL_23:
      uint64_t result = (id *)self;
      if (v20 >= 1)
      {
        uint64_t v21 = result;
        unint64_t v34 = v5;
        uint64_t v35 = v3;
        for (uint64_t j = 0; j != v20; ++j)
        {
          if ((v18 & 0xC000000000000001) != 0) {
            id v23 = (id)sub_10007D160();
          }
          else {
            id v23 = *(id *)(v18 + 8 * j + 32);
          }
          uint64_t v24 = v23;
          id v25 = [v21 sharedWidget:v34 v35];
          unsigned __int8 v26 = [v25 hidesObject:v24];

          if (v26)
          {
          }
          else
          {
            sub_10007D180();
            sub_10007D1B0();
            sub_10007D1C0();
            sub_10007D190();
          }
        }
        swift_bridgeObjectRelease();
        unint64_t v27 = (unint64_t)v37;
        uint64_t v5 = v34;
        uint64_t v3 = v35;
        if (((unint64_t)v37 & 0x8000000000000000) != 0) {
          goto LABEL_47;
        }
        goto LABEL_36;
      }
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }
  }
  else
  {
    uint64_t v20 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v20) {
      goto LABEL_23;
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v27 = (unint64_t)_swiftEmptyArrayStorage;
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
    goto LABEL_47;
  }
LABEL_36:
  if ((v27 & 0x4000000000000000) == 0)
  {
    uint64_t v28 = *(void *)(v27 + 16);
    if (!v28)
    {
LABEL_48:
      swift_release();

      return _swiftEmptyArrayStorage;
    }
    goto LABEL_38;
  }
LABEL_47:
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_10007D1E0();
  swift_release();
  if (!v28) {
    goto LABEL_48;
  }
LABEL_38:
  uint64_t v37 = _swiftEmptyArrayStorage;
  uint64_t result = (id *)sub_100037D50(0, v28 & ~(v28 >> 63), 0);
  if ((v28 & 0x8000000000000000) == 0)
  {
    uint64_t v29 = 0;
    unsigned __int8 v19 = v37;
    do
    {
      if ((v27 & 0xC000000000000001) != 0) {
        id v30 = (id)sub_10007D160();
      }
      else {
        id v30 = *(id *)(v27 + 8 * v29 + 32);
      }
      sub_100073690(v30, 0, 0, 0, 255, (uint64_t)v5);
      uint64_t v37 = v19;
      uint64_t v31 = (uint64_t)v5;
      unint64_t v33 = (unint64_t)v19[2];
      unint64_t v32 = (unint64_t)v19[3];
      if (v33 >= v32 >> 1)
      {
        sub_100037D50(v32 > 1, v33 + 1, 1);
        unsigned __int8 v19 = v37;
      }
      ++v29;
      v19[2] = (id)(v33 + 1);
      sub_100039A90(v31, (uint64_t)v19+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v33, (uint64_t (*)(void))type metadata accessor for Note);
      uint64_t v5 = (char *)v31;
    }
    while (v28 != v29);
    swift_release();

    return v19;
  }
LABEL_52:
  __break(1u);
  return result;
}

uint64_t sub_10003987C()
{
  uint64_t v1 = sub_10007CE40();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100039950(uint64_t a1)
{
  sub_10007CE40();
  uint64_t v3 = *(void (**)(char *))(v1 + 16);

  return sub_100035484(a1, v3);
}

uint64_t sub_1000399C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100039A30(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100039A90(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t *sub_100039AF8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    id v7 = (int *)type metadata accessor for Note();
    uint64_t v8 = *((void *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 2, v7))
    {
      uint64_t v9 = sub_100008FA4(&qword_1000A3268);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      uint64_t v12 = a2[3];
      a1[2] = a2[2];
      a1[3] = v12;
      uint64_t v13 = a2[5];
      a1[4] = a2[4];
      a1[5] = v13;
      uint64_t v14 = a2[7];
      a1[6] = a2[6];
      a1[7] = v14;
      uint64_t v15 = a2[9];
      a1[8] = a2[8];
      a1[9] = v15;
      *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
      uint64_t v16 = a2[12];
      a1[11] = a2[11];
      a1[12] = v16;
      uint64_t v17 = v7[11];
      __dst = (char *)a1 + v17;
      unint64_t v34 = (char *)a2 + v17;
      uint64_t v18 = sub_10007C110();
      uint64_t v31 = *(void *)(v18 - 8);
      unint64_t v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v33(v34, 1, v18))
      {
        uint64_t v19 = sub_100008FA4(&qword_1000A3270);
        memcpy(__dst, v34, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))(__dst, v34, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(__dst, 0, 1, v18);
      }
      *(uint64_t *)((char *)a1 + v7[12]) = *(uint64_t *)((char *)a2 + v7[12]);
      *(uint64_t *)((char *)a1 + v7[13]) = *(uint64_t *)((char *)a2 + v7[13]);
      *(uint64_t *)((char *)a1 + v7[14]) = *(uint64_t *)((char *)a2 + v7[14]);
      *(uint64_t *)((char *)a1 + v7[15]) = *(uint64_t *)((char *)a2 + v7[15]);
      *((unsigned char *)a1 + v7[16]) = *((unsigned char *)a2 + v7[16]);
      uint64_t v20 = *(void (**)(uint64_t *, void, uint64_t, int *))(v8 + 56);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      v20(a1, 0, 2, v7);
    }
    uint64_t v21 = a3[5];
    uint64_t v22 = (uint64_t *)((char *)a1 + v21);
    id v23 = (uint64_t *)((char *)a2 + v21);
    sub_100008FA4(&qword_1000A48A0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v24 = sub_10007CD00();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
    }
    else
    {
      *uint64_t v22 = *v23;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v25 = a3[6];
    unsigned __int8 v26 = (char *)a1 + v25;
    unint64_t v27 = (char *)a2 + v25;
    uint64_t v28 = *(void *)v27;
    char v29 = v27[8];
    sub_10000A9EC(*(void *)v27, v29);
    *(void *)unsigned __int8 v26 = v28;
    v26[8] = v29;
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  }
  return a1;
}

uint64_t sub_100039EE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Note();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 2, v4))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = a1 + *(int *)(v4 + 44);
    uint64_t v6 = sub_10007C110();
    uint64_t v7 = *(void *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  uint64_t v8 = a1 + *(int *)(a2 + 20);
  sub_100008FA4(&qword_1000A48A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_10007CD00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = a1 + *(int *)(a2 + 24);
  uint64_t v11 = *(void *)v10;
  char v12 = *(unsigned char *)(v10 + 8);

  return sub_10000AC28(v11, v12);
}

void *sub_10003A0C4(void *a1, void *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for Note();
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(a2, 2, v6))
  {
    uint64_t v8 = sub_100008FA4(&qword_1000A3268);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v33 = v7;
    unint64_t v34 = a3;
    uint64_t v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    uint64_t v10 = a2[3];
    a1[2] = a2[2];
    a1[3] = v10;
    uint64_t v11 = a2[5];
    a1[4] = a2[4];
    a1[5] = v11;
    uint64_t v12 = a2[7];
    a1[6] = a2[6];
    a1[7] = v12;
    uint64_t v13 = a2[9];
    a1[8] = a2[8];
    a1[9] = v13;
    *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
    uint64_t v14 = a2[12];
    a1[11] = a2[11];
    a1[12] = v14;
    uint64_t v15 = v6[11];
    __dst = (char *)a1 + v15;
    id v30 = (char *)a2 + v15;
    uint64_t v16 = sub_10007C110();
    uint64_t v29 = *(void *)(v16 - 8);
    uint64_t v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v31(v30, 1, v16))
    {
      uint64_t v17 = sub_100008FA4(&qword_1000A3270);
      memcpy(__dst, v30, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(__dst, v30, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(__dst, 0, 1, v16);
    }
    *(void *)((char *)a1 + v6[12]) = *(void *)((char *)a2 + v6[12]);
    *(void *)((char *)a1 + v6[13]) = *(void *)((char *)a2 + v6[13]);
    *(void *)((char *)a1 + v6[14]) = *(void *)((char *)a2 + v6[14]);
    *(void *)((char *)a1 + v6[15]) = *(void *)((char *)a2 + v6[15]);
    *((unsigned char *)a1 + v6[16]) = *((unsigned char *)a2 + v6[16]);
    uint64_t v18 = *(void (**)(void *, void, uint64_t, int *))(v33 + 56);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    v18(a1, 0, 2, v6);
    a3 = v34;
  }
  uint64_t v19 = a3[5];
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  sub_100008FA4(&qword_1000A48A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v22 = sub_10007CD00();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  }
  else
  {
    void *v20 = *v21;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v23 = a3[6];
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  uint64_t v26 = *(void *)v25;
  char v27 = v25[8];
  sub_10000A9EC(*(void *)v25, v27);
  *(void *)uint64_t v24 = v26;
  v24[8] = v27;
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  return a1;
}

void *sub_10003A468(void *a1, void *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for Note();
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_10003AB14((uint64_t)a1);
      goto LABEL_7;
    }
    unint64_t v41 = a3;
    *a1 = *a2;
    a1[1] = a2[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1[2] = a2[2];
    a1[3] = a2[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1[4] = a2[4];
    a1[5] = a2[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1[6] = a2[6];
    a1[7] = a2[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1[8] = a2[8];
    a1[9] = a2[9];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
    a1[11] = a2[11];
    a1[12] = a2[12];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v15 = v6[11];
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = sub_10007C110();
    uint64_t v19 = *(void *)(v18 - 8);
    uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
    int v21 = v20(v16, 1, v18);
    int v22 = v20(v17, 1, v18);
    if (v21)
    {
      if (!v22)
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
LABEL_17:
        *(void *)((char *)a1 + v6[12]) = *(void *)((char *)a2 + v6[12]);
        swift_retain();
        swift_release();
        *(void *)((char *)a1 + v6[13]) = *(void *)((char *)a2 + v6[13]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)((char *)a1 + v6[14]) = *(void *)((char *)a2 + v6[14]);
        swift_retain();
        swift_release();
        *(void *)((char *)a1 + v6[15]) = *(void *)((char *)a2 + v6[15]);
        swift_retain();
        swift_release();
        *((unsigned char *)a1 + v6[16]) = *((unsigned char *)a2 + v6[16]);
        goto LABEL_18;
      }
    }
    else
    {
      if (!v22)
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v16, v17, v18);
        goto LABEL_17;
      }
      (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
    }
    uint64_t v24 = sub_100008FA4(&qword_1000A3270);
    memcpy(v16, v17, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_17;
  }
  if (!v10)
  {
    unint64_t v41 = a3;
    *a1 = *a2;
    a1[1] = a2[1];
    a1[2] = a2[2];
    a1[3] = a2[3];
    a1[4] = a2[4];
    a1[5] = a2[5];
    a1[6] = a2[6];
    a1[7] = a2[7];
    a1[8] = a2[8];
    a1[9] = a2[9];
    *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
    a1[11] = a2[11];
    a1[12] = a2[12];
    uint64_t v11 = v6[11];
    __dst = (char *)a1 + v11;
    uint64_t v38 = (char *)a2 + v11;
    uint64_t v12 = sub_10007C110();
    uint64_t v37 = *(void *)(v12 - 8);
    uint64_t v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v39(v38, 1, v12))
    {
      uint64_t v13 = sub_100008FA4(&qword_1000A3270);
      memcpy(__dst, v38, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(__dst, v38, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(__dst, 0, 1, v12);
    }
    *(void *)((char *)a1 + v6[12]) = *(void *)((char *)a2 + v6[12]);
    *(void *)((char *)a1 + v6[13]) = *(void *)((char *)a2 + v6[13]);
    *(void *)((char *)a1 + v6[14]) = *(void *)((char *)a2 + v6[14]);
    *(void *)((char *)a1 + v6[15]) = *(void *)((char *)a2 + v6[15]);
    *((unsigned char *)a1 + v6[16]) = *((unsigned char *)a2 + v6[16]);
    uint64_t v23 = *(void (**)(void *, void, uint64_t, int *))(v7 + 56);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    v23(a1, 0, 2, v6);
LABEL_18:
    a3 = v41;
    if (a1 == a2) {
      goto LABEL_23;
    }
    goto LABEL_19;
  }
LABEL_7:
  uint64_t v14 = sub_100008FA4(&qword_1000A3268);
  memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
  if (a1 == a2) {
    goto LABEL_23;
  }
LABEL_19:
  uint64_t v25 = a3[5];
  uint64_t v26 = (void *)((char *)a1 + v25);
  char v27 = (void *)((char *)a2 + v25);
  sub_10000CBC8((uint64_t)a1 + v25, &qword_1000A48A0);
  sub_100008FA4(&qword_1000A48A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v28 = sub_10007CD00();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
  }
  else
  {
    *uint64_t v26 = *v27;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
LABEL_23:
  uint64_t v29 = a3[6];
  id v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  uint64_t v32 = *(void *)v31;
  char v33 = v31[8];
  sub_10000A9EC(*(void *)v31, v33);
  uint64_t v34 = *(void *)v30;
  char v35 = v30[8];
  *(void *)id v30 = v32;
  v30[8] = v33;
  sub_10000AC28(v34, v35);
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  return a1;
}

uint64_t sub_10003AB14(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Note();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_10003AB70(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for Note();
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v7 + 48))(a2, 2, v6))
  {
    uint64_t v8 = sub_100008FA4(&qword_1000A3268);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    long long v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    long long v10 = a2[3];
    a1[2] = a2[2];
    a1[3] = v10;
    a1[4] = a2[4];
    *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
    *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
    uint64_t v11 = v6[11];
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_10007C110();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      uint64_t v16 = sub_100008FA4(&qword_1000A3270);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    *(void *)((char *)a1 + v6[12]) = *(void *)((char *)a2 + v6[12]);
    *(void *)((char *)a1 + v6[13]) = *(void *)((char *)a2 + v6[13]);
    *(void *)((char *)a1 + v6[14]) = *(void *)((char *)a2 + v6[14]);
    *(void *)((char *)a1 + v6[15]) = *(void *)((char *)a2 + v6[15]);
    *((unsigned char *)a1 + v6[16]) = *((unsigned char *)a2 + v6[16]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v7 + 56))(a1, 0, 2, v6);
  }
  uint64_t v17 = a3[5];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = sub_100008FA4(&qword_1000A48A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v21 = sub_10007CD00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v18, v19, v21);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  uint64_t v22 = a3[6];
  uint64_t v23 = a3[7];
  uint64_t v24 = (char *)a1 + v22;
  uint64_t v25 = (char *)a2 + v22;
  *(void *)uint64_t v24 = *(void *)v25;
  v24[8] = v25[8];
  *(void *)((char *)a1 + v23) = *(void *)((char *)a2 + v23);
  return a1;
}

void *sub_10003AE7C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for Note();
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_10003AB14((uint64_t)a1);
LABEL_7:
      uint64_t v19 = sub_100008FA4(&qword_1000A3268);
      memcpy(a1, a2, *(void *)(*(void *)(v19 - 8) + 64));
      if (a1 == a2) {
        goto LABEL_24;
      }
      goto LABEL_21;
    }
    uint64_t v20 = a2[1];
    *a1 = *a2;
    a1[1] = v20;
    swift_bridgeObjectRelease();
    uint64_t v21 = a2[3];
    a1[2] = a2[2];
    a1[3] = v21;
    swift_bridgeObjectRelease();
    uint64_t v22 = a2[5];
    a1[4] = a2[4];
    a1[5] = v22;
    swift_bridgeObjectRelease();
    uint64_t v23 = a2[7];
    a1[6] = a2[6];
    a1[7] = v23;
    swift_bridgeObjectRelease();
    uint64_t v24 = a2[9];
    a1[8] = a2[8];
    a1[9] = v24;
    swift_bridgeObjectRelease();
    *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
    uint64_t v25 = a2[12];
    a1[11] = a2[11];
    a1[12] = v25;
    swift_bridgeObjectRelease();
    uint64_t v26 = v6[11];
    char v27 = (char *)a1 + v26;
    uint64_t v28 = (char *)a2 + v26;
    uint64_t v29 = sub_10007C110();
    uint64_t v30 = *(void *)(v29 - 8);
    uint64_t v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48);
    uint64_t v47 = v27;
    LODWORD(v27) = v31(v27, 1, v29);
    int v32 = v31(v28, 1, v29);
    if (v27)
    {
      if (v32)
      {
        size_t v33 = *(void *)(*(void *)(sub_100008FA4(&qword_1000A3270) - 8) + 64);
        uint64_t v34 = v47;
LABEL_17:
        memcpy(v34, v28, v33);
        goto LABEL_20;
      }
      (*(void (**)(void *, char *, uint64_t))(v30 + 32))(v47, v28, v29);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v47, 0, 1, v29);
    }
    else
    {
      if (v32)
      {
        (*(void (**)(void *, uint64_t))(v30 + 8))(v47, v29);
        size_t v33 = *(void *)(*(void *)(sub_100008FA4(&qword_1000A3270) - 8) + 64);
        uint64_t v34 = v47;
        goto LABEL_17;
      }
      (*(void (**)(void *, char *, uint64_t))(v30 + 40))(v47, v28, v29);
    }
LABEL_20:
    *(void *)((char *)a1 + v6[12]) = *(void *)((char *)a2 + v6[12]);
    swift_release();
    *(void *)((char *)a1 + v6[13]) = *(void *)((char *)a2 + v6[13]);
    swift_bridgeObjectRelease();
    *(void *)((char *)a1 + v6[14]) = *(void *)((char *)a2 + v6[14]);
    swift_release();
    *(void *)((char *)a1 + v6[15]) = *(void *)((char *)a2 + v6[15]);
    swift_release();
    *((unsigned char *)a1 + v6[16]) = *((unsigned char *)a2 + v6[16]);
    if (a1 == a2) {
      goto LABEL_24;
    }
    goto LABEL_21;
  }
  if (v10) {
    goto LABEL_7;
  }
  long long v11 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v11;
  long long v12 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a1 + 3) = v12;
  *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
  *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
  *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
  uint64_t v13 = v6[11];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_10007C110();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = sub_100008FA4(&qword_1000A3270);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  *(void *)((char *)a1 + v6[12]) = *(void *)((char *)a2 + v6[12]);
  *(void *)((char *)a1 + v6[13]) = *(void *)((char *)a2 + v6[13]);
  *(void *)((char *)a1 + v6[14]) = *(void *)((char *)a2 + v6[14]);
  *(void *)((char *)a1 + v6[15]) = *(void *)((char *)a2 + v6[15]);
  *((unsigned char *)a1 + v6[16]) = *((unsigned char *)a2 + v6[16]);
  (*(void (**)(void *, void, uint64_t, int *))(v7 + 56))(a1, 0, 2, v6);
  if (a1 != a2)
  {
LABEL_21:
    uint64_t v35 = a3[5];
    id v36 = (char *)a1 + v35;
    uint64_t v37 = (char *)a2 + v35;
    sub_10000CBC8((uint64_t)a1 + v35, &qword_1000A48A0);
    uint64_t v38 = sub_100008FA4(&qword_1000A48A0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v39 = sub_10007CD00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v36, v37, v39);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
    }
  }
LABEL_24:
  uint64_t v40 = a3[6];
  unint64_t v41 = (char *)a1 + v40;
  os_log_type_t v42 = (char *)a2 + v40;
  uint64_t v43 = *(void *)v42;
  LOBYTE(v42) = v42[8];
  uint64_t v44 = *(void *)v41;
  char v45 = v41[8];
  *(void *)unint64_t v41 = v43;
  v41[8] = (char)v42;
  sub_10000AC28(v44, v45);
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  return a1;
}

uint64_t sub_10003B420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10003B434);
}

uint64_t sub_10003B434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100008FA4(&qword_1000A3268);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    uint64_t v11 = sub_100008FA4(&qword_1000A4898);
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) != a2)
    {
      unsigned int v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24) + 8);
      if (v14 > 1) {
        return (v14 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }

  return v9(v10, a2, v8);
}

uint64_t sub_10003B550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10003B564);
}

uint64_t sub_10003B564(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_100008FA4(&qword_1000A3268);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_100008FA4(&qword_1000A4898);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 24) + 8) = -(char)a2;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for NoteWidgetView()
{
  uint64_t result = qword_1000A4C18;
  if (!qword_1000A4C18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10003B6CC()
{
  sub_10003B80C(319, (unint64_t *)&qword_1000A32E0, (uint64_t (*)(uint64_t))type metadata accessor for Note, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for ObjectStates);
  if (v0 <= 0x3F)
  {
    sub_10003B80C(319, (unint64_t *)&unk_1000A4C28, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_10003B80C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_10003B870()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10003B88C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v116 = a1;
  uint64_t v2 = sub_100008FA4(&qword_1000A3270);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v97 = (char *)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  unint64_t v98 = (char *)&v86 - v5;
  uint64_t v6 = sub_100008FA4(&qword_1000A3268);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  unint64_t v96 = (char *)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v95 = (char *)&v86 - v10;
  __chkstk_darwin(v9);
  uint64_t v114 = (char *)&v86 - v11;
  uint64_t v122 = type metadata accessor for Note();
  uint64_t v115 = *(void *)(v122 - 8);
  uint64_t v12 = __chkstk_darwin(v122);
  uint64_t v88 = (uint64_t)&v86 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v87 = (uint64_t)&v86 - v15;
  __chkstk_darwin(v14);
  uint64_t v86 = (uint64_t)&v86 - v16;
  uint64_t v17 = sub_10007C6B0();
  uint64_t v112 = *(void *)(v17 - 8);
  uint64_t v113 = v17;
  __chkstk_darwin(v17);
  uint64_t v110 = (char *)&v86 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_10007C700();
  uint64_t v107 = *(void *)(v109 - 8);
  __chkstk_darwin(v109);
  uint64_t v106 = (char *)&v86 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_10007C5F0();
  uint64_t v101 = *(void *)(v103 - 8);
  __chkstk_darwin(v103);
  uint64_t v99 = (char *)&v86 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10007C800();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v86 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100008FA4(&qword_1000A4C60);
  __chkstk_darwin(v25 - 8);
  char v27 = (char *)&v86 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_100008FA4(&qword_1000A4C68);
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)&v86 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_100008FA4(&qword_1000A4C70);
  uint64_t v102 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  int v32 = (char *)&v86 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_100008FA4(&qword_1000A4C78);
  uint64_t v105 = *(void *)(v104 - 8);
  __chkstk_darwin(v104);
  uint64_t v34 = (char *)&v86 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_100008FA4(&qword_1000A4C80);
  uint64_t v108 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  id v117 = (char *)&v86 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = sub_100008FA4(&qword_1000A4C88);
  uint64_t v36 = __chkstk_darwin(v120);
  uint64_t v118 = (char *)&v86 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  uint64_t v111 = (char *)&v86 - v38;
  uint64_t v94 = sub_100008FA4(&qword_1000A4C90);
  uint64_t v93 = *(void *)(v94 - 8);
  __chkstk_darwin(v94);
  uint64_t v119 = (char *)&v86 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_100008FA4(&qword_1000A4C98);
  uint64_t v91 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  id v90 = (char *)&v86 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)char v27 = sub_10007C610();
  *((void *)v27 + 1) = 0;
  v27[16] = 0;
  uint64_t v41 = (uint64_t)&v27[*(int *)(sub_100008FA4(&qword_1000A4CA0) + 44)];
  uint64_t v121 = v1;
  sub_10003C7C4(v1, v41);
  (*(void (**)(char *, void, uint64_t))(v22 + 104))(v24, enum case for Font.TextStyle.footnote(_:), v21);
  uint64_t v42 = sub_10007C790();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  uint64_t KeyPath = swift_getKeyPath();
  sub_10000CB64((uint64_t)v27, (uint64_t)v30, &qword_1000A4C60);
  uint64_t v44 = (uint64_t *)&v30[*(int *)(v28 + 36)];
  *uint64_t v44 = KeyPath;
  v44[1] = v42;
  sub_10000CBC8((uint64_t)v27, &qword_1000A4C60);
  uint64_t v45 = v101;
  uint64_t v46 = v99;
  uint64_t v47 = v103;
  (*(void (**)(char *, void, uint64_t))(v101 + 104))(v99, enum case for ContentSizeCategory.extraExtraExtraLarge(_:), v103);
  unint64_t v48 = sub_10003F5CC();
  sub_10007C8E0();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v47);
  sub_10000CBC8((uint64_t)v30, &qword_1000A4C68);
  uint64_t v49 = v106;
  sub_10007C6F0();
  sub_10007CBF0();
  uint64_t v123 = v28;
  uint64_t v124 = (void *)v48;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v51 = v100;
  sub_10007C9A0();
  (*(void (**)(char *, uint64_t))(v107 + 8))(v49, v109);
  (*(void (**)(char *, uint64_t))(v102 + 8))(v32, v51);
  uint64_t v52 = v110;
  sub_10007C690();
  uint64_t v123 = v51;
  uint64_t v124 = &type metadata for Color;
  uint64_t v125 = OpaqueTypeConformance2;
  uint64_t v126 = &protocol witness table for Color;
  uint64_t v53 = (uint64_t)v114;
  uint64_t v54 = swift_getOpaqueTypeConformance2();
  uint64_t v55 = v104;
  sub_10007C9B0();
  (*(void (**)(char *, uint64_t))(v112 + 8))(v52, v113);
  uint64_t v56 = v34;
  uint64_t v57 = v115;
  uint64_t v58 = v55;
  (*(void (**)(char *, uint64_t))(v105 + 8))(v56, v55);
  sub_10000CB64(v121, v53, &qword_1000A3268);
  id v59 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48);
  if (!v59(v53, 2, v122))
  {
    uint64_t v60 = v53;
    uint64_t v61 = v86;
    sub_10003FE14(v60, v86, (uint64_t (*)(void))type metadata accessor for Note);
    sub_100073354();
    sub_10003AB14(v61);
  }
  uint64_t v62 = (uint64_t)v97;
  uint64_t v63 = (uint64_t)v96;
  uint64_t v64 = (uint64_t)v95;
  uint64_t v65 = v89;
  uint64_t v123 = v58;
  uint64_t v124 = (void *)v54;
  swift_getOpaqueTypeConformance2();
  uint64_t v66 = v117;
  sub_10007C950();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v108 + 8))(v66, v65);
  sub_10000CB64(v121, v64, &qword_1000A3268);
  if (!v59(v64, 2, v122))
  {
    uint64_t v67 = v87;
    sub_10003FE14(v64, v87, (uint64_t (*)(void))type metadata accessor for Note);
    swift_bridgeObjectRetain();
    sub_10003AB14(v67);
  }
  uint64_t v68 = (uint64_t)v111;
  uint64_t v69 = (uint64_t)v118;
  sub_10007C3E0();
  swift_bridgeObjectRelease();
  sub_10000CBC8(v69, &qword_1000A4C88);
  unint64_t v70 = sub_10003F690();
  sub_10007C980();
  sub_10000CBC8(v68, &qword_1000A4C88);
  sub_10000CB64(v121, v63, &qword_1000A3268);
  if (v59(v63, 2, v122))
  {
    uint64_t v71 = sub_10007C110();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v62, 1, 1, v71);
    uint64_t v72 = (uint64_t)v98;
    uint64_t v73 = v94;
    uint64_t v74 = v93;
    uint64_t v75 = v92;
    uint64_t v76 = v91;
    unint64_t v77 = v90;
  }
  else
  {
    uint64_t v78 = v88;
    sub_10003FE14(v63, v88, (uint64_t (*)(void))type metadata accessor for Note);
    sub_10000CB64(v78 + *(int *)(v122 + 44), v62, &qword_1000A3270);
    sub_10003AB14(v78);
    uint64_t v79 = sub_10007C110();
    uint64_t v80 = *(void *)(v79 - 8);
    int v81 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v80 + 48))(v62, 1, v79);
    uint64_t v72 = (uint64_t)v98;
    uint64_t v73 = v94;
    uint64_t v74 = v93;
    uint64_t v75 = v92;
    uint64_t v76 = v91;
    unint64_t v77 = v90;
    if (v81 != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v80 + 32))(v98, v62, v79);
      goto LABEL_10;
    }
  }
  id v82 = [self appURLForFolderList];
  sub_10007C0E0();

  sub_10000CBC8(v62, &qword_1000A3270);
LABEL_10:
  uint64_t v83 = sub_10007C110();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v72, 0, 1, v83);
  uint64_t v123 = v120;
  uint64_t v124 = (void *)v70;
  swift_getOpaqueTypeConformance2();
  uint64_t v84 = v119;
  sub_10007C910();
  sub_10000CBC8(v72, &qword_1000A3270);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v84, v73);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v76 + 32))(v116, v77, v75);
}

uint64_t sub_10003C7C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v80 = a2;
  uint64_t v3 = sub_100008FA4(&qword_1000A4898);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (uint64_t *)&v67[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100008FA4(&qword_1000A3270);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v67[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = (int *)type metadata accessor for WidgetHeader();
  uint64_t v10 = *((void *)v9 - 1);
  __chkstk_darwin(v9);
  uint64_t v12 = (uint64_t *)&v67[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_100008FA4(&qword_1000A4CC0);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v94 = &v67[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  uint64_t v95 = &v67[-v16];
  uint64_t v17 = *(int *)(type metadata accessor for NoteWidgetView() + 24);
  uint64_t v93 = a1;
  uint64_t v18 = a1 + v17;
  uint64_t v19 = *(void *)(a1 + v17);
  LOBYTE(a1) = *(unsigned char *)(a1 + v17 + 8);
  sub_10000A9EC(v19, a1);
  char v20 = sub_10003EFB4(v19, a1);
  sub_10000AC28(v19, a1);
  if (v20)
  {
    uint64_t v21 = sub_10007C110();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v8, 1, 1, v21);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t *v5 = swift_getKeyPath();
    sub_100008FA4(&qword_1000A48A0);
    swift_storeEnumTagMultiPayload();
    *uint64_t v12 = swift_getKeyPath();
    sub_100008FA4(&qword_1000A4CD0);
    swift_storeEnumTagMultiPayload();
    uint64_t v23 = (uint64_t *)((char *)v12 + v9[5]);
    *uint64_t v23 = swift_getKeyPath();
    sub_100008FA4(&qword_1000A3360);
    swift_storeEnumTagMultiPayload();
    uint64_t v24 = (char *)v12 + v9[6];
    *(void *)uint64_t v24 = KeyPath;
    v24[8] = 0;
    sub_10000CB00((uint64_t)v5, (uint64_t)v12 + v9[7], &qword_1000A4898);
    sub_10000CB00((uint64_t)v8, (uint64_t)v12 + v9[8], &qword_1000A3270);
    *(uint64_t *)((char *)v12 + v9[9]) = 0;
    *(_OWORD *)((char *)v12 + v9[10]) = xmmword_100085F00;
    *(uint64_t *)((char *)v12 + v9[11]) = 0;
    uint64_t v25 = v95;
    sub_10003FE14((uint64_t)v12, (uint64_t)v95, (uint64_t (*)(void))type metadata accessor for WidgetHeader);
    (*(void (**)(unsigned char *, void, uint64_t, int *))(v10 + 56))(v25, 0, 1, v9);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, int *))(v10 + 56))(v95, 1, 1, v9);
  }
  uint64_t v81 = sub_10007C610();
  sub_10003CF38(v93, (uint64_t)&v102);
  uint64_t v26 = v102;
  uint64_t v27 = v103;
  uint64_t v78 = v105;
  uint64_t v79 = v104;
  uint64_t v76 = v107;
  uint64_t v77 = v106;
  uint64_t v75 = v108;
  uint64_t v84 = v109;
  uint64_t v92 = v111;
  uint64_t v93 = v110;
  uint64_t v90 = v113;
  uint64_t v91 = v112;
  uint64_t v88 = v115;
  uint64_t v89 = v114;
  char v28 = v116;
  int v87 = sub_10007C720();
  uint64_t v29 = *(void *)v18;
  char v30 = *(unsigned char *)(v18 + 8);
  sub_10000A9EC(*(void *)v18, v30);
  sub_10003EFB4(v29, v30);
  sub_10000AC28(v29, v30);
  sub_10007C340();
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  int v86 = sub_10007C750();
  sub_10000A9EC(v29, v30);
  sub_10003EFB4(v29, v30);
  sub_10000AC28(v29, v30);
  sub_10007C340();
  uint64_t v40 = v39;
  uint64_t v70 = v39;
  uint64_t v42 = v41;
  uint64_t v73 = v44;
  uint64_t v74 = v43;
  int v85 = sub_10007C740();
  sub_10000A9EC(v29, v30);
  sub_10003EFB4(v29, v30);
  sub_10000AC28(v29, v30);
  char v97 = 0;
  char v96 = v28;
  char v45 = v28;
  char v98 = 0;
  unsigned __int8 v99 = 0;
  sub_10007C340();
  uint64_t v47 = v46;
  uint64_t v69 = v46;
  uint64_t v72 = v48;
  uint64_t v82 = v50;
  uint64_t v83 = v49;
  unsigned __int8 v51 = v99;
  int v71 = v99;
  unsigned __int8 v100 = 0;
  uint64_t v52 = v94;
  sub_10000CB64((uint64_t)v95, (uint64_t)v94, &qword_1000A4CC0);
  int v68 = v100;
  uint64_t v53 = v80;
  sub_10000CB64((uint64_t)v52, v80, &qword_1000A4CC0);
  uint64_t v54 = (void *)(v53 + *(int *)(sub_100008FA4(&qword_1000A4CC8) + 48));
  v101[0] = v81;
  v101[1] = 0;
  LOBYTE(v101[2]) = 0;
  v101[3] = v26;
  v101[4] = v27;
  uint64_t v55 = v27;
  uint64_t v56 = v78;
  uint64_t v57 = v79;
  v101[5] = v79;
  v101[6] = v78;
  uint64_t v59 = v76;
  uint64_t v58 = v77;
  v101[7] = v77;
  v101[8] = v76;
  uint64_t v60 = v75;
  v101[9] = v75;
  v101[10] = v84;
  v101[11] = v93;
  v101[12] = v92;
  v101[13] = v91;
  v101[14] = v90;
  v101[15] = v89;
  v101[16] = v88;
  LOBYTE(v101[17]) = v45;
  LOBYTE(v101[18]) = v87;
  v101[19] = v32;
  v101[20] = v34;
  v101[21] = v36;
  v101[22] = v38;
  LOBYTE(v101[23]) = 0;
  LOBYTE(v101[24]) = v86;
  v101[25] = v40;
  v101[26] = v42;
  uint64_t v61 = v42;
  uint64_t v63 = v73;
  uint64_t v62 = v74;
  v101[27] = v74;
  v101[28] = v73;
  LOBYTE(v101[29]) = v51;
  LOBYTE(v101[30]) = v85;
  v101[31] = v47;
  uint64_t v64 = v72;
  v101[32] = v72;
  v101[33] = v83;
  v101[34] = v82;
  char v65 = v68;
  LOBYTE(v101[35]) = v68;
  memcpy(v54, v101, 0x119uLL);
  sub_10003F8FC((uint64_t)v101, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10003F7F4);
  sub_10000CBC8((uint64_t)v95, &qword_1000A4CC0);
  uint64_t v102 = v81;
  uint64_t v103 = 0;
  LOBYTE(v104) = 0;
  uint64_t v105 = v26;
  uint64_t v106 = v55;
  uint64_t v107 = v57;
  uint64_t v108 = v56;
  uint64_t v109 = v58;
  uint64_t v110 = v59;
  uint64_t v111 = v60;
  uint64_t v112 = v84;
  uint64_t v113 = v93;
  uint64_t v114 = v92;
  uint64_t v115 = v91;
  uint64_t v116 = v90;
  uint64_t v117 = v89;
  uint64_t v118 = v88;
  char v119 = v45;
  char v120 = v87;
  uint64_t v121 = v32;
  uint64_t v122 = v34;
  uint64_t v123 = v36;
  uint64_t v124 = v38;
  char v125 = 0;
  char v126 = v86;
  uint64_t v127 = v70;
  uint64_t v128 = v61;
  uint64_t v129 = v62;
  uint64_t v130 = v63;
  char v131 = v71;
  char v132 = v85;
  uint64_t v133 = v69;
  uint64_t v134 = v64;
  uint64_t v135 = v83;
  uint64_t v136 = v82;
  char v137 = v65;
  sub_10003F8FC((uint64_t)&v102, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10003F964);
  return sub_10000CBC8((uint64_t)v94, &qword_1000A4CC0);
}

double sub_10003CF38@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for NoteWidgetView();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100008FA4(&qword_1000A3268);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000CB64(a1, (uint64_t)v10, &qword_1000A3268);
  uint64_t v11 = type metadata accessor for Note();
  int v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 2, v11);
  if (!v12)
  {
    sub_10000CBC8((uint64_t)v10, &qword_1000A3268);
    goto LABEL_6;
  }
  if (v12 != 1)
  {
LABEL_6:
    sub_100040270(a1, (uint64_t)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for NoteWidgetView);
    unint64_t v17 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v18 = swift_allocObject();
    sub_10003FE14((uint64_t)v7, v18 + v17, (uint64_t (*)(void))type metadata accessor for NoteWidgetView);
    uint64_t v42 = sub_10007C590();
    sub_10003EBE4(a1, (uint64_t)&v48);
    long long v19 = v48;
    uint64_t v20 = v49;
    uint64_t v21 = BYTE8(v49);
    uint64_t v43 = a2;
    unint64_t v22 = *((void *)&v50 + 1);
    unint64_t v23 = v50;
    uint64_t v24 = v51;
    uint64_t v25 = HIDWORD(v49);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    *(void *)&v44[0] = sub_10003FE7C;
    *((void *)&v44[0] + 1) = v18;
    v44[1] = xmmword_100085F20;
    long long v45 = (unint64_t)v42;
    *(void *)uint64_t v46 = 0;
    *(_OWORD *)&v46[8] = v19;
    *(void *)&v46[24] = v20;
    *(void *)&v46[32] = v21 | (v25 << 32);
    *(_OWORD *)&v46[40] = __PAIR128__(v22, v23);
    a2 = v43;
    *(void *)&v46[56] = v24;
    char v47 = 0;
    sub_100008FA4(&qword_1000A4D08);
    sub_100008FA4(&qword_1000A4D10);
    sub_10000CAB4(&qword_1000A4D18, &qword_1000A4D08);
    sub_10003FB14();
    sub_10007C650();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    goto LABEL_11;
  }
  uint64_t v13 = a1 + *(int *)(v4 + 24);
  uint64_t v14 = *(void *)v13;
  char v15 = *(unsigned char *)(v13 + 8);
  sub_10000A9EC(*(void *)v13, v15);
  char v16 = sub_10003EFB4(v14, v15);
  sub_10000AC28(v14, v15);
  if (v16)
  {
    sub_10003D4A8((uint64_t)&v48);
    v44[0] = v48;
    *(void *)&v44[1] = v49;
    *((void *)&v44[1] + 1) = *((void *)&v49 + 1);
    *(void *)&long long v45 = v50;
    *((void *)&v45 + 1) = BYTE8(v50);
    memset(v46, 0, 58);
  }
  else
  {
    uint64_t v26 = sub_10007C610();
    uint64_t v27 = sub_10007C590();
    sub_10003D5E4(a1, (uint64_t)&v48);
    long long v28 = v48;
    uint64_t v29 = v49;
    uint64_t v31 = *((void *)&v49 + 1);
    uint64_t v30 = v50;
    uint64_t v32 = BYTE8(v50);
    sub_10000A620(v48, *((uint64_t *)&v48 + 1), v49);
    swift_bridgeObjectRetain();
    sub_10000A610(v28, *((uint64_t *)&v28 + 1), v29);
    swift_bridgeObjectRelease();
    *(void *)&v44[0] = v26;
    *(_OWORD *)((char *)v44 + 8) = xmmword_100085F10;
    *((void *)&v44[1] + 1) = v27;
    long long v45 = xmmword_100085F10;
    *(_OWORD *)uint64_t v46 = v28;
    *(void *)&v46[16] = v29;
    *(void *)&v46[24] = v31;
    *(void *)&v46[32] = v30;
    *(void *)&v46[40] = v32;
    *(void *)&v46[48] = 0;
    *(_WORD *)&v46[56] = 257;
  }
  sub_100008FA4(&qword_1000A4CD8);
  sub_100008FA4(&qword_1000A4CE0);
  sub_10003FA7C();
  sub_10000CAB4(&qword_1000A4D00, &qword_1000A4CE0);
  sub_10007C650();
  v44[0] = v48;
  v44[1] = v49;
  uint64_t v33 = 256;
  if (!BYTE9(v54)) {
    uint64_t v33 = 0;
  }
  long long v45 = v50;
  *(_OWORD *)uint64_t v46 = v51;
  *(_OWORD *)&v46[16] = v52;
  *(_OWORD *)&v46[32] = v53;
  *(void *)&v46[48] = v54;
  *(void *)&v46[56] = v33 | BYTE8(v54);
  char v47 = 1;
  sub_100008FA4(&qword_1000A4D08);
  sub_100008FA4(&qword_1000A4D10);
  sub_10000CAB4(&qword_1000A4D18, &qword_1000A4D08);
  sub_10003FB14();
  sub_10007C650();
LABEL_11:
  double result = *(double *)&v48;
  long long v35 = v49;
  long long v36 = v50;
  long long v37 = v51;
  long long v38 = v52;
  long long v39 = v53;
  long long v40 = v54;
  char v41 = v55;
  *(_OWORD *)a2 = v48;
  *(_OWORD *)(a2 + 16) = v35;
  *(_OWORD *)(a2 + 32) = v36;
  *(_OWORD *)(a2 + 48) = v37;
  *(_OWORD *)(a2 + 64) = v38;
  *(_OWORD *)(a2 + 80) = v39;
  *(_OWORD *)(a2 + 96) = v40;
  *(unsigned char *)(a2 + 112) = v41;
  return result;
}

uint64_t sub_10003D480@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10007C9C0();
  *a1 = result;
  return result;
}

uint64_t sub_10003D4A8@<X0>(uint64_t a1@<X8>)
{
  sub_10007C5A0();
  uint64_t v2 = sub_10007C8A0();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  sub_10007C680();
  uint64_t v7 = sub_10007C870();
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  char v13 = v12 & 1;
  sub_10000A610(v2, v4, v6);
  swift_bridgeObjectRelease();
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v9;
  *(unsigned char *)(a1 + 16) = v13;
  *(void *)(a1 + 24) = v11;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 1;
  sub_10000A620(v7, v9, v13);
  swift_bridgeObjectRetain();
  sub_10000A610(v7, v9, v13);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10003D5E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_10007C5A0();
  uint64_t v4 = sub_10007C8A0();
  uint64_t v6 = v5;
  char v8 = v7;
  uint64_t v9 = a1 + *(int *)(type metadata accessor for NoteWidgetView() + 24);
  uint64_t v10 = *(void *)v9;
  char v11 = *(unsigned char *)(v9 + 8);
  sub_10000A9EC(*(void *)v9, v11);
  char v12 = sub_10003EFB4(v10, v11);
  sub_10000AC28(v10, v11);
  if (v12) {
    sub_10007CA80();
  }
  else {
    sub_10007CA50();
  }
  uint64_t v13 = sub_10007C870();
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  char v19 = v18 & 1;
  sub_10000A610(v4, v6, v8 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)a2 = v13;
  *(void *)(a2 + 8) = v15;
  *(unsigned char *)(a2 + 16) = v19;
  *(void *)(a2 + 24) = v17;
  *(void *)(a2 + 32) = 0;
  *(unsigned char *)(a2 + 40) = 1;
  sub_10000A620(v13, v15, v19);
  swift_bridgeObjectRetain();
  sub_10000A610(v13, v15, v19);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10003D780@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = sub_10007C610();
  *(void *)(a3 + 8) = 0x4000000000000000;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t v6 = sub_100008FA4(&qword_1000A4D28);
  return sub_10003D7E0(a2, a1, a3 + *(int *)(v6 + 44));
}

uint64_t sub_10003D7E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v120 = a2;
  uint64_t v155 = a3;
  uint64_t v147 = type metadata accessor for NoteWidgetView();
  uint64_t v122 = *(void *)(v147 - 8);
  __chkstk_darwin(v147);
  uint64_t v123 = v4;
  uint64_t v126 = (uint64_t)&v115 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = sub_10007C3C0();
  uint64_t v124 = *(void *)(v125 - 8);
  __chkstk_darwin(v125);
  uint64_t v119 = v5;
  uint64_t v121 = (char *)&v115 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = sub_100008FA4(&qword_1000A4D30);
  __chkstk_darwin(v151);
  uint64_t v153 = (uint64_t (**)@<X0>(uint64_t@<X8>))((char *)&v115 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v130 = sub_10007C320();
  uint64_t v129 = *(void *)(v130 - 8);
  __chkstk_darwin(v130);
  uint64_t v128 = (char *)&v115 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = sub_100008FA4(&qword_1000A4D38);
  uint64_t v8 = __chkstk_darwin(v152);
  uint64_t v127 = (char *)&v115 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v131 = (uint64_t)&v115 - v10;
  uint64_t v11 = sub_100008FA4(&qword_1000A4D40);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v154 = (uint64_t)&v115 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v139 = (char *)&v115 - v14;
  uint64_t v137 = sub_10007C800();
  uint64_t v136 = *(void *)(v137 - 8);
  __chkstk_darwin(v137);
  uint64_t v148 = (char *)&v115 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100008FA4(&qword_1000A3268);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v138 = (char *)&v115 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v115 - v20;
  __chkstk_darwin(v19);
  unint64_t v23 = (char *)&v115 - v22;
  uint64_t v24 = type metadata accessor for Note();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v118 = (uint64_t)&v115 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v132 = (uint64_t)&v115 - v29;
  uint64_t v117 = v30;
  __chkstk_darwin(v28);
  uint64_t v32 = (char *)&v115 - v31;
  uint64_t v135 = sub_100008FA4(&qword_1000A4D48);
  uint64_t v134 = *(void *)(v135 - 8);
  __chkstk_darwin(v135);
  uint64_t v34 = (char *)&v115 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = sub_100008FA4(&qword_1000A4D50);
  __chkstk_darwin(v133);
  long long v36 = (char *)&v115 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = sub_100008FA4(&qword_1000A4D58);
  __chkstk_darwin(v157);
  long long v38 = (char *)&v115 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_100008FA4(&qword_1000A4D60);
  uint64_t v145 = *(void *)(v39 - 8);
  uint64_t v146 = v39;
  __chkstk_darwin(v39);
  v144 = (char *)&v115 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = sub_100008FA4(&qword_1000A4D68);
  uint64_t v41 = __chkstk_darwin(v143);
  uint64_t v150 = (uint64_t)&v115 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v141 = (char *)&v115 - v44;
  __chkstk_darwin(v43);
  uint64_t v156 = (uint64_t)&v115 - v45;
  uint64_t v158 = a1;
  sub_10000CB64(a1, (uint64_t)v23, &qword_1000A3268);
  uint64_t v116 = v25;
  long long v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
  uint64_t v47 = v25 + 48;
  uint64_t v46 = v48;
  if (v48(v23, 2, v24))
  {
    uint64_t v49 = sub_10007CF80();
    uint64_t v51 = v50;
  }
  else
  {
    sub_10003FE14((uint64_t)v23, (uint64_t)v32, (uint64_t (*)(void))type metadata accessor for Note);
    uint64_t v49 = *((void *)v32 + 2);
    uint64_t v51 = *((void *)v32 + 3);
    swift_bridgeObjectRetain();
    sub_10003AB14((uint64_t)v32);
  }
  sub_10000CB64(v158, (uint64_t)v21, &qword_1000A3268);
  unsigned int v52 = v46(v21, 2, v24);
  uint64_t v149 = v24;
  id v140 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v46;
  if (v52)
  {
    uint64_t v159 = sub_10007C840();
    uint64_t v53 = sub_10007CB60();
  }
  else
  {
    uint64_t v159 = v49;
    uint64_t v160 = v51;
    LOBYTE(v161) = 0;
    uint64_t v162 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    uint64_t v53 = sub_10007CB60();
    sub_10000CBC8((uint64_t)v21, &qword_1000A3268);
  }
  swift_bridgeObjectRelease();
  uint64_t v54 = v147;
  uint64_t v55 = v158;
  uint64_t v56 = *(void *)(v158 + *(int *)(v147 + 28));
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v159 = v53;
  uint64_t v160 = KeyPath;
  uint64_t v161 = v56;
  LOBYTE(v162) = 0;
  sub_100008FA4(&qword_1000A4D70);
  sub_100040830((unint64_t *)&qword_1000A4D78, &qword_1000A4D70);
  sub_10007C990();
  swift_release();
  swift_release();
  uint64_t v58 = v55 + *(int *)(v54 + 24);
  uint64_t v59 = *(void *)v58;
  char v60 = *(unsigned char *)(v58 + 8);
  sub_10000A9EC(*(void *)v58, v60);
  char v61 = sub_10003EFB4(v59, v60);
  sub_10000AC28(v59, v60);
  if (v61)
  {
    uint64_t v62 = sub_10007CA80();
  }
  else
  {
    id v63 = [self ICTintColor];
    uint64_t v62 = sub_10007C9F0();
  }
  uint64_t v64 = v62;
  uint64_t v65 = v135;
  uint64_t v66 = v134;
  uint64_t v67 = v133;
  (*(void (**)(char *, char *, uint64_t))(v134 + 16))(v36, v34, v135);
  *(void *)&v36[*(int *)(v67 + 36)] = v64;
  (*(void (**)(char *, uint64_t))(v66 + 8))(v34, v65);
  sub_10000CB64((uint64_t)v36, (uint64_t)v38, &qword_1000A4D50);
  *(void *)&v38[*(int *)(v157 + 36)] = 0x3FF0000000000000;
  sub_10000CBC8((uint64_t)v36, &qword_1000A4D50);
  uint64_t v68 = *(void *)v58;
  LOBYTE(v66) = *(unsigned char *)(v58 + 8);
  sub_10000A9EC(*(void *)v58, v66);
  LOBYTE(v67) = sub_10003EFB4(v68, v66);
  sub_10000AC28(v68, v66);
  uint64_t v142 = v47;
  if (v67) {
    sub_10007C7E0();
  }
  else {
    sub_10007C7F0();
  }
  uint64_t v69 = v158;
  uint64_t v70 = (uint64_t)v138;
  uint64_t v71 = v137;
  uint64_t v72 = v136;
  sub_10003FFC4();
  uint64_t v73 = v144;
  sub_10007C940();
  sub_10000CBC8((uint64_t)v38, &qword_1000A4D58);
  uint64_t v74 = *(void *)v58;
  char v75 = *(unsigned char *)(v58 + 8);
  sub_10000A9EC(*(void *)v58, v75);
  char v76 = sub_10003EFB4(v74, v75);
  sub_10000AC28(v74, v75);
  uint64_t v77 = (unsigned int *)&enum case for Font.TextStyle.caption(_:);
  if ((v76 & 1) == 0) {
    uint64_t v77 = (unsigned int *)&enum case for Font.TextStyle.body(_:);
  }
  uint64_t v78 = v148;
  (*(void (**)(char *, void, uint64_t))(v72 + 104))(v148, *v77, v71);
  uint64_t v79 = sub_10007C790();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v78, v71);
  uint64_t v80 = swift_getKeyPath();
  uint64_t v82 = v145;
  uint64_t v81 = v146;
  uint64_t v83 = (uint64_t)v141;
  (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v141, v73, v146);
  uint64_t v84 = (uint64_t *)(v83 + *(int *)(v143 + 36));
  *uint64_t v84 = v80;
  v84[1] = v79;
  (*(void (**)(char *, uint64_t))(v82 + 8))(v73, v81);
  uint64_t v85 = v156;
  sub_10000CB00(v83, v156, &qword_1000A4D68);
  sub_10000CB64(v69, v70, &qword_1000A3268);
  if (v140(v70, 2, v149))
  {
    sub_10000CBC8(v70, &qword_1000A3268);
    int v86 = v128;
    sub_10007C310();
    uint64_t v87 = *(void *)v58;
    char v88 = *(unsigned char *)(v58 + 8);
    sub_10000A9EC(*(void *)v58, v88);
    char v89 = sub_10003EFB4(v87, v88);
    sub_10000AC28(v87, v88);
    if (v89) {
      uint64_t v90 = sub_10007CA80();
    }
    else {
      uint64_t v90 = sub_10007CA50();
    }
    uint64_t v104 = v90;
    uint64_t v103 = (uint64_t)v139;
    uint64_t v105 = v129;
    uint64_t v106 = v127;
    uint64_t v107 = v130;
    (*(void (**)(char *, char *, uint64_t))(v129 + 16))(v127, v86, v130);
    *(void *)&v106[*(int *)(v152 + 36)] = v104;
    (*(void (**)(char *, uint64_t))(v105 + 8))(v86, v107);
    uint64_t v108 = (uint64_t)v106;
    uint64_t v109 = v131;
    sub_10000CB00(v108, v131, &qword_1000A4D38);
    sub_10000CB64(v109, (uint64_t)v153, &qword_1000A4D38);
    swift_storeEnumTagMultiPayload();
    sub_100008FA4(&qword_1000A4DB0);
    sub_10000CAB4(&qword_1000A4DB8, &qword_1000A4DB0);
    sub_100040158();
    sub_10007C650();
    sub_10000CBC8(v109, &qword_1000A4D38);
  }
  else
  {
    uint64_t v91 = v69;
    uint64_t v92 = v132;
    sub_10003FE14(v70, v132, (uint64_t (*)(void))type metadata accessor for Note);
    uint64_t v93 = v124;
    uint64_t v94 = v121;
    uint64_t v95 = v125;
    (*(void (**)(char *, uint64_t, uint64_t))(v124 + 16))(v121, v120, v125);
    uint64_t v96 = v126;
    sub_100040270(v91, v126, (uint64_t (*)(void))type metadata accessor for NoteWidgetView);
    uint64_t v97 = v118;
    sub_100040270(v92, v118, (uint64_t (*)(void))type metadata accessor for Note);
    unint64_t v98 = (*(unsigned __int8 *)(v93 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80);
    unint64_t v99 = (v119 + *(unsigned __int8 *)(v122 + 80) + v98) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80);
    unint64_t v100 = (v123 + *(unsigned __int8 *)(v116 + 80) + v99) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80);
    uint64_t v101 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v93 + 32))(v101 + v98, v94, v95);
    uint64_t v85 = v156;
    sub_10003FE14(v96, v101 + v99, (uint64_t (*)(void))type metadata accessor for NoteWidgetView);
    sub_10003FE14(v97, v101 + v100, (uint64_t (*)(void))type metadata accessor for Note);
    uint64_t v102 = v153;
    *uint64_t v153 = sub_1000406F0;
    v102[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v101;
    swift_storeEnumTagMultiPayload();
    sub_100008FA4(&qword_1000A4DB0);
    sub_10000CAB4(&qword_1000A4DB8, &qword_1000A4DB0);
    sub_100040158();
    uint64_t v103 = (uint64_t)v139;
    sub_10007C650();
    sub_10003AB14(v132);
  }
  uint64_t v110 = v150;
  sub_10000CB64(v85, v150, &qword_1000A4D68);
  uint64_t v111 = v154;
  sub_10000CB64(v103, v154, &qword_1000A4D40);
  uint64_t v112 = v155;
  sub_10000CB64(v110, v155, &qword_1000A4D68);
  uint64_t v113 = sub_100008FA4(&qword_1000A4DD0);
  sub_10000CB64(v111, v112 + *(int *)(v113 + 48), &qword_1000A4D40);
  sub_10000CBC8(v103, &qword_1000A4D40);
  sub_10000CBC8(v85, &qword_1000A4D68);
  sub_10000CBC8(v111, &qword_1000A4D40);
  return sub_10000CBC8(v110, &qword_1000A4D68);
}

uint64_t sub_10003E830@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_100008FA4(&qword_1000A4DD8);
  uint64_t v40 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100008FA4(&qword_1000A4DE0);
  uint64_t v41 = *(void *)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v37 - v13;
  sub_10007C3B0();
  double v16 = v15;
  sub_10007C3B0();
  double v18 = v17;
  uint64_t result = type metadata accessor for NoteWidgetView();
  uint64_t v20 = *(void *)(a1 + *(int *)(result + 28));
  if (v18 / (double)v20 <= v16)
  {
    uint64_t v39 = v6;
    uint64_t v22 = v20 - 1;
    if (__OFSUB__(v20, 1))
    {
      __break(1u);
    }
    else
    {
      uint64_t v23 = result;
      uint64_t v38 = a3;
      uint64_t v25 = *(void *)(a2 + 32);
      uint64_t v24 = *(void *)(a2 + 40);
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v42 = v25;
      uint64_t v43 = v24;
      char v44 = 0;
      uint64_t v45 = _swiftEmptyArrayStorage;
      uint64_t v46 = KeyPath;
      uint64_t v47 = v22;
      char v48 = 0;
      sub_100008FA4(&qword_1000A4DE8);
      sub_100040830(&qword_1000A4DF0, &qword_1000A4DE8);
      sub_10007C990();
      swift_release();
      uint64_t v27 = a1 + *(int *)(v23 + 24);
      uint64_t v28 = *(void *)v27;
      char v29 = *(unsigned char *)(v27 + 8);
      sub_10000A9EC(*(void *)v27, v29);
      char v30 = sub_10003EFB4(v28, v29);
      sub_10000AC28(v28, v29);
      if (v30)
      {
        uint64_t v31 = sub_10007CA90();
        uint64_t v32 = v38;
      }
      else
      {
        sub_10000A9EC(v28, v29);
        char v33 = sub_10003EFB4(v28, v29);
        sub_10000AC28(v28, v29);
        uint64_t v32 = v38;
        if (v33) {
          uint64_t v34 = sub_10007CA80();
        }
        else {
          uint64_t v34 = sub_10007CA50();
        }
        uint64_t v31 = v34;
      }
      uint64_t v35 = v39;
      uint64_t v36 = v40;
      (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v12, v8, v39);
      *(void *)&v12[*(int *)(v9 + 36)] = v31;
      (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v35);
      sub_10000CB00((uint64_t)v12, (uint64_t)v14, &qword_1000A4DE0);
      sub_10000CB00((uint64_t)v14, v32, &qword_1000A4DE0);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 56))(v32, 0, 1, v9);
    }
  }
  else
  {
    uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56);
    return v21(a3, 1, 1, v9);
  }
  return result;
}

uint64_t sub_10003EBE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100008FA4(&qword_1000A3268);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v30 - v9;
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v30 - v11;
  uint64_t v13 = type metadata accessor for Note();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v30 = (uint64_t)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  double v18 = (char *)&v30 - v17;
  sub_10000CB64(a1, (uint64_t)v12, &qword_1000A3268);
  uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v19(v12, 2, v13))
  {
    uint64_t v20 = sub_10007CF80();
    uint64_t v22 = v21;
  }
  else
  {
    sub_10003FE14((uint64_t)v12, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for Note);
    uint64_t v20 = *((void *)v18 + 6);
    uint64_t v22 = *((void *)v18 + 7);
    swift_bridgeObjectRetain();
    sub_10003AB14((uint64_t)v18);
  }
  sub_10000CB64(a1, (uint64_t)v10, &qword_1000A3268);
  if (v19(v10, 2, v13))
  {
    uint64_t v31 = sub_10007C840();
    uint64_t v23 = sub_10007CB60();
  }
  else
  {
    uint64_t v31 = v20;
    uint64_t v32 = v22;
    char v33 = 0;
    uint64_t v34 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_10007CB60();
    sub_10000CBC8((uint64_t)v10, &qword_1000A3268);
  }
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  int v25 = sub_10007C680();
  sub_10000CB64(a1, (uint64_t)v7, &qword_1000A3268);
  if (v19(v7, 2, v13))
  {
    uint64_t result = sub_10000CBC8((uint64_t)v7, &qword_1000A3268);
LABEL_12:
    uint64_t v29 = 0;
    uint64_t v28 = 0;
    goto LABEL_13;
  }
  uint64_t v27 = v30;
  sub_10003FE14((uint64_t)v7, v30, (uint64_t (*)(void))type metadata accessor for Note);
  if (*(unsigned char *)(v27 + 80) != 1)
  {
    uint64_t result = sub_10003AB14(v27);
    goto LABEL_12;
  }
  uint64_t v28 = *(void *)(v27 + *(int *)(v13 + 52));
  swift_bridgeObjectRetain_n();
  sub_10003AB14(v27);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v29 = 0x4020000000000000;
LABEL_13:
  *(void *)a2 = v23;
  *(void *)(a2 + 8) = KeyPath;
  *(void *)(a2 + 16) = 1;
  *(unsigned char *)(a2 + 24) = 0;
  *(_DWORD *)(a2 + 28) = v25;
  *(void *)(a2 + 32) = v29;
  *(void *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = v28;
  return result;
}

uint64_t sub_10003EF78@<X0>(uint64_t a1@<X8>)
{
  return sub_10003F1F4(&qword_1000A3358, (uint64_t (*)(void))&type metadata accessor for ColorScheme, 0x686353726F6C6F43, 0xEB00000000656D65, a1);
}

uint64_t sub_10003EFB4(uint64_t a1, char a2)
{
  uint64_t v4 = sub_10007C570();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return a1 & 1;
  }
  swift_retain();
  os_log_type_t v8 = sub_10007D070();
  uint64_t v9 = sub_10007C710();
  os_log_type_t v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v13 = sub_100037524(1819242306, 0xE400000000000000, &v14);
    sub_10007D0F0();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_10007C560();
  swift_getAtKeyPath();
  sub_10000AC28(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v14;
}

uint64_t sub_10003F1B8@<X0>(uint64_t a1@<X8>)
{
  return sub_10003F1F4(&qword_1000A3360, (uint64_t (*)(void))&type metadata accessor for WidgetFamily, 0x6146746567646957, 0xEC000000796C696DLL, a1);
}

uint64_t sub_10003F1F4@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v27 = a3;
  uint64_t v9 = v5;
  uint64_t v11 = sub_10007C570();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100008FA4(a1);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000CB64(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    os_log_type_t v20 = sub_10007D070();
    uint64_t v21 = sub_10007C710();
    if (os_log_type_enabled(v21, v20))
    {
      unint64_t v25 = a4;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v26 = a5;
      uint64_t v23 = (uint8_t *)v22;
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315138;
      uint64_t v28 = sub_100037524(v27, v25, &v29);
      sub_10007D0F0();
      _os_log_impl((void *)&_mh_execute_header, v21, v20, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v23, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_10007C560();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_10003F4AC@<X0>(uint64_t a1@<X8>)
{
  return sub_10003F1F4(&qword_1000A48A0, (uint64_t (*)(void))&type metadata accessor for WidgetRenderingMode, 0xD000000000000013, 0x80000001000884B0, a1);
}

uint64_t sub_10003F4E4@<X0>(uint64_t a1@<X8>)
{
  return sub_10003F1F4(&qword_1000A4CD0, (uint64_t (*)(void))&type metadata accessor for ContentSizeCategory, 0xD000000000000013, 0x8000000100088490, a1);
}

uint64_t sub_10003F51C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10007C4E0();
  *a1 = result;
  return result;
}

uint64_t sub_10003F548@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10007C4E0();
  *a1 = result;
  return result;
}

uint64_t sub_10003F574()
{
  return sub_10007C4F0();
}

uint64_t sub_10003F5A0()
{
  return sub_10007C4F0();
}

unint64_t sub_10003F5CC()
{
  unint64_t result = qword_1000A4CA8;
  if (!qword_1000A4CA8)
  {
    sub_10000A43C(&qword_1000A4C68);
    sub_10000CAB4(&qword_1000A4CB0, &qword_1000A4C60);
    sub_10000CAB4(&qword_1000A34E0, &qword_1000A34E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4CA8);
  }
  return result;
}

unint64_t sub_10003F690()
{
  unint64_t result = qword_1000A4CB8;
  if (!qword_1000A4CB8)
  {
    sub_10000A43C(&qword_1000A4C88);
    sub_10000A43C(&qword_1000A4C78);
    sub_10000A43C(&qword_1000A4C70);
    sub_10000A43C(&qword_1000A4C68);
    sub_10003F5CC();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_100040228(&qword_1000A3498, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4CB8);
  }
  return result;
}

uint64_t sub_10003F7F4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, char a15, int a16, char a17)
{
  if (a17)
  {
    char v19 = a15 & 1;
    return sub_10003F8A4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, v19);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
}

uint64_t sub_10003F8A4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, char a15)
{
  if (a15)
  {
    char v15 = a9 & 1;
    a1 = a7;
    a2 = a8;
  }
  else
  {
    char v15 = a3 & 1;
  }
  sub_10000A620(a1, a2, v15);

  return swift_bridgeObjectRetain();
}

uint64_t sub_10003F8FC(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 136);
  a2(*(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), v4);
  return a1;
}

uint64_t sub_10003F964(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, char a15, int a16, char a17)
{
  if (a17)
  {
    char v19 = a15 & 1;
    return sub_10003FA0C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, v19);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10003FA0C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, char a15)
{
  if (a15)
  {
    char v15 = a9 & 1;
    a1 = a7;
    a2 = a8;
  }
  else
  {
    char v15 = a3 & 1;
  }
  sub_10000A610(a1, a2, v15);

  return swift_bridgeObjectRelease();
}

unint64_t sub_10003FA7C()
{
  unint64_t result = qword_1000A4CE8;
  if (!qword_1000A4CE8)
  {
    sub_10000A43C(&qword_1000A4CD8);
    sub_10000CAB4(&qword_1000A4CF0, &qword_1000A4CF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4CE8);
  }
  return result;
}

unint64_t sub_10003FB14()
{
  unint64_t result = qword_1000A4D20;
  if (!qword_1000A4D20)
  {
    sub_10000A43C(&qword_1000A4D10);
    sub_10003FA7C();
    sub_10000CAB4(&qword_1000A4D00, &qword_1000A4CE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4D20);
  }
  return result;
}

uint64_t sub_10003FBB4()
{
  uint64_t v1 = type metadata accessor for NoteWidgetView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = v0 + v3;
  uint64_t v6 = type metadata accessor for Note();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v0 + v3, 2, v6))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = v5 + *(int *)(v6 + 44);
    uint64_t v8 = sub_10007C110();
    uint64_t v9 = *(void *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  uint64_t v10 = v5 + *(int *)(v1 + 20);
  sub_100008FA4(&qword_1000A48A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_10007CD00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }
  sub_10000AC28(*(void *)(v5 + *(int *)(v1 + 24)), *(unsigned char *)(v5 + *(int *)(v1 + 24) + 8));

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_10003FE14(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10003FE7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for NoteWidgetView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_10003D780(a1, v6, a2);
}

uint64_t sub_10003FEFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_10007C540();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_10003FF30@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_10007C540();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_10003FF64()
{
  return sub_10007C550();
}

uint64_t sub_10003FF94()
{
  return sub_10007C550();
}

unint64_t sub_10003FFC4()
{
  unint64_t result = qword_1000A4D90;
  if (!qword_1000A4D90)
  {
    sub_10000A43C(&qword_1000A4D58);
    sub_100040064();
    sub_10000CAB4(&qword_1000A4DA0, &qword_1000A4DA8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4D90);
  }
  return result;
}

unint64_t sub_100040064()
{
  unint64_t result = qword_1000A4D98;
  if (!qword_1000A4D98)
  {
    sub_10000A43C(&qword_1000A4D50);
    sub_10000A43C(&qword_1000A4D70);
    sub_100040830((unint64_t *)&qword_1000A4D78, &qword_1000A4D70);
    swift_getOpaqueTypeConformance2();
    sub_10000CAB4(&qword_1000A49A0, &qword_1000A49A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4D98);
  }
  return result;
}

unint64_t sub_100040158()
{
  unint64_t result = qword_1000A4DC0;
  if (!qword_1000A4DC0)
  {
    sub_10000A43C(&qword_1000A4D38);
    sub_100040228(&qword_1000A4DC8, (void (*)(uint64_t))&type metadata accessor for PlaceholderText);
    sub_10000CAB4(&qword_1000A49A0, &qword_1000A49A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4DC0);
  }
  return result;
}

uint64_t sub_100040228(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100040270(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000402D8()
{
  uint64_t v1 = sub_10007C3C0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v25 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v3 = (v25 + 16) & ~v25;
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = type metadata accessor for NoteWidgetView();
  uint64_t v24 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v6 = (v3 + v4 + v24) & ~v24;
  uint64_t v7 = *(void *)(*(void *)(v5 - 8) + 64);
  uint64_t v8 = type metadata accessor for Note();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v6 + v7 + v10;
  uint64_t v23 = *(void *)(v9 + 64);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  uint64_t v12 = v0 + v6;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v0 + v6, 2, v8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v13 = v12 + *(int *)(v8 + 44);
    uint64_t v14 = sub_10007C110();
    uint64_t v15 = *(void *)(v14 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14)) {
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  uint64_t v16 = v11 & ~v10;
  uint64_t v17 = v12 + *(int *)(v5 + 20);
  sub_100008FA4(&qword_1000A48A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = sub_10007CD00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  }
  else
  {
    swift_release();
  }
  sub_10000AC28(*(void *)(v12 + *(int *)(v5 + 24)), *(unsigned char *)(v12 + *(int *)(v5 + 24) + 8));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v19 = v0 + v16 + *(int *)(v8 + 44);
  uint64_t v20 = sub_10007C110();
  uint64_t v21 = *(void *)(v20 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20)) {
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v16 + v23, v25 | v24 | v10 | 7);
}

uint64_t sub_1000406F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_10007C3C0() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(type metadata accessor for NoteWidgetView() - 8);
  unint64_t v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(void *)(type metadata accessor for Note() - 8);
  uint64_t v10 = v1 + ((v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));

  return sub_10003E830(v1 + v7, v10, a1);
}

uint64_t sub_100040830(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000A43C(a2);
    sub_10000CAB4(&qword_1000A4D80, &qword_1000A4D88);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000408C8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100040958()
{
  uint64_t v0 = sub_100008FA4(&qword_1000A4ED0);
  uint64_t v22 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10007BDA0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100008FA4(&qword_1000A4ED8);
  __chkstk_darwin(v7);
  sub_10001B2F0();
  sub_10007BE30();
  v30._countAndFlagsBits = 0xD000000000000031;
  v30._object = (void *)0x8000000100088D40;
  sub_10007BE20(v30);
  unsigned int v27 = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  uint64_t v8 = *(void (**)(void))(v4 + 104);
  uint64_t v25 = v3;
  uint64_t v26 = (void (*)(char *, void, uint64_t))v8;
  v8(v6);
  sub_10007BE10();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v28 = v4 + 8;
  uint64_t v29 = v9;
  v9(v6, v3);
  v31._countAndFlagsBits = 0;
  v31._object = (void *)0xE000000000000000;
  sub_10007BE20(v31);
  sub_10007BE40();
  uint64_t v23 = sub_10007BDC0();
  uint64_t v24 = v0;
  uint64_t v10 = *(void (**)(char *, uint64_t))(v22 + 8);
  v10(v2, v0);
  sub_10007BE00();
  uint64_t v22 = sub_10007BDC0();
  v10(v2, v0);
  sub_10007BE30();
  v32._countAndFlagsBits = 0xD000000000000026;
  v32._object = (void *)0x8000000100088DB0;
  sub_10007BE20(v32);
  uint64_t v11 = v25;
  v26(v6, v27, v25);
  sub_10007BE10();
  v29(v6, v11);
  v33._countAndFlagsBits = 0;
  v33._object = (void *)0xE000000000000000;
  sub_10007BE20(v33);
  sub_10007BE40();
  uint64_t v21 = sub_10007BDC0();
  uint64_t v12 = v24;
  v10(v2, v24);
  sub_10007BE00();
  uint64_t v20 = sub_10007BDC0();
  v10(v2, v12);
  sub_10007BE30();
  v34._countAndFlagsBits = 0xD00000000000002DLL;
  v34._object = (void *)0x8000000100088E10;
  sub_10007BE20(v34);
  uint64_t v13 = v25;
  v26(v6, v27, v25);
  sub_10007BE10();
  v29(v6, v13);
  v35._countAndFlagsBits = 0;
  v35._object = (void *)0xE000000000000000;
  sub_10007BE20(v35);
  sub_10007BE40();
  uint64_t v14 = sub_10007BDC0();
  v10(v2, v24);
  sub_100008FA4(&qword_1000A4EE0);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1000860E0;
  uint64_t v16 = v22;
  *(void *)(v15 + 32) = v23;
  *(void *)(v15 + 40) = v16;
  uint64_t v17 = v20;
  *(void *)(v15 + 48) = v21;
  *(void *)(v15 + 56) = v17;
  *(void *)(v15 + 64) = v14;
  uint64_t v18 = sub_10007BDB0();
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_100040E74()
{
  uint64_t v0 = sub_100008FA4(&qword_1000A4EB8);
  uint64_t v22 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10007BDA0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100008FA4(&qword_1000A4EC0);
  __chkstk_darwin(v7);
  sub_100018BA4();
  sub_10007BE30();
  v30._countAndFlagsBits = 0xD000000000000034;
  v30._object = (void *)0x8000000100088C30;
  sub_10007BE20(v30);
  unsigned int v27 = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  uint64_t v8 = *(void (**)(void))(v4 + 104);
  uint64_t v25 = v3;
  uint64_t v26 = (void (*)(char *, void, uint64_t))v8;
  v8(v6);
  sub_10007BE10();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v28 = v4 + 8;
  uint64_t v29 = v9;
  v9(v6, v3);
  v31._countAndFlagsBits = 0;
  v31._object = (void *)0xE000000000000000;
  sub_10007BE20(v31);
  sub_10007BE40();
  uint64_t v23 = sub_10007BDC0();
  uint64_t v24 = v0;
  uint64_t v10 = *(void (**)(char *, uint64_t))(v22 + 8);
  v10(v2, v0);
  sub_10007BE00();
  uint64_t v22 = sub_10007BDC0();
  v10(v2, v0);
  sub_10007BE30();
  v32._countAndFlagsBits = 0xD000000000000029;
  v32._object = (void *)0x8000000100088CA0;
  sub_10007BE20(v32);
  uint64_t v11 = v25;
  v26(v6, v27, v25);
  sub_10007BE10();
  v29(v6, v11);
  v33._countAndFlagsBits = 0;
  v33._object = (void *)0xE000000000000000;
  sub_10007BE20(v33);
  sub_10007BE40();
  uint64_t v21 = sub_10007BDC0();
  uint64_t v12 = v24;
  v10(v2, v24);
  sub_10007BE00();
  uint64_t v20 = sub_10007BDC0();
  v10(v2, v12);
  sub_10007BE30();
  v34._countAndFlagsBits = 0xD000000000000030;
  v34._object = (void *)0x8000000100088D00;
  sub_10007BE20(v34);
  uint64_t v13 = v25;
  v26(v6, v27, v25);
  sub_10007BE10();
  v29(v6, v13);
  v35._countAndFlagsBits = 0;
  v35._object = (void *)0xE000000000000000;
  sub_10007BE20(v35);
  sub_10007BE40();
  uint64_t v14 = sub_10007BDC0();
  v10(v2, v24);
  sub_100008FA4(&qword_1000A4EC8);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1000860E0;
  uint64_t v16 = v22;
  *(void *)(v15 + 32) = v23;
  *(void *)(v15 + 40) = v16;
  uint64_t v17 = v20;
  *(void *)(v15 + 48) = v21;
  *(void *)(v15 + 56) = v17;
  *(void *)(v15 + 64) = v14;
  uint64_t v18 = sub_10007BDB0();
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_100041390()
{
  uint64_t v0 = sub_100008FA4(&qword_1000A4EA0);
  uint64_t v22 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10007BDA0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100008FA4(&qword_1000A4EA8);
  __chkstk_darwin(v7);
  sub_100024EE4();
  sub_10007BE30();
  v30._countAndFlagsBits = 0xD000000000000033;
  v30._object = (void *)0x8000000100088B30;
  sub_10007BE20(v30);
  unsigned int v27 = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  uint64_t v8 = *(void (**)(void))(v4 + 104);
  uint64_t v25 = v3;
  uint64_t v26 = (void (*)(char *, void, uint64_t))v8;
  v8(v6);
  sub_10007BE10();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v28 = v4 + 8;
  uint64_t v29 = v9;
  v9(v6, v3);
  v31._countAndFlagsBits = 0;
  v31._object = (void *)0xE000000000000000;
  sub_10007BE20(v31);
  sub_10007BE40();
  uint64_t v23 = sub_10007BDC0();
  uint64_t v24 = v0;
  uint64_t v10 = *(void (**)(char *, uint64_t))(v22 + 8);
  v10(v2, v0);
  sub_10007BE00();
  uint64_t v22 = sub_10007BDC0();
  v10(v2, v0);
  sub_10007BE30();
  v32._countAndFlagsBits = 0xD000000000000028;
  v32._object = (void *)0x8000000100088BA0;
  sub_10007BE20(v32);
  uint64_t v11 = v25;
  v26(v6, v27, v25);
  sub_10007BE10();
  v29(v6, v11);
  v33._countAndFlagsBits = 0;
  v33._object = (void *)0xE000000000000000;
  sub_10007BE20(v33);
  sub_10007BE40();
  uint64_t v21 = sub_10007BDC0();
  uint64_t v12 = v24;
  v10(v2, v24);
  sub_10007BE00();
  uint64_t v20 = sub_10007BDC0();
  v10(v2, v12);
  sub_10007BE30();
  v34._countAndFlagsBits = 0xD00000000000002FLL;
  v34._object = (void *)0x8000000100088C00;
  sub_10007BE20(v34);
  uint64_t v13 = v25;
  v26(v6, v27, v25);
  sub_10007BE10();
  v29(v6, v13);
  v35._countAndFlagsBits = 0;
  v35._object = (void *)0xE000000000000000;
  sub_10007BE20(v35);
  sub_10007BE40();
  uint64_t v14 = sub_10007BDC0();
  v10(v2, v24);
  sub_100008FA4(&qword_1000A4EB0);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1000860E0;
  uint64_t v16 = v22;
  *(void *)(v15 + 32) = v23;
  *(void *)(v15 + 40) = v16;
  uint64_t v17 = v20;
  *(void *)(v15 + 48) = v21;
  *(void *)(v15 + 56) = v17;
  *(void *)(v15 + 64) = v14;
  uint64_t v18 = sub_10007BDB0();
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_1000418B0()
{
  uint64_t v0 = sub_100008FA4(&qword_1000A4E88);
  uint64_t v22 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10007BDA0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100008FA4(&qword_1000A4E90);
  __chkstk_darwin(v7);
  sub_10001DE50();
  sub_10007BE30();
  v30._countAndFlagsBits = 0xD000000000000034;
  v30._object = (void *)0x8000000100088A20;
  sub_10007BE20(v30);
  unsigned int v27 = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  uint64_t v8 = *(void (**)(void))(v4 + 104);
  uint64_t v25 = v3;
  uint64_t v26 = (void (*)(char *, void, uint64_t))v8;
  v8(v6);
  sub_10007BE10();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v28 = v4 + 8;
  uint64_t v29 = v9;
  v9(v6, v3);
  v31._countAndFlagsBits = 0;
  v31._object = (void *)0xE000000000000000;
  sub_10007BE20(v31);
  sub_10007BE40();
  uint64_t v23 = sub_10007BDC0();
  uint64_t v24 = v0;
  uint64_t v10 = *(void (**)(char *, uint64_t))(v22 + 8);
  v10(v2, v0);
  sub_10007BE00();
  uint64_t v22 = sub_10007BDC0();
  v10(v2, v0);
  sub_10007BE30();
  v32._countAndFlagsBits = 0xD000000000000029;
  v32._object = (void *)0x8000000100088A90;
  sub_10007BE20(v32);
  uint64_t v11 = v25;
  v26(v6, v27, v25);
  sub_10007BE10();
  v29(v6, v11);
  v33._countAndFlagsBits = 0;
  v33._object = (void *)0xE000000000000000;
  sub_10007BE20(v33);
  sub_10007BE40();
  uint64_t v21 = sub_10007BDC0();
  uint64_t v12 = v24;
  v10(v2, v24);
  sub_10007BE00();
  uint64_t v20 = sub_10007BDC0();
  v10(v2, v12);
  sub_10007BE30();
  v34._countAndFlagsBits = 0xD000000000000030;
  v34._object = (void *)0x8000000100088AF0;
  sub_10007BE20(v34);
  uint64_t v13 = v25;
  v26(v6, v27, v25);
  sub_10007BE10();
  v29(v6, v13);
  v35._countAndFlagsBits = 0;
  v35._object = (void *)0xE000000000000000;
  sub_10007BE20(v35);
  sub_10007BE40();
  uint64_t v14 = sub_10007BDC0();
  v10(v2, v24);
  sub_100008FA4(&qword_1000A4E98);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1000860E0;
  uint64_t v16 = v22;
  *(void *)(v15 + 32) = v23;
  *(void *)(v15 + 40) = v16;
  uint64_t v17 = v20;
  *(void *)(v15 + 48) = v21;
  *(void *)(v15 + 56) = v17;
  *(void *)(v15 + 64) = v14;
  uint64_t v18 = sub_10007BDB0();
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_100041DCC()
{
  uint64_t v0 = sub_100008FA4(&qword_1000A4E70);
  uint64_t v22 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10007BDA0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100008FA4(&qword_1000A4E78);
  __chkstk_darwin(v7);
  sub_1000227D8();
  sub_10007BE30();
  v30._countAndFlagsBits = 0xD000000000000035;
  v30._object = (void *)0x8000000100088910;
  sub_10007BE20(v30);
  unsigned int v27 = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  uint64_t v8 = *(void (**)(void))(v4 + 104);
  uint64_t v25 = v3;
  uint64_t v26 = (void (*)(char *, void, uint64_t))v8;
  v8(v6);
  sub_10007BE10();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v28 = v4 + 8;
  uint64_t v29 = v9;
  v9(v6, v3);
  v31._countAndFlagsBits = 0;
  v31._object = (void *)0xE000000000000000;
  sub_10007BE20(v31);
  sub_10007BE40();
  uint64_t v23 = sub_10007BDC0();
  uint64_t v24 = v0;
  uint64_t v10 = *(void (**)(char *, uint64_t))(v22 + 8);
  v10(v2, v0);
  sub_10007BE00();
  uint64_t v22 = sub_10007BDC0();
  v10(v2, v0);
  sub_10007BE30();
  v32._countAndFlagsBits = 0xD00000000000002ALL;
  v32._object = (void *)0x8000000100088980;
  sub_10007BE20(v32);
  uint64_t v11 = v25;
  v26(v6, v27, v25);
  sub_10007BE10();
  v29(v6, v11);
  v33._countAndFlagsBits = 0;
  v33._object = (void *)0xE000000000000000;
  sub_10007BE20(v33);
  sub_10007BE40();
  uint64_t v21 = sub_10007BDC0();
  uint64_t v12 = v24;
  v10(v2, v24);
  sub_10007BE00();
  uint64_t v20 = sub_10007BDC0();
  v10(v2, v12);
  sub_10007BE30();
  v34._countAndFlagsBits = 0xD000000000000031;
  v34._object = (void *)0x80000001000889E0;
  sub_10007BE20(v34);
  uint64_t v13 = v25;
  v26(v6, v27, v25);
  sub_10007BE10();
  v29(v6, v13);
  v35._countAndFlagsBits = 0;
  v35._object = (void *)0xE000000000000000;
  sub_10007BE20(v35);
  sub_10007BE40();
  uint64_t v14 = sub_10007BDC0();
  v10(v2, v24);
  sub_100008FA4(&qword_1000A4E80);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1000860E0;
  uint64_t v16 = v22;
  *(void *)(v15 + 32) = v23;
  *(void *)(v15 + 40) = v16;
  uint64_t v17 = v20;
  *(void *)(v15 + 48) = v21;
  *(void *)(v15 + 56) = v17;
  *(void *)(v15 + 64) = v14;
  uint64_t v18 = sub_10007BDB0();
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_1000422E8()
{
  uint64_t v0 = sub_100008FA4(&qword_1000A4E58);
  uint64_t v22 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10007BDA0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100008FA4(&qword_1000A4E60);
  __chkstk_darwin(v7);
  sub_100016210();
  sub_10007BE30();
  v30._countAndFlagsBits = 0xD00000000000002ELL;
  v30._object = (void *)0x8000000100088830;
  sub_10007BE20(v30);
  unsigned int v27 = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  uint64_t v8 = *(void (**)(void))(v4 + 104);
  uint64_t v25 = v3;
  uint64_t v26 = (void (*)(char *, void, uint64_t))v8;
  v8(v6);
  sub_10007BE10();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v28 = v4 + 8;
  uint64_t v29 = v9;
  v9(v6, v3);
  v31._countAndFlagsBits = 0;
  v31._object = (void *)0xE000000000000000;
  sub_10007BE20(v31);
  sub_10007BE40();
  uint64_t v23 = sub_10007BDC0();
  uint64_t v24 = v0;
  uint64_t v10 = *(void (**)(char *, uint64_t))(v22 + 8);
  v10(v2, v0);
  sub_10007BE00();
  uint64_t v22 = sub_10007BDC0();
  v10(v2, v0);
  sub_10007BE30();
  v32._countAndFlagsBits = 0xD000000000000023;
  v32._object = (void *)0x8000000100088880;
  sub_10007BE20(v32);
  uint64_t v11 = v25;
  v26(v6, v27, v25);
  sub_10007BE10();
  v29(v6, v11);
  v33._countAndFlagsBits = 0;
  v33._object = (void *)0xE000000000000000;
  sub_10007BE20(v33);
  sub_10007BE40();
  uint64_t v21 = sub_10007BDC0();
  uint64_t v12 = v24;
  v10(v2, v24);
  sub_10007BE00();
  uint64_t v20 = sub_10007BDC0();
  v10(v2, v12);
  sub_10007BE30();
  v34._countAndFlagsBits = 0xD00000000000002ALL;
  v34._object = (void *)0x80000001000888E0;
  sub_10007BE20(v34);
  uint64_t v13 = v25;
  v26(v6, v27, v25);
  sub_10007BE10();
  v29(v6, v13);
  v35._countAndFlagsBits = 0;
  v35._object = (void *)0xE000000000000000;
  sub_10007BE20(v35);
  sub_10007BE40();
  uint64_t v14 = sub_10007BDC0();
  v10(v2, v24);
  sub_100008FA4(&qword_1000A4E68);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1000860E0;
  uint64_t v16 = v22;
  *(void *)(v15 + 32) = v23;
  *(void *)(v15 + 40) = v16;
  uint64_t v17 = v20;
  *(void *)(v15 + 48) = v21;
  *(void *)(v15 + 56) = v17;
  *(void *)(v15 + 64) = v14;
  uint64_t v18 = sub_10007BDB0();
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_100042804()
{
  uint64_t v0 = sub_100008FA4(&qword_1000A4E40);
  uint64_t v22 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10007BDA0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100008FA4(&qword_1000A4E48);
  __chkstk_darwin(v7);
  sub_10002E3D4();
  sub_10007BE30();
  v30._countAndFlagsBits = 0xD000000000000036;
  v30._object = (void *)0x8000000100088720;
  sub_10007BE20(v30);
  unsigned int v27 = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  uint64_t v8 = *(void (**)(void))(v4 + 104);
  uint64_t v25 = v3;
  uint64_t v26 = (void (*)(char *, void, uint64_t))v8;
  v8(v6);
  sub_10007BE10();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v28 = v4 + 8;
  uint64_t v29 = v9;
  v9(v6, v3);
  v31._countAndFlagsBits = 0;
  v31._object = (void *)0xE000000000000000;
  sub_10007BE20(v31);
  sub_10007BE40();
  uint64_t v23 = sub_10007BDC0();
  uint64_t v24 = v0;
  uint64_t v10 = *(void (**)(char *, uint64_t))(v22 + 8);
  v10(v2, v0);
  sub_10007BE00();
  uint64_t v22 = sub_10007BDC0();
  v10(v2, v0);
  sub_10007BE30();
  v32._countAndFlagsBits = 0xD00000000000002BLL;
  v32._object = (void *)0x8000000100088790;
  sub_10007BE20(v32);
  uint64_t v11 = v25;
  v26(v6, v27, v25);
  sub_10007BE10();
  v29(v6, v11);
  v33._countAndFlagsBits = 0;
  v33._object = (void *)0xE000000000000000;
  sub_10007BE20(v33);
  sub_10007BE40();
  uint64_t v21 = sub_10007BDC0();
  uint64_t v12 = v24;
  v10(v2, v24);
  sub_10007BE00();
  uint64_t v20 = sub_10007BDC0();
  v10(v2, v12);
  sub_10007BE30();
  v34._countAndFlagsBits = 0xD000000000000032;
  v34._object = (void *)0x80000001000887F0;
  sub_10007BE20(v34);
  uint64_t v13 = v25;
  v26(v6, v27, v25);
  sub_10007BE10();
  v29(v6, v13);
  v35._countAndFlagsBits = 0;
  v35._object = (void *)0xE000000000000000;
  sub_10007BE20(v35);
  sub_10007BE40();
  uint64_t v14 = sub_10007BDC0();
  v10(v2, v24);
  sub_100008FA4(&qword_1000A4E50);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1000860E0;
  uint64_t v16 = v22;
  *(void *)(v15 + 32) = v23;
  *(void *)(v15 + 40) = v16;
  uint64_t v17 = v20;
  *(void *)(v15 + 48) = v21;
  *(void *)(v15 + 56) = v17;
  *(void *)(v15 + 64) = v14;
  uint64_t v18 = sub_10007BDB0();
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_100042D20()
{
  uint64_t v0 = sub_100008FA4(&qword_1000A4E28);
  uint64_t v22 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10007BDA0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100008FA4(&qword_1000A4E30);
  __chkstk_darwin(v7);
  sub_10002935C();
  sub_10007BE30();
  v30._countAndFlagsBits = 0xD00000000000002ELL;
  v30._object = (void *)0x8000000100088640;
  sub_10007BE20(v30);
  unsigned int v27 = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  uint64_t v8 = *(void (**)(void))(v4 + 104);
  uint64_t v25 = v3;
  uint64_t v26 = (void (*)(char *, void, uint64_t))v8;
  v8(v6);
  sub_10007BE10();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v28 = v4 + 8;
  uint64_t v29 = v9;
  v9(v6, v3);
  v31._countAndFlagsBits = 0;
  v31._object = (void *)0xE000000000000000;
  sub_10007BE20(v31);
  sub_10007BE40();
  uint64_t v23 = sub_10007BDC0();
  uint64_t v24 = v0;
  uint64_t v10 = *(void (**)(char *, uint64_t))(v22 + 8);
  v10(v2, v0);
  sub_10007BE00();
  uint64_t v22 = sub_10007BDC0();
  v10(v2, v0);
  sub_10007BE30();
  v32._countAndFlagsBits = 0xD000000000000023;
  v32._object = (void *)0x8000000100088690;
  sub_10007BE20(v32);
  uint64_t v11 = v25;
  v26(v6, v27, v25);
  sub_10007BE10();
  v29(v6, v11);
  v33._countAndFlagsBits = 0;
  v33._object = (void *)0xE000000000000000;
  sub_10007BE20(v33);
  sub_10007BE40();
  uint64_t v21 = sub_10007BDC0();
  uint64_t v12 = v24;
  v10(v2, v24);
  sub_10007BE00();
  uint64_t v20 = sub_10007BDC0();
  v10(v2, v12);
  sub_10007BE30();
  v34._countAndFlagsBits = 0xD00000000000002ALL;
  v34._object = (void *)0x80000001000886F0;
  sub_10007BE20(v34);
  uint64_t v13 = v25;
  v26(v6, v27, v25);
  sub_10007BE10();
  v29(v6, v13);
  v35._countAndFlagsBits = 0;
  v35._object = (void *)0xE000000000000000;
  sub_10007BE20(v35);
  sub_10007BE40();
  uint64_t v14 = sub_10007BDC0();
  v10(v2, v24);
  sub_100008FA4(&qword_1000A4E38);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1000860E0;
  uint64_t v16 = v22;
  *(void *)(v15 + 32) = v23;
  *(void *)(v15 + 40) = v16;
  uint64_t v17 = v20;
  *(void *)(v15 + 48) = v21;
  *(void *)(v15 + 56) = v17;
  *(void *)(v15 + 64) = v14;
  uint64_t v18 = sub_10007BDB0();
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_10004323C()
{
  uint64_t v0 = sub_100008FA4(&qword_1000A4E10);
  uint64_t v22 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10007BDA0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100008FA4(&qword_1000A4E18);
  __chkstk_darwin(v7);
  sub_10002BA2C();
  sub_10007BE30();
  v30._countAndFlagsBits = 0xD00000000000002FLL;
  v30._object = (void *)0x8000000100088550;
  sub_10007BE20(v30);
  unsigned int v27 = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  uint64_t v8 = *(void (**)(void))(v4 + 104);
  uint64_t v25 = v3;
  uint64_t v26 = (void (*)(char *, void, uint64_t))v8;
  v8(v6);
  sub_10007BE10();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v28 = v4 + 8;
  uint64_t v29 = v9;
  v9(v6, v3);
  v31._countAndFlagsBits = 0;
  v31._object = (void *)0xE000000000000000;
  sub_10007BE20(v31);
  sub_10007BE40();
  uint64_t v23 = sub_10007BDC0();
  uint64_t v24 = v0;
  uint64_t v10 = *(void (**)(char *, uint64_t))(v22 + 8);
  v10(v2, v0);
  sub_10007BE00();
  uint64_t v22 = sub_10007BDC0();
  v10(v2, v0);
  sub_10007BE30();
  v32._countAndFlagsBits = 0xD000000000000024;
  v32._object = (void *)0x80000001000885B0;
  sub_10007BE20(v32);
  uint64_t v11 = v25;
  v26(v6, v27, v25);
  sub_10007BE10();
  v29(v6, v11);
  v33._countAndFlagsBits = 0;
  v33._object = (void *)0xE000000000000000;
  sub_10007BE20(v33);
  sub_10007BE40();
  uint64_t v21 = sub_10007BDC0();
  uint64_t v12 = v24;
  v10(v2, v24);
  sub_10007BE00();
  uint64_t v20 = sub_10007BDC0();
  v10(v2, v12);
  sub_10007BE30();
  v34._countAndFlagsBits = 0xD00000000000002BLL;
  v34._object = (void *)0x8000000100088610;
  sub_10007BE20(v34);
  uint64_t v13 = v25;
  v26(v6, v27, v25);
  sub_10007BE10();
  v29(v6, v13);
  v35._countAndFlagsBits = 0;
  v35._object = (void *)0xE000000000000000;
  sub_10007BE20(v35);
  sub_10007BE40();
  uint64_t v14 = sub_10007BDC0();
  v10(v2, v24);
  sub_100008FA4(&qword_1000A4E20);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1000860E0;
  uint64_t v16 = v22;
  *(void *)(v15 + 32) = v23;
  *(void *)(v15 + 40) = v16;
  uint64_t v17 = v20;
  *(void *)(v15 + 48) = v21;
  *(void *)(v15 + 56) = v17;
  *(void *)(v15 + 64) = v14;
  uint64_t v18 = sub_10007BDB0();
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_100043760()
{
  uint64_t v0 = sub_10007BDE0();
  uint64_t v1 = sub_10007BDE0();
  uint64_t v2 = sub_10007BDE0();
  sub_100008FA4(&qword_1000A4E00);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1000807D0;
  *(void *)(v3 + 32) = v0;
  *(void *)(v3 + 40) = v1;
  *(void *)(v3 + 48) = v2;
  uint64_t v4 = sub_10007BDD0();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_100043830()
{
  uint64_t v0 = sub_10007BD90();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B2F0();
  sub_10007BD80();
  uint64_t v4 = sub_10007BD70();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_100008FA4(&qword_1000A4DF8);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100080BC0;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = sub_10007BD60();
  swift_bridgeObjectRelease();
  return v6;
}

ValueMetadata *type metadata accessor for WidgetAssistantIntentsProvider()
{
  return &type metadata for WidgetAssistantIntentsProvider;
}

uint64_t sub_100043978()
{
  uint64_t v0 = sub_10007BE70();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10001BB88();
  sub_10001B2F0();
  sub_10007BE80();
  uint64_t v17 = sub_10007BE60();
  uint64_t v4 = *(void (**)(char *, uint64_t))(v1 + 8);
  v4(v3, v0);
  uint64_t v18 = sub_100019128();
  sub_100018BA4();
  sub_10007BE80();
  uint64_t v16 = sub_10007BE60();
  v4(v3, v0);
  uint64_t v18 = sub_100025438();
  sub_100024EE4();
  sub_10007BE80();
  uint64_t v15 = sub_10007BE60();
  v4(v3, v0);
  uint64_t v18 = sub_10001E340();
  sub_10001DE50();
  sub_10007BE80();
  uint64_t v5 = sub_10007BE60();
  v4(v3, v0);
  uint64_t v18 = sub_100022B24();
  sub_1000227D8();
  sub_10007BE80();
  uint64_t v6 = sub_10007BE60();
  v4(v3, v0);
  uint64_t v18 = sub_10001676C();
  sub_100016210();
  sub_10007BE80();
  uint64_t v7 = sub_10007BE60();
  v4(v3, v0);
  uint64_t v18 = sub_10002EE1C();
  sub_10002E3D4();
  sub_10007BE80();
  uint64_t v8 = sub_10007BE60();
  v4(v3, v0);
  uint64_t v18 = sub_100029840();
  sub_10002935C();
  sub_10007BE80();
  uint64_t v9 = sub_10007BE60();
  v4(v3, v0);
  uint64_t v18 = sub_10002C118();
  sub_10002BA2C();
  sub_10007BE80();
  uint64_t v10 = sub_10007BE60();
  v4(v3, v0);
  sub_100008FA4(&qword_1000A4E08);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1000860F0;
  uint64_t v12 = v16;
  *(void *)(v11 + 32) = v17;
  *(void *)(v11 + 40) = v12;
  *(void *)(v11 + 48) = v15;
  *(void *)(v11 + 56) = v5;
  *(void *)(v11 + 64) = v6;
  *(void *)(v11 + 72) = v7;
  *(void *)(v11 + 80) = v8;
  *(void *)(v11 + 88) = v9;
  *(void *)(v11 + 96) = v10;
  uint64_t v13 = sub_10007BE50();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_100043EAC()
{
  uint64_t v0 = sub_10007C2E0();
  sub_1000112B4(v0, qword_1000A4EE8);
  sub_100010740(v0, (uint64_t)qword_1000A4EE8);
  return sub_10007C2C0();
}

uint64_t sub_100043EF8()
{
  uint64_t v0 = sub_100008FA4(&qword_1000A47E8);
  sub_1000112B4(v0, qword_1000A4F00);
  sub_100010740(v0, (uint64_t)qword_1000A4F00);
  sub_100011278(0, &qword_1000A4F50);
  return sub_10007C200();
}

void *sub_100043F80@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_100043FA8();
  *a1 = result;
  return result;
}

void *sub_100043FA8()
{
  uint64_t v0 = sub_10007CC50();
  uint64_t v37 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  Swift::String v35 = (char *)&v30 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_10007CC70();
  uint64_t v34 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  Swift::String v33 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10007CC40();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (uint64_t *)((char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_10007CC90();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v30 - v12;
  uint64_t v14 = self;
  [v14 startSharedContextWithOptions:8389186];
  id v15 = [v14 sharedContext];
  if (v15)
  {
    uint64_t v16 = v15;
    id v17 = [v15 databaseOpenError];
    if (!v17) {
      return v16;
    }
    uint64_t v18 = v17;
  }
  if (qword_1000A31F0 != -1) {
    swift_once();
  }
  uint64_t v32 = v0;
  uint64_t v19 = sub_10007C2E0();
  sub_100010740(v19, (uint64_t)qword_1000A4EE8);
  uint64_t v20 = sub_10007C2D0();
  os_log_type_t v21 = sub_10007D060();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v22 = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Cannot create modern note context for Widget Extension — returning nil and exiting shortly", v22, 2u);
    swift_slowDealloc();
  }

  sub_100011278(0, &qword_1000A4F30);
  uint64_t v31 = sub_10007D0A0();
  sub_10007CC80();
  void *v6 = 1;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v6, enum case for DispatchTimeInterval.seconds(_:), v3);
  sub_10007CCA0();
  (*(void (**)(void *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v23 = *(void (**)(char *, uint64_t))(v8 + 8);
  v23(v11, v7);
  aBlock[4] = sub_1000444F0;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000444FC;
  aBlock[3] = &unk_10009F4E0;
  uint64_t v24 = _Block_copy(aBlock);
  uint64_t v25 = v33;
  sub_10007CC60();
  aBlock[0] = &_swiftEmptyArrayStorage;
  sub_100044BFC();
  sub_100008FA4(&qword_1000A4F40);
  sub_100044C54();
  uint64_t v26 = v35;
  uint64_t v27 = v32;
  sub_10007D120();
  uint64_t v28 = (void *)v31;
  sub_10007D090();
  _Block_release(v24);

  (*(void (**)(char *, uint64_t))(v37 + 8))(v26, v27);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v25, v36);
  v23(v13, v7);
  return 0;
}

void sub_1000444F0()
{
}

uint64_t sub_1000444FC(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_100044540()
{
  uint64_t v0 = sub_100008FA4(&qword_1000A4B68);
  sub_1000112B4(v0, qword_1000A4F18);
  sub_100010740(v0, (uint64_t)qword_1000A4F18);
  sub_100011278(0, &qword_1000A3650);
  return sub_10007C200();
}

id sub_1000445C8@<X0>(void *a1@<X8>)
{
  id result = sub_1000445F0();
  *a1 = result;
  return result;
}

id sub_1000445F0()
{
  uint64_t v0 = sub_10007CC50();
  uint64_t v46 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v35 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10007CC70();
  uint64_t v45 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10007CC40();
  uint64_t v44 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (uint64_t *)((char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_10007CC90();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  id v15 = (char *)&v35 - v14;
  id result = [objc_allocWithZone((Class)NoteContext) initWithPrivateQueue:1];
  if (!result)
  {
    uint64_t v37 = v13;
    uint64_t v38 = v15;
    uint64_t v39 = v10;
    uint64_t v40 = v9;
    uint64_t v41 = v5;
    uint64_t v42 = v3;
    uint64_t v43 = v0;
    if (qword_1000A31F0 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_10007C2E0();
    sub_100010740(v17, (uint64_t)qword_1000A4EE8);
    uint64_t v18 = sub_10007C2D0();
    os_log_type_t v19 = sub_10007D060();
    BOOL v20 = os_log_type_enabled(v18, v19);
    uint64_t v36 = v2;
    uint64_t v22 = v38;
    uint64_t v21 = v39;
    uint64_t v23 = v6;
    uint64_t v24 = v44;
    uint64_t v25 = v37;
    if (v20)
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Cannot create HTML note context for Widget Extension — returning nil and exiting shortly", v26, 2u);
      swift_slowDealloc();
    }

    sub_100011278(0, &qword_1000A4F30);
    uint64_t v35 = sub_10007D0A0();
    sub_10007CC80();
    void *v8 = 1;
    (*(void (**)(void *, void, uint64_t))(v24 + 104))(v8, enum case for DispatchTimeInterval.seconds(_:), v23);
    sub_10007CCA0();
    (*(void (**)(void *, uint64_t))(v24 + 8))(v8, v23);
    uint64_t v27 = *(void (**)(char *, uint64_t))(v21 + 8);
    uint64_t v28 = v40;
    v27(v25, v40);
    aBlock[4] = sub_100044B08;
    aBlock[5] = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000444FC;
    aBlock[3] = &unk_10009F4B8;
    uint64_t v29 = _Block_copy(aBlock);
    uint64_t v30 = v41;
    sub_10007CC60();
    aBlock[0] = &_swiftEmptyArrayStorage;
    sub_100044BFC();
    sub_100008FA4(&qword_1000A4F40);
    sub_100044C54();
    uint64_t v31 = v22;
    uint64_t v32 = v36;
    uint64_t v33 = v43;
    sub_10007D120();
    uint64_t v34 = (void *)v35;
    sub_10007D090();
    _Block_release(v29);

    (*(void (**)(char *, uint64_t))(v46 + 8))(v32, v33);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v30, v42);
    v27(v31, v28);
    return 0;
  }
  return result;
}

void sub_100044B08()
{
}

void sub_100044B14(const char *a1)
{
  if (qword_1000A31F0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10007C2E0();
  sub_100010740(v2, (uint64_t)qword_1000A4EE8);
  uint64_t v3 = sub_10007C2D0();
  os_log_type_t v4 = sub_10007D050();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, a1, v5, 2u);
    swift_slowDealloc();
  }

  exit(1);
}

uint64_t sub_100044BE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100044BF4()
{
  return swift_release();
}

unint64_t sub_100044BFC()
{
  unint64_t result = qword_1000A4F38;
  if (!qword_1000A4F38)
  {
    sub_10007CC50();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4F38);
  }
  return result;
}

unint64_t sub_100044C54()
{
  unint64_t result = qword_1000A4F48;
  if (!qword_1000A4F48)
  {
    sub_10000A43C(&qword_1000A4F40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4F48);
  }
  return result;
}

uint64_t sub_100044CB8()
{
  uint64_t v0 = sub_10007C2E0();
  sub_1000112B4(v0, qword_1000A4F58);
  sub_100010740(v0, (uint64_t)qword_1000A4F58);
  return sub_10007C2C0();
}

void sub_100044D04()
{
  NSString v0 = sub_10007CF30();
  NSString v1 = sub_10007CF30();
  id v2 = [self attributeWithDomain:v0 name:v1];

  qword_1000A4F70 = (uint64_t)v2;
}

uint64_t sub_100044DA8()
{
  uint64_t v0 = sub_100008FA4(&qword_1000A4F98);
  __chkstk_darwin(v0);
  id v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100008FA4(&qword_1000A4FA0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v13 - v8;
  sub_100046A58();
  sub_10007C670();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v10(v7, v9, v3);
  *(void *)id v2 = 0;
  v10(&v2[*(int *)(v0 + 96)], v7, v3);
  sub_10007C380();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v4 + 8);
  v11(v9, v3);
  return ((uint64_t (*)(char *, uint64_t))v11)(v7, v3);
}

uint64_t sub_100044F6C@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v2 = sub_10007D0B0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = (uint64_t)a1 + 40;
  a1[13] = 0u;
  a1[14] = 0u;
  a1[11] = 0u;
  a1[12] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  a1[5] = 0u;
  uint64_t v25 = a1 + 5;
  uint64_t v26 = (uint64_t)a1 + 120;
  *a1 = 0u;
  a1[10] = 0u;
  uint64_t v23 = a1 + 10;
  uint64_t v24 = (uint64_t)a1 + 200;
  uint64_t v6 = self;
  id v7 = [v6 defaultCenter];
  sub_10007D0C0();

  sub_100046AAC();
  uint64_t v8 = sub_10007C300();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v3 + 8);
  v9(v5, v2);
  uint64_t v10 = sub_10007C2F0();
  uint64_t v28 = v10;
  uint64_t v29 = &protocol witness table for AnyCancellable;
  v27[0] = v8;
  sub_100046B04((uint64_t)v27, (uint64_t)a1);
  id v11 = [v6 defaultCenter];
  sub_10007D0C0();

  uint64_t v12 = sub_10007C300();
  v9(v5, v2);
  uint64_t v28 = v10;
  uint64_t v29 = &protocol witness table for AnyCancellable;
  v27[0] = v12;
  sub_100046B04((uint64_t)v27, v22);
  id v13 = [v6 defaultCenter];
  sub_10007D0C0();

  uint64_t v14 = sub_10007C300();
  v9(v5, v2);
  uint64_t v28 = v10;
  uint64_t v29 = &protocol witness table for AnyCancellable;
  v27[0] = v14;
  sub_100046B04((uint64_t)v27, (uint64_t)v23);
  id v15 = [v6 defaultCenter];
  sub_10007D0C0();

  uint64_t v16 = sub_10007C300();
  v9(v5, v2);
  uint64_t v28 = v10;
  uint64_t v29 = &protocol witness table for AnyCancellable;
  v27[0] = v16;
  sub_100046B04((uint64_t)v27, v24);
  id v17 = [v6 defaultCenter];
  sub_10007D0C0();

  uint64_t v18 = sub_10007C300();
  v9(v5, v2);
  uint64_t v28 = v10;
  uint64_t v29 = &protocol witness table for AnyCancellable;
  v27[0] = v18;
  sub_100046B04((uint64_t)v27, (uint64_t)v25);
  id v19 = [v6 defaultCenter];
  sub_10007D0C0();

  uint64_t v20 = sub_10007C300();
  v9(v5, v2);
  uint64_t v28 = v10;
  uint64_t v29 = &protocol witness table for AnyCancellable;
  v27[0] = v20;
  return sub_100046B04((uint64_t)v27, v26);
}

void sub_1000453E4()
{
  id v0 = [self currentProcess];
  sub_100008FA4(&qword_1000A3660);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100080AE0;
  if (qword_1000A3210 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_1000A4F70;
  *(void *)(v1 + 32) = qword_1000A4F70;
  sub_10007CFE0();
  id v3 = objc_allocWithZone((Class)RBSAssertion);
  id v4 = v2;
  NSString v5 = sub_10007CF30();
  sub_100046B6C();
  Class isa = sub_10007CFC0().super.isa;
  swift_bridgeObjectRelease();
  id v7 = [v3 initWithExplanation:v5 target:v0 attributes:isa v1];

  uint64_t v8 = (void *)qword_1000A4F78;
  qword_1000A4F78 = (uint64_t)v7;

  uint64_t v9 = (void *)qword_1000A4F78;
  if (qword_1000A4F78)
  {
    v12[4] = sub_1000455D0;
    v12[5] = 0;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    void v12[2] = sub_100045638;
    uint64_t v12[3] = &unk_10009F5E8;
    uint64_t v10 = _Block_copy(v12);
    id v11 = v9;
    [v11 acquireWithInvalidationHandler:v10];
    _Block_release(v10);
  }
}

void sub_1000455D0(uint64_t a1, uint64_t a2)
{
  sub_100045B94(a1, a2, "Invalidated Database-locking operation, error %@", (void **)&qword_1000A4F78);
}

void sub_100045638(uint64_t a1, void *a2, void *a3)
{
  NSString v5 = *(void (**)(id, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(v7, a3);
  swift_release();
}

void sub_1000456C4(uint64_t a1)
{
}

void sub_1000456D8()
{
  id v0 = [self currentProcess];
  sub_100008FA4(&qword_1000A3660);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100080AE0;
  if (qword_1000A3210 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_1000A4F70;
  *(void *)(v1 + 32) = qword_1000A4F70;
  sub_10007CFE0();
  id v3 = objc_allocWithZone((Class)RBSAssertion);
  id v4 = v2;
  NSString v5 = sub_10007CF30();
  sub_100046B6C();
  Class isa = sub_10007CFC0().super.isa;
  swift_bridgeObjectRelease();
  id v7 = [v3 initWithExplanation:v5 target:v0 attributes:isa, v1];

  uint64_t v8 = (void *)qword_1000A4F88;
  qword_1000A4F88 = (uint64_t)v7;

  uint64_t v9 = (void *)qword_1000A4F88;
  if (qword_1000A4F88)
  {
    v12[4] = sub_1000458C4;
    v12[5] = 0;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    void v12[2] = sub_100045638;
    uint64_t v12[3] = &unk_10009F5C0;
    uint64_t v10 = _Block_copy(v12);
    id v11 = v9;
    [v11 acquireWithInvalidationHandler:v10];
    _Block_release(v10);
  }
}

void sub_1000458C4(uint64_t a1, uint64_t a2)
{
  sub_100045B94(a1, a2, "Invalidated object creation-locking operation, error %@", (void **)&qword_1000A4F88);
}

void sub_10004592C(uint64_t a1)
{
}

void sub_100045940()
{
  id v0 = [self currentProcess];
  sub_100008FA4(&qword_1000A3660);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100080AE0;
  if (qword_1000A3210 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_1000A4F70;
  *(void *)(v1 + 32) = qword_1000A4F70;
  sub_10007CFE0();
  id v3 = objc_allocWithZone((Class)RBSAssertion);
  id v4 = v2;
  NSString v5 = sub_10007CF30();
  sub_100046B6C();
  Class isa = sub_10007CFC0().super.isa;
  swift_bridgeObjectRelease();
  id v7 = [v3 initWithExplanation:v5 target:v0 attributes:isa v1];

  uint64_t v8 = (void *)qword_1000A4F80;
  qword_1000A4F80 = (uint64_t)v7;

  uint64_t v9 = (void *)qword_1000A4F80;
  if (qword_1000A4F80)
  {
    v12[4] = sub_100045B2C;
    v12[5] = 0;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    void v12[2] = sub_100045638;
    uint64_t v12[3] = &unk_10009F598;
    uint64_t v10 = _Block_copy(v12);
    id v11 = v9;
    [v11 acquireWithInvalidationHandler:v10];
    _Block_release(v10);
  }
}

void sub_100045B2C(uint64_t a1, uint64_t a2)
{
  sub_100045B94(a1, a2, "Invalidated set up HTML CoreData stack operation, error %@", (void **)&qword_1000A4F80);
}

void sub_100045B94(uint64_t a1, uint64_t a2, const char *a3, void **a4)
{
  if (qword_1000A3208 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_10007C2E0();
  sub_100010740(v7, (uint64_t)qword_1000A4F58);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v8 = sub_10007C2D0();
  os_log_type_t v9 = sub_10007D040();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    id v11 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 138412290;
    if (a2)
    {
      swift_errorRetain();
      uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
      sub_10007D0F0();
    }
    else
    {
      sub_10007D0F0();
      uint64_t v12 = 0;
    }
    *id v11 = v12;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, a3, v10, 0xCu);
    sub_100008FA4(&qword_1000A3648);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  id v13 = *a4;
  *a4 = 0;
}

void sub_100045DA4(uint64_t a1)
{
}

void sub_100045DB8(uint64_t a1, void **a2, const char *a3)
{
  if (*a2)
  {
    if (qword_1000A3208 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_10007C2E0();
    sub_100010740(v5, (uint64_t)qword_1000A4F58);
    id v6 = sub_10007C2D0();
    os_log_type_t v7 = sub_10007D050();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, a3, v8, 2u);
      swift_slowDealloc();
    }

    os_log_type_t v9 = *a2;
    if (*a2)
    {
      [v9 invalidate];
      os_log_type_t v9 = *a2;
    }
    *a2 = 0;
  }
}

uint64_t sub_100045EE8()
{
  return sub_100044DA8();
}

int main(int argc, const char **argv, const char **envp)
{
  return 0;
}

unint64_t sub_100045F38()
{
  unint64_t result = qword_1000A4F90;
  if (!qword_1000A4F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4F90);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for NotesWidgetBundle(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for NotesWidgetBundle(uint64_t result)
{
  uint64_t v1 = (void *)result;
  if (*(void *)(result + 24)) {
    unint64_t result = sub_10000A340(result);
  }
  if (v1[8]) {
    unint64_t result = sub_10000A340((uint64_t)(v1 + 5));
  }
  if (v1[13]) {
    unint64_t result = sub_10000A340((uint64_t)(v1 + 10));
  }
  if (v1[18]) {
    unint64_t result = sub_10000A340((uint64_t)(v1 + 15));
  }
  if (v1[23]) {
    unint64_t result = sub_10000A340((uint64_t)(v1 + 20));
  }
  if (v1[28])
  {
    return sub_10000A340((uint64_t)(v1 + 25));
  }
  return result;
}

uint64_t initializeWithCopy for NotesWidgetBundle(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  os_log_type_t v7 = (_OWORD *)(a1 + 40);
  uint64_t v8 = (_OWORD *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 64);
  if (v9)
  {
    uint64_t v10 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v9;
    *(void *)(a1 + 72) = v10;
    (**(void (***)(_OWORD *, _OWORD *))(v9 - 8))(v7, v8);
  }
  else
  {
    long long v11 = *(_OWORD *)(a2 + 56);
    _OWORD *v7 = *v8;
    *(_OWORD *)(a1 + 56) = v11;
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
  }
  uint64_t v12 = (_OWORD *)(a1 + 80);
  id v13 = (_OWORD *)(a2 + 80);
  uint64_t v14 = *(void *)(a2 + 104);
  if (v14)
  {
    uint64_t v15 = *(void *)(a2 + 112);
    *(void *)(a1 + 104) = v14;
    *(void *)(a1 + 112) = v15;
    (**(void (***)(_OWORD *, _OWORD *))(v14 - 8))(v12, v13);
  }
  else
  {
    long long v16 = *(_OWORD *)(a2 + 96);
    *uint64_t v12 = *v13;
    *(_OWORD *)(a1 + 96) = v16;
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
  }
  id v17 = (_OWORD *)(a1 + 120);
  uint64_t v18 = (_OWORD *)(a2 + 120);
  uint64_t v19 = *(void *)(a2 + 144);
  if (v19)
  {
    uint64_t v20 = *(void *)(a2 + 152);
    *(void *)(a1 + 144) = v19;
    *(void *)(a1 + 152) = v20;
    (**(void (***)(_OWORD *, _OWORD *))(v19 - 8))(v17, v18);
  }
  else
  {
    long long v21 = *(_OWORD *)(a2 + 136);
    *id v17 = *v18;
    *(_OWORD *)(a1 + 136) = v21;
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
  }
  uint64_t v22 = (_OWORD *)(a1 + 160);
  uint64_t v23 = (_OWORD *)(a2 + 160);
  uint64_t v24 = *(void *)(a2 + 184);
  if (v24)
  {
    uint64_t v25 = *(void *)(a2 + 192);
    *(void *)(a1 + 184) = v24;
    *(void *)(a1 + 192) = v25;
    (**(void (***)(_OWORD *, _OWORD *))(v24 - 8))(v22, v23);
  }
  else
  {
    long long v26 = *(_OWORD *)(a2 + 176);
    *uint64_t v22 = *v23;
    *(_OWORD *)(a1 + 176) = v26;
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
  }
  uint64_t v27 = (_OWORD *)(a1 + 200);
  uint64_t v28 = (_OWORD *)(a2 + 200);
  uint64_t v29 = *(void *)(a2 + 224);
  if (v29)
  {
    uint64_t v30 = *(void *)(a2 + 232);
    *(void *)(a1 + 224) = v29;
    *(void *)(a1 + 232) = v30;
    (**(void (***)(_OWORD *, _OWORD *))(v29 - 8))(v27, v28);
  }
  else
  {
    long long v31 = *(_OWORD *)(a2 + 216);
    *uint64_t v27 = *v28;
    *(_OWORD *)(a1 + 216) = v31;
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
  }
  return a1;
}

uint64_t assignWithCopy for NotesWidgetBundle(uint64_t a1, long long *a2)
{
  uint64_t v4 = *((void *)a2 + 3);
  if (*(void *)(a1 + 24))
  {
    if (v4)
    {
      sub_1000465B4((uint64_t *)a1, (uint64_t *)a2);
      goto LABEL_8;
    }
    sub_10000A340(a1);
  }
  else if (v4)
  {
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    (**(void (***)(uint64_t, long long *))(v4 - 8))(a1, a2);
    goto LABEL_8;
  }
  long long v5 = *a2;
  long long v6 = a2[1];
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  *(_OWORD *)a1 = v5;
  *(_OWORD *)(a1 + 16) = v6;
LABEL_8:
  uint64_t v7 = *((void *)a2 + 8);
  if (*(void *)(a1 + 64))
  {
    if (v7)
    {
      sub_1000465B4((uint64_t *)(a1 + 40), (uint64_t *)a2 + 5);
      goto LABEL_15;
    }
    sub_10000A340(a1 + 40);
  }
  else if (v7)
  {
    *(void *)(a1 + 64) = v7;
    *(void *)(a1 + 72) = *((void *)a2 + 9);
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 40, (uint64_t)a2 + 40);
    goto LABEL_15;
  }
  long long v8 = *(long long *)((char *)a2 + 40);
  long long v9 = *(long long *)((char *)a2 + 56);
  *(void *)(a1 + 72) = *((void *)a2 + 9);
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = v9;
LABEL_15:
  uint64_t v10 = *((void *)a2 + 13);
  if (*(void *)(a1 + 104))
  {
    if (v10)
    {
      sub_1000465B4((uint64_t *)(a1 + 80), (uint64_t *)a2 + 10);
      goto LABEL_22;
    }
    sub_10000A340(a1 + 80);
  }
  else if (v10)
  {
    *(void *)(a1 + 104) = v10;
    *(void *)(a1 + 112) = *((void *)a2 + 14);
    (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 80, (uint64_t)(a2 + 5));
    goto LABEL_22;
  }
  long long v11 = a2[5];
  long long v12 = a2[6];
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v11;
  *(_OWORD *)(a1 + 96) = v12;
LABEL_22:
  uint64_t v13 = *((void *)a2 + 18);
  if (*(void *)(a1 + 144))
  {
    if (v13)
    {
      sub_1000465B4((uint64_t *)(a1 + 120), (uint64_t *)a2 + 15);
      goto LABEL_29;
    }
    sub_10000A340(a1 + 120);
  }
  else if (v13)
  {
    *(void *)(a1 + 144) = v13;
    *(void *)(a1 + 152) = *((void *)a2 + 19);
    (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 120, (uint64_t)a2 + 120);
    goto LABEL_29;
  }
  long long v14 = *(long long *)((char *)a2 + 120);
  long long v15 = *(long long *)((char *)a2 + 136);
  *(void *)(a1 + 152) = *((void *)a2 + 19);
  *(_OWORD *)(a1 + 120) = v14;
  *(_OWORD *)(a1 + 136) = v15;
LABEL_29:
  uint64_t v16 = *((void *)a2 + 23);
  if (*(void *)(a1 + 184))
  {
    if (v16)
    {
      sub_1000465B4((uint64_t *)(a1 + 160), (uint64_t *)a2 + 20);
      goto LABEL_36;
    }
    sub_10000A340(a1 + 160);
  }
  else if (v16)
  {
    *(void *)(a1 + 184) = v16;
    *(void *)(a1 + 192) = *((void *)a2 + 24);
    (**(void (***)(uint64_t, uint64_t))(v16 - 8))(a1 + 160, (uint64_t)(a2 + 10));
    goto LABEL_36;
  }
  long long v17 = a2[10];
  long long v18 = a2[11];
  *(void *)(a1 + 192) = *((void *)a2 + 24);
  *(_OWORD *)(a1 + 160) = v17;
  *(_OWORD *)(a1 + 176) = v18;
LABEL_36:
  uint64_t v19 = *((void *)a2 + 28);
  if (!*(void *)(a1 + 224))
  {
    if (v19)
    {
      *(void *)(a1 + 224) = v19;
      *(void *)(a1 + 232) = *((void *)a2 + 29);
      (**(void (***)(uint64_t, uint64_t))(v19 - 8))(a1 + 200, (uint64_t)a2 + 200);
      return a1;
    }
LABEL_42:
    long long v20 = *(long long *)((char *)a2 + 200);
    long long v21 = *(long long *)((char *)a2 + 216);
    *(void *)(a1 + 232) = *((void *)a2 + 29);
    *(_OWORD *)(a1 + 200) = v20;
    *(_OWORD *)(a1 + 216) = v21;
    return a1;
  }
  if (!v19)
  {
    sub_10000A340(a1 + 200);
    goto LABEL_42;
  }
  sub_1000465B4((uint64_t *)(a1 + 200), (uint64_t *)a2 + 25);
  return a1;
}

uint64_t *sub_1000465B4(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        unint64_t result = (uint64_t *)swift_release();
        uint64_t *v3 = v12;
      }
      else
      {
        long long v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          uint64_t *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

__n128 initializeWithTake for NotesWidgetBundle(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  long long v7 = a2[7];
  long long v8 = a2[8];
  long long v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  __n128 result = (__n128)a2[11];
  long long v11 = a2[12];
  long long v12 = a2[14];
  *(_OWORD *)(a1 + 208) = a2[13];
  *(_OWORD *)(a1 + 224) = v12;
  *(__n128 *)(a1 + 176) = result;
  *(_OWORD *)(a1 + 192) = v11;
  return result;
}

uint64_t assignWithTake for NotesWidgetBundle(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24)) {
    sub_10000A340(a1);
  }
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  if (*(void *)(a1 + 64)) {
    sub_10000A340(a1 + 40);
  }
  long long v5 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v5;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  if (*(void *)(a1 + 104)) {
    sub_10000A340(a1 + 80);
  }
  long long v6 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v6;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  if (*(void *)(a1 + 144)) {
    sub_10000A340(a1 + 120);
  }
  long long v7 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = v7;
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  if (*(void *)(a1 + 184)) {
    sub_10000A340(a1 + 160);
  }
  long long v8 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v8;
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  if (*(void *)(a1 + 224)) {
    sub_10000A340(a1 + 200);
  }
  long long v9 = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = v9;
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  return a1;
}

uint64_t getEnumTagSinglePayload for NotesWidgetBundle(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 240)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for NotesWidgetBundle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 232) = 0;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 240) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 240) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NotesWidgetBundle()
{
  return &type metadata for NotesWidgetBundle;
}

uint64_t sub_100046A3C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100046A58()
{
  unint64_t result = qword_1000A4FA8;
  if (!qword_1000A4FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4FA8);
  }
  return result;
}

unint64_t sub_100046AAC()
{
  unint64_t result = qword_1000A4FB0;
  if (!qword_1000A4FB0)
  {
    sub_10007D0B0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4FB0);
  }
  return result;
}

uint64_t sub_100046B04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100008FA4(&qword_1000A4FB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_100046B6C()
{
  unint64_t result = qword_1000A4FC0;
  if (!qword_1000A4FC0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000A4FC0);
  }
  return result;
}

uint64_t sub_100046BAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100046BBC()
{
  return swift_release();
}

unint64_t sub_100046BC8()
{
  unint64_t result = qword_1000A4FC8;
  if (!qword_1000A4FC8)
  {
    sub_10000A43C(&qword_1000A4FD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4FC8);
  }
  return result;
}

uint64_t sub_100046C34()
{
  uint64_t result = sub_10007CAB0();
  qword_1000B2450 = result;
  return result;
}

uint64_t sub_100046C70()
{
  uint64_t result = sub_10007CAB0();
  qword_1000B2458 = result;
  return result;
}

uint64_t *sub_100046CAC(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_100008FA4(&qword_1000A4CD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_10007C5F0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    }
    else
    {
      *uint64_t v4 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = (uint64_t *)((char *)v4 + v9);
    long long v11 = (uint64_t *)((char *)a2 + v9);
    sub_100008FA4(&qword_1000A3360);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_10007CD30();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[6];
    long long v14 = (char *)v4 + v13;
    long long v15 = (char *)a2 + v13;
    uint64_t v16 = *(void *)v15;
    char v17 = v15[8];
    sub_10000A9EC(*(void *)v15, v17);
    *(void *)long long v14 = v16;
    v14[8] = v17;
    uint64_t v18 = a3[7];
    uint64_t v19 = (uint64_t *)((char *)v4 + v18);
    long long v20 = (uint64_t *)((char *)a2 + v18);
    sub_100008FA4(&qword_1000A48A0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = sub_10007CD00();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      *uint64_t v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v22 = a3[8];
    uint64_t v23 = (char *)v4 + v22;
    uint64_t v24 = (char *)a2 + v22;
    uint64_t v25 = sub_10007C110();
    uint64_t v26 = *(void *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    {
      uint64_t v27 = sub_100008FA4(&qword_1000A3270);
      memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
    uint64_t v28 = a3[10];
    *(uint64_t *)((char *)v4 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    uint64_t v29 = (uint64_t *)((char *)v4 + v28);
    uint64_t v30 = (uint64_t *)((char *)a2 + v28);
    uint64_t v31 = v30[1];
    *uint64_t v29 = *v30;
    v29[1] = v31;
    *(uint64_t *)((char *)v4 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    swift_retain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_10004702C(uint64_t a1, int *a2)
{
  sub_100008FA4(&qword_1000A4CD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_10007C5F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + a2[5];
  sub_100008FA4(&qword_1000A3360);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_10007CD30();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  sub_10000AC28(*(void *)(a1 + a2[6]), *(unsigned char *)(a1 + a2[6] + 8));
  uint64_t v7 = a1 + a2[7];
  sub_100008FA4(&qword_1000A48A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_10007CD00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = a1 + a2[8];
  uint64_t v10 = sub_10007C110();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  swift_release();
  swift_bridgeObjectRelease();

  return swift_release();
}

void *sub_100047274(void *a1, void *a2, int *a3)
{
  sub_100008FA4(&qword_1000A4CD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_10007C5F0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_100008FA4(&qword_1000A3360);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_10007CD30();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    void *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)v13;
  char v15 = v13[8];
  sub_10000A9EC(*(void *)v13, v15);
  *(void *)uint64_t v12 = v14;
  v12[8] = v15;
  uint64_t v16 = a3[7];
  char v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  sub_100008FA4(&qword_1000A48A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = sub_10007CD00();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  else
  {
    *char v17 = *v18;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = a3[8];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = sub_10007C110();
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    uint64_t v25 = sub_100008FA4(&qword_1000A3270);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  uint64_t v26 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  uint64_t v27 = (void *)((char *)a1 + v26);
  uint64_t v28 = (void *)((char *)a2 + v26);
  uint64_t v29 = v28[1];
  *uint64_t v27 = *v28;
  v27[1] = v29;
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *sub_1000475A8(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10000CBC8((uint64_t)a1, &qword_1000A4CD0);
    sub_100008FA4(&qword_1000A4CD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_10007C5F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_10000CBC8((uint64_t)a1 + v7, &qword_1000A3360);
    sub_100008FA4(&qword_1000A3360);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_10007CD30();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      void *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)v13;
  char v15 = v13[8];
  sub_10000A9EC(*(void *)v13, v15);
  uint64_t v16 = *(void *)v12;
  char v17 = v12[8];
  *(void *)uint64_t v12 = v14;
  v12[8] = v15;
  sub_10000AC28(v16, v17);
  if (a1 != a2)
  {
    uint64_t v18 = a3[7];
    uint64_t v19 = (void *)((char *)a1 + v18);
    uint64_t v20 = (void *)((char *)a2 + v18);
    sub_10000CBC8((uint64_t)a1 + v18, &qword_1000A48A0);
    sub_100008FA4(&qword_1000A48A0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = sub_10007CD00();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      *uint64_t v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v22 = a3[8];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = sub_10007C110();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  int v28 = v27(v23, 1, v25);
  int v29 = v27(v24, 1, v25);
  if (!v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 24))(v23, v24, v25);
      goto LABEL_20;
    }
    (*(void (**)(char *, uint64_t))(v26 + 8))(v23, v25);
    goto LABEL_19;
  }
  if (v29)
  {
LABEL_19:
    uint64_t v30 = sub_100008FA4(&qword_1000A3270);
    memcpy(v23, v24, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
LABEL_20:
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_retain();
  swift_release();
  uint64_t v31 = a3[10];
  uint64_t v32 = (void *)((char *)a1 + v31);
  uint64_t v33 = (void *)((char *)a2 + v31);
  *uint64_t v32 = *v33;
  v32[1] = v33[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  swift_retain();
  swift_release();
  return a1;
}

char *sub_1000479C8(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_100008FA4(&qword_1000A4CD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_10007C5F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_100008FA4(&qword_1000A3360);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_10007CD30();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = a3[7];
  char v15 = &a1[v13];
  uint64_t v16 = &a2[v13];
  *(void *)char v15 = *(void *)v16;
  v15[8] = v16[8];
  char v17 = &a1[v14];
  uint64_t v18 = &a2[v14];
  uint64_t v19 = sub_100008FA4(&qword_1000A48A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = sub_10007CD00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v17, v18, v20);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  uint64_t v21 = a3[8];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = sub_10007C110();
  uint64_t v25 = *(void *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    uint64_t v26 = sub_100008FA4(&qword_1000A3270);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  uint64_t v27 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  *(_OWORD *)&a1[v27] = *(_OWORD *)&a2[v27];
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  return a1;
}

char *sub_100047D04(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10000CBC8((uint64_t)a1, &qword_1000A4CD0);
    uint64_t v6 = sub_100008FA4(&qword_1000A4CD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_10007C5F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_10000CBC8((uint64_t)&a1[v8], &qword_1000A3360);
    uint64_t v11 = sub_100008FA4(&qword_1000A3360);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_10007CD30();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  char v15 = &a2[v13];
  uint64_t v16 = *(void *)v15;
  LOBYTE(v15) = v15[8];
  uint64_t v17 = *(void *)v14;
  char v18 = v14[8];
  *(void *)uint64_t v14 = v16;
  v14[8] = (char)v15;
  sub_10000AC28(v17, v18);
  if (a1 != a2)
  {
    uint64_t v19 = a3[7];
    uint64_t v20 = &a1[v19];
    uint64_t v21 = &a2[v19];
    sub_10000CBC8((uint64_t)&a1[v19], &qword_1000A48A0);
    uint64_t v22 = sub_100008FA4(&qword_1000A48A0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v23 = sub_10007CD00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v20, v21, v23);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
  }
  uint64_t v24 = a3[8];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  uint64_t v27 = sub_10007C110();
  uint64_t v28 = *(void *)(v27 - 8);
  int v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  int v30 = v29(v25, 1, v27);
  int v31 = v29(v26, 1, v27);
  if (!v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 40))(v25, v26, v27);
      goto LABEL_18;
    }
    (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v27);
    goto LABEL_17;
  }
  if (v31)
  {
LABEL_17:
    uint64_t v32 = sub_100008FA4(&qword_1000A3270);
    memcpy(v25, v26, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v25, v26, v27);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
LABEL_18:
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  swift_release();
  uint64_t v33 = a3[10];
  uint64_t v34 = &a1[v33];
  uint64_t v35 = &a2[v33];
  uint64_t v37 = *(void *)v35;
  uint64_t v36 = *((void *)v35 + 1);
  *(void *)uint64_t v34 = v37;
  *((void *)v34 + 1) = v36;
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  swift_release();
  return a1;
}

uint64_t sub_100048118(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10004812C);
}

uint64_t sub_10004812C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100008FA4(&qword_1000A4FD8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_100008FA4(&qword_1000A3370);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  uint64_t v14 = sub_100008FA4(&qword_1000A4898);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_9;
  }
  uint64_t v15 = sub_100008FA4(&qword_1000A3270);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_9;
  }
  unint64_t v17 = *(void *)(a1 + a3[9]);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  int v18 = v17 - 1;
  if (v18 < 0) {
    int v18 = -1;
  }
  return (v18 + 1);
}

uint64_t sub_1000482F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100048308);
}

uint64_t sub_100048308(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_100008FA4(&qword_1000A4FD8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = sub_100008FA4(&qword_1000A3370);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      uint64_t v16 = sub_100008FA4(&qword_1000A4898);
      if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
      {
        uint64_t v10 = v16;
        uint64_t v14 = *(void *)(v16 - 8);
        uint64_t v15 = a4[7];
      }
      else
      {
        uint64_t result = sub_100008FA4(&qword_1000A3270);
        if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
        {
          *(void *)(a1 + a4[9]) = a2;
          return result;
        }
        uint64_t v10 = result;
        uint64_t v14 = *(void *)(result - 8);
        uint64_t v15 = a4[8];
      }
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for WidgetHeader()
{
  uint64_t result = qword_1000A5038;
  if (!qword_1000A5038) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10004850C()
{
  sub_100048728(319, (unint64_t *)&unk_1000A5048, (uint64_t (*)(uint64_t))&type metadata accessor for ContentSizeCategory, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F)
  {
    sub_100048728(319, (unint64_t *)&unk_1000A33E8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v1 <= 0x3F)
    {
      sub_100048728(319, (unint64_t *)&unk_1000A4C28, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
      if (v2 <= 0x3F)
      {
        sub_100048728(319, (unint64_t *)&qword_1000A36D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_100048728(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_10004878C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000487A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v23 = a1;
  uint64_t v2 = sub_10007C5E0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100008FA4(&qword_1000A5090);
  __chkstk_darwin(v6 - 8);
  unint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100008FA4(&qword_1000A5098);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100008FA4(&qword_1000A50A0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)unint64_t v8 = sub_10007C600();
  *((void *)v8 + 1) = 0;
  v8[16] = 0;
  uint64_t v15 = sub_100008FA4(&qword_1000A50A8);
  sub_100048A84(v1, (uint64_t)&v8[*(int *)(v15 + 44)]);
  uint64_t v16 = v1 + *(int *)(type metadata accessor for WidgetHeader() + 24);
  uint64_t v17 = *(void *)v16;
  char v18 = *(unsigned char *)(v16 + 8);
  sub_10000A9EC(*(void *)v16, v18);
  sub_10003EFB4(v17, v18);
  sub_10000AC28(v17, v18);
  sub_10007CBF0();
  sub_10007C3A0();
  sub_10000CB64((uint64_t)v8, (uint64_t)v11, &qword_1000A5090);
  uint64_t v19 = &v11[*(int *)(v9 + 36)];
  long long v20 = v25;
  *(_OWORD *)uint64_t v19 = v24;
  *((_OWORD *)v19 + 1) = v20;
  *((_OWORD *)v19 + 2) = v26;
  sub_10000CBC8((uint64_t)v8, &qword_1000A5090);
  sub_10007C5D0();
  sub_10004C48C();
  sub_10007C960();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_10000CBC8((uint64_t)v11, &qword_1000A5098);
  return sub_10000CB00((uint64_t)v14, v23, &qword_1000A50A0);
}

uint64_t sub_100048A84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v50 = a2;
  uint64_t v3 = type metadata accessor for WidgetHeader();
  uint64_t v4 = v3 - 8;
  uint64_t v46 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v46 + 64);
  __chkstk_darwin(v3);
  uint64_t v6 = sub_100008FA4(&qword_1000A3270);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (uint64_t)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100008FA4(&qword_1000A50C0);
  uint64_t v47 = *(void *)(v9 - 8);
  uint64_t v48 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100008FA4(&qword_1000A50C8);
  uint64_t v13 = v12 - 8;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v49 = (uint64_t)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  char v18 = (char *)&v45 - v17;
  __chkstk_darwin(v16);
  long long v20 = (char *)&v45 - v19;
  sub_10000CB64(a1 + *(int *)(v4 + 40), v8, &qword_1000A3270);
  uint64_t v21 = a1;
  sub_10004CE88(a1, (uint64_t)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for WidgetHeader);
  unint64_t v22 = (*(unsigned __int8 *)(v46 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
  uint64_t v23 = swift_allocObject();
  sub_10004C7F4((uint64_t)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v23 + v22);
  sub_100008FA4(&qword_1000A50D0);
  sub_10004CB30(&qword_1000A50D8, &qword_1000A50D0, (void (*)(void))sub_10004C8C8);
  sub_10007C330();
  uint64_t v24 = sub_10007CBF0();
  uint64_t v26 = v25;
  uint64_t v27 = (uint64_t)&v18[*(int *)(v13 + 44)];
  sub_100049464(v21, v27);
  uint64_t v28 = (uint64_t *)(v27 + *(int *)(sub_100008FA4(&qword_1000A5120) + 36));
  *uint64_t v28 = v24;
  v28[1] = v26;
  (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v18, v11, v48);
  uint64_t v29 = (uint64_t)v20;
  sub_10000CB00((uint64_t)v18, (uint64_t)v20, &qword_1000A50C8);
  uint64_t v30 = v21 + *(int *)(v4 + 32);
  uint64_t v31 = *(void *)v30;
  LOBYTE(v27) = *(unsigned char *)(v30 + 8);
  sub_10000A9EC(*(void *)v30, v27);
  LOBYTE(v8) = sub_10003EFB4(v31, v27);
  sub_10000AC28(v31, v27);
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v34 = 0;
  uint64_t v35 = 0;
  uint64_t v36 = 0;
  uint64_t v37 = 0;
  uint64_t v38 = 0;
  if (v8)
  {
    sub_10007CBF0();
    sub_10007C3A0();
    uint64_t v33 = v51;
    uint64_t v34 = v52;
    uint64_t v35 = v53;
    uint64_t v36 = v54;
    uint64_t v37 = v55;
    uint64_t v38 = v56;
    uint64_t v32 = sub_10004C278;
  }
  uint64_t v39 = v29;
  uint64_t v45 = v29;
  uint64_t v40 = (uint64_t)v32;
  uint64_t v41 = v49;
  sub_10000CB64(v39, v49, &qword_1000A50C8);
  uint64_t v42 = v50;
  sub_10000CB64(v41, v50, &qword_1000A50C8);
  uint64_t v43 = (uint64_t *)(v42 + *(int *)(sub_100008FA4(&qword_1000A5128) + 48));
  *uint64_t v43 = v40;
  v43[1] = 0;
  v43[2] = v33;
  v43[3] = v34;
  v43[4] = v35;
  v43[5] = v36;
  v43[6] = v37;
  v43[7] = v38;
  sub_10004C9EC(v40);
  sub_10000CBC8(v45, &qword_1000A50C8);
  sub_10004C9FC(v40);
  return sub_10000CBC8(v41, &qword_1000A50C8);
}

uint64_t sub_100048F38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10007CD00();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = sub_100008FA4(&qword_1000A50E8);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100049110((uint64_t)v11);
  type metadata accessor for WidgetHeader();
  sub_10003F4AC((uint64_t)v8);
  sub_10007CCE0();
  char v12 = sub_10007CCC0();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v3 + 8);
  v13(v6, v2);
  v13(v8, v2);
  if (v12) {
    double v14 = 0.0;
  }
  else {
    double v14 = 1.0;
  }
  sub_10000CB64((uint64_t)v11, a1, &qword_1000A50E8);
  *(double *)(a1 + *(int *)(sub_100008FA4(&qword_1000A50D0) + 36)) = v14;
  return sub_10000CBC8((uint64_t)v11, &qword_1000A50E8);
}

uint64_t sub_100049110@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100008FA4(&qword_1000A5118);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100008FA4(&qword_1000A5108);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100008FA4(&qword_1000A50F8);
  __chkstk_darwin(v10);
  char v12 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = sub_10007C590();
  *((void *)v6 + 1) = 0;
  v6[16] = 0;
  uint64_t v13 = sub_100008FA4(&qword_1000A5260);
  sub_10004A150(v2, (uint64_t)&v6[*(int *)(v13 + 44)]);
  uint64_t v14 = v2 + *(int *)(type metadata accessor for WidgetHeader() + 24);
  uint64_t v15 = *(void *)v14;
  char v16 = *(unsigned char *)(v14 + 8);
  sub_10000A9EC(*(void *)v14, v16);
  char v17 = sub_10003EFB4(v15, v16);
  sub_10000AC28(v15, v16);
  if (v17)
  {
    uint64_t v18 = sub_10007CA50();
  }
  else
  {
    id v19 = [self ICTintColor];
    uint64_t v18 = sub_10007C9F0();
  }
  uint64_t v20 = v18;
  sub_10000CB64((uint64_t)v6, (uint64_t)v9, &qword_1000A5118);
  *(void *)&v9[*(int *)(v7 + 36)] = v20;
  sub_10000CBC8((uint64_t)v6, &qword_1000A5118);
  char v21 = sub_10007C720();
  uint64_t v22 = *(void *)v14;
  LOBYTE(v20) = *(unsigned char *)(v14 + 8);
  sub_10000A9EC(*(void *)v14, v20);
  sub_10003EFB4(v22, v20);
  sub_10000AC28(v22, v20);
  sub_10007C340();
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  sub_10000CB64((uint64_t)v9, (uint64_t)v12, &qword_1000A5108);
  uint64_t v31 = &v12[*(int *)(v10 + 36)];
  *uint64_t v31 = v21;
  *((void *)v31 + 1) = v24;
  *((void *)v31 + 2) = v26;
  *((void *)v31 + 3) = v28;
  *((void *)v31 + 4) = v30;
  v31[40] = 0;
  sub_10000CBC8((uint64_t)v9, &qword_1000A5108);
  uint64_t v32 = *(void *)v14;
  char v33 = *(unsigned char *)(v14 + 8);
  sub_10000A9EC(*(void *)v14, v33);
  sub_10003EFB4(v32, v33);
  sub_10000AC28(v32, v33);
  sub_10007CBF0();
  sub_10007C3A0();
  sub_10000CB64((uint64_t)v12, a1, &qword_1000A50F8);
  uint64_t v34 = (_OWORD *)(a1 + *(int *)(sub_100008FA4(&qword_1000A50E8) + 36));
  long long v35 = v37[1];
  _OWORD *v34 = v37[0];
  v34[1] = v35;
  v34[2] = v37[2];
  return sub_10000CBC8((uint64_t)v12, &qword_1000A50F8);
}

uint64_t sub_100049464@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v66 = a2;
  uint64_t v64 = sub_100008FA4(&qword_1000A5138);
  __chkstk_darwin(v64);
  char v61 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_100008FA4(&qword_1000A35A0);
  __chkstk_darwin(v55);
  uint64_t v57 = (uint64_t *)((char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v56 = sub_10007C360();
  uint64_t v60 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  unsigned __int8 v54 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_100008FA4(&qword_1000A5140);
  uint64_t v6 = __chkstk_darwin(v63);
  uint64_t v53 = (uint64_t *)((char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  uint64_t v52 = (uint64_t)&v49 - v8;
  uint64_t v9 = sub_10007CD00();
  uint64_t v58 = *(void *)(v9 - 8);
  uint64_t v59 = v9;
  uint64_t v10 = __chkstk_darwin(v9);
  char v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v49 - v13;
  uint64_t v65 = sub_100008FA4(&qword_1000A5148);
  __chkstk_darwin(v65);
  char v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100008FA4(&qword_1000A5150);
  __chkstk_darwin(v17);
  id v19 = (uint64_t *)((char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v67 = sub_100008FA4(&qword_1000A5158);
  __chkstk_darwin(v67);
  char v21 = (char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *(int *)(type metadata accessor for WidgetHeader() + 24);
  uint64_t v62 = a1;
  uint64_t v23 = a1 + v22;
  uint64_t v24 = *(void *)v23;
  char v25 = *(unsigned char *)(v23 + 8);
  sub_10000A9EC(*(void *)v23, v25);
  char v26 = sub_10003EFB4(v24, v25);
  sub_10000AC28(v24, v25);
  if (v26)
  {
    uint64_t v49 = v17;
    uint64_t v50 = v19;
    uint64_t v27 = v60;
    uint64_t v28 = (uint64_t)v61;
    uint64_t v51 = v21;
    uint64_t v29 = v63;
    sub_10003F4AC((uint64_t)v14);
    sub_10007CCD0();
    char v30 = sub_10007CCC0();
    uint64_t v31 = v59;
    uint64_t v32 = *(void (**)(char *, uint64_t))(v58 + 8);
    v32(v12, v59);
    v32(v14, v31);
    uint64_t v33 = (uint64_t)v16;
    if (v30)
    {
      uint64_t v34 = sub_10007C9E0();
      uint64_t v35 = v27;
      uint64_t v36 = *(void (**)(char *, void, uint64_t))(v27 + 104);
      uint64_t v37 = v54;
      uint64_t v38 = v56;
      v36(v54, enum case for ColorScheme.dark(_:), v56);
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v40 = v57;
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))((char *)v57 + *(int *)(v55 + 28), v37, v38);
      *uint64_t v40 = KeyPath;
      uint64_t v41 = *(int *)(v29 + 36);
      uint64_t v42 = v53;
      sub_10000CB64((uint64_t)v40, (uint64_t)v53 + v41, &qword_1000A35A0);
      *uint64_t v42 = v34;
      swift_retain();
      sub_10000CBC8((uint64_t)v40, &qword_1000A35A0);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v38);
      swift_release();
      uint64_t v43 = &qword_1000A5140;
      uint64_t v44 = (uint64_t)v42;
      uint64_t v45 = v52;
      sub_10000CB00(v44, v52, &qword_1000A5140);
      sub_10000CB64(v45, (uint64_t)v50, &qword_1000A5140);
      swift_storeEnumTagMultiPayload();
      sub_10004CA14();
      uint64_t v46 = (uint64_t)v51;
      sub_10007C650();
      sub_10000CB64(v46, v33, &qword_1000A5158);
      swift_storeEnumTagMultiPayload();
      sub_10004CAB4();
      sub_10004CB30(&qword_1000A5170, &qword_1000A5138, (void (*)(void))sub_10004CBAC);
      sub_10007C650();
      sub_10000CBC8(v46, &qword_1000A5158);
      uint64_t v47 = v45;
    }
    else
    {
      sub_100049BD4(v28);
      uint64_t v43 = &qword_1000A5138;
      sub_10000CB64(v28, (uint64_t)v16, &qword_1000A5138);
      swift_storeEnumTagMultiPayload();
      sub_10004CAB4();
      sub_10004CB30(&qword_1000A5170, &qword_1000A5138, (void (*)(void))sub_10004CBAC);
      sub_10007C650();
      uint64_t v47 = v28;
    }
    return sub_10000CBC8(v47, v43);
  }
  else
  {
    *id v19 = sub_10007CA40();
    swift_storeEnumTagMultiPayload();
    sub_10004CA14();
    swift_retain();
    sub_10007C650();
    sub_10000CB64((uint64_t)v21, (uint64_t)v16, &qword_1000A5158);
    swift_storeEnumTagMultiPayload();
    sub_10004CAB4();
    sub_10004CB30(&qword_1000A5170, &qword_1000A5138, (void (*)(void))sub_10004CBAC);
    sub_10007C650();
    sub_10000CBC8((uint64_t)v21, &qword_1000A5158);
    return swift_release();
  }
}

uint64_t sub_100049BD4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v56 = a1;
  uint64_t v1 = sub_10007C400();
  __chkstk_darwin(v1 - 8);
  uint64_t v55 = (char *)&v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10007CC10();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_100008FA4(&qword_1000A5200) - 8;
  __chkstk_darwin(v53);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100008FA4(&qword_1000A51B0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100008FA4(&qword_1000A51A0);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_100008FA4(&qword_1000A5190) - 8;
  __chkstk_darwin(v51);
  uint64_t v50 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_100008FA4(&qword_1000A5180) - 8;
  __chkstk_darwin(v54);
  uint64_t v52 = (uint64_t)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004B7EC((uint64_t)v11);
  uint64_t v18 = sub_10007CAB0();
  uint64_t v49 = v15;
  sub_10000CB64((uint64_t)v11, (uint64_t)v15, &qword_1000A51B0);
  id v19 = &v15[*(int *)(v13 + 44)];
  *(void *)id v19 = v18;
  *(_OWORD *)(v19 + 8) = xmmword_1000861C0;
  *((void *)v19 + 3) = 0x3FF0000000000000;
  sub_10000CBC8((uint64_t)v11, &qword_1000A51B0);
  sub_10007CBF0();
  sub_10007C3A0();
  uint64_t v48 = v57;
  int v47 = v58;
  uint64_t v46 = v59;
  char v20 = v60;
  uint64_t v21 = v61;
  uint64_t v22 = v62;
  uint64_t v23 = sub_10007CAB0();
  uint64_t v24 = v4;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for BlendMode.plusDarker(_:), v3);
  char v25 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  uint64_t v26 = (uint64_t)v55;
  v25(v55, v6, v3);
  sub_10004CE88(v26, (uint64_t)&v8[*(int *)(v53 + 44)], (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  *(void *)uint64_t v8 = v48;
  v8[8] = v47;
  *((void *)v8 + 2) = v46;
  v8[24] = v20;
  *((void *)v8 + 4) = v21;
  *((void *)v8 + 5) = v22;
  *((_OWORD *)v8 + 3) = xmmword_1000861D0;
  *((void *)v8 + 8) = v23;
  *((void *)v8 + 9) = 0;
  *((void *)v8 + 10) = 0;
  *((void *)v8 + 11) = 0xBFF0000000000000;
  swift_retain();
  sub_10004CEF0(v26);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v3);
  swift_release();
  uint64_t v27 = sub_10007CBE0();
  uint64_t v29 = v28;
  uint64_t v30 = (uint64_t)v50;
  uint64_t v31 = (uint64_t)&v50[*(int *)(v51 + 44)];
  sub_10000CB64((uint64_t)v8, v31, &qword_1000A5200);
  uint64_t v32 = (uint64_t *)(v31 + *(int *)(sub_100008FA4(&qword_1000A51E8) + 36));
  *uint64_t v32 = v27;
  v32[1] = v29;
  uint64_t v33 = (uint64_t)v49;
  sub_10000CB64((uint64_t)v49, v30, &qword_1000A51A0);
  sub_10000CBC8((uint64_t)v8, &qword_1000A5200);
  sub_10000CBC8(v33, &qword_1000A51A0);
  uint64_t v34 = v52;
  sub_10000CB64(v30, v52, &qword_1000A5190);
  *(_WORD *)(v34 + *(int *)(v54 + 44)) = 0;
  sub_10000CBC8(v30, &qword_1000A5190);
  LOBYTE(v27) = sub_10007C720();
  sub_10007C340();
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  uint64_t v43 = v56;
  sub_10000CB64(v34, v56, &qword_1000A5180);
  uint64_t v44 = v43 + *(int *)(sub_100008FA4(&qword_1000A5138) + 36);
  *(unsigned char *)uint64_t v44 = v27;
  *(void *)(v44 + 8) = v36;
  *(void *)(v44 + 16) = v38;
  *(void *)(v44 + 24) = v40;
  *(void *)(v44 + 32) = v42;
  *(unsigned char *)(v44 + 40) = 0;
  return sub_10000CBC8(v34, &qword_1000A5180);
}

uint64_t sub_10004A150@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v142 = a2;
  uint64_t v133 = sub_100008FA4(&qword_1000A5268);
  uint64_t v132 = *(void *)(v133 - 8);
  uint64_t v3 = __chkstk_darwin(v133);
  uint64_t v131 = (char *)&v119 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v130 = (char *)&v119 - v5;
  uint64_t v6 = sub_100008FA4(&qword_1000A5270);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v141 = (char **)((char *)&v119 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  uint64_t v140 = (uint64_t)&v119 - v9;
  uint64_t v150 = sub_100008FA4(&qword_1000A5278);
  __chkstk_darwin(v150);
  uint64_t v138 = (char *)&v119 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = sub_10007CC10();
  uint64_t v121 = *(void *)(v122 - 8);
  __chkstk_darwin(v122);
  uint64_t v120 = (char *)&v119 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = sub_100008FA4(&qword_1000A5280);
  uint64_t v136 = *(void *)(v137 - 8);
  __chkstk_darwin(v137);
  uint64_t v146 = (uint64_t)&v119 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = sub_100008FA4(&qword_1000A5288);
  uint64_t v13 = __chkstk_darwin(v151);
  uint64_t v119 = (char *)&v119 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v123 = (uint64_t)&v119 - v15;
  uint64_t v127 = sub_10007CD00();
  uint64_t v126 = *(void *)(v127 - 8);
  uint64_t v16 = __chkstk_darwin(v127);
  uint64_t v125 = (char *)&v119 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v124 = (uint64_t)&v119 - v18;
  uint64_t v19 = sub_100008FA4(&qword_1000A5290);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  uint64_t v22 = (char *)&v119 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v154 = (uint64_t)&v119 - v23;
  uint64_t v24 = sub_10007C5F0();
  uint64_t v152 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v119 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_10007C800();
  uint64_t v28 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v119 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_100008FA4(&qword_1000A5298);
  uint64_t v129 = *(void *)(v31 - 8);
  uint64_t v32 = __chkstk_darwin(v31);
  uint64_t v34 = (char *)&v119 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  uint64_t v128 = (char *)&v119 - v35;
  uint64_t v36 = sub_100008FA4(&qword_1000A52A0);
  uint64_t v37 = __chkstk_darwin(v36 - 8);
  uint64_t v39 = (char *)&v119 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  uint64_t v153 = (uint64_t)&v119 - v40;
  uint64_t v41 = type metadata accessor for WidgetHeader();
  uint64_t v42 = *(int *)(v41 + 36);
  uint64_t v135 = a1;
  uint64_t v43 = *(void *)(a1 + v42);
  uint64_t v139 = v22;
  uint64_t v147 = v26;
  uint64_t v148 = v24;
  uint64_t v144 = v28;
  uint64_t v145 = v27;
  uint64_t v143 = v30;
  uint64_t v134 = v39;
  if (v43)
  {
    uint64_t v44 = *(void (**)(char *, void, uint64_t))(v28 + 104);
    uint64_t v149 = v41;
    v44(v30, enum case for Font.TextStyle.body(_:), v27);
    swift_retain();
    uint64_t v45 = sub_10007C790();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v155 = v43;
    unint64_t v156 = KeyPath;
    uint64_t v157 = v45;
    uint64_t v47 = v152;
    (*(void (**)(char *, void, uint64_t))(v152 + 104))(v26, enum case for ContentSizeCategory.large(_:), v24);
    swift_retain();
    sub_100008FA4(&qword_1000A5310);
    sub_10004D294();
    sub_10007C8E0();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v26, v24);
    swift_release();
    swift_release();
    swift_release();
    uint64_t v48 = v129;
    uint64_t v49 = v128;
    (*(void (**)(char *, char *, uint64_t))(v129 + 32))(v128, v34, v31);
    uint64_t v50 = v135;
    uint64_t v51 = v135 + *(int *)(v149 + 24);
    uint64_t v52 = *(void *)v51;
    char v53 = *(unsigned char *)(v51 + 8);
    sub_10000A9EC(*(void *)v51, v53);
    char v54 = sub_10003EFB4(v52, v53);
    sub_10000AC28(v52, v53);
    if (v54) {
      uint64_t v55 = 0x4024000000000000;
    }
    else {
      uint64_t v55 = 0x4010000000000000;
    }
    uint64_t v56 = *(void (**)(char *, char *, uint64_t))(v48 + 16);
    v56(v34, v49, v31);
    v56(v39, v34, v31);
    uint64_t v57 = *(int *)(sub_100008FA4(&qword_1000A5320) + 48);
    swift_release();
    unsigned __int8 v58 = &v39[v57];
    *(void *)unsigned __int8 v58 = v55;
    v58[8] = 0;
    uint64_t v59 = *(void (**)(char *, uint64_t))(v48 + 8);
    v59(v49, v31);
    v59(v34, v31);
    uint64_t v60 = sub_100008FA4(&qword_1000A52A8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v39, 0, 1, v60);
    sub_10000CB00((uint64_t)v39, v153, &qword_1000A52A0);
    uint64_t v61 = v50;
    uint64_t v63 = v137;
    uint64_t v62 = (uint64_t)v138;
    uint64_t v64 = v136;
    uint64_t v65 = v149;
  }
  else
  {
    uint64_t v66 = v41;
    uint64_t v67 = sub_100008FA4(&qword_1000A52A8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v153, 1, 1, v67);
    uint64_t v61 = v135;
    uint64_t v63 = v137;
    uint64_t v62 = (uint64_t)v138;
    uint64_t v64 = v136;
    uint64_t v65 = v66;
  }
  if (*(void *)(v61 + *(int *)(v65 + 40) + 8)) {
    goto LABEL_10;
  }
  uint64_t v68 = v124;
  sub_10003F4AC(v124);
  uint64_t v69 = v125;
  sub_10007CCF0();
  LODWORD(v149) = sub_10007CCC0();
  uint64_t v70 = *(void (**)(char *, uint64_t))(v126 + 8);
  uint64_t v71 = v69;
  uint64_t v72 = v127;
  v70(v71, v127);
  uint64_t v73 = v72;
  uint64_t v74 = v151;
  v70((char *)v68, v73);
  if ((v149 & 1) == 0)
  {
LABEL_10:
    uint64_t v86 = v146;
    sub_10004B16C(v146);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 16))(v62, v86, v63);
    swift_storeEnumTagMultiPayload();
    sub_10004CF4C();
    uint64_t v87 = sub_10000A43C(&qword_1000A52B8);
    unint64_t v88 = sub_10004CFFC();
    uint64_t v155 = v87;
    unint64_t v156 = v88;
    swift_getOpaqueTypeConformance2();
    sub_10007C650();
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v86, v63);
  }
  else
  {
    uint64_t v75 = v146;
    sub_10004B16C(v146);
    uint64_t v76 = v121;
    uint64_t v77 = *(void (**)(char *, void, uint64_t))(v121 + 104);
    uint64_t v149 = v65;
    uint64_t v78 = v120;
    uint64_t v79 = v122;
    v77(v120, enum case for BlendMode.plusLighter(_:), v122);
    uint64_t v80 = *(int *)(v74 + 36);
    uint64_t v81 = (uint64_t)v119;
    (*(void (**)(char *, char *, uint64_t))(v76 + 16))(&v119[v80], v78, v79);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 16))(v81, v75, v63);
    uint64_t v82 = v78;
    uint64_t v65 = v149;
    (*(void (**)(char *, uint64_t))(v76 + 8))(v82, v79);
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v75, v63);
    uint64_t v83 = v123;
    sub_10000CB00(v81, v123, &qword_1000A5288);
    sub_10000CB64(v83, v62, &qword_1000A5288);
    swift_storeEnumTagMultiPayload();
    sub_10004CF4C();
    uint64_t v84 = sub_10000A43C(&qword_1000A52B8);
    unint64_t v85 = sub_10004CFFC();
    uint64_t v155 = v84;
    unint64_t v156 = v85;
    swift_getOpaqueTypeConformance2();
    sub_10007C650();
    sub_10000CBC8(v83, &qword_1000A5288);
  }
  uint64_t v89 = *(void *)(v61 + *(int *)(v65 + 44));
  uint64_t v91 = v147;
  uint64_t v90 = v148;
  uint64_t v92 = v152;
  uint64_t v94 = v144;
  uint64_t v93 = v145;
  uint64_t v95 = v143;
  if (v89)
  {
    (*(void (**)(char *, void, uint64_t))(v144 + 104))(v143, enum case for Font.TextStyle.body(_:), v145);
    swift_retain();
    uint64_t v96 = sub_10007C790();
    uint64_t v97 = v95;
    uint64_t v98 = v96;
    (*(void (**)(char *, uint64_t))(v94 + 8))(v97, v93);
    uint64_t v99 = swift_getKeyPath();
    uint64_t v155 = v89;
    unint64_t v156 = v99;
    uint64_t v157 = v98;
    (*(void (**)(char *, void, uint64_t))(v92 + 104))(v91, enum case for ContentSizeCategory.large(_:), v90);
    swift_retain();
    sub_100008FA4(&qword_1000A52F8);
    sub_10004D1F4();
    unint64_t v100 = v131;
    sub_10007C8E0();
    (*(void (**)(char *, uint64_t))(v92 + 8))(v91, v90);
    swift_release();
    swift_release();
    swift_release();
    uint64_t v101 = v132;
    uint64_t v102 = v130;
    uint64_t v103 = v133;
    (*(void (**)(char *, char *, uint64_t))(v132 + 32))(v130, v100, v133);
    uint64_t v104 = *(void (**)(char *, char *, uint64_t))(v101 + 16);
    v104(v100, v102, v103);
    uint64_t v105 = (uint64_t)v141;
    *uint64_t v141 = 0x4024000000000000;
    *(unsigned char *)(v105 + 8) = 0;
    uint64_t v106 = sub_100008FA4(&qword_1000A5308);
    v104((char *)(v105 + *(int *)(v106 + 48)), v100, v103);
    swift_release();
    uint64_t v107 = *(void (**)(char *, uint64_t))(v101 + 8);
    uint64_t v108 = v102;
    uint64_t v109 = (uint64_t)v134;
    uint64_t v110 = v153;
    v107(v108, v103);
    v107(v100, v103);
    uint64_t v111 = sub_100008FA4(&qword_1000A52E8);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v111 - 8) + 56))(v105, 0, 1, v111);
    uint64_t v112 = v140;
    sub_10000CB00(v105, v140, &qword_1000A5270);
    uint64_t v113 = v142;
    uint64_t v114 = (uint64_t)v139;
  }
  else
  {
    uint64_t v115 = sub_100008FA4(&qword_1000A52E8);
    uint64_t v112 = v140;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v115 - 8) + 56))(v140, 1, 1, v115);
    uint64_t v105 = (uint64_t)v141;
    uint64_t v113 = v142;
    uint64_t v114 = (uint64_t)v139;
    uint64_t v109 = (uint64_t)v134;
    uint64_t v110 = v153;
  }
  sub_10000CB64(v110, v109, &qword_1000A52A0);
  uint64_t v116 = v154;
  sub_10000CB64(v154, v114, &qword_1000A5290);
  sub_10000CB64(v112, v105, &qword_1000A5270);
  sub_10000CB64(v109, v113, &qword_1000A52A0);
  uint64_t v117 = sub_100008FA4(&qword_1000A52F0);
  sub_10000CB64(v114, v113 + *(int *)(v117 + 48), &qword_1000A5290);
  sub_10000CB64(v105, v113 + *(int *)(v117 + 64), &qword_1000A5270);
  sub_10000CBC8(v112, &qword_1000A5270);
  sub_10000CBC8(v116, &qword_1000A5290);
  sub_10000CBC8(v110, &qword_1000A52A0);
  sub_10000CBC8(v105, &qword_1000A5270);
  sub_10000CBC8(v114, &qword_1000A5290);
  return sub_10000CBC8(v109, &qword_1000A52A0);
}

uint64_t sub_10004B16C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v55 = a1;
  uint64_t v2 = sub_10007C5F0();
  uint64_t v56 = *(void *)(v2 - 8);
  uint64_t v57 = v2;
  __chkstk_darwin(v2);
  char v54 = (char *)v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_10007CD30();
  uint64_t v48 = *(void *)(v45 - 8);
  uint64_t v4 = __chkstk_darwin(v45);
  uint64_t v47 = (char *)v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v44 = (uint64_t)v43 - v6;
  uint64_t v7 = sub_10007C800();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_100008FA4(&qword_1000A5328);
  uint64_t v51 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v49 = (char *)v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_100008FA4(&qword_1000A52B8);
  __chkstk_darwin(v50);
  uint64_t v52 = (uint64_t)v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(int *)(type metadata accessor for WidgetHeader() + 40);
  uint64_t v46 = v1;
  uint64_t v14 = v1 + v13;
  if (!*(void *)(v14 + 8)) {
    sub_10007CF80();
  }
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for Font.TextStyle.subheadline(_:), v7);
  swift_bridgeObjectRetain();
  sub_10007C790();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v15 = sub_10007C890();
  uint64_t v17 = v16;
  char v19 = v18;
  swift_bridgeObjectRelease();
  swift_release();
  sub_10007C7F0();
  uint64_t v20 = sub_10007C850();
  uint64_t v22 = v21;
  v43[2] = v23;
  char v25 = v24 & 1;
  sub_10000A610(v15, v17, v19 & 1);
  swift_bridgeObjectRelease();
  v43[1] = *(void *)(v14 + 8);
  uint64_t v26 = v44;
  sub_10003F1B8(v44);
  uint64_t v27 = v47;
  uint64_t v28 = v48;
  uint64_t v29 = v45;
  (*(void (**)(char *, void, uint64_t))(v48 + 104))(v47, enum case for WidgetFamily.systemSmall(_:), v45);
  sub_10004D440(&qword_1000A5330, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  sub_10007CFA0();
  sub_10007CFA0();
  uint64_t v30 = *(void (**)(char *, uint64_t))(v28 + 8);
  v30(v27, v29);
  v30((char *)v26, v29);
  uint64_t v31 = sub_10007C840();
  sub_10000A610(v20, v22, v25);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v33 = swift_getKeyPath();
  uint64_t v58 = v31;
  uint64_t v59 = KeyPath;
  uint64_t v60 = 1;
  char v61 = 0;
  uint64_t v62 = v33;
  unint64_t v63 = 0xC020000000000000;
  sub_100008FA4(&qword_1000A52C8);
  sub_10004D0AC();
  uint64_t v34 = v49;
  sub_10007C990();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v35 = sub_10007CC00();
  uint64_t v36 = v52;
  double v38 = sub_10007083C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v52, 0.0, 1, 0.0, 1, v35, v37);
  (*(void (**)(char *, uint64_t, double))(v51 + 8))(v34, v53, v38);
  uint64_t v40 = v56;
  uint64_t v39 = v57;
  uint64_t v41 = v54;
  (*(void (**)(char *, void, uint64_t))(v56 + 104))(v54, enum case for ContentSizeCategory.accessibilityMedium(_:), v57);
  sub_10004CFFC();
  sub_10007C8E0();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v39);
  return sub_10000CBC8(v36, &qword_1000A52B8);
}

uint64_t sub_10004B7EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v1 = sub_100008FA4(&qword_1000A5208);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100008FA4(&qword_1000A51D0);
  __chkstk_darwin(v21);
  uint64_t v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_10007CD00();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v20 - v11;
  type metadata accessor for WidgetHeader();
  sub_10003F4AC((uint64_t)v12);
  sub_10007CCE0();
  sub_10004D440(&qword_1000A5210, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  char v13 = sub_10007CF00();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v7 + 8);
  v14(v10, v6);
  v14(v12, v6);
  if (v13)
  {
    uint64_t *v5 = sub_10007CBF0();
    v5[1] = v15;
    uint64_t v16 = sub_100008FA4(&qword_1000A5220);
    sub_10004BBE4((char *)v5 + *(int *)(v16 + 44));
    sub_10000CB64((uint64_t)v5, (uint64_t)v3, &qword_1000A51D0);
    swift_storeEnumTagMultiPayload();
    sub_10000CAB4(&qword_1000A51C8, &qword_1000A51D0);
    sub_10004CE2C();
    sub_10007C650();
    return sub_10000CBC8((uint64_t)v5, &qword_1000A51D0);
  }
  else
  {
    sub_100008FA4(&qword_1000A5218);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1000861E0;
    *(void *)(v18 + 32) = sub_10007CAB0();
    *(void *)(v18 + 40) = sub_10007CAB0();
    *(void *)&long long v23 = v18;
    sub_10007CFE0();
    sub_10007CBD0();
    sub_10007CC20();
    sub_10007CC30();
    sub_10007C3D0();
    long long v19 = v24;
    *(_OWORD *)uint64_t v3 = v23;
    *((_OWORD *)v3 + 1) = v19;
    *((void *)v3 + 4) = v25;
    swift_storeEnumTagMultiPayload();
    sub_10000CAB4(&qword_1000A51C8, &qword_1000A51D0);
    sub_10004CE2C();
    return sub_10007C650();
  }
}

uint64_t sub_10004BBE4@<X0>(char *a1@<X8>)
{
  uint64_t v29 = a1;
  *(void *)&long long v28 = sub_10007CA00();
  uint64_t v1 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100008FA4(&qword_1000A5228);
  __chkstk_darwin(v4);
  uint64_t v6 = (uint64_t *)((char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_100008FA4(&qword_1000A5230);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  char v13 = (char *)&v28 - v12;
  uint64_t *v6 = sub_10007CBF0();
  v6[1] = v14;
  uint64_t v15 = sub_100008FA4(&qword_1000A5238);
  sub_10004BFBC((uint64_t *)((char *)v6 + *(int *)(v15 + 44)));
  sub_10000CAB4(&qword_1000A5240, &qword_1000A5228);
  sub_10007C8F0();
  sub_10000CBC8((uint64_t)v6, &qword_1000A5228);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v11, v7);
  sub_100008FA4(&qword_1000A5218);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1000861E0;
  uint64_t v17 = enum case for Color.RGBColorSpace.sRGB(_:);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 104);
  uint64_t v19 = v28;
  v18(v3, enum case for Color.RGBColorSpace.sRGB(_:), v28);
  *(void *)(v16 + 32) = sub_10007CAA0();
  v18(v3, v17, v19);
  *(void *)(v16 + 40) = sub_10007CAA0();
  uint64_t v30 = v16;
  sub_10007CFE0();
  sub_10007CC20();
  sub_10007CC30();
  sub_10007CBD0();
  sub_10007C3D0();
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v20(v11, v13, v7);
  uint64_t v22 = v29;
  uint64_t v21 = v30;
  long long v28 = v31;
  uint64_t v23 = v32;
  uint64_t v24 = v33;
  v20(v29, v11, v7);
  uint64_t v25 = &v22[*(int *)(sub_100008FA4(&qword_1000A5248) + 48)];
  *(void *)uint64_t v25 = v21;
  *(_OWORD *)(v25 + 8) = v28;
  *((void *)v25 + 3) = v23;
  *((void *)v25 + 4) = v24;
  uint64_t v26 = *(void (**)(char *, uint64_t))(v8 + 8);
  swift_bridgeObjectRetain();
  v26(v13, v7);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v26)(v11, v7);
}

uint64_t sub_10004BFBC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_10007CC10();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100008FA4(&qword_1000A50E8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100008FA4(&qword_1000A5250);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v18 - v13;
  if (qword_1000A3218 != -1) {
    swift_once();
  }
  uint64_t v15 = qword_1000B2450;
  swift_retain();
  sub_100049110((uint64_t)v8);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for BlendMode.destinationOut(_:), v2);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(&v12[*(int *)(v9 + 36)], v5, v2);
  sub_10000CB64((uint64_t)v8, (uint64_t)v12, &qword_1000A50E8);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_10000CBC8((uint64_t)v8, &qword_1000A50E8);
  sub_10000CB00((uint64_t)v12, (uint64_t)v14, &qword_1000A5250);
  sub_10000CB64((uint64_t)v14, (uint64_t)v12, &qword_1000A5250);
  *a1 = v15;
  uint64_t v16 = sub_100008FA4(&qword_1000A5258);
  sub_10000CB64((uint64_t)v12, (uint64_t)a1 + *(int *)(v16 + 48), &qword_1000A5250);
  swift_retain();
  sub_10000CBC8((uint64_t)v14, &qword_1000A5250);
  sub_10000CBC8((uint64_t)v12, &qword_1000A5250);
  return swift_release();
}

double sub_10004C278@<D0>(uint64_t a1@<X8>)
{
  sub_10007C830();
  uint64_t v2 = sub_10007C9D0();
  sub_100008FA4(&qword_1000A5130);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1000861E0;
  *(_OWORD *)(v3 + 32) = xmmword_1000861F0;
  sub_10007C370();
  uint64_t v4 = sub_10007CBF0();
  *(_OWORD *)a1 = v7;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(unsigned char *)(a1 + 32) = v10;
  double result = v12;
  *(void *)(a1 + 40) = v11;
  *(double *)(a1 + 48) = v12;
  *(void *)(a1 + 56) = v13;
  *(void *)(a1 + 64) = v14;
  *(void *)(a1 + 72) = v15;
  *(void *)(a1 + 80) = v2;
  *(_WORD *)(a1 + 88) = 256;
  *(void *)(a1 + 96) = v4;
  *(void *)(a1 + 104) = v6;
  return result;
}

void sub_10004C394()
{
  sub_10007C3B0();
  v5.x = remainder(v0, 4.0) * 0.5;
  v5.y = 4.0;
  sub_10007C810(v5);
  sub_10007C3B0();
  double v2 = v1 * 0.25;
  if ((~*(void *)&v2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v2 <= -9.22337204e18)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v2 >= 9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if ((unint64_t)((uint64_t)v2 - 0x2000000000000000) >> 62 == 3)
  {
    double v3 = (double)(4 * (uint64_t)v2);
    sub_10007C3B0();
    v6.x = v3 + remainder(v4, 4.0) * -0.5;
    v6.y = 4.0;
    sub_10007C820(v6);
    return;
  }
LABEL_9:
  __break(1u);
}

unint64_t sub_10004C48C()
{
  unint64_t result = qword_1000A50B0;
  if (!qword_1000A50B0)
  {
    sub_10000A43C(&qword_1000A5098);
    sub_10000CAB4(&qword_1000A50B8, &qword_1000A5090);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A50B0);
  }
  return result;
}

uint64_t sub_10004C52C()
{
  double v1 = (int *)type metadata accessor for WidgetHeader();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;
  sub_100008FA4(&qword_1000A4CD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_10007C5F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v5 + v1[5];
  sub_100008FA4(&qword_1000A3360);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_10007CD30();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  sub_10000AC28(*(void *)(v5 + v1[6]), *(unsigned char *)(v5 + v1[6] + 8));
  uint64_t v9 = v5 + v1[7];
  sub_100008FA4(&qword_1000A48A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_10007CD00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  uint64_t v11 = v5 + v1[8];
  uint64_t v12 = sub_10007C110();
  uint64_t v13 = *(void *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_10004C7F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WidgetHeader();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10004C858@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for WidgetHeader();

  return sub_100048F38(a1);
}

uint64_t sub_10004C8C8()
{
  return sub_10004CB30(&qword_1000A50E0, &qword_1000A50E8, (void (*)(void))sub_10004C8F8);
}

uint64_t sub_10004C8F8()
{
  return sub_10004CB30(&qword_1000A50F0, &qword_1000A50F8, (void (*)(void))sub_10004C928);
}

unint64_t sub_10004C928()
{
  unint64_t result = qword_1000A5100;
  if (!qword_1000A5100)
  {
    sub_10000A43C(&qword_1000A5108);
    sub_10000CAB4(&qword_1000A5110, &qword_1000A5118);
    sub_10000CAB4(&qword_1000A49A0, &qword_1000A49A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A5100);
  }
  return result;
}

uint64_t sub_10004C9EC(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_10004C9FC(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

void sub_10004CA0C()
{
}

unint64_t sub_10004CA14()
{
  unint64_t result = qword_1000A5160;
  if (!qword_1000A5160)
  {
    sub_10000A43C(&qword_1000A5140);
    sub_10000CAB4(&qword_1000A3598, &qword_1000A35A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A5160);
  }
  return result;
}

unint64_t sub_10004CAB4()
{
  unint64_t result = qword_1000A5168;
  if (!qword_1000A5168)
  {
    sub_10000A43C(&qword_1000A5158);
    sub_10004CA14();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A5168);
  }
  return result;
}

uint64_t sub_10004CB30(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000A43C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10004CBAC()
{
  unint64_t result = qword_1000A5178;
  if (!qword_1000A5178)
  {
    sub_10000A43C(&qword_1000A5180);
    sub_10004CC4C();
    sub_10000CAB4(&qword_1000A51F0, &qword_1000A51F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A5178);
  }
  return result;
}

unint64_t sub_10004CC4C()
{
  unint64_t result = qword_1000A5188;
  if (!qword_1000A5188)
  {
    sub_10000A43C(&qword_1000A5190);
    sub_10004CB30(&qword_1000A5198, &qword_1000A51A0, (void (*)(void))sub_10004CD18);
    sub_10000CAB4(&qword_1000A51E0, &qword_1000A51E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A5188);
  }
  return result;
}

unint64_t sub_10004CD18()
{
  unint64_t result = qword_1000A51A8;
  if (!qword_1000A51A8)
  {
    sub_10000A43C(&qword_1000A51B0);
    sub_10004CD8C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A51A8);
  }
  return result;
}

unint64_t sub_10004CD8C()
{
  unint64_t result = qword_1000A51B8;
  if (!qword_1000A51B8)
  {
    sub_10000A43C(&qword_1000A51C0);
    sub_10000CAB4(&qword_1000A51C8, &qword_1000A51D0);
    sub_10004CE2C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A51B8);
  }
  return result;
}

unint64_t sub_10004CE2C()
{
  unint64_t result = qword_1000A51D8;
  if (!qword_1000A51D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A51D8);
  }
  return result;
}

uint64_t sub_10004CE88(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10004CEF0(uint64_t a1)
{
  uint64_t v2 = sub_10007C400();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10004CF4C()
{
  unint64_t result = qword_1000A52B0;
  if (!qword_1000A52B0)
  {
    sub_10000A43C(&qword_1000A5288);
    sub_10000A43C(&qword_1000A52B8);
    sub_10004CFFC();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A52B0);
  }
  return result;
}

unint64_t sub_10004CFFC()
{
  unint64_t result = qword_1000A52C0;
  if (!qword_1000A52C0)
  {
    sub_10000A43C(&qword_1000A52B8);
    sub_10000A43C(&qword_1000A52C8);
    sub_10004D0AC();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A52C0);
  }
  return result;
}

unint64_t sub_10004D0AC()
{
  unint64_t result = qword_1000A52D0;
  if (!qword_1000A52D0)
  {
    sub_10000A43C(&qword_1000A52C8);
    sub_10004D14C();
    sub_10000CAB4(&qword_1000A52D8, &qword_1000A52E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A52D0);
  }
  return result;
}

unint64_t sub_10004D14C()
{
  unint64_t result = qword_1000A4D78;
  if (!qword_1000A4D78)
  {
    sub_10000A43C(&qword_1000A4D70);
    sub_10000CAB4(&qword_1000A4D80, &qword_1000A4D88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A4D78);
  }
  return result;
}

unint64_t sub_10004D1F4()
{
  unint64_t result = qword_1000A5300;
  if (!qword_1000A5300)
  {
    sub_10000A43C(&qword_1000A52F8);
    sub_10000CAB4(&qword_1000A34E0, &qword_1000A34E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A5300);
  }
  return result;
}

unint64_t sub_10004D294()
{
  unint64_t result = qword_1000A5318;
  if (!qword_1000A5318)
  {
    sub_10000A43C(&qword_1000A5310);
    sub_10000CAB4(&qword_1000A34E0, &qword_1000A34E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A5318);
  }
  return result;
}

uint64_t sub_10004D33C@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_10007C460();
  *a1 = v3;
  return result;
}

uint64_t sub_10004D368()
{
  return sub_10007C470();
}

unint64_t sub_10004D394()
{
  unint64_t result = qword_1000A5338;
  if (!qword_1000A5338)
  {
    sub_10000A43C(&qword_1000A50A0);
    sub_10004C48C();
    sub_10004D440(&qword_1000A3498, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A5338);
  }
  return result;
}

uint64_t sub_10004D440(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10004D488()
{
  uint64_t v0 = sub_10007C2E0();
  sub_1000112B4(v0, qword_1000A5340);
  sub_100010740(v0, (uint64_t)qword_1000A5340);
  return sub_10007C2C0();
}

uint64_t sub_10004D4D4()
{
  if (qword_1000A31F8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_100008FA4(&qword_1000A47E8);
  sub_100010740(v0, (uint64_t)qword_1000A4F00);
  swift_beginAccess();
  sub_10007C210();
  double v1 = v22;
  swift_endAccess();
  if (v22)
  {
    if (qword_1000A3200 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_100008FA4(&qword_1000A4B68);
    sub_100010740(v2, (uint64_t)qword_1000A4F18);
    swift_beginAccess();
    sub_10007C210();
    swift_endAccess();
    id v3 = [self defaultAccountWithHTMLNoteContext:v22];
    if (v3)
    {
      uint64_t v4 = v3;
      self;
      if (swift_dynamicCastObjCClass())
      {
        id v5 = v4;
        id v6 = [v22 managedObjectContext];
        __chkstk_darwin(v6);
        sub_100008FA4(&qword_1000A5420);
LABEL_9:
        sub_10007D0D0();

        return v23;
      }
      self;
      if (swift_dynamicCastObjCClass())
      {
        id v5 = v4;
        id v15 = [v22 managedObjectContext];
        if (v15)
        {
          id v6 = v15;
          __chkstk_darwin(v15);
          sub_100008FA4(&qword_1000A5420);
          goto LABEL_9;
        }
      }
      else
      {
        if (qword_1000A3228 != -1) {
          swift_once();
        }
        uint64_t v16 = sub_10007C2E0();
        sub_100010740(v16, (uint64_t)qword_1000A5340);
        id v17 = v4;
        uint64_t v18 = sub_10007C2D0();
        os_log_type_t v19 = sub_10007D060();
        if (os_log_type_enabled(v18, v19))
        {
          uint64_t v20 = (uint8_t *)swift_slowAlloc();
          uint64_t v21 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v20 = 138412290;
          id v24 = [v17 objectID];
          sub_10007D0F0();
          *uint64_t v21 = v24;

          _os_log_impl((void *)&_mh_execute_header, v18, v19, "Unknown default account type — returning nil default intent note {objectID: %@}", v20, 0xCu);
          sub_100008FA4(&qword_1000A3648);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
      }
    }
    else
    {
      if (qword_1000A3228 != -1) {
        swift_once();
      }
      uint64_t v11 = sub_10007C2E0();
      sub_100010740(v11, (uint64_t)qword_1000A5340);
      uint64_t v12 = sub_10007C2D0();
      os_log_type_t v13 = sub_10007D060();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v14 = 0;
        _os_log_impl((void *)&_mh_execute_header, v12, v13, "Cannot get default account — returning nil default intent note", v14, 2u);
        swift_slowDealloc();
      }
      else
      {
      }
    }
  }
  else
  {
    if (qword_1000A3228 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_10007C2E0();
    sub_100010740(v8, (uint64_t)qword_1000A5340);
    double v1 = sub_10007C2D0();
    os_log_type_t v9 = sub_10007D060();
    if (os_log_type_enabled(v1, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v1, v9, "No modern or HTML note context — returning nil default intent note", v10, 2u);
      swift_slowDealloc();
    }
  }

  return 0;
}

void sub_10004DAA8(id a1@<X1>, void *a2@<X8>)
{
  id v3 = [a1 defaultFolder];
  sub_10004F9FC(v3);
  uint64_t v5 = v4;

  *a2 = v5;
}

void sub_10004DB04(id a1@<X1>, void *a2@<X8>)
{
  id v3 = [a1 defaultStore];
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = sub_10005006C(v3);

    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10004DB68(uint64_t a1, void (*a2)(char *))
{
  uint64_t v3 = sub_100008FA4(&qword_1000A5428);
  __chkstk_darwin(v3 - 8);
  id v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = _s14descr10009E241C5EntryVMa();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  os_log_type_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008FA4(&qword_1000A5408);
  uint64_t v10 = sub_10007CEE0();
  if (*(void *)(v10 + 16))
  {
    sub_100050740(v10 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), (uint64_t)v5, (uint64_t (*)(void))_s14descr10009E241C5EntryVMa);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    uint64_t v11 = &v9[*(int *)(v6 + 20)];
    uint64_t v12 = type metadata accessor for Note();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 2, 2, v12);
    sub_10007C140();
    sub_10000CBC8((uint64_t)v5, &qword_1000A5428);
  }
  else
  {
    sub_100050808((uint64_t)v5, (uint64_t)v9, (uint64_t (*)(void))_s14descr10009E241C5EntryVMa);
  }
  a2(v9);
  return sub_1000507A8((uint64_t)v9, (uint64_t (*)(void))_s14descr10009E241C5EntryVMa);
}

uint64_t sub_10004DDC8(void *a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v115 = a2;
  uint64_t v124 = a4;
  uint64_t v125 = a3;
  uint64_t v5 = sub_10007CDD0();
  __chkstk_darwin(v5 - 8);
  uint64_t v122 = (char *)&v112 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10007C150();
  uint64_t v120 = *(void *)(v7 - 8);
  uint64_t v121 = v7;
  __chkstk_darwin(v7);
  uint64_t v118 = (char *)&v112 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100008FA4(&qword_1000A3268);
  __chkstk_darwin(v9 - 8);
  uint64_t v119 = (char *)&v112 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100008FA4(&qword_1000A5408);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v126 = v11;
  uint64_t v127 = v12;
  __chkstk_darwin(v11);
  uint64_t v123 = (uint64_t)&v112 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = sub_10007C2E0();
  uint64_t v117 = *(void *)(v128 - 8);
  uint64_t v14 = __chkstk_darwin(v128);
  uint64_t v114 = (char *)&v112 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v112 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v112 - v19;
  uint64_t v21 = sub_100008FA4(&qword_1000A5410);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  id v24 = (char *)&v112 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v112 - v25;
  uint64_t v27 = type metadata accessor for Note();
  uint64_t v129 = *(void *)(v27 - 8);
  id v130 = (id)v27;
  uint64_t v28 = __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v112 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v32 = (char *)&v112 - v31;
  if (qword_1000A31F8 != -1) {
    swift_once();
  }
  uint64_t v33 = sub_100008FA4(&qword_1000A47E8);
  sub_100010740(v33, (uint64_t)qword_1000A4F00);
  swift_beginAccess();
  sub_10007C210();
  uint64_t v34 = (void *)v131;
  swift_endAccess();
  if (!v34) {
    goto LABEL_15;
  }
  if (qword_1000A3200 != -1) {
    swift_once();
  }
  uint64_t v35 = sub_100008FA4(&qword_1000A4B68);
  sub_100010740(v35, (uint64_t)qword_1000A4F18);
  swift_beginAccess();
  sub_10007C210();
  uint64_t v36 = (void *)v131;
  swift_endAccess();
  if (!v36)
  {

LABEL_15:
    if (qword_1000A3228 != -1) {
      swift_once();
    }
    sub_100010740(v128, (uint64_t)qword_1000A5340);
    uint64_t v53 = sub_10007C2D0();
    os_log_type_t v54 = sub_10007D060();
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v55 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v55 = 0;
      _os_log_impl((void *)&_mh_execute_header, v53, v54, "No modern or HTML note context — returning placeholder timeline", v55, 2u);
      swift_slowDealloc();
    }

    sub_100008FA4(&qword_1000A5418);
    uint64_t v56 = _s14descr10009E241C5EntryVMa();
    unint64_t v57 = (*(unsigned __int8 *)(*(void *)(v56 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v56 - 8) + 80);
    uint64_t v58 = swift_allocObject();
    *(_OWORD *)(v58 + 16) = xmmword_100080BC0;
    unint64_t v59 = v58 + v57;
    uint64_t v60 = (uint64_t)v119;
    (*(void (**)(char *, uint64_t, uint64_t, id))(v129 + 56))(v119, 2, 2, v130);
    char v61 = v118;
    sub_10007C140();
    (*(void (**)(unint64_t, char *, uint64_t))(v120 + 32))(v59, v61, v121);
    sub_10004F95C(v60, v59 + *(int *)(v56 + 20));
    sub_10007CDC0();
    sub_10004F6EC();
    uint64_t v62 = v123;
    sub_10007CED0();
    v125(v62);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v127 + 8))(v62, v126);
  }
  id v37 = [a1 note];
  if (v37)
  {
    id v38 = v37;
    uint64_t v39 = v34;
    id v40 = v36;
    uint64_t v114 = v39;
    sub_1000743D8(v38, v39, v40, (uint64_t)v26);
    if ((*(unsigned int (**)(char *, uint64_t, id))(v129 + 48))(v26, 1, v130) == 1)
    {
      sub_10000CBC8((uint64_t)v26, &qword_1000A5410);
      uint64_t v41 = v128;
      uint64_t v42 = v117;
      if (qword_1000A3228 != -1) {
        swift_once();
      }
      uint64_t v43 = sub_100010740(v41, (uint64_t)qword_1000A5340);
      (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v18, v43, v41);
      id v44 = v38;
      uint64_t v45 = sub_10007C2D0();
      os_log_type_t v46 = sub_10007D060();
      if (os_log_type_enabled(v45, v46))
      {
        id v113 = v40;
        uint64_t v47 = (uint8_t *)swift_slowAlloc();
        v132[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v47 = 136315138;
        id v116 = v44;
        id v48 = [v44 identifier];
        if (v48)
        {
          uint64_t v49 = v48;
          uint64_t v50 = sub_10007CF40();
          unint64_t v52 = v51;
        }
        else
        {
          uint64_t v50 = 9732322;
          unint64_t v52 = 0xA300000000000000;
        }
        uint64_t v131 = sub_100037524(v50, v52, v132);
        sub_10007D0F0();
        id v44 = v116;

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v45, v46, "Cannot fetch note — returning deleted timeline {identifier: %s}", v47, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v117 + 8))(v18, v41);
        id v40 = v113;
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v42 + 8))(v18, v41);
      }
      sub_100008FA4(&qword_1000A5418);
      uint64_t v103 = _s14descr10009E241C5EntryVMa();
      unint64_t v104 = (*(unsigned __int8 *)(*(void *)(v103 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v103 - 8) + 80);
      uint64_t v105 = swift_allocObject();
      *(_OWORD *)(v105 + 16) = xmmword_100080BC0;
      unint64_t v106 = v105 + v104;
      uint64_t v107 = (uint64_t)v119;
      (*(void (**)(char *, uint64_t, uint64_t, id))(v129 + 56))(v119, 1, 2, v130);
      uint64_t v108 = v118;
      sub_10007C140();
      (*(void (**)(unint64_t, char *, uint64_t))(v120 + 32))(v106, v108, v121);
      sub_10004F95C(v107, v106 + *(int *)(v103 + 20));
      sub_10007CDC0();
      sub_10004F6EC();
      uint64_t v109 = v123;
      sub_10007CED0();
      v125(v109);

      return (*(uint64_t (**)(uint64_t, uint64_t))(v127 + 8))(v109, v126);
    }
    else
    {
      sub_100050808((uint64_t)v26, (uint64_t)v32, (uint64_t (*)(void))type metadata accessor for Note);
      uint64_t v78 = v128;
      uint64_t v79 = v117;
      if (qword_1000A3228 != -1) {
        swift_once();
      }
      uint64_t v80 = sub_100010740(v78, (uint64_t)qword_1000A5340);
      (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v20, v80, v78);
      id v81 = v38;
      uint64_t v82 = sub_10007C2D0();
      os_log_type_t v83 = sub_10007D050();
      if (os_log_type_enabled(v82, v83))
      {
        id v113 = v40;
        uint64_t v84 = (uint8_t *)swift_slowAlloc();
        v132[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v84 = 136315138;
        id v85 = [v81 identifier];
        if (v85)
        {
          uint64_t v86 = v85;
          uint64_t v87 = sub_10007CF40();
          unint64_t v89 = v88;
        }
        else
        {
          uint64_t v87 = 9732322;
          unint64_t v89 = 0xA300000000000000;
        }
        uint64_t v131 = sub_100037524(v87, v89, v132);
        sub_10007D0F0();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v82, v83, "Returning timeline for note {identifier: %s}", v84, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v117 + 8))(v20, v128);
        id v40 = v113;
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v79 + 8))(v20, v78);
      }
      uint64_t v110 = v123;
      sub_10004EF74((uint64_t)v32, v123);
      v125(v110);

      (*(void (**)(uint64_t, uint64_t))(v127 + 8))(v110, v126);
      return sub_1000507A8((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for Note);
    }
  }
  uint64_t v64 = sub_10004D4D4();
  if (!v64) {
    goto LABEL_24;
  }
  uint64_t v65 = (void *)v64;
  id v66 = v34;
  id v67 = v36;
  id v68 = v65;
  sub_1000743D8(v68, v66, v67, (uint64_t)v24);
  if ((*(unsigned int (**)(char *, uint64_t, id))(v129 + 48))(v24, 1, v130) == 1)
  {

    sub_10000CBC8((uint64_t)v24, &qword_1000A5410);
LABEL_24:
    if (qword_1000A3228 != -1) {
      swift_once();
    }
    sub_100010740(v128, (uint64_t)qword_1000A5340);
    uint64_t v69 = sub_10007C2D0();
    os_log_type_t v70 = sub_10007D060();
    if (os_log_type_enabled(v69, v70))
    {
      uint64_t v71 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v71 = 0;
      _os_log_impl((void *)&_mh_execute_header, v69, v70, "There is no intent note and cannot get default note — returning placeholder timeline", v71, 2u);
      swift_slowDealloc();
    }

    sub_100008FA4(&qword_1000A5418);
    uint64_t v72 = _s14descr10009E241C5EntryVMa();
    unint64_t v73 = (*(unsigned __int8 *)(*(void *)(v72 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v72 - 8) + 80);
    uint64_t v74 = swift_allocObject();
    *(_OWORD *)(v74 + 16) = xmmword_100080BC0;
    unint64_t v75 = v74 + v73;
    uint64_t v76 = (uint64_t)v119;
    (*(void (**)(char *, uint64_t, uint64_t, id))(v129 + 56))(v119, 2, 2, v130);
    uint64_t v77 = v118;
    sub_10007C140();
    (*(void (**)(unint64_t, char *, uint64_t))(v120 + 32))(v75, v77, v121);
    sub_10004F95C(v76, v75 + *(int *)(v72 + 20));
    sub_10007CDC0();
    sub_10004F6EC();
    uint64_t v62 = v123;
    sub_10007CED0();
    v125(v62);

    return (*(uint64_t (**)(uint64_t, uint64_t))(v127 + 8))(v62, v126);
  }
  sub_100050808((uint64_t)v24, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for Note);
  if (qword_1000A3228 != -1) {
    swift_once();
  }
  uint64_t v90 = v128;
  uint64_t v91 = sub_100010740(v128, (uint64_t)qword_1000A5340);
  uint64_t v92 = v117;
  uint64_t v93 = v114;
  (*(void (**)(char *, uint64_t, uint64_t))(v117 + 16))(v114, v91, v90);
  id v94 = v68;
  uint64_t v95 = sub_10007C2D0();
  os_log_type_t v96 = sub_10007D050();
  if (os_log_type_enabled(v95, v96))
  {
    id v130 = v66;
    uint64_t v97 = (uint8_t *)swift_slowAlloc();
    v132[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v97 = 136315138;
    id v98 = [v94 identifier];
    if (v98)
    {
      uint64_t v99 = v98;
      uint64_t v100 = sub_10007CF40();
      unint64_t v102 = v101;
    }
    else
    {
      uint64_t v100 = 9732322;
      unint64_t v102 = 0xA300000000000000;
    }
    uint64_t v131 = sub_100037524(v100, v102, v132);
    sub_10007D0F0();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v95, v96, "Returning timeline for default note {identifier: %s}", v97, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v117 + 8))(v114, v128);
    id v66 = v130;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v92 + 8))(v93, v90);
  }
  uint64_t v111 = v123;
  sub_10004EF74((uint64_t)v30, v123);
  v125(v111);

  (*(void (**)(uint64_t, uint64_t))(v127 + 8))(v111, v126);
  return sub_1000507A8((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for Note);
}

uint64_t sub_10004EF74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v62 = a1;
  uint64_t v66 = a2;
  uint64_t v2 = sub_100008FA4(&qword_1000A3268);
  __chkstk_darwin(v2 - 8);
  uint64_t v65 = (uint64_t)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100008FA4(&qword_1000A4B78);
  __chkstk_darwin(v4 - 8);
  uint64_t v69 = (uint64_t)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10007CDD0();
  uint64_t v63 = *(void *)(v6 - 8);
  uint64_t v64 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v60 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  char v61 = (char *)&v52 - v9;
  uint64_t v58 = sub_10007C150();
  uint64_t v68 = *(void *)(v58 - 8);
  uint64_t v10 = __chkstk_darwin(v58);
  uint64_t v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v52 - v13;
  uint64_t v15 = sub_10007C1E0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v55 = v15;
  uint64_t v56 = v16;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v59 = (char *)sub_10007C1F0();
  uint64_t v19 = *((void *)v59 - 1);
  uint64_t v20 = __chkstk_darwin(v59);
  uint64_t v22 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  os_log_type_t v54 = (char *)&v52 - v23;
  uint64_t v24 = sub_100008FA4(&qword_1000A4B80);
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  uint64_t v57 = (uint64_t)&v52 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v52 - v27;
  sub_10007C1D0();
  (*(void (**)(char *, void, uint64_t))(v16 + 104))(v18, enum case for Calendar.Component.day(_:), v15);
  sub_10007C1D0();
  sub_10007C140();
  sub_10007C1B0();
  uint64_t v29 = *(void (**)(char *, uint64_t))(v68 + 8);
  uint64_t v30 = v58;
  v29(v12, v58);
  uint64_t v31 = *(void (**)(char *, char *))(v19 + 8);
  uint64_t v32 = (uint64_t)v59;
  v31(v22, v59);
  uint64_t v33 = v54;
  sub_10007C1C0();
  id v67 = v14;
  uint64_t v53 = v29;
  v29(v14, v30);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v18, v55);
  uint64_t v34 = v68;
  v31(v33, (char *)v32);
  uint64_t v35 = v30;
  uint64_t v36 = v57;
  unint64_t v59 = v28;
  sub_100037BDC((uint64_t)v28, v57);
  int v37 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v36, 1, v35);
  uint64_t v38 = 1;
  if (v37 != 1)
  {
    uint64_t v39 = v67;
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v67, v36, v35);
    sub_10007CDB0();
    v53(v39, v35);
    uint64_t v38 = 0;
  }
  uint64_t v41 = v63;
  uint64_t v40 = v64;
  uint64_t v42 = v69;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v63 + 56))(v69, v38, 1, v64);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v42, 1, v40) == 1)
  {
    uint64_t v43 = v61;
    sub_10007CDC0();
    sub_10000CBC8(v69, &qword_1000A4B78);
  }
  else
  {
    uint64_t v43 = v61;
    (*(void (**)(char *, uint64_t, uint64_t))(v41 + 32))(v61, v69, v40);
  }
  sub_100008FA4(&qword_1000A5418);
  uint64_t v44 = _s14descr10009E241C5EntryVMa();
  unint64_t v45 = (*(unsigned __int8 *)(*(void *)(v44 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v44 - 8) + 80);
  uint64_t v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = xmmword_100080BC0;
  unint64_t v47 = v46 + v45;
  uint64_t v48 = v65;
  sub_100050740(v62, v65, (uint64_t (*)(void))type metadata accessor for Note);
  uint64_t v49 = type metadata accessor for Note();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v48, 0, 2, v49);
  uint64_t v50 = v67;
  sub_10007C140();
  (*(void (**)(unint64_t, char *, uint64_t))(v34 + 32))(v47, v50, v35);
  sub_10004F95C(v48, v47 + *(int *)(v44 + 20));
  (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v60, v43, v40);
  sub_10004F6EC();
  sub_10007CED0();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v43, v40);
  return sub_10000CBC8((uint64_t)v59, &qword_1000A4B80);
}

uint64_t sub_10004F6B4()
{
  return _swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for NoteTimelineProvider()
{
  return self;
}

unint64_t sub_10004F6EC()
{
  unint64_t result = qword_1000A53F0[0];
  if (!qword_1000A53F0[0])
  {
    _s14descr10009E241C5EntryVMa();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000A53F0);
  }
  return result;
}

uint64_t sub_10004F744@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1 = a1 + *(int *)(_s14descr10009E241C5EntryVMa() + 20);
  uint64_t v2 = type metadata accessor for Note();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 2, 2, v2);

  return sub_10007C140();
}

uint64_t sub_10004F7C8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_10007CE40();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *v4;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = (char *)swift_allocObject();
  *((void *)v15 + 2) = a3;
  *((void *)v15 + 3) = a4;
  *((void *)v15 + 4) = v13;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v15[v14], v12, v9);
  swift_retain();
  swift_retain();
  sub_10004DDC8(a1, a2, (void (*)(uint64_t))sub_1000506C8, (uint64_t)v15);
  return swift_release();
}

uint64_t sub_10004F938(void *a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  return sub_10004DDC8(a1, a2, a3, a4);
}

uint64_t sub_10004F95C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100008FA4(&qword_1000A3268);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_10004F9C4(void *a1@<X8>)
{
  sub_10004DB04(*(id *)(v1 + 24), a1);
}

void sub_10004F9E0(void *a1@<X8>)
{
  sub_10004DAA8(*(id *)(v1 + 24), a1);
}

void sub_10004F9FC(void *a1)
{
  uint64_t v2 = sub_100008FA4(&qword_1000A3270);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10007C110();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v43 - v10;
  id v12 = [a1 managedObjectContext];
  if (!v12) {
    return;
  }
  uint64_t v13 = v12;
  uint64_t v45 = v6;
  unint64_t v14 = self;
  id v15 = [a1 customNoteSortType];
  Class isa = (Class)[v14 sortDescriptorsForCurrentTypeIncludingPinnedNotes:0 folderNoteSortType:v15];

  if (!isa)
  {
    sub_100011278(0, &qword_1000A4B90);
    sub_10007CFD0();
    Class isa = sub_10007CFC0().super.isa;
    swift_bridgeObjectRelease();
  }
  sub_100011278(0, &qword_1000A4B98);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  id v18 = [a1 predicateForVisibleNotes];
  id v19 = [ObjCClassFromMetadata ic_objectsMatchingPredicate:v18 sortDescriptors:isa context:v13];

  sub_100011278(0, &qword_1000A4BA0);
  unint64_t v20 = sub_10007CFD0();

  if (!(v20 >> 62))
  {
    if (*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_6;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_10007D1E0();
  swift_bridgeObjectRelease();
  if (!v35) {
    goto LABEL_19;
  }
LABEL_6:
  if ((v20 & 0xC000000000000001) != 0)
  {
    id v21 = (id)sub_10007D160();
  }
  else
  {
    if (!*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v21 = *(id *)(v20 + 32);
  }
  uint64_t v22 = v21;
  swift_bridgeObjectRelease();
  self;
  uint64_t v23 = swift_dynamicCastObjCClass();
  if (v23)
  {
    uint64_t v24 = (void *)v23;
    id v44 = v22;
    id v25 = [self appURLForNote:v23];
    if (v25)
    {
      uint64_t v26 = v25;
      sub_10007C0E0();

      uint64_t v27 = v45;
      uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
      v28(v4, v9, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v4, 0, 1, v5);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v4, 1, v5) != 1)
      {
        v28(v11, v4, v5);
        sub_10007C0C0();
        id v29 = [v24 title];
        if (v29)
        {
          uint64_t v30 = v29;
          sub_10007CF40();
        }
        id v31 = v44;
        id v32 = objc_allocWithZone((Class)ICIntentNote);
        NSString v33 = sub_10007CF30();
        swift_bridgeObjectRelease();
        NSString v34 = sub_10007CF30();
        swift_bridgeObjectRelease();
        [v32 initWithIdentifier:v33 displayString:v34];

        (*(void (**)(char *, uint64_t))(v45 + 8))(v11, v5);
        return;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v45 + 56))(v4, 1, 1, v5);
    }

    sub_10000CBC8((uint64_t)v4, &qword_1000A3270);
  }
  else
  {
  }
LABEL_20:
  if (qword_1000A3228 != -1) {
    swift_once();
  }
  uint64_t v36 = sub_10007C2E0();
  sub_100010740(v36, (uint64_t)qword_1000A5340);
  id v37 = a1;
  uint64_t v38 = sub_10007C2D0();
  os_log_type_t v39 = sub_10007D050();
  if (os_log_type_enabled(v38, v39))
  {
    uint64_t v40 = (uint8_t *)swift_slowAlloc();
    uint64_t v41 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v40 = 138412290;
    id v42 = [v37 objectID];
    id v46 = v42;
    sub_10007D0F0();
    *uint64_t v41 = v42;

    _os_log_impl((void *)&_mh_execute_header, v38, v39, "No note in folder — returning nil intent note {objectID: %@}", v40, 0xCu);
    sub_100008FA4(&qword_1000A3648);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

id sub_10005006C(void *a1)
{
  uint64_t v2 = sub_100008FA4(&qword_1000A3270);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10007C110();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v36 - v10;
  if (qword_1000A3200 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_100008FA4(&qword_1000A4B68);
  sub_100010740(v12, (uint64_t)qword_1000A4F18);
  swift_beginAccess();
  sub_10007C210();
  uint64_t v13 = v38;
  swift_endAccess();
  if (!v13) {
    goto LABEL_18;
  }
  id v14 = [v13 allVisibleNotesInCollection:a1 sorted:1];

  if (!v14) {
    goto LABEL_18;
  }
  uint64_t v15 = sub_10007CFD0();

  if (*(void *)(v15 + 16))
  {
    sub_100037B7C(v15 + 32, (uint64_t)&v36);
  }
  else
  {
    long long v36 = 0u;
    long long v37 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v37 + 1))
  {
    uint64_t v22 = &qword_1000A3960;
    uint64_t v23 = (char *)&v36;
LABEL_17:
    sub_10000CBC8((uint64_t)v23, v22);
    goto LABEL_18;
  }
  sub_100011278(0, &qword_1000A4BB0);
  if (swift_dynamicCast())
  {
    uint64_t v16 = v38;
    id v17 = [self appURLForHTMLNote:v38];
    if (v17)
    {
      id v18 = v17;
      sub_10007C0E0();

      id v19 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      v19(v4, v9, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
      {
        v19(v11, v4, v5);
        sub_10007C0C0();
        id v20 = [v16 title];
        if (v20)
        {
          id v21 = v20;
          sub_10007CF40();
        }
        id v33 = objc_allocWithZone((Class)ICIntentNote);
        NSString v34 = sub_10007CF30();
        swift_bridgeObjectRelease();
        NSString v35 = sub_10007CF30();
        swift_bridgeObjectRelease();
        id v31 = [v33 initWithIdentifier:v34 displayString:v35];

        (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
        return v31;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    }

    uint64_t v22 = &qword_1000A3270;
    uint64_t v23 = v4;
    goto LABEL_17;
  }
LABEL_18:
  if (qword_1000A3228 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_10007C2E0();
  sub_100010740(v24, (uint64_t)qword_1000A5340);
  id v25 = a1;
  uint64_t v26 = sub_10007C2D0();
  os_log_type_t v27 = sub_10007D050();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    id v29 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v28 = 138412290;
    id v30 = [v25 objectID];
    *(void *)&long long v36 = v30;
    sub_10007D0F0();
    *id v29 = v30;

    _os_log_impl((void *)&_mh_execute_header, v26, v27, "No note in HTML folder — returning nil intent note {objectID: %@}", v28, 0xCu);
    sub_100008FA4(&qword_1000A3648);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  return 0;
}

uint64_t sub_1000505F4()
{
  uint64_t v1 = sub_10007CE40();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1000506C8(uint64_t a1)
{
  sub_10007CE40();
  uint64_t v3 = *(void (**)(char *))(v1 + 16);

  return sub_10004DB68(a1, v3);
}

uint64_t sub_100050740(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000507A8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100050808(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100050870@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v29 = a1;
  uint64_t v3 = sub_10007C700();
  uint64_t v27 = *(void *)(v3 - 8);
  uint64_t v28 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10007C800();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100008FA4(&qword_1000A54C8);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100008FA4(&qword_1000A54D0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_100008FA4(&qword_1000A54D8);
  uint64_t v16 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  id v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v12 = sub_10007C610();
  *((void *)v12 + 1) = 0;
  v12[16] = 0;
  uint64_t v19 = sub_100008FA4(&qword_1000A54E0);
  sub_100050C60(v2, (uint64_t)&v12[*(int *)(v19 + 44)]);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for Font.TextStyle.footnote(_:), v6);
  uint64_t v20 = sub_10007C790();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t KeyPath = swift_getKeyPath();
  sub_10000CB64((uint64_t)v12, (uint64_t)v15, &qword_1000A54C8);
  uint64_t v22 = (uint64_t *)&v15[*(int *)(v13 + 36)];
  *uint64_t v22 = KeyPath;
  v22[1] = v20;
  sub_10000CBC8((uint64_t)v12, &qword_1000A54C8);
  sub_10007C6F0();
  sub_10007CBF0();
  unint64_t v23 = sub_100060158();
  sub_10007C9A0();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v5, v28);
  sub_10000CBC8((uint64_t)v15, &qword_1000A54D0);
  uint64_t v30 = v13;
  id v31 = &type metadata for Color;
  unint64_t v32 = v23;
  id v33 = &protocol witness table for Color;
  swift_getOpaqueTypeConformance2();
  uint64_t v24 = v26;
  sub_10007C980();
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v24);
}

uint64_t sub_100050C60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v60 = a2;
  uint64_t v3 = sub_10007C6B0();
  uint64_t v54 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_100008FA4(&qword_1000A54F8);
  uint64_t v6 = *(void *)(v56 - 8);
  uint64_t v7 = __chkstk_darwin(v56);
  uint64_t v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v53 - v10;
  uint64_t v12 = sub_100008FA4(&qword_1000A5500);
  __chkstk_darwin(v12);
  uint64_t v14 = (uint64_t *)((char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v59 = sub_100008FA4(&qword_1000A5508);
  __chkstk_darwin(v59);
  uint64_t v55 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_100008FA4(&qword_1000A5510);
  __chkstk_darwin(v57);
  uint64_t v58 = (_OWORD *)((char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = sub_100008FA4(&qword_1000A49E0);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for NotesFolderWidgetView(0);
  sub_10000CB64(a1 + *(int *)(v20 + 28), (uint64_t)v19, &qword_1000A49E0);
  uint64_t v21 = sub_100008FA4(&qword_1000A49E8);
  int v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v19, 2, v21);
  if (v22)
  {
    if (v22 == 1)
    {
      sub_10005164C((uint64_t *)&v67);
      uint64_t v23 = v67;
      sub_10007C5A0();
      uint64_t v24 = sub_10007C8A0();
      uint64_t v26 = v25;
      char v28 = v27 & 1;
      sub_10005258C(v24, v25, v27 & 1, v29, (uint64_t *)&v67);
      sub_10000A610(v24, v26, v28);
      swift_bridgeObjectRelease();
      uint64_t v30 = v67;
      swift_retain();
      *uint64_t v14 = v23;
      v14[1] = v30;
      swift_retain();
      swift_storeEnumTagMultiPayload();
      sub_100008FA4(&qword_1000A5538);
      sub_10000CAB4(&qword_1000A5540, &qword_1000A5538);
      uint64_t v31 = sub_10000A43C(&qword_1000A5518);
      unint64_t v32 = sub_10006021C();
      *(void *)&long long v67 = v31;
      *((void *)&v67 + 1) = v32;
      swift_getOpaqueTypeConformance2();
      uint64_t v33 = (uint64_t)v55;
      sub_10007C650();
      sub_10000CB64(v33, (uint64_t)v58, &qword_1000A5508);
      swift_storeEnumTagMultiPayload();
      sub_100008FA4(&qword_1000A5548);
      sub_1000602B4();
      sub_10006034C();
      sub_10007C650();
      sub_10000CBC8(v33, &qword_1000A5508);
      swift_release();
      return swift_release();
    }
    else
    {
      sub_100053144(a1, (uint64_t)&v67);
      long long v61 = v67;
      uint64_t v62 = v68;
      char v63 = v69;
      long long v64 = v70;
      long long v65 = v71;
      char v66 = v72;
      sub_10007C690();
      uint64_t v39 = sub_100008FA4(&qword_1000A5518);
      unint64_t v40 = sub_10006021C();
      sub_10007C9B0();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v5, v3);
      swift_release();
      swift_release();
      uint64_t v41 = v56;
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v9, v56);
      (*(void (**)(void *, char *, uint64_t))(v6 + 16))(v14, v11, v41);
      swift_storeEnumTagMultiPayload();
      sub_100008FA4(&qword_1000A5538);
      sub_10000CAB4(&qword_1000A5540, &qword_1000A5538);
      *(void *)&long long v67 = v39;
      *((void *)&v67 + 1) = v40;
      swift_getOpaqueTypeConformance2();
      uint64_t v42 = (uint64_t)v55;
      sub_10007C650();
      sub_10000CB64(v42, (uint64_t)v58, &qword_1000A5508);
      swift_storeEnumTagMultiPayload();
      sub_100008FA4(&qword_1000A5548);
      sub_1000602B4();
      sub_10006034C();
      sub_10007C650();
      sub_10000CBC8(v42, &qword_1000A5508);
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v41);
    }
  }
  else if (*(void *)(*(void *)&v19[*(int *)(v21 + 48)] + 16))
  {
    sub_10005164C((uint64_t *)&v67);
    uint64_t v35 = v67;
    sub_100052D64((uint64_t *)&v67);
    uint64_t v36 = v67;
    swift_retain();
    swift_retain();
    *(void *)&long long v61 = v35;
    *((void *)&v61 + 1) = v36;
    LOBYTE(v62) = 1;
    sub_100008FA4(&qword_1000A5538);
    sub_10000CAB4(&qword_1000A5540, &qword_1000A5538);
    sub_10007C650();
    char v37 = v68;
    uint64_t v38 = v58;
    *uint64_t v58 = v67;
    *((unsigned char *)v38 + 16) = v37;
    swift_storeEnumTagMultiPayload();
    sub_100008FA4(&qword_1000A5548);
    sub_1000602B4();
    sub_10006034C();
    sub_10007C650();
    swift_release();
    swift_release();
    return sub_10000CBC8((uint64_t)v19, &qword_1000A49E8);
  }
  else
  {
    sub_10005164C((uint64_t *)&v67);
    uint64_t v43 = v67;
    sub_10007C5A0();
    uint64_t v44 = sub_10007C8A0();
    uint64_t v46 = v45;
    char v48 = v47 & 1;
    sub_10005258C(v44, v45, v47 & 1, v49, (uint64_t *)&v67);
    sub_10000A610(v44, v46, v48);
    swift_bridgeObjectRelease();
    uint64_t v50 = v67;
    swift_retain();
    swift_retain();
    *(void *)&long long v61 = v43;
    *((void *)&v61 + 1) = v50;
    LOBYTE(v62) = 0;
    sub_100008FA4(&qword_1000A5538);
    sub_10000CAB4(&qword_1000A5540, &qword_1000A5538);
    sub_10007C650();
    char v51 = v68;
    uint64_t v52 = v58;
    *uint64_t v58 = v67;
    *((unsigned char *)v52 + 16) = v51;
    swift_storeEnumTagMultiPayload();
    sub_100008FA4(&qword_1000A5548);
    sub_1000602B4();
    sub_10006034C();
    sub_10007C650();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return sub_100061BB4((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for NotesFolder);
  }
}

uint64_t sub_10005164C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v126 = a1;
  uint64_t v2 = sub_10007C180();
  uint64_t v121 = *(void (***)(char *, char *))(v2 - 8);
  uint64_t v122 = (char *)v2;
  __chkstk_darwin(v2);
  uint64_t v120 = (char *)&v109 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10007C6B0();
  uint64_t v131 = *(void *)(v4 - 8);
  uint64_t v132 = v4;
  __chkstk_darwin(v4);
  id v130 = (char *)&v109 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100008FA4(&qword_1000A4898);
  __chkstk_darwin(v6 - 8);
  uint64_t v128 = (uint64_t *)((char *)&v109 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v113 = sub_10007CD30();
  uint64_t v111 = *(void *)(v113 - 8);
  uint64_t v8 = __chkstk_darwin(v113);
  uint64_t v112 = (char *)&v109 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v114 = (char *)&v109 - v10;
  uint64_t v11 = type metadata accessor for NotesFolderWidgetView(0);
  __chkstk_darwin(v11);
  uint64_t v116 = (uint64_t)&v109 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100008FA4(&qword_1000A3270);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v123 = (char *)&v109 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v118 = (uint64_t)&v109 - v16;
  uint64_t v125 = type metadata accessor for WidgetHeader();
  uint64_t v17 = __chkstk_darwin(v125);
  uint64_t v119 = (uint64_t *)((char *)&v109 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v17);
  uint64_t v20 = (void (**)(char *, char *))((char *)&v109 - v19);
  uint64_t v129 = sub_100008FA4(&qword_1000A57B8);
  uint64_t v117 = *(void *)(v129 - 8);
  uint64_t v21 = __chkstk_darwin(v129);
  uint64_t v124 = (char *)&v109 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v109 - v23;
  uint64_t v25 = sub_100008FA4(&qword_1000A57C0);
  __chkstk_darwin(v25);
  char v27 = (char *)&v109 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = type metadata accessor for NotesFolder();
  uint64_t v28 = __chkstk_darwin(v127);
  uint64_t v30 = (char *)&v109 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  unint64_t v32 = (char *)&v109 - v31;
  uint64_t v33 = sub_100008FA4(&qword_1000A49E0);
  __chkstk_darwin(v33 - 8);
  uint64_t v35 = (char *)&v109 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = *(int *)(v11 + 28);
  uint64_t v115 = v1;
  sub_10000CB64(v1 + v36, (uint64_t)v35, &qword_1000A49E0);
  uint64_t v37 = sub_100008FA4(&qword_1000A49E8);
  int v38 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 48))(v35, 2, v37);
  if (v38)
  {
    if (v38 == 1)
    {
      uint64_t v39 = sub_10007C110();
      unint64_t v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56);
      uint64_t v41 = (uint64_t)v123;
      v40(v123, 1, 1, v39);
      uint64_t v42 = v120;
      sub_10007C170();
      uint64_t v43 = sub_10007C160();
      uint64_t v45 = v44;
      v121[1](v42, v122);
      *(void *)uint64_t v30 = v43;
      *((void *)v30 + 1) = v45;
      *((void *)v30 + 2) = 0;
      *((void *)v30 + 3) = 0xE000000000000000;
      v30[32] = 0;
      *((void *)v30 + 5) = 0;
      *((void *)v30 + 6) = 0;
      uint64_t v46 = v127;
      v40(&v30[*(int *)(v127 + 32)], 1, 1, v39);
      uint64_t v47 = *(int *)(v46 + 36);
      id v48 = [self defaultSystemImageName];
      sub_10007CF40();

      uint64_t v49 = sub_10007CAE0();
      *(void *)&v30[v47] = v49;
      *(void *)&v30[*(int *)(v46 + 40)] = _swiftEmptyArrayStorage;
      swift_retain();
      sub_100061BB4((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for NotesFolder);
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v51 = swift_getKeyPath();
      uint64_t v52 = (uint64_t)v128;
      uint64_t *v128 = v51;
      sub_100008FA4(&qword_1000A48A0);
      swift_storeEnumTagMultiPayload();
      uint64_t v53 = swift_getKeyPath();
      uint64_t v54 = (uint64_t)v119;
      *uint64_t v119 = v53;
      sub_100008FA4(&qword_1000A4CD0);
      swift_storeEnumTagMultiPayload();
      uint64_t v55 = (int *)v125;
      uint64_t v56 = (uint64_t *)(v54 + *(int *)(v125 + 20));
      *uint64_t v56 = swift_getKeyPath();
      sub_100008FA4(&qword_1000A3360);
      swift_storeEnumTagMultiPayload();
      uint64_t v57 = v54 + v55[6];
      *(void *)uint64_t v57 = KeyPath;
      *(unsigned char *)(v57 + 8) = 0;
      sub_10000CB00(v52, v54 + v55[7], &qword_1000A4898);
      sub_10000CB00(v41, v54 + v55[8], &qword_1000A3270);
      *(void *)(v54 + v55[9]) = v49;
      *(_OWORD *)(v54 + v55[10]) = xmmword_100085F00;
    }
    else
    {
      uint64_t v75 = sub_10007C110();
      uint64_t v76 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56);
      uint64_t v77 = (uint64_t)v123;
      v76(v123, 1, 1, v75);
      uint64_t v78 = v120;
      sub_10007C170();
      uint64_t v79 = sub_10007C160();
      uint64_t v81 = v80;
      v121[1](v78, v122);
      *(void *)uint64_t v30 = v79;
      *((void *)v30 + 1) = v81;
      *((void *)v30 + 2) = 0;
      *((void *)v30 + 3) = 0xE000000000000000;
      v30[32] = 0;
      *((void *)v30 + 5) = 0;
      *((void *)v30 + 6) = 0;
      uint64_t v82 = v127;
      v76(&v30[*(int *)(v127 + 32)], 1, 1, v75);
      uint64_t v83 = *(int *)(v82 + 36);
      id v84 = [self defaultSystemImageName];
      sub_10007CF40();

      uint64_t v85 = sub_10007CAE0();
      *(void *)&v30[v83] = v85;
      *(void *)&v30[*(int *)(v82 + 40)] = _swiftEmptyArrayStorage;
      swift_retain();
      sub_100061BB4((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for NotesFolder);
      uint64_t v86 = swift_getKeyPath();
      uint64_t v87 = swift_getKeyPath();
      uint64_t v88 = (uint64_t)v128;
      uint64_t *v128 = v87;
      sub_100008FA4(&qword_1000A48A0);
      swift_storeEnumTagMultiPayload();
      uint64_t v89 = swift_getKeyPath();
      uint64_t v54 = (uint64_t)v119;
      *uint64_t v119 = v89;
      sub_100008FA4(&qword_1000A4CD0);
      swift_storeEnumTagMultiPayload();
      uint64_t v55 = (int *)v125;
      uint64_t v90 = (uint64_t *)(v54 + *(int *)(v125 + 20));
      *uint64_t v90 = swift_getKeyPath();
      sub_100008FA4(&qword_1000A3360);
      swift_storeEnumTagMultiPayload();
      uint64_t v91 = v54 + v55[6];
      *(void *)uint64_t v91 = v86;
      *(unsigned char *)(v91 + 8) = 0;
      sub_10000CB00(v88, v54 + v55[7], &qword_1000A4898);
      sub_10000CB00(v77, v54 + v55[8], &qword_1000A3270);
      *(void *)(v54 + v55[9]) = v85;
      uint64_t v92 = (void *)(v54 + v55[10]);
      *uint64_t v92 = 0;
      v92[1] = 0;
    }
    *(void *)(v54 + v55[11]) = 0;
    uint64_t v93 = v130;
    sub_10007C690();
    uint64_t v94 = sub_10006114C(&qword_1000A57C8, (void (*)(uint64_t))type metadata accessor for WidgetHeader);
    sub_10007C9B0();
    (*(void (**)(char *, uint64_t))(v131 + 8))(v93, v132);
    sub_100061BB4(v54, (uint64_t (*)(void))type metadata accessor for WidgetHeader);
    uint64_t v133 = v55;
    uint64_t v134 = v94;
    swift_getOpaqueTypeConformance2();
    uint64_t result = sub_10007CB60();
    uint64_t v96 = result;
    long long v71 = v126;
  }
  else
  {
    uint64_t v121 = v20;
    uint64_t v58 = (uint64_t)v114;
    uint64_t v122 = v24;
    uint64_t v123 = v27;
    uint64_t v124 = (char *)v25;
    swift_bridgeObjectRelease();
    sub_100061378((uint64_t)v35, (uint64_t)v32, (uint64_t (*)(void))type metadata accessor for NotesFolder);
    uint64_t v59 = v127;
    sub_10000CB64((uint64_t)&v32[*(int *)(v127 + 32)], v118, &qword_1000A3270);
    uint64_t v60 = *(void *)&v32[*(int *)(v59 + 36)];
    long long v61 = (uint64_t *)*((void *)v32 + 3);
    uint64_t v120 = (char *)*((void *)v32 + 2);
    int v62 = v32[32];
    uint64_t v63 = v116;
    sub_10006130C(v115, v116, type metadata accessor for NotesFolderWidgetView);
    uint64_t v110 = v32;
    if (v62 == 1)
    {
      uint64_t v115 = v60;
      swift_retain();
      uint64_t v119 = v61;
      swift_bridgeObjectRetain();
      sub_10003F1B8(v58);
      uint64_t v64 = v111;
      long long v65 = v112;
      uint64_t v66 = v63;
      uint64_t v67 = v113;
      (*(void (**)(char *, void, uint64_t))(v111 + 104))(v112, enum case for WidgetFamily.systemSmall(_:), v113);
      sub_10006114C(&qword_1000A5560, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
      char v68 = sub_10007CF00();
      char v69 = *(void (**)(char *, uint64_t))(v64 + 8);
      v69(v65, v67);
      v69((char *)v58, v67);
      sub_100061BB4(v66, type metadata accessor for NotesFolderWidgetView);
      long long v70 = (int *)v125;
      long long v71 = v126;
      unint64_t v73 = (uint64_t *)v121;
      char v72 = v122;
      uint64_t v74 = v120;
      if (v68)
      {
        uint64_t v127 = 0;
      }
      else
      {
        uint64_t v133 = *(int **)&v32[*(int *)(v59 + 40)];
        sub_100061EF0();
        swift_bridgeObjectRetain();
        uint64_t v127 = sub_10007CB60();
      }
      uint64_t v97 = v119;
      uint64_t v60 = v115;
      id v98 = v74;
    }
    else
    {
      swift_retain();
      swift_bridgeObjectRetain();
      sub_100061BB4(v63, type metadata accessor for NotesFolderWidgetView);
      uint64_t v127 = 0;
      long long v70 = (int *)v125;
      long long v71 = v126;
      uint64_t v97 = v61;
      unint64_t v73 = (uint64_t *)v121;
      char v72 = v122;
      id v98 = v120;
    }
    uint64_t v99 = swift_getKeyPath();
    uint64_t v100 = swift_getKeyPath();
    uint64_t v101 = (uint64_t)v128;
    uint64_t *v128 = v100;
    sub_100008FA4(&qword_1000A48A0);
    swift_storeEnumTagMultiPayload();
    *unint64_t v73 = swift_getKeyPath();
    sub_100008FA4(&qword_1000A4CD0);
    swift_storeEnumTagMultiPayload();
    unint64_t v102 = (uint64_t *)((char *)v73 + v70[5]);
    *unint64_t v102 = swift_getKeyPath();
    sub_100008FA4(&qword_1000A3360);
    swift_storeEnumTagMultiPayload();
    uint64_t v103 = (char *)v73 + v70[6];
    *(void *)uint64_t v103 = v99;
    v103[8] = 0;
    sub_10000CB00(v101, (uint64_t)v73 + v70[7], &qword_1000A4898);
    sub_10000CB00(v118, (uint64_t)v73 + v70[8], &qword_1000A3270);
    *(uint64_t *)((char *)v73 + v70[9]) = v60;
    unint64_t v104 = (uint64_t *)((char *)v73 + v70[10]);
    *unint64_t v104 = v98;
    v104[1] = v97;
    *(uint64_t *)((char *)v73 + v70[11]) = v127;
    uint64_t v105 = v130;
    sub_10007C690();
    uint64_t v106 = sub_10006114C(&qword_1000A57C8, (void (*)(uint64_t))type metadata accessor for WidgetHeader);
    sub_10007C9B0();
    (*(void (**)(char *, uint64_t))(v131 + 8))(v105, v132);
    sub_100061BB4((uint64_t)v73, (uint64_t (*)(void))type metadata accessor for WidgetHeader);
    uint64_t v107 = (uint64_t)v110;
    sub_10000CD98();
    uint64_t v133 = v70;
    uint64_t v134 = v106;
    swift_getOpaqueTypeConformance2();
    uint64_t v108 = v129;
    sub_10007C950();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v117 + 8))(v72, v108);
    sub_100061DE4();
    uint64_t v96 = sub_10007CB60();
    uint64_t result = sub_100061BB4(v107, (uint64_t (*)(void))type metadata accessor for NotesFolder);
  }
  *long long v71 = v96;
  return result;
}

uint64_t sub_10005258C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v65 = a2;
  uint64_t v66 = a4;
  int v63 = a3;
  uint64_t v64 = a1;
  uint64_t v67 = a5;
  uint64_t v6 = sub_100008FA4(&qword_1000A56C8);
  __chkstk_darwin(v6 - 8);
  uint64_t v52 = (uint64_t *)((char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v51 = sub_100008FA4(&qword_1000A56D0);
  __chkstk_darwin(v51);
  uint64_t v53 = (uint64_t)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_100008FA4(&qword_1000A56D8);
  __chkstk_darwin(v57);
  uint64_t v55 = (uint64_t)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_100008FA4(&qword_1000A56E0);
  __chkstk_darwin(v56);
  uint64_t v54 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10007C6B0();
  uint64_t v61 = *(void *)(v11 - 8);
  uint64_t v62 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100008FA4(&qword_1000A56E8);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100008FA4(&qword_1000A56F0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_100008FA4(&qword_1000A56F8);
  __chkstk_darwin(v60);
  uint64_t v21 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_100008FA4(&qword_1000A5700);
  __chkstk_darwin(v59);
  uint64_t v58 = (char *)&v51 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10007CD30();
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v51 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for NotesFolderWidgetView(0);
  sub_10003F1B8((uint64_t)v26);
  int v27 = (*(uint64_t (**)(char *, uint64_t))(v24 + 88))(v26, v23);
  if (v27 == enum case for WidgetFamily.systemSmall(_:))
  {
    *(void *)uint64_t v16 = sub_10007C600();
    *((void *)v16 + 1) = 0;
    v16[16] = 0;
    uint64_t v28 = sub_100008FA4(&qword_1000A5728);
    sub_100055F08(v64, v65, v63 & 1, v66, v5, (uint64_t)&v16[*(int *)(v28 + 44)]);
    char v29 = sub_10007C730();
    sub_10000CB64((uint64_t)v16, (uint64_t)v19, &qword_1000A56E8);
    uint64_t v30 = &v19[*(int *)(v17 + 36)];
    *uint64_t v30 = v29;
    *(_OWORD *)(v30 + 8) = 0u;
    *(_OWORD *)(v30 + 24) = 0u;
    v30[40] = 1;
    sub_10000CBC8((uint64_t)v16, &qword_1000A56E8);
    uint64_t v31 = sub_10007CBF0();
    sub_100070898(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v21, 0.0, 1, 0.0, 1, v31, v32);
    sub_10000CBC8((uint64_t)v19, &qword_1000A56F0);
    sub_10007C6A0();
    uint64_t v33 = sub_100068BD4(&qword_1000A5730, &qword_1000A56F8, (void (*)(void))sub_100061CB4);
    uint64_t v34 = v60;
    sub_10007C9B0();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v13, v62);
    sub_10000CBC8((uint64_t)v21, &qword_1000A56F8);
    uint64_t v68 = v34;
    uint64_t v69 = v33;
    swift_getOpaqueTypeConformance2();
  }
  else
  {
    char v35 = v63;
    uint64_t v36 = v64;
    uint64_t v37 = v65;
    uint64_t v38 = v66;
    if (v27 != enum case for WidgetFamily.systemMedium(_:)
      && v27 != enum case for WidgetFamily.systemLarge(_:)
      && v27 != enum case for WidgetFamily.systemExtraLarge(_:))
    {
      uint64_t *v67 = sub_10007CB60();
      return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v26, v23);
    }
    uint64_t v40 = sub_10007C600();
    uint64_t v41 = (uint64_t)v52;
    uint64_t *v52 = v40;
    *(void *)(v41 + 8) = 0;
    *(unsigned char *)(v41 + 16) = 1;
    uint64_t v42 = sub_100008FA4(&qword_1000A5708);
    sub_1000566F8(v36, v37, v35 & 1, v38, v5, v41 + *(int *)(v42 + 44));
    char v43 = sub_10007C730();
    uint64_t v44 = v53;
    sub_10000CB64(v41, v53, &qword_1000A56C8);
    uint64_t v45 = v44 + *(int *)(v51 + 36);
    *(unsigned char *)uint64_t v45 = v43;
    *(_OWORD *)(v45 + 8) = 0u;
    *(_OWORD *)(v45 + 24) = 0u;
    *(unsigned char *)(v45 + 40) = 1;
    sub_10000CBC8(v41, &qword_1000A56C8);
    uint64_t v46 = sub_10007CBF0();
    uint64_t v47 = v55;
    sub_1000708F4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v55, 0.0, 1, 0.0, 1, v46, v48);
    sub_10000CBC8(v44, &qword_1000A56D0);
    sub_10007C6A0();
    uint64_t v49 = sub_100068BD4(&qword_1000A5710, &qword_1000A56D8, (void (*)(void))sub_100061C14);
    uint64_t v50 = v57;
    sub_10007C9B0();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v13, v62);
    sub_10000CBC8(v47, &qword_1000A56D8);
    uint64_t v68 = v50;
    uint64_t v69 = v49;
    swift_getOpaqueTypeConformance2();
  }
  uint64_t result = sub_10007CB60();
  uint64_t *v67 = result;
  return result;
}

uint64_t sub_100052D64@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = sub_10007CD30();
  uint64_t v32 = *(void *)(v3 - 8);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v29 - v7;
  uint64_t v9 = type metadata accessor for NotesFolderWidgetView(0);
  uint64_t v31 = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v31 + 64);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100008FA4(&qword_1000A49E0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000CB64(v1 + *(int *)(v9 + 28), (uint64_t)v14, &qword_1000A49E0);
  uint64_t v15 = sub_100008FA4(&qword_1000A49E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 2, v15))
  {
    uint64_t result = sub_10007CB60();
    uint64_t v17 = result;
  }
  else
  {
    uint64_t v30 = *(void *)&v14[*(int *)(v15 + 48)];
    sub_10006130C(v1, (uint64_t)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for NotesFolderWidgetView);
    uint64_t v18 = a1;
    unint64_t v19 = (*(unsigned __int8 *)(v31 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = v30;
    uint64_t v21 = v20 + v19;
    a1 = v18;
    sub_100061378((uint64_t)v11, v21, type metadata accessor for NotesFolderWidgetView);
    char v22 = sub_10007C750();
    sub_10003F1B8((uint64_t)v8);
    uint64_t v23 = v32;
    (*(void (**)(char *, void, uint64_t))(v32 + 104))(v6, enum case for WidgetFamily.systemSmall(_:), v3);
    sub_10006114C(&qword_1000A5560, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
    sub_10007CF00();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v23 + 8);
    v24(v6, v3);
    v24(v8, v3);
    sub_10007C340();
    uint64_t v33 = sub_1000606E0;
    uint64_t v34 = v20;
    char v35 = v22;
    uint64_t v36 = v25;
    uint64_t v37 = v26;
    uint64_t v38 = v27;
    uint64_t v39 = v28;
    char v40 = 0;
    sub_100008FA4(&qword_1000A5568);
    sub_100060764();
    uint64_t v17 = sub_10007CB60();
    uint64_t result = sub_100061BB4((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for NotesFolder);
  }
  *a1 = v17;
  return result;
}

uint64_t sub_100053144@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10007CD30();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v23 - v9;
  uint64_t v11 = type metadata accessor for NotesFolderWidgetView(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005164C(&v24);
  uint64_t v23 = v24;
  sub_10006130C(a1, (uint64_t)v14, type metadata accessor for NotesFolderWidgetView);
  unint64_t v15 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v16 = swift_allocObject();
  sub_100061378((uint64_t)v14, v16 + v15, type metadata accessor for NotesFolderWidgetView);
  LOBYTE(v15) = sub_10007C750();
  sub_10003F1B8((uint64_t)v10);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v8, enum case for WidgetFamily.systemSmall(_:), v4);
  sub_10006114C(&qword_1000A5560, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  sub_10007CF00();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v5 + 8);
  v17(v8, v4);
  v17(v10, v4);
  uint64_t result = sub_10007C340();
  *(void *)a2 = v23;
  *(void *)(a2 + 8) = sub_1000621F4;
  *(void *)(a2 + 16) = v16;
  *(unsigned char *)(a2 + 24) = v15;
  *(void *)(a2 + 32) = v19;
  *(void *)(a2 + 40) = v20;
  *(void *)(a2 + 48) = v21;
  *(void *)(a2 + 56) = v22;
  *(unsigned char *)(a2 + 64) = 0;
  return result;
}

uint64_t sub_10005340C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10007C5F0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100008FA4(&qword_1000A57E0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v10 = sub_10007C600();
  *((void *)v10 + 1) = 0;
  v10[16] = 0;
  uint64_t v11 = sub_100008FA4(&qword_1000A57E8);
  sub_1000535D8(a2, a1, &v10[*(int *)(v11 + 44)]);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for ContentSizeCategory.accessibilityMedium(_:), v4);
  sub_10000CAB4(&qword_1000A57F0, &qword_1000A57E0);
  sub_10007C8E0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return sub_10000CBC8((uint64_t)v10, &qword_1000A57E0);
}

uint64_t sub_1000535D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v44 = (char *)a2;
  uint64_t v49 = a3;
  uint64_t v4 = sub_10007CD30();
  uint64_t v45 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v41 - v8;
  uint64_t v10 = sub_10007C3C0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v43 = v12;
  uint64_t v13 = (char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for NotesFolderWidgetView(0);
  uint64_t v42 = *(void *)(v46 - 8);
  uint64_t v14 = *(void *)(v42 + 64);
  __chkstk_darwin(v46);
  unint64_t v15 = (char *)v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100008FA4(&qword_1000A57F8);
  uint64_t v50 = *(void *)(v16 - 8);
  uint64_t v51 = v16;
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v48 = (char *)v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v47 = (char *)v41 - v19;
  uint64_t result = sub_100053ADC();
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v41[0] = result;
    v41[1] = a1;
    sub_10006130C(a1, (uint64_t)v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for NotesFolderWidgetView);
    uint64_t v21 = v10;
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v44, v10);
    uint64_t v22 = *(unsigned __int8 *)(v42 + 80);
    uint64_t v23 = v45;
    uint64_t v44 = v9;
    uint64_t v24 = v4;
    uint64_t v25 = (v22 + 16) & ~v22;
    unint64_t v26 = (v14 + *(unsigned __int8 *)(v11 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v27 = swift_allocObject();
    sub_100061378((uint64_t)v15, v27 + v25, type metadata accessor for NotesFolderWidgetView);
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v27 + v26, v13, v21);
    sub_100008FA4(&qword_1000A5800);
    sub_10006265C();
    uint64_t v28 = v47;
    sub_10007CBA0();
    uint64_t v29 = (uint64_t)v44;
    sub_10003F1B8((uint64_t)v44);
    (*(void (**)(char *, void, uint64_t))(v23 + 104))(v7, enum case for WidgetFamily.systemSmall(_:), v24);
    sub_10006114C(&qword_1000A5560, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
    char v30 = sub_10007CF00();
    uint64_t v31 = *(void (**)(char *, uint64_t))(v23 + 8);
    v31(v7, v24);
    v31((char *)v29, v24);
    int v32 = v30 & 1;
    if (v32) {
      uint64_t v33 = 0;
    }
    else {
      uint64_t v33 = 0x4010000000000000;
    }
    uint64_t v35 = v50;
    uint64_t v34 = v51;
    uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v50 + 16);
    uint64_t v37 = v48;
    v36(v48, v28, v51);
    uint64_t v38 = v49;
    v36(v49, v37, v34);
    uint64_t v39 = &v38[*(int *)(sub_100008FA4(&qword_1000A5820) + 48)];
    *(void *)uint64_t v39 = v33;
    v39[8] = 0;
    v39[9] = v32;
    char v40 = *(void (**)(char *, uint64_t))(v35 + 8);
    v40(v28, v34);
    return ((uint64_t (*)(char *, uint64_t))v40)(v37, v34);
  }
  return result;
}

uint64_t sub_100053ADC()
{
  uint64_t v1 = sub_10007CD30();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v62 = v1;
  uint64_t v63 = v2;
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v60 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v58 = (uint64_t)&v56 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v61 = (char *)&v56 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v59 = (uint64_t)&v56 - v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v56 - v11;
  uint64_t v13 = sub_100008FA4(&qword_1000A49E8);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v56 - v18;
  uint64_t v20 = sub_100008FA4(&qword_1000A49E0);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for NotesFolderWidgetView(0);
  sub_10000CB64(v0 + *(int *)(v23 + 28), (uint64_t)v22, &qword_1000A49E0);
  int v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v22, 2, v13);
  if (v24)
  {
    uint64_t v26 = v62;
    uint64_t v25 = v63;
    uint64_t v27 = 0;
    if (v24 != 1)
    {
      uint64_t v28 = (uint64_t)v60;
      sub_10003F1B8((uint64_t)v60);
      int v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 88))(v28, v26);
      if (v29 == enum case for WidgetFamily.systemSmall(_:))
      {
        return 1;
      }
      else if (v29 == enum case for WidgetFamily.systemMedium(_:))
      {
        return 3;
      }
      else if (v29 == enum case for WidgetFamily.systemLarge(_:))
      {
        return 6;
      }
      else if (v29 == enum case for WidgetFamily.systemExtraLarge(_:))
      {
        return 8;
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v28, v26);
        return 0;
      }
    }
  }
  else
  {
    uint64_t v30 = (uint64_t)v61;
    uint64_t v57 = v17;
    uint64_t v31 = *(int *)(v13 + 48);
    sub_100061378((uint64_t)v22, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for NotesFolder);
    uint64_t v32 = *(void *)&v22[v31];
    *(void *)&v19[v31] = v32;
    swift_bridgeObjectRetain();
    sub_10003F1B8((uint64_t)v12);
    uint64_t v33 = v63;
    uint64_t v34 = *(uint64_t (**)(char *, uint64_t))(v63 + 88);
    uint64_t v60 = v12;
    uint64_t v35 = v12;
    uint64_t v36 = v62;
    int v37 = v34(v35, v62);
    int v38 = v37;
    if (v37 == enum case for WidgetFamily.systemSmall(_:))
    {
      swift_bridgeObjectRelease();
      uint64_t v39 = v59;
      sub_10003F1B8(v59);
      int v40 = v34((char *)v39, v36);
      if (v40 == v38)
      {
        uint64_t v27 = 1;
      }
      else if (v40 == enum case for WidgetFamily.systemMedium(_:))
      {
        uint64_t v27 = 3;
      }
      else if (v40 == enum case for WidgetFamily.systemLarge(_:))
      {
        uint64_t v27 = 6;
      }
      else if (v40 == enum case for WidgetFamily.systemExtraLarge(_:))
      {
        uint64_t v27 = 8;
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v39, v36);
        uint64_t v27 = 0;
      }
      sub_10000CBC8((uint64_t)v19, &qword_1000A49E8);
    }
    else
    {
      int v41 = enum case for WidgetFamily.systemMedium(_:);
      if (v37 == enum case for WidgetFamily.systemMedium(_:)
        || v37 == enum case for WidgetFamily.systemLarge(_:)
        || v37 == enum case for WidgetFamily.systemExtraLarge(_:))
      {
        LODWORD(v59) = enum case for WidgetFamily.systemLarge(_:);
        LODWORD(v58) = enum case for WidgetFamily.systemExtraLarge(_:);
        uint64_t v50 = *(int *)(v13 + 48);
        uint64_t v51 = (uint64_t)v57;
        LODWORD(v60) = enum case for WidgetFamily.systemSmall(_:);
        sub_10006130C((uint64_t)v19, (uint64_t)v57, (uint64_t (*)(void))type metadata accessor for NotesFolder);
        *(void *)(v51 + v50) = v32;
        unint64_t v52 = *(void *)(v32 + 16);
        swift_bridgeObjectRelease();
        sub_10003F1B8(v30);
        int v53 = v34((char *)v30, v36);
        if (v53 == v60)
        {
          uint64_t v27 = v52 != 0;
        }
        else if (v53 == v41)
        {
          if (v52 >= 3) {
            uint64_t v27 = 3;
          }
          else {
            uint64_t v27 = v52;
          }
        }
        else if (v53 == v59)
        {
          if (v52 >= 6) {
            uint64_t v27 = 6;
          }
          else {
            uint64_t v27 = v52;
          }
        }
        else if (v53 == v58)
        {
          if (v52 >= 8) {
            uint64_t v27 = 8;
          }
          else {
            uint64_t v27 = v52;
          }
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v30, v36);
          uint64_t v27 = 0;
        }
        sub_10000CBC8((uint64_t)v19, &qword_1000A49E8);
        sub_100061BB4((uint64_t)v57, (uint64_t (*)(void))type metadata accessor for NotesFolder);
      }
      else
      {
        int v42 = enum case for WidgetFamily.systemLarge(_:);
        int v43 = enum case for WidgetFamily.systemExtraLarge(_:);
        int v44 = enum case for WidgetFamily.systemSmall(_:);
        swift_bridgeObjectRelease();
        uint64_t v45 = v58;
        sub_10003F1B8(v58);
        int v46 = v34((char *)v45, v36);
        if (v46 == v44)
        {
          uint64_t v47 = v63;
          uint64_t v48 = v36;
          uint64_t v27 = 1;
          uint64_t v49 = (uint64_t)v60;
        }
        else if (v46 == v41)
        {
          uint64_t v47 = v63;
          uint64_t v48 = v36;
          uint64_t v27 = 3;
          uint64_t v49 = (uint64_t)v60;
        }
        else
        {
          uint64_t v49 = (uint64_t)v60;
          if (v46 == v42)
          {
            uint64_t v47 = v63;
            uint64_t v48 = v36;
            uint64_t v27 = 6;
          }
          else
          {
            uint64_t v47 = v63;
            if (v46 == v43)
            {
              uint64_t v48 = v36;
              uint64_t v27 = 8;
            }
            else
            {
              uint64_t v54 = v45;
              uint64_t v48 = v36;
              (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v54, v36);
              uint64_t v27 = 0;
            }
          }
        }
        sub_10000CBC8((uint64_t)v19, &qword_1000A49E8);
        (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v49, v48);
      }
    }
  }
  return v27;
}

uint64_t sub_1000541B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_100008FA4(&qword_1000A5818);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v10 = sub_10007C600();
  *((void *)v10 + 1) = 0;
  v10[16] = 0;
  uint64_t v11 = sub_100008FA4(&qword_1000A5828);
  sub_1000542E8(a2, a1, (uint64_t)&v10[*(int *)(v11 + 44)]);
  sub_100055B24(a3);
  sub_10007CBF0();
  sub_10007C3A0();
  sub_10000CB64((uint64_t)v10, a4, &qword_1000A5818);
  uint64_t v12 = (_OWORD *)(a4 + *(int *)(sub_100008FA4(&qword_1000A5800) + 36));
  long long v13 = v15[1];
  *uint64_t v12 = v15[0];
  v12[1] = v13;
  void v12[2] = v15[2];
  return sub_10000CBC8((uint64_t)v10, &qword_1000A5818);
}

uint64_t sub_1000542E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v113 = a2;
  uint64_t v119 = a3;
  uint64_t v4 = sub_10007CB80();
  uint64_t v101 = *(void *)(v4 - 8);
  uint64_t v102 = v4;
  __chkstk_darwin(v4);
  uint64_t v100 = (char *)&v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = sub_100008FA4(&qword_1000A5608);
  uint64_t v115 = *(void *)(v117 - 8);
  __chkstk_darwin(v117);
  uint64_t v99 = (char *)&v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100008FA4(&qword_1000A5610);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v118 = (uint64_t)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v116 = (char *)&v89 - v10;
  uint64_t v91 = sub_100008FA4(&qword_1000A5830);
  __chkstk_darwin(v91);
  uint64_t v93 = (uint64_t)&v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_100008FA4(&qword_1000A5838);
  __chkstk_darwin(v105);
  uint64_t v94 = (char *)&v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = type metadata accessor for NotesFolderWidgetView.LargeNoteRow(0);
  uint64_t v13 = __chkstk_darwin(v92);
  uint64_t v90 = (uint64_t *)((char *)&v89 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  uint64_t v95 = (uint64_t)&v89 - v15;
  uint64_t v108 = type metadata accessor for NotesFolderWidgetView.MediumNoteRow(0);
  uint64_t v16 = __chkstk_darwin(v108);
  uint64_t v96 = (char *)&v89 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v97 = (uint64_t)&v89 - v18;
  uint64_t v111 = sub_100008FA4(&qword_1000A5840);
  __chkstk_darwin(v111);
  uint64_t v109 = (uint64_t)&v89 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_100008FA4(&qword_1000A5848);
  __chkstk_darwin(v103);
  uint64_t v110 = (uint64_t)&v89 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_100008FA4(&qword_1000A5850);
  __chkstk_darwin(v106);
  uint64_t v22 = (char *)&v89 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_100008FA4(&qword_1000A5858);
  __chkstk_darwin(v104);
  int v24 = (char *)&v89 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_100008FA4(&qword_1000A5860);
  __chkstk_darwin(v107);
  uint64_t v26 = (char *)&v89 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for NotesFolderWidgetView.SmallNoteRow(0);
  uint64_t v28 = __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v89 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  id v98 = (char *)&v89 - v31;
  uint64_t v32 = sub_10007CD30();
  uint64_t v33 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v35 = (char *)&v89 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_100008FA4(&qword_1000A5868);
  uint64_t v37 = __chkstk_darwin(v36 - 8);
  uint64_t v112 = (uint64_t)&v89 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  int v40 = (char *)&v89 - v39;
  type metadata accessor for NotesFolderWidgetView(0);
  uint64_t v114 = a1;
  sub_10003F1B8((uint64_t)v35);
  int v41 = (*(uint64_t (**)(char *, uint64_t))(v33 + 88))(v35, v32);
  if (v41 == enum case for WidgetFamily.systemSmall(_:))
  {
    *(void *)uint64_t v30 = swift_getKeyPath();
    v30[8] = 0;
    int v42 = &v30[*(int *)(v27 + 20)];
    uint64_t v43 = type metadata accessor for NotesFolder();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v42, 1, 1, v43);
    int v44 = &v30[*(int *)(v27 + 24)];
    uint64_t v45 = type metadata accessor for Note();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v44, 1, 1, v45);
    uint64_t v46 = (uint64_t)v98;
    sub_100061378((uint64_t)v30, (uint64_t)v98, type metadata accessor for NotesFolderWidgetView.SmallNoteRow);
    sub_10006130C(v46, (uint64_t)v22, type metadata accessor for NotesFolderWidgetView.SmallNoteRow);
    swift_storeEnumTagMultiPayload();
    sub_10006114C(&qword_1000A56B8, (void (*)(uint64_t))type metadata accessor for NotesFolderWidgetView.SmallNoteRow);
    sub_10006114C(&qword_1000A56B0, (void (*)(uint64_t))type metadata accessor for NotesFolderWidgetView.MediumNoteRow);
    sub_10007C650();
    sub_10000CB64((uint64_t)v24, v110, &qword_1000A5858);
    swift_storeEnumTagMultiPayload();
    sub_100062778();
    sub_100062854();
    sub_10007C650();
    sub_10000CBC8((uint64_t)v24, &qword_1000A5858);
    sub_10000CB64((uint64_t)v26, v109, &qword_1000A5860);
    swift_storeEnumTagMultiPayload();
    sub_1000626FC();
    sub_10007C650();
    sub_10000CBC8((uint64_t)v26, &qword_1000A5860);
    sub_100061BB4(v46, type metadata accessor for NotesFolderWidgetView.SmallNoteRow);
    uint64_t v47 = (uint64_t)v40;
  }
  else
  {
    uint64_t v48 = v108;
    uint64_t v89 = v26;
    uint64_t v49 = v109;
    id v98 = v40;
    if (v41 == enum case for WidgetFamily.systemMedium(_:))
    {
      uint64_t v50 = type metadata accessor for Note();
      uint64_t v51 = (uint64_t)v96;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v96, 1, 1, v50);
      uint64_t v52 = v51 + *(int *)(v48 + 20);
      *(void *)uint64_t v52 = swift_getKeyPath();
      *(unsigned char *)(v52 + 8) = 0;
      uint64_t v53 = v97;
      sub_100061378(v51, v97, type metadata accessor for NotesFolderWidgetView.MediumNoteRow);
      sub_10006130C(v53, (uint64_t)v22, type metadata accessor for NotesFolderWidgetView.MediumNoteRow);
      swift_storeEnumTagMultiPayload();
      sub_10006114C(&qword_1000A56B8, (void (*)(uint64_t))type metadata accessor for NotesFolderWidgetView.SmallNoteRow);
      sub_10006114C(&qword_1000A56B0, (void (*)(uint64_t))type metadata accessor for NotesFolderWidgetView.MediumNoteRow);
      sub_10007C650();
      sub_10000CB64((uint64_t)v24, v110, &qword_1000A5858);
      swift_storeEnumTagMultiPayload();
      sub_100062778();
      sub_100062854();
      uint64_t v54 = (uint64_t)v89;
      sub_10007C650();
      sub_10000CBC8((uint64_t)v24, &qword_1000A5858);
      sub_10000CB64(v54, v49, &qword_1000A5860);
      swift_storeEnumTagMultiPayload();
      sub_1000626FC();
      uint64_t v47 = (uint64_t)v98;
      sub_10007C650();
      sub_10000CBC8(v54, &qword_1000A5860);
      sub_100061BB4(v53, type metadata accessor for NotesFolderWidgetView.MediumNoteRow);
    }
    else
    {
      uint64_t v47 = (uint64_t)v98;
      if (v41 == enum case for WidgetFamily.systemLarge(_:))
      {
        uint64_t KeyPath = swift_getKeyPath();
        uint64_t v56 = (uint64_t)v90;
        *uint64_t v90 = KeyPath;
        sub_100008FA4(&qword_1000A4CD0);
        swift_storeEnumTagMultiPayload();
        uint64_t v57 = v92;
        uint64_t v58 = v56 + *(int *)(v92 + 20);
        uint64_t v59 = type metadata accessor for Note();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v58, 1, 1, v59);
        uint64_t v60 = v56 + *(int *)(v57 + 24);
        *(void *)uint64_t v60 = swift_getKeyPath();
        *(unsigned char *)(v60 + 8) = 0;
        uint64_t v61 = v95;
        sub_100061378(v56, v95, type metadata accessor for NotesFolderWidgetView.LargeNoteRow);
        sub_10006130C(v61, v93, type metadata accessor for NotesFolderWidgetView.LargeNoteRow);
        swift_storeEnumTagMultiPayload();
        sub_10006114C(&qword_1000A56A8, (void (*)(uint64_t))type metadata accessor for NotesFolderWidgetView.LargeNoteRow);
        uint64_t v62 = (uint64_t)v94;
        sub_10007C650();
        sub_10000CB64(v62, v110, &qword_1000A5838);
        swift_storeEnumTagMultiPayload();
        sub_100062778();
        sub_100062854();
        uint64_t v63 = (uint64_t)v89;
        sub_10007C650();
        sub_10000CBC8(v62, &qword_1000A5838);
        sub_10000CB64(v63, v49, &qword_1000A5860);
        swift_storeEnumTagMultiPayload();
        sub_1000626FC();
        sub_10007C650();
        sub_10000CBC8(v63, &qword_1000A5860);
        sub_100061BB4(v61, type metadata accessor for NotesFolderWidgetView.LargeNoteRow);
      }
      else
      {
        uint64_t v64 = v110;
        if (v41 == enum case for WidgetFamily.systemExtraLarge(_:))
        {
          uint64_t v65 = swift_getKeyPath();
          uint64_t v66 = (uint64_t)v90;
          *uint64_t v90 = v65;
          sub_100008FA4(&qword_1000A4CD0);
          swift_storeEnumTagMultiPayload();
          uint64_t v67 = v92;
          uint64_t v68 = v66 + *(int *)(v92 + 20);
          uint64_t v69 = type metadata accessor for Note();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v68, 1, 1, v69);
          uint64_t v70 = v66 + *(int *)(v67 + 24);
          *(void *)uint64_t v70 = swift_getKeyPath();
          *(unsigned char *)(v70 + 8) = 0;
          uint64_t v71 = v95;
          sub_100061378(v66, v95, type metadata accessor for NotesFolderWidgetView.LargeNoteRow);
          sub_10006130C(v71, v93, type metadata accessor for NotesFolderWidgetView.LargeNoteRow);
          swift_storeEnumTagMultiPayload();
          sub_10006114C(&qword_1000A56A8, (void (*)(uint64_t))type metadata accessor for NotesFolderWidgetView.LargeNoteRow);
          uint64_t v72 = (uint64_t)v94;
          sub_10007C650();
          sub_10000CB64(v72, v64, &qword_1000A5838);
          swift_storeEnumTagMultiPayload();
          sub_100062778();
          sub_100062854();
          uint64_t v73 = (uint64_t)v89;
          sub_10007C650();
          sub_10000CBC8(v72, &qword_1000A5838);
          sub_10000CB64(v73, v49, &qword_1000A5860);
          swift_storeEnumTagMultiPayload();
          sub_1000626FC();
          sub_10007C650();
          sub_10000CBC8(v73, &qword_1000A5860);
          sub_100061BB4(v71, type metadata accessor for NotesFolderWidgetView.LargeNoteRow);
        }
        else
        {
          swift_storeEnumTagMultiPayload();
          sub_1000626FC();
          sub_10007C650();
          (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v32);
        }
      }
    }
  }
  BOOL v74 = sub_1000554AC(v113);
  uint64_t v75 = 1;
  uint64_t v77 = (uint64_t)v116;
  uint64_t v76 = v117;
  if (!v74)
  {
    uint64_t v78 = v100;
    sub_10007CB70();
    char v79 = sub_10007C760();
    uint64_t v81 = v101;
    uint64_t v80 = v102;
    uint64_t v82 = (uint64_t)v99;
    (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v99, v78, v102);
    uint64_t v83 = v82 + *(int *)(v76 + 36);
    *(unsigned char *)uint64_t v83 = v79;
    *(_OWORD *)(v83 + 8) = 0u;
    *(_OWORD *)(v83 + 24) = 0u;
    *(unsigned char *)(v83 + 40) = 1;
    (*(void (**)(char *, uint64_t))(v81 + 8))(v78, v80);
    sub_10000CB00(v82, v77, &qword_1000A5608);
    uint64_t v75 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v115 + 56))(v77, v75, 1, v76);
  uint64_t v84 = v112;
  sub_10000CB64(v47, v112, &qword_1000A5868);
  uint64_t v85 = v118;
  sub_10000CB64(v77, v118, &qword_1000A5610);
  uint64_t v86 = v119;
  sub_10000CB64(v84, v119, &qword_1000A5868);
  uint64_t v87 = sub_100008FA4(&qword_1000A5888);
  sub_10000CB64(v85, v86 + *(int *)(v87 + 48), &qword_1000A5610);
  sub_10000CBC8(v77, &qword_1000A5610);
  sub_10000CBC8(v47, &qword_1000A5868);
  sub_10000CBC8(v85, &qword_1000A5610);
  return sub_10000CBC8(v84, &qword_1000A5868);
}

BOOL sub_1000554AC(uint64_t a1)
{
  uint64_t v64 = a1;
  uint64_t v2 = type metadata accessor for NotesFolderWidgetView(0);
  __chkstk_darwin(v2);
  uint64_t v62 = (uint64_t)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10007CD30();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v65 = (uint64_t)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v58 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v58 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v58 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v58 - v18;
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v58 - v20;
  uint64_t v66 = v1;
  uint64_t v67 = v2;
  uint64_t v22 = v1 + *(int *)(v2 + 20);
  sub_10003F1B8((uint64_t)&v58 - v20);
  uint64_t v23 = v5;
  int v24 = *(uint64_t (**)(char *, uint64_t))(v5 + 88);
  int v25 = v24(v21, v4);
  if (v25 == enum case for WidgetFamily.systemSmall(_:)) {
    return 1;
  }
  uint64_t v63 = v22;
  uint64_t v60 = v23;
  uint64_t v61 = v16;
  uint64_t v59 = v13;
  uint64_t v27 = v66;
  int v28 = enum case for WidgetFamily.systemMedium(_:);
  if (v25 == enum case for WidgetFamily.systemMedium(_:))
  {
    LODWORD(v65) = v25;
    int v29 = enum case for WidgetFamily.systemSmall(_:);
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t))v24;
    sub_10003F1B8((uint64_t)v19);
    uint64_t v31 = v4;
    uint64_t v58 = v30;
    int v32 = v30((uint64_t)v19, v4);
    if (v32 == v29)
    {
      uint64_t v33 = 0;
    }
    else if (v32 == v65)
    {
      uint64_t v33 = 2;
    }
    else if (v32 == enum case for WidgetFamily.systemLarge(_:))
    {
      uint64_t v33 = 5;
    }
    else if (v32 == enum case for WidgetFamily.systemExtraLarge(_:))
    {
      uint64_t v33 = 7;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v60 + 8))(v19, v4);
      uint64_t v33 = -1;
    }
    uint64_t v47 = v27;
    uint64_t v48 = (uint64_t)v61;
    uint64_t v49 = v64;
    if (v33 <= v64) {
      return 1;
    }
    uint64_t v50 = sub_100053ADC();
    sub_10003F1B8(v48);
    int v51 = v58(v48, v31);
    if (v51 == v29)
    {
      uint64_t v52 = 1;
      uint64_t v53 = v60;
    }
    else if (v51 == v65)
    {
      uint64_t v52 = 3;
      uint64_t v53 = v60;
    }
    else if (v51 == enum case for WidgetFamily.systemLarge(_:))
    {
      uint64_t v52 = 6;
      uint64_t v53 = v60;
    }
    else if (v51 == enum case for WidgetFamily.systemExtraLarge(_:))
    {
      uint64_t v52 = 8;
      uint64_t v53 = v60;
    }
    else
    {
      uint64_t v53 = v60;
      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v48, v31);
      uint64_t v52 = 0;
    }
    uint64_t v54 = v62;
    sub_10006130C(v47, v62, type metadata accessor for NotesFolderWidgetView);
    if (v50 >= v52)
    {
      sub_100061BB4(v54, type metadata accessor for NotesFolderWidgetView);
    }
    else
    {
      uint64_t v55 = (uint64_t)v59;
      sub_10003F1B8((uint64_t)v59);
      int v56 = v58(v55, v31);
      if (v56 == v29)
      {
        uint64_t v57 = -1;
      }
      else if (v56 == v65)
      {
        uint64_t v57 = 1;
      }
      else if (v56 == enum case for WidgetFamily.systemLarge(_:))
      {
        uint64_t v57 = 4;
      }
      else if (v56 == enum case for WidgetFamily.systemExtraLarge(_:))
      {
        uint64_t v57 = 6;
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v55, v31);
        uint64_t v57 = -2;
      }
      sub_100061BB4(v54, type metadata accessor for NotesFolderWidgetView);
      if (v57 <= v49) {
        return 1;
      }
    }
    return 0;
  }
  uint64_t v34 = (uint64_t)v10;
  int v35 = enum case for WidgetFamily.systemLarge(_:);
  if (v25 == enum case for WidgetFamily.systemLarge(_:))
  {
    int v36 = v25;
    uint64_t v37 = v34;
    int v38 = enum case for WidgetFamily.systemSmall(_:);
    sub_10003F1B8(v34);
    int v39 = v24((char *)v37, v4);
    if (v39 == v38)
    {
      uint64_t v40 = 0;
    }
    else if (v39 == v28)
    {
      uint64_t v40 = 2;
    }
    else if (v39 == v36)
    {
      uint64_t v40 = 5;
    }
    else if (v39 == enum case for WidgetFamily.systemExtraLarge(_:))
    {
      uint64_t v40 = 7;
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v37, v4);
      uint64_t v40 = -1;
    }
    return v40 <= v64;
  }
  if (v25 == enum case for WidgetFamily.systemExtraLarge(_:))
  {
    int v41 = v25;
    uint64_t v42 = v65;
    int v43 = enum case for WidgetFamily.systemSmall(_:);
    sub_10003F1B8(v65);
    int v44 = v24((char *)v42, v4);
    if (v44 == v43)
    {
      uint64_t v45 = 0;
      uint64_t v46 = v64;
    }
    else if (v44 == v28)
    {
      uint64_t v45 = 2;
      uint64_t v46 = v64;
    }
    else if (v44 == v35)
    {
      uint64_t v45 = 5;
      uint64_t v46 = v64;
    }
    else
    {
      uint64_t v46 = v64;
      if (v44 == v41)
      {
        uint64_t v45 = 7;
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v42, v4);
        uint64_t v45 = -1;
      }
    }
    return v45 <= v46;
  }
  (*(void (**)(char *, uint64_t))(v60 + 8))(v21, v4);
  return 1;
}

double sub_100055B24(uint64_t a1)
{
  uint64_t v38 = a1;
  uint64_t v1 = sub_10007CD30();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v37 = (uint64_t)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v34 - v6;
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v34 - v9;
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v34 - v11;
  type metadata accessor for NotesFolderWidgetView(0);
  sub_10003F1B8((uint64_t)v12);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t))(v2 + 88);
  int v14 = v13(v12, v1);
  int v36 = enum case for WidgetFamily.systemMedium(_:);
  if (v14 != enum case for WidgetFamily.systemMedium(_:))
  {
    int v18 = enum case for WidgetFamily.systemSmall(_:);
    uint64_t v19 = v2;
LABEL_5:
    sub_10007C3B0();
    double v21 = v20;
    uint64_t v22 = v37;
    sub_10003F1B8(v37);
    int v23 = v13((char *)v22, v1);
    double v24 = 1.0;
    if (v23 != v18)
    {
      double v24 = 3.0;
      if (v23 != v36)
      {
        double v24 = 6.0;
        if (v23 != enum case for WidgetFamily.systemLarge(_:))
        {
          double v24 = 8.0;
          if (v23 != enum case for WidgetFamily.systemExtraLarge(_:))
          {
            (*(void (**)(uint64_t, uint64_t, double))(v19 + 8))(v22, v1, 8.0);
            double v24 = 0.0;
          }
        }
      }
    }
    goto LABEL_23;
  }
  int v35 = v14;
  uint64_t v34 = v7;
  uint64_t v15 = sub_100053ADC();
  sub_10003F1B8((uint64_t)v10);
  int v16 = v13(v10, v1);
  int v18 = v16;
  int v17 = enum case for WidgetFamily.systemSmall(_:);
  if (v16 != enum case for WidgetFamily.systemSmall(_:))
  {
    if (v16 == v35)
    {
      int v18 = enum case for WidgetFamily.systemSmall(_:);
      BOOL v25 = v15 < 3;
    }
    else if (v16 == enum case for WidgetFamily.systemLarge(_:))
    {
      int v18 = enum case for WidgetFamily.systemSmall(_:);
      BOOL v25 = v15 < 6;
    }
    else
    {
      if (v16 != enum case for WidgetFamily.systemExtraLarge(_:))
      {
        int v32 = enum case for WidgetFamily.systemSmall(_:);
        uint64_t v33 = v10;
        uint64_t v19 = v2;
        (*(void (**)(char *, uint64_t))(v2 + 8))(v33, v1);
        int v17 = v32;
        int v18 = v32;
        if ((v15 & 0x8000000000000000) == 0) {
          goto LABEL_5;
        }
        goto LABEL_18;
      }
      int v18 = enum case for WidgetFamily.systemSmall(_:);
      BOOL v25 = v15 < 8;
    }
    uint64_t v19 = v2;
    if (!v25) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  uint64_t v19 = v2;
  if (v15 > 0) {
    goto LABEL_5;
  }
LABEL_18:
  int v26 = v17;
  sub_10007C3B0();
  double v21 = v27;
  uint64_t v28 = (uint64_t)v34;
  sub_10003F1B8((uint64_t)v34);
  int v29 = v13((char *)v28, v1);
  double v24 = 0.0;
  if (v29 != v26)
  {
    double v24 = 2.0;
    if (v29 != v35)
    {
      double v24 = 5.0;
      if (v29 != enum case for WidgetFamily.systemLarge(_:))
      {
        double v24 = 7.0;
        if (v29 != enum case for WidgetFamily.systemExtraLarge(_:))
        {
          (*(void (**)(uint64_t, uint64_t, double))(v19 + 8))(v28, v1, 7.0);
          double v24 = -1.0;
        }
      }
    }
  }
LABEL_23:
  double v30 = v21 / v24;
  (*(void (**)(char *, uint64_t))(v19 + 8))(v12, v1);
  return v30;
}

uint64_t sub_100055F08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v51 = a6;
  uint64_t v11 = sub_100008FA4(&qword_1000A49E0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for NotesFolder();
  __chkstk_darwin(v14);
  uint64_t v46 = (uint64_t)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100008FA4(&qword_1000A5748);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v50 = (uint64_t)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  double v21 = (char *)&v46 - v20;
  __chkstk_darwin(v19);
  int v23 = (char *)&v46 - v22;
  *(void *)double v21 = sub_10007C590();
  *((void *)v21 + 1) = 0;
  v21[16] = 0;
  uint64_t v24 = sub_100008FA4(&qword_1000A5750);
  sub_100056418(a1, a2, a3 & 1, a4, a5, (uint64_t)&v21[*(int *)(v24 + 44)]);
  uint64_t v25 = (uint64_t)v21;
  uint64_t v26 = (uint64_t)v23;
  sub_10000CB00(v25, (uint64_t)v23, &qword_1000A5748);
  uint64_t v27 = type metadata accessor for NotesFolderWidgetView(0);
  sub_10000CB64(a5 + *(int *)(v27 + 28), (uint64_t)v13, &qword_1000A49E0);
  uint64_t v28 = sub_100008FA4(&qword_1000A49E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48))(v13, 2, v28))
  {
    sub_10000CBC8((uint64_t)v13, &qword_1000A49E0);
LABEL_6:
    *(void *)uint64_t v52 = 0x4030000000000000;
    *(_OWORD *)&v52[8] = 0u;
    long long v53 = 0u;
    long long v54 = 0u;
    uint64_t v55 = 0;
    char v56 = 1;
    sub_100008FA4(&qword_1000A5758);
    sub_10000CAB4(&qword_1000A5760, &qword_1000A5758);
    sub_10007C650();
    uint64_t v33 = v58;
    uint64_t v49 = v57;
    uint64_t v34 = v59;
    uint64_t v35 = v60;
    uint64_t v37 = v61;
    uint64_t v36 = v62;
    uint64_t v38 = v63;
    uint64_t v39 = v64;
    int v48 = v65;
    goto LABEL_7;
  }
  swift_bridgeObjectRelease();
  uint64_t v29 = (uint64_t)v13;
  uint64_t v30 = v46;
  sub_100061378(v29, v46, (uint64_t (*)(void))type metadata accessor for NotesFolder);
  if (*(unsigned char *)(v30 + 32) != 1)
  {
    sub_100061BB4(v30, (uint64_t (*)(void))type metadata accessor for NotesFolder);
    goto LABEL_6;
  }
  uint64_t v31 = sub_10007C590();
  uint64_t v32 = swift_bridgeObjectRetain();
  *(_OWORD *)uint64_t v52 = xmmword_100085F10;
  *(void *)&v52[16] = v31;
  long long v53 = 0uLL;
  *(void *)&long long v54 = 0;
  *((void *)&v54 + 1) = 1;
  uint64_t v55 = v32;
  char v56 = 0;
  sub_100008FA4(&qword_1000A5758);
  sub_10000CAB4(&qword_1000A5760, &qword_1000A5758);
  sub_10007C650();
  uint64_t v33 = v58;
  uint64_t v49 = v57;
  uint64_t v34 = v59;
  uint64_t v35 = v60;
  uint64_t v37 = v61;
  uint64_t v36 = v62;
  uint64_t v38 = v63;
  uint64_t v39 = v64;
  int v48 = v65;
  sub_100061BB4(v30, (uint64_t (*)(void))type metadata accessor for NotesFolder);
LABEL_7:
  uint64_t v47 = v26;
  uint64_t v40 = v50;
  sub_10000CB64(v26, v50, &qword_1000A5748);
  uint64_t v41 = v51;
  sub_10000CB64(v40, v51, &qword_1000A5748);
  uint64_t v42 = v41 + *(int *)(sub_100008FA4(&qword_1000A5768) + 48);
  uint64_t v43 = v49;
  *(void *)uint64_t v42 = v49;
  *(void *)(v42 + 8) = v33;
  *(void *)(v42 + 16) = v34;
  *(void *)(v42 + 24) = v35;
  *(void *)(v42 + 32) = v37;
  *(void *)(v42 + 40) = v36;
  *(void *)(v42 + 48) = v38;
  *(void *)(v42 + 56) = v39;
  char v44 = v48;
  *(unsigned char *)(v42 + 64) = v48;
  sub_100061D54(v43, v33, v34, v35, v37, v36, v38, v39, v44);
  sub_10000CBC8(v47, &qword_1000A5748);
  sub_100061D68(v43, v33, v34, v35, v37, v36, v38, v39, v44);
  return sub_10000CBC8(v40, &qword_1000A5748);
}

uint64_t sub_100056418@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v32 = a5;
  uint64_t v34 = a6;
  uint64_t v10 = sub_100008FA4(&qword_1000A5770);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_100008FA4(&qword_1000A5778);
  uint64_t v14 = __chkstk_darwin(v33);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v31 - v18;
  __chkstk_darwin(v17);
  double v21 = (char *)&v31 - v20;
  uint64_t v35 = a1;
  uint64_t v36 = a2;
  char v37 = a3 & 1;
  uint64_t v38 = a4;
  sub_10007C990();
  uint64_t v22 = v32 + *(int *)(type metadata accessor for NotesFolderWidgetView(0) + 24);
  uint64_t v23 = *(void *)v22;
  char v24 = *(unsigned char *)(v22 + 8);
  sub_10000A9EC(*(void *)v22, v24);
  LOBYTE(a1) = sub_10003EFB4(v23, v24);
  sub_10000AC28(v23, v24);
  if (a1)
  {
    uint64_t v25 = sub_10007CA90();
  }
  else
  {
    sub_10000A9EC(v23, v24);
    char v26 = sub_10003EFB4(v23, v24);
    sub_10000AC28(v23, v24);
    if (v26) {
      uint64_t v25 = sub_10007CA80();
    }
    else {
      uint64_t v25 = sub_10007CA50();
    }
  }
  uint64_t v27 = v25;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v19, v13, v10);
  *(void *)&v19[*(int *)(v33 + 36)] = v27;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_10000CB00((uint64_t)v19, (uint64_t)v21, &qword_1000A5778);
  sub_10000CB64((uint64_t)v21, (uint64_t)v16, &qword_1000A5778);
  uint64_t v28 = v34;
  sub_10000CB64((uint64_t)v16, v34, &qword_1000A5778);
  uint64_t v29 = v28 + *(int *)(sub_100008FA4(&qword_1000A5780) + 48);
  *(void *)uint64_t v29 = 0;
  *(unsigned char *)(v29 + 8) = 1;
  sub_10000CBC8((uint64_t)v21, &qword_1000A5778);
  return sub_10000CBC8((uint64_t)v16, &qword_1000A5778);
}

uint64_t sub_1000566F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v64 = a5;
  uint64_t v58 = a4;
  int v57 = a3;
  uint64_t v56 = a2;
  uint64_t v68 = a6;
  uint64_t v7 = sub_10007C800();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_100008FA4(&qword_1000A5770);
  uint64_t v11 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100008FA4(&qword_1000A5788);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100008FA4(&qword_1000A5790);
  uint64_t v19 = v18 - 8;
  __chkstk_darwin(v18);
  double v21 = (char *)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_100008FA4(&qword_1000A5798);
  __chkstk_darwin(v62);
  uint64_t v60 = (uint64_t)&v55 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_100008FA4(&qword_1000A57A0);
  __chkstk_darwin(v61);
  uint64_t v66 = (uint64_t)&v55 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100008FA4(&qword_1000A57A8);
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  uint64_t v67 = (uint64_t)&v55 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v63 = (uint64_t)&v55 - v28;
  __chkstk_darwin(v27);
  uint64_t v65 = (uint64_t)&v55 - v29;
  uint64_t v69 = a1;
  uint64_t v70 = v56;
  char v71 = v57 & 1;
  uint64_t v72 = v58;
  sub_10007C990();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for Font.TextStyle.body(_:), v7);
  uint64_t v30 = sub_10007C790();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v32 = v59;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v17, v13, v59);
  uint64_t v33 = (uint64_t *)&v17[*(int *)(v15 + 44)];
  uint64_t *v33 = KeyPath;
  v33[1] = v30;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v32);
  uint64_t v34 = swift_getKeyPath();
  sub_10000CB64((uint64_t)v17, (uint64_t)v21, &qword_1000A5788);
  uint64_t v35 = &v21[*(int *)(v19 + 44)];
  *(void *)uint64_t v35 = v34;
  v35[8] = 1;
  sub_10000CBC8((uint64_t)v17, &qword_1000A5788);
  uint64_t v36 = v64 + *(int *)(type metadata accessor for NotesFolderWidgetView(0) + 24);
  uint64_t v37 = *(void *)v36;
  char v38 = *(unsigned char *)(v36 + 8);
  sub_10000A9EC(*(void *)v36, v38);
  LOBYTE(KeyPath) = sub_10003EFB4(v37, v38);
  sub_10000AC28(v37, v38);
  if (KeyPath)
  {
    uint64_t v39 = sub_10007CA90();
  }
  else
  {
    sub_10000A9EC(v37, v38);
    char v40 = sub_10003EFB4(v37, v38);
    sub_10000AC28(v37, v38);
    if (v40) {
      uint64_t v39 = sub_10007CA80();
    }
    else {
      uint64_t v39 = sub_10007CA50();
    }
  }
  uint64_t v41 = v39;
  uint64_t v42 = v60;
  sub_10000CB64((uint64_t)v21, v60, &qword_1000A5790);
  *(void *)(v42 + *(int *)(v62 + 36)) = v41;
  sub_10000CBC8((uint64_t)v21, &qword_1000A5790);
  uint64_t v43 = swift_getKeyPath();
  uint64_t v44 = v66;
  sub_10000CB64(v42, v66, &qword_1000A5798);
  uint64_t v45 = v44 + *(int *)(v61 + 36);
  *(void *)uint64_t v45 = v43;
  *(void *)(v45 + 8) = 2;
  *(unsigned char *)(v45 + 16) = 0;
  sub_10000CBC8(v42, &qword_1000A5798);
  uint64_t v46 = sub_10007CBF0();
  uint64_t v47 = v63;
  sub_100070950(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, v63, 0.0, 1, INFINITY, 0, v46, v48);
  sub_10000CBC8(v44, &qword_1000A57A0);
  uint64_t v49 = v47;
  uint64_t v50 = v65;
  sub_10000CB00(v49, v65, &qword_1000A57A8);
  uint64_t v51 = v67;
  sub_10000CB64(v50, v67, &qword_1000A57A8);
  uint64_t v52 = v68;
  sub_10000CB64(v51, v68, &qword_1000A57A8);
  uint64_t v53 = v52 + *(int *)(sub_100008FA4(&qword_1000A57B0) + 48);
  *(void *)uint64_t v53 = 0x4030000000000000;
  *(unsigned char *)(v53 + 8) = 0;
  sub_10000CBC8(v50, &qword_1000A57A8);
  return sub_10000CBC8(v51, &qword_1000A57A8);
}

uint64_t sub_100056D3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v38 = a4;
  uint64_t v6 = sub_10007C5F0();
  uint64_t v36 = *(void *)(v6 - 8);
  uint64_t v37 = v6;
  __chkstk_darwin(v6);
  uint64_t v35 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10007C3C0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = type metadata accessor for NotesFolderWidgetView(0);
  uint64_t v31 = *(void *)(v11 - 8);
  uint64_t v12 = *(void *)(v31 + 64);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_100008FA4(&qword_1000A5588);
  __chkstk_darwin(v34);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v15 = sub_10007C600();
  *((void *)v15 + 1) = 0;
  v15[16] = 0;
  uint64_t v32 = &v15[*(int *)(sub_100008FA4(&qword_1000A5590) + 44)];
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_100053ADC();
  uint64_t v17 = sub_1000333D4(v16, a2);
  size_t v21 = sub_100060A1C(v17, v18, v19, v20);
  swift_unknownObjectRelease();
  size_t v39 = v21;
  swift_getKeyPath();
  sub_10006130C(a3, (uint64_t)v13, type metadata accessor for NotesFolderWidgetView);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v33, v8);
  unint64_t v22 = (*(unsigned __int8 *)(v31 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  unint64_t v23 = (v12 + *(unsigned __int8 *)(v9 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v24 = swift_allocObject();
  sub_100061378((uint64_t)v13, v24 + v22, type metadata accessor for NotesFolderWidgetView);
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v24 + v23, (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = sub_100060DA4;
  *(void *)(v25 + 24) = v24;
  sub_100008FA4(&qword_1000A5598);
  sub_100008FA4(&qword_1000A55A0);
  sub_10000CAB4(&qword_1000A55A8, &qword_1000A5598);
  sub_100060F20();
  sub_10007CB90();
  uint64_t v27 = v35;
  uint64_t v26 = v36;
  uint64_t v28 = v37;
  (*(void (**)(char *, void, uint64_t))(v36 + 104))(v35, enum case for ContentSizeCategory.accessibilityMedium(_:), v37);
  sub_10000CAB4(&qword_1000A55E8, &qword_1000A5588);
  sub_10007C8E0();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v28);
  return sub_10000CBC8((uint64_t)v15, &qword_1000A5588);
}

uint64_t sub_1000571B4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v46 = a3;
  uint64_t v45 = a2;
  uint64_t v55 = a4;
  uint64_t v56 = a1;
  uint64_t v5 = sub_100008FA4(&qword_1000A49E0);
  __chkstk_darwin(v5 - 8);
  uint64_t v53 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_100008FA4(&qword_1000A49E8);
  uint64_t v54 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v41 = (uint64_t)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10007C6B0();
  uint64_t v47 = *(void *)(v8 - 8);
  uint64_t v48 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_10007C5E0();
  uint64_t v43 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100008FA4(&qword_1000A55E0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100008FA4(&qword_1000A55D0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100008FA4(&qword_1000A55B8);
  __chkstk_darwin(v19);
  size_t v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100008FA4(&qword_1000A55F8);
  uint64_t v50 = *(void *)(v22 - 8);
  uint64_t v51 = v22;
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v40 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_100008FA4(&qword_1000A55A0);
  __chkstk_darwin(v49);
  uint64_t v26 = (char *)&v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v15 = sub_10007C600();
  *((void *)v15 + 1) = 0;
  v15[16] = 0;
  uint64_t v27 = (uint64_t)&v15[*(int *)(sub_100008FA4(&qword_1000A5600) + 44)];
  uint64_t v42 = v4;
  sub_10005784C(v4, (uint64_t)v56, v45, v27);
  sub_100055B24(v46);
  sub_10007CBF0();
  sub_10007C3A0();
  sub_10000CB64((uint64_t)v15, (uint64_t)v18, &qword_1000A55E0);
  uint64_t v28 = &v18[*(int *)(v16 + 36)];
  long long v29 = v60;
  *(_OWORD *)uint64_t v28 = v59;
  *((_OWORD *)v28 + 1) = v29;
  *((_OWORD *)v28 + 2) = v61;
  sub_10000CBC8((uint64_t)v15, &qword_1000A55E0);
  sub_10007C5C0();
  sub_1000610AC();
  sub_10007C960();
  uint64_t v30 = v12;
  uint64_t v31 = v19;
  (*(void (**)(char *, uint64_t))(v43 + 8))(v30, v44);
  sub_10000CBC8((uint64_t)v18, &qword_1000A55D0);
  sub_10007C690();
  unint64_t v32 = sub_100061000();
  sub_10007C9B0();
  uint64_t v33 = v10;
  uint64_t v35 = v52;
  uint64_t v34 = (uint64_t)v53;
  (*(void (**)(char *, uint64_t))(v47 + 8))(v33, v48);
  sub_10000CBC8((uint64_t)v21, &qword_1000A55B8);
  uint64_t v36 = type metadata accessor for NotesFolderWidgetView(0);
  sub_10000CB64(v42 + *(int *)(v36 + 28), v34, &qword_1000A49E0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v34, 2, v35))
  {
    uint64_t v37 = v41;
    sub_10000CB00(v34, v41, &qword_1000A49E8);
    swift_bridgeObjectRelease();
    sub_10000CFE8(v56);
    sub_100061BB4(v37, (uint64_t (*)(void))type metadata accessor for NotesFolder);
  }
  uint64_t v57 = v31;
  unint64_t v58 = v32;
  swift_getOpaqueTypeConformance2();
  uint64_t v38 = v51;
  sub_10007C950();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v24, v38);
  swift_bridgeObjectRetain();
  sub_10007C3E0();
  swift_bridgeObjectRelease();
  return sub_10000CBC8((uint64_t)v26, &qword_1000A55A0);
}

uint64_t sub_10005784C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v152 = a3;
  uint64_t v161 = a2;
  uint64_t v159 = a4;
  uint64_t v136 = sub_10007CB80();
  uint64_t v135 = *(void *)(v136 - 8);
  __chkstk_darwin(v136);
  uint64_t v134 = (char *)&v116 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = sub_100008FA4(&qword_1000A5608);
  uint64_t v164 = *(void *)(v158 - 8);
  __chkstk_darwin(v158);
  uint64_t v133 = (char *)&v116 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100008FA4(&qword_1000A5610);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v163 = (char *)&v116 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v157 = (char *)&v116 - v10;
  uint64_t v124 = sub_100008FA4(&qword_1000A5618);
  __chkstk_darwin(v124);
  uint64_t v119 = (char *)&v116 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = sub_100008FA4(&qword_1000A5620);
  __chkstk_darwin(v149);
  uint64_t v120 = (char *)&v116 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = sub_100008FA4(&qword_1000A5628);
  uint64_t v117 = *(void *)(v125 - 8);
  __chkstk_darwin(v125);
  uint64_t v121 = (char *)&v116 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = sub_100008FA4(&qword_1000A5630);
  uint64_t v123 = *(void *)(v151 - 8);
  __chkstk_darwin(v151);
  uint64_t v122 = (char *)&v116 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100008FA4(&qword_1000A49E0);
  __chkstk_darwin(v15 - 8);
  uint64_t v130 = (uint64_t)&v116 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_100008FA4(&qword_1000A49E8);
  uint64_t v129 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v116 = (uint64_t)&v116 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = sub_100008FA4(&qword_1000A5638);
  __chkstk_darwin(v154);
  uint64_t v156 = (uint64_t)&v116 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v147 = sub_100008FA4(&qword_1000A5640);
  __chkstk_darwin(v147);
  uint64_t v146 = (uint64_t)&v116 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = sub_100008FA4(&qword_1000A5648);
  __chkstk_darwin(v137);
  uint64_t v139 = (char *)&v116 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = sub_100008FA4(&qword_1000A5650);
  __chkstk_darwin(v148);
  uint64_t v140 = (char *)&v116 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v153 = sub_100008FA4(&qword_1000A5658);
  __chkstk_darwin(v153);
  uint64_t v150 = (char *)&v116 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v144 = type metadata accessor for Note();
  uint64_t v141 = *(void *)(v144 - 8);
  __chkstk_darwin(v144);
  uint64_t v145 = v23;
  uint64_t v142 = (uint64_t)&v116 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for NotesFolderWidgetView(0);
  uint64_t v127 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v126 = v25;
  uint64_t v128 = (uint64_t (*)(char *, uint64_t))((char *)&v116 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v26 = sub_100008FA4(&qword_1000A3270);
  __chkstk_darwin(v26 - 8);
  uint64_t v143 = (uint64_t)&v116 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = sub_100008FA4(&qword_1000A5660);
  uint64_t v132 = *(void *)(v138 - 8);
  __chkstk_darwin(v138);
  uint64_t v131 = (char *)&v116 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_10007CD30();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v33 = (char *)&v116 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v35 = (char *)&v116 - v34;
  uint64_t v36 = sub_100008FA4(&qword_1000A5668);
  uint64_t v37 = __chkstk_darwin(v36 - 8);
  uint64_t v162 = (uint64_t)&v116 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  uint64_t v155 = (char *)&v116 - v39;
  uint64_t v40 = a1;
  sub_10003F1B8((uint64_t)v35);
  uint64_t v41 = *(uint64_t (**)(char *, uint64_t))(v30 + 88);
  int v42 = v41(v35, v29);
  uint64_t v160 = a1;
  if (v42 == enum case for WidgetFamily.systemSmall(_:))
  {
    uint64_t v43 = v161;
    sub_10000CB64(v161 + *(int *)(v144 + 44), v143, &qword_1000A3270);
    uint64_t v44 = v128;
    sub_10006130C(v40, (uint64_t)v128, type metadata accessor for NotesFolderWidgetView);
    uint64_t v45 = v142;
    sub_10006130C(v43, v142, (uint64_t (*)(void))type metadata accessor for Note);
    unint64_t v46 = (*(unsigned __int8 *)(v127 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v127 + 80);
    unint64_t v47 = (v126 + *(unsigned __int8 *)(v141 + 80) + v46) & ~(unint64_t)*(unsigned __int8 *)(v141 + 80);
    uint64_t v48 = swift_allocObject();
    sub_100061378((uint64_t)v44, v48 + v46, type metadata accessor for NotesFolderWidgetView);
    sub_100061378(v45, v48 + v47, (uint64_t (*)(void))type metadata accessor for Note);
    type metadata accessor for NotesFolderWidgetView.SmallNoteRow(0);
    sub_10006114C(&qword_1000A56B8, (void (*)(uint64_t))type metadata accessor for NotesFolderWidgetView.SmallNoteRow);
    uint64_t v49 = (uint64_t)v131;
    sub_10007C330();
    uint64_t v50 = v132;
    uint64_t v51 = v138;
    (*(void (**)(char *, uint64_t, uint64_t))(v132 + 16))(v139, v49, v138);
    swift_storeEnumTagMultiPayload();
    sub_10000CAB4(&qword_1000A5680, &qword_1000A5660);
    sub_10000CAB4(&qword_1000A5688, &qword_1000A5630);
    uint64_t v52 = (uint64_t)v140;
    sub_10007C650();
    sub_10000CB64(v52, v146, &qword_1000A5650);
    swift_storeEnumTagMultiPayload();
    sub_100061250(&qword_1000A5678, &qword_1000A5650, &qword_1000A5680, &qword_1000A5660);
    sub_100061250(&qword_1000A5690, &qword_1000A5620, &qword_1000A5698, &qword_1000A5628);
    uint64_t v53 = (uint64_t)v150;
    sub_10007C650();
    sub_10000CBC8(v52, &qword_1000A5650);
    sub_10000CB64(v53, v156, &qword_1000A5658);
    swift_storeEnumTagMultiPayload();
    sub_100061194();
    uint64_t v54 = (uint64_t)v155;
    sub_10007C650();
    sub_10000CBC8(v53, &qword_1000A5658);
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v49, v51);
LABEL_10:
    uint64_t v73 = v158;
    uint64_t v74 = v159;
    uint64_t v75 = (uint64_t)v163;
    uint64_t v76 = v164;
    uint64_t v77 = (uint64_t)v157;
    uint64_t v78 = v152;
    goto LABEL_27;
  }
  int v55 = v42;
  uint64_t v128 = v41;
  uint64_t v56 = v24;
  uint64_t v131 = v33;
  uint64_t v132 = v29;
  uint64_t v127 = v30;
  uint64_t v57 = v129;
  uint64_t v58 = v130;
  uint64_t v59 = v161;
  if (v42 != enum case for WidgetFamily.systemMedium(_:))
  {
    if (v42 == enum case for WidgetFamily.systemLarge(_:) || v42 == enum case for WidgetFamily.systemExtraLarge(_:))
    {
      sub_10000CB64(v161 + *(int *)(v144 + 44), v143, &qword_1000A3270);
      uint64_t v65 = v142;
      sub_10006130C(v59, v142, (uint64_t (*)(void))type metadata accessor for Note);
      unint64_t v66 = (*(unsigned __int8 *)(v141 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v141 + 80);
      uint64_t v67 = swift_allocObject();
      sub_100061378(v65, v67 + v66, (uint64_t (*)(void))type metadata accessor for Note);
      type metadata accessor for NotesFolderWidgetView.LargeNoteRow(0);
      sub_10006114C(&qword_1000A56A8, (void (*)(uint64_t))type metadata accessor for NotesFolderWidgetView.LargeNoteRow);
      uint64_t v68 = v122;
      sub_10007C330();
      uint64_t v69 = v123;
      uint64_t v70 = v151;
      (*(void (**)(char *, char *, uint64_t))(v123 + 16))(v119, v68, v151);
      swift_storeEnumTagMultiPayload();
      sub_10000CAB4(&qword_1000A5698, &qword_1000A5628);
      sub_10000CAB4(&qword_1000A5688, &qword_1000A5630);
      uint64_t v71 = (uint64_t)v120;
      sub_10007C650();
      sub_10000CB64(v71, v146, &qword_1000A5620);
      swift_storeEnumTagMultiPayload();
      sub_100061250(&qword_1000A5678, &qword_1000A5650, &qword_1000A5680, &qword_1000A5660);
      sub_100061250(&qword_1000A5690, &qword_1000A5620, &qword_1000A5698, &qword_1000A5628);
      uint64_t v72 = (uint64_t)v150;
      sub_10007C650();
      sub_10000CBC8(v71, &qword_1000A5620);
      sub_10000CB64(v72, v156, &qword_1000A5658);
      swift_storeEnumTagMultiPayload();
      sub_100061194();
      uint64_t v54 = (uint64_t)v155;
      sub_10007C650();
      sub_10000CBC8(v72, &qword_1000A5658);
      (*(void (**)(char *, uint64_t))(v69 + 8))(v68, v70);
    }
    else
    {
      swift_storeEnumTagMultiPayload();
      sub_100061194();
      uint64_t v63 = v155;
      sub_10007C650();
      uint64_t v64 = v35;
      uint64_t v54 = (uint64_t)v63;
      (*(void (**)(char *, uint64_t))(v127 + 8))(v64, v132);
    }
    goto LABEL_10;
  }
  int v60 = enum case for WidgetFamily.systemSmall(_:);
  sub_10000CB64(v160 + *(int *)(v56 + 28), v130, &qword_1000A49E0);
  uint64_t v61 = v118;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v58, 2, v118))
  {
    unint64_t v62 = 0;
  }
  else
  {
    uint64_t v79 = v58;
    uint64_t v80 = v116;
    sub_10000CB00(v79, v116, &qword_1000A49E8);
    unint64_t v62 = *(void *)(*(void *)(v80 + *(int *)(v61 + 48)) + 16);
    swift_bridgeObjectRelease();
    sub_100061BB4(v80, (uint64_t (*)(void))type metadata accessor for NotesFolder);
  }
  uint64_t v76 = v164;
  uint64_t v81 = (uint64_t)v131;
  sub_10003F1B8((uint64_t)v131);
  int v82 = v128((char *)v81, v132);
  if (v82 == v60)
  {
    uint64_t v75 = (uint64_t)v163;
    uint64_t v78 = v152;
    uint64_t v83 = v59;
    uint64_t v84 = v143;
    uint64_t v85 = v142;
    uint64_t v86 = v141;
    uint64_t v87 = v144;
    if (!v62) {
      goto LABEL_21;
    }
LABEL_25:
    sub_10000CB64(v83 + *(int *)(v87 + 44), v84, &qword_1000A3270);
    sub_10006130C(v83, v85, (uint64_t (*)(void))type metadata accessor for Note);
    unint64_t v96 = (*(unsigned __int8 *)(v86 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
    uint64_t v97 = swift_allocObject();
    sub_100061378(v85, v97 + v96, (uint64_t (*)(void))type metadata accessor for Note);
    type metadata accessor for NotesFolderWidgetView.MediumNoteRow(0);
    sub_10006114C(&qword_1000A56B0, (void (*)(uint64_t))type metadata accessor for NotesFolderWidgetView.MediumNoteRow);
    id v98 = v121;
    sub_10007C330();
    uint64_t v99 = v117;
    (*(void (**)(char *, char *, uint64_t))(v117 + 16))(v119, v98, v125);
    swift_storeEnumTagMultiPayload();
    sub_10000CAB4(&qword_1000A5698, &qword_1000A5628);
    sub_10000CAB4(&qword_1000A5688, &qword_1000A5630);
    uint64_t v100 = (uint64_t)v120;
    sub_10007C650();
    sub_10000CB64(v100, v146, &qword_1000A5620);
    swift_storeEnumTagMultiPayload();
    sub_100061250(&qword_1000A5678, &qword_1000A5650, &qword_1000A5680, &qword_1000A5660);
    sub_100061250(&qword_1000A5690, &qword_1000A5620, &qword_1000A5698, &qword_1000A5628);
    uint64_t v101 = (uint64_t)v150;
    sub_10007C650();
    sub_10000CBC8(v100, &qword_1000A5620);
    sub_10000CB64(v101, v156, &qword_1000A5658);
    swift_storeEnumTagMultiPayload();
    sub_100061194();
    uint64_t v54 = (uint64_t)v155;
    sub_10007C650();
    sub_10000CBC8(v101, &qword_1000A5658);
    (*(void (**)(char *, uint64_t))(v99 + 8))(v121, v125);
    goto LABEL_26;
  }
  if (v82 == v55)
  {
    BOOL v88 = v62 >= 3;
LABEL_19:
    uint64_t v75 = (uint64_t)v163;
    uint64_t v78 = v152;
    uint64_t v83 = v59;
    uint64_t v84 = v143;
    uint64_t v85 = v142;
    uint64_t v86 = v141;
    goto LABEL_20;
  }
  if (v82 == enum case for WidgetFamily.systemLarge(_:))
  {
    BOOL v88 = v62 >= 6;
    goto LABEL_19;
  }
  uint64_t v75 = (uint64_t)v163;
  uint64_t v78 = v152;
  uint64_t v83 = v59;
  uint64_t v84 = v143;
  uint64_t v85 = v142;
  uint64_t v86 = v141;
  if (v82 != enum case for WidgetFamily.systemExtraLarge(_:))
  {
    (*(void (**)(char *, uint64_t))(v127 + 8))(v131, v132);
    uint64_t v87 = v144;
    goto LABEL_25;
  }
  BOOL v88 = v62 >= 8;
LABEL_20:
  uint64_t v87 = v144;
  if (v88) {
    goto LABEL_25;
  }
LABEL_21:
  sub_10000CB64(v83 + *(int *)(v87 + 44), v84, &qword_1000A3270);
  sub_10006130C(v83, v85, (uint64_t (*)(void))type metadata accessor for Note);
  unint64_t v89 = (*(unsigned __int8 *)(v86 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
  uint64_t v90 = swift_allocObject();
  sub_100061378(v85, v90 + v89, (uint64_t (*)(void))type metadata accessor for Note);
  type metadata accessor for NotesFolderWidgetView.LargeNoteRow(0);
  sub_10006114C(&qword_1000A56A8, (void (*)(uint64_t))type metadata accessor for NotesFolderWidgetView.LargeNoteRow);
  uint64_t v91 = v122;
  sub_10007C330();
  uint64_t v92 = v146;
  uint64_t v93 = v151;
  (*(void (**)(char *, char *, uint64_t))(v123 + 16))(v139, v91, v151);
  swift_storeEnumTagMultiPayload();
  sub_10000CAB4(&qword_1000A5680, &qword_1000A5660);
  sub_10000CAB4(&qword_1000A5688, &qword_1000A5630);
  uint64_t v94 = (uint64_t)v140;
  sub_10007C650();
  sub_10000CB64(v94, v92, &qword_1000A5650);
  swift_storeEnumTagMultiPayload();
  sub_100061250(&qword_1000A5678, &qword_1000A5650, &qword_1000A5680, &qword_1000A5660);
  sub_100061250(&qword_1000A5690, &qword_1000A5620, &qword_1000A5698, &qword_1000A5628);
  uint64_t v95 = (uint64_t)v150;
  sub_10007C650();
  sub_10000CBC8(v94, &qword_1000A5650);
  sub_10000CB64(v95, v156, &qword_1000A5658);
  swift_storeEnumTagMultiPayload();
  sub_100061194();
  uint64_t v54 = (uint64_t)v155;
  sub_10007C650();
  sub_10000CBC8(v95, &qword_1000A5658);
  (*(void (**)(char *, uint64_t))(v123 + 8))(v122, v93);
LABEL_26:
  uint64_t v77 = (uint64_t)v157;
  uint64_t v73 = v158;
  uint64_t v74 = v159;
LABEL_27:
  uint64_t v102 = 1;
  if (!sub_1000554AC(v78))
  {
    uint64_t v103 = v134;
    sub_10007CB70();
    char v104 = sub_10007C760();
    uint64_t v105 = v74;
    uint64_t v106 = v54;
    uint64_t v107 = v135;
    uint64_t v108 = (uint64_t)v133;
    uint64_t v109 = v73;
    uint64_t v110 = v136;
    (*(void (**)(char *, char *, uint64_t))(v135 + 16))(v133, v103, v136);
    uint64_t v111 = v108 + *(int *)(v109 + 36);
    *(unsigned char *)uint64_t v111 = v104;
    *(_OWORD *)(v111 + 8) = 0u;
    *(_OWORD *)(v111 + 24) = 0u;
    *(unsigned char *)(v111 + 40) = 1;
    uint64_t v112 = v110;
    uint64_t v73 = v109;
    (*(void (**)(char *, uint64_t))(v107 + 8))(v103, v112);
    uint64_t v54 = v106;
    uint64_t v74 = v105;
    uint64_t v75 = (uint64_t)v163;
    uint64_t v76 = v164;
    sub_10000CB00(v108, v77, &qword_1000A5608);
    uint64_t v102 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v76 + 56))(v77, v102, 1, v73);
  uint64_t v113 = v162;
  sub_10000CB64(v54, v162, &qword_1000A5668);
  sub_10000CB64(v77, v75, &qword_1000A5610);
  sub_10000CB64(v113, v74, &qword_1000A5668);
  uint64_t v114 = sub_100008FA4(&qword_1000A56A0);
  sub_10000CB64(v75, v74 + *(int *)(v114 + 48), &qword_1000A5610);
  sub_10000CBC8(v77, &qword_1000A5610);
  sub_10000CBC8(v54, &qword_1000A5668);
  sub_10000CBC8(v75, &qword_1000A5610);
  return sub_10000CBC8(v113, &qword_1000A5668);
}

uint64_t sub_1000591D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_100008FA4(&qword_1000A5410);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100008FA4(&qword_1000A49E0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100008FA4(&qword_1000A49E8);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100008FA4(&qword_1000A3638);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for NotesFolderWidgetView(0);
  sub_10000CB64(a1 + *(int *)(v19 + 28), (uint64_t)v11, &qword_1000A49E0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 2, v12))
  {
    uint64_t v20 = type metadata accessor for NotesFolder();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v18, 1, 1, v20);
  }
  else
  {
    sub_10000CB00((uint64_t)v11, (uint64_t)v15, &qword_1000A49E8);
    swift_bridgeObjectRelease();
    sub_100061378((uint64_t)v15, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for NotesFolder);
    uint64_t v21 = type metadata accessor for NotesFolder();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v18, 0, 1, v21);
  }
  sub_10006130C(a2, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for Note);
  uint64_t v22 = type metadata accessor for Note();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v8, 0, 1, v22);
  *(void *)a3 = swift_getKeyPath();
  *(unsigned char *)(a3 + 8) = 0;
  uint64_t v23 = type metadata accessor for NotesFolderWidgetView.SmallNoteRow(0);
  sub_10000CB00((uint64_t)v18, a3 + *(int *)(v23 + 20), &qword_1000A3638);
  return sub_10000CB00((uint64_t)v8, a3 + *(int *)(v23 + 24), &qword_1000A5410);
}

uint64_t sub_10005951C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100008FA4(&qword_1000A5410);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006130C(a1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Note);
  uint64_t v7 = type metadata accessor for Note();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 0, 1, v7);
  uint64_t KeyPath = swift_getKeyPath();
  sub_10000CB00((uint64_t)v6, a2, &qword_1000A5410);
  uint64_t result = type metadata accessor for NotesFolderWidgetView.MediumNoteRow(0);
  uint64_t v10 = a2 + *(int *)(result + 20);
  *(void *)uint64_t v10 = KeyPath;
  *(unsigned char *)(v10 + 8) = 0;
  return result;
}

uint64_t sub_100059630@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_100008FA4(&qword_1000A5410);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006130C(a1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Note);
  uint64_t v7 = type metadata accessor for Note();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 0, 1, v7);
  uint64_t KeyPath = swift_getKeyPath();
  *a2 = swift_getKeyPath();
  sub_100008FA4(&qword_1000A4CD0);
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = type metadata accessor for NotesFolderWidgetView.LargeNoteRow(0);
  uint64_t result = sub_10000CB00((uint64_t)v6, (uint64_t)a2 + *(int *)(v9 + 20), &qword_1000A5410);
  uint64_t v11 = (char *)a2 + *(int *)(v9 + 24);
  *(void *)uint64_t v11 = KeyPath;
  v11[8] = 0;
  return result;
}

int64x2_t sub_100059784()
{
  int64x2_t result = vdupq_n_s64(0x4040000000000000uLL);
  xmmword_1000B2460 = (__int128)result;
  return result;
}

uint64_t *sub_100059798(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_100008FA4(&qword_1000A4CD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_10007C5F0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    sub_100008FA4(&qword_1000A3360);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_10007CD30();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[6];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = *(void *)v15;
    char v17 = v15[8];
    sub_10000A9EC(*(void *)v15, v17);
    *(void *)uint64_t v14 = v16;
    v14[8] = v17;
    uint64_t v18 = a3[7];
    uint64_t v19 = (uint64_t *)((char *)a1 + v18);
    uint64_t v20 = (uint64_t *)((char *)a2 + v18);
    uint64_t v21 = sub_100008FA4(&qword_1000A49E8);
    uint64_t v22 = *(void *)(v21 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v22 + 48))(v20, 2, v21))
    {
      uint64_t v23 = sub_100008FA4(&qword_1000A49E0);
      memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      uint64_t v24 = v20[1];
      *uint64_t v19 = *v20;
      v19[1] = v24;
      uint64_t v25 = v20[3];
      v19[2] = v20[2];
      v19[3] = v25;
      *((unsigned char *)v19 + 32) = *((unsigned char *)v20 + 32);
      uint64_t v26 = v20[6];
      v19[5] = v20[5];
      v19[6] = v26;
      uint64_t v27 = type metadata accessor for NotesFolder();
      uint64_t v28 = *(int *)(v27 + 32);
      __dst = (char *)v19 + v28;
      uint64_t v36 = (char *)v20 + v28;
      uint64_t v37 = v27;
      uint64_t v29 = sub_10007C110();
      uint64_t v30 = *(void *)(v29 - 8);
      uint64_t v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v35(v36, 1, v29))
      {
        uint64_t v31 = sub_100008FA4(&qword_1000A3270);
        memcpy(__dst, v36, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v30 + 16))(__dst, v36, v29);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(__dst, 0, 1, v29);
      }
      *(void *)((char *)v19 + *(int *)(v37 + 36)) = *(void *)((char *)v20 + *(int *)(v37 + 36));
      *(void *)((char *)v19 + *(int *)(v37 + 40)) = *(void *)((char *)v20 + *(int *)(v37 + 40));
      *(void *)((char *)v19 + *(int *)(v21 + 48)) = *(void *)((char *)v20 + *(int *)(v21 + 48));
      uint64_t v32 = *(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v32(v19, 0, 2, v21);
    }
  }
  return a1;
}

uint64_t sub_100059BB4(uint64_t a1, int *a2)
{
  sub_100008FA4(&qword_1000A4CD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_10007C5F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + a2[5];
  sub_100008FA4(&qword_1000A3360);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_10007CD30();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  sub_10000AC28(*(void *)(a1 + a2[6]), *(unsigned char *)(a1 + a2[6] + 8));
  uint64_t v7 = a1 + a2[7];
  uint64_t v8 = sub_100008FA4(&qword_1000A49E8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 2, v8);
  if (!result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v10 = v7 + *(int *)(type metadata accessor for NotesFolder() + 32);
    uint64_t v11 = sub_10007C110();
    uint64_t v12 = *(void *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    }
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_100059E00(void *a1, void *a2, int *a3)
{
  sub_100008FA4(&qword_1000A4CD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_10007C5F0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_100008FA4(&qword_1000A3360);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_10007CD30();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    void *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)v13;
  char v15 = v13[8];
  sub_10000A9EC(*(void *)v13, v15);
  *(void *)uint64_t v12 = v14;
  v12[8] = v15;
  uint64_t v16 = a3[7];
  char v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  uint64_t v19 = sub_100008FA4(&qword_1000A49E8);
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v20 + 48))(v18, 2, v19))
  {
    uint64_t v21 = sub_100008FA4(&qword_1000A49E0);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    uint64_t v22 = v18[1];
    *char v17 = *v18;
    v17[1] = v22;
    uint64_t v23 = v18[3];
    void v17[2] = v18[2];
    v17[3] = v23;
    *((unsigned char *)v17 + 32) = *((unsigned char *)v18 + 32);
    uint64_t v24 = v18[6];
    v17[5] = v18[5];
    v17[6] = v24;
    uint64_t v25 = type metadata accessor for NotesFolder();
    uint64_t v26 = *(int *)(v25 + 32);
    __dst = (char *)v17 + v26;
    uint64_t v35 = v25;
    uint64_t v33 = (char *)v18 + v26;
    uint64_t v27 = sub_10007C110();
    uint64_t v28 = *(void *)(v27 - 8);
    uint64_t v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v32(v33, 1, v27))
    {
      uint64_t v29 = sub_100008FA4(&qword_1000A3270);
      memcpy(__dst, v33, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(__dst, v33, v27);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, v27);
    }
    *(void *)((char *)v17 + *(int *)(v35 + 36)) = *(void *)((char *)v18 + *(int *)(v35 + 36));
    *(void *)((char *)v17 + *(int *)(v35 + 40)) = *(void *)((char *)v18 + *(int *)(v35 + 40));
    *(void *)((char *)v17 + *(int *)(v19 + 48)) = *(void *)((char *)v18 + *(int *)(v19 + 48));
    uint64_t v30 = *(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v30(v17, 0, 2, v19);
  }
  return a1;
}

void *sub_10005A1CC(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10000CBC8((uint64_t)a1, &qword_1000A4CD0);
    sub_100008FA4(&qword_1000A4CD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_10007C5F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_10000CBC8((uint64_t)a1 + v7, &qword_1000A3360);
    sub_100008FA4(&qword_1000A3360);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_10007CD30();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      void *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)v13;
  char v15 = v13[8];
  sub_10000A9EC(*(void *)v13, v15);
  uint64_t v16 = *(void *)v12;
  char v17 = v12[8];
  *(void *)uint64_t v12 = v14;
  v12[8] = v15;
  sub_10000AC28(v16, v17);
  uint64_t v18 = a3[7];
  uint64_t v19 = (uint64_t)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_100008FA4(&qword_1000A49E8);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
  int v24 = v23(v19, 2, v21);
  int v25 = v23((uint64_t)v20, 2, v21);
  if (!v24)
  {
    if (v25)
    {
      sub_10000CBC8(v19, &qword_1000A49E8);
      goto LABEL_15;
    }
    *(void *)uint64_t v19 = *(void *)v20;
    *(void *)(v19 + 8) = *((void *)v20 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v19 + 16) = *((void *)v20 + 2);
    *(void *)(v19 + 24) = *((void *)v20 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v19 + 32) = v20[32];
    *(void *)(v19 + 40) = *((void *)v20 + 5);
    *(void *)(v19 + 48) = *((void *)v20 + 6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v48 = (int *)type metadata accessor for NotesFolder();
    uint64_t v32 = v48[8];
    uint64_t v33 = (void *)(v19 + v32);
    uint64_t v34 = &v20[v32];
    uint64_t v35 = sub_10007C110();
    uint64_t v36 = *(void *)(v35 - 8);
    uint64_t v37 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v36 + 48);
    uint64_t v45 = v33;
    LODWORD(v33) = v37(v33, 1, v35);
    int v38 = v37(v34, 1, v35);
    if (v33)
    {
      if (!v38)
      {
        (*(void (**)(void *, char *, uint64_t))(v36 + 16))(v45, v34, v35);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v36 + 56))(v45, 0, 1, v35);
        goto LABEL_26;
      }
      size_t v39 = *(void *)(*(void *)(sub_100008FA4(&qword_1000A3270) - 8) + 64);
      uint64_t v40 = v45;
    }
    else
    {
      if (!v38)
      {
        (*(void (**)(void *, char *, uint64_t))(v36 + 24))(v45, v34, v35);
        goto LABEL_26;
      }
      (*(void (**)(void *, uint64_t))(v36 + 8))(v45, v35);
      size_t v39 = *(void *)(*(void *)(sub_100008FA4(&qword_1000A3270) - 8) + 64);
      uint64_t v40 = v45;
    }
    memcpy(v40, v34, v39);
LABEL_26:
    *(void *)(v19 + v48[9]) = *(void *)&v20[v48[9]];
    swift_retain();
    swift_release();
    *(void *)(v19 + v48[10]) = *(void *)&v20[v48[10]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v19 + *(int *)(v21 + 48)) = *(void *)&v20[*(int *)(v21 + 48)];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    return a1;
  }
  if (v25)
  {
LABEL_15:
    uint64_t v31 = sub_100008FA4(&qword_1000A49E0);
    memcpy((void *)v19, v20, *(void *)(*(void *)(v31 - 8) + 64));
    return a1;
  }
  *(void *)uint64_t v19 = *(void *)v20;
  *(void *)(v19 + 8) = *((void *)v20 + 1);
  *(void *)(v19 + 16) = *((void *)v20 + 2);
  *(void *)(v19 + 24) = *((void *)v20 + 3);
  *(unsigned char *)(v19 + 32) = v20[32];
  *(void *)(v19 + 40) = *((void *)v20 + 5);
  *(void *)(v19 + 48) = *((void *)v20 + 6);
  uint64_t v26 = type metadata accessor for NotesFolder();
  uint64_t v27 = *(int *)(v26 + 32);
  __dst = (void *)(v19 + v27);
  uint64_t v47 = v26;
  uint64_t v44 = &v20[v27];
  uint64_t v28 = sub_10007C110();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v43 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v43(v44, 1, v28))
  {
    uint64_t v30 = sub_100008FA4(&qword_1000A3270);
    memcpy(__dst, v44, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v29 + 16))(__dst, v44, v28);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(__dst, 0, 1, v28);
  }
  *(void *)(v19 + *(int *)(v47 + 36)) = *(void *)&v20[*(int *)(v47 + 36)];
  *(void *)(v19 + *(int *)(v47 + 40)) = *(void *)&v20[*(int *)(v47 + 40)];
  *(void *)(v19 + *(int *)(v21 + 48)) = *(void *)&v20[*(int *)(v21 + 48)];
  uint64_t v41 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v22 + 56);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v41(v19, 0, 2, v21);
  return a1;
}

char *sub_10005A84C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_100008FA4(&qword_1000A4CD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_10007C5F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_100008FA4(&qword_1000A3360);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_10007CD30();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = a3[7];
  char v15 = &a1[v13];
  uint64_t v16 = &a2[v13];
  *(void *)char v15 = *(void *)v16;
  v15[8] = v16[8];
  char v17 = &a1[v14];
  uint64_t v18 = &a2[v14];
  uint64_t v19 = sub_100008FA4(&qword_1000A49E8);
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 2, v19))
  {
    uint64_t v21 = sub_100008FA4(&qword_1000A49E0);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    long long v22 = *((_OWORD *)v18 + 1);
    *(_OWORD *)char v17 = *(_OWORD *)v18;
    *((_OWORD *)v17 + 1) = v22;
    v17[32] = v18[32];
    *(_OWORD *)(v17 + 40) = *(_OWORD *)(v18 + 40);
    uint64_t v23 = (int *)type metadata accessor for NotesFolder();
    uint64_t v24 = v23[8];
    int v25 = &v17[v24];
    uint64_t v26 = &v18[v24];
    uint64_t v27 = sub_10007C110();
    uint64_t v28 = *(void *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      uint64_t v29 = sub_100008FA4(&qword_1000A3270);
      memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v25, v26, v27);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
    *(void *)&v17[v23[9]] = *(void *)&v18[v23[9]];
    *(void *)&v17[v23[10]] = *(void *)&v18[v23[10]];
    *(void *)&v17[*(int *)(v19 + 48)] = *(void *)&v18[*(int *)(v19 + 48)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 2, v19);
  }
  return a1;
}

char *sub_10005ABC0(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10000CBC8((uint64_t)a1, &qword_1000A4CD0);
    uint64_t v6 = sub_100008FA4(&qword_1000A4CD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_10007C5F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_10000CBC8((uint64_t)&a1[v8], &qword_1000A3360);
    uint64_t v11 = sub_100008FA4(&qword_1000A3360);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_10007CD30();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  char v15 = &a2[v13];
  uint64_t v16 = *(void *)v15;
  LOBYTE(v15) = v15[8];
  uint64_t v17 = *(void *)v14;
  char v18 = v14[8];
  *(void *)uint64_t v14 = v16;
  v14[8] = (char)v15;
  sub_10000AC28(v17, v18);
  uint64_t v19 = a3[7];
  uint64_t v20 = (uint64_t)&a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = sub_100008FA4(&qword_1000A49E8);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
  int v25 = v24(v20, 2, v22);
  int v26 = v24((uint64_t)v21, 2, v22);
  if (!v25)
  {
    if (v26)
    {
      sub_10000CBC8(v20, &qword_1000A49E8);
      goto LABEL_14;
    }
    uint64_t v36 = *((void *)v21 + 1);
    *(void *)uint64_t v20 = *(void *)v21;
    *(void *)(v20 + 8) = v36;
    swift_bridgeObjectRelease();
    uint64_t v37 = *((void *)v21 + 3);
    *(void *)(v20 + 16) = *((void *)v21 + 2);
    *(void *)(v20 + 24) = v37;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v20 + 32) = v21[32];
    uint64_t v38 = *((void *)v21 + 6);
    *(void *)(v20 + 40) = *((void *)v21 + 5);
    *(void *)(v20 + 48) = v38;
    swift_bridgeObjectRelease();
    uint64_t v50 = (int *)type metadata accessor for NotesFolder();
    uint64_t v39 = v50[8];
    uint64_t v40 = (void *)(v20 + v39);
    uint64_t v41 = &v21[v39];
    uint64_t v42 = sub_10007C110();
    uint64_t v43 = *(void *)(v42 - 8);
    uint64_t v44 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v43 + 48);
    uint64_t v49 = v40;
    LODWORD(v40) = v44(v40, 1, v42);
    int v45 = v44(v41, 1, v42);
    if (v40)
    {
      if (!v45)
      {
        (*(void (**)(void *, char *, uint64_t))(v43 + 32))(v49, v41, v42);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v43 + 56))(v49, 0, 1, v42);
        goto LABEL_25;
      }
      size_t v46 = *(void *)(*(void *)(sub_100008FA4(&qword_1000A3270) - 8) + 64);
      uint64_t v47 = v49;
    }
    else
    {
      if (!v45)
      {
        (*(void (**)(void *, char *, uint64_t))(v43 + 40))(v49, v41, v42);
        goto LABEL_25;
      }
      (*(void (**)(void *, uint64_t))(v43 + 8))(v49, v42);
      size_t v46 = *(void *)(*(void *)(sub_100008FA4(&qword_1000A3270) - 8) + 64);
      uint64_t v47 = v49;
    }
    memcpy(v47, v41, v46);
LABEL_25:
    *(void *)(v20 + v50[9]) = *(void *)&v21[v50[9]];
    swift_release();
    *(void *)(v20 + v50[10]) = *(void *)&v21[v50[10]];
    swift_bridgeObjectRelease();
    *(void *)(v20 + *(int *)(v22 + 48)) = *(void *)&v21[*(int *)(v22 + 48)];
    swift_bridgeObjectRelease();
    return a1;
  }
  if (v26)
  {
LABEL_14:
    uint64_t v35 = sub_100008FA4(&qword_1000A49E0);
    memcpy((void *)v20, v21, *(void *)(*(void *)(v35 - 8) + 64));
    return a1;
  }
  long long v27 = *((_OWORD *)v21 + 1);
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v27;
  *(unsigned char *)(v20 + 32) = v21[32];
  *(_OWORD *)(v20 + 40) = *(_OWORD *)(v21 + 40);
  uint64_t v28 = (int *)type metadata accessor for NotesFolder();
  uint64_t v29 = v28[8];
  uint64_t v30 = (void *)(v20 + v29);
  uint64_t v31 = &v21[v29];
  uint64_t v32 = sub_10007C110();
  uint64_t v33 = *(void *)(v32 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
  {
    uint64_t v34 = sub_100008FA4(&qword_1000A3270);
    memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v33 + 32))(v30, v31, v32);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
  }
  *(void *)(v20 + v28[9]) = *(void *)&v21[v28[9]];
  *(void *)(v20 + v28[10]) = *(void *)&v21[v28[10]];
  *(void *)(v20 + *(int *)(v22 + 48)) = *(void *)&v21[*(int *)(v22 + 48)];
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 2, v22);
  return a1;
}

uint64_t sub_10005B194(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10005B1A8);
}

uint64_t sub_10005B1A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100008FA4(&qword_1000A4FD8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_100008FA4(&qword_1000A3370);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + a3[5];
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  if (a2 == 254)
  {
    unsigned int v14 = *(unsigned __int8 *)(a1 + a3[6] + 8);
    if (v14 > 1) {
      return (v14 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v15 = sub_100008FA4(&qword_1000A49E0);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[7];
    return v16(v18, a2, v17);
  }
}

uint64_t sub_10005B330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10005B344);
}

uint64_t sub_10005B344(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_100008FA4(&qword_1000A4FD8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = sub_100008FA4(&qword_1000A3370);
  uint64_t v14 = *(void *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v12 = a1 + a4[5];
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  if (a3 == 254)
  {
    *(unsigned char *)(a1 + a4[6] + 8) = -(char)a2;
  }
  else
  {
    uint64_t v15 = sub_100008FA4(&qword_1000A49E0);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a4[7];
    return v16(v18, a2, a2, v17);
  }
  return result;
}

uint64_t type metadata accessor for NotesFolderWidgetView(uint64_t a1)
{
  return sub_10000A2B4(a1, qword_1000A5488);
}

void sub_10005B4F0()
{
  sub_100069F08(319, (unint64_t *)&unk_1000A5048, (uint64_t (*)(uint64_t))&type metadata accessor for ContentSizeCategory, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F)
  {
    sub_100069F08(319, (unint64_t *)&unk_1000A33E8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v1 <= 0x3F)
    {
      sub_100033378();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_10005B65C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10005B678@<X0>(uint64_t a1@<X8>)
{
  uint64_t v93 = a1;
  uint64_t v2 = sub_10007C360();
  uint64_t v89 = *(void *)(v2 - 8);
  uint64_t v90 = v2;
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v85 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v84 = (uint64_t)&v74 - v5;
  uint64_t v6 = sub_10007CC10();
  uint64_t v91 = *(void *)(v6 - 8);
  uint64_t v92 = v6;
  __chkstk_darwin(v6);
  BOOL v88 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100008FA4(&qword_1000A5C90);
  __chkstk_darwin(v8 - 8);
  uint64_t v83 = (uint64_t)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_100008FA4(&qword_1000A5C98);
  __chkstk_darwin(v82);
  uint64_t v87 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_10007C3F0();
  __chkstk_darwin(v79);
  uint64_t v12 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100008FA4(&qword_1000A35E8);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10007CAF0();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_100008FA4(&qword_1000A35F0);
  uint64_t v75 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  uint64_t v21 = (char *)&v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v78 = sub_100008FA4(&qword_1000A5CA0);
  uint64_t v77 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v23 = (char *)&v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100008FA4(&qword_1000A5CA8);
  __chkstk_darwin(v24 - 8);
  int v26 = (char *)&v74 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_100008FA4(&qword_1000A5CB0);
  __chkstk_darwin(v76);
  uint64_t v94 = (uint64_t)&v74 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_100008FA4(&qword_1000A5CB8);
  __chkstk_darwin(v80);
  uint64_t v81 = (char *)&v74 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for NotesFolderWidgetView.Thumbnail(0);
  uint64_t v86 = v1;
  (*(void (**)(char *, void, uint64_t))(v17 + 104))(v19, enum case for Image.ResizingMode.stretch(_:), v16);
  sub_10007CB40();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  sub_10007CD10();
  uint64_t v29 = sub_10007CD20();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v15, 0, 1, v29);
  sub_10007CB30();
  swift_release();
  sub_10000CBC8((uint64_t)v15, &qword_1000A35E8);
  swift_getOpaqueTypeConformance2();
  uint64_t v30 = v74;
  sub_10007C8D0();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v21, v30);
  if (qword_1000A3230 != -1) {
    swift_once();
  }
  double v31 = *((double *)&xmmword_1000B2460 + 1);
  uint64_t v32 = sub_10007CBF0();
  double v34 = sub_1000709AC(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v26, 0.0, 1, v31, 0, v32, v33);
  (*(void (**)(char *, void, double))(v77 + 8))(v23, v78, v34);
  uint64_t v35 = v79;
  uint64_t v36 = &v12[*(int *)(v79 + 20)];
  uint64_t v37 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v38 = sub_10007C5B0();
  uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 104);
  v39(v36, v37, v38);
  __asm { FMOV            V0.2D, #5.0 }
  long long v78 = _Q0;
  *(_OWORD *)uint64_t v12 = _Q0;
  uint64_t v45 = v94;
  uint64_t v46 = v94 + *(int *)(v76 + 36);
  sub_10006130C((uint64_t)v12, v46, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v46 + *(int *)(sub_100008FA4(&qword_1000A5CC0) + 36)) = 256;
  sub_10000CB64((uint64_t)v26, v45, &qword_1000A5CA8);
  sub_100061BB4((uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_10000CBC8((uint64_t)v26, &qword_1000A5CA8);
  v39(&v12[*(int *)(v35 + 20)], v37, v38);
  *(_OWORD *)uint64_t v12 = v78;
  uint64_t v47 = sub_10007C9D0();
  sub_10007C370();
  uint64_t v48 = v83;
  sub_10006130C((uint64_t)v12, v83, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v49 = v48 + *(int *)(sub_100008FA4(&qword_1000A5CC8) + 36);
  long long v50 = v96;
  *(_OWORD *)uint64_t v49 = v95;
  *(_OWORD *)(v49 + 16) = v50;
  *(void *)(v49 + 32) = v97;
  uint64_t v51 = sub_100008FA4(&qword_1000A5CD0);
  *(void *)(v48 + *(int *)(v51 + 52)) = v47;
  *(_WORD *)(v48 + *(int *)(v51 + 56)) = 256;
  uint64_t v52 = sub_10007CBF0();
  uint64_t v54 = v53;
  int v55 = (uint64_t *)(v48 + *(int *)(sub_100008FA4(&qword_1000A5CD8) + 36));
  *int v55 = v52;
  v55[1] = v54;
  sub_100061BB4((uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v56 = v84;
  sub_10003EF78(v84);
  uint64_t v58 = v89;
  uint64_t v57 = v90;
  uint64_t v59 = v85;
  (*(void (**)(char *, void, uint64_t))(v89 + 104))(v85, enum case for ColorScheme.light(_:), v90);
  LOBYTE(v52) = sub_10007C350();
  int v60 = *(void (**)(char *, uint64_t))(v58 + 8);
  v60(v59, v57);
  v60((char *)v56, v57);
  uint64_t v62 = v91;
  uint64_t v61 = v92;
  uint64_t v63 = (unsigned int *)&enum case for BlendMode.plusDarker(_:);
  if ((v52 & 1) == 0) {
    uint64_t v63 = (unsigned int *)&enum case for BlendMode.plusLighter(_:);
  }
  uint64_t v64 = v88;
  (*(void (**)(char *, void, uint64_t))(v91 + 104))(v88, *v63, v92);
  uint64_t v65 = (uint64_t)v87;
  (*(void (**)(char *, char *, uint64_t))(v62 + 16))(&v87[*(int *)(v82 + 36)], v64, v61);
  sub_10000CB64(v48, v65, &qword_1000A5C90);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v64, v61);
  sub_10000CBC8(v48, &qword_1000A5C90);
  uint64_t v66 = sub_10007CBF0();
  uint64_t v68 = v67;
  uint64_t v69 = (uint64_t)v81;
  uint64_t v70 = (uint64_t)&v81[*(int *)(v80 + 36)];
  sub_10000CB64(v65, v70, &qword_1000A5C98);
  uint64_t v71 = (uint64_t *)(v70 + *(int *)(sub_100008FA4(&qword_1000A5CE0) + 36));
  *uint64_t v71 = v66;
  v71[1] = v68;
  uint64_t v72 = v94;
  sub_10000CB64(v94, v69, &qword_1000A5CB0);
  sub_10000CBC8(v65, &qword_1000A5C98);
  sub_10000CBC8(v72, &qword_1000A5CB0);
  return sub_10000CB00(v69, v93, &qword_1000A5CB8);
}

uint64_t sub_10005C0F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v53 = a1;
  uint64_t v50 = sub_10007C5F0();
  uint64_t v2 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100008FA4(&qword_1000A5B78);
  uint64_t v51 = *(void *)(v5 - 8);
  uint64_t v52 = v5;
  __chkstk_darwin(v5);
  uint64_t v49 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_10007C610();
  sub_10005C540(v1, (uint64_t)v62);
  int v37 = BYTE8(v62[1]);
  uint64_t v42 = *(void *)&v62[2];
  uint64_t v43 = *(void *)&v62[1];
  uint64_t v41 = *((void *)&v62[2] + 1);
  char v7 = v62[3];
  uint64_t v47 = *((void *)&v62[4] + 1);
  char v8 = v62[5];
  long long v46 = *(_OWORD *)((char *)&v62[5] + 8);
  uint64_t v44 = *(void *)&v62[7];
  uint64_t v45 = *((void *)&v62[6] + 1);
  long long v38 = v62[0];
  long long v39 = *(_OWORD *)((char *)&v62[3] + 8);
  int v40 = sub_10007C720();
  uint64_t v9 = *(void *)v1;
  char v10 = *(unsigned char *)(v1 + 8);
  sub_10000A9EC(*(void *)v1, v10);
  sub_10003EFB4(v9, v10);
  sub_10000AC28(v9, v10);
  sub_10007C340();
  uint64_t v36 = v11;
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  char v18 = sub_10007C750();
  sub_10000A9EC(v9, v10);
  sub_10003EFB4(v9, v10);
  sub_10000AC28(v9, v10);
  sub_10007C340();
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  char v27 = sub_10007C740();
  sub_10000A9EC(v9, v10);
  sub_10003EFB4(v9, v10);
  sub_10000AC28(v9, v10);
  char v58 = 0;
  char v57 = v37;
  char v56 = v7;
  char v55 = v8;
  char v28 = v37;
  char v59 = 0;
  char v60 = 0;
  sub_10007C340();
  char v61 = 0;
  v54[0] = (unint64_t)v48;
  LOBYTE(v54[1]) = 0;
  *(_OWORD *)((char *)&v54[1] + 8) = v38;
  *((void *)&v54[2] + 1) = v43;
  LOBYTE(v54[3]) = v28;
  *((void *)&v54[3] + 1) = v42;
  *(void *)&v54[4] = v41;
  BYTE8(v54[4]) = v7;
  v54[5] = v39;
  *(void *)&v54[6] = v47;
  BYTE8(v54[6]) = v8;
  v54[7] = v46;
  *(void *)&v54[8] = v45;
  *((void *)&v54[8] + 1) = v44;
  LOBYTE(v54[9]) = v40;
  *((void *)&v54[9] + 1) = v36;
  *(void *)&v54[10] = v13;
  *((void *)&v54[10] + 1) = v15;
  *(void *)&v54[11] = v17;
  BYTE8(v54[11]) = 0;
  LOBYTE(v54[12]) = v18;
  *((void *)&v54[12] + 1) = v20;
  *(void *)&v54[13] = v22;
  *((void *)&v54[13] + 1) = v24;
  *(void *)&v54[14] = v26;
  BYTE8(v54[14]) = v60;
  LOBYTE(v54[15]) = v27;
  *((void *)&v54[15] + 1) = v29;
  *(void *)&v54[16] = v30;
  *((void *)&v54[16] + 1) = v31;
  *(void *)&v54[17] = v32;
  BYTE8(v54[17]) = 0;
  uint64_t v33 = v50;
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for ContentSizeCategory.extraExtraExtraLarge(_:), v50);
  sub_100008FA4(&qword_1000A5B80);
  sub_100068BD4(&qword_1000A5B88, &qword_1000A5B80, (void (*)(void))sub_100068C50);
  double v34 = v49;
  sub_10007C8E0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v33);
  memcpy(v62, v54, 0x119uLL);
  sub_100068D20((uint64_t)v62);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v51 + 32))(v53, v34, v52);
}

__n128 sub_10005C540@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for NotesFolderWidgetView.SmallNoteRow(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4 - 8);
  sub_10006130C(a1, (uint64_t)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for NotesFolderWidgetView.SmallNoteRow);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  sub_100061378((uint64_t)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7, type metadata accessor for NotesFolderWidgetView.SmallNoteRow);
  uint64_t v9 = sub_10007C590();
  sub_10005D8FC(a1, (uint64_t *)&v16);
  uint64_t v10 = v17;
  char v11 = v18;
  uint64_t v12 = v19;
  uint64_t v13 = v21;
  __n128 result = v20;
  long long v15 = v16;
  *(void *)a2 = sub_10006907C;
  *(void *)(a2 + 8) = v8;
  *(void *)(a2 + 16) = 0x4000000000000000;
  *(unsigned char *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = v9;
  *(void *)(a2 + 40) = 0;
  *(unsigned char *)(a2 + 48) = 0;
  *(_OWORD *)(a2 + 56) = v15;
  *(void *)(a2 + 72) = v10;
  *(unsigned char *)(a2 + 80) = v11;
  *(void *)(a2 + 88) = v12;
  *(__n128 *)(a2 + 96) = result;
  *(void *)(a2 + 112) = v13;
  return result;
}

uint64_t sub_10005C6BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = sub_10007C610();
  *(void *)(a3 + 8) = 0x4000000000000000;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t v6 = sub_100008FA4(&qword_1000A5BC0);
  return sub_10005C71C(a2, a1, (char *)(a3 + *(int *)(v6 + 44)));
}

uint64_t sub_10005C71C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v108 = a2;
  uint64_t v128 = a3;
  uint64_t v4 = type metadata accessor for NotesFolderWidgetView.SmallNoteRow(0);
  uint64_t v5 = v4 - 8;
  uint64_t v110 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v111 = v6;
  uint64_t v114 = (uint64_t)v101 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_10007C3C0();
  uint64_t v112 = *(void *)(v113 - 8);
  __chkstk_darwin(v113);
  uint64_t v106 = v7;
  uint64_t v109 = (char *)v101 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_100008FA4(&qword_1000A5BC8);
  __chkstk_darwin(v124);
  uint64_t v9 = (uint64_t (**)@<X0>(uint64_t@<X8>))((char *)v101 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v105 = sub_10007C320();
  uint64_t v104 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  uint64_t v120 = (char *)v101 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = sub_100008FA4(&qword_1000A4D38);
  uint64_t v11 = __chkstk_darwin(v132);
  uint64_t v103 = (char *)v101 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v107 = (uint64_t)v101 - v13;
  uint64_t v14 = type metadata accessor for Note();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v102 = (uint64_t)v101 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101[1] = v17;
  __chkstk_darwin(v16);
  uint64_t v121 = (uint64_t)v101 - v18;
  uint64_t v19 = sub_100008FA4(&qword_1000A5BD0);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  uint64_t v126 = (char *)v101 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v125 = (char *)v101 - v22;
  uint64_t v23 = sub_100008FA4(&qword_1000A5410);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  uint64_t v119 = (char *)v101 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  char v28 = (char *)v101 - v27;
  __chkstk_darwin(v26);
  uint64_t v30 = (char *)v101 - v29;
  uint64_t v117 = sub_100008FA4(&qword_1000A4D48);
  uint64_t v116 = *(void *)(v117 - 8);
  __chkstk_darwin(v117);
  uint64_t v32 = (char *)v101 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = sub_100008FA4(&qword_1000A4D50);
  __chkstk_darwin(v115);
  double v34 = (char *)v101 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_100008FA4(&qword_1000A4D58);
  __chkstk_darwin(v118);
  uint64_t v36 = (char *)v101 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = sub_100008FA4(&qword_1000A4D60);
  uint64_t v123 = *(void *)(v131 - 8);
  uint64_t v37 = __chkstk_darwin(v131);
  uint64_t v122 = (char *)v101 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v129 = (char *)v101 - v40;
  __chkstk_darwin(v39);
  uint64_t v135 = (char *)v101 - v41;
  uint64_t v133 = a1 + *(int *)(v5 + 32);
  sub_10000CB64(v133, (uint64_t)v30, &qword_1000A5410);
  v101[0] = v15;
  uint64_t v134 = *(uint64_t (**)())(v15 + 48);
  int v42 = ((uint64_t (*)(char *, uint64_t, uint64_t))v134)(v30, 1, v14);
  uint64_t v127 = v9;
  if (v42 == 1)
  {
    sub_10000CBC8((uint64_t)v30, &qword_1000A5410);
    sub_10007CF80();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_100061BB4((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for Note);
  }
  sub_10000CB64(v133, (uint64_t)v28, &qword_1000A5410);
  uint64_t v130 = v14;
  ((void (*)(char *, uint64_t, uint64_t))v134)(v28, 1, v14);
  sub_10000CBC8((uint64_t)v28, &qword_1000A5410);
  uint64_t v43 = sub_10007C840();
  swift_bridgeObjectRelease();
  uint64_t v44 = a1;
  uint64_t v45 = *(void *)a1;
  char v46 = *(unsigned char *)(a1 + 8);
  sub_10000A9EC(*(void *)a1, v46);
  char v47 = sub_10003EFB4(v45, v46);
  sub_10000AC28(v45, v46);
  if (v47) {
    uint64_t v48 = 3;
  }
  else {
    uint64_t v48 = 10;
  }
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v136 = v43;
  uint64_t v137 = KeyPath;
  uint64_t v138 = v48;
  char v139 = 0;
  sub_100008FA4(&qword_1000A4D70);
  sub_100040830((unint64_t *)&qword_1000A4D78, &qword_1000A4D70);
  sub_10007C990();
  swift_release();
  swift_release();
  uint64_t v50 = *(void *)a1;
  char v51 = *(unsigned char *)(a1 + 8);
  sub_10000A9EC(*(void *)a1, v51);
  char v52 = sub_10003EFB4(v50, v51);
  sub_10000AC28(v50, v51);
  if (v52) {
    uint64_t v53 = sub_10007CA80();
  }
  else {
    uint64_t v53 = sub_10007CA50();
  }
  uint64_t v54 = v53;
  uint64_t v55 = v118;
  uint64_t v56 = v117;
  uint64_t v57 = v116;
  uint64_t v58 = v115;
  (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v34, v32, v117);
  *(void *)&v34[*(int *)(v58 + 36)] = v54;
  (*(void (**)(char *, uint64_t))(v57 + 8))(v32, v56);
  sub_10000CB64((uint64_t)v34, (uint64_t)v36, &qword_1000A4D50);
  *(void *)&v36[*(int *)(v55 + 36)] = 0x3FF0000000000000;
  sub_10000CBC8((uint64_t)v34, &qword_1000A4D50);
  uint64_t v59 = *(void *)v44;
  LOBYTE(v54) = *(unsigned char *)(v44 + 8);
  sub_10000A9EC(*(void *)v44, v54);
  LOBYTE(v56) = sub_10003EFB4(v59, v54);
  sub_10000AC28(v59, v54);
  if (v56) {
    sub_10007C7E0();
  }
  else {
    sub_10007C7F0();
  }
  uint64_t v60 = v131;
  uint64_t v61 = v123;
  uint64_t v62 = (uint64_t)v119;
  sub_10003FFC4();
  uint64_t v63 = v129;
  sub_10007C940();
  sub_10000CBC8((uint64_t)v36, &qword_1000A4D58);
  (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v135, v63, v60);
  sub_10000CB64(v133, v62, &qword_1000A5410);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v134)(v62, 1, v130) == 1)
  {
    sub_10000CBC8(v62, &qword_1000A5410);
    sub_10007C310();
    uint64_t v64 = *(void *)v44;
    char v65 = *(unsigned char *)(v44 + 8);
    sub_10000A9EC(*(void *)v44, v65);
    char v66 = sub_10003EFB4(v64, v65);
    sub_10000AC28(v64, v65);
    uint64_t v68 = (uint64_t)v125;
    uint64_t v67 = (uint64_t)v126;
    uint64_t v69 = v122;
    if (v66) {
      uint64_t v70 = sub_10007CA80();
    }
    else {
      uint64_t v70 = sub_10007CA50();
    }
    uint64_t v86 = v70;
    uint64_t v87 = v104;
    uint64_t v88 = v61;
    uint64_t v89 = v103;
    uint64_t v90 = v60;
    uint64_t v91 = v120;
    uint64_t v92 = v105;
    (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v103, v120, v105);
    *(void *)&v89[*(int *)(v132 + 36)] = v86;
    uint64_t v93 = v91;
    uint64_t v83 = v90;
    (*(void (**)(char *, uint64_t))(v87 + 8))(v93, v92);
    uint64_t v94 = (uint64_t)v89;
    uint64_t v61 = v88;
    uint64_t v95 = v107;
    sub_10000CB00(v94, v107, &qword_1000A4D38);
    sub_10000CB64(v95, (uint64_t)v127, &qword_1000A4D38);
    swift_storeEnumTagMultiPayload();
    sub_100008FA4(&qword_1000A5BD8);
    sub_10000CAB4(&qword_1000A5BE0, &qword_1000A5BD8);
    sub_100040158();
    uint64_t v85 = v128;
    sub_10007C650();
    sub_10000CBC8(v95, &qword_1000A4D38);
  }
  else
  {
    uint64_t v134 = type metadata accessor for Note;
    uint64_t v71 = v121;
    sub_100061378(v62, v121, (uint64_t (*)(void))type metadata accessor for Note);
    uint64_t v72 = v112;
    uint64_t v73 = v109;
    uint64_t v74 = v113;
    (*(void (**)(char *, uint64_t, uint64_t))(v112 + 16))(v109, v108, v113);
    uint64_t v75 = v44;
    uint64_t v76 = v114;
    sub_10006130C(v75, v114, type metadata accessor for NotesFolderWidgetView.SmallNoteRow);
    uint64_t v77 = v102;
    sub_10006130C(v71, v102, (uint64_t (*)(void))type metadata accessor for Note);
    unint64_t v78 = (*(unsigned __int8 *)(v72 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80);
    unint64_t v79 = (v106 + *(unsigned __int8 *)(v110 + 80) + v78) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80);
    unint64_t v80 = (v111 + *(unsigned __int8 *)(v101[0] + 80) + v79) & ~(unint64_t)*(unsigned __int8 *)(v101[0] + 80);
    uint64_t v81 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v72 + 32))(v81 + v78, v73, v74);
    sub_100061378(v76, v81 + v79, type metadata accessor for NotesFolderWidgetView.SmallNoteRow);
    uint64_t v82 = v77;
    uint64_t v83 = v131;
    sub_100061378(v82, v81 + v80, (uint64_t (*)(void))v134);
    uint64_t v84 = v127;
    char *v127 = sub_1000695F8;
    v84[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v81;
    swift_storeEnumTagMultiPayload();
    sub_100008FA4(&qword_1000A5BD8);
    sub_10000CAB4(&qword_1000A5BE0, &qword_1000A5BD8);
    sub_100040158();
    uint64_t v68 = (uint64_t)v125;
    sub_10007C650();
    sub_100061BB4(v121, (uint64_t (*)(void))type metadata accessor for Note);
    uint64_t v85 = v128;
    uint64_t v67 = (uint64_t)v126;
    uint64_t v69 = v122;
  }
  long long v96 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
  uint64_t v97 = v135;
  v96(v69, v135, v83);
  sub_10000CB64(v68, v67, &qword_1000A5BD0);
  v96(v85, v69, v83);
  uint64_t v98 = sub_100008FA4(&qword_1000A5BE8);
  sub_10000CB64(v67, (uint64_t)&v85[*(int *)(v98 + 48)], &qword_1000A5BD0);
  sub_10000CBC8(v68, &qword_1000A5BD0);
  uint64_t v99 = *(void (**)(char *, uint64_t))(v61 + 8);
  v99(v97, v83);
  sub_10000CBC8(v67, &qword_1000A5BD0);
  return ((uint64_t (*)(char *, uint64_t))v99)(v69, v83);
}

uint64_t sub_10005D568@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v34 = sub_100008FA4(&qword_1000A4DD8);
  uint64_t v6 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100008FA4(&qword_1000A5BF0);
  uint64_t v35 = *(void *)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v33 - v13;
  sub_10007C3B0();
  double v16 = v15;
  sub_10007C3B0();
  double v18 = v17;
  uint64_t v19 = *(void *)a1;
  char v20 = *(unsigned char *)(a1 + 8);
  sub_10000A9EC(v19, v20);
  char v21 = sub_10003EFB4(v19, v20);
  sub_10000AC28(v19, v20);
  double v22 = 10.0;
  if (v21) {
    double v22 = 3.0;
  }
  if (v18 / v22 <= v16)
  {
    uint64_t v33 = a3;
    uint64_t v25 = *(void *)(a2 + 32);
    uint64_t v26 = *(void *)(a2 + 40);
    sub_10000A9EC(v19, v20);
    swift_bridgeObjectRetain();
    char v27 = sub_10003EFB4(v19, v20);
    sub_10000AC28(v19, v20);
    if (v27) {
      uint64_t v28 = 2;
    }
    else {
      uint64_t v28 = 9;
    }
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v36 = v25;
    uint64_t v37 = v26;
    char v38 = 0;
    uint64_t v39 = _swiftEmptyArrayStorage;
    uint64_t v40 = KeyPath;
    uint64_t v41 = v28;
    char v42 = 0;
    sub_100008FA4(&qword_1000A4DE8);
    sub_100040830(&qword_1000A4DF0, &qword_1000A4DE8);
    sub_10007C990();
    swift_release();
    swift_bridgeObjectRelease();
    int v30 = sub_10007C680();
    uint64_t v31 = v34;
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v12, v8, v34);
    *(_DWORD *)&v12[*(int *)(v9 + 36)] = v30;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v31);
    sub_10000CB00((uint64_t)v12, (uint64_t)v14, &qword_1000A5BF0);
    uint64_t v32 = v33;
    sub_10000CB00((uint64_t)v14, v33, &qword_1000A5BF0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v9);
  }
  else
  {
    uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 56);
    return v23(a3, 1, 1, v9);
  }
}

uint64_t sub_10005D8FC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v49 = a2;
  uint64_t v3 = sub_100008FA4(&qword_1000A3638);
  __chkstk_darwin(v3 - 8);
  uint64_t v48 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for NotesFolder();
  uint64_t v45 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v43 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100008FA4(&qword_1000A5410);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v43 - v11;
  uint64_t v44 = type metadata accessor for NotesFolderWidgetView.SmallNoteRow(0);
  uint64_t v13 = *(int *)(v44 + 24);
  uint64_t v46 = a1;
  uint64_t v14 = a1 + v13;
  sub_10000CB64(a1 + v13, (uint64_t)v12, &qword_1000A5410);
  uint64_t v15 = type metadata accessor for Note();
  double v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  int v17 = v16(v12, 1, v15);
  uint64_t v47 = v5;
  if (v17 == 1)
  {
    sub_10000CBC8((uint64_t)v12, &qword_1000A5410);
    uint64_t v18 = sub_10007CF80();
    uint64_t v20 = v19;
  }
  else
  {
    uint64_t v18 = *((void *)v12 + 6);
    uint64_t v20 = *((void *)v12 + 7);
    swift_bridgeObjectRetain();
    sub_100061BB4((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for Note);
  }
  uint64_t v50 = v18;
  uint64_t v51 = v20;
  sub_100068AF0();
  uint64_t v21 = sub_10007C8C0();
  uint64_t v23 = v22;
  char v25 = v24 & 1;
  sub_10000CB64(v14, (uint64_t)v10, &qword_1000A5410);
  v16(v10, 1, v15);
  sub_10000CBC8((uint64_t)v10, &qword_1000A5410);
  uint64_t v26 = sub_10007C840();
  sub_10000A610(v21, v23, v25);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v28 = v46;
  uint64_t v29 = *(void *)v46;
  char v30 = *(unsigned char *)(v46 + 8);
  sub_10000A9EC(*(void *)v46, v30);
  char v31 = sub_10003EFB4(v29, v30);
  sub_10000AC28(v29, v30);
  if (v31)
  {
    uint64_t v32 = sub_10007CA90();
    uint64_t v33 = (uint64_t)v48;
  }
  else
  {
    sub_10000A9EC(v29, v30);
    char v34 = sub_10003EFB4(v29, v30);
    sub_10000AC28(v29, v30);
    uint64_t v33 = (uint64_t)v48;
    if (v34) {
      uint64_t v35 = sub_10007CA80();
    }
    else {
      uint64_t v35 = sub_10007CA50();
    }
    uint64_t v32 = v35;
  }
  sub_10000CB64(v28 + *(int *)(v44 + 20), v33, &qword_1000A3638);
  uint64_t v36 = v47;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v33, 1, v47) == 1)
  {
    uint64_t result = sub_10000CBC8(v33, &qword_1000A3638);
LABEL_15:
    uint64_t v41 = 0;
    uint64_t v40 = 0;
    goto LABEL_16;
  }
  uint64_t v38 = v33;
  uint64_t v39 = v43;
  sub_100061378(v38, v43, (uint64_t (*)(void))type metadata accessor for NotesFolder);
  if (*(unsigned char *)(v39 + 32) != 1)
  {
    uint64_t result = sub_100061BB4(v39, (uint64_t (*)(void))type metadata accessor for NotesFolder);
    goto LABEL_15;
  }
  uint64_t v40 = *(void *)(v39 + *(int *)(v36 + 40));
  swift_bridgeObjectRetain_n();
  sub_100061BB4(v39, (uint64_t (*)(void))type metadata accessor for NotesFolder);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v41 = 0x4020000000000000;
LABEL_16:
  char v42 = v49;
  *uint64_t v49 = v26;
  v42[1] = KeyPath;
  v42[2] = 1;
  *((unsigned char *)v42 + 24) = 0;
  v42[4] = v32;
  v42[5] = v41;
  v42[6] = 0;
  v42[7] = v40;
  return result;
}

uint64_t sub_10005DD88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v34 = a1;
  uint64_t v2 = sub_10007C5F0();
  uint64_t v32 = *(void *)(v2 - 8);
  uint64_t v33 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100008FA4(&qword_1000A5B38);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100008FA4(&qword_1000A5B40);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_100008FA4(&qword_1000A5B48);
  uint64_t v11 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v7 = sub_10007C590();
  *((void *)v7 + 1) = 0;
  v7[16] = 0;
  uint64_t v14 = sub_100008FA4(&qword_1000A5B50);
  sub_10005E0C8(v1, (uint64_t)&v7[*(int *)(v14 + 44)]);
  char v15 = sub_10007C720();
  uint64_t v16 = v1 + *(int *)(type metadata accessor for NotesFolderWidgetView.MediumNoteRow(0) + 20);
  uint64_t v17 = *(void *)v16;
  char v18 = *(unsigned char *)(v16 + 8);
  sub_10000A9EC(*(void *)v16, v18);
  sub_10003EFB4(v17, v18);
  sub_10000AC28(v17, v18);
  sub_10007C340();
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  sub_10000CB64((uint64_t)v7, (uint64_t)v10, &qword_1000A5B38);
  char v27 = &v10[*(int *)(v8 + 36)];
  *char v27 = v15;
  *((void *)v27 + 1) = v20;
  *((void *)v27 + 2) = v22;
  *((void *)v27 + 3) = v24;
  *((void *)v27 + 4) = v26;
  v27[40] = 0;
  sub_10000CBC8((uint64_t)v7, &qword_1000A5B38);
  uint64_t v29 = v32;
  uint64_t v28 = v33;
  (*(void (**)(char *, void, uint64_t))(v32 + 104))(v4, enum case for ContentSizeCategory.accessibilityMedium(_:), v33);
  sub_100068A50();
  sub_10007C8E0();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v4, v28);
  sub_10000CBC8((uint64_t)v10, &qword_1000A5B40);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(v34, v13, v31);
}

uint64_t sub_10005E0C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v74 = type metadata accessor for NotesFolderWidgetView.Thumbnail(0);
  __chkstk_darwin(v74);
  uint64_t v76 = (uint64_t *)((char *)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v75 = sub_100008FA4(&qword_1000A5A90);
  uint64_t v5 = __chkstk_darwin(v75);
  uint64_t v7 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v77 = (uint64_t)&v73 - v8;
  uint64_t v9 = sub_100008FA4(&qword_1000A5A98);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v73 - v13;
  uint64_t v15 = sub_100008FA4(&qword_1000A5410);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v82 = (uint64_t)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v73 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v73 - v21;
  sub_10000CB64(a1, (uint64_t)&v73 - v21, &qword_1000A5410);
  uint64_t v23 = type metadata accessor for Note();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  uint64_t v83 = v24 + 48;
  uint64_t v84 = v25;
  unsigned int v26 = v25(v22, 1, v23);
  unint64_t v80 = v14;
  uint64_t v81 = v12;
  unint64_t v78 = v7;
  uint64_t v79 = a2;
  if (v26 == 1)
  {
    sub_10000CBC8((uint64_t)v22, &qword_1000A5410);
    uint64_t v27 = sub_10007CF80();
    uint64_t v29 = v28;
  }
  else
  {
    uint64_t v27 = *((void *)v22 + 2);
    uint64_t v29 = *((void *)v22 + 3);
    swift_bridgeObjectRetain();
    sub_100061BB4((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for Note);
  }
  *(void *)&long long v89 = v27;
  *((void *)&v89 + 1) = v29;
  sub_100068AF0();
  uint64_t v30 = sub_10007C8C0();
  uint64_t v32 = v31;
  char v34 = v33 & 1;
  sub_10000CB64(a1, (uint64_t)v20, &qword_1000A5410);
  v84(v20, 1, v23);
  sub_10000CBC8((uint64_t)v20, &qword_1000A5410);
  uint64_t v35 = sub_10007C840();
  sub_10000A610(v30, v32, v34);
  swift_bridgeObjectRelease();
  uint64_t v36 = a1 + *(int *)(type metadata accessor for NotesFolderWidgetView.MediumNoteRow(0) + 20);
  uint64_t v37 = *(void *)v36;
  char v38 = *(unsigned char *)(v36 + 8);
  sub_10000A9EC(*(void *)v36, v38);
  LOBYTE(v30) = sub_10003EFB4(v37, v38);
  sub_10000AC28(v37, v38);
  if (v30) {
    uint64_t v39 = sub_10007CA80();
  }
  else {
    uint64_t v39 = sub_10007CA50();
  }
  uint64_t v40 = v39;
  uint64_t v41 = v79;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v99 = v35;
  uint64_t v100 = v40;
  uint64_t v101 = KeyPath;
  uint64_t v102 = 1;
  char v103 = 0;
  sub_10007CC00();
  sub_100070C04(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v89, 0.0, 1, INFINITY, 0);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v43 = v82;
  sub_10000CB64(a1, v82, &qword_1000A5410);
  if (v84((char *)v43, 1, v23) == 1)
  {
    sub_10000CBC8(v43, &qword_1000A5410);
    uint64_t v45 = (uint64_t)v80;
    uint64_t v44 = (uint64_t)v81;
LABEL_11:
    uint64_t v63 = sub_100008FA4(&qword_1000A5AB0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v45, 1, 1, v63);
    goto LABEL_12;
  }
  uint64_t v46 = *(void *)(v43 + *(int *)(v23 + 48));
  swift_retain();
  sub_100061BB4(v43, (uint64_t (*)(void))type metadata accessor for Note);
  uint64_t v45 = (uint64_t)v80;
  uint64_t v44 = (uint64_t)v81;
  if (!v46) {
    goto LABEL_11;
  }
  uint64_t v47 = swift_getKeyPath();
  uint64_t v48 = (uint64_t)v76;
  *uint64_t v76 = v47;
  sub_100008FA4(&qword_1000A3358);
  swift_storeEnumTagMultiPayload();
  *(void *)(v48 + *(int *)(v74 + 20)) = v46;
  swift_retain();
  char v49 = sub_10007C780();
  sub_10007C340();
  uint64_t v51 = v50;
  uint64_t v53 = v52;
  uint64_t v55 = v54;
  uint64_t v57 = v56;
  uint64_t v58 = (uint64_t)v78;
  sub_10006130C(v48, (uint64_t)v78, type metadata accessor for NotesFolderWidgetView.Thumbnail);
  uint64_t v59 = v58 + *(int *)(v75 + 36);
  *(unsigned char *)uint64_t v59 = v49;
  *(void *)(v59 + 8) = v51;
  *(void *)(v59 + 16) = v53;
  *(void *)(v59 + 24) = v55;
  *(void *)(v59 + 32) = v57;
  *(unsigned char *)(v59 + 40) = 0;
  sub_100061BB4(v48, type metadata accessor for NotesFolderWidgetView.Thumbnail);
  uint64_t v60 = v77;
  sub_10000CB00(v58, v77, &qword_1000A5A90);
  sub_10000CB64(v60, v58, &qword_1000A5A90);
  *(void *)uint64_t v44 = 0x4024000000000000;
  *(unsigned char *)(v44 + 8) = 0;
  uint64_t v61 = sub_100008FA4(&qword_1000A5AC0);
  sub_10000CB64(v58, v44 + *(int *)(v61 + 48), &qword_1000A5A90);
  swift_release();
  sub_10000CBC8(v60, &qword_1000A5A90);
  sub_10000CBC8(v58, &qword_1000A5A90);
  uint64_t v62 = sub_100008FA4(&qword_1000A5AB0);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v44, 0, 1, v62);
  sub_10000CB00(v44, v45, &qword_1000A5A98);
LABEL_12:
  sub_10000CB64(v45, v44, &qword_1000A5A98);
  long long v64 = v94;
  v85[6] = v95;
  v85[7] = v96;
  long long v65 = v96;
  v85[8] = v97;
  long long v67 = v90;
  v85[2] = v91;
  long long v66 = v91;
  v85[3] = v92;
  long long v68 = v92;
  v85[4] = v93;
  long long v69 = v93;
  v85[5] = v94;
  v85[0] = v89;
  long long v70 = v89;
  v85[1] = v90;
  *(_OWORD *)(v41 + 96) = v95;
  *(_OWORD *)(v41 + 112) = v65;
  *(_OWORD *)(v41 + 128) = v97;
  *(_OWORD *)(v41 + 32) = v66;
  *(_OWORD *)(v41 + 48) = v68;
  *(_OWORD *)(v41 + 64) = v69;
  *(_OWORD *)(v41 + 80) = v64;
  uint64_t v86 = v98;
  *(void *)(v41 + 144) = v98;
  *(_OWORD *)uint64_t v41 = v70;
  *(_OWORD *)(v41 + 16) = v67;
  uint64_t v71 = sub_100008FA4(&qword_1000A5B70);
  sub_10000CB64(v44, v41 + *(int *)(v71 + 48), &qword_1000A5A98);
  sub_100068B44((uint64_t)v85);
  sub_10000CBC8(v45, &qword_1000A5A98);
  sub_10000CBC8(v44, &qword_1000A5A98);
  v87[6] = v95;
  v87[7] = v96;
  v87[8] = v97;
  uint64_t v88 = v98;
  v87[2] = v91;
  v87[3] = v92;
  v87[4] = v93;
  v87[5] = v94;
  v87[0] = v89;
  v87[1] = v90;
  return sub_100068B8C((uint64_t)v87);
}

uint64_t sub_10005E87C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v34 = a1;
  uint64_t v2 = sub_10007C5F0();
  uint64_t v32 = *(void *)(v2 - 8);
  uint64_t v33 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100008FA4(&qword_1000A5A60);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100008FA4(&qword_1000A5A68);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_100008FA4(&qword_1000A5A70);
  uint64_t v11 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v7 = sub_10007C590();
  *((void *)v7 + 1) = 0;
  v7[16] = 0;
  uint64_t v14 = sub_100008FA4(&qword_1000A5A78);
  sub_10005EBBC(v1, (uint64_t)&v7[*(int *)(v14 + 44)]);
  char v15 = sub_10007C720();
  uint64_t v16 = v1 + *(int *)(type metadata accessor for NotesFolderWidgetView.LargeNoteRow(0) + 24);
  uint64_t v17 = *(void *)v16;
  char v18 = *(unsigned char *)(v16 + 8);
  sub_10000A9EC(*(void *)v16, v18);
  sub_10003EFB4(v17, v18);
  sub_10000AC28(v17, v18);
  sub_10007C340();
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  sub_10000CB64((uint64_t)v7, (uint64_t)v10, &qword_1000A5A60);
  uint64_t v27 = &v10[*(int *)(v8 + 36)];
  *uint64_t v27 = v15;
  *((void *)v27 + 1) = v20;
  *((void *)v27 + 2) = v22;
  *((void *)v27 + 3) = v24;
  *((void *)v27 + 4) = v26;
  v27[40] = 0;
  sub_10000CBC8((uint64_t)v7, &qword_1000A5A60);
  uint64_t v29 = v32;
  uint64_t v28 = v33;
  (*(void (**)(char *, void, uint64_t))(v32 + 104))(v4, enum case for ContentSizeCategory.accessibilityMedium(_:), v33);
  sub_100068570();
  sub_10007C8E0();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v4, v28);
  sub_10000CBC8((uint64_t)v10, &qword_1000A5A68);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(v34, v13, v31);
}

uint64_t sub_10005EBBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v60 = a2;
  uint64_t v59 = type metadata accessor for NotesFolderWidgetView.Thumbnail(0);
  __chkstk_darwin(v59);
  uint64_t v58 = (uint64_t *)((char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v57 = sub_100008FA4(&qword_1000A5A90);
  uint64_t v4 = __chkstk_darwin(v57);
  uint64_t v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v55 - v7;
  uint64_t v9 = sub_100008FA4(&qword_1000A5410);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100008FA4(&qword_1000A5A98);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  char v15 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v55 - v16;
  uint64_t v18 = sub_100008FA4(&qword_1000A5AA0);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v21 = (char *)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v24 = (char *)&v55 - v23;
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v55 - v25;
  *(void *)uint64_t v24 = sub_10007C600();
  *((void *)v24 + 1) = 0;
  v24[16] = 0;
  uint64_t v27 = sub_100008FA4(&qword_1000A5AA8);
  sub_10005F174(a1, (uint64_t)&v24[*(int *)(v27 + 44)]);
  sub_10000CB00((uint64_t)v24, (uint64_t)v26, &qword_1000A5AA0);
  uint64_t v28 = type metadata accessor for NotesFolderWidgetView.LargeNoteRow(0);
  sub_10000CB64(a1 + *(int *)(v28 + 20), (uint64_t)v11, &qword_1000A5410);
  uint64_t v29 = type metadata accessor for Note();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v11, 1, v29) == 1)
  {
    sub_10000CBC8((uint64_t)v11, &qword_1000A5410);
    uint64_t v30 = v60;
LABEL_5:
    uint64_t v52 = sub_100008FA4(&qword_1000A5AB0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v17, 1, 1, v52);
    goto LABEL_6;
  }
  uint64_t v31 = v58;
  uint64_t v32 = v59;
  uint64_t v56 = v8;
  uint64_t v33 = *(void *)&v11[*(int *)(v29 + 48)];
  swift_retain();
  sub_100061BB4((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Note);
  uint64_t v30 = v60;
  if (!v33) {
    goto LABEL_5;
  }
  uint64_t v34 = v60;
  uint64_t v35 = (uint64_t)v31;
  *uint64_t v31 = swift_getKeyPath();
  sub_100008FA4(&qword_1000A3358);
  swift_storeEnumTagMultiPayload();
  *(uint64_t *)((char *)v31 + *(int *)(v32 + 20)) = v33;
  swift_retain();
  char v36 = sub_10007C780();
  sub_10007C340();
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  uint64_t v45 = (uint64_t)v6;
  sub_10006130C(v35, (uint64_t)v6, type metadata accessor for NotesFolderWidgetView.Thumbnail);
  uint64_t v46 = &v6[*(int *)(v57 + 36)];
  *uint64_t v46 = v36;
  *((void *)v46 + 1) = v38;
  *((void *)v46 + 2) = v40;
  *((void *)v46 + 3) = v42;
  *((void *)v46 + 4) = v44;
  v46[40] = 0;
  uint64_t v47 = v35;
  uint64_t v30 = v34;
  sub_100061BB4(v47, type metadata accessor for NotesFolderWidgetView.Thumbnail);
  uint64_t v48 = (uint64_t)v6;
  uint64_t v49 = (uint64_t)v56;
  sub_10000CB00(v48, (uint64_t)v56, &qword_1000A5A90);
  sub_10000CB64(v49, v45, &qword_1000A5A90);
  *(void *)char v15 = 0x4024000000000000;
  v15[8] = 0;
  uint64_t v50 = sub_100008FA4(&qword_1000A5AC0);
  sub_10000CB64(v45, (uint64_t)&v15[*(int *)(v50 + 48)], &qword_1000A5A90);
  swift_release();
  sub_10000CBC8(v49, &qword_1000A5A90);
  sub_10000CBC8(v45, &qword_1000A5A90);
  uint64_t v51 = sub_100008FA4(&qword_1000A5AB0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v15, 0, 1, v51);
  sub_10000CB00((uint64_t)v15, (uint64_t)v17, &qword_1000A5A98);
LABEL_6:
  sub_10000CB64((uint64_t)v26, (uint64_t)v21, &qword_1000A5AA0);
  sub_10000CB64((uint64_t)v17, (uint64_t)v15, &qword_1000A5A98);
  sub_10000CB64((uint64_t)v21, v30, &qword_1000A5AA0);
  uint64_t v53 = sub_100008FA4(&qword_1000A5AB8);
  sub_10000CB64((uint64_t)v15, v30 + *(int *)(v53 + 48), &qword_1000A5A98);
  sub_10000CBC8((uint64_t)v17, &qword_1000A5A98);
  sub_10000CBC8((uint64_t)v26, &qword_1000A5AA0);
  sub_10000CBC8((uint64_t)v15, &qword_1000A5A98);
  return sub_10000CBC8((uint64_t)v21, &qword_1000A5AA0);
}

uint64_t sub_10005F174@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100008FA4(&qword_1000A5AC8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100008FA4(&qword_1000A5AD0);
  uint64_t v8 = v7 - 8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v20 - v12;
  *(void *)uint64_t v6 = sub_10007C610();
  *((void *)v6 + 1) = 0x4000000000000000;
  v6[16] = 0;
  uint64_t v14 = sub_100008FA4(&qword_1000A5AD8);
  sub_10005F350(a1, (uint64_t)&v6[*(int *)(v14 + 44)]);
  uint64_t KeyPath = swift_getKeyPath();
  sub_10000CB64((uint64_t)v6, (uint64_t)v11, &qword_1000A5AC8);
  uint64_t v16 = &v11[*(int *)(v8 + 44)];
  *(void *)uint64_t v16 = KeyPath;
  *((void *)v16 + 1) = 1;
  v16[16] = 0;
  sub_10000CBC8((uint64_t)v6, &qword_1000A5AC8);
  sub_10000CB00((uint64_t)v11, (uint64_t)v13, &qword_1000A5AD0);
  sub_10000CB64((uint64_t)v13, (uint64_t)v11, &qword_1000A5AD0);
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  uint64_t v17 = sub_100008FA4(&qword_1000A5AE0);
  sub_10000CB64((uint64_t)v11, a2 + *(int *)(v17 + 48), &qword_1000A5AD0);
  uint64_t v18 = a2 + *(int *)(v17 + 64);
  *(void *)uint64_t v18 = 0;
  *(unsigned char *)(v18 + 8) = 1;
  sub_10000CBC8((uint64_t)v13, &qword_1000A5AD0);
  return sub_10000CBC8((uint64_t)v11, &qword_1000A5AD0);
}

uint64_t sub_10005F350@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v97 = a2;
  uint64_t v3 = sub_100008FA4(&qword_1000A5AE8);
  __chkstk_darwin(v3 - 8);
  long long v94 = (uint64_t *)((char *)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_100008FA4(&qword_1000A5AF0);
  uint64_t v95 = *(void *)(v5 - 8);
  uint64_t v96 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v80 = (uint64_t)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v79 = (uint64_t)&v78 - v8;
  uint64_t v9 = sub_10007C5F0();
  uint64_t v88 = *(void *)(v9 - 8);
  uint64_t v89 = v9;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v87 = (char *)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v86 = (uint64_t)&v78 - v12;
  uint64_t v13 = sub_100008FA4(&qword_1000A5AF8);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v93 = (uint64_t)&v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  long long v92 = (char *)&v78 - v16;
  uint64_t v17 = sub_100008FA4(&qword_1000A5410);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v20 = (char *)&v78 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v78 - v21;
  uint64_t v23 = sub_100008FA4(&qword_1000A5B00);
  uint64_t v84 = *(void *)(v23 - 8);
  uint64_t v85 = v23;
  __chkstk_darwin(v23);
  uint64_t v83 = (char *)&v78 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_100008FA4(&qword_1000A5B08);
  __chkstk_darwin(v81);
  uint64_t v26 = (char *)&v78 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_100008FA4(&qword_1000A5B10);
  uint64_t v28 = __chkstk_darwin(v27 - 8);
  uint64_t v90 = (uint64_t)&v78 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v82 = (uint64_t)&v78 - v31;
  __chkstk_darwin(v30);
  uint64_t v98 = (uint64_t)&v78 - v32;
  uint64_t v33 = type metadata accessor for NotesFolderWidgetView.LargeNoteRow(0);
  uint64_t v34 = *(int *)(v33 + 20);
  uint64_t v91 = a1;
  uint64_t v35 = a1 + v34;
  sub_10000CB64(a1 + v34, (uint64_t)v22, &qword_1000A5410);
  uint64_t v36 = type metadata accessor for Note();
  uint64_t v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 48);
  if (v37(v22, 1, v36) == 1)
  {
    sub_10000CBC8((uint64_t)v22, &qword_1000A5410);
    sub_10007CF80();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_100061BB4((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for Note);
  }
  sub_10000CB64(v35, (uint64_t)v20, &qword_1000A5410);
  v37(v20, 1, v36);
  sub_10000CBC8((uint64_t)v20, &qword_1000A5410);
  uint64_t v38 = sub_10007C840();
  swift_bridgeObjectRelease();
  uint64_t v99 = v38;
  uint64_t v39 = v83;
  sub_10007C990();
  swift_release();
  uint64_t v40 = v91;
  uint64_t v41 = v91 + *(int *)(v33 + 24);
  uint64_t v42 = *(void *)v41;
  char v43 = *(unsigned char *)(v41 + 8);
  sub_10000A9EC(*(void *)v41, v43);
  LOBYTE(v38) = sub_10003EFB4(v42, v43);
  sub_10000AC28(v42, v43);
  if (v38) {
    uint64_t v44 = sub_10007CA80();
  }
  else {
    uint64_t v44 = sub_10007CA50();
  }
  uint64_t v45 = v44;
  uint64_t v46 = (uint64_t)v92;
  uint64_t v47 = v98;
  uint64_t v49 = v84;
  uint64_t v48 = v85;
  (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v26, v39, v85);
  *(void *)&v26[*(int *)(v81 + 36)] = v45;
  (*(void (**)(char *, uint64_t))(v49 + 8))(v39, v48);
  uint64_t v50 = sub_10007CC00();
  uint64_t v51 = 1;
  uint64_t v52 = v82;
  sub_100070DD0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v82, 0.0, 1, 0.0, 1, v50, v53);
  sub_10000CBC8((uint64_t)v26, &qword_1000A5B08);
  sub_10000CB00(v52, v47, &qword_1000A5B10);
  uint64_t v54 = v86;
  sub_10003F4E4(v86);
  uint64_t v56 = (uint64_t)v87;
  uint64_t v55 = v88;
  uint64_t v57 = v89;
  (*(void (**)(char *, void, uint64_t))(v88 + 104))(v87, enum case for ContentSizeCategory.extraExtraExtraLarge(_:), v89);
  LOBYTE(v48) = sub_100068638(v54, v56);
  uint64_t v58 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
  v58(v56, v57);
  v58(v54, v57);
  uint64_t v59 = v96;
  if (v48)
  {
    uint64_t v60 = sub_10007C590();
    uint64_t v61 = v94;
    *long long v94 = v60;
    v61[1] = 0;
    *((unsigned char *)v61 + 16) = 1;
    uint64_t v62 = sub_100008FA4(&qword_1000A5B20);
    sub_10005FC2C(v40, (uint64_t *)((char *)v61 + *(int *)(v62 + 44)));
    uint64_t v63 = *(void *)v41;
    char v64 = *(unsigned char *)(v41 + 8);
    sub_10000A9EC(*(void *)v41, v64);
    char v65 = sub_10003EFB4(v63, v64);
    sub_10000AC28(v63, v64);
    if (v65)
    {
      uint64_t v66 = sub_10007CA90();
    }
    else
    {
      sub_10000A9EC(v63, v64);
      char v67 = sub_10003EFB4(v63, v64);
      sub_10000AC28(v63, v64);
      if (v67) {
        uint64_t v66 = sub_10007CA80();
      }
      else {
        uint64_t v66 = sub_10007CA50();
      }
    }
    uint64_t v68 = v66;
    long long v69 = v94;
    uint64_t v70 = v80;
    sub_10000CB64((uint64_t)v94, v80, &qword_1000A5AE8);
    *(void *)(v70 + *(int *)(v59 + 36)) = v68;
    sub_10000CBC8((uint64_t)v69, &qword_1000A5AE8);
    uint64_t v71 = v79;
    sub_10000CB00(v70, v79, &qword_1000A5AF0);
    sub_10000CB00(v71, v46, &qword_1000A5AF0);
    uint64_t v51 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v95 + 56))(v46, v51, 1, v59);
  uint64_t v72 = v98;
  uint64_t v73 = v90;
  sub_10000CB64(v98, v90, &qword_1000A5B10);
  uint64_t v74 = v93;
  sub_10000CB64(v46, v93, &qword_1000A5AF8);
  uint64_t v75 = v97;
  sub_10000CB64(v73, v97, &qword_1000A5B10);
  uint64_t v76 = sub_100008FA4(&qword_1000A5B18);
  sub_10000CB64(v74, v75 + *(int *)(v76 + 48), &qword_1000A5AF8);
  sub_10000CBC8(v46, &qword_1000A5AF8);
  sub_10000CBC8(v72, &qword_1000A5B10);
  sub_10000CBC8(v74, &qword_1000A5AF8);
  return sub_10000CBC8(v73, &qword_1000A5B10);
}

uint64_t sub_10005FC2C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v52 = a2;
  uint64_t v3 = sub_100008FA4(&qword_1000A5770);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v46 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v45 = (char *)&v44 - v7;
  uint64_t v8 = sub_100008FA4(&qword_1000A5B28);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v49 = (uint64_t)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v48 = (char *)&v44 - v11;
  uint64_t v12 = sub_100008FA4(&qword_1000A5410);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v44 = (uint64_t)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v47 = (uint64_t)&v44 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v44 - v18;
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v44 - v20;
  uint64_t v22 = a1 + *(int *)(type metadata accessor for NotesFolderWidgetView.LargeNoteRow(0) + 20);
  sub_10000CB64(v22, (uint64_t)v21, &qword_1000A5410);
  uint64_t v23 = type metadata accessor for Note();
  uint64_t v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48);
  int v25 = v24(v21, 1, v23);
  uint64_t v50 = v4;
  uint64_t v51 = v3;
  if (v25 == 1)
  {
    sub_10000CBC8((uint64_t)v21, &qword_1000A5410);
    sub_10007CF80();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_100061BB4((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for Note);
  }
  sub_10000CB64(v22, (uint64_t)v19, &qword_1000A5410);
  uint64_t v26 = 1;
  v24(v19, 1, v23);
  sub_10000CBC8((uint64_t)v19, &qword_1000A5410);
  uint64_t v27 = sub_10007C840();
  swift_bridgeObjectRelease();
  uint64_t v28 = v47;
  sub_10000CB64(v22, v47, &qword_1000A5410);
  int v29 = v24((char *)v28, 1, v23);
  sub_10000CBC8(v28, &qword_1000A5410);
  uint64_t v31 = v50;
  uint64_t v30 = v51;
  uint64_t v32 = (uint64_t)v48;
  if (v29 != 1)
  {
    uint64_t v33 = v44;
    sub_10000CB64(v22, v44, &qword_1000A5410);
    if (v24((char *)v33, 1, v23) == 1)
    {
      sub_10000CBC8(v33, &qword_1000A5410);
      uint64_t v34 = sub_10007CF80();
      uint64_t v36 = v35;
    }
    else
    {
      uint64_t v34 = *(void *)(v33 + 32);
      uint64_t v36 = *(void *)(v33 + 40);
      swift_bridgeObjectRetain();
      sub_100061BB4(v33, (uint64_t (*)(void))type metadata accessor for Note);
    }
    uint64_t v53 = v34;
    uint64_t v54 = v36;
    char v55 = 0;
    uint64_t v56 = _swiftEmptyArrayStorage;
    uint64_t v37 = v46;
    sub_10007C990();
    swift_bridgeObjectRelease();
    uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
    uint64_t v39 = v45;
    v38(v45, v37, v30);
    v38((char *)v32, v39, v30);
    uint64_t v26 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 56))(v32, v26, 1, v30);
  uint64_t v40 = v49;
  sub_10000CB64(v32, v49, &qword_1000A5B28);
  uint64_t v41 = v52;
  uint64_t *v52 = v27;
  uint64_t v42 = sub_100008FA4(&qword_1000A5B30);
  sub_10000CB64(v40, (uint64_t)v41 + *(int *)(v42 + 48), &qword_1000A5B28);
  swift_retain();
  sub_10000CBC8(v32, &qword_1000A5B28);
  sub_10000CBC8(v40, &qword_1000A5B28);
  return swift_release();
}

unint64_t sub_100060158()
{
  unint64_t result = qword_1000A54E8;
  if (!qword_1000A54E8)
  {
    sub_10000A43C(&qword_1000A54D0);
    sub_10000CAB4(&qword_1000A54F0, &qword_1000A54C8);
    sub_10000CAB4(&qword_1000A34E0, &qword_1000A34E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A54E8);
  }
  return result;
}

unint64_t sub_10006021C()
{
  unint64_t result = qword_1000A5520;
  if (!qword_1000A5520)
  {
    sub_10000A43C(&qword_1000A5518);
    sub_10000CAB4(&qword_1000A5528, &qword_1000A5530);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A5520);
  }
  return result;
}

unint64_t sub_1000602B4()
{
  unint64_t result = qword_1000A5550;
  if (!qword_1000A5550)
  {
    sub_10000A43C(&qword_1000A5548);
    sub_10000CAB4(&qword_1000A5540, &qword_1000A5538);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A5550);
  }
  return result;
}

unint64_t sub_10006034C()
{
  unint64_t result = qword_1000A5558;
  if (!qword_1000A5558)
  {
    sub_10000A43C(&qword_1000A5508);
    sub_10000CAB4(&qword_1000A5540, &qword_1000A5538);
    sub_10000A43C(&qword_1000A5518);
    sub_10006021C();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A5558);
  }
  return result;
}

uint64_t sub_100060428()
{
  uint64_t v1 = (int *)type metadata accessor for NotesFolderWidgetView(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v3;
  sub_100008FA4(&qword_1000A4CD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_10007C5F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v5 + v1[5];
  sub_100008FA4(&qword_1000A3360);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_10007CD30();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  sub_10000AC28(*(void *)(v5 + v1[6]), *(unsigned char *)(v5 + v1[6] + 8));
  uint64_t v9 = v5 + v1[7];
  uint64_t v10 = sub_100008FA4(&qword_1000A49E8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 2, v10))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v11 = v9 + *(int *)(type metadata accessor for NotesFolder() + 32);
    uint64_t v12 = sub_10007C110();
    uint64_t v13 = *(void *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1000606E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for NotesFolderWidgetView(0) - 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_100056D3C(a1, v6, v7, a2);
}

unint64_t sub_100060764()
{
  unint64_t result = qword_1000A5570;
  if (!qword_1000A5570)
  {
    sub_10000A43C(&qword_1000A5568);
    sub_10000CAB4(&qword_1000A5578, &qword_1000A5580);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A5570);
  }
  return result;
}

uint64_t sub_100060804@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_10007C4C0();
  *a1 = result;
  return result;
}

uint64_t sub_100060830()
{
  return sub_10007C4D0();
}

uint64_t sub_100060858(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = &_swiftEmptyArrayStorage;
  if (a4 >> 1 != a3)
  {
    if ((uint64_t)(a4 >> 1) <= a3) {
      goto LABEL_36;
    }
    uint64_t result = swift_unknownObjectRetain();
    uint64_t v9 = 0;
    uint64_t v6 = 0;
    uint64_t v10 = a2 + 8 * a3;
    unint64_t v11 = ~a3 + v4;
    uint64_t v12 = (void *)((char *)&_swiftEmptyArrayStorage + 32);
    while (1)
    {
      uint64_t v13 = *(void *)(v10 + 8 * v9);
      if (v6)
      {
        uint64_t result = swift_retain();
        BOOL v14 = __OFSUB__(v6--, 1);
        if (v14) {
          goto LABEL_34;
        }
      }
      else
      {
        unint64_t v15 = v5[3];
        if ((uint64_t)((v15 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_35;
        }
        int64_t v16 = v15 & 0xFFFFFFFFFFFFFFFELL;
        if (v16 <= 1) {
          uint64_t v17 = 1;
        }
        else {
          uint64_t v17 = v16;
        }
        sub_100008FA4(&qword_1000A5BF8);
        uint64_t v18 = (void *)swift_allocObject();
        int64_t v19 = j__malloc_size(v18);
        uint64_t v20 = v19 - 32;
        if (v19 < 32) {
          uint64_t v20 = v19 - 17;
        }
        uint64_t v21 = v20 >> 4;
        v18[2] = v17;
        v18[3] = 2 * (v20 >> 4);
        uint64_t v22 = v18 + 4;
        uint64_t v23 = v5[3] >> 1;
        uint64_t v12 = &v18[2 * v23 + 4];
        uint64_t v24 = (v21 & 0x7FFFFFFFFFFFFFFFLL) - v23;
        if (v5[2])
        {
          if (v18 != v5 || v22 >= &v5[2 * v23 + 4]) {
            memmove(v22, v5 + 4, 16 * v23);
          }
          swift_retain();
          v5[2] = 0;
        }
        else
        {
          swift_retain();
        }
        uint64_t result = swift_release();
        uint64_t v5 = v18;
        BOOL v14 = __OFSUB__(v24, 1);
        uint64_t v6 = v24 - 1;
        if (v14)
        {
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
          return result;
        }
      }
      *uint64_t v12 = v9;
      v12[1] = v13;
      if (v11 == v9) {
        goto LABEL_29;
      }
      v12 += 2;
      if (__OFADD__(++v9, 1))
      {
        __break(1u);
LABEL_29:
        uint64_t result = swift_unknownObjectRelease();
        goto LABEL_30;
      }
    }
  }
  uint64_t v6 = 0;
LABEL_30:
  unint64_t v26 = v5[3];
  if (v26 >= 2)
  {
    unint64_t v27 = v26 >> 1;
    BOOL v14 = __OFSUB__(v27, v6);
    uint64_t v28 = v27 - v6;
    if (v14) {
      goto LABEL_37;
    }
    v5[2] = v28;
  }
  return (uint64_t)v5;
}

size_t sub_100060A1C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v48 = a2;
  uint64_t v49 = sub_100008FA4(&qword_1000A55F0);
  uint64_t v7 = __chkstk_darwin(v49);
  uint64_t v47 = (char *)v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  unint64_t v11 = (void *)((char *)v43 - v10);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v43 - v12;
  uint64_t v50 = v14;
  uint64_t v15 = *(unsigned __int8 *)(v14 + 80);
  unint64_t v16 = a4 >> 1;
  v43[1] = a1;
  size_t result = swift_unknownObjectRetain();
  uint64_t v18 = _swiftEmptyArrayStorage;
  if (v16 == a3)
  {
    unint64_t v19 = 0;
LABEL_28:
    size_t result = swift_unknownObjectRelease();
    unint64_t v40 = (unint64_t)v18[3];
    if (v40 < 2) {
      return (size_t)v18;
    }
    unint64_t v41 = v40 >> 1;
    BOOL v27 = __OFSUB__(v41, v19);
    uint64_t v42 = (void *)(v41 - v19);
    if (!v27)
    {
      v18[2] = v42;
      return (size_t)v18;
    }
  }
  else
  {
    uint64_t v20 = 0;
    unint64_t v19 = 0;
    uint64_t v44 = (v15 + 32) & ~v15;
    uint64_t v21 = (char *)_swiftEmptyArrayStorage + v44;
    v43[2] = v15 | 7;
    uint64_t v45 = a3 - v16;
    uint64_t v46 = v16;
    uint64_t v22 = _swiftEmptyArrayStorage;
    while (a3 + v20 < v46)
    {
      uint64_t v23 = type metadata accessor for Note();
      uint64_t v24 = v49;
      uint64_t v25 = (uint64_t)&v47[*(int *)(v49 + 48)];
      size_t result = sub_10006130C(v48 + *(void *)(*(void *)(v23 - 8) + 72) * (a3 + v20), v25, (uint64_t (*)(void))type metadata accessor for Note);
      if (__OFADD__(v20, 1)) {
        goto LABEL_33;
      }
      uint64_t v26 = (uint64_t)v11 + *(int *)(v24 + 48);
      *unint64_t v11 = v20;
      sub_100061378(v25, v26, (uint64_t (*)(void))type metadata accessor for Note);
      size_t result = sub_10000CB00((uint64_t)v11, (uint64_t)v13, &qword_1000A55F0);
      if (v19)
      {
        uint64_t v18 = v22;
        BOOL v27 = __OFSUB__(v19--, 1);
        if (v27) {
          goto LABEL_34;
        }
      }
      else
      {
        unint64_t v28 = (unint64_t)v22[3];
        if ((uint64_t)((v28 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_35;
        }
        int64_t v29 = v28 & 0xFFFFFFFFFFFFFFFELL;
        if (v29 <= 1) {
          uint64_t v30 = 1;
        }
        else {
          uint64_t v30 = v29;
        }
        sub_100008FA4(&qword_1000A56C0);
        uint64_t v31 = *(void *)(v50 + 72);
        uint64_t v32 = v44;
        uint64_t v18 = (id *)swift_allocObject();
        size_t result = j__malloc_size(v18);
        if (!v31) {
          goto LABEL_36;
        }
        int64_t v33 = result - v32;
        if (result - v32 == 0x8000000000000000 && v31 == -1) {
          goto LABEL_37;
        }
        uint64_t v35 = v33 / v31;
        v18[2] = (id)v30;
        v18[3] = (id)(2 * (v33 / v31));
        uint64_t v36 = (char *)v18 + v32;
        unint64_t v37 = (unint64_t)v22[3] >> 1;
        uint64_t v38 = v37 * v31;
        if (v22[2])
        {
          if (v18 < v22 || v36 >= (char *)v22 + v44 + v38)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v18 != v22)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v22[2] = 0;
        }
        uint64_t v21 = &v36[v38];
        unint64_t v39 = (v35 & 0x7FFFFFFFFFFFFFFFLL) - v37;
        size_t result = swift_release();
        BOOL v27 = __OFSUB__(v39, 1);
        unint64_t v19 = v39 - 1;
        if (v27) {
          goto LABEL_34;
        }
      }
      size_t result = sub_10000CB00((uint64_t)v13, (uint64_t)v21, &qword_1000A55F0);
      v21 += *(void *)(v50 + 72);
      ++v20;
      uint64_t v22 = v18;
      if (!(v45 + v20)) {
        goto LABEL_28;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100060DA4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(type metadata accessor for NotesFolderWidgetView(0) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(void *)(sub_10007C3C0() - 8);
  return sub_1000571B4(a2, a1, v3 + ((v8 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)), a3);
}

uint64_t sub_100060E88()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100060EC0(char *a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = sub_100008FA4(&qword_1000A55F0);
  return v3(v4, &a1[*(int *)(v5 + 48)]);
}

unint64_t sub_100060F20()
{
  unint64_t result = qword_1000A55B0;
  if (!qword_1000A55B0)
  {
    sub_10000A43C(&qword_1000A55A0);
    sub_10000A43C(&qword_1000A55B8);
    sub_100061000();
    swift_getOpaqueTypeConformance2();
    sub_10006114C(&qword_1000A3498, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A55B0);
  }
  return result;
}

unint64_t sub_100061000()
{
  unint64_t result = qword_1000A55C0;
  if (!qword_1000A55C0)
  {
    sub_10000A43C(&qword_1000A55B8);
    sub_1000610AC();
    sub_10006114C(&qword_1000A3498, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A55C0);
  }
  return result;
}

unint64_t sub_1000610AC()
{
  unint64_t result = qword_1000A55C8;
  if (!qword_1000A55C8)
  {
    sub_10000A43C(&qword_1000A55D0);
    sub_10000CAB4(&qword_1000A55D8, &qword_1000A55E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A55C8);
  }
  return result;
}

uint64_t sub_10006114C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100061194()
{
  unint64_t result = qword_1000A5670;
  if (!qword_1000A5670)
  {
    sub_10000A43C(&qword_1000A5658);
    sub_100061250(&qword_1000A5678, &qword_1000A5650, &qword_1000A5680, &qword_1000A5660);
    sub_100061250(&qword_1000A5690, &qword_1000A5620, &qword_1000A5698, &qword_1000A5628);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A5670);
  }
  return result;
}

uint64_t sub_100061250(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000A43C(a2);
    sub_10000CAB4(a3, a4);
    sub_10000CAB4(&qword_1000A5688, &qword_1000A5630);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10006130C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100061378(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for NotesFolderWidgetView.LargeNoteRow(uint64_t a1)
{
  return sub_10000A2B4(a1, (uint64_t *)&unk_1000A58E8);
}

uint64_t sub_100061408@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for Note() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_10005951C(v4, a1);
}

uint64_t type metadata accessor for NotesFolderWidgetView.MediumNoteRow(uint64_t a1)
{
  return sub_10000A2B4(a1, qword_1000A5988);
}

uint64_t sub_10006149C()
{
  uint64_t v1 = type metadata accessor for Note();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v3 + *(int *)(v1 + 44);
  uint64_t v6 = sub_10007C110();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100061638@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for Note() - 8);
  return sub_100059630(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1);
}

uint64_t sub_10006169C()
{
  uint64_t v1 = v0;
  uint64_t v2 = (int *)type metadata accessor for NotesFolderWidgetView(0);
  uint64_t v3 = *(unsigned __int8 *)(*((void *)v2 - 1) + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(*((void *)v2 - 1) + 64);
  uint64_t v6 = type metadata accessor for Note();
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v24 = *(void *)(*(void *)(v6 - 8) + 64);
  uint64_t v8 = v1 + v4;
  sub_100008FA4(&qword_1000A4CD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_10007C5F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v1 + v4, v9);
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = v4 + v5 + v7;
  uint64_t v11 = v8 + v2[5];
  sub_100008FA4(&qword_1000A3360);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_10007CD30();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  uint64_t v13 = v10 & ~v7;
  sub_10000AC28(*(void *)(v8 + v2[6]), *(unsigned char *)(v8 + v2[6] + 8));
  uint64_t v14 = v8 + v2[7];
  uint64_t v15 = sub_100008FA4(&qword_1000A49E8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 2, v15))
  {
    uint64_t v23 = v1;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v16 = v14 + *(int *)(type metadata accessor for NotesFolder() + 32);
    uint64_t v17 = sub_10007C110();
    uint64_t v18 = *(void *)(v17 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17)) {
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v1 = v23;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v19 = v1 + v13 + *(int *)(v6 + 44);
  uint64_t v20 = sub_10007C110();
  uint64_t v21 = *(void *)(v20 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20)) {
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v1, v13 + v24, v3 | v7 | 7);
}

uint64_t sub_100061AB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for NotesFolderWidgetView(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(type metadata accessor for Note() - 8);
  uint64_t v7 = v1 + ((v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_1000591D8(v1 + v4, v7, a1);
}

uint64_t type metadata accessor for NotesFolderWidgetView.SmallNoteRow(uint64_t a1)
{
  return sub_10000A2B4(a1, (uint64_t *)&unk_1000A5A18);
}

uint64_t sub_100061BB4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_100061C14()
{
  unint64_t result = qword_1000A5718;
  if (!qword_1000A5718)
  {
    sub_10000A43C(&qword_1000A56D0);
    sub_10000CAB4(&qword_1000A5720, &qword_1000A56C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A5718);
  }
  return result;
}

unint64_t sub_100061CB4()
{
  unint64_t result = qword_1000A5738;
  if (!qword_1000A5738)
  {
    sub_10000A43C(&qword_1000A56F0);
    sub_10000CAB4(&qword_1000A5740, &qword_1000A56E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A5738);
  }
  return result;
}

uint64_t sub_100061D54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if ((a9 & 1) == 0) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100061D68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if ((a9 & 1) == 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100061D7C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_10007C4C0();
  *a1 = result;
  return result;
}

uint64_t sub_100061DA8()
{
  return sub_10007C4D0();
}

unint64_t sub_100061DE4()
{
  unint64_t result = qword_1000A57D0;
  if (!qword_1000A57D0)
  {
    sub_10000A43C(&qword_1000A57C0);
    type metadata accessor for WidgetHeader();
    sub_10006114C(&qword_1000A57C8, (void (*)(uint64_t))type metadata accessor for WidgetHeader);
    swift_getOpaqueTypeConformance2();
    sub_10006114C(&qword_1000A3498, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A57D0);
  }
  return result;
}

unint64_t sub_100061EF0()
{
  unint64_t result = qword_1000A57D8;
  if (!qword_1000A57D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A57D8);
  }
  return result;
}

uint64_t sub_100061F44()
{
  uint64_t v1 = (int *)type metadata accessor for NotesFolderWidgetView(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;
  sub_100008FA4(&qword_1000A4CD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_10007C5F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v5 + v1[5];
  sub_100008FA4(&qword_1000A3360);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_10007CD30();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  sub_10000AC28(*(void *)(v5 + v1[6]), *(unsigned char *)(v5 + v1[6] + 8));
  uint64_t v9 = v5 + v1[7];
  uint64_t v10 = sub_100008FA4(&qword_1000A49E8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 2, v10))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v11 = v9 + *(int *)(type metadata accessor for NotesFolder() + 32);
    uint64_t v12 = sub_10007C110();
    uint64_t v13 = *(void *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1000621F4(uint64_t a1)
{
  return sub_1000690A8(a1, type metadata accessor for NotesFolderWidgetView, sub_10005340C);
}

uint64_t sub_100062224()
{
  uint64_t v1 = (int *)type metadata accessor for NotesFolderWidgetView(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = sub_10007C3C0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v22 = *(void *)(v6 + 64);
  uint64_t v8 = v0 + v3;
  sub_100008FA4(&qword_1000A4CD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_10007C5F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v0 + v3, v9);
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = v8 + v1[5];
  sub_100008FA4(&qword_1000A3360);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_10007CD30();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }
  sub_10000AC28(*(void *)(v8 + v1[6]), *(unsigned char *)(v8 + v1[6] + 8));
  uint64_t v12 = v8 + v1[7];
  uint64_t v13 = sub_100008FA4(&qword_1000A49E8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 2, v13))
  {
    uint64_t v20 = v4;
    uint64_t v21 = v5;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v14 = v12 + *(int *)(type metadata accessor for NotesFolder() + 32);
    uint64_t v15 = sub_10007C110();
    uint64_t v16 = *(void *)(v15 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15)) {
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = (v2 + 16) & ~v2;
    uint64_t v5 = v21;
    uint64_t v4 = v20;
  }
  uint64_t v17 = (v3 + v4 + v7) & ~v7;
  uint64_t v18 = v17 + v22;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v17, v5);

  return _swift_deallocObject(v0, v18, v2 | v7 | 7);
}

uint64_t sub_100062578@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for NotesFolderWidgetView(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(sub_10007C3C0() - 8);
  uint64_t v9 = v2 + ((v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));

  return sub_1000541B8(a1, v2 + v6, v9, a2);
}

unint64_t sub_10006265C()
{
  unint64_t result = qword_1000A5808;
  if (!qword_1000A5808)
  {
    sub_10000A43C(&qword_1000A5800);
    sub_10000CAB4(&qword_1000A5810, &qword_1000A5818);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A5808);
  }
  return result;
}

unint64_t sub_1000626FC()
{
  unint64_t result = qword_1000A5870;
  if (!qword_1000A5870)
  {
    sub_10000A43C(&qword_1000A5860);
    sub_100062778();
    sub_100062854();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A5870);
  }
  return result;
}

unint64_t sub_100062778()
{
  unint64_t result = qword_1000A5878;
  if (!qword_1000A5878)
  {
    sub_10000A43C(&qword_1000A5858);
    sub_10006114C(&qword_1000A56B8, (void (*)(uint64_t))type metadata accessor for NotesFolderWidgetView.SmallNoteRow);
    sub_10006114C(&qword_1000A56B0, (void (*)(uint64_t))type metadata accessor for NotesFolderWidgetView.MediumNoteRow);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A5878);
  }
  return result;
}

unint64_t sub_100062854()
{
  unint64_t result = qword_1000A5880;
  if (!qword_1000A5880)
  {
    sub_10000A43C(&qword_1000A5838);
    sub_10006114C(&qword_1000A56A8, (void (*)(uint64_t))type metadata accessor for NotesFolderWidgetView.LargeNoteRow);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A5880);
  }
  return result;
}

uint64_t *sub_1000628F8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_100008FA4(&qword_1000A4CD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_10007C5F0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    uint64_t v12 = (int *)type metadata accessor for Note();
    uint64_t v13 = *((void *)v12 - 1);
    if ((*(unsigned int (**)(void *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = sub_100008FA4(&qword_1000A5410);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      uint64_t v15 = v11[1];
      *uint64_t v10 = *v11;
      v10[1] = v15;
      uint64_t v16 = v11[3];
      uint64_t v36 = v13;
      v10[2] = v11[2];
      v10[3] = v16;
      uint64_t v17 = v11[5];
      v10[4] = v11[4];
      v10[5] = v17;
      uint64_t v18 = v11[7];
      v10[6] = v11[6];
      v10[7] = v18;
      uint64_t v19 = v11[9];
      v10[8] = v11[8];
      v10[9] = v19;
      *((unsigned char *)v10 + 80) = *((unsigned char *)v11 + 80);
      uint64_t v20 = v11[12];
      v10[11] = v11[11];
      v10[12] = v20;
      uint64_t v21 = v12[11];
      __dst = (char *)v10 + v21;
      uint64_t v34 = (char *)v11 + v21;
      uint64_t v22 = sub_10007C110();
      uint64_t v32 = *(void *)(v22 - 8);
      uint64_t v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
      uint64_t v23 = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v35(v34, 1, v23))
      {
        uint64_t v24 = sub_100008FA4(&qword_1000A3270);
        memcpy(__dst, v34, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v32 + 16))(__dst, v34, v23);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(__dst, 0, 1, v23);
      }
      *(void *)((char *)v10 + v12[12]) = *(void *)((char *)v11 + v12[12]);
      *(void *)((char *)v10 + v12[13]) = *(void *)((char *)v11 + v12[13]);
      *(void *)((char *)v10 + v12[14]) = *(void *)((char *)v11 + v12[14]);
      *(void *)((char *)v10 + v12[15]) = *(void *)((char *)v11 + v12[15]);
      *((unsigned char *)v10 + v12[16]) = *((unsigned char *)v11 + v12[16]);
      uint64_t v25 = *(void (**)(void *, void, uint64_t, int *))(v36 + 56);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      v25(v10, 0, 1, v12);
    }
    uint64_t v26 = *(int *)(a3 + 24);
    BOOL v27 = (char *)a1 + v26;
    unint64_t v28 = (char *)a2 + v26;
    uint64_t v29 = *(void *)v28;
    char v30 = v28[8];
    sub_10000A9EC(*(void *)v28, v30);
    *(void *)BOOL v27 = v29;
    v27[8] = v30;
  }
  return a1;
}

uint64_t sub_100062CDC(uint64_t a1, uint64_t a2)
{
  sub_100008FA4(&qword_1000A4CD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_10007C5F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for Note();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = v5 + *(int *)(v6 + 44);
    uint64_t v8 = sub_10007C110();
    uint64_t v9 = *(void *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  uint64_t v10 = a1 + *(int *)(a2 + 24);
  uint64_t v11 = *(void *)v10;
  char v12 = *(unsigned char *)(v10 + 8);

  return sub_10000AC28(v11, v12);
}

void *sub_100062EC4(void *a1, void *a2, uint64_t a3)
{
  sub_100008FA4(&qword_1000A4CD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_10007C5F0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for Note();
  uint64_t v11 = *((void *)v10 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_100008FA4(&qword_1000A5410);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v33 = a3;
    uint64_t v13 = v9[1];
    void *v8 = *v9;
    v8[1] = v13;
    uint64_t v14 = v9[3];
    v8[2] = v9[2];
    v8[3] = v14;
    uint64_t v15 = v9[5];
    v8[4] = v9[4];
    v8[5] = v15;
    uint64_t v16 = v9[7];
    v8[6] = v9[6];
    v8[7] = v16;
    uint64_t v17 = v9[9];
    v8[8] = v9[8];
    v8[9] = v17;
    *((unsigned char *)v8 + 80) = *((unsigned char *)v9 + 80);
    uint64_t v18 = v9[12];
    v8[11] = v9[11];
    v8[12] = v18;
    uint64_t v19 = v10[11];
    __dst = (char *)v8 + v19;
    char v30 = (char *)v9 + v19;
    uint64_t v20 = sub_10007C110();
    uint64_t v29 = *(void *)(v20 - 8);
    uint64_t v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v31(v30, 1, v20))
    {
      uint64_t v21 = sub_100008FA4(&qword_1000A3270);
      memcpy(__dst, v30, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(__dst, v30, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(__dst, 0, 1, v20);
    }
    *(void *)((char *)v8 + v10[12]) = *(void *)((char *)v9 + v10[12]);
    *(void *)((char *)v8 + v10[13]) = *(void *)((char *)v9 + v10[13]);
    *(void *)((char *)v8 + v10[14]) = *(void *)((char *)v9 + v10[14]);
    *(void *)((char *)v8 + v10[15]) = *(void *)((char *)v9 + v10[15]);
    *((unsigned char *)v8 + v10[16]) = *((unsigned char *)v9 + v10[16]);
    uint64_t v22 = *(void (**)(void *, void, uint64_t, int *))(v11 + 56);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    v22(v8, 0, 1, v10);
    a3 = v33;
  }
  uint64_t v23 = *(int *)(a3 + 24);
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  uint64_t v26 = *(void *)v25;
  char v27 = v25[8];
  sub_10000A9EC(*(void *)v25, v27);
  *(void *)uint64_t v24 = v26;
  v24[8] = v27;
  return a1;
}

void *sub_100063264(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2;
  if (a1 != a2)
  {
    sub_10000CBC8((uint64_t)a1, &qword_1000A4CD0);
    sub_100008FA4(&qword_1000A4CD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_10007C5F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, v4, v6);
    }
    else
    {
      *a1 = *v4;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (uint64_t)a1 + v7;
  uint64_t v9 = (char *)v4 + v7;
  uint64_t v10 = (int *)type metadata accessor for Note();
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12((uint64_t)v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_100061BB4(v8, (uint64_t (*)(void))type metadata accessor for Note);
      goto LABEL_12;
    }
    uint64_t v42 = v4;
    uint64_t v43 = a3;
    *(void *)uint64_t v8 = *(void *)v9;
    *(void *)(v8 + 8) = *((void *)v9 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v8 + 16) = *((void *)v9 + 2);
    *(void *)(v8 + 24) = *((void *)v9 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v8 + 32) = *((void *)v9 + 4);
    *(void *)(v8 + 40) = *((void *)v9 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v8 + 48) = *((void *)v9 + 6);
    *(void *)(v8 + 56) = *((void *)v9 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v8 + 64) = *((void *)v9 + 8);
    *(void *)(v8 + 72) = *((void *)v9 + 9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v8 + 80) = v9[80];
    *(void *)(v8 + 88) = *((void *)v9 + 11);
    *(void *)(v8 + 96) = *((void *)v9 + 12);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v19 = v10[11];
    uint64_t v20 = (void *)(v8 + v19);
    uint64_t v21 = &v9[v19];
    uint64_t v22 = sub_10007C110();
    uint64_t v23 = *(void *)(v22 - 8);
    uint64_t v24 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v23 + 48);
    __dsta = v20;
    LODWORD(v20) = v24(v20, 1, v22);
    int v25 = v24(v21, 1, v22);
    if (v20)
    {
      if (!v25)
      {
        (*(void (**)(void *, char *, uint64_t))(v23 + 16))(__dsta, v21, v22);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(__dsta, 0, 1, v22);
        goto LABEL_23;
      }
      size_t v26 = *(void *)(*(void *)(sub_100008FA4(&qword_1000A3270) - 8) + 64);
      char v27 = __dsta;
    }
    else
    {
      if (!v25)
      {
        (*(void (**)(void *, char *, uint64_t))(v23 + 24))(__dsta, v21, v22);
        goto LABEL_23;
      }
      (*(void (**)(void *, uint64_t))(v23 + 8))(__dsta, v22);
      size_t v26 = *(void *)(*(void *)(sub_100008FA4(&qword_1000A3270) - 8) + 64);
      char v27 = __dsta;
    }
    memcpy(v27, v21, v26);
LABEL_23:
    uint64_t v4 = v42;
    *(void *)(v8 + v10[12]) = *(void *)&v9[v10[12]];
    swift_retain();
    swift_release();
    *(void *)(v8 + v10[13]) = *(void *)&v9[v10[13]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v8 + v10[14]) = *(void *)&v9[v10[14]];
    swift_retain();
    swift_release();
    *(void *)(v8 + v10[15]) = *(void *)&v9[v10[15]];
    swift_retain();
    swift_release();
    *(unsigned char *)(v8 + v10[16]) = v9[v10[16]];
    a3 = v43;
    goto LABEL_24;
  }
  if (v14)
  {
LABEL_12:
    uint64_t v18 = sub_100008FA4(&qword_1000A5410);
    memcpy((void *)v8, v9, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_24;
  }
  *(void *)uint64_t v8 = *(void *)v9;
  *(void *)(v8 + 8) = *((void *)v9 + 1);
  *(void *)(v8 + 16) = *((void *)v9 + 2);
  *(void *)(v8 + 24) = *((void *)v9 + 3);
  *(void *)(v8 + 32) = *((void *)v9 + 4);
  *(void *)(v8 + 40) = *((void *)v9 + 5);
  *(void *)(v8 + 48) = *((void *)v9 + 6);
  *(void *)(v8 + 56) = *((void *)v9 + 7);
  *(void *)(v8 + 64) = *((void *)v9 + 8);
  *(void *)(v8 + 72) = *((void *)v9 + 9);
  *(unsigned char *)(v8 + 80) = v9[80];
  *(void *)(v8 + 88) = *((void *)v9 + 11);
  *(void *)(v8 + 96) = *((void *)v9 + 12);
  uint64_t v15 = v10[11];
  __dst = (void *)(v8 + v15);
  uint64_t v38 = &v9[v15];
  uint64_t v16 = sub_10007C110();
  uint64_t v37 = *(void *)(v16 - 8);
  unint64_t v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v39(v38, 1, v16))
  {
    uint64_t v17 = sub_100008FA4(&qword_1000A3270);
    memcpy(__dst, v38, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v37 + 16))(__dst, v38, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v37 + 56))(__dst, 0, 1, v16);
  }
  *(void *)(v8 + v10[12]) = *(void *)&v9[v10[12]];
  *(void *)(v8 + v10[13]) = *(void *)&v9[v10[13]];
  *(void *)(v8 + v10[14]) = *(void *)&v9[v10[14]];
  *(void *)(v8 + v10[15]) = *(void *)&v9[v10[15]];
  *(unsigned char *)(v8 + v10[16]) = v9[v10[16]];
  unint64_t v28 = *(void (**)(uint64_t, void, uint64_t, int *))(v11 + 56);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v28(v8, 0, 1, v10);
LABEL_24:
  uint64_t v29 = *(int *)(a3 + 24);
  char v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)v4 + v29;
  uint64_t v32 = *(void *)v31;
  char v33 = v31[8];
  sub_10000A9EC(*(void *)v31, v33);
  uint64_t v34 = *(void *)v30;
  char v35 = v30[8];
  *(void *)char v30 = v32;
  v30[8] = v33;
  sub_10000AC28(v34, v35);
  return a1;
}

char *sub_100063950(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100008FA4(&qword_1000A4CD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_10007C5F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = (int *)type metadata accessor for Note();
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_100008FA4(&qword_1000A5410);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    long long v14 = *((_OWORD *)v10 + 1);
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    *((_OWORD *)v9 + 1) = v14;
    long long v15 = *((_OWORD *)v10 + 3);
    *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
    *((_OWORD *)v9 + 3) = v15;
    *((_OWORD *)v9 + 4) = *((_OWORD *)v10 + 4);
    v9[80] = v10[80];
    *(_OWORD *)(v9 + 88) = *(_OWORD *)(v10 + 88);
    uint64_t v16 = v11[11];
    __dst = &v9[v16];
    uint64_t v17 = &v10[v16];
    uint64_t v18 = sub_10007C110();
    uint64_t v19 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      uint64_t v20 = sub_100008FA4(&qword_1000A3270);
      memcpy(__dst, v17, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(__dst, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
    }
    *(void *)&v9[v11[12]] = *(void *)&v10[v11[12]];
    *(void *)&v9[v11[13]] = *(void *)&v10[v11[13]];
    *(void *)&v9[v11[14]] = *(void *)&v10[v11[14]];
    *(void *)&v9[v11[15]] = *(void *)&v10[v11[15]];
    v9[v11[16]] = v10[v11[16]];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v21 = *(int *)(a3 + 24);
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  *(void *)uint64_t v22 = *(void *)v23;
  v22[8] = v23[8];
  return a1;
}

char *sub_100063C60(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10000CBC8((uint64_t)a1, &qword_1000A4CD0);
    uint64_t v6 = sub_100008FA4(&qword_1000A4CD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_10007C5F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (uint64_t)&a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = (int *)type metadata accessor for Note();
  uint64_t v12 = *((void *)v11 - 1);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13((uint64_t)v10, 1, v11);
  if (!v14)
  {
    if (v15)
    {
      sub_100061BB4(v9, (uint64_t (*)(void))type metadata accessor for Note);
      goto LABEL_11;
    }
    uint64_t v49 = a3;
    uint64_t v25 = *((void *)v10 + 1);
    *(void *)uint64_t v9 = *(void *)v10;
    *(void *)(v9 + 8) = v25;
    swift_bridgeObjectRelease();
    uint64_t v26 = *((void *)v10 + 3);
    *(void *)(v9 + 16) = *((void *)v10 + 2);
    *(void *)(v9 + 24) = v26;
    swift_bridgeObjectRelease();
    uint64_t v27 = *((void *)v10 + 5);
    *(void *)(v9 + 32) = *((void *)v10 + 4);
    *(void *)(v9 + 40) = v27;
    swift_bridgeObjectRelease();
    uint64_t v28 = *((void *)v10 + 7);
    *(void *)(v9 + 48) = *((void *)v10 + 6);
    *(void *)(v9 + 56) = v28;
    swift_bridgeObjectRelease();
    uint64_t v29 = *((void *)v10 + 9);
    *(void *)(v9 + 64) = *((void *)v10 + 8);
    *(void *)(v9 + 72) = v29;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v9 + 80) = v10[80];
    uint64_t v30 = *((void *)v10 + 12);
    *(void *)(v9 + 88) = *((void *)v10 + 11);
    *(void *)(v9 + 96) = v30;
    swift_bridgeObjectRelease();
    uint64_t v31 = v11[11];
    uint64_t v32 = (void *)(v9 + v31);
    char v33 = &v10[v31];
    uint64_t v34 = sub_10007C110();
    uint64_t v46 = *(void *)(v34 - 8);
    char v35 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v46 + 48);
    uint64_t v47 = v32;
    LODWORD(v32) = v35(v32, 1, v34);
    int v36 = v35(v33, 1, v34);
    if (v32)
    {
      if (!v36)
      {
        (*(void (**)(void *, char *, uint64_t))(v46 + 32))(v47, v33, v34);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v46 + 56))(v47, 0, 1, v34);
        goto LABEL_22;
      }
      size_t v37 = *(void *)(*(void *)(sub_100008FA4(&qword_1000A3270) - 8) + 64);
      uint64_t v38 = v47;
    }
    else
    {
      if (!v36)
      {
        (*(void (**)(void *, char *, uint64_t))(v46 + 40))(v47, v33, v34);
        goto LABEL_22;
      }
      (*(void (**)(void *, uint64_t))(v46 + 8))(v47, v34);
      size_t v37 = *(void *)(*(void *)(sub_100008FA4(&qword_1000A3270) - 8) + 64);
      uint64_t v38 = v47;
    }
    memcpy(v38, v33, v37);
LABEL_22:
    *(void *)(v9 + v11[12]) = *(void *)&v10[v11[12]];
    swift_release();
    *(void *)(v9 + v11[13]) = *(void *)&v10[v11[13]];
    swift_bridgeObjectRelease();
    *(void *)(v9 + v11[14]) = *(void *)&v10[v11[14]];
    swift_release();
    *(void *)(v9 + v11[15]) = *(void *)&v10[v11[15]];
    swift_release();
    *(unsigned char *)(v9 + v11[16]) = v10[v11[16]];
    a3 = v49;
    goto LABEL_23;
  }
  if (v15)
  {
LABEL_11:
    uint64_t v24 = sub_100008FA4(&qword_1000A5410);
    memcpy((void *)v9, v10, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_23;
  }
  uint64_t v48 = a3;
  long long v16 = *((_OWORD *)v10 + 1);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v16;
  long long v17 = *((_OWORD *)v10 + 3);
  *(_OWORD *)(v9 + 32) = *((_OWORD *)v10 + 2);
  *(_OWORD *)(v9 + 48) = v17;
  *(_OWORD *)(v9 + 64) = *((_OWORD *)v10 + 4);
  *(unsigned char *)(v9 + 80) = v10[80];
  *(_OWORD *)(v9 + 88) = *(_OWORD *)(v10 + 88);
  uint64_t v18 = v11[11];
  uint64_t v19 = (void *)(v9 + v18);
  uint64_t v20 = &v10[v18];
  uint64_t v21 = sub_10007C110();
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    uint64_t v23 = sub_100008FA4(&qword_1000A3270);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  a3 = v48;
  *(void *)(v9 + v11[12]) = *(void *)&v10[v11[12]];
  *(void *)(v9 + v11[13]) = *(void *)&v10[v11[13]];
  *(void *)(v9 + v11[14]) = *(void *)&v10[v11[14]];
  *(void *)(v9 + v11[15]) = *(void *)&v10[v11[15]];
  *(unsigned char *)(v9 + v11[16]) = v10[v11[16]];
  (*(void (**)(uint64_t, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
LABEL_23:
  uint64_t v39 = *(int *)(a3 + 24);
  unint64_t v40 = &a1[v39];
  unint64_t v41 = &a2[v39];
  uint64_t v42 = *(void *)v41;
  LOBYTE(v41) = v41[8];
  uint64_t v43 = *(void *)v40;
  char v44 = v40[8];
  *(void *)unint64_t v40 = v42;
  v40[8] = (char)v41;
  sub_10000AC28(v43, v44);
  return a1;
}

uint64_t sub_100064218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10006422C);
}

uint64_t sub_10006422C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100008FA4(&qword_1000A4FD8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    uint64_t v11 = sub_100008FA4(&qword_1000A5410);
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) != a2)
    {
      unsigned int v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24) + 8);
      if (v14 > 1) {
        return (v14 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }

  return v9(v10, a2, v8);
}

uint64_t sub_100064348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10006435C);
}

uint64_t sub_10006435C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_100008FA4(&qword_1000A4FD8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_100008FA4(&qword_1000A5410);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 24) + 8) = -(char)a2;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_100064478()
{
  sub_100069F08(319, (unint64_t *)&unk_1000A5048, (uint64_t (*)(uint64_t))&type metadata accessor for ContentSizeCategory, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F)
  {
    sub_100069F08(319, (unint64_t *)&unk_1000A58F8, (uint64_t (*)(uint64_t))type metadata accessor for Note, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_1000645A8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = (int *)type metadata accessor for Note();
    uint64_t v8 = *((void *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_100008FA4(&qword_1000A5410);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      uint64_t v12 = a2[3];
      a1[2] = a2[2];
      a1[3] = v12;
      uint64_t v13 = a2[5];
      a1[4] = a2[4];
      a1[5] = v13;
      uint64_t v14 = a2[7];
      a1[6] = a2[6];
      a1[7] = v14;
      uint64_t v15 = a2[9];
      a1[8] = a2[8];
      a1[9] = v15;
      *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
      uint64_t v16 = a2[12];
      a1[11] = a2[11];
      a1[12] = v16;
      uint64_t v17 = v7[11];
      __dst = (char *)a1 + v17;
      uint64_t v30 = (char *)a2 + v17;
      uint64_t v18 = sub_10007C110();
      uint64_t v27 = *(void *)(v18 - 8);
      uint64_t v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v29(v30, 1, v18))
      {
        uint64_t v19 = sub_100008FA4(&qword_1000A3270);
        memcpy(__dst, v30, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v27 + 16))(__dst, v30, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v18);
      }
      *(uint64_t *)((char *)a1 + v7[12]) = *(uint64_t *)((char *)a2 + v7[12]);
      *(uint64_t *)((char *)a1 + v7[13]) = *(uint64_t *)((char *)a2 + v7[13]);
      *(uint64_t *)((char *)a1 + v7[14]) = *(uint64_t *)((char *)a2 + v7[14]);
      *(uint64_t *)((char *)a1 + v7[15]) = *(uint64_t *)((char *)a2 + v7[15]);
      *((unsigned char *)a1 + v7[16]) = *((unsigned char *)a2 + v7[16]);
      uint64_t v20 = *(void (**)(uint64_t *, void, uint64_t, int *))(v8 + 56);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      v20(a1, 0, 1, v7);
    }
    uint64_t v21 = *(int *)(a3 + 20);
    uint64_t v22 = (char *)a1 + v21;
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = *(void *)v23;
    char v25 = v23[8];
    sub_10000A9EC(*(void *)v23, v25);
    *(void *)uint64_t v22 = v24;
    v22[8] = v25;
  }
  return a1;
}

uint64_t sub_1000648F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Note();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = a1 + *(int *)(v4 + 44);
    uint64_t v6 = sub_10007C110();
    uint64_t v7 = *(void *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  uint64_t v8 = a1 + *(int *)(a2 + 20);
  uint64_t v9 = *(void *)v8;
  char v10 = *(unsigned char *)(v8 + 8);

  return sub_10000AC28(v9, v10);
}

void *sub_100064A64(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for Note();
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100008FA4(&qword_1000A5410);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v29 = v7;
    uint64_t v30 = a3;
    uint64_t v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    uint64_t v10 = a2[3];
    a1[2] = a2[2];
    a1[3] = v10;
    uint64_t v11 = a2[5];
    a1[4] = a2[4];
    a1[5] = v11;
    uint64_t v12 = a2[7];
    a1[6] = a2[6];
    a1[7] = v12;
    uint64_t v13 = a2[9];
    a1[8] = a2[8];
    a1[9] = v13;
    *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
    uint64_t v14 = a2[12];
    a1[11] = a2[11];
    a1[12] = v14;
    uint64_t v15 = v6[11];
    __dst = (char *)a1 + v15;
    uint64_t v27 = (char *)a2 + v15;
    uint64_t v16 = sub_10007C110();
    uint64_t v25 = *(void *)(v16 - 8);
    uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v26(v27, 1, v16))
    {
      uint64_t v17 = sub_100008FA4(&qword_1000A3270);
      memcpy(__dst, v27, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(__dst, v27, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v16);
    }
    *(void *)((char *)a1 + v6[12]) = *(void *)((char *)a2 + v6[12]);
    *(void *)((char *)a1 + v6[13]) = *(void *)((char *)a2 + v6[13]);
    *(void *)((char *)a1 + v6[14]) = *(void *)((char *)a2 + v6[14]);
    *(void *)((char *)a1 + v6[15]) = *(void *)((char *)a2 + v6[15]);
    *((unsigned char *)a1 + v6[16]) = *((unsigned char *)a2 + v6[16]);
    uint64_t v18 = *(void (**)(void *, void, uint64_t, int *))(v29 + 56);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    v18(a1, 0, 1, v6);
    a3 = v30;
  }
  uint64_t v19 = *(int *)(a3 + 20);
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = *(void *)v21;
  char v23 = v21[8];
  sub_10000A9EC(*(void *)v21, v23);
  *(void *)uint64_t v20 = v22;
  v20[8] = v23;
  return a1;
}

void *sub_100064D60(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for Note();
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_100061BB4((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for Note);
      goto LABEL_7;
    }
    uint64_t v37 = a3;
    *a1 = *a2;
    a1[1] = a2[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1[2] = a2[2];
    a1[3] = a2[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1[4] = a2[4];
    a1[5] = a2[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1[6] = a2[6];
    a1[7] = a2[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1[8] = a2[8];
    a1[9] = a2[9];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
    a1[11] = a2[11];
    a1[12] = a2[12];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v15 = v6[11];
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = sub_10007C110();
    uint64_t v19 = *(void *)(v18 - 8);
    uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
    int v21 = v20(v16, 1, v18);
    int v22 = v20(v17, 1, v18);
    if (v21)
    {
      if (!v22)
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
LABEL_16:
        *(void *)((char *)a1 + v6[12]) = *(void *)((char *)a2 + v6[12]);
        swift_retain();
        swift_release();
        *(void *)((char *)a1 + v6[13]) = *(void *)((char *)a2 + v6[13]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)((char *)a1 + v6[14]) = *(void *)((char *)a2 + v6[14]);
        swift_retain();
        swift_release();
        *(void *)((char *)a1 + v6[15]) = *(void *)((char *)a2 + v6[15]);
        swift_retain();
        swift_release();
        *((unsigned char *)a1 + v6[16]) = *((unsigned char *)a2 + v6[16]);
LABEL_17:
        a3 = v37;
        goto LABEL_18;
      }
    }
    else
    {
      if (!v22)
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v16, v17, v18);
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
    }
    uint64_t v24 = sub_100008FA4(&qword_1000A3270);
    memcpy(v16, v17, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_16;
  }
  if (!v10)
  {
    uint64_t v37 = a3;
    *a1 = *a2;
    a1[1] = a2[1];
    a1[2] = a2[2];
    a1[3] = a2[3];
    a1[4] = a2[4];
    a1[5] = a2[5];
    a1[6] = a2[6];
    a1[7] = a2[7];
    a1[8] = a2[8];
    a1[9] = a2[9];
    *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
    a1[11] = a2[11];
    a1[12] = a2[12];
    uint64_t v11 = v6[11];
    __dst = (char *)a1 + v11;
    char v35 = (char *)a2 + v11;
    uint64_t v12 = sub_10007C110();
    uint64_t v33 = *(void *)(v12 - 8);
    uint64_t v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v34(v35, 1, v12))
    {
      uint64_t v13 = sub_100008FA4(&qword_1000A3270);
      memcpy(__dst, v35, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(__dst, v35, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(__dst, 0, 1, v12);
    }
    *(void *)((char *)a1 + v6[12]) = *(void *)((char *)a2 + v6[12]);
    *(void *)((char *)a1 + v6[13]) = *(void *)((char *)a2 + v6[13]);
    *(void *)((char *)a1 + v6[14]) = *(void *)((char *)a2 + v6[14]);
    *(void *)((char *)a1 + v6[15]) = *(void *)((char *)a2 + v6[15]);
    *((unsigned char *)a1 + v6[16]) = *((unsigned char *)a2 + v6[16]);
    char v23 = *(void (**)(void *, void, uint64_t, int *))(v7 + 56);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    v23(a1, 0, 1, v6);
    goto LABEL_17;
  }
LABEL_7:
  uint64_t v14 = sub_100008FA4(&qword_1000A5410);
  memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
LABEL_18:
  uint64_t v25 = *(int *)(a3 + 20);
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = *(void *)v27;
  char v29 = v27[8];
  sub_10000A9EC(*(void *)v27, v29);
  uint64_t v30 = *(void *)v26;
  char v31 = v26[8];
  *(void *)uint64_t v26 = v28;
  v26[8] = v29;
  sub_10000AC28(v30, v31);
  return a1;
}

_OWORD *sub_100065358(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for Note();
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100008FA4(&qword_1000A5410);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    long long v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    long long v10 = a2[3];
    a1[2] = a2[2];
    a1[3] = v10;
    a1[4] = a2[4];
    *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
    *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
    uint64_t v11 = v6[11];
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_10007C110();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      uint64_t v16 = sub_100008FA4(&qword_1000A3270);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    *(void *)((char *)a1 + v6[12]) = *(void *)((char *)a2 + v6[12]);
    *(void *)((char *)a1 + v6[13]) = *(void *)((char *)a2 + v6[13]);
    *(void *)((char *)a1 + v6[14]) = *(void *)((char *)a2 + v6[14]);
    *(void *)((char *)a1 + v6[15]) = *(void *)((char *)a2 + v6[15]);
    *((unsigned char *)a1 + v6[16]) = *((unsigned char *)a2 + v6[16]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v17 = *(int *)(a3 + 20);
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  *(void *)uint64_t v18 = *(void *)v19;
  v18[8] = v19[8];
  return a1;
}

uint64_t sub_1000655BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for Note();
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_100061BB4(a1, (uint64_t (*)(void))type metadata accessor for Note);
      goto LABEL_7;
    }
    uint64_t v20 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v20;
    swift_bridgeObjectRelease();
    uint64_t v21 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v21;
    swift_bridgeObjectRelease();
    uint64_t v22 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v22;
    swift_bridgeObjectRelease();
    uint64_t v23 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v23;
    swift_bridgeObjectRelease();
    uint64_t v24 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = v24;
    swift_bridgeObjectRelease();
    *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
    uint64_t v25 = *(void *)(a2 + 96);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = v25;
    swift_bridgeObjectRelease();
    uint64_t v26 = v6[11];
    uint64_t v27 = (void *)(a1 + v26);
    uint64_t v28 = (void *)(a2 + v26);
    uint64_t v29 = sub_10007C110();
    uint64_t v30 = *(void *)(v29 - 8);
    char v31 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v30 + 48);
    uint64_t v42 = v27;
    LODWORD(v27) = v31(v27, 1, v29);
    int v32 = v31(v28, 1, v29);
    if (v27)
    {
      if (!v32)
      {
        (*(void (**)(void *, void *, uint64_t))(v30 + 32))(v42, v28, v29);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v42, 0, 1, v29);
        goto LABEL_18;
      }
      size_t v33 = *(void *)(*(void *)(sub_100008FA4(&qword_1000A3270) - 8) + 64);
      uint64_t v34 = v42;
    }
    else
    {
      if (!v32)
      {
        (*(void (**)(void *, void *, uint64_t))(v30 + 40))(v42, v28, v29);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v30 + 8))(v42, v29);
      size_t v33 = *(void *)(*(void *)(sub_100008FA4(&qword_1000A3270) - 8) + 64);
      uint64_t v34 = v42;
    }
    memcpy(v34, v28, v33);
LABEL_18:
    *(void *)(a1 + v6[12]) = *(void *)(a2 + v6[12]);
    swift_release();
    *(void *)(a1 + v6[13]) = *(void *)(a2 + v6[13]);
    swift_bridgeObjectRelease();
    *(void *)(a1 + v6[14]) = *(void *)(a2 + v6[14]);
    swift_release();
    *(void *)(a1 + v6[15]) = *(void *)(a2 + v6[15]);
    swift_release();
    *(unsigned char *)(a1 + v6[16]) = *(unsigned char *)(a2 + v6[16]);
    goto LABEL_19;
  }
  if (v10)
  {
LABEL_7:
    uint64_t v19 = sub_100008FA4(&qword_1000A5410);
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_19;
  }
  long long v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  long long v12 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v12;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  uint64_t v13 = v6[11];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  uint64_t v16 = sub_10007C110();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = sub_100008FA4(&qword_1000A3270);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  *(void *)(a1 + v6[12]) = *(void *)(a2 + v6[12]);
  *(void *)(a1 + v6[13]) = *(void *)(a2 + v6[13]);
  *(void *)(a1 + v6[14]) = *(void *)(a2 + v6[14]);
  *(void *)(a1 + v6[15]) = *(void *)(a2 + v6[15]);
  *(unsigned char *)(a1 + v6[16]) = *(unsigned char *)(a2 + v6[16]);
  (*(void (**)(uint64_t, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
LABEL_19:
  uint64_t v35 = *(int *)(a3 + 20);
  uint64_t v36 = a1 + v35;
  uint64_t v37 = (uint64_t *)(a2 + v35);
  uint64_t v38 = *v37;
  LOBYTE(v37) = *((unsigned char *)v37 + 8);
  uint64_t v39 = *(void *)v36;
  char v40 = *(unsigned char *)(v36 + 8);
  *(void *)uint64_t v36 = v38;
  *(unsigned char *)(v36 + 8) = (_BYTE)v37;
  sub_10000AC28(v39, v40);
  return a1;
}

uint64_t sub_100065AA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100065AB4);
}

uint64_t sub_100065AB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100008FA4(&qword_1000A5410);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 > 1) {
      return (v10 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_100065B78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100065B8C);
}

uint64_t sub_100065B8C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100008FA4(&qword_1000A5410);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20) + 8) = -(char)a2;
  }
  return result;
}

void sub_100065C50(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

unint64_t sub_100065C8C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 8);
    sub_10000A9EC(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(unsigned char *)(a1 + 8) = v8;
    uint64_t v9 = *(int *)(a3 + 20);
    unsigned int v10 = (void *)(a1 + v9);
    long long v11 = (void *)(a2 + v9);
    long long v12 = (int *)type metadata accessor for NotesFolder();
    uint64_t v13 = *((void *)v12 - 1);
    if ((*(unsigned int (**)(void *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = sub_100008FA4(&qword_1000A3638);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      uint64_t v47 = v13;
      uint64_t v16 = v11[1];
      *unsigned int v10 = *v11;
      v10[1] = v16;
      uint64_t v17 = v11[3];
      v10[2] = v11[2];
      v10[3] = v17;
      *((unsigned char *)v10 + 32) = *((unsigned char *)v11 + 32);
      uint64_t v18 = v11[6];
      v10[5] = v11[5];
      v10[6] = v18;
      uint64_t v19 = v12[8];
      __dst = (char *)v10 + v19;
      uint64_t v49 = (char *)v11 + v19;
      uint64_t v20 = sub_10007C110();
      uint64_t v43 = *(void *)(v20 - 8);
      uint64_t v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48);
      uint64_t v21 = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v48(v49, 1, v21))
      {
        uint64_t v22 = sub_100008FA4(&qword_1000A3270);
        memcpy(__dst, v49, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v43 + 16))(__dst, v49, v21);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(__dst, 0, 1, v21);
      }
      *(void *)((char *)v10 + v12[9]) = *(void *)((char *)v11 + v12[9]);
      *(void *)((char *)v10 + v12[10]) = *(void *)((char *)v11 + v12[10]);
      uint64_t v23 = *(void (**)(void *, void, uint64_t, int *))(v47 + 56);
      swift_retain();
      swift_bridgeObjectRetain();
      v23(v10, 0, 1, v12);
    }
    uint64_t v24 = *(int *)(a3 + 24);
    uint64_t v25 = (void *)(a1 + v24);
    uint64_t v26 = (void *)(a2 + v24);
    uint64_t v27 = (int *)type metadata accessor for Note();
    uint64_t v28 = *((void *)v27 - 1);
    if ((*(unsigned int (**)(void *, uint64_t, int *))(v28 + 48))(v26, 1, v27))
    {
      uint64_t v29 = sub_100008FA4(&qword_1000A5410);
      memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      uint64_t v30 = v26[1];
      *uint64_t v25 = *v26;
      v25[1] = v30;
      uint64_t v31 = v26[3];
      v25[2] = v26[2];
      v25[3] = v31;
      uint64_t v32 = v26[5];
      v25[4] = v26[4];
      v25[5] = v32;
      uint64_t v33 = v26[7];
      v25[6] = v26[6];
      v25[7] = v33;
      uint64_t v34 = v26[9];
      v25[8] = v26[8];
      v25[9] = v34;
      *((unsigned char *)v25 + 80) = *((unsigned char *)v26 + 80);
      uint64_t v35 = v26[12];
      v25[11] = v26[11];
      v25[12] = v35;
      uint64_t v36 = v27[11];
      uint64_t v42 = (char *)v25 + v36;
      __dsta = (char *)v26 + v36;
      uint64_t v37 = sub_10007C110();
      uint64_t v41 = *(void *)(v37 - 8);
      char v44 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v44(__dsta, 1, v37))
      {
        uint64_t v38 = sub_100008FA4(&qword_1000A3270);
        memcpy(v42, __dsta, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v42, __dsta, v37);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v42, 0, 1, v37);
      }
      *(void *)((char *)v25 + v27[12]) = *(void *)((char *)v26 + v27[12]);
      *(void *)((char *)v25 + v27[13]) = *(void *)((char *)v26 + v27[13]);
      *(void *)((char *)v25 + v27[14]) = *(void *)((char *)v26 + v27[14]);
      *(void *)((char *)v25 + v27[15]) = *(void *)((char *)v26 + v27[15]);
      *((unsigned char *)v25 + v27[16]) = *((unsigned char *)v26 + v27[16]);
      uint64_t v39 = *(void (**)(void *, void, uint64_t, int *))(v28 + 56);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      v39(v25, 0, 1, v27);
    }
  }
  return a1;
}

uint64_t sub_1000661E4(uint64_t a1, uint64_t a2)
{
  sub_10000AC28(*(void *)a1, *(unsigned char *)(a1 + 8));
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for NotesFolder();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + *(int *)(v5 + 32);
    uint64_t v7 = sub_10007C110();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  uint64_t v9 = a1 + *(int *)(a2 + 24);
  uint64_t v10 = type metadata accessor for Note();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10);
  if (!result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v12 = v9 + *(int *)(v10 + 44);
    uint64_t v13 = sub_10007C110();
    uint64_t v14 = *(void *)(v13 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100066470(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_10000A9EC(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  long long v11 = (int *)type metadata accessor for NotesFolder();
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_100008FA4(&qword_1000A3638);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    uint64_t v47 = a1;
    uint64_t v14 = v10[1];
    void *v9 = *v10;
    v9[1] = v14;
    uint64_t v15 = v10[3];
    v9[2] = v10[2];
    v9[3] = v15;
    *((unsigned char *)v9 + 32) = *((unsigned char *)v10 + 32);
    uint64_t v16 = v10[6];
    v9[5] = v10[5];
    v9[6] = v16;
    uint64_t v17 = v11[8];
    uint64_t v43 = (char *)v10 + v17;
    __dst = (char *)v9 + v17;
    uint64_t v18 = sub_10007C110();
    uint64_t v39 = *(void *)(v18 - 8);
    uint64_t v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v41(v43, 1, v18))
    {
      uint64_t v19 = sub_100008FA4(&qword_1000A3270);
      memcpy(__dst, v43, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 16))(__dst, v43, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(__dst, 0, 1, v18);
    }
    *(void *)((char *)v9 + v11[9]) = *(void *)((char *)v10 + v11[9]);
    *(void *)((char *)v9 + v11[10]) = *(void *)((char *)v10 + v11[10]);
    uint64_t v20 = *(void (**)(void *, void, uint64_t, int *))(v12 + 56);
    swift_retain();
    swift_bridgeObjectRetain();
    v20(v9, 0, 1, v11);
    a1 = v47;
  }
  uint64_t v21 = *(int *)(a3 + 24);
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  uint64_t v24 = (int *)type metadata accessor for Note();
  uint64_t v25 = *((void *)v24 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v25 + 48))(v23, 1, v24))
  {
    uint64_t v26 = sub_100008FA4(&qword_1000A5410);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    uint64_t v46 = v25;
    uint64_t v27 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v27;
    uint64_t v28 = v23[3];
    v22[2] = v23[2];
    v22[3] = v28;
    uint64_t v29 = v23[5];
    v22[4] = v23[4];
    v22[5] = v29;
    uint64_t v30 = v23[7];
    v22[6] = v23[6];
    v22[7] = v30;
    uint64_t v31 = v23[9];
    v22[8] = v23[8];
    v22[9] = v31;
    *((unsigned char *)v22 + 80) = *((unsigned char *)v23 + 80);
    uint64_t v32 = v23[12];
    v22[11] = v23[11];
    v22[12] = v32;
    uint64_t v33 = v24[11];
    __dsta = (char *)v22 + v33;
    char v40 = (char *)v23 + v33;
    uint64_t v34 = sub_10007C110();
    uint64_t v38 = *(void *)(v34 - 8);
    uint64_t v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v42(v40, 1, v34))
    {
      uint64_t v35 = sub_100008FA4(&qword_1000A3270);
      memcpy(__dsta, v40, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 16))(__dsta, v40, v34);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(__dsta, 0, 1, v34);
    }
    *(void *)((char *)v22 + v24[12]) = *(void *)((char *)v23 + v24[12]);
    *(void *)((char *)v22 + v24[13]) = *(void *)((char *)v23 + v24[13]);
    *(void *)((char *)v22 + v24[14]) = *(void *)((char *)v23 + v24[14]);
    *(void *)((char *)v22 + v24[15]) = *(void *)((char *)v23 + v24[15]);
    *((unsigned char *)v22 + v24[16]) = *((unsigned char *)v23 + v24[16]);
    uint64_t v36 = *(void (**)(void *, void, uint64_t, int *))(v46 + 56);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    v36(v22, 0, 1, v24);
  }
  return a1;
}

uint64_t sub_100066978(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v4 = a2;
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_10000A9EC(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_10000AC28(v8, v9);
  uint64_t v10 = a3[5];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = v4 + v10;
  uint64_t v13 = (int *)type metadata accessor for NotesFolder();
  uint64_t v14 = *((void *)v13 - 1);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      uint64_t v64 = v4;
      uint64_t v65 = a1;
      *(void *)uint64_t v11 = *(void *)v12;
      *(void *)(v11 + 8) = *(void *)(v12 + 8);
      *(void *)(v11 + 16) = *(void *)(v12 + 16);
      *(void *)(v11 + 24) = *(void *)(v12 + 24);
      *(unsigned char *)(v11 + 32) = *(unsigned char *)(v12 + 32);
      *(void *)(v11 + 40) = *(void *)(v12 + 40);
      *(void *)(v11 + 48) = *(void *)(v12 + 48);
      uint64_t v18 = v13[8];
      uint64_t v59 = (const void *)(v12 + v18);
      __dst = (void *)(v11 + v18);
      uint64_t v19 = sub_10007C110();
      uint64_t v20 = *(void *)(v19 - 8);
      uint64_t v57 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v57(v59, 1, v19))
      {
        uint64_t v21 = sub_100008FA4(&qword_1000A3270);
        memcpy(__dst, v59, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v20 + 16))(__dst, v59, v19);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
      }
      a1 = v65;
      *(void *)(v11 + v13[9]) = *(void *)(v12 + v13[9]);
      *(void *)(v11 + v13[10]) = *(void *)(v12 + v13[10]);
      uint64_t v31 = *(void (**)(uint64_t, void, uint64_t, int *))(v14 + 56);
      swift_retain();
      swift_bridgeObjectRetain();
      v31(v11, 0, 1, v13);
      goto LABEL_17;
    }
LABEL_7:
    uint64_t v22 = sub_100008FA4(&qword_1000A3638);
    memcpy((void *)v11, (const void *)v12, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_18;
  }
  if (v17)
  {
    sub_100061BB4(v11, (uint64_t (*)(void))type metadata accessor for NotesFolder);
    goto LABEL_7;
  }
  uint64_t v62 = a3;
  uint64_t v64 = v4;
  uint64_t v66 = a1;
  *(void *)uint64_t v11 = *(void *)v12;
  *(void *)(v11 + 8) = *(void *)(v12 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v11 + 16) = *(void *)(v12 + 16);
  *(void *)(v11 + 24) = *(void *)(v12 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v11 + 32) = *(unsigned char *)(v12 + 32);
  *(void *)(v11 + 40) = *(void *)(v12 + 40);
  *(void *)(v11 + 48) = *(void *)(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = v13[8];
  uint64_t v24 = (void *)(v11 + v23);
  uint64_t v25 = (void *)(v12 + v23);
  uint64_t v26 = sub_10007C110();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v27 + 48);
  int v29 = v28(v24, 1, v26);
  int v30 = v28(v25, 1, v26);
  if (!v29)
  {
    if (!v30)
    {
      (*(void (**)(void *, void *, uint64_t))(v27 + 24))(v24, v25, v26);
      goto LABEL_16;
    }
    (*(void (**)(void *, uint64_t))(v27 + 8))(v24, v26);
    goto LABEL_15;
  }
  if (v30)
  {
LABEL_15:
    uint64_t v32 = sub_100008FA4(&qword_1000A3270);
    memcpy(v24, v25, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_16;
  }
  (*(void (**)(void *, void *, uint64_t))(v27 + 16))(v24, v25, v26);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
LABEL_16:
  a1 = v66;
  a3 = v62;
  *(void *)(v11 + v13[9]) = *(void *)(v12 + v13[9]);
  swift_retain();
  swift_release();
  *(void *)(v11 + v13[10]) = *(void *)(v12 + v13[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_17:
  uint64_t v4 = v64;
LABEL_18:
  uint64_t v33 = a3[6];
  uint64_t v34 = a1 + v33;
  uint64_t v35 = v4 + v33;
  uint64_t v36 = (int *)type metadata accessor for Note();
  uint64_t v37 = *((void *)v36 - 1);
  uint64_t v38 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v37 + 48);
  int v39 = v38(v34, 1, v36);
  int v40 = v38(v35, 1, v36);
  if (!v39)
  {
    if (v40)
    {
      sub_100061BB4(v34, (uint64_t (*)(void))type metadata accessor for Note);
      goto LABEL_24;
    }
    *(void *)uint64_t v34 = *(void *)v35;
    *(void *)(v34 + 8) = *(void *)(v35 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v34 + 16) = *(void *)(v35 + 16);
    *(void *)(v34 + 24) = *(void *)(v35 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v34 + 32) = *(void *)(v35 + 32);
    *(void *)(v34 + 40) = *(void *)(v35 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v34 + 48) = *(void *)(v35 + 48);
    *(void *)(v34 + 56) = *(void *)(v35 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v34 + 64) = *(void *)(v35 + 64);
    *(void *)(v34 + 72) = *(void *)(v35 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v34 + 80) = *(unsigned char *)(v35 + 80);
    *(void *)(v34 + 88) = *(void *)(v35 + 88);
    *(void *)(v34 + 96) = *(void *)(v35 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v45 = v36[11];
    uint64_t v46 = (void *)(v34 + v45);
    uint64_t v47 = (void *)(v35 + v45);
    uint64_t v48 = sub_10007C110();
    uint64_t v49 = *(void *)(v48 - 8);
    uint64_t v50 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v49 + 48);
    int v51 = v50(v46, 1, v48);
    int v52 = v50(v47, 1, v48);
    if (v51)
    {
      if (!v52)
      {
        (*(void (**)(void *, void *, uint64_t))(v49 + 16))(v46, v47, v48);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
LABEL_33:
        *(void *)(v34 + v36[12]) = *(void *)(v35 + v36[12]);
        swift_retain();
        swift_release();
        *(void *)(v34 + v36[13]) = *(void *)(v35 + v36[13]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)(v34 + v36[14]) = *(void *)(v35 + v36[14]);
        swift_retain();
        swift_release();
        *(void *)(v34 + v36[15]) = *(void *)(v35 + v36[15]);
        swift_retain();
        swift_release();
        *(unsigned char *)(v34 + v36[16]) = *(unsigned char *)(v35 + v36[16]);
        return a1;
      }
    }
    else
    {
      if (!v52)
      {
        (*(void (**)(void *, void *, uint64_t))(v49 + 24))(v46, v47, v48);
        goto LABEL_33;
      }
      (*(void (**)(void *, uint64_t))(v49 + 8))(v46, v48);
    }
    uint64_t v54 = sub_100008FA4(&qword_1000A3270);
    memcpy(v46, v47, *(void *)(*(void *)(v54 - 8) + 64));
    goto LABEL_33;
  }
  if (v40)
  {
LABEL_24:
    uint64_t v44 = sub_100008FA4(&qword_1000A5410);
    memcpy((void *)v34, (const void *)v35, *(void *)(*(void *)(v44 - 8) + 64));
    return a1;
  }
  *(void *)uint64_t v34 = *(void *)v35;
  *(void *)(v34 + 8) = *(void *)(v35 + 8);
  *(void *)(v34 + 16) = *(void *)(v35 + 16);
  *(void *)(v34 + 24) = *(void *)(v35 + 24);
  *(void *)(v34 + 32) = *(void *)(v35 + 32);
  *(void *)(v34 + 40) = *(void *)(v35 + 40);
  *(void *)(v34 + 48) = *(void *)(v35 + 48);
  *(void *)(v34 + 56) = *(void *)(v35 + 56);
  *(void *)(v34 + 64) = *(void *)(v35 + 64);
  *(void *)(v34 + 72) = *(void *)(v35 + 72);
  *(unsigned char *)(v34 + 80) = *(unsigned char *)(v35 + 80);
  *(void *)(v34 + 88) = *(void *)(v35 + 88);
  *(void *)(v34 + 96) = *(void *)(v35 + 96);
  uint64_t v41 = v36[11];
  uint64_t v63 = (void *)(v34 + v41);
  uint64_t v58 = (const void *)(v35 + v41);
  uint64_t v42 = sub_10007C110();
  uint64_t v56 = *(void *)(v42 - 8);
  uint64_t v60 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v56 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v60(v58, 1, v42))
  {
    uint64_t v43 = sub_100008FA4(&qword_1000A3270);
    memcpy(v63, v58, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v56 + 16))(v63, v58, v42);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v56 + 56))(v63, 0, 1, v42);
  }
  *(void *)(v34 + v36[12]) = *(void *)(v35 + v36[12]);
  *(void *)(v34 + v36[13]) = *(void *)(v35 + v36[13]);
  *(void *)(v34 + v36[14]) = *(void *)(v35 + v36[14]);
  *(void *)(v34 + v36[15]) = *(void *)(v35 + v36[15]);
  *(unsigned char *)(v34 + v36[16]) = *(unsigned char *)(v35 + v36[16]);
  uint64_t v53 = *(void (**)(uint64_t, void, uint64_t, int *))(v37 + 56);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v53(v34, 0, 1, v36);
  return a1;
}

uint64_t sub_1000673CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 20);
  char v7 = (_OWORD *)(a1 + v6);
  uint64_t v8 = (_OWORD *)(a2 + v6);
  char v9 = (int *)type metadata accessor for NotesFolder();
  uint64_t v10 = *((void *)v9 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_100008FA4(&qword_1000A3638);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    long long v12 = v8[1];
    _OWORD *v7 = *v8;
    v7[1] = v12;
    *((unsigned char *)v7 + 32) = *((unsigned char *)v8 + 32);
    *(_OWORD *)((char *)v7 + 40) = *(_OWORD *)((char *)v8 + 40);
    uint64_t v13 = v9[8];
    __dst = (char *)v7 + v13;
    uint64_t v14 = (char *)v8 + v13;
    uint64_t v15 = sub_10007C110();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = sub_100008FA4(&qword_1000A3270);
      memcpy(__dst, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(__dst, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
    }
    *(void *)((char *)v7 + v9[9]) = *(void *)((char *)v8 + v9[9]);
    *(void *)((char *)v7 + v9[10]) = *(void *)((char *)v8 + v9[10]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v18 = *(int *)(a3 + 24);
  uint64_t v19 = (_OWORD *)(a1 + v18);
  uint64_t v20 = (_OWORD *)(a2 + v18);
  uint64_t v21 = (int *)type metadata accessor for Note();
  uint64_t v22 = *((void *)v21 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v22 + 48))(v20, 1, v21))
  {
    uint64_t v23 = sub_100008FA4(&qword_1000A5410);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    long long v24 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v24;
    long long v25 = v20[3];
    v19[2] = v20[2];
    v19[3] = v25;
    v19[4] = v20[4];
    *((unsigned char *)v19 + 80) = *((unsigned char *)v20 + 80);
    *(_OWORD *)((char *)v19 + 88) = *(_OWORD *)((char *)v20 + 88);
    uint64_t v26 = v21[11];
    uint64_t v27 = (char *)v19 + v26;
    uint64_t v28 = (char *)v20 + v26;
    uint64_t v29 = sub_10007C110();
    uint64_t v30 = *(void *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
    {
      uint64_t v31 = sub_100008FA4(&qword_1000A3270);
      memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v27, v28, v29);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
    *(void *)((char *)v19 + v21[12]) = *(void *)((char *)v20 + v21[12]);
    *(void *)((char *)v19 + v21[13]) = *(void *)((char *)v20 + v21[13]);
    *(void *)((char *)v19 + v21[14]) = *(void *)((char *)v20 + v21[14]);
    *(void *)((char *)v19 + v21[15]) = *(void *)((char *)v20 + v21[15]);
    *((unsigned char *)v19 + v21[16]) = *((unsigned char *)v20 + v21[16]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v22 + 56))(v19, 0, 1, v21);
  }
  return a1;
}

uint64_t sub_1000677FC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_10000AC28(v8, v9);
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = (uint64_t)a2 + v10;
  uint64_t v13 = (int *)type metadata accessor for NotesFolder();
  uint64_t v14 = *((void *)v13 - 1);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (v17)
    {
      sub_100061BB4(v11, (uint64_t (*)(void))type metadata accessor for NotesFolder);
      goto LABEL_7;
    }
    uint64_t v70 = a3;
    uint64_t v25 = *(void *)(v12 + 8);
    *(void *)uint64_t v11 = *(void *)v12;
    *(void *)(v11 + 8) = v25;
    swift_bridgeObjectRelease();
    uint64_t v26 = *(void *)(v12 + 24);
    *(void *)(v11 + 16) = *(void *)(v12 + 16);
    *(void *)(v11 + 24) = v26;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v11 + 32) = *(unsigned char *)(v12 + 32);
    uint64_t v27 = *(void *)(v12 + 48);
    *(void *)(v11 + 40) = *(void *)(v12 + 40);
    *(void *)(v11 + 48) = v27;
    swift_bridgeObjectRelease();
    uint64_t v28 = v13[8];
    uint64_t v29 = (void *)(v11 + v28);
    uint64_t v30 = (void *)(v12 + v28);
    uint64_t v31 = sub_10007C110();
    uint64_t v69 = *(void *)(v31 - 8);
    uint64_t v32 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v69 + 48);
    __dsta = v29;
    LODWORD(v29) = v32(v29, 1, v31);
    int v33 = v32(v30, 1, v31);
    if (v29)
    {
      if (!v33)
      {
        (*(void (**)(void *, void *, uint64_t))(v69 + 32))(__dsta, v30, v31);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v69 + 56))(__dsta, 0, 1, v31);
        goto LABEL_18;
      }
      size_t v34 = *(void *)(*(void *)(sub_100008FA4(&qword_1000A3270) - 8) + 64);
      uint64_t v35 = __dsta;
    }
    else
    {
      if (!v33)
      {
        (*(void (**)(void *, void *, uint64_t))(v69 + 40))(__dsta, v30, v31);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v69 + 8))(__dsta, v31);
      size_t v34 = *(void *)(*(void *)(sub_100008FA4(&qword_1000A3270) - 8) + 64);
      uint64_t v35 = __dsta;
    }
    memcpy(v35, v30, v34);
LABEL_18:
    a3 = v70;
    *(void *)(v11 + v13[9]) = *(void *)(v12 + v13[9]);
    swift_release();
    *(void *)(v11 + v13[10]) = *(void *)(v12 + v13[10]);
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  if (v17)
  {
LABEL_7:
    uint64_t v24 = sub_100008FA4(&qword_1000A3638);
    memcpy((void *)v11, (const void *)v12, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_19;
  }
  long long v18 = *(_OWORD *)(v12 + 16);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *(_OWORD *)(v11 + 16) = v18;
  *(unsigned char *)(v11 + 32) = *(unsigned char *)(v12 + 32);
  *(_OWORD *)(v11 + 40) = *(_OWORD *)(v12 + 40);
  uint64_t v19 = v13[8];
  __dst = (void *)(v11 + v19);
  uint64_t v20 = (const void *)(v12 + v19);
  uint64_t v21 = sub_10007C110();
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    uint64_t v23 = sub_100008FA4(&qword_1000A3270);
    memcpy(__dst, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v22 + 32))(__dst, v20, v21);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
  }
  *(void *)(v11 + v13[9]) = *(void *)(v12 + v13[9]);
  *(void *)(v11 + v13[10]) = *(void *)(v12 + v13[10]);
  (*(void (**)(uint64_t, void, uint64_t, int *))(v14 + 56))(v11, 0, 1, v13);
LABEL_19:
  uint64_t v36 = *(int *)(a3 + 24);
  uint64_t v37 = a1 + v36;
  uint64_t v38 = (uint64_t)a2 + v36;
  int v39 = (int *)type metadata accessor for Note();
  uint64_t v40 = *((void *)v39 - 1);
  uint64_t v41 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v40 + 48);
  int v42 = v41(v37, 1, v39);
  int v43 = v41(v38, 1, v39);
  if (!v42)
  {
    if (v43)
    {
      sub_100061BB4(v37, (uint64_t (*)(void))type metadata accessor for Note);
      goto LABEL_25;
    }
    uint64_t v53 = *(void *)(v38 + 8);
    *(void *)uint64_t v37 = *(void *)v38;
    *(void *)(v37 + 8) = v53;
    swift_bridgeObjectRelease();
    uint64_t v54 = *(void *)(v38 + 24);
    *(void *)(v37 + 16) = *(void *)(v38 + 16);
    *(void *)(v37 + 24) = v54;
    swift_bridgeObjectRelease();
    uint64_t v55 = *(void *)(v38 + 40);
    *(void *)(v37 + 32) = *(void *)(v38 + 32);
    *(void *)(v37 + 40) = v55;
    swift_bridgeObjectRelease();
    uint64_t v56 = *(void *)(v38 + 56);
    *(void *)(v37 + 48) = *(void *)(v38 + 48);
    *(void *)(v37 + 56) = v56;
    swift_bridgeObjectRelease();
    uint64_t v57 = *(void *)(v38 + 72);
    *(void *)(v37 + 64) = *(void *)(v38 + 64);
    *(void *)(v37 + 72) = v57;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v37 + 80) = *(unsigned char *)(v38 + 80);
    uint64_t v58 = *(void *)(v38 + 96);
    *(void *)(v37 + 88) = *(void *)(v38 + 88);
    *(void *)(v37 + 96) = v58;
    swift_bridgeObjectRelease();
    uint64_t v59 = v39[11];
    uint64_t v60 = (void *)(v37 + v59);
    uint64_t v61 = (void *)(v38 + v59);
    uint64_t v62 = sub_10007C110();
    uint64_t v63 = *(void *)(v62 - 8);
    uint64_t v64 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v63 + 48);
    __src = v60;
    LODWORD(v60) = v64(v60, 1, v62);
    int v65 = v64(v61, 1, v62);
    if (v60)
    {
      if (!v65)
      {
        (*(void (**)(void *, void *, uint64_t))(v63 + 32))(__src, v61, v62);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v63 + 56))(__src, 0, 1, v62);
        goto LABEL_36;
      }
      size_t v66 = *(void *)(*(void *)(sub_100008FA4(&qword_1000A3270) - 8) + 64);
      char v67 = __src;
    }
    else
    {
      if (!v65)
      {
        (*(void (**)(void *, void *, uint64_t))(v63 + 40))(__src, v61, v62);
        goto LABEL_36;
      }
      (*(void (**)(void *, uint64_t))(v63 + 8))(__src, v62);
      size_t v66 = *(void *)(*(void *)(sub_100008FA4(&qword_1000A3270) - 8) + 64);
      char v67 = __src;
    }
    memcpy(v67, v61, v66);
LABEL_36:
    *(void *)(v37 + v39[12]) = *(void *)(v38 + v39[12]);
    swift_release();
    *(void *)(v37 + v39[13]) = *(void *)(v38 + v39[13]);
    swift_bridgeObjectRelease();
    *(void *)(v37 + v39[14]) = *(void *)(v38 + v39[14]);
    swift_release();
    *(void *)(v37 + v39[15]) = *(void *)(v38 + v39[15]);
    swift_release();
    *(unsigned char *)(v37 + v39[16]) = *(unsigned char *)(v38 + v39[16]);
    return a1;
  }
  if (v43)
  {
LABEL_25:
    uint64_t v52 = sub_100008FA4(&qword_1000A5410);
    memcpy((void *)v37, (const void *)v38, *(void *)(*(void *)(v52 - 8) + 64));
    return a1;
  }
  long long v44 = *(_OWORD *)(v38 + 16);
  *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
  *(_OWORD *)(v37 + 16) = v44;
  long long v45 = *(_OWORD *)(v38 + 48);
  *(_OWORD *)(v37 + 32) = *(_OWORD *)(v38 + 32);
  *(_OWORD *)(v37 + 48) = v45;
  *(_OWORD *)(v37 + 64) = *(_OWORD *)(v38 + 64);
  *(unsigned char *)(v37 + 80) = *(unsigned char *)(v38 + 80);
  *(_OWORD *)(v37 + 88) = *(_OWORD *)(v38 + 88);
  uint64_t v46 = v39[11];
  uint64_t v47 = (void *)(v37 + v46);
  uint64_t v48 = (const void *)(v38 + v46);
  uint64_t v49 = sub_10007C110();
  uint64_t v50 = *(void *)(v49 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
  {
    uint64_t v51 = sub_100008FA4(&qword_1000A3270);
    memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v50 + 32))(v47, v48, v49);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
  }
  *(void *)(v37 + v39[12]) = *(void *)(v38 + v39[12]);
  *(void *)(v37 + v39[13]) = *(void *)(v38 + v39[13]);
  *(void *)(v37 + v39[14]) = *(void *)(v38 + v39[14]);
  *(void *)(v37 + v39[15]) = *(void *)(v38 + v39[15]);
  *(unsigned char *)(v37 + v39[16]) = *(unsigned char *)(v38 + v39[16]);
  (*(void (**)(uint64_t, void, uint64_t, int *))(v40 + 56))(v37, 0, 1, v39);
  return a1;
}

uint64_t sub_1000680C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000680D4);
}

uint64_t sub_1000680D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_100008FA4(&qword_1000A3638);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100008FA4(&qword_1000A5410);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_100068200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100068214);
}

uint64_t sub_100068214(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 8) = -(char)a2;
  }
  else
  {
    uint64_t v8 = sub_100008FA4(&qword_1000A3638);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100008FA4(&qword_1000A5410);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 24);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_100068344()
{
  sub_100069F08(319, (unint64_t *)&unk_1000A5A28, (uint64_t (*)(uint64_t))type metadata accessor for NotesFolder, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F)
  {
    sub_100069F08(319, (unint64_t *)&unk_1000A58F8, (uint64_t (*)(uint64_t))type metadata accessor for Note, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_100068478()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10006851C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100068538()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100068554()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100068570()
{
  unint64_t result = qword_1000A5A80;
  if (!qword_1000A5A80)
  {
    sub_10000A43C(&qword_1000A5A68);
    sub_10000CAB4(&qword_1000A5A88, &qword_1000A5A60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A5A80);
  }
  return result;
}

uint64_t type metadata accessor for NotesFolderWidgetView.Thumbnail(uint64_t a1)
{
  return sub_10000A2B4(a1, qword_1000A5C58);
}

BOOL sub_100068638(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a2;
  uint64_t v3 = sub_10007C5F0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  char v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v18 - v8;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v10((char *)&v18 - v8, a1, v3);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t))(v4 + 88);
  int v12 = v11(v9, v3);
  unint64_t v13 = 0;
  int v14 = enum case for ContentSizeCategory.extraSmall(_:);
  if (v12 != enum case for ContentSizeCategory.extraSmall(_:))
  {
    if (v12 == enum case for ContentSizeCategory.small(_:))
    {
      unint64_t v13 = 1;
      goto LABEL_24;
    }
    if (v12 == enum case for ContentSizeCategory.medium(_:))
    {
      unint64_t v13 = 2;
      goto LABEL_24;
    }
    if (v12 == enum case for ContentSizeCategory.large(_:)) {
      goto LABEL_7;
    }
    if (v12 == enum case for ContentSizeCategory.extraLarge(_:))
    {
      unint64_t v13 = 4;
    }
    else if (v12 == enum case for ContentSizeCategory.extraExtraLarge(_:))
    {
      unint64_t v13 = 5;
    }
    else if (v12 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
    {
      unint64_t v13 = 6;
    }
    else if (v12 == enum case for ContentSizeCategory.accessibilityMedium(_:))
    {
      unint64_t v13 = 7;
    }
    else if (v12 == enum case for ContentSizeCategory.accessibilityLarge(_:))
    {
      unint64_t v13 = 8;
    }
    else if (v12 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:))
    {
      unint64_t v13 = 9;
    }
    else if (v12 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:))
    {
      unint64_t v13 = 10;
    }
    else
    {
      if (v12 != enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
      {
        (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
LABEL_7:
        unint64_t v13 = 3;
        goto LABEL_24;
      }
      unint64_t v13 = 11;
    }
  }
LABEL_24:
  v10(v7, v19, v3);
  int v15 = v11(v7, v3);
  if (v15 == v14)
  {
    unint64_t v16 = 0;
  }
  else if (v15 == enum case for ContentSizeCategory.small(_:))
  {
    unint64_t v16 = 1;
  }
  else if (v15 == enum case for ContentSizeCategory.medium(_:))
  {
    unint64_t v16 = 2;
  }
  else
  {
    if (v15 != enum case for ContentSizeCategory.large(_:))
    {
      if (v15 == enum case for ContentSizeCategory.extraLarge(_:))
      {
        unint64_t v16 = 4;
        return v13 < v16;
      }
      if (v15 == enum case for ContentSizeCategory.extraExtraLarge(_:))
      {
        unint64_t v16 = 5;
        return v13 < v16;
      }
      if (v15 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
      {
        unint64_t v16 = 6;
        return v13 < v16;
      }
      if (v15 == enum case for ContentSizeCategory.accessibilityMedium(_:))
      {
        unint64_t v16 = 7;
        return v13 < v16;
      }
      if (v15 == enum case for ContentSizeCategory.accessibilityLarge(_:))
      {
        unint64_t v16 = 8;
        return v13 < v16;
      }
      if (v15 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:))
      {
        unint64_t v16 = 9;
        return v13 < v16;
      }
      if (v15 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:))
      {
        unint64_t v16 = 10;
        return v13 < v16;
      }
      if (v15 == enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
      {
        unint64_t v16 = 11;
        return v13 < v16;
      }
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    }
    unint64_t v16 = 3;
  }
  return v13 < v16;
}

unint64_t sub_100068A50()
{
  unint64_t result = qword_1000A5B58;
  if (!qword_1000A5B58)
  {
    sub_10000A43C(&qword_1000A5B40);
    sub_10000CAB4(&qword_1000A5B60, &qword_1000A5B38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A5B58);
  }
  return result;
}

unint64_t sub_100068AF0()
{
  unint64_t result = qword_1000A5B68;
  if (!qword_1000A5B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A5B68);
  }
  return result;
}

uint64_t sub_100068B44(uint64_t a1)
{
  return a1;
}

uint64_t sub_100068B8C(uint64_t a1)
{
  return a1;
}

uint64_t sub_100068BD4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000A43C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100068C50()
{
  return sub_100068BD4(&qword_1000A5B90, &qword_1000A5B98, (void (*)(void))sub_100068C80);
}

unint64_t sub_100068C80()
{
  unint64_t result = qword_1000A5BA0;
  if (!qword_1000A5BA0)
  {
    sub_10000A43C(&qword_1000A5BA8);
    sub_10000CAB4(&qword_1000A5BB0, &qword_1000A5BB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A5BA0);
  }
  return result;
}

uint64_t sub_100068D20(uint64_t a1)
{
  return a1;
}

uint64_t sub_100068D88()
{
  uint64_t v1 = type metadata accessor for NotesFolderWidgetView.SmallNoteRow(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  sub_10000AC28(*(void *)(v0 + v3), *(unsigned char *)(v0 + v3 + 8));
  uint64_t v5 = v0 + v3 + *(int *)(v1 + 20);
  uint64_t v6 = type metadata accessor for NotesFolder();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
  {
    uint64_t v16 = v4;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = v5 + *(int *)(v6 + 32);
    uint64_t v8 = sub_10007C110();
    uint64_t v9 = *(void *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    }
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v4 = v16;
  }
  uint64_t v10 = v0 + v3 + *(int *)(v1 + 24);
  uint64_t v11 = type metadata accessor for Note();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v12 = v10 + *(int *)(v11 + 44);
    uint64_t v13 = sub_10007C110();
    uint64_t v14 = *(void *)(v13 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_10006907C(uint64_t a1)
{
  return sub_1000690A8(a1, type metadata accessor for NotesFolderWidgetView.SmallNoteRow, (uint64_t (*)(uint64_t, uint64_t))sub_10005C6BC);
}

uint64_t sub_1000690A8(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(a2(0) - 8);
  uint64_t v6 = v3 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return a3(a1, v6);
}

uint64_t sub_100069140()
{
  uint64_t v1 = sub_10007C3C0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v33 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v3 = (v33 + 16) & ~v33;
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = type metadata accessor for NotesFolderWidgetView.SmallNoteRow(0);
  uint64_t v32 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v6 = (v3 + v4 + v32) & ~v32;
  uint64_t v7 = *(void *)(*(void *)(v5 - 8) + 64);
  uint64_t v8 = type metadata accessor for Note();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = v0;
  uint64_t v13 = v6 + v11;
  uint64_t v31 = *(void *)(v9 + 64);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v12 + v3, v1);
  uint64_t v14 = v12 + v6;
  sub_10000AC28(*(void *)(v12 + v6), *(unsigned char *)(v12 + v6 + 8));
  uint64_t v15 = v12 + v6 + *(int *)(v5 + 20);
  uint64_t v16 = type metadata accessor for NotesFolder();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v15, 1, v16))
  {
    uint64_t v29 = v13;
    uint64_t v30 = v12;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v17 = v15 + *(int *)(v16 + 32);
    uint64_t v18 = sub_10007C110();
    uint64_t v19 = *(void *)(v18 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18)) {
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
    }
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v12 = v30;
    uint64_t v13 = v29;
  }
  uint64_t v20 = v13 & ~v10;
  uint64_t v21 = v14 + *(int *)(v5 + 24);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v21, 1, v8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v22 = v21 + *(int *)(v8 + 44);
    uint64_t v23 = sub_10007C110();
    uint64_t v24 = *(void *)(v23 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23)) {
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v25 = v12 + v20 + *(int *)(v8 + 44);
  uint64_t v26 = sub_10007C110();
  uint64_t v27 = *(void *)(v26 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26)) {
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v12, v20 + v31, v33 | v32 | v10 | 7);
}

uint64_t sub_1000695F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_10007C3C0() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(type metadata accessor for NotesFolderWidgetView.SmallNoteRow(0) - 8);
  unint64_t v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(void *)(type metadata accessor for Note() - 8);
  uint64_t v10 = v1 + ((v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));

  return sub_10005D568(v1 + v7, v10, a1);
}

uint64_t *sub_100069738(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_100008FA4(&qword_1000A3358);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_10007C360();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  swift_retain();
  return a1;
}

uint64_t sub_100069854(uint64_t a1)
{
  sub_100008FA4(&qword_1000A3358);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_10007C360();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  }
  else
  {
    swift_release();
  }

  return swift_release();
}

void *sub_1000698F4(void *a1, void *a2, uint64_t a3)
{
  sub_100008FA4(&qword_1000A3358);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_10007C360();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_retain();
  return a1;
}

void *sub_1000699C4(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10000CBC8((uint64_t)a1, &qword_1000A3358);
    sub_100008FA4(&qword_1000A3358);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_10007C360();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  return a1;
}

char *sub_100069AB8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100008FA4(&qword_1000A3358);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_10007C360();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_100069B8C(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10000CBC8((uint64_t)a1, &qword_1000A3358);
    uint64_t v6 = sub_100008FA4(&qword_1000A3358);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_10007C360();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_release();
  return a1;
}

uint64_t sub_100069C80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100069C94);
}

uint64_t sub_100069C94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100008FA4(&qword_1000A3368);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100069D58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100069D6C);
}

uint64_t sub_100069D6C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100008FA4(&qword_1000A3368);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

void sub_100069E2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_100069E6C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(uint64_t), uint64_t (*a6)(uint64_t, uint64_t))
{
  sub_100069F08(319, a4, a5, a6);
  if (v6 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_100069F08(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_100069F6C(uint64_t a1)
{
  return sub_100069FAC(a1, &qword_1000A5A68, (void (*)(void))sub_100068570);
}

uint64_t sub_100069F8C(uint64_t a1)
{
  return sub_100069FAC(a1, &qword_1000A5B40, (void (*)(void))sub_100068A50);
}

uint64_t sub_100069FAC(uint64_t a1, uint64_t *a2, void (*a3)(void))
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10006A00C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10006A094()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10006A0B4()
{
  unint64_t result = qword_1000A5CE8;
  if (!qword_1000A5CE8)
  {
    sub_10000A43C(&qword_1000A5CB8);
    sub_10006A154();
    sub_10000CAB4(&qword_1000A5D08, &qword_1000A5CE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A5CE8);
  }
  return result;
}

unint64_t sub_10006A154()
{
  unint64_t result = qword_1000A5CF0;
  if (!qword_1000A5CF0)
  {
    sub_10000A43C(&qword_1000A5CB0);
    sub_10006A1F4();
    sub_10000CAB4(&qword_1000A5D00, &qword_1000A5CC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A5CF0);
  }
  return result;
}

unint64_t sub_10006A1F4()
{
  unint64_t result = qword_1000A5CF8;
  if (!qword_1000A5CF8)
  {
    sub_10000A43C(&qword_1000A5CA8);
    sub_10000A43C(&qword_1000A35F0);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A5CF8);
  }
  return result;
}

ValueMetadata *type metadata accessor for NotesFolderWidget()
{
  return &type metadata for NotesFolderWidget;
}

uint64_t sub_10006A2CC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10006A2E8()
{
  return sub_10007C510();
}

uint64_t sub_10006A30C()
{
  return sub_10007C480();
}

uint64_t sub_10006A330(uint64_t a1)
{
  uint64_t v2 = sub_10007C5F0();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_10007C490();
}

uint64_t sub_10006A3F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v40 = a1;
  uint64_t v1 = sub_100008FA4(&qword_1000A5D10);
  uint64_t v34 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100008FA4(&qword_1000A5D18);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v36 = v4;
  uint64_t v37 = v5;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100008FA4(&qword_1000A5D20);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v38 = v8;
  uint64_t v39 = v9;
  __chkstk_darwin(v8);
  uint64_t v35 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007CF40();
  sub_10006AB3C();
  type metadata accessor for NotesFolderTimelineProvider();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 16;
  uint64_t v41 = v11;
  type metadata accessor for NotesFolderWidgetView(0);
  sub_10006AB7C(&qword_1000A5D30, (void (*)(uint64_t))type metadata accessor for NotesFolderWidgetView);
  sub_10006AB7C(&qword_1000A5D38, (void (*)(uint64_t))type metadata accessor for NotesFolderTimelineProvider);
  sub_10007CD90();
  sub_100008FA4(&qword_1000A4888);
  uint64_t v12 = sub_10007CD30();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1000807D0;
  unint64_t v17 = v16 + v15;
  uint64_t v18 = *(void (**)(unint64_t, void, uint64_t))(v13 + 104);
  v18(v17, enum case for WidgetFamily.systemSmall(_:), v12);
  v18(v17 + v14, enum case for WidgetFamily.systemMedium(_:), v12);
  v18(v17 + 2 * v14, enum case for WidgetFamily.systemLarge(_:), v12);
  unint64_t v19 = sub_10006ABC4();
  sub_10007C630();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v3, v1);
  sub_10007C5A0();
  uint64_t v20 = sub_10007C8A0();
  uint64_t v22 = v21;
  LOBYTE(v14) = v23 & 1;
  uint64_t v41 = v1;
  unint64_t v42 = v19;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v26 = v35;
  uint64_t v25 = v36;
  sub_10007C640();
  sub_10000A610(v20, v22, v14);
  swift_bridgeObjectRelease();
  uint64_t v27 = v25;
  (*(void (**)(char *, uint64_t))(v37 + 8))(v7, v25);
  sub_10007C5A0();
  uint64_t v28 = sub_10007C8A0();
  uint64_t v30 = v29;
  LOBYTE(v7) = v31 & 1;
  uint64_t v41 = v27;
  unint64_t v42 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v32 = v38;
  sub_10007C620();
  sub_10000A610(v28, v30, (char)v7);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v26, v32);
}

uint64_t sub_10006A9B0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_100008FA4(&qword_1000A49E0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = _s5EntryVMa();
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006AC20(a1, (uint64_t)v10);
  sub_100031C60((uint64_t)&v10[*(int *)(v8 + 28)], (uint64_t)v6);
  sub_10006AC84((uint64_t)v10);
  uint64_t KeyPath = swift_getKeyPath();
  *a2 = swift_getKeyPath();
  sub_100008FA4(&qword_1000A4CD0);
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = (int *)type metadata accessor for NotesFolderWidgetView(0);
  uint64_t v13 = (uint64_t *)((char *)a2 + v12[5]);
  *uint64_t v13 = swift_getKeyPath();
  sub_100008FA4(&qword_1000A3360);
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = (char *)a2 + v12[6];
  *(void *)uint64_t v14 = KeyPath;
  v14[8] = 0;
  return sub_1000374BC((uint64_t)v6, (uint64_t)a2 + v12[7]);
}

unint64_t sub_10006AB3C()
{
  unint64_t result = qword_1000A5D28;
  if (!qword_1000A5D28)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000A5D28);
  }
  return result;
}

uint64_t sub_10006AB7C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10006ABC4()
{
  unint64_t result = qword_1000A5D40[0];
  if (!qword_1000A5D40[0])
  {
    sub_10000A43C(&qword_1000A5D10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000A5D40);
  }
  return result;
}

uint64_t sub_10006AC20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s5EntryVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10006AC84(uint64_t a1)
{
  uint64_t v2 = _s5EntryVMa();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10006ACE4()
{
  return sub_10007C480();
}

uint64_t sub_10006AD0C()
{
  return sub_10007C510();
}

uint64_t sub_10006AD30()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10006ADFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 8);
}

uint64_t sub_10006AE04()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_10006AE80(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  unint64_t v9 = v8;
  if (v7 <= 1)
  {
    if (v8 <= 3)
    {
      unsigned int v11 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
      if (v11 > 0xFFFE)
      {
        uint64_t v10 = 4;
      }
      else
      {
        BOOL v12 = v11 != 0;
        BOOL v13 = v11 >= 0xFF;
        uint64_t v10 = 2;
        if (!v13) {
          uint64_t v10 = v12;
        }
      }
    }
    else
    {
      uint64_t v10 = 1;
    }
    unint64_t v9 = v10 + v8;
  }
  uint64_t v14 = *(_DWORD *)(v6 + 80);
  if (v14 <= 7 && v9 <= 0x18 && (*(_DWORD *)(v6 + 80) & 0x100000) == 0)
  {
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v6 + 48))(a2, 2, v5))
    {
      if (v7 <= 1)
      {
        if (v8 <= 3)
        {
          unsigned int v19 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
          if (v19 > 0xFFFE)
          {
            uint64_t v18 = 4;
          }
          else
          {
            BOOL v20 = v19 != 0;
            BOOL v13 = v19 >= 0xFF;
            uint64_t v18 = 2;
            if (!v13) {
              uint64_t v18 = v20;
            }
          }
        }
        else
        {
          uint64_t v18 = 1;
        }
        v8 += v18;
      }
      memcpy(a1, a2, v8);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 2, v5);
    }
  }
  else
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v14 + 16) & ~v14));
    swift_retain();
  }
  return a1;
}

uint64_t sub_10006B078(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 2, v3);
  if (!result)
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v5(a1, v3);
  }
  return result;
}

void *sub_10006B13C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 2, v5))
  {
    unsigned int v7 = *(_DWORD *)(v6 + 84);
    size_t v8 = *(void *)(v6 + 64);
    if (v7 <= 1)
    {
      if (v8 <= 3)
      {
        unsigned int v10 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
        if (v10 > 0xFFFE)
        {
          uint64_t v9 = 4;
        }
        else
        {
          BOOL v11 = v10 != 0;
          BOOL v12 = v10 >= 0xFF;
          uint64_t v9 = 2;
          if (!v12) {
            uint64_t v9 = v11;
          }
        }
      }
      else
      {
        uint64_t v9 = 1;
      }
      v8 += v9;
    }
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 2, v5);
  }
  return a1;
}

void *sub_10006B28C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unsigned int v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 2, v5);
  int v9 = v7(a2, 2, v5);
  if (v8)
  {
    if (v9)
    {
      unsigned int v10 = *(_DWORD *)(v6 + 84);
      size_t v11 = *(void *)(v6 + 64);
      if (v10 <= 1)
      {
        if (v11 > 3)
        {
LABEL_5:
          uint64_t v12 = 1;
LABEL_16:
          v11 += v12;
          goto LABEL_17;
        }
LABEL_9:
        unsigned int v15 = (~(-1 << (8 * v11)) - v10 + 2) >> (8 * v11);
        if (v15 > 0xFFFE)
        {
          uint64_t v12 = 4;
        }
        else
        {
          BOOL v16 = v15 != 0;
          BOOL v17 = v15 >= 0xFF;
          uint64_t v12 = 2;
          if (!v17) {
            uint64_t v12 = v16;
          }
        }
        goto LABEL_16;
      }
      goto LABEL_17;
    }
    (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 2, v5);
  }
  else
  {
    if (v9)
    {
      uint64_t v14 = *(void (**)(void *, uint64_t))(v6 + 8);
      uint64_t v13 = v6 + 8;
      v14(a1, v5);
      unsigned int v10 = *(_DWORD *)(v13 + 76);
      size_t v11 = *(void *)(v13 + 56);
      if (v10 <= 1)
      {
        if (v11 > 3) {
          goto LABEL_5;
        }
        goto LABEL_9;
      }
LABEL_17:
      memcpy(a1, a2, v11);
      return a1;
    }
    (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
  }
  return a1;
}

void *sub_10006B45C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 2, v5))
  {
    unsigned int v7 = *(_DWORD *)(v6 + 84);
    size_t v8 = *(void *)(v6 + 64);
    if (v7 <= 1)
    {
      if (v8 <= 3)
      {
        unsigned int v10 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
        if (v10 > 0xFFFE)
        {
          uint64_t v9 = 4;
        }
        else
        {
          BOOL v11 = v10 != 0;
          BOOL v12 = v10 >= 0xFF;
          uint64_t v9 = 2;
          if (!v12) {
            uint64_t v9 = v11;
          }
        }
      }
      else
      {
        uint64_t v9 = 1;
      }
      v8 += v9;
    }
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 2, v5);
  }
  return a1;
}

void *sub_10006B5AC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unsigned int v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 2, v5);
  int v9 = v7(a2, 2, v5);
  if (v8)
  {
    if (v9)
    {
      unsigned int v10 = *(_DWORD *)(v6 + 84);
      size_t v11 = *(void *)(v6 + 64);
      if (v10 <= 1)
      {
        if (v11 > 3)
        {
LABEL_5:
          uint64_t v12 = 1;
LABEL_16:
          v11 += v12;
          goto LABEL_17;
        }
LABEL_9:
        unsigned int v15 = (~(-1 << (8 * v11)) - v10 + 2) >> (8 * v11);
        if (v15 > 0xFFFE)
        {
          uint64_t v12 = 4;
        }
        else
        {
          BOOL v16 = v15 != 0;
          BOOL v17 = v15 >= 0xFF;
          uint64_t v12 = 2;
          if (!v17) {
            uint64_t v12 = v16;
          }
        }
        goto LABEL_16;
      }
      goto LABEL_17;
    }
    (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 2, v5);
  }
  else
  {
    if (v9)
    {
      uint64_t v14 = *(void (**)(void *, uint64_t))(v6 + 8);
      uint64_t v13 = v6 + 8;
      v14(a1, v5);
      unsigned int v10 = *(_DWORD *)(v13 + 76);
      size_t v11 = *(void *)(v13 + 56);
      if (v10 <= 1)
      {
        if (v11 > 3) {
          goto LABEL_5;
        }
        goto LABEL_9;
      }
LABEL_17:
      memcpy(a1, a2, v11);
      return a1;
    }
    (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
  }
  return a1;
}

uint64_t sub_10006B77C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  unsigned int v6 = v5 - 2;
  uint64_t v7 = *(void *)(v4 + 64);
  if (v5 <= 1)
  {
    unsigned int v6 = 0;
    if (v7 <= 3)
    {
      unsigned int v9 = (~(-1 << (8 * v7)) - v5 + 2) >> (8 * v7);
      if (v9 > 0xFFFE)
      {
        uint64_t v8 = 4;
      }
      else
      {
        BOOL v10 = v9 != 0;
        BOOL v11 = v9 >= 0xFF;
        uint64_t v8 = 2;
        if (!v11) {
          uint64_t v8 = v10;
        }
      }
    }
    else
    {
      uint64_t v8 = 1;
    }
    v7 += v8;
  }
  if (!a2) {
    return 0;
  }
  int v12 = a2 - v6;
  if (a2 <= v6) {
    goto LABEL_30;
  }
  char v13 = 8 * v7;
  if (v7 <= 3)
  {
    unsigned int v15 = ((v12 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v15))
    {
      int v14 = *(_DWORD *)((char *)a1 + v7);
      if (!v14) {
        goto LABEL_30;
      }
      goto LABEL_20;
    }
    if (v15 > 0xFF)
    {
      int v14 = *(unsigned __int16 *)((char *)a1 + v7);
      if (!*(unsigned __int16 *)((char *)a1 + v7)) {
        goto LABEL_30;
      }
      goto LABEL_20;
    }
    if (v15 < 2)
    {
LABEL_30:
      if (v6)
      {
        unsigned int v19 = (*(uint64_t (**)(void))(v4 + 48))();
        if (v19 >= 3) {
          return v19 - 2;
        }
        else {
          return 0;
        }
      }
      return 0;
    }
  }
  int v14 = *((unsigned __int8 *)a1 + v7);
  if (!*((unsigned char *)a1 + v7)) {
    goto LABEL_30;
  }
LABEL_20:
  int v16 = (v14 - 1) << v13;
  if (v7 > 3) {
    int v16 = 0;
  }
  if (v7)
  {
    if (v7 <= 3) {
      int v17 = v7;
    }
    else {
      int v17 = 4;
    }
    switch(v17)
    {
      case 2:
        int v18 = *a1;
        break;
      case 3:
        int v18 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v18 = *(_DWORD *)a1;
        break;
      default:
        int v18 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v18 = 0;
  }
  return v6 + (v18 | v16) + 1;
}

void sub_10006B970(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  unsigned int v8 = v7 - 2;
  size_t v9 = *(void *)(v6 + 64);
  if (v7 <= 1)
  {
    unsigned int v8 = 0;
    if (v9 <= 3)
    {
      unsigned int v11 = (~(-1 << (8 * v9)) - v7 + 2) >> (8 * v9);
      if (v11 > 0xFFFE)
      {
        uint64_t v10 = 4;
      }
      else
      {
        BOOL v12 = v11 != 0;
        BOOL v13 = v11 >= 0xFF;
        uint64_t v10 = 2;
        if (!v13) {
          uint64_t v10 = v12;
        }
      }
    }
    else
    {
      uint64_t v10 = 1;
    }
    v9 += v10;
  }
  BOOL v13 = a3 >= v8;
  unsigned int v14 = a3 - v8;
  if (v14 != 0 && v13)
  {
    if (v9 <= 3)
    {
      unsigned int v18 = ((v14 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
      if (HIWORD(v18))
      {
        int v15 = 4;
      }
      else if (v18 >= 0x100)
      {
        int v15 = 2;
      }
      else
      {
        int v15 = v18 > 1;
      }
    }
    else
    {
      int v15 = 1;
    }
  }
  else
  {
    int v15 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v16 = ~v8 + a2;
    if (v9 < 4)
    {
      int v17 = (v16 >> (8 * v9)) + 1;
      if (v9)
      {
        int v19 = v16 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if (v9 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if (v9 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v9);
      *(_DWORD *)a1 = v16;
      int v17 = 1;
    }
    switch(v15)
    {
      case 1:
        a1[v9] = v17;
        return;
      case 2:
        *(_WORD *)&a1[v9] = v17;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v9] = v17;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 2:
      *(_WORD *)&a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x10006BBF4);
    case 4:
      *(_DWORD *)&a1[v9] = 0;
      goto LABEL_29;
    default:
LABEL_29:
      if (a2)
      {
LABEL_30:
        BOOL v20 = *(void (**)(void))(v6 + 56);
        v20();
      }
      return;
  }
}

uint64_t sub_10006BC1C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 48))(a1, 2);
}

uint64_t sub_10006BC4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 56))(a1, a2, 2);
}

uint64_t type metadata accessor for ObjectStates()
{
  return sub_10006BC94();
}

uint64_t sub_10006BC94()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10006BCC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_100008FA4(&qword_1000A3268);
  __chkstk_darwin(v5 - 8);
  unsigned int v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000303A4(v2 + *(int *)(a1 + 20), (uint64_t)v7);
  uint64_t v8 = type metadata accessor for Note();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 2, v8))
  {
    sub_10007CE20();
    uint64_t v9 = sub_10007CE30();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a2, 0, 1, v9);
  }
  else
  {
    uint64_t v11 = sub_10007CE30();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a2, 1, 1, v11);
    return sub_10006BE28((uint64_t)v7);
  }
}

uint64_t sub_10006BE28(uint64_t a1)
{
  uint64_t v2 = sub_100008FA4(&qword_1000A3268);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_10006BE88(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10007C150();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = (int *)type metadata accessor for Note();
    uint64_t v12 = *((void *)v11 - 1);
    if ((*(unsigned int (**)(void *, uint64_t, int *))(v12 + 48))(v10, 2, v11))
    {
      uint64_t v13 = sub_100008FA4(&qword_1000A3268);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      uint64_t v15 = v10[1];
      void *v9 = *v10;
      v9[1] = v15;
      uint64_t v16 = v10[3];
      v9[2] = v10[2];
      v9[3] = v16;
      uint64_t v17 = v10[5];
      v9[4] = v10[4];
      v9[5] = v17;
      uint64_t v18 = v10[7];
      v9[6] = v10[6];
      v9[7] = v18;
      uint64_t v19 = v10[9];
      v9[8] = v10[8];
      v9[9] = v19;
      *((unsigned char *)v9 + 80) = *((unsigned char *)v10 + 80);
      uint64_t v20 = v10[12];
      v9[11] = v10[11];
      v9[12] = v20;
      uint64_t v21 = v11[11];
      __dst = (char *)v9 + v21;
      uint64_t v29 = (char *)v10 + v21;
      uint64_t v22 = sub_10007C110();
      uint64_t v26 = *(void *)(v22 - 8);
      uint64_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v28(v29, 1, v22))
      {
        uint64_t v23 = sub_100008FA4(&qword_1000A3270);
        memcpy(__dst, v29, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 16))(__dst, v29, v22);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v22);
      }
      *(void *)((char *)v9 + v11[12]) = *(void *)((char *)v10 + v11[12]);
      *(void *)((char *)v9 + v11[13]) = *(void *)((char *)v10 + v11[13]);
      *(void *)((char *)v9 + v11[14]) = *(void *)((char *)v10 + v11[14]);
      *(void *)((char *)v9 + v11[15]) = *(void *)((char *)v10 + v11[15]);
      *((unsigned char *)v9 + v11[16]) = *((unsigned char *)v10 + v11[16]);
      uint64_t v24 = *(void (**)(void *, void, uint64_t, int *))(v12 + 56);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      v24(v9, 0, 2, v11);
    }
  }
  return a1;
}

uint64_t sub_10006C1DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10007C150();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for Note();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 2, v6);
  if (!result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v8 = v5 + *(int *)(v6 + 44);
    uint64_t v9 = sub_10007C110();
    uint64_t v10 = *(void *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_10006C390(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10007C150();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for Note();
  uint64_t v11 = *((void *)v10 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v11 + 48))(v9, 2, v10))
  {
    uint64_t v12 = sub_100008FA4(&qword_1000A3268);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v28 = v11;
    uint64_t v29 = a1;
    uint64_t v13 = v9[1];
    void *v8 = *v9;
    v8[1] = v13;
    uint64_t v14 = v9[3];
    v8[2] = v9[2];
    v8[3] = v14;
    uint64_t v15 = v9[5];
    v8[4] = v9[4];
    v8[5] = v15;
    uint64_t v16 = v9[7];
    v8[6] = v9[6];
    v8[7] = v16;
    uint64_t v17 = v9[9];
    v8[8] = v9[8];
    v8[9] = v17;
    *((unsigned char *)v8 + 80) = *((unsigned char *)v9 + 80);
    uint64_t v18 = v9[12];
    v8[11] = v9[11];
    v8[12] = v18;
    uint64_t v19 = v10[11];
    __dst = (char *)v8 + v19;
    uint64_t v25 = (char *)v9 + v19;
    uint64_t v20 = sub_10007C110();
    uint64_t v24 = *(void *)(v20 - 8);
    uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v26(v25, 1, v20))
    {
      uint64_t v21 = sub_100008FA4(&qword_1000A3270);
      memcpy(__dst, v25, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(__dst, v25, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v20);
    }
    *(void *)((char *)v8 + v10[12]) = *(void *)((char *)v9 + v10[12]);
    *(void *)((char *)v8 + v10[13]) = *(void *)((char *)v9 + v10[13]);
    *(void *)((char *)v8 + v10[14]) = *(void *)((char *)v9 + v10[14]);
    *(void *)((char *)v8 + v10[15]) = *(void *)((char *)v9 + v10[15]);
    *((unsigned char *)v8 + v10[16]) = *((unsigned char *)v9 + v10[16]);
    uint64_t v22 = *(void (**)(void *, void, uint64_t, int *))(v28 + 56);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    v22(v8, 0, 2, v10);
    return v29;
  }
  return a1;
}

uint64_t sub_10006C69C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10007C150();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = (int *)type metadata accessor for Note();
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v11 + 48);
  int v13 = v12(v8, 2, v10);
  int v14 = v12(v9, 2, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_10003AB14(v8);
      goto LABEL_7;
    }
    uint64_t v34 = a1;
    *(void *)uint64_t v8 = *(void *)v9;
    *(void *)(v8 + 8) = *(void *)(v9 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v8 + 16) = *(void *)(v9 + 16);
    *(void *)(v8 + 24) = *(void *)(v9 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v8 + 32) = *(void *)(v9 + 32);
    *(void *)(v8 + 40) = *(void *)(v9 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v8 + 48) = *(void *)(v9 + 48);
    *(void *)(v8 + 56) = *(void *)(v9 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v8 + 64) = *(void *)(v9 + 64);
    *(void *)(v8 + 72) = *(void *)(v9 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v8 + 80) = *(unsigned char *)(v9 + 80);
    *(void *)(v8 + 88) = *(void *)(v9 + 88);
    *(void *)(v8 + 96) = *(void *)(v9 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v19 = v10[11];
    uint64_t v20 = (void *)(v8 + v19);
    uint64_t v21 = (void *)(v9 + v19);
    uint64_t v22 = sub_10007C110();
    uint64_t v23 = *(void *)(v22 - 8);
    uint64_t v24 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v23 + 48);
    int v25 = v24(v20, 1, v22);
    int v26 = v24(v21, 1, v22);
    if (v25)
    {
      if (!v26)
      {
        (*(void (**)(void *, void *, uint64_t))(v23 + 16))(v20, v21, v22);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
LABEL_16:
        a1 = v34;
        *(void *)(v8 + v10[12]) = *(void *)(v9 + v10[12]);
        swift_retain();
        swift_release();
        *(void *)(v8 + v10[13]) = *(void *)(v9 + v10[13]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)(v8 + v10[14]) = *(void *)(v9 + v10[14]);
        swift_retain();
        swift_release();
        *(void *)(v8 + v10[15]) = *(void *)(v9 + v10[15]);
        swift_retain();
        swift_release();
        *(unsigned char *)(v8 + v10[16]) = *(unsigned char *)(v9 + v10[16]);
        return a1;
      }
    }
    else
    {
      if (!v26)
      {
        (*(void (**)(void *, void *, uint64_t))(v23 + 24))(v20, v21, v22);
        goto LABEL_16;
      }
      (*(void (**)(void *, uint64_t))(v23 + 8))(v20, v22);
    }
    uint64_t v28 = sub_100008FA4(&qword_1000A3270);
    memcpy(v20, v21, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_16;
  }
  if (v14)
  {
LABEL_7:
    uint64_t v18 = sub_100008FA4(&qword_1000A3268);
    memcpy((void *)v8, (const void *)v9, *(void *)(*(void *)(v18 - 8) + 64));
    return a1;
  }
  *(void *)uint64_t v8 = *(void *)v9;
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  *(void *)(v8 + 40) = *(void *)(v9 + 40);
  *(void *)(v8 + 48) = *(void *)(v9 + 48);
  *(void *)(v8 + 56) = *(void *)(v9 + 56);
  *(void *)(v8 + 64) = *(void *)(v9 + 64);
  *(void *)(v8 + 72) = *(void *)(v9 + 72);
  *(unsigned char *)(v8 + 80) = *(unsigned char *)(v9 + 80);
  *(void *)(v8 + 88) = *(void *)(v9 + 88);
  *(void *)(v8 + 96) = *(void *)(v9 + 96);
  uint64_t v15 = v10[11];
  __dst = (void *)(v8 + v15);
  char v31 = (const void *)(v9 + v15);
  uint64_t v16 = sub_10007C110();
  uint64_t v30 = *(void *)(v16 - 8);
  uint64_t v32 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v32(v31, 1, v16))
  {
    uint64_t v17 = sub_100008FA4(&qword_1000A3270);
    memcpy(__dst, v31, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v30 + 16))(__dst, v31, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(__dst, 0, 1, v16);
  }
  *(void *)(v8 + v10[12]) = *(void *)(v9 + v10[12]);
  *(void *)(v8 + v10[13]) = *(void *)(v9 + v10[13]);
  *(void *)(v8 + v10[14]) = *(void *)(v9 + v10[14]);
  *(void *)(v8 + v10[15]) = *(void *)(v9 + v10[15]);
  *(unsigned char *)(v8 + v10[16]) = *(unsigned char *)(v9 + v10[16]);
  uint64_t v27 = *(void (**)(uint64_t, void, uint64_t, int *))(v11 + 56);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v27(v8, 0, 2, v10);
  return a1;
}

uint64_t sub_10006CC88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10007C150();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for Note();
  uint64_t v11 = *((void *)v10 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v11 + 48))(v9, 2, v10))
  {
    uint64_t v12 = sub_100008FA4(&qword_1000A3268);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    long long v13 = v9[1];
    _OWORD *v8 = *v9;
    v8[1] = v13;
    long long v14 = v9[3];
    v8[2] = v9[2];
    v8[3] = v14;
    v8[4] = v9[4];
    *((unsigned char *)v8 + 80) = *((unsigned char *)v9 + 80);
    *(_OWORD *)((char *)v8 + 88) = *(_OWORD *)((char *)v9 + 88);
    uint64_t v15 = v10[11];
    uint64_t v16 = (char *)v8 + v15;
    uint64_t v17 = (char *)v9 + v15;
    uint64_t v18 = sub_10007C110();
    uint64_t v19 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      uint64_t v20 = sub_100008FA4(&qword_1000A3270);
      memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    *(void *)((char *)v8 + v10[12]) = *(void *)((char *)v9 + v10[12]);
    *(void *)((char *)v8 + v10[13]) = *(void *)((char *)v9 + v10[13]);
    *(void *)((char *)v8 + v10[14]) = *(void *)((char *)v9 + v10[14]);
    *(void *)((char *)v8 + v10[15]) = *(void *)((char *)v9 + v10[15]);
    *((unsigned char *)v8 + v10[16]) = *((unsigned char *)v9 + v10[16]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v11 + 56))(v8, 0, 2, v10);
  }
  return a1;
}

uint64_t sub_10006CF04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10007C150();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = (int *)type metadata accessor for Note();
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v11 + 48);
  int v13 = v12(v8, 2, v10);
  int v14 = v12(v9, 2, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_10003AB14(v8);
      goto LABEL_7;
    }
    uint64_t v24 = *(void *)(v9 + 8);
    *(void *)uint64_t v8 = *(void *)v9;
    *(void *)(v8 + 8) = v24;
    swift_bridgeObjectRelease();
    uint64_t v25 = *(void *)(v9 + 24);
    *(void *)(v8 + 16) = *(void *)(v9 + 16);
    *(void *)(v8 + 24) = v25;
    swift_bridgeObjectRelease();
    uint64_t v26 = *(void *)(v9 + 40);
    *(void *)(v8 + 32) = *(void *)(v9 + 32);
    *(void *)(v8 + 40) = v26;
    swift_bridgeObjectRelease();
    uint64_t v27 = *(void *)(v9 + 56);
    *(void *)(v8 + 48) = *(void *)(v9 + 48);
    *(void *)(v8 + 56) = v27;
    swift_bridgeObjectRelease();
    uint64_t v28 = *(void *)(v9 + 72);
    *(void *)(v8 + 64) = *(void *)(v9 + 64);
    *(void *)(v8 + 72) = v28;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v8 + 80) = *(unsigned char *)(v9 + 80);
    uint64_t v29 = *(void *)(v9 + 96);
    *(void *)(v8 + 88) = *(void *)(v9 + 88);
    *(void *)(v8 + 96) = v29;
    swift_bridgeObjectRelease();
    uint64_t v30 = v10[11];
    char v31 = (void *)(v8 + v30);
    uint64_t v32 = (void *)(v9 + v30);
    uint64_t v33 = sub_10007C110();
    uint64_t v34 = *(void *)(v33 - 8);
    uint64_t v35 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v34 + 48);
    uint64_t v40 = v31;
    LODWORD(v31) = v35(v31, 1, v33);
    int v36 = v35(v32, 1, v33);
    if (v31)
    {
      if (!v36)
      {
        (*(void (**)(void *, void *, uint64_t))(v34 + 32))(v40, v32, v33);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v34 + 56))(v40, 0, 1, v33);
        goto LABEL_18;
      }
      size_t v37 = *(void *)(*(void *)(sub_100008FA4(&qword_1000A3270) - 8) + 64);
      uint64_t v38 = v40;
    }
    else
    {
      if (!v36)
      {
        (*(void (**)(void *, void *, uint64_t))(v34 + 40))(v40, v32, v33);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v34 + 8))(v40, v33);
      size_t v37 = *(void *)(*(void *)(sub_100008FA4(&qword_1000A3270) - 8) + 64);
      uint64_t v38 = v40;
    }
    memcpy(v38, v32, v37);
LABEL_18:
    *(void *)(v8 + v10[12]) = *(void *)(v9 + v10[12]);
    swift_release();
    *(void *)(v8 + v10[13]) = *(void *)(v9 + v10[13]);
    swift_bridgeObjectRelease();
    *(void *)(v8 + v10[14]) = *(void *)(v9 + v10[14]);
    swift_release();
    *(void *)(v8 + v10[15]) = *(void *)(v9 + v10[15]);
    swift_release();
    *(unsigned char *)(v8 + v10[16]) = *(unsigned char *)(v9 + v10[16]);
    return a1;
  }
  if (v14)
  {
LABEL_7:
    uint64_t v23 = sub_100008FA4(&qword_1000A3268);
    memcpy((void *)v8, (const void *)v9, *(void *)(*(void *)(v23 - 8) + 64));
    return a1;
  }
  long long v15 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v15;
  long long v16 = *(_OWORD *)(v9 + 48);
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(_OWORD *)(v8 + 48) = v16;
  *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
  *(unsigned char *)(v8 + 80) = *(unsigned char *)(v9 + 80);
  *(_OWORD *)(v8 + 88) = *(_OWORD *)(v9 + 88);
  uint64_t v17 = v10[11];
  uint64_t v18 = (void *)(v8 + v17);
  uint64_t v19 = (const void *)(v9 + v17);
  uint64_t v20 = sub_10007C110();
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    uint64_t v22 = sub_100008FA4(&qword_1000A3270);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 32))(v18, v19, v20);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  *(void *)(v8 + v10[12]) = *(void *)(v9 + v10[12]);
  *(void *)(v8 + v10[13]) = *(void *)(v9 + v10[13]);
  *(void *)(v8 + v10[14]) = *(void *)(v9 + v10[14]);
  *(void *)(v8 + v10[15]) = *(void *)(v9 + v10[15]);
  *(unsigned char *)(v8 + v10[16]) = *(unsigned char *)(v9 + v10[16]);
  (*(void (**)(uint64_t, void, uint64_t, int *))(v11 + 56))(v8, 0, 2, v10);
  return a1;
}

uint64_t sub_10006D3E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10006D3F4);
}

uint64_t sub_10006D3F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10007C150();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_100008FA4(&qword_1000A3268);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_10006D4F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10006D504);
}

uint64_t sub_10006D504(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_10007C150();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_100008FA4(&qword_1000A3268);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t _s14descr10009E241C5EntryVMa()
{
  uint64_t result = qword_1000A5E20;
  if (!qword_1000A5E20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10006D658()
{
  sub_10007C150();
  if (v0 <= 0x3F)
  {
    sub_10006D720();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_10006D720()
{
  if (!qword_1000A32E0)
  {
    type metadata accessor for Note();
    unint64_t v0 = type metadata accessor for ObjectStates();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000A32E0);
    }
  }
}

uint64_t sub_10006D778()
{
  uint64_t v0 = sub_10007C2E0();
  sub_1000112B4(v0, qword_1000A5E58);
  sub_100010740(v0, (uint64_t)qword_1000A5E58);
  return sub_10007C2C0();
}

uint64_t sub_10006D7C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v41 = a1;
  uint64_t v1 = sub_100008FA4(&qword_1000A5FC8);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100008FA4(&qword_1000A5FD0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v37 = v5;
  uint64_t v38 = v6;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100008FA4(&qword_1000A5FD8);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v39 = v9;
  uint64_t v40 = v10;
  __chkstk_darwin(v9);
  int v36 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007CF40();
  type metadata accessor for QuickNoteTimelineProvider();
  uint64_t v42 = swift_allocObject();
  type metadata accessor for QuickNoteWidgetView(0);
  sub_100070418(&qword_1000A5FE0, 255, (void (*)(uint64_t))type metadata accessor for QuickNoteWidgetView);
  sub_100070418(&qword_1000A5FE8, v12, (void (*)(uint64_t))type metadata accessor for QuickNoteTimelineProvider);
  sub_10007CDA0();
  sub_100008FA4(&qword_1000A4888);
  uint64_t v13 = sub_10007CD30();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 72);
  unint64_t v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1000861E0;
  unint64_t v18 = v17 + v16;
  uint64_t v19 = *(void (**)(unint64_t, void, uint64_t))(v14 + 104);
  v19(v18, enum case for WidgetFamily.systemSmall(_:), v13);
  v19(v18 + v15, enum case for WidgetFamily.systemLarge(_:), v13);
  unint64_t v20 = sub_100070460();
  sub_10007C630();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_10007C5A0();
  uint64_t v21 = sub_10007C8A0();
  uint64_t v23 = v22;
  LOBYTE(v15) = v24 & 1;
  uint64_t v42 = v1;
  unint64_t v43 = v20;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v27 = v36;
  uint64_t v26 = v37;
  sub_10007C640();
  sub_10000A610(v21, v23, v15);
  swift_bridgeObjectRelease();
  uint64_t v28 = v26;
  (*(void (**)(char *, uint64_t))(v38 + 8))(v8, v26);
  sub_10007C5A0();
  uint64_t v29 = sub_10007C8A0();
  uint64_t v31 = v30;
  LOBYTE(v23) = v32 & 1;
  uint64_t v42 = v28;
  unint64_t v43 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v33 = v39;
  sub_10007C620();
  sub_10000A610(v29, v31, v23);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v27, v33);
}

uint64_t sub_10006DD3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100008FA4(&qword_1000A3268);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for QuickNoteTimelineProvider.Entry();
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006F5A4(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for QuickNoteTimelineProvider.Entry);
  sub_10000CB64((uint64_t)&v10[*(int *)(v8 + 28)], (uint64_t)v6, &qword_1000A3268);
  sub_10006F60C((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for QuickNoteTimelineProvider.Entry);
  return sub_10004F95C((uint64_t)v6, a2);
}

uint64_t sub_10006DE68(uint64_t a1, void (*a2)(char *))
{
  uint64_t v3 = sub_100008FA4(&qword_1000A5F30);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for QuickNoteTimelineProvider.Entry();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008FA4(&qword_1000A5F20);
  uint64_t v10 = sub_10007CEE0();
  if (*(void *)(v10 + 16))
  {
    sub_10006F5A4(v10 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for QuickNoteTimelineProvider.Entry);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    uint64_t v11 = &v9[*(int *)(v6 + 20)];
    uint64_t v12 = type metadata accessor for Note();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 2, 2, v12);
    sub_10007C140();
    sub_10000CBC8((uint64_t)v5, &qword_1000A5F30);
  }
  else
  {
    sub_10006F66C((uint64_t)v5, (uint64_t)v9);
  }
  a2(v9);
  return sub_10006F60C((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for QuickNoteTimelineProvider.Entry);
}

uint64_t sub_10006E0B4(uint64_t a1, void (*a2)(char *))
{
  uint64_t v45 = a1;
  uint64_t v50 = a2;
  uint64_t v2 = sub_10007CDD0();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10007C150();
  uint64_t v48 = *(void *)(v5 - 8);
  uint64_t v49 = v5;
  __chkstk_darwin(v5);
  uint64_t v47 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100008FA4(&qword_1000A3268);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Note();
  uint64_t v46 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100008FA4(&qword_1000A5F20);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  unint64_t v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000A31F8 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_100008FA4(&qword_1000A47E8);
  sub_100010740(v17, (uint64_t)qword_1000A4F00);
  swift_beginAccess();
  sub_10007C210();
  unint64_t v18 = v51;
  swift_endAccess();
  if (v18)
  {
    uint64_t v43 = v10;
    long long v44 = v4;
    uint64_t v19 = self;
    id v20 = [v18 managedObjectContext];
    id v21 = [v19 mostRecentSystemPaperNoteInManagedObjectContext:v20];

    if (v21)
    {
      id v22 = v21;
      sub_100073690(v22, 0, 0, [v19 globalVirtualSystemPaperFolder], 1, (uint64_t)v12);
      sub_10006E8A8((uint64_t)v12, (uint64_t)v16);
      sub_10006F60C((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for Note);
      v50(v16);
    }
    else
    {
      if (qword_1000A3238 != -1) {
        swift_once();
      }
      uint64_t v32 = sub_10007C2E0();
      sub_100010740(v32, (uint64_t)qword_1000A5E58);
      uint64_t v33 = sub_10007C2D0();
      os_log_type_t v34 = sub_10007D040();
      if (os_log_type_enabled(v33, v34))
      {
        uint64_t v35 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v35 = 0;
        _os_log_impl((void *)&_mh_execute_header, v33, v34, "No recent System Paper note - returning placeholder timeline", v35, 2u);
        swift_slowDealloc();
      }

      sub_100008FA4(&qword_1000A5F28);
      uint64_t v36 = type metadata accessor for QuickNoteTimelineProvider.Entry();
      unint64_t v37 = (*(unsigned __int8 *)(*(void *)(v36 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v36 - 8) + 80);
      uint64_t v38 = swift_allocObject();
      *(_OWORD *)(v38 + 16) = xmmword_100080BC0;
      unint64_t v39 = v38 + v37;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 56))(v9, 2, 2, v43);
      uint64_t v40 = v47;
      sub_10007C140();
      (*(void (**)(unint64_t, char *, uint64_t))(v48 + 32))(v39, v40, v49);
      sub_10004F95C((uint64_t)v9, v39 + *(int *)(v36 + 20));
      sub_10007CDC0();
      sub_100070418(qword_1000A5F08, 255, (void (*)(uint64_t))type metadata accessor for QuickNoteTimelineProvider.Entry);
      sub_10007CED0();
      v50(v16);
    }
  }
  else
  {
    if (qword_1000A3238 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_10007C2E0();
    sub_100010740(v23, (uint64_t)qword_1000A5E58);
    char v24 = sub_10007C2D0();
    os_log_type_t v25 = sub_10007D060();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "No modern note context - returning placeholder timeline", v26, 2u);
      swift_slowDealloc();
    }

    sub_100008FA4(&qword_1000A5F28);
    uint64_t v27 = type metadata accessor for QuickNoteTimelineProvider.Entry();
    unint64_t v28 = (*(unsigned __int8 *)(*(void *)(v27 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v27 - 8) + 80);
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_100080BC0;
    unint64_t v30 = v29 + v28;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 56))(v9, 2, 2, v10);
    uint64_t v31 = v47;
    sub_10007C140();
    (*(void (**)(unint64_t, char *, uint64_t))(v48 + 32))(v30, v31, v49);
    sub_10004F95C((uint64_t)v9, v30 + *(int *)(v27 + 20));
    sub_10007CDC0();
    sub_100070418(qword_1000A5F08, 255, (void (*)(uint64_t))type metadata accessor for QuickNoteTimelineProvider.Entry);
    sub_10007CED0();
    v50(v16);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_10006E8A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v60 = a1;
  uint64_t v66 = a2;
  uint64_t v2 = sub_100008FA4(&qword_1000A3268);
  __chkstk_darwin(v2 - 8);
  uint64_t v63 = (uint64_t)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100008FA4(&qword_1000A4B78);
  __chkstk_darwin(v4 - 8);
  uint64_t v69 = (uint64_t)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10007CDD0();
  uint64_t v64 = *(void *)(v6 - 8);
  uint64_t v65 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v61 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v62 = (char *)&v52 - v9;
  uint64_t v58 = sub_10007C150();
  uint64_t v68 = *(void *)(v58 - 8);
  uint64_t v10 = __chkstk_darwin(v58);
  uint64_t v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v52 - v13;
  uint64_t v15 = sub_10007C1E0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v55 = v15;
  uint64_t v56 = v16;
  __chkstk_darwin(v15);
  unint64_t v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = (char *)sub_10007C1F0();
  uint64_t v19 = *((void *)v59 - 1);
  uint64_t v20 = __chkstk_darwin(v59);
  id v22 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v54 = (char *)&v52 - v23;
  uint64_t v24 = sub_100008FA4(&qword_1000A4B80);
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  uint64_t v57 = (uint64_t)&v52 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  unint64_t v28 = (char *)&v52 - v27;
  sub_10007C1D0();
  (*(void (**)(char *, void, uint64_t))(v16 + 104))(v18, enum case for Calendar.Component.day(_:), v15);
  sub_10007C1D0();
  sub_10007C140();
  sub_10007C1B0();
  uint64_t v29 = *(void (**)(char *, uint64_t))(v68 + 8);
  uint64_t v30 = v58;
  v29(v12, v58);
  uint64_t v31 = *(void (**)(char *, char *))(v19 + 8);
  uint64_t v32 = (uint64_t)v59;
  v31(v22, v59);
  uint64_t v33 = v54;
  sub_10007C1C0();
  char v67 = v14;
  uint64_t v53 = v29;
  v29(v14, v30);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v18, v55);
  uint64_t v34 = v68;
  v31(v33, (char *)v32);
  uint64_t v35 = v57;
  uint64_t v36 = v30;
  uint64_t v59 = v28;
  sub_10000CB64((uint64_t)v28, v57, &qword_1000A4B80);
  int v37 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v35, 1, v30);
  uint64_t v38 = 1;
  if (v37 != 1)
  {
    unint64_t v39 = v67;
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v67, v35, v30);
    sub_10007CDB0();
    v53(v39, v30);
    uint64_t v38 = 0;
  }
  uint64_t v41 = v64;
  uint64_t v40 = v65;
  uint64_t v42 = v69;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 56))(v69, v38, 1, v65);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v42, 1, v40) == 1)
  {
    uint64_t v43 = v62;
    sub_10007CDC0();
    sub_10000CBC8(v69, &qword_1000A4B78);
  }
  else
  {
    uint64_t v43 = v62;
    (*(void (**)(char *, uint64_t, uint64_t))(v41 + 32))(v62, v69, v40);
  }
  sub_100008FA4(&qword_1000A5F28);
  uint64_t v44 = type metadata accessor for QuickNoteTimelineProvider.Entry();
  unint64_t v45 = (*(unsigned __int8 *)(*(void *)(v44 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v44 - 8) + 80);
  uint64_t v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = xmmword_100080BC0;
  unint64_t v47 = v46 + v45;
  uint64_t v48 = v63;
  sub_10006F5A4(v60, v63, (uint64_t (*)(void))type metadata accessor for Note);
  uint64_t v49 = type metadata accessor for Note();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v48, 0, 2, v49);
  uint64_t v50 = v67;
  sub_10007C140();
  (*(void (**)(unint64_t, char *, uint64_t))(v34 + 32))(v47, v50, v36);
  sub_10004F95C(v48, v47 + *(int *)(v44 + 20));
  (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v61, v43, v40);
  sub_100070418(qword_1000A5F08, 255, (void (*)(uint64_t))type metadata accessor for QuickNoteTimelineProvider.Entry);
  sub_10007CED0();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v43, v40);
  return sub_10000CBC8((uint64_t)v59, &qword_1000A4B80);
}

uint64_t type metadata accessor for QuickNoteTimelineProvider()
{
  return self;
}

uint64_t sub_10006F048()
{
  return sub_100070418(qword_1000A5F08, 255, (void (*)(uint64_t))type metadata accessor for QuickNoteTimelineProvider.Entry);
}

uint64_t type metadata accessor for QuickNoteTimelineProvider.Entry()
{
  uint64_t result = qword_1000A5F90;
  if (!qword_1000A5F90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10006F0E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1 = a1 + *(int *)(type metadata accessor for QuickNoteTimelineProvider.Entry() + 20);
  uint64_t v2 = type metadata accessor for Note();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 2, 2, v2);

  return sub_10007C140();
}

uint64_t sub_10006F164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_10007CE40();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v10 = *v3;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  unint64_t v11 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = (char *)swift_allocObject();
  *((void *)v12 + 2) = a2;
  *((void *)v12 + 3) = a3;
  *((void *)v12 + 4) = v10;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v12[v11], (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  swift_retain();
  swift_retain();
  sub_10006E0B4(a1, (void (*)(char *))sub_10006F52C);
  return swift_release();
}

uint64_t sub_10006F2CC(uint64_t a1, void (*a2)(char *))
{
  return sub_10006E0B4(a1, a2);
}

uint64_t sub_10006F2F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_1000130F0;
  return TimelineProvider.relevances()(a1, a2, a3);
}

uint64_t sub_10006F3A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_100016CF0;
  return TimelineProvider.relevance()(a1, a2, a3);
}

uint64_t sub_10006F458()
{
  uint64_t v1 = sub_10007CE40();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10006F52C(uint64_t a1)
{
  sub_10007CE40();
  uint64_t v3 = *(void (**)(char *))(v1 + 16);

  return sub_10006DE68(a1, v3);
}

uint64_t sub_10006F5A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10006F60C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10006F66C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for QuickNoteTimelineProvider.Entry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for QuickNoteWidget()
{
  return &type metadata for QuickNoteWidget;
}

uint64_t sub_10006F6E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10007C150();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = (int *)type metadata accessor for Note();
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v11 + 48);
  int v13 = v12(v8, 2, v10);
  int v14 = v12(v9, 2, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_10006F60C(v8, (uint64_t (*)(void))type metadata accessor for Note);
      goto LABEL_7;
    }
    uint64_t v34 = a1;
    *(void *)uint64_t v8 = *(void *)v9;
    *(void *)(v8 + 8) = *(void *)(v9 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v8 + 16) = *(void *)(v9 + 16);
    *(void *)(v8 + 24) = *(void *)(v9 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v8 + 32) = *(void *)(v9 + 32);
    *(void *)(v8 + 40) = *(void *)(v9 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v8 + 48) = *(void *)(v9 + 48);
    *(void *)(v8 + 56) = *(void *)(v9 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v8 + 64) = *(void *)(v9 + 64);
    *(void *)(v8 + 72) = *(void *)(v9 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v8 + 80) = *(unsigned char *)(v9 + 80);
    *(void *)(v8 + 88) = *(void *)(v9 + 88);
    *(void *)(v8 + 96) = *(void *)(v9 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v19 = v10[11];
    uint64_t v20 = (void *)(v8 + v19);
    uint64_t v21 = (void *)(v9 + v19);
    uint64_t v22 = sub_10007C110();
    uint64_t v23 = *(void *)(v22 - 8);
    uint64_t v24 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v23 + 48);
    int v25 = v24(v20, 1, v22);
    int v26 = v24(v21, 1, v22);
    if (v25)
    {
      if (!v26)
      {
        (*(void (**)(void *, void *, uint64_t))(v23 + 16))(v20, v21, v22);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
LABEL_16:
        a1 = v34;
        *(void *)(v8 + v10[12]) = *(void *)(v9 + v10[12]);
        swift_retain();
        swift_release();
        *(void *)(v8 + v10[13]) = *(void *)(v9 + v10[13]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)(v8 + v10[14]) = *(void *)(v9 + v10[14]);
        swift_retain();
        swift_release();
        *(void *)(v8 + v10[15]) = *(void *)(v9 + v10[15]);
        swift_retain();
        swift_release();
        *(unsigned char *)(v8 + v10[16]) = *(unsigned char *)(v9 + v10[16]);
        return a1;
      }
    }
    else
    {
      if (!v26)
      {
        (*(void (**)(void *, void *, uint64_t))(v23 + 24))(v20, v21, v22);
        goto LABEL_16;
      }
      (*(void (**)(void *, uint64_t))(v23 + 8))(v20, v22);
    }
    uint64_t v28 = sub_100008FA4(&qword_1000A3270);
    memcpy(v20, v21, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_16;
  }
  if (v14)
  {
LABEL_7:
    uint64_t v18 = sub_100008FA4(&qword_1000A3268);
    memcpy((void *)v8, (const void *)v9, *(void *)(*(void *)(v18 - 8) + 64));
    return a1;
  }
  *(void *)uint64_t v8 = *(void *)v9;
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  *(void *)(v8 + 40) = *(void *)(v9 + 40);
  *(void *)(v8 + 48) = *(void *)(v9 + 48);
  *(void *)(v8 + 56) = *(void *)(v9 + 56);
  *(void *)(v8 + 64) = *(void *)(v9 + 64);
  *(void *)(v8 + 72) = *(void *)(v9 + 72);
  *(unsigned char *)(v8 + 80) = *(unsigned char *)(v9 + 80);
  *(void *)(v8 + 88) = *(void *)(v9 + 88);
  *(void *)(v8 + 96) = *(void *)(v9 + 96);
  uint64_t v15 = v10[11];
  __dst = (void *)(v8 + v15);
  uint64_t v31 = (const void *)(v9 + v15);
  uint64_t v16 = sub_10007C110();
  uint64_t v30 = *(void *)(v16 - 8);
  uint64_t v32 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v32(v31, 1, v16))
  {
    uint64_t v17 = sub_100008FA4(&qword_1000A3270);
    memcpy(__dst, v31, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v30 + 16))(__dst, v31, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(__dst, 0, 1, v16);
  }
  *(void *)(v8 + v10[12]) = *(void *)(v9 + v10[12]);
  *(void *)(v8 + v10[13]) = *(void *)(v9 + v10[13]);
  *(void *)(v8 + v10[14]) = *(void *)(v9 + v10[14]);
  *(void *)(v8 + v10[15]) = *(void *)(v9 + v10[15]);
  *(unsigned char *)(v8 + v10[16]) = *(unsigned char *)(v9 + v10[16]);
  uint64_t v27 = *(void (**)(uint64_t, void, uint64_t, int *))(v11 + 56);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v27(v8, 0, 2, v10);
  return a1;
}

uint64_t sub_10006FCE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10007C150();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = (int *)type metadata accessor for Note();
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v11 + 48);
  int v13 = v12(v8, 2, v10);
  int v14 = v12(v9, 2, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_10006F60C(v8, (uint64_t (*)(void))type metadata accessor for Note);
      goto LABEL_7;
    }
    uint64_t v24 = *(void *)(v9 + 8);
    *(void *)uint64_t v8 = *(void *)v9;
    *(void *)(v8 + 8) = v24;
    swift_bridgeObjectRelease();
    uint64_t v25 = *(void *)(v9 + 24);
    *(void *)(v8 + 16) = *(void *)(v9 + 16);
    *(void *)(v8 + 24) = v25;
    swift_bridgeObjectRelease();
    uint64_t v26 = *(void *)(v9 + 40);
    *(void *)(v8 + 32) = *(void *)(v9 + 32);
    *(void *)(v8 + 40) = v26;
    swift_bridgeObjectRelease();
    uint64_t v27 = *(void *)(v9 + 56);
    *(void *)(v8 + 48) = *(void *)(v9 + 48);
    *(void *)(v8 + 56) = v27;
    swift_bridgeObjectRelease();
    uint64_t v28 = *(void *)(v9 + 72);
    *(void *)(v8 + 64) = *(void *)(v9 + 64);
    *(void *)(v8 + 72) = v28;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v8 + 80) = *(unsigned char *)(v9 + 80);
    uint64_t v29 = *(void *)(v9 + 96);
    *(void *)(v8 + 88) = *(void *)(v9 + 88);
    *(void *)(v8 + 96) = v29;
    swift_bridgeObjectRelease();
    uint64_t v30 = v10[11];
    uint64_t v31 = (void *)(v8 + v30);
    uint64_t v32 = (void *)(v9 + v30);
    uint64_t v33 = sub_10007C110();
    uint64_t v34 = *(void *)(v33 - 8);
    uint64_t v35 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v34 + 48);
    uint64_t v40 = v31;
    LODWORD(v31) = v35(v31, 1, v33);
    int v36 = v35(v32, 1, v33);
    if (v31)
    {
      if (!v36)
      {
        (*(void (**)(void *, void *, uint64_t))(v34 + 32))(v40, v32, v33);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v34 + 56))(v40, 0, 1, v33);
        goto LABEL_18;
      }
      size_t v37 = *(void *)(*(void *)(sub_100008FA4(&qword_1000A3270) - 8) + 64);
      uint64_t v38 = v40;
    }
    else
    {
      if (!v36)
      {
        (*(void (**)(void *, void *, uint64_t))(v34 + 40))(v40, v32, v33);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v34 + 8))(v40, v33);
      size_t v37 = *(void *)(*(void *)(sub_100008FA4(&qword_1000A3270) - 8) + 64);
      uint64_t v38 = v40;
    }
    memcpy(v38, v32, v37);
LABEL_18:
    *(void *)(v8 + v10[12]) = *(void *)(v9 + v10[12]);
    swift_release();
    *(void *)(v8 + v10[13]) = *(void *)(v9 + v10[13]);
    swift_bridgeObjectRelease();
    *(void *)(v8 + v10[14]) = *(void *)(v9 + v10[14]);
    swift_release();
    *(void *)(v8 + v10[15]) = *(void *)(v9 + v10[15]);
    swift_release();
    *(unsigned char *)(v8 + v10[16]) = *(unsigned char *)(v9 + v10[16]);
    return a1;
  }
  if (v14)
  {
LABEL_7:
    uint64_t v23 = sub_100008FA4(&qword_1000A3268);
    memcpy((void *)v8, (const void *)v9, *(void *)(*(void *)(v23 - 8) + 64));
    return a1;
  }
  long long v15 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v15;
  long long v16 = *(_OWORD *)(v9 + 48);
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(_OWORD *)(v8 + 48) = v16;
  *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
  *(unsigned char *)(v8 + 80) = *(unsigned char *)(v9 + 80);
  *(_OWORD *)(v8 + 88) = *(_OWORD *)(v9 + 88);
  uint64_t v17 = v10[11];
  uint64_t v18 = (void *)(v8 + v17);
  uint64_t v19 = (const void *)(v9 + v17);
  uint64_t v20 = sub_10007C110();
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    uint64_t v22 = sub_100008FA4(&qword_1000A3270);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 32))(v18, v19, v20);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  *(void *)(v8 + v10[12]) = *(void *)(v9 + v10[12]);
  *(void *)(v8 + v10[13]) = *(void *)(v9 + v10[13]);
  *(void *)(v8 + v10[14]) = *(void *)(v9 + v10[14]);
  *(void *)(v8 + v10[15]) = *(void *)(v9 + v10[15]);
  *(unsigned char *)(v8 + v10[16]) = *(unsigned char *)(v9 + v10[16]);
  (*(void (**)(uint64_t, void, uint64_t, int *))(v11 + 56))(v8, 0, 2, v10);
  return a1;
}

uint64_t sub_1000701D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000701E4);
}

uint64_t sub_1000701E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10007C150();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_100008FA4(&qword_1000A3268);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1000702E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000702F4);
}

uint64_t sub_1000702F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_10007C150();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_100008FA4(&qword_1000A3268);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_1000703FC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100070418(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100070460()
{
  unint64_t result = qword_1000A5FF0;
  if (!qword_1000A5FF0)
  {
    sub_10000A43C(&qword_1000A5FC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A5FF0);
  }
  return result;
}

uint64_t sub_1000704BC()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for RecordingLiveActivityWidget()
{
  return &type metadata for RecordingLiveActivityWidget;
}

uint64_t sub_100070598()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_1000705B4@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_10007066C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1000A3590, &qword_1000A3580).n128_u64[0];
  return result;
}

double sub_100070610@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_10007066C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1000A3430, &qword_1000A3438).n128_u64[0];
  return result;
}

__n128 sub_10007066C@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v19 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_10007D070();
    uint64_t v28 = (void *)sub_10007C710();
    sub_10007C2B0();

    uint64_t v19 = a17;
  }
  sub_10007C410();
  sub_10000CB64(v17, a9, a16);
  uint64_t v29 = (_OWORD *)(a9 + *(int *)(sub_100008FA4(v19) + 36));
  v29[4] = v35;
  v29[5] = v36;
  v29[6] = v37;
  *uint64_t v29 = v31;
  v29[1] = v32;
  __n128 result = v34;
  void v29[2] = v33;
  v29[3] = v34;
  return result;
}

double sub_10007083C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100070A08(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1000A5328, &qword_1000A52B8).n128_u64[0];
  return result;
}

double sub_100070898@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_10007066C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1000A56F0, &qword_1000A56F8).n128_u64[0];
  return result;
}

double sub_1000708F4@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_10007066C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1000A56D0, &qword_1000A56D8).n128_u64[0];
  return result;
}

double sub_100070950@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_10007066C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1000A57A0, &qword_1000A57A8).n128_u64[0];
  return result;
}

double sub_1000709AC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100070A08(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1000A5CA0, &qword_1000A5CA8).n128_u64[0];
  return result;
}

__n128 sub_100070A08@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v19 = a16;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_10007D070();
    uint64_t v28 = (void *)sub_10007C710();
    sub_10007C2B0();

    uint64_t v19 = a16;
  }
  sub_10007C410();
  uint64_t v29 = sub_100008FA4(v19);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(a9, v17, v29);
  uint64_t v30 = (_OWORD *)(a9 + *(int *)(sub_100008FA4(a17) + 36));
  v30[4] = v36;
  v30[5] = v37;
  v30[6] = v38;
  *uint64_t v30 = v32;
  v30[1] = v33;
  __n128 result = v35;
  v30[2] = v34;
  v30[3] = v35;
  return result;
}

uint64_t sub_100070C04@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_10007D070();
    uint64_t v23 = (void *)sub_10007C710();
    sub_10007C2B0();
  }
  sub_10007C410();
  long long v25 = *v13;
  long long v35 = v13[1];
  long long v24 = v35;
  *(_OWORD *)a9 = v25;
  *(_OWORD *)(a9 + 16) = v24;
  *(_OWORD *)(a9 + 136) = v34;
  *(_OWORD *)(a9 + 120) = v33;
  *(_OWORD *)(a9 + 104) = v32;
  *(_OWORD *)(a9 + 88) = v31;
  *(_OWORD *)(a9 + 40) = v28;
  uint64_t v26 = *(void *)v13;
  uint64_t v37 = *((void *)v13 + 1);
  uint64_t v38 = v26;
  char v36 = *((unsigned char *)v13 + 32);
  *(unsigned char *)(a9 + 32) = v36;
  *(_OWORD *)(a9 + 56) = v29;
  *(_OWORD *)(a9 + 72) = v30;
  sub_100073328((uint64_t)&v38);
  sub_100073328((uint64_t)&v37);
  return sub_100073328((uint64_t)&v35);
}

double sub_100070DD0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_10007066C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1000A5B08, &qword_1000A5B10).n128_u64[0];
  return result;
}

uint64_t sub_100070E2C@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_10007D070();
    uint64_t v23 = (void *)sub_10007C710();
    sub_10007C2B0();
  }
  sub_10007C410();
  long long v24 = v13[3];
  a9[2] = v13[2];
  a9[3] = v24;
  *(_OWORD *)((char *)a9 + 57) = *(_OWORD *)((char *)v13 + 57);
  long long v25 = v13[1];
  *a9 = *v13;
  a9[1] = v25;
  a9[9] = v31;
  a9[10] = v32;
  a9[11] = v33;
  a9[5] = v27;
  a9[6] = v28;
  a9[7] = v29;
  a9[8] = v30;
  return sub_1000730A0((uint64_t)v13);
}

uint64_t sub_100070FE0@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19)
{
  uint64_t v20 = a19;
  char v21 = a18;
  uint64_t v22 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_10007D070();
    long long v31 = (void *)sub_10007C710();
    sub_10007C2B0();

    char v21 = a18;
    uint64_t v20 = a19;
    uint64_t v22 = a17;
  }
  sub_10007C410();
  *(void *)a9 = a16;
  *(void *)(a9 + 8) = v22;
  *(unsigned char *)(a9 + 16) = v21 & 1;
  *(void *)(a9 + 24) = v20;
  *(_OWORD *)(a9 + 96) = v37;
  *(_OWORD *)(a9 + 112) = v38;
  *(_OWORD *)(a9 + 128) = v39;
  *(_OWORD *)(a9 + 32) = v33;
  *(_OWORD *)(a9 + 48) = v34;
  *(_OWORD *)(a9 + 64) = v35;
  *(_OWORD *)(a9 + 80) = v36;
  sub_10000A620(a16, v22, v21 & 1);

  return swift_bridgeObjectRetain();
}

uint64_t sub_1000711D4()
{
  uint64_t v0 = sub_10007C230();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008FA4(&qword_1000A6010);
  sub_10007CD80();
  uint64_t v4 = sub_10007C220();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v6[1] = v4;
  sub_10007CA30();
  sub_10007CA70();
  swift_release();
  sub_100071FB0();
  sub_10007C900();
  return swift_release();
}

uint64_t sub_10007130C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v16 = a1;
  uint64_t v18 = a2;
  uint64_t v3 = sub_100008FA4(&qword_1000A6010);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v15 - v8;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v10((char *)&v15 - v8, a1, v3);
  unint64_t v11 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v17 = swift_allocObject();
  uint64_t v12 = *(void (**)(unint64_t, char *, uint64_t))(v4 + 32);
  v12(v17 + v11, v9, v3);
  v10(v7, v16, v3);
  uint64_t v13 = swift_allocObject();
  v12(v13 + v11, v7, v3);
  sub_100008FA4(&qword_1000A6018);
  sub_100008FA4(&qword_1000A6020);
  sub_100008FA4(&qword_1000A6028);
  sub_100008FA4(&qword_1000A6030);
  sub_10000CAB4(&qword_1000A6038, &qword_1000A6018);
  sub_1000721FC(&qword_1000A6040, &qword_1000A6020, (void (*)(void))sub_100072188);
  sub_1000721FC(&qword_1000A6058, &qword_1000A6028, (void (*)(void))sub_100072278);
  sub_1000722CC();
  return sub_10007CD40();
}

uint64_t sub_1000715FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10007C230();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008FA4(&qword_1000A6010);
  sub_10007CD80();
  sub_1000716E4((uint64_t)v5, a1);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1000716E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v20 = sub_100008FA4(&qword_1000A6080);
  uint64_t v18 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100008FA4(&qword_1000A6088);
  uint64_t v5 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10007CEC0();
  __chkstk_darwin(v8 - 8);
  uint64_t v16 = sub_100008FA4(&qword_1000A6090);
  uint64_t v9 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  unint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007CEB0();
  uint64_t v12 = sub_100008FA4(&qword_1000A6098);
  uint64_t v13 = sub_1000721FC(&qword_1000A60A0, &qword_1000A6098, (void (*)(void))sub_1000722CC);
  sub_10007CE70();
  sub_10007CEA0();
  uint64_t v24 = a1;
  sub_100008FA4(&qword_1000A60A8);
  sub_10000CAB4(&qword_1000A60B0, &qword_1000A60A8);
  sub_10007CE70();
  uint64_t v23 = v11;
  sub_100008FA4(&qword_1000A60B8);
  uint64_t v25 = v12;
  uint64_t v26 = v13;
  swift_getOpaqueTypeConformance2();
  sub_10007CE80();
  char v21 = v4;
  uint64_t v22 = v7;
  sub_100008FA4(&qword_1000A6018);
  sub_10000CAB4(&qword_1000A6038, &qword_1000A6018);
  sub_10007CE80();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v4, v20);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v17);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v16);
}

double sub_100071AE8@<D0>(_OWORD *a1@<X8>)
{
  sub_10007C5A0();
  LOWORD(v27) = 256;
  uint64_t v2 = sub_10007C8A0();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  sub_10007C7D0();
  uint64_t v7 = sub_10007C850();
  uint64_t v9 = v8;
  char v11 = v10 & 1;
  sub_10000A610(v2, v4, v6);
  swift_bridgeObjectRelease();
  id v12 = [self ICTintColor:0 v27];
  *(void *)&v28[0] = sub_10007CAC0();
  uint64_t v13 = sub_10007C870();
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  char v19 = v18 & 1;
  sub_10000A610(v7, v9, v11);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v39 = v13;
  uint64_t v40 = v15;
  char v41 = v19;
  uint64_t v42 = v17;
  char v43 = sub_10007C730();
  long long v44 = 0u;
  long long v45 = 0u;
  char v46 = 1;
  sub_10007CBF0();
  sub_100070E2C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v28, 0.0, 1, 0.0, 1);
  sub_10000A610(v13, v15, v19);
  swift_bridgeObjectRelease();
  long long v20 = v36;
  a1[8] = v35;
  a1[9] = v20;
  long long v21 = v38;
  a1[10] = v37;
  a1[11] = v21;
  long long v22 = v32;
  a1[4] = v31;
  a1[5] = v22;
  long long v23 = v34;
  a1[6] = v33;
  a1[7] = v23;
  long long v24 = v28[1];
  *a1 = v28[0];
  a1[1] = v24;
  double result = *(double *)&v29;
  long long v26 = v30;
  a1[2] = v29;
  a1[3] = v26;
  return result;
}

double sub_100071D14@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10007C230();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008FA4(&qword_1000A6010);
  sub_10007CD80();
  uint64_t v6 = sub_10007C220();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  char v7 = sub_10007C730();
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  double result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(unsigned char *)(a1 + 48) = 1;
  return result;
}

uint64_t sub_100071E18@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_10007CAE0();
  uint64_t v3 = sub_10007CA10();
  uint64_t result = swift_getKeyPath();
  *a1 = v2;
  a1[1] = result;
  a1[2] = v3;
  return result;
}

void sub_100071E80(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_100071E88()
{
  return sub_10007CDE0();
}

unint64_t sub_100071F58()
{
  unint64_t result = qword_1000A6000;
  if (!qword_1000A6000)
  {
    sub_10007C240();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A6000);
  }
  return result;
}

unint64_t sub_100071FB0()
{
  unint64_t result = qword_1000A6008;
  if (!qword_1000A6008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A6008);
  }
  return result;
}

uint64_t sub_100072008@<X0>(uint64_t a1@<X8>)
{
  sub_100008FA4(&qword_1000A6010);

  return sub_1000715FC(a1);
}

uint64_t sub_100072080()
{
  uint64_t v1 = sub_100008FA4(&qword_1000A6010);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

double sub_100072114@<D0>(uint64_t a1@<X8>)
{
  sub_100008FA4(&qword_1000A6010);

  return sub_100071D14(a1);
}

unint64_t sub_100072188()
{
  unint64_t result = qword_1000A6048;
  if (!qword_1000A6048)
  {
    sub_10000A43C(&qword_1000A6050);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A6048);
  }
  return result;
}

uint64_t sub_1000721FC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000A43C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100072278()
{
  unint64_t result = qword_1000A6060;
  if (!qword_1000A6060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A6060);
  }
  return result;
}

unint64_t sub_1000722CC()
{
  unint64_t result = qword_1000A6068;
  if (!qword_1000A6068)
  {
    sub_10000A43C(&qword_1000A6030);
    sub_10000CAB4(&qword_1000A6070, &qword_1000A6078);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A6068);
  }
  return result;
}

uint64_t sub_10007236C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_100073120(a1);
  sub_100068AF0();
  uint64_t v3 = sub_10007C8C0();
  uint64_t v5 = v4;
  char v7 = v6 & 1;
  sub_10007C7D0();
  uint64_t v8 = sub_10007C850();
  uint64_t v10 = v9;
  char v12 = v11 & 1;
  sub_10000A610(v3, v5, v7);
  swift_bridgeObjectRelease();
  id v13 = [self ICTintColor];
  sub_10007CAC0();
  uint64_t v14 = sub_10007C870();
  uint64_t v16 = v15;
  char v18 = v17 & 1;
  sub_10000A610(v8, v10, v12);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v19 = sub_10007C880();
  uint64_t v21 = v20;
  LOBYTE(v10) = v22;
  uint64_t v24 = v23;
  sub_10000A610(v14, v16, v18);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v19;
  *(void *)(a2 + 8) = v21;
  *(unsigned char *)(a2 + 16) = v10 & 1;
  *(void *)(a2 + 24) = v24;
  return result;
}

uint64_t sub_1000724FC@<X0>(uint64_t a1@<X8>)
{
  return sub_10007236C(*v1, a1);
}

double sub_100072504@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10007CAE0();
  id v3 = [self ICTintColor];
  uint64_t v4 = sub_10007CAC0();
  uint64_t KeyPath = swift_getKeyPath();
  char v6 = sub_10007C730();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = KeyPath;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v6;
  double result = 0.0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(unsigned char *)(a1 + 64) = 1;
  return result;
}

__n128 sub_1000725A4@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10007C590();
  sub_100072610((uint64_t)&v7);
  char v3 = v8;
  uint64_t v4 = v9;
  uint64_t v5 = v10;
  __n128 result = v7;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(__n128 *)(a1 + 24) = result;
  *(unsigned char *)(a1 + 40) = v3;
  *(void *)(a1 + 48) = v4;
  *(void *)(a1 + 56) = v5;
  return result;
}

uint64_t sub_100072610@<X0>(uint64_t a1@<X8>)
{
  sub_10007C5A0();
  LOWORD(v17) = 256;
  uint64_t v2 = sub_10007C8A0();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  id v7 = [self ICTintColor:0 v17];
  sub_10007CAC0();
  uint64_t v8 = sub_10007C870();
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  char v14 = v13 & 1;
  sub_10000A610(v2, v4, v6);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v15 = sub_10007C220();
  *(void *)a1 = v8;
  *(void *)(a1 + 8) = v10;
  *(unsigned char *)(a1 + 16) = v14;
  *(void *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v15;
  sub_10000A620(v8, v10, v14);
  swift_bridgeObjectRetain();
  sub_10000A610(v8, v10, v14);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100072774@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = sub_10007CAE0();
  uint64_t v3 = self;
  id v4 = [v3 ICTintColor];
  uint64_t v39 = sub_10007CAC0();
  uint64_t KeyPath = swift_getKeyPath();
  char v37 = sub_10007C730();
  sub_10007C5A0();
  LOWORD(v35) = 256;
  uint64_t v5 = sub_10007C8A0();
  uint64_t v7 = v6;
  char v9 = v8 & 1;
  id v10 = [v3 ICTintColor:0 v35];
  *(void *)&v48[0] = sub_10007CAC0();
  uint64_t v11 = sub_10007C870();
  uint64_t v36 = v12;
  uint64_t v14 = v13;
  char v16 = v15 & 1;
  sub_10000A610(v5, v7, v9);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v17 = sub_10007CBF0();
  sub_100070FE0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v57, 0.0, 1, 0.0, 1, v17, v18, v11, v36, v16, v14);
  sub_10000A610(v11, v36, v16);
  swift_bridgeObjectRelease();
  LOBYTE(v3) = sub_10007C730();
  char v19 = sub_10007C730();
  long long v20 = v62;
  v43[6] = v63;
  long long v21 = v63;
  v43[7] = v64;
  long long v22 = v64;
  v43[8] = v65;
  long long v23 = v58;
  v43[2] = v59;
  long long v24 = v59;
  void v43[3] = v60;
  long long v25 = v60;
  v43[4] = v61;
  long long v26 = v61;
  v43[5] = v62;
  v43[0] = v57;
  long long v27 = v57;
  v43[1] = v58;
  v44[0] = (_BYTE)v3;
  *(_DWORD *)&v44[1] = *(_DWORD *)v42;
  *(_DWORD *)&v44[4] = *(_DWORD *)&v42[3];
  memset(&v44[8], 0, 32);
  v44[40] = 1;
  *(_OWORD *)((char *)&v48[8] + 7) = v65;
  *(_OWORD *)((char *)&v48[4] + 7) = v61;
  *(_OWORD *)((char *)&v48[5] + 7) = v62;
  *(_OWORD *)((char *)&v48[6] + 7) = v63;
  *(_OWORD *)((char *)&v48[7] + 7) = v64;
  *(_OWORD *)((char *)v48 + 7) = v57;
  *(_OWORD *)((char *)&v48[1] + 7) = v58;
  *(_OWORD *)((char *)&v48[2] + 7) = v59;
  *(_OWORD *)((char *)&v48[3] + 7) = v60;
  *(_OWORD *)((char *)&v48[10] + 7) = *(_OWORD *)&v44[16];
  v48[11] = *(_OWORD *)&v44[25];
  *(_OWORD *)((char *)&v48[9] + 7) = *(_OWORD *)v44;
  long long v28 = v48[10];
  *(_OWORD *)(a2 + 241) = *(_OWORD *)&v44[25];
  long long v29 = v48[9];
  *(_OWORD *)(a2 + 193) = v48[8];
  *(_OWORD *)(a2 + 209) = v29;
  *(_OWORD *)(a2 + 225) = v28;
  long long v30 = v48[1];
  *(_OWORD *)(a2 + 65) = v48[0];
  *(_OWORD *)(a2 + 81) = v30;
  long long v31 = v48[3];
  *(_OWORD *)(a2 + 97) = v48[2];
  long long v32 = v48[6];
  *(_OWORD *)(a2 + 177) = v48[7];
  *(_OWORD *)(a2 + 161) = v32;
  long long v33 = v48[4];
  *(_OWORD *)(a2 + 145) = v48[5];
  *(_OWORD *)(a2 + 129) = v33;
  *(_OWORD *)(a2 + 113) = v31;
  v51[6] = v21;
  v51[7] = v22;
  v51[8] = v65;
  v51[2] = v24;
  v51[3] = v25;
  v51[4] = v26;
  v51[5] = v20;
  *(_DWORD *)uint64_t v53 = *(_DWORD *)v42;
  *(_DWORD *)&v53[3] = *(_DWORD *)&v42[3];
  char v49 = 1;
  char v45 = 1;
  *(_DWORD *)(a2 + 25) = *(_DWORD *)v50;
  *(_DWORD *)(a2 + 28) = *(_DWORD *)&v50[3];
  *(_DWORD *)(a2 + 257) = *(_DWORD *)v47;
  *(_DWORD *)(a2 + 260) = *(_DWORD *)&v47[3];
  *(_DWORD *)(a2 + 273) = *(_DWORD *)v46;
  *(_DWORD *)(a2 + 276) = *(_DWORD *)&v46[3];
  *(void *)a2 = v40;
  *(void *)(a2 + 8) = KeyPath;
  *(void *)(a2 + 16) = v39;
  *(unsigned char *)(a2 + 24) = v37;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)(a2 + 48) = 0u;
  *(unsigned char *)(a2 + 64) = 1;
  *(void *)(a2 + 264) = a1;
  *(unsigned char *)(a2 + 272) = v19;
  *(_OWORD *)(a2 + 280) = 0u;
  *(_OWORD *)(a2 + 296) = 0u;
  *(unsigned char *)(a2 + 312) = 1;
  v51[0] = v27;
  v51[1] = v23;
  char v52 = (char)v3;
  long long v54 = 0u;
  long long v55 = 0u;
  char v56 = 1;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000730A0((uint64_t)v43);
  sub_1000730E0((uint64_t)v51);
  swift_release();
  swift_release();
  return swift_release();
}

double sub_100072BBC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_10007C590();
  sub_100072774(v3, (uint64_t)v6);
  __src[320] = 1;
  memcpy(&__src[7], v6, 0x139uLL);
  LOBYTE(v3) = sub_10007C730();
  char v8 = 1;
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  memcpy((void *)(a1 + 17), __src, 0x140uLL);
  *(unsigned char *)(a1 + 344) = v3;
  double result = 0.0;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 368) = 0u;
  *(unsigned char *)(a1 + 384) = v8;
  return result;
}

uint64_t sub_100072C64@<X0>(char *a1@<X8>)
{
  long long v30 = a1;
  uint64_t v1 = sub_100008FA4(&qword_1000A60C0);
  uint64_t v27 = *(void *)(v1 - 8);
  uint64_t v2 = v27;
  uint64_t v3 = __chkstk_darwin(v1);
  long long v29 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v25 - v5;
  uint64_t v7 = sub_100008FA4(&qword_1000A60B8);
  uint64_t v28 = *(void *)(v7 - 8);
  uint64_t v8 = v28;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v25 - v12;
  sub_100008FA4(&qword_1000A6080);
  sub_10007CE90();
  sub_100008FA4(&qword_1000A6088);
  long long v26 = v6;
  sub_10007CE60();
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  char v15 = v11;
  v14(v11, v13, v7);
  char v16 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
  uint64_t v17 = v29;
  uint64_t v18 = v6;
  uint64_t v19 = v1;
  v16(v29, v18, v1);
  long long v20 = v30;
  v14(v30, v15, v7);
  uint64_t v21 = sub_100008FA4(&qword_1000A60C8);
  v16(&v20[*(int *)(v21 + 48)], v17, v19);
  long long v22 = *(void (**)(char *, uint64_t))(v27 + 8);
  v22(v26, v19);
  long long v23 = *(void (**)(char *, uint64_t))(v28 + 8);
  v23(v13, v7);
  v22(v17, v19);
  return ((uint64_t (*)(char *, uint64_t))v23)(v15, v7);
}

uint64_t sub_100072F14@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10007C4A0();
  *a1 = result;
  return result;
}

uint64_t sub_100072F40@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10007C4A0();
  *a1 = result;
  return result;
}

uint64_t sub_100072F6C()
{
  return sub_10007C4B0();
}

uint64_t sub_100072F98()
{
  return sub_10007C4B0();
}

double sub_100072FC4@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = sub_1000725A4(a1).n128_u64[0];
  return result;
}

uint64_t sub_100072FCC()
{
  return sub_10007CE60();
}

uint64_t sub_100073004@<X0>(char *a1@<X8>)
{
  return sub_100072C64(a1);
}

ValueMetadata *type metadata accessor for TimeView()
{
  return &type metadata for TimeView;
}

ValueMetadata *type metadata accessor for RecordingActivityLockScreenView()
{
  return &type metadata for RecordingActivityLockScreenView;
}

uint64_t sub_10007302C()
{
  return sub_10000CAB4(&qword_1000A60D0, &qword_1000A60D8);
}

uint64_t sub_100073068()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100073084()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000730A0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000730E0(uint64_t a1)
{
  return a1;
}

uint64_t sub_100073120(uint64_t a1)
{
  uint64_t v2 = a1 / 60 % 60;
  uint64_t v3 = a1 % 60;
  sub_100008FA4(&qword_1000A60E0);
  uint64_t v4 = swift_allocObject();
  if (a1 < 3600)
  {
    *(_OWORD *)(v4 + 16) = xmmword_1000861E0;
    *(void *)(v4 + 56) = &type metadata for Int;
    *(void *)(v4 + 64) = &protocol witness table for Int;
    *(void *)(v4 + 32) = v2;
    *(void *)(v4 + 96) = &type metadata for Int;
    *(void *)(v4 + 104) = &protocol witness table for Int;
    *(void *)(v4 + 72) = v3;
    unint64_t v5 = 0xE900000000000069;
  }
  else
  {
    *(_OWORD *)(v4 + 16) = xmmword_1000807D0;
    *(void *)(v4 + 56) = &type metadata for Int;
    *(void *)(v4 + 64) = &protocol witness table for Int;
    *(void *)(v4 + 32) = a1 / 3600;
    *(void *)(v4 + 96) = &type metadata for Int;
    *(void *)(v4 + 104) = &protocol witness table for Int;
    *(void *)(v4 + 72) = v2;
    *(void *)(v4 + 136) = &type metadata for Int;
    *(void *)(v4 + 144) = &protocol witness table for Int;
    *(void *)(v4 + 112) = v3;
    unint64_t v5 = 0xEE00693230253A69;
  }

  return String.init(format:_:)(0x3230253A69323025, v5, v4);
}

unint64_t sub_10007327C()
{
  unint64_t result = qword_1000A60E8;
  if (!qword_1000A60E8)
  {
    sub_10000A43C(&qword_1000A60F0);
    sub_10000CAB4(&qword_1000A60F8, &qword_1000A6100);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A60E8);
  }
  return result;
}

void *sub_10007331C()
{
  return &protocol witness table for Text;
}

uint64_t sub_100073328(uint64_t a1)
{
  return a1;
}

uint64_t sub_100073354()
{
  id v1 = [self mainBundle];
  NSString v2 = sub_10007CF30();
  id v3 = [v1 localizedStringForKey:v2 value:0 table:0];

  uint64_t v4 = sub_10007CF40();
  uint64_t v6 = v5;

  uint64_t v8 = v0[2];
  uint64_t v7 = v0[3];
  uint64_t v10 = v0[11];
  uint64_t v9 = v0[12];
  uint64_t v26 = v9;
  uint64_t v27 = v0[8];
  uint64_t v28 = v0[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v7)
  {
    uint64_t v11 = (char *)&_swiftEmptyArrayStorage;
    if (!v6) {
      goto LABEL_12;
    }
    goto LABEL_7;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v11 = sub_1000764CC(0, 1, 1, (char *)&_swiftEmptyArrayStorage);
  unint64_t v13 = *((void *)v11 + 2);
  unint64_t v12 = *((void *)v11 + 3);
  if (v13 >= v12 >> 1) {
    uint64_t v11 = sub_1000764CC((char *)(v12 > 1), v13 + 1, 1, v11);
  }
  *((void *)v11 + 2) = v13 + 1;
  uint64_t v14 = &v11[16 * v13];
  *((void *)v14 + 4) = v8;
  *((void *)v14 + 5) = v7;
  if (v6)
  {
LABEL_7:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1000764CC(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v16 = *((void *)v11 + 2);
    unint64_t v15 = *((void *)v11 + 3);
    if (v16 >= v15 >> 1) {
      uint64_t v11 = sub_1000764CC((char *)(v15 > 1), v16 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v16 + 1;
    uint64_t v17 = &v11[16 * v16];
    *((void *)v17 + 4) = v4;
    *((void *)v17 + 5) = v6;
    uint64_t v9 = v26;
  }
LABEL_12:
  if (v9)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1000764CC(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v19 = *((void *)v11 + 2);
    unint64_t v18 = *((void *)v11 + 3);
    if (v19 >= v18 >> 1) {
      uint64_t v11 = sub_1000764CC((char *)(v18 > 1), v19 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v19 + 1;
    long long v20 = &v11[16 * v19];
    *((void *)v20 + 4) = v10;
    *((void *)v20 + 5) = v9;
  }
  if (v28)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1000764CC(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v22 = *((void *)v11 + 2);
    unint64_t v21 = *((void *)v11 + 3);
    if (v22 >= v21 >> 1) {
      uint64_t v11 = sub_1000764CC((char *)(v21 > 1), v22 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v22 + 1;
    long long v23 = &v11[16 * v22];
    *((void *)v23 + 4) = v27;
    *((void *)v23 + 5) = v28;
  }
  sub_100008FA4(&qword_1000A61E8);
  swift_arrayDestroy();
  sub_100008FA4(&qword_1000A3728);
  sub_100012020();
  uint64_t v24 = sub_10007CEF0();
  swift_bridgeObjectRelease();
  return v24;
}

void sub_100073690(void *a1@<X0>, int a2@<W1>, void *a3@<X2>, void *a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  id v107 = a4;
  int v101 = a2;
  uint64_t v10 = sub_100008FA4(&qword_1000A3270);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v93 = (char *)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  long long v92 = (char *)&v91 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v91 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  long long v20 = (char *)&v91 - v19;
  __chkstk_darwin(v18);
  uint64_t v108 = (uint64_t)&v91 - v21;
  uint64_t v22 = sub_100008FA4(&qword_1000A4B80);
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  uint64_t v25 = (char *)&v91 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v91 - v26;
  id v28 = [a1 identifier];
  if (v28)
  {
    long long v29 = v28;
    uint64_t v30 = sub_10007CF40();
    unint64_t v99 = v31;
    uint64_t v100 = v30;
  }
  else
  {
    unint64_t v99 = 0xE000000000000000;
    uint64_t v100 = 0;
  }
  id v32 = [a1 title];
  if (v32)
  {
    long long v33 = v32;
    uint64_t v34 = sub_10007CF40();
    unint64_t v97 = v35;
    uint64_t v98 = v34;
  }
  else
  {
    unint64_t v97 = 0xE000000000000000;
    uint64_t v98 = 0;
  }
  id v36 = [a1 widgetInfoText];
  uint64_t v37 = sub_10007CF40();
  uint64_t v105 = v38;
  uint64_t v106 = v37;

  uint64_t v39 = self;
  id v40 = [v39 dateForCurrentSortTypeForNote:a1 folderNoteSortType:a3];
  int v109 = a5;
  if (v40)
  {
    char v41 = v40;
    uint64_t v42 = a3;
    sub_10007C130();

    uint64_t v43 = sub_10007C150();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v25, 0, 1, v43);
  }
  else
  {
    uint64_t v42 = a3;
    uint64_t v43 = sub_10007C150();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v25, 1, 1, v43);
  }
  sub_10000CB00((uint64_t)v25, (uint64_t)v27, &qword_1000A4B80);
  sub_10007C150();
  uint64_t v44 = *(void *)(v43 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v27, 1, v43) == 1)
  {
    sub_10000CBC8((uint64_t)v27, &qword_1000A4B80);
    unint64_t v103 = 0xE000000000000000;
    uint64_t v104 = 0;
  }
  else
  {
    uint64_t v45 = sub_10007C120();
    unint64_t v103 = v46;
    uint64_t v104 = v45;
    (*(void (**)(char *, uint64_t))(v44 + 8))(v27, v43);
  }
  unint64_t v47 = v42;
  id v48 = [v39 dateForCurrentSortTypeAccessibilityStringForNote:a1 folderNoteSortType:v42];
  char v49 = v109;
  if (v48)
  {
    uint64_t v50 = v48;
    uint64_t v51 = sub_10007CF40();
    unint64_t v95 = v52;
    uint64_t v96 = v51;
  }
  else
  {
    unint64_t v95 = 0xE000000000000000;
    uint64_t v96 = 0;
  }
  unsigned int v53 = [a1 isSharedViaICloud];
  id v54 = [a1 shareDescription];
  unsigned int v102 = v53;
  if (v54)
  {
    long long v55 = v54;
    uint64_t v94 = sub_10007CF40();
    uint64_t v57 = v56;
  }
  else
  {
    uint64_t v94 = 0;
    uint64_t v57 = 0;
  }
  if (v49 == -1)
  {
    uint64_t v63 = sub_10007C110();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v20, 1, 1, v63);
    id v64 = v107;
  }
  else
  {
    long long v58 = self;
    id v59 = v107;
    if (v49)
    {
      id v65 = [v58 appURLForNote:a1 inVirtualSmartFolder:v59];
      if (v65)
      {
        uint64_t v66 = v65;
        uint64_t v17 = v92;
        sub_10007C0E0();

        id v67 = v107;
        sub_1000777B0(v107, v49);
        uint64_t v68 = sub_10007C110();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v17, 0, 1, v68);
      }
      else
      {
        id v67 = v107;
        sub_1000777B0(v107, v49);
        uint64_t v70 = sub_10007C110();
        uint64_t v17 = v92;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v92, 1, 1, v70);
      }
    }
    else
    {
      id v60 = [v58 appURLForNote:a1 inFolder:v59];
      if (v60)
      {
        long long v61 = v60;
        sub_10007C0E0();

        uint64_t v62 = sub_10007C110();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v17, 0, 1, v62);
      }
      else
      {
        uint64_t v69 = sub_10007C110();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v17, 1, 1, v69);
      }
      id v67 = v107;
    }
    sub_10000CB00((uint64_t)v17, (uint64_t)v20, &qword_1000A3270);
    sub_1000777B0(v67, v49);
    uint64_t v71 = sub_10007C110();
    uint64_t v72 = *(void *)(v71 - 8);
    id v64 = v67;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v20, 1, v71) != 1)
    {
      uint64_t v77 = v108;
      (*(void (**)(uint64_t, char *, uint64_t))(v72 + 32))(v108, v20, v71);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v72 + 56))(v77, 0, 1, v71);
      char v78 = v101;
      goto LABEL_35;
    }
  }
  id v73 = [self appURLForNote:a1];
  if (v73)
  {
    uint64_t v74 = v73;
    uint64_t v75 = (uint64_t)v93;
    sub_10007C0E0();

    uint64_t v76 = sub_10007C110();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(v75, 0, 1, v76);
  }
  else
  {
    uint64_t v79 = sub_10007C110();
    uint64_t v75 = (uint64_t)v93;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v93, 1, 1, v79);
  }
  char v78 = v101;
  sub_10000CB00(v75, v108, &qword_1000A3270);
  sub_10000CBC8((uint64_t)v20, &qword_1000A3270);
LABEL_35:
  uint64_t v80 = sub_100076CB0(a1);
  if (v78) {
    uint64_t v81 = sub_100010D84(a1);
  }
  else {
    uint64_t v81 = &_swiftEmptyArrayStorage;
  }
  uint64_t v82 = sub_1000773B0(a1);
  uint64_t v83 = sub_1000773B0(a1);
  unsigned __int8 v84 = [a1 ic_hasLightBackground];
  unint64_t v85 = v99;
  *(void *)a6 = v100;
  *(void *)(a6 + 8) = v85;
  unint64_t v86 = v97;
  *(void *)(a6 + 16) = v98;
  *(void *)(a6 + 24) = v86;
  uint64_t v87 = v105;
  *(void *)(a6 + 32) = v106;
  *(void *)(a6 + 40) = v87;
  unint64_t v88 = v103;
  *(void *)(a6 + 48) = v104;
  *(void *)(a6 + 56) = v88;
  unint64_t v89 = v95;
  *(void *)(a6 + 64) = v96;
  *(void *)(a6 + 72) = v89;
  *(unsigned char *)(a6 + 80) = v102;
  *(void *)(a6 + 88) = v94;
  *(void *)(a6 + 96) = v57;
  uint64_t v90 = (int *)type metadata accessor for Note();
  sub_10000CB00(v108, a6 + v90[11], &qword_1000A3270);
  *(void *)(a6 + v90[12]) = v80;
  *(void *)(a6 + v90[13]) = v81;
  *(void *)(a6 + v90[14]) = v82;
  *(void *)(a6 + v90[15]) = v83;
  *(unsigned char *)(a6 + v90[16]) = v84;
  [a1 turnAttachmentsIntoFaults];
  sub_1000777B0(v64, v109);
}

id sub_100073F70@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100008FA4(&qword_1000A3270);
  __chkstk_darwin(v4 - 8);
  uint64_t v50 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100008FA4(&qword_1000A4B80);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v45 - v10;
  id v12 = [a1 identifier];
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = sub_10007CF40();
    unint64_t v16 = v15;
  }
  else
  {
    uint64_t v14 = 0;
    unint64_t v16 = 0xE000000000000000;
  }
  id result = [a1 title];
  if (result)
  {
    uint64_t v18 = result;
    uint64_t v19 = sub_10007CF40();
    uint64_t v48 = v20;
    uint64_t v49 = v19;

    id v21 = [a1 widgetInfoText];
    uint64_t v22 = sub_10007CF40();
    uint64_t v46 = v23;
    uint64_t v47 = v22;

    uint64_t v24 = self;
    id v25 = [v24 dateForCurrentSortTypeForNote:a1 folderNoteSortType:0];
    if (v25)
    {
      uint64_t v26 = v25;
      sub_10007C130();

      uint64_t v27 = sub_10007C150();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v9, 0, 1, v27);
    }
    else
    {
      uint64_t v27 = sub_10007C150();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v9, 1, 1, v27);
    }
    sub_10000CB00((uint64_t)v9, (uint64_t)v11, &qword_1000A4B80);
    sub_10007C150();
    uint64_t v28 = *(void *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v11, 1, v27) == 1)
    {
      sub_10000CBC8((uint64_t)v11, &qword_1000A4B80);
      uint64_t v29 = 0;
      unint64_t v30 = 0xE000000000000000;
    }
    else
    {
      uint64_t v29 = sub_10007C120();
      unint64_t v30 = v31;
      (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v27);
    }
    uint64_t v32 = (uint64_t)v50;
    id v33 = [v24 dateForCurrentSortTypeAccessibilityStringForNote:a1 folderNoteSortType:0];
    if (v33)
    {
      uint64_t v34 = v33;
      uint64_t v35 = sub_10007CF40();
      unint64_t v37 = v36;
    }
    else
    {
      uint64_t v35 = 0;
      unint64_t v37 = 0xE000000000000000;
    }
    id v38 = [self appURLForHTMLNote:a1];
    if (v38)
    {
      uint64_t v39 = v38;
      sub_10007C0E0();

      uint64_t v40 = sub_10007C110();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v32, 0, 1, v40);
    }
    else
    {
      uint64_t v41 = sub_10007C110();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v32, 1, 1, v41);
    }

    *(void *)a2 = v14;
    *(void *)(a2 + 8) = v16;
    uint64_t v42 = v48;
    *(void *)(a2 + 16) = v49;
    *(void *)(a2 + 24) = v42;
    uint64_t v43 = v46;
    *(void *)(a2 + 32) = v47;
    *(void *)(a2 + 40) = v43;
    *(void *)(a2 + 48) = v29;
    *(void *)(a2 + 56) = v30;
    *(void *)(a2 + 64) = v35;
    *(void *)(a2 + 72) = v37;
    *(unsigned char *)(a2 + 80) = 0;
    uint64_t v44 = (int *)type metadata accessor for Note();
    *(void *)(a2 + 88) = 0;
    *(void *)(a2 + 96) = 0;
    id result = (id)sub_10000CB00(v32, a2 + v44[11], &qword_1000A3270);
    *(void *)(a2 + v44[12]) = 0;
    *(void *)(a2 + v44[13]) = &_swiftEmptyArrayStorage;
    *(void *)(a2 + v44[14]) = 0;
    *(void *)(a2 + v44[15]) = 0;
    *(unsigned char *)(a2 + v44[16]) = 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000743D8@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  id v95 = a2;
  id v96 = a3;
  id v102 = a1;
  uint64_t v97 = a4;
  uint64_t v91 = sub_100008FA4(&qword_1000A5410);
  uint64_t v4 = __chkstk_darwin(v91);
  long long v92 = (char *)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  unint64_t v88 = (char *)&v85 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  unint64_t v89 = (char *)&v85 - v9;
  __chkstk_darwin(v8);
  uint64_t v94 = (char *)&v85 - v10;
  int v101 = (int *)sub_10007C2E0();
  uint64_t v99 = *((void *)v101 - 1);
  __chkstk_darwin(v101);
  uint64_t v98 = (char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100008FA4(&qword_1000A3270);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10007C110();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v87 = (char *)&v85 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v93 = (char *)&v85 - v19;
  uint64_t v20 = sub_10007C180();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v85 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = (int *)type metadata accessor for Note();
  uint64_t v100 = *((void *)v24 - 1);
  uint64_t v25 = __chkstk_darwin(v24);
  uint64_t v90 = (uint64_t)&v85 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v85 - v27;
  sub_10007C170();
  uint64_t v29 = sub_10007C160();
  uint64_t v31 = v30;
  uint64_t v32 = v20;
  id v33 = v102;
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v32);
  *(void *)uint64_t v28 = v29;
  *((void *)v28 + 1) = v31;
  *((void *)v28 + 2) = 0;
  *((void *)v28 + 3) = 0xE000000000000000;
  *((void *)v28 + 4) = 0;
  *((void *)v28 + 5) = 0xE000000000000000;
  *((void *)v28 + 6) = 0;
  *((void *)v28 + 7) = 0xE000000000000000;
  *((void *)v28 + 8) = 0;
  *((void *)v28 + 9) = 0xE000000000000000;
  v28[80] = 0;
  *((void *)v28 + 11) = 0;
  *((void *)v28 + 12) = 0;
  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  v34(&v28[v24[11]], 1, 1, v15);
  *(void *)&v28[v24[12]] = 0;
  *(void *)&v28[v24[13]] = _swiftEmptyArrayStorage;
  *(void *)&v28[v24[14]] = 0;
  *(void *)&v28[v24[15]] = 0;
  v28[v24[16]] = 0;
  id v35 = [v33 identifier];
  if (!v35)
  {
    v34(v14, 1, 1, v15);
    goto LABEL_6;
  }
  unint64_t v36 = v35;
  sub_10007CF40();

  swift_bridgeObjectRetain();
  sub_10007C100();
  swift_bridgeObjectRelease_n();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
LABEL_6:
    sub_10000CBC8((uint64_t)v14, &qword_1000A3270);
    if (qword_1000A3240 != -1) {
      swift_once();
    }
    uint64_t v52 = (uint64_t)v101;
    uint64_t v53 = sub_100010740((uint64_t)v101, (uint64_t)qword_1000A6108);
    long long v55 = v98;
    uint64_t v54 = v99;
    (*(void (**)(char *, uint64_t, uint64_t))(v99 + 16))(v98, v53, v52);
    id v56 = v33;
    uint64_t v57 = sub_10007C2D0();
    os_log_type_t v58 = sub_10007D060();
    if (os_log_type_enabled(v57, v58))
    {
      id v59 = (uint8_t *)swift_slowAlloc();
      v104[0] = swift_slowAlloc();
      *(_DWORD *)id v59 = 136315138;
      id v60 = [v56 identifier];
      if (v60)
      {
        long long v61 = v60;
        uint64_t v62 = sub_10007CF40();
        unint64_t v64 = v63;
      }
      else
      {
        unint64_t v64 = 0xA300000000000000;
        uint64_t v62 = 9732322;
      }
      uint64_t v103 = sub_100037524(v62, v64, v104);
      sub_10007D0F0();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v57, v58, "Cannot create note URL from intent note identifier — returning nil {identifier: %s}", v59, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, int *))(v99 + 8))(v98, v101);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v54 + 8))(v55, v52);
    }
    sub_10003AB14((uint64_t)v28);
    uint64_t v38 = v100;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v38 + 56))(v97, 1, 1, v24);
  }
  unint64_t v37 = v93;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v93, v14, v15);
  uint64_t v99 = v16;
  uint64_t v38 = v100;
  uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t, int *))(v100 + 56);
  uint64_t v40 = (uint64_t)v94;
  uint64_t v98 = (char *)(v100 + 56);
  unint64_t v86 = v39;
  v39(v94, 1, 1, v24);
  uint64_t v41 = self;
  sub_10007C0D0(v42);
  uint64_t v44 = v43;
  unsigned int v45 = [v41 isShowNoteURL:v43];

  if (v45)
  {
    id v47 = v95;
    id v48 = [v95 managedObjectContext];
    int v101 = v24;
    __chkstk_darwin(v48);
    *(&v85 - 2) = (uint64_t)v37;
    *(&v85 - 1) = (uint64_t)v47;
    uint64_t v49 = v89;
    sub_10007D0D0();

    sub_10000CBC8(v40, &qword_1000A5410);
    sub_10003AB14((uint64_t)v28);

    uint64_t v24 = v101;
    (*(void (**)(char *, uint64_t))(v99 + 8))(v37, v15);
    uint64_t v50 = (uint64_t)v49;
    uint64_t v51 = v40;
LABEL_27:
    sub_10000CB00(v50, v51, &qword_1000A5410);
    uint64_t v81 = (uint64_t)v92;
    goto LABEL_28;
  }
  sub_10007C0D0(v46);
  uint64_t v66 = v65;
  unsigned int v67 = [v41 isShowHTMLNoteURL:v65];

  if (v67)
  {
    id v68 = v96;
    id v69 = [v96 managedObjectContext];
    if (v69)
    {
      uint64_t v70 = v69;
      int v101 = (int *)&v85;
      __chkstk_darwin(v69);
      *(&v85 - 2) = (uint64_t)v37;
      *(&v85 - 1) = (uint64_t)v68;
      uint64_t v71 = v88;
      sub_10007D0D0();

      uint64_t v40 = (uint64_t)v94;
      sub_10000CBC8((uint64_t)v94, &qword_1000A5410);
      sub_10003AB14((uint64_t)v28);
      (*(void (**)(char *, uint64_t))(v99 + 8))(v37, v15);
    }
    else
    {

      uint64_t v40 = (uint64_t)v94;
      sub_10000CBC8((uint64_t)v94, &qword_1000A5410);
      sub_10003AB14((uint64_t)v28);
      (*(void (**)(char *, uint64_t))(v99 + 8))(v37, v15);
      uint64_t v71 = v88;
      v86(v88, 1, 1, v24);
    }
    uint64_t v50 = (uint64_t)v71;
    uint64_t v51 = v40;
    goto LABEL_27;
  }
  if (qword_1000A3240 != -1) {
    swift_once();
  }
  sub_100010740((uint64_t)v101, (uint64_t)qword_1000A6108);
  uint64_t v73 = v99;
  uint64_t v74 = v87;
  (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v87, v93, v15);
  uint64_t v75 = sub_10007C2D0();
  os_log_type_t v76 = sub_10007D060();
  if (os_log_type_enabled(v75, v76))
  {
    uint64_t v77 = (uint8_t *)swift_slowAlloc();
    int v101 = (int *)swift_slowAlloc();
    v104[0] = (uint64_t)v101;
    *(_DWORD *)uint64_t v77 = 136315138;
    uint64_t v91 = (uint64_t)(v77 + 4);
    sub_100011FDC(&qword_1000A3640);
    uint64_t v78 = sub_10007D230();
    uint64_t v103 = sub_100037524(v78, v79, v104);
    sub_10007D0F0();
    swift_bridgeObjectRelease();
    uint64_t v80 = *(void (**)(char *, uint64_t))(v73 + 8);
    v80(v74, v15);
    _os_log_impl((void *)&_mh_execute_header, v75, v76, "Unknown note URL type — returning nil {noteURL: %s}", v77, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v80 = *(void (**)(char *, uint64_t))(v73 + 8);
    v80(v74, v15);
  }
  sub_10003AB14((uint64_t)v28);
  uint64_t v38 = v100;
  v80(v93, v15);
  uint64_t v81 = (uint64_t)v92;
  uint64_t v40 = (uint64_t)v94;
LABEL_28:
  sub_10000CB00(v40, v81, &qword_1000A5410);
  if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v38 + 48))(v81, 1, v24) == 1)
  {
    sub_10000CBC8(v81, &qword_1000A5410);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v38 + 56))(v97, 1, 1, v24);
  }
  uint64_t v82 = v81;
  uint64_t v83 = v90;
  sub_1000777C4(v82, v90);
  sub_1000777C4(v83, (uint64_t)v28);
  uint64_t v84 = v97;
  sub_1000777C4((uint64_t)v28, v97);
  return ((uint64_t (*)(uint64_t, void, uint64_t, int *))v86)(v84, 0, 1, v24);
}

uint64_t sub_1000750BC()
{
  uint64_t v0 = sub_10007C2E0();
  sub_1000112B4(v0, qword_1000A6108);
  sub_100010740(v0, (uint64_t)qword_1000A6108);
  return sub_10007C2C0();
}

uint64_t sub_10007510C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v55 = a3;
  uint64_t v5 = sub_10007C110();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v52 - v10;
  uint64_t v12 = self;
  sub_10007C0D0(v13);
  uint64_t v15 = v14;
  id v16 = [v12 predicateForNotesMentionedInURL:v14];

  sub_100011278(0, &qword_1000A4B98);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  id v18 = [a2 managedObjectContext];
  id v54 = v16;
  id v19 = [ObjCClassFromMetadata ic_objectsMatchingPredicate:v16 context:v18];

  sub_100011278(0, &qword_1000A4BA0);
  unint64_t v20 = sub_10007CFD0();

  if (!(v20 >> 62))
  {
    if (*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    if (qword_1000A3240 == -1)
    {
LABEL_21:
      uint64_t v45 = sub_10007C2E0();
      sub_100010740(v45, (uint64_t)qword_1000A6108);
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v11, a1, v5);
      uint64_t v46 = sub_10007C2D0();
      os_log_type_t v47 = sub_10007D060();
      if (os_log_type_enabled(v46, v47))
      {
        id v48 = (uint8_t *)swift_slowAlloc();
        uint64_t v57 = swift_slowAlloc();
        *(_DWORD *)id v48 = 136315138;
        uint64_t v53 = (uint64_t)(v48 + 4);
        sub_100011FDC(&qword_1000A3640);
        uint64_t v49 = sub_10007D230();
        uint64_t v56 = sub_100037524(v49, v50, &v57);
        sub_10007D0F0();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
        _os_log_impl((void *)&_mh_execute_header, v46, v47, "Cannot find object for note URL — returning nil {noteURL: %s}", v48, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
      }

      goto LABEL_25;
    }
LABEL_29:
    swift_once();
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  uint64_t v44 = sub_10007D1E0();
  swift_bridgeObjectRelease();
  if (!v44) {
    goto LABEL_20;
  }
LABEL_3:
  if ((v20 & 0xC000000000000001) == 0)
  {
    if (*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v21 = *(id *)(v20 + 32);
      goto LABEL_6;
    }
    __break(1u);
    goto LABEL_29;
  }
  id v21 = (id)sub_10007D160();
LABEL_6:
  uint64_t v22 = v21;
  swift_bridgeObjectRelease();
  id v23 = [self sharedWidget];
  unsigned __int8 v24 = [v23 hidesObject:v22];

  if ((v24 & 1) == 0)
  {
    self;
    uint64_t v31 = swift_dynamicCastObjCClass();
    if (v31)
    {
      uint64_t v32 = (void *)v31;
      id v33 = v22;
      uint64_t v34 = v55;
      sub_100073690(v32, 1, 0, 0, 255, v55);

      uint64_t v35 = type metadata accessor for Note();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v34, 0, 1, v35);
    }
    if (qword_1000A3240 != -1) {
      swift_once();
    }
    uint64_t v37 = sub_10007C2E0();
    sub_100010740(v37, (uint64_t)qword_1000A6108);
    id v38 = v22;
    uint64_t v39 = sub_10007C2D0();
    os_log_type_t v40 = sub_10007D060();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      uint64_t v42 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v41 = 138412290;
      id v43 = [v38 objectID];
      uint64_t v57 = (uint64_t)v43;
      sub_10007D0F0();
      *uint64_t v42 = v43;

      _os_log_impl((void *)&_mh_execute_header, v39, v40, "Unknown note object type — returning nil {objectID: %@}", v41, 0xCu);
      sub_100008FA4(&qword_1000A3648);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    goto LABEL_25;
  }
  if (qword_1000A3240 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_10007C2E0();
  sub_100010740(v25, (uint64_t)qword_1000A6108);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, v5);
  uint64_t v26 = sub_10007C2D0();
  os_log_type_t v27 = sub_10007D040();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    uint64_t v53 = swift_slowAlloc();
    uint64_t v57 = v53;
    *(_DWORD *)uint64_t v28 = 136315138;
    uint64_t v52 = v28 + 4;
    sub_100011FDC(&qword_1000A3640);
    uint64_t v29 = sub_10007D230();
    uint64_t v56 = sub_100037524(v29, v30, &v57);
    sub_10007D0F0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "Widget hides object for note URL — returning nil {noteURL: %s}", v28, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

LABEL_25:
    goto LABEL_26;
  }

  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
LABEL_26:
  uint64_t v51 = type metadata accessor for Note();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v55, 1, 1, v51);
}

uint64_t sub_10007596C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v78 = a3;
  uint64_t v5 = sub_100008FA4(&qword_1000A3270);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10007C110();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v77 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v75 = (char *)&v73 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  id v16 = (char *)&v73 - v15;
  __chkstk_darwin(v14);
  os_log_type_t v76 = (char *)&v73 - v17;
  id v18 = self;
  sub_10007C0D0(v19);
  id v21 = v20;
  id v22 = [v18 objectIDURIRepresentationForHTMLNoteMentionedInURL:v20];

  if (!v22)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    uint64_t v24 = v8;
    goto LABEL_14;
  }
  sub_10007C0E0();

  id v23 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v23(v7, v16, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  uint64_t v24 = v8;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
LABEL_14:
    sub_10000CBC8((uint64_t)v7, &qword_1000A3270);
LABEL_18:
    uint64_t v49 = v77;
    if (qword_1000A3240 != -1) {
      swift_once();
    }
    uint64_t v50 = sub_10007C2E0();
    sub_100010740(v50, (uint64_t)qword_1000A6108);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v49, a1, v24);
    uint64_t v51 = sub_10007C2D0();
    os_log_type_t v52 = sub_10007D060();
    if (os_log_type_enabled(v51, v52))
    {
      uint64_t v53 = (uint8_t *)swift_slowAlloc();
      id v81 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v53 = 136315138;
      uint64_t v77 = (char *)(v53 + 4);
      sub_100011FDC(&qword_1000A3640);
      uint64_t v54 = sub_10007D230();
      uint64_t v80 = sub_100037524(v54, v55, (uint64_t *)&v81);
      sub_10007D0F0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v49, v24);
      _os_log_impl((void *)&_mh_execute_header, v51, v52, "Cannot find HTML object for note URL — returning nil {noteURL: %s}", v53, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v49, v24);
    }

    goto LABEL_24;
  }
  v23(v76, v7, v8);
  id v25 = [a2 managedObjectContext];
  if (!v25) {
    goto LABEL_17;
  }
  uint64_t v26 = v25;
  id v27 = [v25 persistentStoreCoordinator];

  if (!v27) {
    goto LABEL_17;
  }
  sub_10007C0D0(v28);
  unint64_t v30 = v29;
  uint64_t v31 = (char *)[v27 managedObjectIDForURIRepresentation:v29];

  if (!v31) {
    goto LABEL_17;
  }
  id v32 = [a2 managedObjectContext];
  if (!v32)
  {

LABEL_17:
    (*(void (**)(char *, uint64_t))(v9 + 8))(v76, v24);
    goto LABEL_18;
  }
  id v33 = v32;
  id v81 = 0;
  id v34 = [v32 existingObjectWithID:v31 error:&v81];

  id v35 = v81;
  if (!v34)
  {
    id v48 = v81;
    sub_10007C070();

    swift_willThrow();
    swift_errorRelease();
    uint64_t v79 = 0;
    goto LABEL_17;
  }
  uint64_t v36 = self;
  id v37 = v35;
  id v38 = [(id)v36 sharedWidget];
  LOBYTE(v36) = [v38 hidesObject:v34];

  if (v36)
  {
    if (qword_1000A3240 != -1) {
      swift_once();
    }
    uint64_t v39 = sub_10007C2E0();
    sub_100010740(v39, (uint64_t)qword_1000A6108);
    os_log_type_t v40 = v75;
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v75, a1, v24);
    uint64_t v41 = sub_10007C2D0();
    os_log_type_t v42 = sub_10007D040();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = swift_slowAlloc();
      id v74 = v34;
      uint64_t v44 = (uint8_t *)v43;
      uint64_t v73 = (void *)swift_slowAlloc();
      id v81 = v73;
      *(_DWORD *)uint64_t v44 = 136315138;
      uint64_t v77 = v31;
      sub_100011FDC(&qword_1000A3640);
      uint64_t v45 = sub_10007D230();
      uint64_t v80 = sub_100037524(v45, v46, (uint64_t *)&v81);
      sub_10007D0F0();
      swift_bridgeObjectRelease();
      os_log_type_t v47 = *(void (**)(char *, uint64_t))(v9 + 8);
      v47(v40, v24);
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "Widget hides HTML object for note URL — returning nil {noteURL: %s}", v44, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v47(v76, v24);
    }
    else
    {

      unint64_t v63 = *(void (**)(char *, uint64_t))(v9 + 8);
      v63(v40, v24);

      v63(v76, v24);
    }
LABEL_24:
    uint64_t v56 = type metadata accessor for Note();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v78, 1, 1, v56);
  }
  self;
  uint64_t v58 = swift_dynamicCastObjCClass();
  if (!v58)
  {
    if (qword_1000A3240 != -1) {
      swift_once();
    }
    uint64_t v64 = sub_10007C2E0();
    sub_100010740(v64, (uint64_t)qword_1000A6108);
    id v65 = v34;
    uint64_t v66 = sub_10007C2D0();
    os_log_type_t v67 = sub_10007D060();
    if (os_log_type_enabled(v66, v67))
    {
      uint64_t v77 = v31;
      id v68 = (uint8_t *)swift_slowAlloc();
      id v69 = (void *)swift_slowAlloc();
      *(_DWORD *)id v68 = 138412290;
      uint64_t v75 = (char *)(v68 + 4);
      uint64_t v70 = v9;
      uint64_t v71 = v24;
      id v72 = [v65 objectID];
      id v81 = v72;
      sub_10007D0F0();
      *id v69 = v72;
      uint64_t v24 = v71;
      uint64_t v9 = v70;
      uint64_t v31 = v77;

      _os_log_impl((void *)&_mh_execute_header, v66, v67, "Unknown HTML note object type — returning nil {objectID: %@}", v68, 0xCu);
      sub_100008FA4(&qword_1000A3648);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v76, v24);
    goto LABEL_24;
  }
  id v59 = (void *)v58;
  id v60 = v34;
  uint64_t v61 = v78;
  sub_100073F70(v59, v78);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v76, v24);
  uint64_t v62 = type metadata accessor for Note();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v61, 0, 1, v62);
}

uint64_t sub_1000763D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    goto LABEL_7;
  }
  if (!v2 || a1 == a2) {
    goto LABEL_6;
  }
  swift_retain();
  swift_retain();
  char v5 = sub_10007CB10();
  swift_release();
  swift_release();
  if ((v5 & 1) == 0)
  {
LABEL_7:
    char v6 = 0;
    return v6 & 1;
  }
  if (v2 == 1)
  {
LABEL_6:
    char v6 = 1;
    return v6 & 1;
  }
  uint64_t v8 = v2 - 2;
  uint64_t v9 = a1 + 40;
  uint64_t v10 = a2 + 40;
  do
  {
    v9 += 8;
    v10 += 8;
    swift_retain();
    swift_retain();
    char v6 = sub_10007CB10();
    swift_release();
    swift_release();
    BOOL v12 = v8-- != 0;
  }
  while ((v6 & 1) != 0 && v12);
  return v6 & 1;
}

char *sub_1000764CC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100008FA4(&qword_1000A61F0);
      uint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v13 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[16 * v8 + 32]) {
          memmove(v13, a4 + 32, 16 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_1000765DC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000765DC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_10007D210();
  __break(1u);
  return result;
}

uint64_t sub_1000766D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10007C110();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100008FA4(&qword_1000A3718);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100008FA4(&qword_1000A3270);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v46 - v16;
  __chkstk_darwin(v15);
  id v19 = (char *)&v46 - v18;
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (v20 = sub_10007D240(), char v21 = 0, (v20 & 1) != 0))
  {
    if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)
      || (v22 = sub_10007D240(), char v21 = 0, (v22 & 1) != 0))
    {
      if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40)
        || (v23 = sub_10007D240(), char v21 = 0, (v23 & 1) != 0))
      {
        if (*(void *)(a1 + 48) == *(void *)(a2 + 48) && *(void *)(a1 + 56) == *(void *)(a2 + 56)
          || (v24 = sub_10007D240(), char v21 = 0, (v24 & 1) != 0))
        {
          if (*(void *)(a1 + 64) == *(void *)(a2 + 64) && *(void *)(a1 + 72) == *(void *)(a2 + 72)
            || (v25 = sub_10007D240(), char v21 = 0, (v25 & 1) != 0))
          {
            if (*(unsigned __int8 *)(a1 + 80) != *(unsigned __int8 *)(a2 + 80)) {
              goto LABEL_17;
            }
            uint64_t v27 = *(void *)(a1 + 96);
            uint64_t v28 = *(void *)(a2 + 96);
            if (!v27)
            {
              if (v28) {
                goto LABEL_17;
              }
              goto LABEL_26;
            }
            if (!v28) {
              goto LABEL_17;
            }
            if (*(void *)(a1 + 88) == *(void *)(a2 + 88) && v27 == v28
              || (v29 = sub_10007D240(), char v21 = 0, (v29 & 1) != 0))
            {
LABEL_26:
              uint64_t v30 = type metadata accessor for Note();
              uint64_t v49 = v5;
              uint64_t v31 = v30;
              sub_100011F74(a1 + *(int *)(v30 + 44), (uint64_t)v19);
              os_log_type_t v47 = (int *)v31;
              sub_100011F74(a2 + *(int *)(v31 + 44), (uint64_t)v17);
              uint64_t v32 = (uint64_t)&v10[*(int *)(v8 + 48)];
              sub_100011F74((uint64_t)v19, (uint64_t)v10);
              uint64_t v48 = v32;
              sub_100011F74((uint64_t)v17, v32);
              id v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48);
              if (v33((uint64_t)v10, 1, v4) == 1)
              {
                sub_10000CBC8((uint64_t)v17, &qword_1000A3270);
                sub_10000CBC8((uint64_t)v19, &qword_1000A3270);
                if (v33(v48, 1, v4) == 1)
                {
                  sub_10000CBC8((uint64_t)v10, &qword_1000A3270);
LABEL_33:
                  uint64_t v36 = v47;
                  uint64_t v37 = v47[12];
                  uint64_t v38 = *(void *)(a2 + v37);
                  if (*(void *)(a1 + v37))
                  {
                    if (!v38) {
                      goto LABEL_17;
                    }
                    swift_retain();
                    swift_retain();
                    char v39 = sub_10007CB10();
                    swift_release();
                    swift_release();
                    if ((v39 & 1) == 0) {
                      goto LABEL_17;
                    }
                  }
                  else if (v38)
                  {
                    goto LABEL_17;
                  }
                  if (sub_1000763D0(*(void *)(a1 + v36[13]), *(void *)(a2 + v36[13])))
                  {
                    uint64_t v40 = v36[14];
                    uint64_t v41 = *(void *)(a2 + v40);
                    if (*(void *)(a1 + v40))
                    {
                      if (!v41) {
                        goto LABEL_17;
                      }
                      swift_retain();
                      swift_retain();
                      char v42 = sub_10007CB10();
                      swift_release();
                      swift_release();
                      if ((v42 & 1) == 0) {
                        goto LABEL_17;
                      }
                    }
                    else if (v41)
                    {
                      goto LABEL_17;
                    }
                    uint64_t v43 = v36[15];
                    uint64_t v44 = *(void *)(a2 + v43);
                    if (*(void *)(a1 + v43))
                    {
                      if (!v44) {
                        goto LABEL_17;
                      }
                      swift_retain();
                      swift_retain();
                      char v45 = sub_10007CB10();
                      swift_release();
                      swift_release();
                      if ((v45 & 1) == 0) {
                        goto LABEL_17;
                      }
                    }
                    else if (v44)
                    {
                      goto LABEL_17;
                    }
                    char v21 = *(unsigned char *)(a1 + v36[16]) ^ *(unsigned char *)(a2 + v36[16]) ^ 1;
                    return v21 & 1;
                  }
LABEL_17:
                  char v21 = 0;
                  return v21 & 1;
                }
              }
              else
              {
                sub_100011F74((uint64_t)v10, (uint64_t)v14);
                if (v33(v48, 1, v4) != 1)
                {
                  uint64_t v34 = v49;
                  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 32))(v7, v48, v4);
                  sub_100011FDC(&qword_1000A3720);
                  LODWORD(v48) = sub_10007CF00();
                  id v35 = *(void (**)(char *, uint64_t))(v34 + 8);
                  v35(v7, v4);
                  sub_10000CBC8((uint64_t)v17, &qword_1000A3270);
                  sub_10000CBC8((uint64_t)v19, &qword_1000A3270);
                  v35(v14, v4);
                  sub_10000CBC8((uint64_t)v10, &qword_1000A3270);
                  if ((v48 & 1) == 0) {
                    goto LABEL_17;
                  }
                  goto LABEL_33;
                }
                sub_10000CBC8((uint64_t)v17, &qword_1000A3270);
                sub_10000CBC8((uint64_t)v19, &qword_1000A3270);
                (*(void (**)(char *, uint64_t))(v49 + 8))(v14, v4);
              }
              sub_10000CBC8((uint64_t)v10, &qword_1000A3718);
              goto LABEL_17;
            }
          }
        }
      }
    }
  }
  return v21 & 1;
}

uint64_t sub_100076CB0(void *a1)
{
  uint64_t v2 = sub_100008FA4(&qword_1000A3270);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10007C110();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v45 - v10;
  [a1 updateThumbnailAttachmentIdentifier];
  id v12 = [a1 managedObjectContext];
  if (!v12) {
    return 0;
  }
  uint64_t v13 = v12;
  id v14 = [a1 thumbnailAttachmentIdentifier];
  if (!v14) {
    goto LABEL_23;
  }
  uint64_t v15 = v14;
  sub_100011278(0, &qword_1000A6120);
  id v16 = [(id)swift_getObjCClassFromMetadata() cloudObjectWithIdentifier:v15 context:v13];

  if (!v16) {
    goto LABEL_23;
  }
  if (qword_1000A3230 != -1) {
    swift_once();
  }
  long long v17 = xmmword_1000B2460;
  uint64_t v18 = self;
  [v18 ic_scale];
  id v20 = [v16 attachmentPreviewImageWithMinSize:v17 scale:v19];
  if (!v20)
  {
    if (qword_1000A3240 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_10007C2E0();
    sub_100010740(v31, (uint64_t)qword_1000A6108);
    id v32 = v16;
    id v33 = sub_10007C2D0();
    os_log_type_t v34 = sub_10007D060();
    if (os_log_type_enabled(v33, v34))
    {
      id v35 = (uint8_t *)swift_slowAlloc();
      uint64_t v36 = (void *)swift_slowAlloc();
      *(_DWORD *)id v35 = 138412290;
      id v37 = [v32 objectID];
      id v46 = v37;
      sub_10007D0F0();
      *uint64_t v36 = v37;

      _os_log_impl((void *)&_mh_execute_header, v33, v34, "Cannot create preview image for attachment — returning nil preview image {objectID: %@}", v35, 0xCu);
      sub_100008FA4(&qword_1000A3648);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

LABEL_23:
      return 0;
    }

LABEL_22:
    goto LABEL_23;
  }
  id v45 = v20;
  id v21 = [v20 previewImageURL];
  if (!v21)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    goto LABEL_16;
  }
  char v22 = v21;
  sub_10007C0E0();

  char v23 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v23(v4, v9, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
LABEL_16:
    sub_10000CBC8((uint64_t)v4, &qword_1000A3270);
    if (qword_1000A3240 != -1) {
      swift_once();
    }
    uint64_t v38 = sub_10007C2E0();
    sub_100010740(v38, (uint64_t)qword_1000A6108);
    id v32 = v16;
    char v39 = sub_10007C2D0();
    os_log_type_t v40 = sub_10007D060();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      char v42 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v41 = 138412290;
      id v43 = [v32 objectID];
      id v46 = v43;
      sub_10007D0F0();
      *char v42 = v43;

      _os_log_impl((void *)&_mh_execute_header, v39, v40, "Cannot get previewImageURL for preview image - returning nil preview image {objectID: %@}", v41, 0xCu);
      sub_100008FA4(&qword_1000A3648);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      goto LABEL_23;
    }

    goto LABEL_22;
  }
  v23(v11, v4, v5);
  sub_10007C0F0();
  id v24 = objc_allocWithZone((Class)UIImage);
  NSString v25 = sub_10007CF30();
  swift_bridgeObjectRelease();
  id v26 = [v24 initWithContentsOfFile:v25];

  if (!v26)
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    return 0;
  }
  double v27 = *((double *)&xmmword_1000B2460 + 1);
  [v18 ic_scale];
  id v29 = [v26 ic_scaledImageMinDimension:v27 scale:v28];
  uint64_t v30 = sub_10007CAD0();

  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  return v30;
}

uint64_t sub_1000773B0(void *a1)
{
  uint64_t v2 = sub_10007C2A0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = 0;
  if ([a1 isSystemPaper])
  {
    sub_10007C280();
    sub_10007C260();
    id v7 = [a1 account];
    uint64_t v8 = v7;
    if (v7)
    {
      id v9 = [v7 identifier];

      if (v9)
      {
        sub_10007CF40();
      }
    }
    id v10 = [a1 identifier];
    if (v10)
    {
      uint64_t v11 = v10;
      sub_10007CF40();
    }
    sub_10007C270();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10007C290();
    uint64_t v6 = sub_10007CAD0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v6;
}

uint64_t type metadata accessor for Note()
{
  uint64_t result = qword_1000A6180;
  if (!qword_1000A6180) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000777B0(id a1, char a2)
{
  if (a2 != -1) {
}
  }

uint64_t sub_1000777C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Note();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100077828@<X0>(uint64_t a1@<X8>)
{
  return sub_10007596C(*(void *)(v1 + 16), *(void **)(v1 + 24), a1);
}

uint64_t sub_100077844@<X0>(uint64_t a1@<X8>)
{
  return sub_10007510C(*(void *)(v1 + 16), *(void **)(v1 + 24), a1);
}

uint64_t sub_100077860(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *(void *)a1 = *a2;
    uint64_t v4 = v17 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v9;
    uint64_t v10 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v10;
    uint64_t v11 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v11;
    *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
    uint64_t v12 = a2[12];
    uint64_t v13 = a3[11];
    char v23 = (char *)a2 + v13;
    __dst = (void *)(a1 + v13);
    *(void *)(a1 + 88) = a2[11];
    *(void *)(a1 + 96) = v12;
    uint64_t v14 = sub_10007C110();
    uint64_t v21 = *(void *)(v14 - 8);
    char v22 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48);
    uint64_t v15 = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v22(v23, 1, v15))
    {
      uint64_t v16 = sub_100008FA4(&qword_1000A3270);
      memcpy(__dst, v23, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v21 + 16))(__dst, v23, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v15);
    }
    uint64_t v18 = a3[13];
    *(void *)(v4 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
    *(void *)(v4 + v18) = *(uint64_t *)((char *)a2 + v18);
    uint64_t v19 = a3[15];
    *(void *)(v4 + a3[14]) = *(uint64_t *)((char *)a2 + a3[14]);
    *(void *)(v4 + v19) = *(uint64_t *)((char *)a2 + v19);
    *(unsigned char *)(v4 + a3[16]) = *((unsigned char *)a2 + a3[16]);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_100077AA8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 44);
  uint64_t v5 = sub_10007C110();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_release();
}

uint64_t sub_100077BC4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v9;
  uint64_t v10 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v10;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v11 = *(void *)(a2 + 96);
  uint64_t v12 = a3[11];
  uint64_t v21 = (const void *)(a2 + v12);
  __dst = (void *)(a1 + v12);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v11;
  uint64_t v13 = sub_10007C110();
  uint64_t v19 = *(void *)(v13 - 8);
  id v20 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48);
  uint64_t v14 = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v20(v21, 1, v14))
  {
    uint64_t v15 = sub_100008FA4(&qword_1000A3270);
    memcpy(__dst, v21, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v19 + 16))(__dst, v21, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v14);
  }
  uint64_t v16 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  uint64_t v17 = a3[15];
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_100077DC0(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[11];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_10007C110();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_100008FA4(&qword_1000A3270);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  return a1;
}

uint64_t sub_100078084(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v8 = a3[11];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  uint64_t v11 = sub_10007C110();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_100008FA4(&qword_1000A3270);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v14 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  uint64_t v15 = a3[15];
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  return a1;
}

uint64_t sub_1000781FC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v11 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[11];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = sub_10007C110();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 40))(v13, v14, v15);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    uint64_t v20 = sub_100008FA4(&qword_1000A3270);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 32))(v13, v14, v15);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_7:
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_release();
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_release();
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  swift_release();
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  return a1;
}

uint64_t sub_100078440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100078454);
}

uint64_t sub_100078454(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100008FA4(&qword_1000A3270);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 44);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100078508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10007851C);
}

uint64_t sub_10007851C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100008FA4(&qword_1000A3270);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 44);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1000785C8()
{
  sub_100011F10();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_10007869C()
{
  unint64_t result = qword_1000A6208;
  if (!qword_1000A6208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A6208);
  }
  return result;
}

unint64_t sub_1000786F4()
{
  unint64_t result = qword_1000A6210;
  if (!qword_1000A6210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A6210);
  }
  return result;
}

uint64_t sub_100078748()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100078764()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1000787B4()
{
  unint64_t result = qword_1000A6218;
  if (!qword_1000A6218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A6218);
  }
  return result;
}

uint64_t sub_100078808@<X0>(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v1 = sub_10007C0A0();
  uint64_t v25 = *(void *)(v1 - 8);
  uint64_t v26 = v1;
  __chkstk_darwin(v1);
  id v24 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100008FA4(&qword_1000A6238);
  uint64_t v20 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100008FA4(&qword_1000A6240);
  uint64_t v21 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100008FA4(&qword_1000A6248);
  uint64_t v22 = *(void *)(v9 - 8);
  uint64_t v23 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_100008FA4(&qword_1000A6250);
  uint64_t v12 = sub_10000A43C(&qword_1000A6258);
  uint64_t v13 = sub_10000CAB4(&qword_1000A6260, &qword_1000A6258);
  uint64_t v28 = v12;
  uint64_t v29 = v13;
  swift_getOpaqueTypeConformance2();
  sub_10007CE50();
  if (qword_1000A3248 != -1) {
    swift_once();
  }
  uint64_t v14 = v26;
  sub_100010740(v26, (uint64_t)qword_1000B2470);
  uint64_t v15 = sub_10000CAB4(&qword_1000A6268, &qword_1000A6238);
  sub_10007C6D0();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v3);
  uint64_t v16 = v24;
  sub_10007C080();
  uint64_t v28 = v3;
  uint64_t v29 = v15;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_10007C6C0();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v16, v14);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v6);
  uint64_t v28 = v6;
  uint64_t v29 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v18 = v23;
  sub_10007C6E0();
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v11, v18);
}

uint64_t sub_100078C80()
{
  uint64_t v0 = sub_100008FA4(&qword_1000A6258);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008FA4(&qword_1000A6270);
  sub_10000CAB4(&qword_1000A6278, &qword_1000A6270);
  sub_1000787B4();
  sub_10007CCB0();
  sub_10007CA60();
  sub_10000CAB4(&qword_1000A6260, &qword_1000A6258);
  sub_10007C660();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_100078E14()
{
  return Label.init(title:icon:)(sub_100078E68, 0, sub_100078F80, 0, &type metadata for Text, &type metadata for Image, &protocol witness table for Text, &protocol witness table for Image);
}

uint64_t sub_100078E68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10007C0A0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000A3248 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_100010740(v2, (uint64_t)qword_1000B2470);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  uint64_t result = sub_10007C8B0();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v8;
  *(unsigned char *)(a1 + 16) = v9 & 1;
  *(void *)(a1 + 24) = v10;
  return result;
}

uint64_t sub_100078F80@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10007CB00();
  *a1 = result;
  return result;
}

uint64_t sub_100078FC4()
{
  uint64_t v0 = sub_10007C090();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10007C1A0();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_10007CF20();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = sub_10007C0A0();
  sub_1000112B4(v6, qword_1000B2470);
  sub_100010740(v6, (uint64_t)qword_1000B2470);
  sub_10007CF10();
  sub_10007C190();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return sub_10007C0B0();
}

uint64_t sub_1000791A4@<X0>(uint64_t a1@<X8>)
{
  if (qword_1000A3248 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10007C0A0();
  uint64_t v3 = sub_100010740(v2, (uint64_t)qword_1000B2470);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_100079250(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_100079270, 0, 0);
}

uint64_t sub_100079270()
{
  id v1 = [self sharedInstance];
  [v1 activateRemoteAlert];

  sub_10007BD00();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10007930C(uint64_t a1)
{
  unint64_t v2 = sub_1000787B4();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for QuickNoteIntent()
{
  return &type metadata for QuickNoteIntent;
}

uint64_t sub_100079358()
{
  return sub_10000CAB4(&qword_1000A6228, &qword_1000A6230);
}

ValueMetadata *type metadata accessor for QuickNoteControl()
{
  return &type metadata for QuickNoteControl;
}

uint64_t sub_1000793A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000793C0()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1000794B4()
{
  unint64_t result = qword_1000A62A0;
  if (!qword_1000A62A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A62A0);
  }
  return result;
}

unint64_t sub_10007950C()
{
  unint64_t result = qword_1000A62A8;
  if (!qword_1000A62A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A62A8);
  }
  return result;
}

uint64_t sub_100079560()
{
  uint64_t v0 = sub_100008FA4(&qword_1000A3908);
  __chkstk_darwin(v0 - 8);
  unint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_10007C090();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10007C1A0();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_10007CF20();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_10007C0A0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_10007C050();
  sub_1000112B4(v10, qword_1000B2488);
  sub_100010740(v10, (uint64_t)qword_1000B2488);
  sub_10007CF10();
  sub_10007C190();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_10007C0B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_10007C040();
}

uint64_t sub_100079830@<X0>(uint64_t a1@<X8>)
{
  v41[7] = a1;
  uint64_t v1 = sub_100008FA4(&qword_1000A3970);
  __chkstk_darwin(v1 - 8);
  id v45 = (char *)v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100008FA4(&qword_1000A3908);
  __chkstk_darwin(v3 - 8);
  id v46 = (char *)v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10007C090();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10007C1A0();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_10007CF20();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = sub_10007C0A0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  v41[6] = (char *)v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v41[5] = (char *)v41 - v15;
  sub_10007CF10();
  sub_10007C190();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v18 = v6 + 104;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  v17(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  os_log_type_t v47 = v17;
  void v41[2] = v18;
  sub_10007C0B0();
  sub_10007CF10();
  sub_10007C190();
  v17(v8, v16, v5);
  int v19 = v46;
  sub_10007C0B0();
  uint64_t v20 = *(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56);
  v12 += 56;
  v20(v19, 0, 1, v11);
  id v21 = (id)ICNotesAppBundleIdentifier();
  sub_10007CF40();

  uint64_t v22 = v45;
  sub_10007BEF0();
  uint64_t v23 = sub_10007BF00();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 0, 1, v23);
  sub_100008FA4(&qword_1000A3978);
  uint64_t v24 = *(void *)(v12 + 16);
  unint64_t v25 = (*(unsigned __int8 *)(v12 + 24) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 24);
  v41[3] = 8 * v24;
  uint64_t v26 = swift_allocObject();
  v41[4] = v26;
  *(_OWORD *)(v26 + 16) = xmmword_1000860F0;
  unint64_t v27 = v26 + v25;
  sub_10007CF10();
  sub_10007C190();
  uint64_t v28 = v16;
  unsigned int v43 = v16;
  uint64_t v29 = v16;
  uint64_t v30 = v47;
  v47(v8, v29, v5);
  sub_10007C0B0();
  sub_10007CF10();
  sub_10007C190();
  v30(v8, v28, v5);
  uint64_t v31 = v30;
  sub_10007C0B0();
  v41[0] = v27 + 2 * v24;
  sub_10007CF10();
  sub_10007C190();
  uint64_t v32 = v43;
  v31(v8, v43, v5);
  sub_10007C0B0();
  v41[1] = v24;
  unint64_t v44 = v27;
  sub_10007CF10();
  sub_10007C190();
  uint64_t v33 = v32;
  uint64_t v34 = v5;
  uint64_t v42 = v5;
  id v35 = v47;
  v47(v8, v33, v5);
  sub_10007C0B0();
  sub_10007CF10();
  sub_10007C190();
  uint64_t v36 = v43;
  v35(v8, v43, v34);
  sub_10007C0B0();
  sub_10007CF10();
  sub_10007C190();
  uint64_t v37 = v42;
  v35(v8, v36, v42);
  sub_10007C0B0();
  sub_10007CF10();
  sub_10007C190();
  v35(v8, v36, v37);
  sub_10007C0B0();
  sub_10007CF10();
  sub_10007C190();
  uint64_t v38 = v42;
  v35(v8, v36, v42);
  sub_10007C0B0();
  sub_10007CF10();
  sub_10007C190();
  char v39 = v47;
  v47(v8, v36, v38);
  sub_10007C0B0();
  sub_10007CF10();
  sub_10007C190();
  v39(v8, v36, v38);
  sub_10007C0B0();
  return sub_10007BF10();
}

uint64_t sub_10007A164()
{
  uint64_t v0 = qword_1000A6280;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_10007A1A0()
{
  unint64_t result = qword_1000A62B0;
  if (!qword_1000A62B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A62B0);
  }
  return result;
}

uint64_t sub_10007A1F4(uint64_t a1)
{
  unint64_t v2 = sub_1000794B4();

  return EntityURLRepresentation.init(stringLiteral:)(0xD000000000000043, 0x8000000100089370, a1, v2);
}

unint64_t sub_10007A254()
{
  unint64_t result = qword_1000A62B8;
  if (!qword_1000A62B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A62B8);
  }
  return result;
}

unint64_t sub_10007A2AC()
{
  unint64_t result = qword_1000A62C0;
  if (!qword_1000A62C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A62C0);
  }
  return result;
}

unint64_t sub_10007A304()
{
  unint64_t result = qword_1000A62C8;
  if (!qword_1000A62C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A62C8);
  }
  return result;
}

unint64_t sub_10007A35C()
{
  unint64_t result = qword_1000A62D0;
  if (!qword_1000A62D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A62D0);
  }
  return result;
}

uint64_t sub_10007A3B0()
{
  sub_10007B4C8();
  uint64_t v2 = sub_10007BF70();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_100016C54(v3, v0, v2, v1);
}

unint64_t sub_10007A448()
{
  unint64_t result = qword_1000A62E0;
  if (!qword_1000A62E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A62E0);
  }
  return result;
}

unint64_t sub_10007A4A0()
{
  unint64_t result = qword_1000A62E8;
  if (!qword_1000A62E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A62E8);
  }
  return result;
}

unint64_t sub_10007A4F8()
{
  unint64_t result = qword_1000A62F0;
  if (!qword_1000A62F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A62F0);
  }
  return result;
}

unint64_t sub_10007A550()
{
  unint64_t result = qword_1000A62F8;
  if (!qword_1000A62F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A62F8);
  }
  return result;
}

uint64_t sub_10007A5A4@<X0>(uint64_t *a1@<X8>)
{
  sub_10007A7CC();
  uint64_t result = sub_10007BD10();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10007A5E4@<X0>(uint64_t a1@<X8>)
{
  return sub_100018DD0(&qword_1000A3250, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1000B2488, a1);
}

unint64_t sub_10007A620()
{
  unint64_t result = qword_1000A6300;
  if (!qword_1000A6300)
  {
    sub_10000A43C(&qword_1000A6308);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A6300);
  }
  return result;
}

uint64_t sub_10007A67C(uint64_t a1)
{
  unint64_t v2 = sub_1000794B4();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10007A6CC()
{
  unint64_t result = qword_1000A6310;
  if (!qword_1000A6310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A6310);
  }
  return result;
}

uint64_t sub_10007A724(uint64_t a1)
{
  unint64_t v2 = sub_10007A550();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_10007A774()
{
  unint64_t result = qword_1000A6318;
  if (!qword_1000A6318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A6318);
  }
  return result;
}

unint64_t sub_10007A7CC()
{
  unint64_t result = qword_1000A6320[0];
  if (!qword_1000A6320[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000A6320);
  }
  return result;
}

uint64_t sub_10007A820()
{
  return _swift_task_switch(sub_10007A83C, 0, 0);
}

uint64_t sub_10007A83C()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10007A854(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10007950C();
  *uint64_t v4 = v2;
  v4[1] = sub_100014848;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_10007A908()
{
  unint64_t result = qword_1000A6338;
  if (!qword_1000A6338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A6338);
  }
  return result;
}

unint64_t sub_10007A960()
{
  unint64_t result = qword_1000A6340[0];
  if (!qword_1000A6340[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000A6340);
  }
  return result;
}

uint64_t sub_10007A9B4(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10007950C();
  void *v5 = v2;
  v5[1] = sub_100014A10;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_10007AA68(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10007950C();
  *uint64_t v4 = v2;
  v4[1] = sub_100016CEC;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_10007AB1C()
{
  unint64_t result = qword_1000A6358;
  if (!qword_1000A6358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A6358);
  }
  return result;
}

unint64_t sub_10007AB74()
{
  unint64_t result = qword_1000A6360;
  if (!qword_1000A6360)
  {
    sub_10000A43C(qword_1000A6368);
    sub_10007A4F8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A6360);
  }
  return result;
}

uint64_t sub_10007ABE8(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10007A35C();
  void *v5 = v2;
  v5[1] = sub_1000130F0;
  return EntityQuery.results()(a1, a2, v6);
}

unint64_t sub_10007ACA0()
{
  unint64_t result = qword_1000A6380;
  if (!qword_1000A6380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A6380);
  }
  return result;
}

uint64_t sub_10007ACF4()
{
  uint64_t v0 = sub_10007C0A0();
  sub_1000112B4(v0, qword_1000B24A0);
  sub_100010740(v0, (uint64_t)qword_1000B24A0);
  return sub_10007C080();
}

uint64_t sub_10007AD58()
{
  return sub_10007BD30();
}

uint64_t sub_10007AD7C()
{
  return sub_10007BD40();
}

unint64_t sub_10007ADA4()
{
  unint64_t result = qword_1000A6388;
  if (!qword_1000A6388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A6388);
  }
  return result;
}

uint64_t sub_10007ADF8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_10007B420();
  unint64_t v5 = sub_10007B4C8();

  return static URLRepresentableIntent<>.urlRepresentation.getter(a1, v4, a2, v5);
}

uint64_t sub_10007AE60()
{
  uint64_t v0 = qword_1000A6290;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_10007AE9C()
{
  unint64_t result = qword_1000A6390;
  if (!qword_1000A6390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A6390);
  }
  return result;
}

unint64_t sub_10007AEF4()
{
  unint64_t result = qword_1000A6398;
  if (!qword_1000A6398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A6398);
  }
  return result;
}

uint64_t sub_10007AF48()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10007AF98@<X0>(uint64_t a1@<X8>)
{
  return sub_100018DD0(&qword_1000A3258, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1000B24A0, a1);
}

uint64_t sub_10007AFD0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  unint64_t v5 = sub_10007B420();
  unint64_t v6 = sub_10007B474();
  unint64_t v7 = sub_10007B4C8();
  *unint64_t v4 = v2;
  v4[1] = sub_100015130;
  return URLRepresentableIntent<>.perform()(a2, v5, v6, v7);
}

uint64_t sub_10007B09C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10007B130();
  *a1 = result;
  return result;
}

uint64_t sub_10007B0C4(uint64_t a1)
{
  unint64_t v2 = sub_10007ADA4();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenNotesSettingsDeepLink()
{
  return &type metadata for OpenNotesSettingsDeepLink;
}

ValueMetadata *type metadata accessor for NotesSettingsEntityQuery()
{
  return &type metadata for NotesSettingsEntityQuery;
}

ValueMetadata *type metadata accessor for NotesSettingsEntity()
{
  return &type metadata for NotesSettingsEntity;
}

uint64_t sub_10007B130()
{
  uint64_t v17 = sub_10007BFB0();
  uint64_t v0 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  unint64_t v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100008FA4(&qword_1000A3900);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  unint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v17 - v7;
  uint64_t v9 = sub_100008FA4(&qword_1000A3908);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10007C0A0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  sub_100008FA4(&qword_1000A63A8);
  sub_10007C080();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  char v18 = 1;
  uint64_t v14 = sub_10007BCF0();
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  v15(v8, 1, 1, v14);
  v15(v6, 1, 1, v14);
  (*(void (**)(char *, void, uint64_t))(v0 + 104))(v2, enum case for InputConnectionBehavior.default(_:), v17);
  sub_1000794B4();
  return sub_10007BD50();
}

unint64_t sub_10007B420()
{
  unint64_t result = qword_1000A63B0;
  if (!qword_1000A63B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A63B0);
  }
  return result;
}

unint64_t sub_10007B474()
{
  unint64_t result = qword_1000A63B8;
  if (!qword_1000A63B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A63B8);
  }
  return result;
}

unint64_t sub_10007B4C8()
{
  unint64_t result = qword_1000A63C0;
  if (!qword_1000A63C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A63C0);
  }
  return result;
}

uint64_t sub_10007B910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5, uint64_t a6)
{
  uint64_t v11 = a3;
  uint64_t v12 = a4();
  v9[0] = a5;
  v9[1] = a6;
  char v10 = 2;
  LOBYTE(a6) = sub_10007C250();
  sub_10000A340((uint64_t)v9);
  return a6 & 1;
}

id sub_10007B9B0()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return [super dealloc];
}

uint64_t type metadata accessor for ICFeatureFlags()
{
  return self;
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

void sub_10007BA30(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "-[ICSystemPaperControlCenterModule remoteAlertHandleDidActivate:]", v1, 2u);
}

void sub_10007BA74(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "-[ICSystemPaperControlCenterModule remoteAlertHandleDidDeactivate:]", v1, 2u);
}

void sub_10007BAB8(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "-[ICSystemPaperControlCenterModule remoteAlertHandle:didInvalidateWithError:] - error: %@", (uint8_t *)&v2, 0xCu);
}

void sub_10007BB30(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "-[ICSystemPaperControlCenterModule remoteAlertHandle:didInvalidateWithError:] - error: %@", (uint8_t *)&v2, 0xCu);
}

void sub_10007BBA8(void *a1, uint8_t *buf, os_log_t log)
{
  *(_DWORD *)buf = 138412290;
  *(void *)(buf + 4) = a1;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Unknown object type — returning nil {objectID: %@}", buf, 0xCu);
}

uint64_t sub_10007BC00()
{
  return static _AssistantIntentsProvider.uniqueEntities.getter();
}

uint64_t sub_10007BC20()
{
  return static _AppEntityUpdateResult.success.getter();
}

uint64_t sub_10007BC30()
{
  return type metadata accessor for _PrebuiltAppIntentError();
}

uint64_t sub_10007BC40()
{
  return static AppIntentInternal.sideEffect.getter();
}

uint64_t sub_10007BC50()
{
  return static AppIntentInternal.shortcutsMetadata.getter();
}

uint64_t sub_10007BC90()
{
  return static AppIntent.openAppWhenRun.getter();
}

uint64_t sub_10007BCA0()
{
  return static AppIntent.description.getter();
}

uint64_t sub_10007BCB0()
{
  return static AppIntent.parameterSummary.getter();
}

uint64_t sub_10007BCC0()
{
  return static AppIntent.authenticationPolicy.getter();
}

uint64_t sub_10007BCF0()
{
  return type metadata accessor for IntentDialog();
}

uint64_t sub_10007BD00()
{
  return static IntentResult.result<>()();
}

uint64_t sub_10007BD10()
{
  return _UniqueEntity.id.getter();
}

uint64_t sub_10007BD20()
{
  return IntentParameter.wrappedValue.modify();
}

uint64_t sub_10007BD30()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_10007BD40()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t sub_10007BD50()
{
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

uint64_t sub_10007BD60()
{
  return static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildBlock(_:)();
}

uint64_t sub_10007BD70()
{
  return static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildExpression(_:)();
}

uint64_t sub_10007BD80()
{
  return _AssistantIntent.NegativeAssistantIntentPhrases.init<A>(for:phrases:)();
}

uint64_t sub_10007BD90()
{
  return type metadata accessor for _AssistantIntent.NegativeAssistantIntentPhrases();
}

uint64_t sub_10007BDA0()
{
  return type metadata accessor for _AssistantIntent.PhraseToken();
}

uint64_t sub_10007BDB0()
{
  return static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
}

uint64_t sub_10007BDC0()
{
  return static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
}

uint64_t sub_10007BDD0()
{
  return static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
}

uint64_t sub_10007BDE0()
{
  return static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
}

uint64_t sub_10007BDF0()
{
  return static _AssistantIntent.ParameterValueBuilder.buildBlock()();
}

uint64_t sub_10007BE00()
{
  return _AssistantIntent.Phrase.init(stringLiteral:)();
}

uint64_t sub_10007BE10()
{
  return _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
}

void sub_10007BE20(Swift::String a1)
{
}

uint64_t sub_10007BE30()
{
  return _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t sub_10007BE40()
{
  return _AssistantIntent.Phrase.init(stringInterpolation:)();
}

uint64_t sub_10007BE50()
{
  return static _AssistantIntent.Builder.buildBlock(_:)();
}

uint64_t sub_10007BE60()
{
  return static _AssistantIntent.Builder.buildExpression(_:)();
}

uint64_t sub_10007BE70()
{
  return type metadata accessor for _AssistantIntent();
}

uint64_t sub_10007BE80()
{
  return _AssistantIntent.init<A>(_:phrases:parameterValues:)();
}

uint64_t sub_10007BEC0()
{
  return static _UnrecoverableError.unknownError.getter();
}

uint64_t sub_10007BED0()
{
  return static _UnrecoverableError.unsupportedOnDevice.getter();
}

uint64_t sub_10007BEE0()
{
  return static _UnrecoverableError.featureCurrentlyRestricted.getter();
}

uint64_t sub_10007BEF0()
{
  return DisplayRepresentation.Image.init(appBundleIdentifier:)();
}

uint64_t sub_10007BF00()
{
  return type metadata accessor for DisplayRepresentation.Image();
}

uint64_t sub_10007BF10()
{
  return DisplayRepresentation.init(title:subtitle:image:synonyms:descriptionText:)();
}

uint64_t sub_10007BF20()
{
  return DisplayRepresentation.init(title:subtitle:image:)();
}

uint64_t sub_10007BF30()
{
  return type metadata accessor for DisplayRepresentation();
}

uint64_t sub_10007BF40()
{
  return static EnumerableEntityQuery.findIntentDescription.getter();
}

uint64_t sub_10007BF60()
{
  return static DynamicOptionsProvider.useForParameterResolution.getter();
}

uint64_t sub_10007BF70()
{
  return URLRepresentableEntity.urlRepresentationParameter.getter();
}

uint64_t sub_10007BFB0()
{
  return type metadata accessor for InputConnectionBehavior();
}

uint64_t sub_10007BFC0()
{
  return _URLRepresentableEntity.urlRepresentationParameter.getter();
}

uint64_t sub_10007C000()
{
  return static PersistentlyIdentifiable.persistentIdentifier.getter();
}

uint64_t sub_10007C020()
{
  return _UpdatableEntityProperty.projectedValue.getter();
}

uint64_t sub_10007C030()
{
  return _UpdatableEntityProperty<>.init(title:_get:_set:)();
}

uint64_t sub_10007C040()
{
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t sub_10007C050()
{
  return type metadata accessor for TypeDisplayRepresentation();
}

uint64_t sub_10007C070()
{
  return _convertNSErrorToError(_:)();
}

uint64_t sub_10007C080()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t sub_10007C090()
{
  return type metadata accessor for LocalizedStringResource.BundleDescription();
}

uint64_t sub_10007C0A0()
{
  return type metadata accessor for LocalizedStringResource();
}

uint64_t sub_10007C0B0()
{
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t sub_10007C0C0()
{
  return URL.absoluteString.getter();
}

void sub_10007C0D0(NSURL *retstr@<X8>)
{
}

uint64_t sub_10007C0E0()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10007C0F0()
{
  return URL.path.getter();
}

uint64_t sub_10007C100()
{
  return URL.init(string:)();
}

uint64_t sub_10007C110()
{
  return type metadata accessor for URL();
}

uint64_t sub_10007C120()
{
  return Date.briefFormattedDate.getter();
}

uint64_t sub_10007C130()
{
  return static Date._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10007C140()
{
  return Date.init()();
}

uint64_t sub_10007C150()
{
  return type metadata accessor for Date();
}

uint64_t sub_10007C160()
{
  return UUID.uuidString.getter();
}

uint64_t sub_10007C170()
{
  return UUID.init()();
}

uint64_t sub_10007C180()
{
  return type metadata accessor for UUID();
}

uint64_t sub_10007C190()
{
  return static Locale.current.getter();
}

uint64_t sub_10007C1A0()
{
  return type metadata accessor for Locale();
}

uint64_t sub_10007C1B0()
{
  return Calendar.startOfDay(for:)();
}

uint64_t sub_10007C1C0()
{
  return Calendar.date(byAdding:value:to:wrappingComponents:)();
}

uint64_t sub_10007C1D0()
{
  return static Calendar.current.getter();
}

uint64_t sub_10007C1E0()
{
  return type metadata accessor for Calendar.Component();
}

uint64_t sub_10007C1F0()
{
  return type metadata accessor for Calendar();
}

uint64_t sub_10007C200()
{
  return RetryingLazy.init(wrappedValue:)();
}

uint64_t sub_10007C210()
{
  return RetryingLazy.wrappedValue.getter();
}

uint64_t sub_10007C220()
{
  return RecordingActivityAttributes.ContentState.currentTime.getter();
}

uint64_t sub_10007C230()
{
  return type metadata accessor for RecordingActivityAttributes.ContentState();
}

uint64_t sub_10007C240()
{
  return type metadata accessor for RecordingActivityAttributes();
}

uint64_t sub_10007C250()
{
  return isFeatureEnabled(_:)();
}

uint64_t sub_10007C260()
{
  return static WidgetNotePreviewProvider.shared.getter();
}

uint64_t sub_10007C270()
{
  return WidgetNotePreviewProvider.preview(accountId:noteId:type:)();
}

uint64_t sub_10007C280()
{
  return type metadata accessor for WidgetNotePreviewProvider();
}

uint64_t sub_10007C290()
{
  return NotePreview.preview.getter();
}

uint64_t sub_10007C2A0()
{
  return type metadata accessor for NotePreview();
}

uint64_t sub_10007C2B0()
{
  return os_log(_:dso:log:_:_:)();
}

uint64_t sub_10007C2C0()
{
  return static Logger.widget.getter();
}

uint64_t sub_10007C2D0()
{
  return Logger.logObject.getter();
}

uint64_t sub_10007C2E0()
{
  return type metadata accessor for Logger();
}

uint64_t sub_10007C2F0()
{
  return type metadata accessor for AnyCancellable();
}

uint64_t sub_10007C300()
{
  return Publisher<>.sink(receiveValue:)();
}

uint64_t sub_10007C310()
{
  return PlaceholderText.init(scale:)();
}

uint64_t sub_10007C320()
{
  return type metadata accessor for PlaceholderText();
}

uint64_t sub_10007C330()
{
  return Link.init(destination:content:)();
}

uint64_t sub_10007C340()
{
  return EdgeInsets.init(_all:)();
}

uint64_t sub_10007C350()
{
  return static ColorScheme.== infix(_:_:)();
}

uint64_t sub_10007C360()
{
  return type metadata accessor for ColorScheme();
}

uint64_t sub_10007C370()
{
  return StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
}

uint64_t sub_10007C380()
{
  return TupleWidget.init(_:)();
}

uint64_t sub_10007C390()
{
  return static WidgetBundle.main()();
}

uint64_t sub_10007C3A0()
{
  return _FrameLayout.init(width:height:alignment:)();
}

uint64_t sub_10007C3B0()
{
  return GeometryProxy.size.getter();
}

uint64_t sub_10007C3C0()
{
  return type metadata accessor for GeometryProxy();
}

uint64_t sub_10007C3D0()
{
  return LinearGradient.init(gradient:startPoint:endPoint:)();
}

uint64_t sub_10007C3E0()
{
  return ModifiedContent<>.accessibility(value:)();
}

uint64_t sub_10007C3F0()
{
  return type metadata accessor for RoundedRectangle();
}

uint64_t sub_10007C400()
{
  return type metadata accessor for _BlendModeEffect();
}

uint64_t sub_10007C410()
{
  return _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
}

uint64_t sub_10007C420()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t sub_10007C430()
{
  return EnvironmentValues.imageScale.setter();
}

uint64_t sub_10007C440()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_10007C450()
{
  return EnvironmentValues.colorScheme.setter();
}

uint64_t sub_10007C460()
{
  return EnvironmentValues.lineSpacing.getter();
}

uint64_t sub_10007C470()
{
  return EnvironmentValues.lineSpacing.setter();
}

uint64_t sub_10007C480()
{
  return EnvironmentValues.sizeCategory.getter();
}

uint64_t sub_10007C490()
{
  return EnvironmentValues.sizeCategory.setter();
}

uint64_t sub_10007C4A0()
{
  return EnvironmentValues.foregroundColor.getter();
}

uint64_t sub_10007C4B0()
{
  return EnvironmentValues.foregroundColor.setter();
}

uint64_t sub_10007C4C0()
{
  return EnvironmentValues.multilineTextAlignment.getter();
}

uint64_t sub_10007C4D0()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

uint64_t sub_10007C4E0()
{
  return EnvironmentValues.font.getter();
}

uint64_t sub_10007C4F0()
{
  return EnvironmentValues.font.setter();
}

uint64_t sub_10007C500()
{
  return type metadata accessor for EnvironmentValues.ShowsWidgetBackgroundKey();
}

uint64_t sub_10007C510()
{
  return EnvironmentValues.widgetFamily.getter();
}

uint64_t sub_10007C520()
{
  return EnvironmentValues.widgetRenderingMode.getter();
}

uint64_t sub_10007C530()
{
  return EnvironmentValues.widgetRenderingMode.setter();
}

uint64_t sub_10007C540()
{
  return EnvironmentValues.lineLimit.getter();
}

uint64_t sub_10007C550()
{
  return EnvironmentValues.lineLimit.setter();
}

uint64_t sub_10007C560()
{
  return EnvironmentValues.init()();
}

uint64_t sub_10007C570()
{
  return type metadata accessor for EnvironmentValues();
}

uint64_t sub_10007C580()
{
  return EnvironmentValues.subscript.getter();
}

uint64_t sub_10007C590()
{
  return static VerticalAlignment.center.getter();
}

uint64_t sub_10007C5A0()
{
  return LocalizedStringKey.init(stringLiteral:)();
}

uint64_t sub_10007C5B0()
{
  return type metadata accessor for RoundedCornerStyle();
}

uint64_t sub_10007C5C0()
{
  return static AccessibilityTraits.isLink.getter();
}

uint64_t sub_10007C5D0()
{
  return static AccessibilityTraits.isHeader.getter();
}

uint64_t sub_10007C5E0()
{
  return type metadata accessor for AccessibilityTraits();
}

uint64_t sub_10007C5F0()
{
  return type metadata accessor for ContentSizeCategory();
}

uint64_t sub_10007C600()
{
  return static HorizontalAlignment.center.getter();
}

uint64_t sub_10007C610()
{
  return static HorizontalAlignment.leading.getter();
}

uint64_t sub_10007C620()
{
  return WidgetConfiguration.description(_:)();
}

uint64_t sub_10007C630()
{
  return WidgetConfiguration.supportedFamilies(_:)();
}

uint64_t sub_10007C640()
{
  return WidgetConfiguration.configurationDisplayName(_:)();
}

uint64_t sub_10007C650()
{
  return _ConditionalContent<>.init(storage:)();
}

uint64_t sub_10007C660()
{
  return ControlWidgetTemplate.tint(_:)();
}

uint64_t sub_10007C670()
{
  return _ControlWidgetAdaptor.init(_:)();
}

uint64_t sub_10007C680()
{
  return static HierarchicalShapeStyle.secondary.getter();
}

uint64_t sub_10007C690()
{
  return static AccessibilityChildBehavior.ignore.getter();
}

uint64_t sub_10007C6A0()
{
  return static AccessibilityChildBehavior.combine.getter();
}

uint64_t sub_10007C6B0()
{
  return type metadata accessor for AccessibilityChildBehavior();
}

uint64_t sub_10007C6C0()
{
  return ControlWidgetConfiguration.description(_:)();
}

uint64_t sub_10007C6D0()
{
  return ControlWidgetConfiguration.displayName(_:)();
}

uint64_t sub_10007C6E0()
{
  return ControlWidgetConfiguration.showsInSystemSpaces()();
}

uint64_t sub_10007C6F0()
{
  return static ContainerBackgroundPlacement.widget.getter();
}

uint64_t sub_10007C700()
{
  return type metadata accessor for ContainerBackgroundPlacement();
}

uint64_t sub_10007C710()
{
  return static Log.runtimeIssuesLog.getter();
}

uint64_t sub_10007C720()
{
  return static Edge.Set.horizontal.getter();
}

uint64_t sub_10007C730()
{
  return static Edge.Set.all.getter();
}

uint64_t sub_10007C740()
{
  return static Edge.Set.top.getter();
}

uint64_t sub_10007C750()
{
  return static Edge.Set.bottom.getter();
}

uint64_t sub_10007C760()
{
  return static Edge.Set.leading.getter();
}

uint64_t sub_10007C770()
{
  return static Edge.Set.trailing.getter();
}

uint64_t sub_10007C780()
{
  return static Edge.Set.vertical.getter();
}

uint64_t sub_10007C790()
{
  return static Font.systemSingleLineA(_:)();
}

uint64_t sub_10007C7A0()
{
  return static Font.largeTitle.getter();
}

uint64_t sub_10007C7B0()
{
  return static Font.subheadline.getter();
}

uint64_t sub_10007C7C0()
{
  return static Font.title.getter();
}

uint64_t sub_10007C7D0()
{
  return static Font.Weight.bold.getter();
}

uint64_t sub_10007C7E0()
{
  return static Font.Weight.regular.getter();
}

uint64_t sub_10007C7F0()
{
  return static Font.Weight.semibold.getter();
}

uint64_t sub_10007C800()
{
  return type metadata accessor for Font.TextStyle();
}

void sub_10007C810(CGPoint to)
{
}

void sub_10007C820(CGPoint to)
{
}

uint64_t sub_10007C830()
{
  return Path.init(_:)();
}

uint64_t sub_10007C840()
{
  return Text.placeholder(_:scale:)();
}

uint64_t sub_10007C850()
{
  return Text.fontWeight(_:)();
}

uint64_t sub_10007C860()
{
  return Text.foregroundColor(_:)();
}

uint64_t sub_10007C870()
{
  return Text.foregroundStyle<A>(_:)();
}

uint64_t sub_10007C880()
{
  return Text.monospacedDigit()();
}

uint64_t sub_10007C890()
{
  return Text.font(_:)();
}

uint64_t sub_10007C8A0()
{
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t sub_10007C8B0()
{
  return Text.init(_:)();
}

uint64_t sub_10007C8C0()
{
  return Text.init<A>(_:)();
}

uint64_t sub_10007C8D0()
{
  return View.squareCrop()();
}

uint64_t sub_10007C8E0()
{
  return View.maximumSizeCategory(_:)();
}

uint64_t sub_10007C8F0()
{
  return View.widgetAccentable(_:)();
}

uint64_t sub_10007C900()
{
  return View.activityBackgroundTint(_:)();
}

uint64_t sub_10007C910()
{
  return View.widgetURL(_:)();
}

uint64_t sub_10007C920()
{
  return static View._makeView(view:inputs:)();
}

uint64_t sub_10007C930()
{
  return static View._makeViewList(view:inputs:)();
}

uint64_t sub_10007C940()
{
  return View.fontWeight(_:)();
}

uint64_t sub_10007C950()
{
  return View.accessibility(label:)();
}

uint64_t sub_10007C960()
{
  return View.accessibility(addTraits:)();
}

uint64_t sub_10007C970()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_10007C980()
{
  return View.privacySensitive(_:)();
}

uint64_t sub_10007C990()
{
  return View.hyphenationFactor(_:)();
}

uint64_t sub_10007C9A0()
{
  return View.containerBackground<A>(for:alignment:content:)();
}

uint64_t sub_10007C9B0()
{
  return View.accessibilityElement(children:)();
}

uint64_t sub_10007C9C0()
{
  return static Color.background.getter();
}

uint64_t sub_10007C9D0()
{
  return static Color.quaternary.getter();
}

uint64_t sub_10007C9E0()
{
  return static Color.tertiary.getter();
}

uint64_t sub_10007C9F0()
{
  return Color.init(_:)();
}

uint64_t sub_10007CA00()
{
  return type metadata accessor for Color.RGBColorSpace();
}

uint64_t sub_10007CA10()
{
  return static Color.red.getter();
}

uint64_t sub_10007CA20()
{
  return static Color.gray.getter();
}

uint64_t sub_10007CA30()
{
  return static Color.black.getter();
}

uint64_t sub_10007CA40()
{
  return static Color.clear.getter();
}

uint64_t sub_10007CA50()
{
  return static Color.white.getter();
}

uint64_t sub_10007CA60()
{
  return static Color.yellow.getter();
}

uint64_t sub_10007CA70()
{
  return Color.opacity(_:)();
}

uint64_t sub_10007CA80()
{
  return static Color.primary.getter();
}

uint64_t sub_10007CA90()
{
  return static Color.secondary.getter();
}

uint64_t sub_10007CAA0()
{
  return Color.init(_:white:opacity:)();
}

uint64_t sub_10007CAB0()
{
  return Color.init(_:bundle:)();
}

uint64_t sub_10007CAC0()
{
  return Color.init(_:)();
}

uint64_t sub_10007CAD0()
{
  return Image.init(uiImage:)();
}

uint64_t sub_10007CAE0()
{
  return Image.init(systemName:)();
}

uint64_t sub_10007CAF0()
{
  return type metadata accessor for Image.ResizingMode();
}

uint64_t sub_10007CB00()
{
  return Image.init(_internalSystemName:)();
}

uint64_t sub_10007CB10()
{
  return static Image.== infix(_:_:)();
}

uint64_t sub_10007CB20()
{
  return type metadata accessor for Image.Scale();
}

uint64_t sub_10007CB30()
{
  return Image.widgetAccentedRenderingMode(_:)();
}

uint64_t sub_10007CB40()
{
  return Image.resizable(capInsets:resizingMode:)();
}

uint64_t sub_10007CB60()
{
  return AnyView.init<A>(_:)();
}

uint64_t sub_10007CB70()
{
  return Divider.init()();
}

uint64_t sub_10007CB80()
{
  return type metadata accessor for Divider();
}

uint64_t sub_10007CB90()
{
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_10007CBA0()
{
  return ForEach<>.init(_:content:)();
}

uint64_t sub_10007CBB0()
{
  return Gradient.Stop.init(color:location:)();
}

uint64_t sub_10007CBC0()
{
  return Gradient.init(stops:)();
}

uint64_t sub_10007CBD0()
{
  return Gradient.init(colors:)();
}

uint64_t sub_10007CBE0()
{
  return static Alignment.bottom.getter();
}

uint64_t sub_10007CBF0()
{
  return static Alignment.center.getter();
}

uint64_t sub_10007CC00()
{
  return static Alignment.leading.getter();
}

uint64_t sub_10007CC10()
{
  return type metadata accessor for BlendMode();
}

uint64_t sub_10007CC20()
{
  return static UnitPoint.top.getter();
}

uint64_t sub_10007CC30()
{
  return static UnitPoint.bottom.getter();
}

uint64_t sub_10007CC40()
{
  return type metadata accessor for DispatchTimeInterval();
}

uint64_t sub_10007CC50()
{
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t sub_10007CC60()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t sub_10007CC70()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t sub_10007CC80()
{
  return static DispatchTime.now()();
}

uint64_t sub_10007CC90()
{
  return type metadata accessor for DispatchTime();
}

uint64_t sub_10007CCA0()
{
  return + infix(_:_:)();
}

uint64_t sub_10007CCB0()
{
  return ControlWidgetButton.init<>(action:label:)();
}

uint64_t sub_10007CCC0()
{
  return static WidgetRenderingMode.== infix(_:_:)();
}

uint64_t sub_10007CCD0()
{
  return static WidgetRenderingMode.vibrant.getter();
}

uint64_t sub_10007CCE0()
{
  return static WidgetRenderingMode.accented.getter();
}

uint64_t sub_10007CCF0()
{
  return static WidgetRenderingMode.fullColor.getter();
}

uint64_t sub_10007CD00()
{
  return type metadata accessor for WidgetRenderingMode();
}

uint64_t sub_10007CD10()
{
  return static WidgetAccentedRenderingMode.fullColor.getter();
}

uint64_t sub_10007CD20()
{
  return type metadata accessor for WidgetAccentedRenderingMode();
}

uint64_t sub_10007CD30()
{
  return type metadata accessor for WidgetFamily();
}

uint64_t sub_10007CD40()
{
  return DynamicIsland.init<A, B, C, D>(expanded:compactLeading:compactTrailing:minimal:)();
}

uint64_t sub_10007CD50()
{
  return TimelineEntry.relevance.getter();
}

uint64_t sub_10007CD80()
{
  return ActivityViewContext.state.getter();
}

uint64_t sub_10007CD90()
{
  return IntentConfiguration.init<A>(kind:intent:provider:content:)();
}

uint64_t sub_10007CDA0()
{
  return StaticConfiguration.init<A>(kind:provider:content:)();
}

uint64_t sub_10007CDB0()
{
  return static TimelineReloadPolicy.after(_:)();
}

uint64_t sub_10007CDC0()
{
  return static TimelineReloadPolicy.never.getter();
}

uint64_t sub_10007CDD0()
{
  return type metadata accessor for TimelineReloadPolicy();
}

uint64_t sub_10007CDE0()
{
  return ActivityConfiguration.init<A>(for:content:dynamicIsland:)();
}

uint64_t sub_10007CE00()
{
  return IntentTimelineProvider.recommendations()();
}

uint64_t sub_10007CE20()
{
  return TimelineEntryRelevance.init(score:duration:)();
}

uint64_t sub_10007CE30()
{
  return type metadata accessor for TimelineEntryRelevance();
}

uint64_t sub_10007CE40()
{
  return type metadata accessor for TimelineProviderContext();
}

uint64_t sub_10007CE50()
{
  return StaticControlConfiguration.init(kind:content:)();
}

uint64_t sub_10007CE60()
{
  return DynamicIslandExpandedRegion._viewRepresentation.getter();
}

uint64_t sub_10007CE70()
{
  return DynamicIslandExpandedRegion.init(_:priority:content:)();
}

uint64_t sub_10007CE80()
{
  return DynamicIslandExpandedContent.init(content:)();
}

uint64_t sub_10007CE90()
{
  return DynamicIslandExpandedContent.content.getter();
}

uint64_t sub_10007CEA0()
{
  return static DynamicIslandExpandedRegionPosition.center.getter();
}

uint64_t sub_10007CEB0()
{
  return static DynamicIslandExpandedRegionPosition.leading.getter();
}

uint64_t sub_10007CEC0()
{
  return type metadata accessor for DynamicIslandExpandedRegionPosition();
}

uint64_t sub_10007CED0()
{
  return Timeline.init(entries:policy:)();
}

uint64_t sub_10007CEE0()
{
  return Timeline.entries.getter();
}

uint64_t sub_10007CEF0()
{
  return BidirectionalCollection<>.joined(separator:)();
}

uint64_t sub_10007CF00()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

uint64_t sub_10007CF10()
{
  return String.LocalizationValue.init(stringLiteral:)();
}

uint64_t sub_10007CF20()
{
  return type metadata accessor for String.LocalizationValue();
}

NSString sub_10007CF30()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_10007CF40()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10007CF60()
{
  return String.hash(into:)();
}

void sub_10007CF70(Swift::String a1)
{
}

uint64_t sub_10007CF80()
{
  return static String.placeholder.getter();
}

Swift::Int sub_10007CF90()
{
  return String.UTF8View._foreignCount()();
}

uint64_t sub_10007CFA0()
{
  return dispatch thunk of RawRepresentable.rawValue.getter();
}

uint64_t sub_10007CFB0()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray sub_10007CFC0()
{
  return Array._bridgeToObjectiveC()();
}

uint64_t sub_10007CFD0()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10007CFE0()
{
  return specialized Array._endMutation()();
}

uint64_t sub_10007CFF0()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_10007D000()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_10007D010()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t sub_10007D020()
{
  return static MainActor.shared.getter();
}

uint64_t sub_10007D030()
{
  return type metadata accessor for MainActor();
}

uint64_t sub_10007D040()
{
  return static os_log_type_t.info.getter();
}

uint64_t sub_10007D050()
{
  return static os_log_type_t.debug.getter();
}

uint64_t sub_10007D060()
{
  return static os_log_type_t.error.getter();
}

uint64_t sub_10007D070()
{
  return static os_log_type_t.fault.getter();
}

uint64_t sub_10007D080()
{
  return ICLegacyContext.performAndWait<A>(_:)();
}

uint64_t sub_10007D090()
{
  return OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
}

uint64_t sub_10007D0A0()
{
  return static OS_dispatch_queue.main.getter();
}

uint64_t sub_10007D0B0()
{
  return type metadata accessor for NSNotificationCenter.Publisher();
}

uint64_t sub_10007D0C0()
{
  return NSNotificationCenter.publisher(for:object:)();
}

uint64_t sub_10007D0D0()
{
  return NSManagedObjectContext.performAndWait<A>(_:)();
}

uint64_t sub_10007D0E0()
{
  return type metadata accessor for Optional();
}

uint64_t sub_10007D0F0()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10007D100()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t sub_10007D110()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t sub_10007D120()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t sub_10007D130()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t sub_10007D140()
{
  return StaticString.description.getter();
}

void sub_10007D150(Swift::Int a1)
{
}

uint64_t sub_10007D160()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t sub_10007D170()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t sub_10007D180()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t sub_10007D190()
{
  return specialized ContiguousArray._endMutation()();
}

uint64_t sub_10007D1A0()
{
  return specialized ContiguousArray.reserveCapacity(_:)();
}

uint64_t sub_10007D1B0()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t sub_10007D1C0()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_10007D1D0()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_10007D1E0()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t sub_10007D1F0()
{
  return _CocoaArrayWrapper.subscript.getter();
}

uint64_t sub_10007D200()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t sub_10007D210()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

Swift::Int sub_10007D220(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases, string);
}

uint64_t sub_10007D230()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t sub_10007D240()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_10007D250()
{
  return _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
}

uint64_t sub_10007D260()
{
  return Error.localizedDescription.getter();
}

uint64_t sub_10007D270()
{
  return Hasher.init(_seed:)();
}

Swift::Int sub_10007D280()
{
  return Hasher._finalize()();
}

uint64_t ICClassAndProtocolCast()
{
  return _ICClassAndProtocolCast();
}

uint64_t ICDynamicCast()
{
  return _ICDynamicCast();
}

uint64_t ICNotesAppBundleIdentifier()
{
  return _ICNotesAppBundleIdentifier();
}

uint64_t NSExtensionMain()
{
  return _NSExtensionMain();
}

NSData *__cdecl UIImagePNGRepresentation(UIImage *image)
{
  return _UIImagePNGRepresentation(image);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return __swift_stdlib_bridgeErrorToNSError();
}

void bzero(void *a1, size_t a2)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

void exit(int a1)
{
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return [super a2];
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

void objc_storeStrong(id *location, id obj)
{
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return _os_log_create(subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

long double remainder(long double __x, long double __y)
{
  return _remainder(__x, __y);
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_checkMetadataState()
{
  return _swift_checkMetadataState();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastObjCClass()
{
  return _swift_dynamicCastObjCClass();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAtKeyPath()
{
  return _swift_getAtKeyPath();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getErrorValue()
{
  return _swift_getErrorValue();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getGenericMetadata()
{
  return _swift_getGenericMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return _swift_getOpaqueTypeConformance2();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return _swift_initEnumMetadataSinglePayload();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}

id objc_msgSend_ICTintColor(void *a1, const char *a2, ...)
{
  return _[a1 ICTintColor];
}

id objc_msgSend__cleanupRemoteAlertHandle_(void *a1, const char *a2, ...)
{
  return [a1 _cleanupRemoteAlertHandle:];
}

id objc_msgSend__systemImageNamed_withConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 _systemImageNamed:withConfiguration:];
}

id objc_msgSend_absoluteString(void *a1, const char *a2, ...)
{
  return _[a1 absoluteString];
}

id objc_msgSend_account(void *a1, const char *a2, ...)
{
  return _[a1 account];
}

id objc_msgSend_activateWithContext_(void *a1, const char *a2, ...)
{
  return [a1 activateWithContext:];
}

id objc_msgSend_allItemsFolderLocalizedTitle(void *a1, const char *a2, ...)
{
  return _[a1 allItemsFolderLocalizedTitle];
}

id objc_msgSend_appURLForDefaultFolder(void *a1, const char *a2, ...)
{
  return _[a1 appURLForDefaultFolder];
}

id objc_msgSend_appURLForFolder_(void *a1, const char *a2, ...)
{
  return [a1 appURLForFolder:];
}

id objc_msgSend_appURLForHTMLFolder_(void *a1, const char *a2, ...)
{
  return [a1 appURLForHTMLFolder:];
}

id objc_msgSend_appURLForHTMLNote_(void *a1, const char *a2, ...)
{
  return [a1 appURLForHTMLNote:];
}

id objc_msgSend_appURLForNote_(void *a1, const char *a2, ...)
{
  return [a1 appURLForNote:];
}

id objc_msgSend_appURLForVirtualSmartFolder_(void *a1, const char *a2, ...)
{
  return [a1 appURLForVirtualSmartFolder:];
}

id objc_msgSend_clearColor(void *a1, const char *a2, ...)
{
  return _[a1 clearColor];
}

id objc_msgSend_code(void *a1, const char *a2, ...)
{
  return _[a1 code];
}

id objc_msgSend_configurationWithScale_(void *a1, const char *a2, ...)
{
  return [a1 configurationWithScale:];
}

id objc_msgSend_contentInfoText(void *a1, const char *a2, ...)
{
  return _[a1 contentInfoText];
}

id objc_msgSend_dateForCurrentSortTypeForNote_folderNoteSortType_(void *a1, const char *a2, ...)
{
  return [a1 dateForCurrentSortTypeForNote:folderNoteSortType:];
}

id objc_msgSend_defaultSystemImageName(void *a1, const char *a2, ...)
{
  return _[a1 defaultSystemImageName];
}

id objc_msgSend_depth(void *a1, const char *a2, ...)
{
  return _[a1 depth];
}

id objc_msgSend_domain(void *a1, const char *a2, ...)
{
  return _[a1 domain];
}

id objc_msgSend_hasUnreadChanges(void *a1, const char *a2, ...)
{
  return _[a1 hasUnreadChanges];
}

id objc_msgSend_hidesObject_(void *a1, const char *a2, ...)
{
  return [a1 hidesObject:];
}

id objc_msgSend_ic_briefFormattedDate(void *a1, const char *a2, ...)
{
  return [a1 ic_briefFormattedDate];
}

id objc_msgSend_ic_isLegacyAccountType(void *a1, const char *a2, ...)
{
  return [a1 ic_isLegacyAccountType];
}

id objc_msgSend_ic_isLegacyFolderType(void *a1, const char *a2, ...)
{
  return [a1 ic_isLegacyFolderType];
}

id objc_msgSend_ic_isLegacyNoteType(void *a1, const char *a2, ...)
{
  return [a1 ic_isLegacyNoteType];
}

id objc_msgSend_ic_isModernAccountProxyType(void *a1, const char *a2, ...)
{
  return [a1 ic_isModernAccountProxyType];
}

id objc_msgSend_ic_isModernAccountType(void *a1, const char *a2, ...)
{
  return [a1 ic_isModernAccountType];
}

id objc_msgSend_ic_isModernFolderType(void *a1, const char *a2, ...)
{
  return [a1 ic_isModernFolderType];
}

id objc_msgSend_ic_isModernNoteType(void *a1, const char *a2, ...)
{
  return [a1 ic_isModernNoteType];
}

id objc_msgSend_imageNamed_(void *a1, const char *a2, ...)
{
  return [a1 imageNamed:];
}

id objc_msgSend_imageWithImageData_(void *a1, const char *a2, ...)
{
  return [a1 imageWithImageData:];
}

id objc_msgSend_imageWithTintColor_(void *a1, const char *a2, ...)
{
  return [a1 imageWithTintColor:];
}

id objc_msgSend_imageWithUIImage_(void *a1, const char *a2, ...)
{
  return [a1 imageWithUIImage:];
}

id objc_msgSend_initWithIdentifier_displayString_(void *a1, const char *a2, ...)
{
  return [a1 initWithIdentifier:displayString:];
}

id objc_msgSend_initWithIdentifier_title_date_contentInfo_isLocked_isShared_isUnread_(void *a1, const char *a2, ...)
{
  return [a1 initWithIdentifier:title:date:contentInfo:isLocked:isShared:isUnread:];
}

id objc_msgSend_initWithIdentifier_title_depth_shareDescription_systemImageName_(void *a1, const char *a2, ...)
{
  return [a1 initWithIdentifier:title:depth:shareDescription:systemImageName:];
}

id objc_msgSend_initWithServiceName_viewControllerClassName_(void *a1, const char *a2, ...)
{
  return [a1 initWithServiceName:viewControllerClassName:];
}

id objc_msgSend_insertString_atIndex_(void *a1, const char *a2, ...)
{
  return [a1 insertString:atIndex:];
}

id objc_msgSend_invalidate(void *a1, const char *a2, ...)
{
  return _[a1 invalidate];
}

id objc_msgSend_isEqual_(void *a1, const char *a2, ...)
{
  return [a1 isEqual:];
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToString:];
}

id objc_msgSend_isPasswordProtected(void *a1, const char *a2, ...)
{
  return _[a1 isPasswordProtected];
}

id objc_msgSend_isSharedViaICloud(void *a1, const char *a2, ...)
{
  return _[a1 isSharedViaICloud];
}

id objc_msgSend_localizedStringWithFormat_(void *a1, const char *a2, ...)
{
  return [a1 localizedStringWithFormat:];
}

id objc_msgSend_localizedTitle(void *a1, const char *a2, ...)
{
  return _[a1 localizedTitle];
}

id objc_msgSend_localizedTitleForDefaultFolder(void *a1, const char *a2, ...)
{
  return _[a1 localizedTitleForDefaultFolder];
}

id objc_msgSend_managedObjectContext(void *a1, const char *a2, ...)
{
  return _[a1 managedObjectContext];
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return _[a1 mutableCopy];
}

id objc_msgSend_newHandleWithDefinition_configurationContext_(void *a1, const char *a2, ...)
{
  return [a1 newHandleWithDefinition:configurationContext:];
}

id objc_msgSend_objectID(void *a1, const char *a2, ...)
{
  return _[a1 objectID];
}

id objc_msgSend_performBlockAndWait_(void *a1, const char *a2, ...)
{
  return [a1 performBlockAndWait:];
}

id objc_msgSend_registerObserver_(void *a1, const char *a2, ...)
{
  return [a1 registerObserver:];
}

id objc_msgSend_secondaryLabelColor(void *a1, const char *a2, ...)
{
  return _[a1 secondaryLabelColor];
}

id objc_msgSend_setDisplayImage_(void *a1, const char *a2, ...)
{
  return [a1 setDisplayImage:];
}

id objc_msgSend_setSubtitleString_(void *a1, const char *a2, ...)
{
  return [a1 setSubtitleString:];
}

id objc_msgSend_setUserActivity_(void *a1, const char *a2, ...)
{
  return [a1 setUserActivity:];
}

id objc_msgSend_shareDescription(void *a1, const char *a2, ...)
{
  return _[a1 shareDescription];
}

id objc_msgSend_sharedWidget(void *a1, const char *a2, ...)
{
  return _[a1 sharedWidget];
}

id objc_msgSend_systemImageName(void *a1, const char *a2, ...)
{
  return _[a1 systemImageName];
}

id objc_msgSend_systemImageNamed_withConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 systemImageNamed:withConfiguration:];
}

id objc_msgSend_title(void *a1, const char *a2, ...)
{
  return _[a1 title];
}

id objc_msgSend_unregisterObserver_(void *a1, const char *a2, ...)
{
  return [a1 unregisterObserver:];
}