double sub_1000051CC()
{
  if (qword_1001056E8 != -1) {
    dispatch_once(&qword_1001056E8, &stru_1000EDF70);
  }
  return *(double *)&qword_1001056E0;
}

void sub_100005210(id a1)
{
  unsigned int v1 = +[UIDevice ic_isVision];
  double v2 = 44.0;
  if (v1) {
    double v2 = 60.0;
  }
  qword_1001056E0 = *(void *)&v2;
}

id sub_100006438(uint64_t a1)
{
  return [*(id *)(a1 + 32) setCollapsed:*(unsigned __int8 *)(a1 + 40)];
}

void sub_100007DD0(id a1)
{
  unsigned int v1 = objc_alloc_init(ICAnalyticsObserver);
  double v2 = (void *)qword_1001056F0;
  qword_1001056F0 = (uint64_t)v1;
}

id sub_100008588(uint64_t a1)
{
  return [*(id *)(a1 + 32) hideUI];
}

void sub_100008590(uint64_t a1)
{
  id v5 = +[LSApplicationWorkspace defaultWorkspace];
  id v2 = objc_alloc_init((Class)NSURLComponents);
  v3 = ICNotesAppURLScheme();
  [v2 setScheme:v3];

  v4 = [v2 URL];
  [v5 openURL:v4 configuration:0 completionHandler:0];

  [*(id *)(a1 + 32) hideUI];
}

void sub_100008648(uint64_t a1)
{
  id v2 = objc_alloc_init(ICImportSEProgressViewController);
  v3 = [(ICImportSEProgressViewController *)v2 view];
  [v3 setBackgroundColor:0];

  [*(id *)(a1 + 32) setProgressViewController:v2];
  v4 = +[UIAlertController alertControllerWithTitle:0 message:0 preferredStyle:1];
  id v5 = [*(id *)(a1 + 32) progressViewController];
  [v4 setContentViewController:v5];

  v6 = +[NSBundle mainBundle];
  v7 = [v6 localizedStringForKey:@"Stop" value:&stru_1000F2510 table:0];
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_1000087F8;
  v11[3] = &unk_1000EDFE0;
  v11[4] = *(void *)(a1 + 32);
  v8 = +[UIAlertAction actionWithTitle:v7 style:1 handler:v11];

  [v4 addAction:v8];
  [*(id *)(a1 + 32) setProgressAlertController:v4];
  [*(id *)(a1 + 32) importNotes];
  v9 = *(void **)(a1 + 32);
  v10 = [v9 progressAlertController];
  [v9 presentViewController:v10 animated:1 completion:0];
}

void sub_1000087F8(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) importNoteProcessor];
  [v1 cancelProcess];
}

id sub_10000883C(uint64_t a1)
{
  return [*(id *)(a1 + 32) hideUI];
}

void sub_1000089E4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  v3 = [*(id *)(a1 + 32) progressViewController];
  v4 = [v3 statusLabel];
  [v4 setText:v2];

  id v5 = [*(id *)(a1 + 32) progressViewController];
  v6 = [v5 statusActivityIndicator];
  [v6 setActivityIndicatorViewStyle:100];

  if ([*(id *)(a1 + 48) totalNoteFound])
  {
    unint64_t v7 = 100 * (void)[*(id *)(a1 + 48) totalNoteImported];
    unint64_t v8 = v7 / (unint64_t)[*(id *)(a1 + 48) totalNoteFound];
  }
  else
  {
    unint64_t v8 = 0;
  }
  id v17 = +[NSDate date];
  uint64_t v9 = [*(id *)(a1 + 32) lastAccessibilityAnnouncementDate];
  if (v9)
  {
    v10 = (void *)v9;
    v11 = [*(id *)(a1 + 32) lastAccessibilityAnnouncementDate];
    [v17 timeIntervalSinceDate:v11];
    double v13 = v12;

    if (v13 > 3.0)
    {
      v14 = +[NSBundle mainBundle];
      v15 = [v14 localizedStringForKey:@"Import progress %lu%%" value:&stru_1000F2510 table:0];

      v16 = +[NSString localizedStringWithFormat:](NSString, "localizedStringWithFormat:", v15, v8);
      ICAccessibilityPostHighPriorityAnnouncementNotification();
      [*(id *)(a1 + 32) setLastAccessibilityAnnouncementDate:v17];
    }
  }
}

void sub_100008C7C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) errorFileURLs];
  if ([v2 count])
  {
    objc_initWeak(&location, *(id *)(a1 + 40));
    v3 = *(void **)(a1 + 40);
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_100008E18;
    v7[3] = &unk_1000EE058;
    objc_copyWeak(&v8, &location);
    v7[4] = *(void *)(a1 + 40);
    [v3 dismissViewControllerAnimated:1 completion:v7];
    objc_destroyWeak(&v8);
    objc_destroyWeak(&location);
  }
  else
  {
    v4 = +[ICBackgroundTaskScheduler sharedScheduler];
    [v4 scheduleTask:objc_opt_class() completion:&stru_1000EE098];

    dispatch_time_t v5 = dispatch_time(0, 1000000000);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_100009094;
    v6[3] = &unk_1000EE0C0;
    v6[4] = *(void *)(a1 + 40);
    dispatch_after(v5, (dispatch_queue_t)&_dispatch_main_q, v6);
  }
}

void sub_100008DFC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100008E18(uint64_t a1)
{
  uint64_t v2 = +[NSBundle mainBundle];
  v3 = [v2 localizedStringForKey:@"File Not Imported" value:&stru_1000F2510 table:0];
  v4 = +[NSBundle mainBundle];
  dispatch_time_t v5 = [v4 localizedStringForKey:@"This file has an issue and couldnâ€™t be imported into Notes." value:&stru_1000F2510 table:0];
  v6 = +[UIAlertController alertControllerWithTitle:v3 message:v5 preferredStyle:1];

  unint64_t v7 = +[NSBundle mainBundle];
  id v8 = [v7 localizedStringForKey:@"OK" value:&stru_1000F2510 table:0];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_100008FE4;
  v10[3] = &unk_1000EE030;
  objc_copyWeak(&v11, (id *)(a1 + 40));
  uint64_t v9 = +[UIAlertAction actionWithTitle:v8 style:0 handler:v10];
  [v6 addAction:v9];

  [*(id *)(a1 + 32) presentViewController:v6 animated:1 completion:0];
  objc_destroyWeak(&v11);
}

void sub_100008FCC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100008FE4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained hideUI];
}

void sub_100009024(id a1, BOOL a2, NSError *a3)
{
  v4 = a3;
  dispatch_time_t v5 = os_log_create("com.apple.notes", "SharingExtension");
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG)) {
    sub_1000B53C4(a2, (uint64_t)v4, v5);
  }
}

id sub_100009094(uint64_t a1)
{
  return [*(id *)(a1 + 32) hideUI];
}

void sub_100009154(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100009178(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = [WeakRetained rootViewController];
  uint64_t v2 = [v1 extensionContext];
  [v2 completeRequestReturningItems:&__NSArray0__struct completionHandler:0];
}

void sub_100009520(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  objc_opt_class();
  unint64_t v7 = ICDynamicCast();

  if (v5)
  {
    id v8 = os_log_create("com.apple.notes", "SharingExtension");
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_1000B5464(v5, v8);
    }
  }
  else if (v7)
  {
    [*(id *)(a1 + 32) ic_addNonNilObject:v7];
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_1000095F0(uint64_t a1)
{
  uint64_t v2 = +[ICNoteContext sharedContext];
  id v5 = [v2 managedObjectContext];

  [v5 ic_save];
  v3 = +[ICAccount defaultAccountInContext:v5];
  v4 = [*(id *)(a1 + 32) importNoteProcessor];
  [v4 processURLs:*(void *)(a1 + 40) shouldPreserveFolders:0 account:v3];
}

void sub_1000099F0(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) managedObjectContext];
  [v1 ic_save];
}

void sub_10000A43C(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) managedObjectContext];
  [v1 ic_save];
}

uint64_t sub_10000B2E8(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) containsObject:a2] ^ 1;
}

void sub_10000C95C(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6 = a2;
  id v7 = a4;
  if (v6)
  {
    id v8 = +[ICAccount accountUtilities];
    uint64_t v9 = [*(id *)(a1 + 40) accountId];
    v10 = [v8 temporaryDirectoryURLForAccountIdentifier:v9];

    if (!v10) {
      +[ICAssert handleFailedAssertWithCondition:functionName:simulateCrash:showAlert:format:](ICAssert, "handleFailedAssertWithCondition:functionName:simulateCrash:showAlert:format:", "((tempDirectoryURL) != nil)", "-[ICSharingExtensionItemExtractor extractMediaFileURLWithProvider:contentType:completion:]_block_invoke_2", 1, 0, @"Expected non-nil value for '%s'", "tempDirectoryURL");
    }
    id v11 = +[NSUUID UUID];
    uint64_t v12 = [v11 UUIDString];
    double v13 = [v10 URLByAppendingPathComponent:v12 isDirectory:1];

    v14 = +[NSFileManager defaultManager];
    [v14 createDirectoryAtURL:v13 withIntermediateDirectories:1 attributes:0 error:0];

    v15 = [v6 lastPathComponent];
    v16 = [v13 URLByAppendingPathComponent:v15];

    id v17 = +[NSFileManager defaultManager];
    LOBYTE(v12) = [v17 linkItemAtURL:v6 toURL:v16 error:0];

    if ((v12 & 1) == 0)
    {
      v18 = +[NSFileManager defaultManager];
      v25[0] = 0;
      unsigned __int8 v19 = [v18 copyItemAtURL:v6 toURL:v16 error:v25];
      id v20 = v25[0];

      if ((v19 & 1) == 0) {
        +[ICAssert handleFailedAssertWithCondition:functionName:simulateCrash:showAlert:format:](ICAssert, "handleFailedAssertWithCondition:functionName:simulateCrash:showAlert:format:", "[[NSFileManager defaultManager] copyItemAtURL:url toURL:tempFileURL error:&copyError]", "-[ICSharingExtensionItemExtractor extractMediaFileURLWithProvider:contentType:completion:]_block_invoke_2", 1, 0, @"Extracting media file: Failed to create temporary file copy: %@", v20);
      }
    }
    id v21 = [objc_alloc((Class)ICAddAttachmentsManagerAttachmentInfo) initWithFileURL:v16];
    [v21 setUsesTemporaryFile:1];
    id v24 = *(id *)(a1 + 48);
    id v22 = v21;
    performBlockOnMainThread();
  }
  else
  {
    v23 = os_log_create("com.apple.notes", "SharingExtension");
    if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
      sub_1000B56C0(a1, (uint64_t)v7, v23);
    }

    v25[1] = _NSConcreteStackBlock;
    v25[2] = (id)3221225472;
    v25[3] = sub_10000CCA4;
    v25[4] = &unk_1000EE188;
    id v26 = *(id *)(a1 + 48);
    performBlockOnMainThread();
    double v13 = v26;
  }
}

uint64_t sub_10000CCA4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_10000CCB8(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_10000CE0C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v8 = a3;
  id v9 = *(id *)(a1 + 32);
  id v6 = v8;
  id v7 = v5;
  performBlockOnMainThreadAndWait();
}

void sub_10000CEDC(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    id v3 = [objc_alloc((Class)ICAddAttachmentsManagerAttachmentInfo) initWithFileURL:*(void *)(a1 + 32)];
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
  else
  {
    uint64_t v2 = os_log_create("com.apple.notes", "SharingExtension");
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
      sub_1000B574C(a1, v2);
    }

    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
}

void sub_10000D0C8(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v8 = a3;
  id v11 = a1[7];
  id v9 = a1[5];
  id v10 = a1[6];
  id v6 = v5;
  id v7 = v8;
  performBlockOnMainThreadAndWait();
}

void sub_10000D1CC(uint64_t a1)
{
  uint64_t v2 = (uint64_t *)(a1 + 32);
  if (*(void *)(a1 + 32))
  {
    id v3 = os_log_create("com.apple.notes", "SharingExtension");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      sub_1000B58EC(v2, v3);
    }

LABEL_5:
    (*(void (**)(void))(*(void *)(a1 + 72) + 16))();
    return;
  }
  if (!*(void *)(a1 + 40))
  {
    id v7 = os_log_create("com.apple.notes", "SharingExtension");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1000B580C(v7);
    }

    goto LABEL_5;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 && [*(id *)(a1 + 40) isFileURL])
  {
    id v22 = [objc_alloc((Class)ICAddAttachmentsManagerAttachmentInfo) initWithFileURL:*(void *)(a1 + 40)];
    (*(void (**)(void))(*(void *)(a1 + 72) + 16))();
LABEL_12:

    return;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    v4 = *(void **)(a1 + 48);
    uint64_t v5 = *(unsigned __int8 *)(a1 + 80);
    id v6 = *(id *)(a1 + 40);
    id v22 = [v4 getAttachmentInfoWithImage:v6 useTempFile:v5];
    (*(void (**)(void))(*(void *)(a1 + 72) + 16))();

    goto LABEL_12;
  }
  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  id v8 = [*(id *)(a1 + 56) registeredTypeIdentifiers];
  id v9 = [v8 countByEnumeratingWithState:&v23 objects:v27 count:16];
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = *(void *)v24;
LABEL_20:
    uint64_t v12 = 0;
    while (1)
    {
      if (*(void *)v24 != v11) {
        objc_enumerationMutation(v8);
      }
      double v13 = *(void **)(*((void *)&v23 + 1) + 8 * v12);
      v14 = +[ICUTType typeWithIdentifier:v13];
      v15 = +[ICUTType typeWithIdentifier:*(void *)(a1 + 64)];
      unsigned __int8 v16 = [v14 conformsToType:v15];

      if (v16) {
        break;
      }
      if (v10 == (id)++v12)
      {
        id v10 = [v8 countByEnumeratingWithState:&v23 objects:v27 count:16];
        if (v10) {
          goto LABEL_20;
        }
        goto LABEL_26;
      }
    }
    v18 = +[ICUTType typeWithIdentifier:v13];
    unsigned __int8 v19 = [v18 preferredFilenameExtension];

    id v17 = v13;
    if (!v19) {
      goto LABEL_29;
    }
    id v20 = objc_opt_new();
    [v20 setMediaUTI:v17];
    [v20 setMediaData:*(void *)(a1 + 40)];
    [v20 setMediaFilenameExtension:v19];
    (*(void (**)(void))(*(void *)(a1 + 72) + 16))();
  }
  else
  {
LABEL_26:

    id v17 = 0;
LABEL_29:
    id v21 = os_log_create("com.apple.notes", "SharingExtension");
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
      sub_1000B5850((id *)(a1 + 56), v21);
    }

    (*(void (**)(void))(*(void *)(a1 + 72) + 16))();
  }
}

int64_t sub_10000DE84(id a1, ICSEFolderListItem *a2, ICSEFolderListItem *a3)
{
  v4 = a3;
  unint64_t v5 = [(ICSEFolderListItem *)a2 folderListItemAccountType];
  unint64_t v6 = [(ICSEFolderListItem *)v4 folderListItemAccountType];

  return v5 > v6;
}

void sub_10000E414(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));

  if (WeakRetained)
  {
    id v4 = objc_loadWeakRetained(v2);
    [v4 dismissViewControllerAnimated:1 completion:*(void *)(a1 + 32)];
  }
}

void sub_10000E7F8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  objc_opt_class();
  id v7 = ICDynamicCast();

  if (v5)
  {
    id v8 = os_log_create("com.apple.notes", "SharingExtension");
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_1000B5464(v5, v8);
    }
  }
  else if (v7)
  {
    [*(id *)(a1 + 32) ic_addNonNilObject:v7];
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_10000E8C8(uint64_t a1)
{
  +[ICNoteContext startSharedContextWithOptions:562];
  uint64_t v2 = +[ICNoteContext sharedContext];
  [v2 addOrDeleteLocalAccountIfNecessary];

  id v3 = *(void **)(a1 + 32);
  id v4 = [*(id *)(a1 + 40) copy];
  LODWORD(v3) = [v3 shouldImportNotesWithURLs:v4];

  if (v3)
  {
    id v5 = objc_alloc_init(ICImportSERootViewController);
    [*(id *)(a1 + 32) setImportRootViewController:v5];

    id v6 = *(void **)(a1 + 32);
    id v7 = [v6 importRootViewController];
    [v7 setRootViewController:v6];

    id v8 = *(void **)(a1 + 32);
    id v9 = [v8 importRootViewController];
    [v8 addChildViewController:v9];

    id v10 = [*(id *)(a1 + 32) importRootViewController];
    uint64_t v11 = [v10 view];
    uint64_t v12 = [*(id *)(a1 + 32) view];
    [v12 bounds];
    [v11 setFrame:];

    double v13 = [*(id *)(a1 + 32) view];
    v14 = [*(id *)(a1 + 32) importRootViewController];
    v15 = [v14 view];
    [v13 addSubview:v15];

    id v38 = [*(id *)(a1 + 32) importRootViewController];
    [v38 didMoveToParentViewController:*(void *)(a1 + 32)];
  }
  else
  {
    unsigned __int8 v16 = [*(id *)(a1 + 32) navigationController];

    if (!v16)
    {
      id v17 = +[UIStoryboard storyboardWithName:@"ICSEStoryboard" bundle:0];
      v18 = [v17 instantiateInitialViewController];
      [*(id *)(a1 + 32) setContainerViewController:v18];

      unsigned __int8 v19 = *(void **)(a1 + 32);
      id v20 = [v19 containerViewController];
      [v20 setRootViewController:v19];

      id v21 = +[UIColor ICBackgroundColor];
      id v22 = [*(id *)(a1 + 32) containerViewController];
      long long v23 = [v22 view];
      [v23 setBackgroundColor:v21];

      id v24 = objc_alloc((Class)UINavigationController);
      long long v25 = [*(id *)(a1 + 32) containerViewController];
      id v26 = [v24 initWithRootViewController:v25];
      [*(id *)(a1 + 32) setNavigationController:v26];

      v27 = *(void **)(a1 + 32);
      v28 = [v27 navigationController];
      [v27 setUpNavigationController:v28];
    }
    v29 = *(void **)(a1 + 32);
    v30 = [v29 navigationController];
    [v29 addChildViewController:v30];

    v31 = [*(id *)(a1 + 32) navigationController];
    v32 = [v31 view];
    v33 = [*(id *)(a1 + 32) view];
    [v33 bounds];
    [v32 setFrame:];

    v34 = [*(id *)(a1 + 32) view];
    v35 = [*(id *)(a1 + 32) navigationController];
    v36 = [v35 view];
    [v34 addSubview:v36];

    v37 = [*(id *)(a1 + 32) navigationController];
    [v37 didMoveToParentViewController:*(void *)(a1 + 32)];

    id v38 = +[ICReachability sharedReachabilityForInternetConnection];
    [v38 performSelector:"startNotifier" withObject:0 afterDelay:0.0];
  }
}

id sub_10000F080(uint64_t a1)
{
  return [*(id *)(a1 + 32) setIsShowingSearchResults:*(unsigned __int8 *)(a1 + 40)];
}

void sub_10000F190(uint64_t a1)
{
  [*(id *)(a1 + 32) ic_presentationController];
  id v2 = (id)objc_claimAutoreleasedReturnValue();
  id v1 = [v2 containerView];
  [v1 layoutIfNeeded];
}

void sub_10000F8CC(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = [a2 allowedContentTypes];
  [v2 addObjectsFromArray:v3];
}

void sub_10000FCF8(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10000FD10(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10000FD20(uint64_t a1)
{
}

void sub_10000FD28(uint64_t a1)
{
  id v6 = [*(id *)(a1 + 32) objectID];
  id v2 = [*(id *)(a1 + 40) managedObjectContext];
  uint64_t v3 = +[ICAccount ic_existingObjectWithID:v6 context:v2];
  uint64_t v4 = *(void *)(*(void *)(a1 + 48) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

void sub_10000FDC0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    uint64_t v3 = objc_alloc_init(ICImportFolder);
    [WeakRetained addURLs:*(void *)(a1 + 32) toImportFolder:v3 shouldPreserveFolders:*(unsigned __int8 *)(a1 + 64)];
    uint64_t v4 = +[NSBundle mainBundle];
    id v5 = [v4 localizedStringForKey:@"Imported Notes" value:&stru_1000F2510 table:0];

    id v6 = [*(id *)(a1 + 40) newFolderWithTitle:v5 parentFolder:0 forAccount:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40)];
    [(ICImportFolder *)v3 setFolder:v6];
    uint64_t v7 = *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_10000FF4C;
    v10[3] = &unk_1000EE358;
    id v11 = WeakRetained;
    uint64_t v12 = v3;
    id v13 = v6;
    long long v14 = *(_OWORD *)(a1 + 40);
    id v8 = v6;
    id v9 = v3;
    [v11 traverseImportFolder:v9 forAccount:v7 shouldImportNotes:0 completionBlock:v10];
  }
}

void sub_10000FF4C(uint64_t a1)
{
  [*(id *)(a1 + 32) setState:2];
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100010020;
  v7[3] = &unk_1000EE008;
  id v8 = v2;
  id v5 = *(id *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  id v9 = v5;
  uint64_t v10 = v6;
  [v8 traverseImportFolder:v3 forAccount:v4 shouldImportNotes:1 completionBlock:v7];
}

void sub_100010020(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) managedObjectContext];
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_100010188;
  v12[3] = &unk_1000EE0C0;
  id v13 = *(id *)(a1 + 40);
  [v2 performBlockAndWait:v12];

  uint64_t v3 = [*(id *)(a1 + 32) managedObjectContext];
  uint64_t v7 = _NSConcreteStackBlock;
  uint64_t v8 = 3221225472;
  id v9 = sub_100010230;
  uint64_t v10 = &unk_1000EE0C0;
  id v11 = *(id *)(a1 + 32);
  [v3 performBlockAndWait:&v7];

  [*(id *)(a1 + 32) setState:0 v7, v8, v9, v10];
  uint64_t v4 = [*(id *)(a1 + 32) delegate];
  char v5 = objc_opt_respondsToSelector();

  if (v5)
  {
    uint64_t v6 = [*(id *)(a1 + 32) delegate];
    [v6 importCompletedForNoteProcessor:*(void *)(a1 + 48) destinationFolder:*(void *)(a1 + 40)];
  }
}

void sub_100010188(uint64_t a1)
{
  id v4 = [*(id *)(a1 + 32) visibleSubFolders];
  if ([v4 count])
  {
  }
  else
  {
    id v2 = [*(id *)(a1 + 32) visibleNotesCount];

    if (!v2)
    {
      uint64_t v3 = *(void *)(a1 + 32);
      +[ICFolder deleteFolder:v3];
    }
  }
}

void sub_100010230(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 32) managedObjectContext];
  id v4 = 0;
  [v1 save:&v4];
  id v2 = v4;

  if (v2)
  {
    uint64_t v3 = os_log_create("com.apple.notes", "Import");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      sub_1000B5B90(v2);
    }
  }
}

void sub_100010604(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10001061C(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v7 = a2;
  if ([v7 canHandleFileURL:*(void *)(a1 + 32)])
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
    *a4 = 1;
  }
}

void sub_10001168C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id *a25,id *a26,id *a27,id *location)
{
}

intptr_t sub_10001170C(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained setTotalNoteFound:[WeakRetained totalNoteFound] + a2];

  char v5 = *(NSObject **)(a1 + 32);

  return dispatch_semaphore_signal(v5);
}

id sub_10001176C(id *a1)
{
  v18[0] = 0;
  v18[1] = v18;
  v18[2] = 0x3032000000;
  v18[3] = sub_10000FD10;
  v18[4] = sub_10000FD20;
  id v19 = [a1[4] folder];
  id v2 = [a1[4] folder];

  if (!v2)
  {
    uint64_t v3 = [a1[5] managedObjectContext];
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472;
    v15[2] = sub_1000119AC;
    v15[3] = &unk_1000EE3F8;
    id v17 = v18;
    id v16 = a1[5];
    [v3 performBlockAndWait:v15];
  }
  uint64_t v9 = 0;
  uint64_t v10 = &v9;
  uint64_t v11 = 0x3032000000;
  uint64_t v12 = sub_10000FD10;
  id v13 = sub_10000FD20;
  id v14 = 0;
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  char v5 = [WeakRetained managedObjectContext];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1000119F8;
  v8[3] = &unk_1000EE420;
  v8[4] = &v9;
  v8[5] = v18;
  [v5 performBlockAndWait:v8];

  id v6 = (id)v10[5];
  _Block_object_dispose(&v9, 8);

  _Block_object_dispose(v18, 8);

  return v6;
}

void sub_100011980(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1000119AC(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) defaultFolder];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

id sub_1000119F8(uint64_t a1)
{
  id v2 = +[ICNote newEmptyNoteInFolder:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)];
  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;

  char v5 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40);

  return [v5 setNeedsInitialFetchFromCloud:1];
}

void sub_100011A64(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 managedObjectContext];
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  v17[2] = sub_100011C0C;
  v17[3] = &unk_1000EE0C0;
  id v5 = v3;
  id v18 = v5;
  [v4 performBlockAndWait:v17];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  [WeakRetained setTotalNoteImported:[WeakRetained totalNoteImported] + 1];
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    ++*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  }
  if ([WeakRetained totalNoteImported]
    && 0xCCCCCCCCCCCCCCCDLL * (unint64_t)[WeakRetained totalNoteImported] <= 0x3333333333333333)
  {
    id v7 = [WeakRetained managedObjectContext];
    uint64_t v10 = _NSConcreteStackBlock;
    uint64_t v11 = 3221225472;
    uint64_t v12 = sub_100011C64;
    id v13 = &unk_1000EE470;
    id v8 = WeakRetained;
    uint64_t v9 = *(void *)(a1 + 32);
    id v14 = v8;
    uint64_t v15 = v9;
    uint64_t v16 = *(void *)(a1 + 48);
    [v7 performBlockAndWait:&v10];
  }
  [WeakRetained updateImportProgress:v10, v11, v12, v13];
}

id sub_100011C0C(uint64_t a1)
{
  [*(id *)(a1 + 32) setNeedsInitialFetchFromCloud:0];
  [*(id *)(a1 + 32) regenerateTitle:1 snippet:1];
  id v2 = *(void **)(a1 + 32);

  return [v2 updateChangeCountWithReason:@"Imported note"];
}

void sub_100011C64(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) managedObjectContext];
  id v5 = 0;
  [v2 save:&v5];
  id v3 = v5;

  if (v3)
  {
    id v4 = os_log_create("com.apple.notes", "Import");
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1000B5B90(v3);
    }

    if (*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)) {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 0;
    }
  }
}

void sub_100011D24(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  id v3 = [WeakRetained currentErrorFileURLs];
  [v3 addObject:*(void *)(a1 + 32)];

  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)) {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 0;
  }
}

intptr_t sub_100011D90(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_100011F04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100011F1C(void *a1)
{
  if (a1[4])
  {
    id v2 = +[ICFolder newFolderInParentFolder:](ICFolder, "newFolderInParentFolder:");
  }
  else
  {
    if (!a1[5]) {
      goto LABEL_6;
    }
    id v2 = +[ICFolder newFolderInAccount:](ICFolder, "newFolderInAccount:");
  }
  uint64_t v3 = *(void *)(a1[7] + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;

LABEL_6:
  id v5 = +[NSDate date];
  [*(id *)(*(void *)(a1[7] + 8) + 40) setDateForLastTitleModification:v5];

  id v6 = (void *)a1[6];
  id v7 = +[NSCharacterSet whitespaceAndNewlineCharacterSet];
  id v8 = [v6 stringByTrimmingCharactersInSet:v7];
  id v10 = +[ICFolder stringByScrubbingStringForFolderName:v8];

  uint64_t v9 = +[ICFolder deduplicatingTitle:v10 forFolder:*(void *)(*(void *)(a1[7] + 8) + 40) ofAccount:a1[5]];
  [*(id *)(*(void *)(a1[7] + 8) + 40) setTitle:v9];
  [*(id *)(*(void *)(a1[7] + 8) + 40) updateChangeCountWithReason:@"Imported folder"];
}

uint64_t sub_10001223C(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_100012250(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_error_impl(a1, v4, OS_LOG_TYPE_ERROR, a4, v5, 0xCu);
}

void sub_100012270(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

uint64_t sub_10001302C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v12 = &a9;
  if (!a1) {
    return 1;
  }
  uint64_t v9 = a1;
  uint64_t result = 1;
  do
  {
    uint64_t result = v9 - result + 32 * result;
    uint64_t v11 = (uint64_t *)v12;
    v12 += 8;
    uint64_t v9 = *v11;
  }
  while (v9);
  return result;
}

id sub_100013ED4(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:*(double *)(a1 + 40)];
}

void sub_1000153F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id a17)
{
}

void sub_100015428(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = [WeakRetained representedItem];
  uint64_t v3 = [v2 folder];

  if (v3)
  {
    os_log_t v4 = [v2 folder];
    [WeakRetained selectNote:0 orFolder:v4 prefersSystemPaper:0];
  }
  else
  {
    id v5 = [WeakRetained representedItem];
    uint64_t v6 = [v5 account];

    if (v6)
    {
      os_log_t v4 = [v2 account];
      id v7 = [v4 defaultFolder];
      [WeakRetained selectNote:0 orFolder:v7 prefersSystemPaper:[v2 isSystemPaperFolder]];
    }
    else
    {
      os_log_t v4 = os_log_create("com.apple.notes", "SharingExtension");
      if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
        sub_1000B5D58(WeakRetained, v4);
      }
    }
  }
}

NSDictionary *__cdecl sub_100015550(id a1, NSDictionary *a2)
{
  id v2 = [(NSDictionary *)a2 mutableCopy];
  uint64_t v3 = +[UIFont preferredFontForTextStyle:UIFontTextStyleHeadline];
  [v2 setObject:v3 forKeyedSubscript:NSFontAttributeName];

  id v4 = [v2 copy];

  return (NSDictionary *)v4;
}

BOOL sub_1000170EC(id a1, ICNote *a2, unint64_t a3, BOOL *a4)
{
  return [(ICNote *)a2 isSystemPaper];
}

id sub_100017860(uint64_t a1)
{
  [*(id *)(a1 + 32) setNeedsLayout];
  id v2 = *(void **)(a1 + 32);

  return [v2 layoutIfNeeded];
}

void sub_100019388(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) view];
  [v2 layoutIfNeeded];

  if (*(unsigned char *)(a1 + 40)) {
    double v3 = 1.0;
  }
  else {
    double v3 = 0.0;
  }
  id v4 = [*(id *)(a1 + 32) searchCancelButton];
  [v4 setAlpha:v3];

  id v5 = [*(id *)(a1 + 32) navigationController];
  [v5 setNavigationBarHidden:*(unsigned __int8 *)(a1 + 40) animated:*(unsigned __int8 *)(a1 + 41)];
}

void sub_10001974C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location,id a21)
{
  objc_destroyWeak(v22);
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a21);
  _Unwind_Resume(a1);
}

void sub_100019784(id *a1)
{
  id WeakRetained = objc_loadWeakRetained(a1 + 7);
  id v3 = [WeakRetained requestIndex];
  if (([WeakRetained isCancelled] & 1) == 0
    && v3 == [a1[4] queryRequestIndex])
  {
    id v20 = v3;
    id v4 = [WeakRetained results];
    id v21 = objc_alloc_init((Class)NSMutableArray);
    long long v30 = 0u;
    long long v31 = 0u;
    long long v32 = 0u;
    long long v33 = 0u;
    id v5 = v4;
    id v6 = [v5 countByEnumeratingWithState:&v30 objects:v34 count:16];
    if (v6)
    {
      uint64_t v7 = *(void *)v31;
      do
      {
        for (i = 0; i != v6; i = (char *)i + 1)
        {
          if (*(void *)v31 != v7) {
            objc_enumerationMutation(v5);
          }
          uint64_t v9 = *(void **)(*((void *)&v30 + 1) + 8 * i);
          uint64_t v10 = [v9 attributeSet];
          BOOL v11 = [v10 ic_searchResultType] == 0;

          if (v11)
          {
            uint64_t v12 = [v9 uniqueIdentifier];
            id v13 = [a1[5] persistentStoreCoordinator];
            id v14 = [v13 ic_managedObjectIDForURIString:v12];

            if (v14)
            {
              id v15 = a1[5];
              v26[0] = _NSConcreteStackBlock;
              v26[1] = 3221225472;
              v26[2] = sub_100019AA4;
              v26[3] = &unk_1000EE008;
              id v16 = v15;
              id v27 = v16;
              id v28 = v14;
              id v29 = v21;
              [v16 performBlockAndWait:v26];
            }
          }
        }
        id v6 = [v5 countByEnumeratingWithState:&v30 objects:v34 count:16];
      }
      while (v6);
    }

    v22[0] = _NSConcreteStackBlock;
    v22[1] = 3221225472;
    v22[2] = sub_100019B24;
    v22[3] = &unk_1000EE608;
    id v17 = a1[4];
    id v18 = a1[5];
    v25[1] = v20;
    v22[4] = v17;
    objc_copyWeak(v25, a1 + 8);
    id v23 = a1[6];
    id v19 = v21;
    id v24 = v19;
    [v18 performBlock:v22];

    objc_destroyWeak(v25);
  }
}

void sub_100019A88(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100019AA4(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) existingObjectWithID:*(void *)(a1 + 40) error:0];
  objc_opt_class();
  id v2 = ICDynamicCast();
  [*(id *)(a1 + 48) ic_addNonNilObject:v2];
}

void sub_100019B24(uint64_t a1)
{
  id v2 = *(id *)(a1 + 64);
  if (v2 == [*(id *)(a1 + 32) queryRequestIndex])
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
    [WeakRetained setupSearchResultsWithSearchString:*(void *)(a1 + 40) notes:*(void *)(a1 + 48)];
  }
}

BOOL sub_100019EB4(id a1, ICFolder *a2, unint64_t a3, BOOL *a4)
{
  id v4 = a2;
  if ([(ICFolder *)v4 isVisible]) {
    unsigned int v5 = [(ICFolder *)v4 isTrashFolder] ^ 1;
  }
  else {
    LOBYTE(v5) = 0;
  }

  return v5;
}

id sub_10001A010(uint64_t a1, void *a2)
{
  id v3 = [a2 localizedTitle];
  id v4 = [v3 localizedCaseInsensitiveContainsString:*(void *)(a1 + 32)];

  return v4;
}

uint64_t sub_10001AF68(uint64_t a1)
{
  [*(id *)(a1 + 32) setIsParsing:0];
  [*(id *)(a1 + 32) setShouldCancelParsingProcess:0];
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    id v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

void sub_10001B1B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10001B1DC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
  if (WeakRetained)
  {
    if (v6)
    {
      uint64_t v8 = *(void *)(a1 + 40);
      if (v8) {
        (*(void (**)(uint64_t, id))(v8 + 16))(v8, v6);
      }
    }
    id v18 = v6;
    id v19 = v5;
    long long v31 = 0u;
    long long v32 = 0u;
    long long v30 = 0u;
    long long v29 = 0u;
    id obj = v5;
    id v9 = [obj countByEnumeratingWithState:&v29 objects:v33 count:16];
    if (v9)
    {
      id v10 = v9;
      uint64_t v11 = *(void *)v30;
      do
      {
        uint64_t v12 = 0;
        do
        {
          if (*(void *)v30 != v11) {
            objc_enumerationMutation(obj);
          }
          uint64_t v13 = *(void *)(*((void *)&v29 + 1) + 8 * (void)v12);
          id v14 = [WeakRetained contentParseQueue:v18, v19];
          block[0] = _NSConcreteStackBlock;
          block[1] = 3221225472;
          block[2] = sub_10001B468;
          block[3] = &unk_1000EE760;
          block[4] = v13;
          id v15 = WeakRetained;
          uint64_t v16 = *(void *)(a1 + 32);
          id v25 = v15;
          uint64_t v26 = v16;
          id v27 = *(id *)(a1 + 48);
          id v28 = *(id *)(a1 + 56);
          dispatch_async(v14, block);

          uint64_t v12 = (char *)v12 + 1;
        }
        while (v10 != v12);
        id v10 = [obj countByEnumeratingWithState:&v29 objects:v33 count:16];
      }
      while (v10);
    }

    id v17 = [WeakRetained contentParseQueue];
    v21[0] = _NSConcreteStackBlock;
    v21[1] = 3221225472;
    v21[2] = sub_10001BF54;
    v21[3] = &unk_1000EE788;
    id v22 = WeakRetained;
    id v23 = *(id *)(a1 + 64);
    dispatch_async(v17, v21);

    id v6 = v18;
    id v5 = v19;
  }
}

void sub_10001B468(id *a1)
{
  id v28 = a1;
  id v27 = [a1[4] objectForKeyedSubscript:@"archiveId"];
  id v24 = [a1[4] objectForKeyedSubscript:@"noteId"];
  id v2 = a1;
  if ([a1[5] shouldCancelParsingProcess])
  {
    id v3 = [a1[6] notesImporterClient];
    [v3 cleanupArchiveId:v27 completionBlock:0];
  }
  else
  {
    uint64_t v60 = 0;
    v61 = &v60;
    uint64_t v62 = 0x3032000000;
    v63 = sub_10001BB20;
    v64 = sub_10001BB30;
    id v65 = 0;
    dispatch_semaphore_t v4 = dispatch_semaphore_create(0);
    id v5 = [v2[5] notesImporterClient];
    v57[0] = _NSConcreteStackBlock;
    v57[1] = 3221225472;
    v57[2] = sub_10001BB38;
    v57[3] = &unk_1000EE6E8;
    v59 = &v60;
    id v6 = v4;
    v58 = v6;
    [v5 unarchiveEvernoteNoteFromArchiveId:v27 noteArchiveId:v24 completionBlock:v57];

    dispatch_semaphore_wait(v6, 0xFFFFFFFFFFFFFFFFLL);
    if ([v28[5] shouldCancelParsingProcess])
    {
      uint64_t v7 = [v28[6] notesImporterClient];
      [v7 cleanupArchiveId:v27 completionBlock:0];
    }
    else
    {
      uint64_t v51 = 0;
      v52 = &v51;
      uint64_t v53 = 0x3032000000;
      v54 = sub_10001BB20;
      v55 = sub_10001BB30;
      id v56 = 0;
      dispatch_semaphore_t v8 = dispatch_semaphore_create(0);

      id v9 = [v28[5] notesImporterClient];
      id v10 = [(id)v61[5] content];
      v46[0] = _NSConcreteStackBlock;
      v46[1] = 3221225472;
      v46[2] = sub_10001BB98;
      v46[3] = &unk_1000EE710;
      v49 = &v51;
      id v47 = v28[5];
      v50 = &v60;
      id v6 = v8;
      v48 = v6;
      [v9 parseHTMLStringFromEvernoteContentString:v10 completionBlock:v46];

      dispatch_semaphore_wait(v6, 0xFFFFFFFFFFFFFFFFLL);
      if ([v28[5] shouldCancelParsingProcess])
      {
        uint64_t v11 = [v28[6] notesImporterClient];
        [v11 cleanupArchiveId:v27 completionBlock:0];
      }
      else
      {
        uint64_t v12 = (void (**)(void))v28[7];
        if (v12 && (v12[2](), (uint64_t v13 = objc_claimAutoreleasedReturnValue()) != 0))
        {
          id v22 = [v28[4] objectForKeyedSubscript:@"resourceIds"];
          if (v22 && v52[5])
          {
            long long v44 = 0u;
            long long v45 = 0u;
            long long v42 = 0u;
            long long v43 = 0u;
            id obj = v22;
            id v14 = [obj countByEnumeratingWithState:&v42 objects:v66 count:16];
            if (v14)
            {
              uint64_t v26 = *(void *)v43;
              do
              {
                for (i = 0; i != v14; i = (char *)i + 1)
                {
                  if (*(void *)v43 != v26) {
                    objc_enumerationMutation(obj);
                  }
                  uint64_t v16 = *(void *)(*((void *)&v42 + 1) + 8 * i);
                  uint64_t v36 = 0;
                  v37 = &v36;
                  uint64_t v38 = 0x3032000000;
                  v39 = sub_10001BB20;
                  v40 = sub_10001BB30;
                  id v41 = 0;
                  dispatch_semaphore_t v17 = dispatch_semaphore_create(0);

                  id v18 = [v28[5] notesImporterClient];
                  v33[0] = _NSConcreteStackBlock;
                  v33[1] = 3221225472;
                  v33[2] = sub_10001BC40;
                  v33[3] = &unk_1000EE738;
                  v35 = &v36;
                  id v6 = v17;
                  v34 = v6;
                  [v18 unarchiveEvernoteResourceFromArchiveId:v27 resourceArchiveId:v16 completionBlock:v33];

                  dispatch_semaphore_wait(v6, 0xFFFFFFFFFFFFFFFFLL);
                  [v28[6] addAttachmentsInContent:v52[5] forEvernoteResource:v37[5] forNote:v13];

                  _Block_object_dispose(&v36, 8);
                }
                id v14 = [obj countByEnumeratingWithState:&v42 objects:v66 count:16];
              }
              while (v14);
            }
          }
          id v19 = [v13 managedObjectContext];
          v29[0] = _NSConcreteStackBlock;
          v29[1] = 3221225472;
          v29[2] = sub_10001BCA0;
          v29[3] = &unk_1000EE470;
          uint64_t v11 = v13;
          long long v30 = v11;
          long long v31 = &v60;
          long long v32 = &v51;
          [v19 performBlockAndWait:v29];

          id v20 = [v28[6] notesImporterClient];
          [v20 cleanupArchiveId:v27 completionBlock:0];

          id v21 = (void (**)(id, NSObject *))v28[8];
          if (v21) {
            v21[2](v21, v11);
          }
        }
        else
        {
          uint64_t v11 = os_log_create("com.apple.notes", "Import");
          if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
            sub_1000B5E68();
          }
        }
      }

      _Block_object_dispose(&v51, 8);
    }

    _Block_object_dispose(&v60, 8);
  }
}

void sub_10001BAC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _Block_object_dispose(&a54, 8);
  _Block_object_dispose(&a66, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10001BB20(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10001BB30(uint64_t a1)
{
}

void sub_10001BB38(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  id v4 = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

intptr_t sub_10001BB98(uint64_t a1, uint64_t a2)
{
  id v3 = +[ICNote attributedStringFromHTMLString:a2];
  id v4 = [v3 mutableCopy];
  uint64_t v5 = *(void *)(*(void *)(a1 + 48) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;

  uint64_t v7 = *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
  if (v7)
  {
    [*(id *)(a1 + 32) addTodoListsIfNeededInContent:v7 forEvernoteNote:*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40)];
    [*(id *)(a1 + 32) addTitleInContent:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) forEvernoteNote:*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40)];
  }
  dispatch_semaphore_t v8 = *(NSObject **)(a1 + 40);

  return dispatch_semaphore_signal(v8);
}

void sub_10001BC40(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  id v4 = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_10001BCA0(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) created];
  if (v2)
  {
    id v3 = (id *)(a1 + 32);
    [*(id *)(a1 + 32) setCreationDate:v2];
  }
  else
  {
    id v4 = +[NSDate date];
    id v3 = (id *)(a1 + 32);
    [*(id *)(a1 + 32) setCreationDate:v4];
  }
  uint64_t v5 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) updated];
  if (v5)
  {
    [*v3 setModificationDate:v5];
  }
  else
  {
    id v6 = +[NSDate date];
    [*v3 setModificationDate:v6];
  }
  if (*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40))
  {
    uint64_t v7 = [*(id *)(a1 + 32) textStorage];
    id v8 = objc_alloc_init((Class)ICTextController);
    [v7 setStyler:v8];

    [v7 setConvertAttributes:1];
    [v7 setWantsUndoCommands:0];
    [v7 replaceCharactersInRange:0 withAttributedString:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40)];
    [v7 fixupAfterEditing];
    [v7 setConvertAttributes:0];
    [v7 setStyler:0];
  }
  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v9 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) tags];
  id v10 = [v9 countByEnumeratingWithState:&v18 objects:v22 count:16];
  if (v10)
  {
    id v11 = v10;
    uint64_t v12 = *(void *)v19;
    do
    {
      for (i = 0; i != v11; i = (char *)i + 1)
      {
        if (*(void *)v19 != v12) {
          objc_enumerationMutation(v9);
        }
        uint64_t v14 = *(void *)(*((void *)&v18 + 1) + 8 * i);
        id v15 = [*v3 account];
        uint64_t v16 = +[ICHashtag hashtagWithDisplayText:v14 account:v15 createIfNecessary:1];

        dispatch_semaphore_t v17 = [*v3 addHashtagToNoteBodyIfMissing:v16];
        [v17 updateChangeCountWithReason:@"Imported tag"];
      }
      id v11 = [v9 countByEnumeratingWithState:&v18 objects:v22 count:16];
    }
    while (v11);
  }
}

uint64_t sub_10001BF54(uint64_t a1)
{
  [*(id *)(a1 + 32) setIsParsing:0];
  [*(id *)(a1 + 32) setShouldCancelParsingProcess:0];
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    id v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

void sub_10001C68C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
}

void sub_10001C6AC(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  id v4 = [*(id *)(a1 + 48) data];
  id v8 = [v2 addAttachmentWithUTI:v3 data:v4 filename:*(void *)(a1 + 56)];

  [v8 setTitle:*(void *)(a1 + 56)];
  uint64_t v5 = +[ICTextAttachment textAttachmentWithAttachment:v8];
  uint64_t v6 = *(void *)(*(void *)(a1 + 64) + 8);
  uint64_t v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;

  [v8 updateChangeCountWithReason:@"Imported attachment"];
}

void sub_10001CCB4(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 2u);
}

void sub_10001E140(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10001E160(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10001E170(uint64_t a1)
{
}

void sub_10001E178(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2)
  {
    id v3 = +[ICNote ic_objectsFromObjectIDs:a2 context:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)];
    (*(void (**)(uint64_t, id))(v2 + 16))(v2, v3);
  }
}

uint64_t sub_10001E43C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 account];
  if (v4 == *(void **)(a1 + 32)) {
    uint64_t v5 = (uint64_t)[v3 isDeletedOrInTrash];
  }
  else {
    uint64_t v5 = 1;
  }

  return v5;
}

void sub_10001E4A4(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  id v4 = [*(id *)(a1 + 48) type];
  [v2 undoablyMoveNotes:v3 toVirtualSmartFolderType:v4 completionHandler:*(void *)(a1 + 56)];
}

void sub_10001F03C(uint64_t a1)
{
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v8 + 1) + 8 * (void)v6) markAsSystemPaperIfNeeded:*(unsigned __int8 *)(a1 + 48) v8];
        uint64_t v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }

  uint64_t v7 = [*(id *)(a1 + 40) managedObjectContext];
  [v7 ic_save];
}

void sub_10001F23C(uint64_t a1)
{
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v8 + 1) + 8 * (void)v6) markAsMathNoteIfNeeded:*(unsigned __int8 *)(a1 + 48) (void)v8];
        uint64_t v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }

  uint64_t v7 = [*(id *)(a1 + 40) managedObjectContext];
  [v7 ic_save];
}

void sub_10001F43C(uint64_t a1)
{
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v8 + 1) + 8 * (void)v6) markAsCallNoteIfNeeded:*(unsigned __int8 *)(a1 + 48) v8];
        uint64_t v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }

  uint64_t v7 = [*(id *)(a1 + 40) managedObjectContext];
  [v7 ic_save];
}

void sub_10001FC30(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) managedObjectContext];
  [v1 ic_save];
}

void sub_100020014(uint64_t a1)
{
  if ([*(id *)(a1 + 32) isSmartFolder])
  {
    id v6 = [*(id *)(a1 + 32) account];
    id v2 = [*(id *)(a1 + 32) smartFolderQuery];
    id v3 = [v2 tagSelectionWithManagedObjectContext:*(void *)(a1 + 40)];
    if ([v3 isNonEmpty]) {
      BOOL v4 = v6 == 0;
    }
    else {
      BOOL v4 = 1;
    }
    if (!v4)
    {
      uint64_t v5 = [v3 tagIdentifiers];
      [v6 deleteUnusedHashtagsWithStandardizedContent:v5];
    }
  }
}

void sub_1000201D4(uint64_t a1)
{
  if ([*(id *)(a1 + 32) isSmartFolder])
  {
    id v2 = [*(id *)(a1 + 32) smartFolderQuery];
    id v3 = [v2 tagSelectionWithManagedObjectContext:*(void *)(a1 + 40)];
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    long long v15 = 0u;
    BOOL v4 = [v3 tagIdentifiers];
    id v5 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
    if (v5)
    {
      id v6 = v5;
      uint64_t v7 = *(void *)v13;
      do
      {
        long long v8 = 0;
        do
        {
          if (*(void *)v13 != v7) {
            objc_enumerationMutation(v4);
          }
          uint64_t v9 = *(void *)(*((void *)&v12 + 1) + 8 * (void)v8);
          long long v10 = [*(id *)(a1 + 32) account];
          long long v11 = +[ICHashtag hashtagWithStandardizedContent:v9 onlyVisible:0 account:v10];
          [v11 unmarkForDeletion];

          long long v8 = (char *)v8 + 1;
        }
        while (v6 != v8);
        id v6 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
      }
      while (v6);
    }
  }
}

void sub_100020D74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100020D8C(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 setTotalUnitCount:[*(id *)(a1 + 32) count]];
  [v3 setCompletedUnitCount:0];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_100020E88;
  v8[3] = &unk_1000EE8A0;
  BOOL v4 = *(void **)(a1 + 40);
  id v9 = *(id *)(a1 + 32);
  id v10 = v3;
  id v11 = *(id *)(a1 + 40);
  id v5 = *(id *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  id v12 = v5;
  uint64_t v13 = v6;
  id v7 = v3;
  [v4 performBlockAndWait:v8];
}

void sub_100020E88(uint64_t a1)
{
  long long v21 = +[NSMutableArray array];
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v23 objects:v29 count:16];
  if (v3)
  {
    id v5 = v3;
    uint64_t v6 = 0;
    uint64_t v7 = *(void *)v24;
    *(void *)&long long v4 = 138412290;
    long long v20 = v4;
    while (2)
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(void *)v24 != v7) {
          objc_enumerationMutation(v2);
        }
        uint64_t v9 = *(void *)(*((void *)&v23 + 1) + 8 * i);
        if ([*(id *)(a1 + 40) isCancelled])
        {
          goto LABEL_16;
        }
        id v11 = +[ICNote ic_existingObjectWithID:v9 context:*(void *)(a1 + 48)];
        if (v11)
        {
          id v12 = (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
          if (v12) {
            [v21 addObject:v12];
          }
        }
        else
        {
          id v12 = os_log_create("com.apple.notes", "Move");
          if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)buf = v20;
            uint64_t v28 = v9;
            _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "Cannot retrieve note to be processed â€” skipping {objectID: %@}", buf, 0xCu);
          }
        }

        [*(id *)(a1 + 40) setCompletedUnitCount:(char *)i + v6 + 1];
      }
      id v5 = [v2 countByEnumeratingWithState:&v23 objects:v29 count:16];
      v6 += (uint64_t)i;
      if (v5) {
        continue;
      }
      break;
    }
  }
LABEL_16:

  if (objc_msgSend(*(id *)(a1 + 48), "ic_isMainThreadContext"))
  {
    id v13 = 0;
  }
  else
  {
    long long v14 = *(void **)(a1 + 48);
    id v22 = 0;
    unsigned __int8 v15 = [v14 save:&v22];
    id v13 = v22;
    if ((v15 & 1) == 0)
    {
      uint64_t v16 = os_log_create("com.apple.notes", "CoreData");
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_1000B648C();
      }
    }
  }
  uint64_t v17 = +[NSManagedObject ic_permanentObjectIDsFromObjects:](NSManagedObject, "ic_permanentObjectIDsFromObjects:", v21, v20);
  uint64_t v18 = *(void *)(*(void *)(a1 + 64) + 8);
  long long v19 = *(void **)(v18 + 40);
  *(void *)(v18 + 40) = v17;
}

uint64_t sub_100021134(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40));
  }
  return result;
}

NSString *__cdecl sub_1000212D4(id a1, unint64_t a2, unint64_t a3)
{
  id v5 = +[NSBundle mainBundle];
  uint64_t v6 = [v5 localizedStringForKey:@"Moving note %lu of %luâ€¦" value:&stru_1000F2510 table:0];

  uint64_t v7 = +[NSString localizedStringWithFormat:](NSString, "localizedStringWithFormat:", v6, a2, a3);

  return (NSString *)v7;
}

id sub_100021374(uint64_t a1, void *a2)
{
  id v3 = a2;
  long long v4 = *(void **)(a1 + 32);
  id v5 = [v3 objectID];
  uint64_t v6 = [v4 objectForKeyedSubscript:v5];

  if (v6)
  {
    uint64_t v7 = *(void **)(a1 + 32);
    long long v8 = [v3 objectID];
    uint64_t v9 = [v7 objectForKeyedSubscript:v8];
    id v10 = [v3 managedObjectContext];
    id v11 = +[ICFolder ic_existingObjectWithID:v9 context:v10];
  }
  else
  {
    id v11 = 0;
  }
  if ([v11 isSmartFolder])
  {
    id v12 = os_log_create("com.apple.notes", "CoreData");
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG)) {
      sub_1000B6578();
    }

    id v13 = [v11 account];
    uint64_t v14 = [v13 defaultFolder];

    id v11 = (void *)v14;
  }
  if (v11)
  {
    if ([v3 markedForDeletion])
    {
      unsigned __int8 v15 = *(void **)(a1 + 40);
      uint64_t v16 = [v3 objectID];
      uint64_t v17 = [v15 objectForKeyedSubscript:v16];

      uint64_t v18 = [v3 managedObjectContext];
      long long v19 = +[ICNote ic_existingObjectWithID:v17 context:v18];

      [*(id *)(a1 + 48) unmarkNoteAndAttachmentsForDeletion:v3];
      if (v19)
      {
        [*(id *)(a1 + 48) markNoteAndAttachmentsForDeletion:v19];
      }
      else
      {
        long long v23 = os_log_create("com.apple.notes", "CoreData");
        if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
          sub_1000B6544();
        }
      }
      id v21 = v3;
    }
    else
    {
      [v3 setFolder:v11];
      id v22 = +[NSDate date];
      [v3 setFolderModificationDate:v22];

      [v3 updateChangeCountWithReason:@"Unmoved note"];
      id v21 = v3;
    }
  }
  else
  {
    long long v20 = os_log_create("com.apple.notes", "CoreData");
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
      sub_1000B64C0(v3);
    }

    id v21 = 0;
  }

  return v21;
}

NSString *__cdecl sub_1000218BC(id a1, unint64_t a2, unint64_t a3)
{
  id v5 = +[NSBundle mainBundle];
  uint64_t v6 = [v5 localizedStringForKey:@"Moving note %lu of %luâ€¦" value:&stru_1000F2510 table:0];

  uint64_t v7 = +[NSString localizedStringWithFormat:](NSString, "localizedStringWithFormat:", v6, a2, a3);

  return (NSString *)v7;
}

id sub_10002195C(uint64_t a1, void *a2)
{
  id v3 = a2;
  long long v4 = [v3 folder];
  id v5 = *(void **)(a1 + 32);
  uint64_t v6 = [v3 objectID];
  uint64_t v7 = [v5 objectForKeyedSubscript:v6];
  if (v7)
  {
    long long v8 = *(void **)(a1 + 32);
    uint64_t v9 = [v3 objectID];
    id v10 = [v8 objectForKeyedSubscript:v9];
    id v11 = [v3 managedObjectContext];
    id v12 = +[ICFolder ic_existingObjectWithID:v10 context:v11];
  }
  else
  {
    id v12 = 0;
  }

  if ([v12 isSmartFolder])
  {
    id v13 = [v3 account];
    uint64_t v14 = [v13 defaultFolder];

    id v12 = (void *)v14;
  }
  if (v12)
  {
    unsigned __int8 v15 = [v3 folder];
    uint64_t v16 = [v15 objectID];
    uint64_t v17 = *(void **)(a1 + 40);
    uint64_t v18 = [v3 objectID];
    [v17 setObject:v16 forKeyedSubscript:v18];

    if (+[ICMoveDecision shouldCopyThenDeleteWhenMovingObject:v3 toNoteContainer:v12])
    {
      if ([v3 isPasswordProtected])
      {
        if ([v3 isAuthenticated])
        {
          id v19 = +[ICNote duplicateNote:v3 intoFolder:v12 isPasswordProtected:1 removeOriginalNote:1];
          [v19 setIsPinned:[v3 isPinned]];
          [v19 setPreferredBackgroundType:[v3 preferredBackgroundType]];
          [v19 updateChangeCountWithReason:@"Moved note"];
        }
        else
        {
          id v19 = 0;
        }
        id v21 = 0;
        goto LABEL_19;
      }
      id v19 = +[ICNote newEmptyNoteInFolder:v12];
      long long v24 = [v19 ic_permanentObjectID];
      long long v25 = *(void **)(a1 + 48);
      long long v26 = [v3 objectID];
      [v25 setObject:v24 forKeyedSubscript:v26];

      [v3 copyValuesToNote:v19];
      id v27 = [v3 account];
      [v19 setAccount:v27];

      uint64_t v28 = [v12 account];
      [v19 setAccount:v28];

      long long v29 = +[NSDate date];
      [v19 setFolderModificationDate:v29];

      [v19 updateChangeCountWithReason:@"Moved note"];
      [*(id *)(a1 + 56) markNoteAndAttachmentsForDeletion:v3];
      id v23 = v3;
    }
    else
    {
      [v3 setFolder:v12];
      id v22 = +[NSDate date];
      [v3 setFolderModificationDate:v22];

      [v3 updateChangeCountWithReason:@"Moved note"];
      id v23 = v3;
      id v19 = v23;
    }
    id v21 = v23;
LABEL_19:
    long long v30 = +[NSUndoManager shared];
    unsigned __int8 v31 = [v30 isUndoing];

    if ((v31 & 1) == 0)
    {
      long long v32 = [[ICCloudSyncingObjectMoveAction alloc] initWithObject:v3 fromParentObject:v4 toParentObject:v12 isCopy:0];
      if (v32) {
        +[ICCloudSyncingObject undoablyPersistActivityEventsForMoveAction:v32 oldObject:v3 newObject:v19];
      }
    }
    long long v33 = *(void **)(a1 + 64);
    v34 = [v19 objectID];
    [v33 ic_addNonNilObject:v34];

    goto LABEL_24;
  }
  long long v20 = os_log_create("com.apple.notes", "CoreData");
  if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
    sub_1000B65B8(v3);
  }

  id v19 = 0;
  id v21 = 0;
LABEL_24:
  id v35 = v21;

  return v35;
}

void sub_100021D9C(void *a1, void *a2)
{
  id v8 = a2;
  if ([v8 count])
  {
    id v3 = +[NSUndoManager shared];
    long long v4 = [v3 prepareWithInvocationTarget:a1[4]];
    [v4 undoablyUnmoveNoteIDs:v8 toFolderIDs:a1[5] originalToCopyNoteIDs:a1[6] actionName:a1[7] noteToFolderIDsForRedo:a1[8] workerContext:a1[9]];

    id v5 = +[NSUndoManager shared];
    [v5 setActionName:a1[7]];
  }
  uint64_t v6 = +[NSUndoManager shared];
  [v6 endUndoGrouping];

  uint64_t v7 = a1[11];
  if (v7) {
    (*(void (**)(uint64_t, void))(v7 + 16))(v7, a1[10]);
  }
}

void sub_10002218C(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

void sub_1000221B4(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void sub_100023780(uint64_t a1)
{
  double v2 = *(double *)(a1 + 40);
  id v3 = [*(id *)(a1 + 32) mainContainerView];
  [v3 setAlpha:v2];

  double v4 = *(double *)(a1 + 48);
  id v5 = [*(id *)(a1 + 32) tableViewContainerView];
  [v5 setAlpha:v4];
}

void sub_100023800(uint64_t a1)
{
  uint64_t v2 = *(unsigned __int8 *)(a1 + 40);
  id v3 = [*(id *)(a1 + 32) mainContainerView];
  [v3 setHidden:v2];

  uint64_t v4 = *(unsigned __int8 *)(a1 + 40);
  id v5 = [*(id *)(a1 + 32) mainContainerView];
  [v5 setAccessibilityElementsHidden:v4];

  uint64_t v6 = *(unsigned __int8 *)(a1 + 41);
  uint64_t v7 = [*(id *)(a1 + 32) tableViewContainerView];
  [v7 setHidden:v6];

  uint64_t v8 = *(unsigned __int8 *)(a1 + 41);
  uint64_t v9 = [*(id *)(a1 + 32) tableViewContainerView];
  [v9 setAccessibilityElementsHidden:v8];

  uint64_t v10 = [*(id *)(a1 + 32) view];
  [v10 setUserInteractionEnabled:1];

  if (*(unsigned char *)(a1 + 41))
  {
    long long v22 = 0u;
    long long v23 = 0u;
    long long v20 = 0u;
    long long v21 = 0u;
    id v11 = [*(id *)(a1 + 32) tableViewController];
    id v12 = [v11 navigationController];
    id v13 = [v12 viewControllers];

    id v14 = [v13 countByEnumeratingWithState:&v20 objects:v24 count:16];
    if (v14)
    {
      id v15 = v14;
      uint64_t v16 = *(void *)v21;
      do
      {
        for (i = 0; i != v15; i = (char *)i + 1)
        {
          if (*(void *)v21 != v16) {
            objc_enumerationMutation(v13);
          }
          [*(id *)(*((void *)&v20 + 1) + 8 * i) didDisppearInContainer:*(void *)(a1 + 32)];
        }
        id v15 = [v13 countByEnumeratingWithState:&v20 objects:v24 count:16];
      }
      while (v15);
    }
  }
  uint64_t v18 = *(void **)(a1 + 32);
  if (*(unsigned char *)(a1 + 40)) {
    [v18 tableViewContainerView];
  }
  else {
  id v19 = [v18 mainContainerView];
  }
  UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0);
  UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, v19);
}

void sub_100024A38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_100024A4C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = +[ICSharingExtensionAttachmentsManager sharedManager];
  uint64_t v4 = [WeakRetained rootViewController];
  id v5 = [v4 extensionContext];
  uint64_t v6 = [*(id *)(a1 + 32) temporaryNewNote];
  uint64_t v7 = [v3 attachmentsFromExtensionContext:v5 note:v6];
  [WeakRetained setAttachments:v7];

  uint64_t v9 = WeakRetained;
  id v8 = WeakRetained;
  dispatchMainAfterDelay();
}

id sub_100024B70(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) accounts];
  BOOL v3 = [v2 count] != 0;
  uint64_t v4 = [*(id *)(a1 + 32) saveToNoteBarButtonItem];
  [v4 setEnabled:v3];

  id v5 = *(void **)(a1 + 32);

  return _[v5 attachmentsAvailable];
}

id sub_100024F4C(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismissRootViewController];
}

void sub_100024F54(uint64_t a1)
{
  id v5 = +[LSApplicationWorkspace defaultWorkspace];
  id v2 = objc_alloc_init((Class)NSURLComponents);
  BOOL v3 = ICNotesAppURLScheme();
  [v2 setScheme:v3];

  uint64_t v4 = [v2 URL];
  [v5 openURL:v4 configuration:0 completionHandler:0];

  [*(id *)(a1 + 32) dismissRootViewController];
}

id sub_100025390(uint64_t a1)
{
  return _[*(id *)(a1 + 32) deleteFromLocalDatabase];
}

void sub_1000271EC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) rootViewController];
  BOOL v3 = [v2 extensionContext];

  objc_initWeak(&location, *(id *)(a1 + 32));
  uint64_t v4 = +[ICNoteContext sharedContext];
  id v5 = [v4 managedObjectContext];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_1000273D0;
  v9[3] = &unk_1000EEA40;
  objc_copyWeak(&v13, &location);
  uint64_t v6 = *(void **)(a1 + 40);
  v9[4] = *(void *)(a1 + 32);
  id v10 = v6;
  id v11 = *(id *)(a1 + 48);
  id v12 = *(id *)(a1 + 56);
  [v5 performBlockAndWait:v9];

  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1000274E8;
  v7[3] = &unk_1000EEA68;
  objc_copyWeak(&v8, &location);
  [v3 completeRequestReturningItems:&__NSArray0__struct completionHandler:v7];
  objc_destroyWeak(&v8);

  objc_destroyWeak(&v13);
  objc_destroyWeak(&location);
}

void sub_10002739C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

void sub_1000273D0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  id v2 = [*(id *)(a1 + 32) selectedNote];

  if (v2)
  {
    uint64_t v3 = +[ICSharingExtensionAttachmentsManager sharedManager];
    uint64_t v4 = [WeakRetained attachments];
    id v5 = [WeakRetained selectedNote];
    [v3 saveAttachments:v4 toNote:v5 textBefore:*(void *)(a1 + 40) textAfter:*(void *)(a1 + 48)];
  }
  else
  {
    if (!*(void *)(a1 + 56)) {
      goto LABEL_6;
    }
    uint64_t v3 = +[ICSharingExtensionAttachmentsManager sharedManager];
    uint64_t v4 = [WeakRetained attachments];
    id v6 = [v3 saveAttachmentsToNewNote:v4 inFolder:*(void *)(a1 + 56) isSystemPaper:[WeakRetained prefersSystemPaper] textBefore:*(void *)(a1 + 40) textAfter:*(void *)(a1 + 48)];
  }

LABEL_6:
}

void sub_1000274E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained cleanupTemporaryNewNoteIfNecesary];

  id v5 = objc_loadWeakRetained(v3);
  [v5 cleanupTemporaryImageFilesIfNecessary];

  id v6 = objc_loadWeakRetained(v3);
  [v6 setIsSaving:0];

  id v7 = +[ICSharingExtensionAttachmentsManager sharedManager];
  [v7 completeExtensionRequest:a2];
}

uint64_t sub_10002758C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10002759C(id a1, BOOL a2, NSError *a3)
{
  uint64_t v4 = a3;
  id v5 = os_log_create("com.apple.notes", "SharingExtension");
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG)) {
    sub_1000B53C4(a2, (uint64_t)v4, v5);
  }
}

void sub_100027924(uint64_t a1)
{
  id v4 = +[NSError errorWithDomain:NSCocoaErrorDomain code:3072 userInfo:0];
  id v2 = [*(id *)(a1 + 32) rootViewController];
  uint64_t v3 = [v2 extensionContext];
  [v3 cancelRequestWithError:v4];
}

void sub_100027B04(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) topTextView];
  uint64_t v3 = [v2 text];
  unsigned int v4 = [v3 isEqualToString:&stru_1000F2510];

  if (v4)
  {
    id v5 = *(void **)(a1 + 32);
    [v5 showPlaceholderText:1];
  }
}

void sub_100028178(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) attachmentModel];
  unsigned int v2 = [v1 generatePreviewsInOperation:0];

  if (v2) {
    performBlockOnMainThread();
  }
}

void sub_100028220(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) attachmentBrickView];
  [v1 reloadData];
}

void sub_100028D00(uint64_t a1)
{
  unsigned int v2 = [ICSEMediaPreviewGenerator alloc];
  uint64_t v3 = [*(id *)(a1 + 32) view];
  unsigned int v4 = [v3 window];
  id v5 = [v4 screen];
  [v5 scale];
  id v6 = -[ICSEMediaPreviewGenerator initWithScreenScale:](v2, "initWithScreenScale:");

  id v8 = [(ICSEMediaPreviewGenerator *)v6 generatePreviewWithAttachments:*(void *)(a1 + 40)];
  id v7 = v8;
  performBlockOnMainThread();
}

void sub_100028E08(uint64_t a1)
{
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v2 = [*(id *)(a1 + 32) copy];
  id v3 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = 0;
    uint64_t v6 = *(void *)v11;
    do
    {
      id v7 = 0;
      do
      {
        if (*(void *)v11 != v6) {
          objc_enumerationMutation(v2);
        }
        uint64_t v8 = *(void *)(*((void *)&v10 + 1) + 8 * (void)v7);
        uint64_t v9 = [*(id *)(a1 + 40) imagesView];
        [v9 setMediaPreview:v8 atIndex:(char *)v7 + v5];

        id v7 = (char *)v7 + 1;
      }
      while (v4 != v7);
      id v4 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
      v5 += (uint64_t)v7;
    }
    while (v4);
  }
}

void sub_100029C0C(id a1)
{
  id v1 = objc_alloc_init(ICSharingExtensionAttachmentsManager);
  id v2 = (void *)qword_100105708;
  qword_100105708 = (uint64_t)v1;
}

void sub_10002A11C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v6 - 96), 8);
  _Unwind_Resume(a1);
}

BOOL sub_10002A148(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 attachment];
  if (v4)
  {

LABEL_4:
    *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 1;
    goto LABEL_5;
  }
  uint64_t v5 = [v3 mediaURL];

  if (v5) {
    goto LABEL_4;
  }
LABEL_5:
  uint64_t v6 = [v3 attributedContentText];

  BOOL v7 = [v6 length] != 0;
  return v7;
}

uint64_t sub_10002A1E0(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [v3 mediaURL];
  if (v4
    && (uint64_t v5 = (void *)v4,
        [v3 mediaUTI],
        uint64_t v6 = objc_claimAutoreleasedReturnValue(),
        v6,
        v5,
        v6))
  {
    BOOL v7 = [v3 mediaUTI];
    uint64_t v8 = +[UTType typeWithIdentifier:v7];

    unsigned int v9 = [v8 conformsToType:UTTypePDF];
    if (v9) {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 1;
    }

    uint64_t v10 = v9 ^ 1;
  }
  else
  {
    uint64_t v10 = 1;
  }

  return v10;
}

void sub_10002AAAC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    BOOL v7 = os_log_create("com.apple.notes", "SharingExtension");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1000B6738();
    }

    uint64_t v8 = [*(id *)(a1 + 32) appendLock];
    [v8 unlock];
  }
  else if (v5)
  {
    if ([v5 isFileURL])
    {
      id v9 = [objc_alloc((Class)ICAddAttachmentsManagerAttachmentInfo) initWithFileURL:v5];
      [*(id *)(a1 + 40) addObject:v9];
      uint64_t v10 = [*(id *)(a1 + 32) appendLock];
      [v10 unlock];
    }
    else
    {
      id v9 = [*(id *)(a1 + 48) managedObjectContext];
      v14[0] = _NSConcreteStackBlock;
      v14[1] = 3221225472;
      v14[2] = sub_10002AC4C;
      v14[3] = &unk_1000EEB48;
      id v15 = *(id *)(a1 + 48);
      id v11 = v5;
      uint64_t v12 = *(void *)(a1 + 32);
      long long v13 = *(void **)(a1 + 40);
      id v16 = v11;
      uint64_t v17 = v12;
      uint64_t v18 = *(void *)(a1 + 56);
      id v19 = v13;
      [v9 performBlockAndWait:v14];
    }
  }
}

void sub_10002AC4C(uint64_t a1)
{
  id v6 = [*(id *)(a1 + 32) addURLAttachmentWithURL:*(void *)(a1 + 40)];
  id v2 = [*(id *)(a1 + 48) titleFromExtensionItem:*(void *)(a1 + 56)];
  [v6 setTitle:v2];

  id v3 = +[NSDate date];
  [v6 setCreationDate:v3];
  [v6 setModificationDate:v3];
  uint64_t v4 = objc_opt_new();
  [v4 setAttachment:v6];
  [*(id *)(a1 + 64) addObject:v4];
  id v5 = [*(id *)(a1 + 48) appendLock];
  [v5 unlock];
}

void sub_10002AD34(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    BOOL v7 = os_log_create("com.apple.notes", "SharingExtension");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1000B67D4();
    }

    goto LABEL_7;
  }
  if (v5)
  {
    BOOL v7 = objc_alloc_init((Class)ICAddAttachmentsManagerAttachmentInfo);
    [v7 setAttributedContentText:v5];
    [*(id *)(a1 + 32) addObject:v7];
LABEL_7:
  }
  uint64_t v8 = [*(id *)(a1 + 40) appendLock];
  [v8 unlock];
}

void sub_10002AE00(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    BOOL v7 = *(void **)(a1 + 32);
    uint64_t v8 = [UTTypePlainText identifier];
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472;
    v18[2] = sub_10002AF8C;
    v18[3] = &unk_1000EEBC0;
    id v9 = *(void **)(a1 + 48);
    v18[4] = *(void *)(a1 + 40);
    id v10 = v9;
    uint64_t v11 = *(void *)(a1 + 56);
    id v19 = v10;
    uint64_t v20 = v11;
    [v7 loadItemForTypeIdentifier:v8 options:0 completionHandler:v18];
  }
  else if (v5)
  {
    long long v13 = [*(id *)(a1 + 40) attributedContentText];
    id v14 = [v13 string];
    unsigned __int8 v15 = [v5 isEqualToString:v14];

    if ((v15 & 1) == 0)
    {
      id v16 = objc_alloc_init((Class)ICAddAttachmentsManagerAttachmentInfo);
      id v17 = [objc_alloc((Class)NSAttributedString) initWithString:v5];
      [v16 setAttributedContentText:v17];

      [*(id *)(a1 + 48) addObject:v16];
    }
  }
  uint64_t v12 = [*(id *)(a1 + 56) appendLock];
  [v12 unlock];
}

void sub_10002AF8C(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    BOOL v7 = os_log_create("com.apple.notes", "SharingExtension");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1000B6870();
    }
  }
  else
  {
    if (!v5) {
      goto LABEL_6;
    }
    BOOL v7 = [objc_alloc((Class)NSString) initWithData:v5 encoding:4];
    id v9 = [a1[4] attributedContentText];
    id v10 = [v9 string];
    unsigned __int8 v11 = [v7 isEqualToString:v10];

    if ((v11 & 1) == 0)
    {
      id v12 = objc_alloc_init((Class)ICAddAttachmentsManagerAttachmentInfo);
      id v13 = [objc_alloc((Class)NSAttributedString) initWithString:v7];
      [v12 setAttributedContentText:v13];

      [a1[5] addObject:v12];
    }
  }

LABEL_6:
  uint64_t v8 = [a1[6] appendLock];
  [v8 unlock];
}

void sub_10002B0E0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    BOOL v7 = os_log_create("com.apple.notes", "SharingExtension");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1000B6974();
    }
LABEL_12:

    goto LABEL_13;
  }
  if (v5)
  {
    id v17 = 0;
    uint64_t v8 = +[NSKeyedUnarchiver unarchivedObjectOfClass:objc_opt_class() fromData:v5 error:&v17];
    BOOL v7 = v17;
    if (v7)
    {
      id v9 = os_log_create("com.apple.notes", "SharingExtension");
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_1000B690C();
      }
    }
    id v10 = objc_alloc_init((Class)ICAddAttachmentsManagerAttachmentInfo);
    unsigned __int8 v11 = [v8 objectForKeyedSubscript:@"article-title"];
    [v10 setTitle:v11];

    id v12 = [v8 objectForKeyedSubscript:@"article-summary"];
    id v13 = v12;
    if (!v12)
    {
      +[ICAssert handleFailedAssertWithCondition:functionName:simulateCrash:showAlert:format:](ICAssert, "handleFailedAssertWithCondition:functionName:simulateCrash:showAlert:format:", "((summary) != nil)", "-[ICSharingExtensionAttachmentsManager extractAttachmentsFromInputItems:note:]_block_invoke", 1, 0, @"Expected non-nil value for '%s'", "summary");
      id v13 = &stru_1000F2510;
    }
    id v14 = v13;

    id v15 = [objc_alloc((Class)NSAttributedString) initWithString:v14];
    [v10 setAttributedContentText:v15];

    [*(id *)(a1 + 32) addObject:v10];
    goto LABEL_12;
  }
LABEL_13:
  id v16 = [*(id *)(a1 + 40) appendLock];
  [v16 unlock];
}

void sub_10002B2F4(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    BOOL v7 = os_log_create("com.apple.notes", "SharingExtension");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1000B6A50();
    }
    goto LABEL_19;
  }
  if (v5)
  {
    BOOL v7 = objc_alloc_init((Class)ICAddAttachmentsManagerAttachmentInfo);
    uint64_t v8 = objc_opt_class();
    uint64_t v9 = objc_opt_class();
    uint64_t v10 = objc_opt_class();
    unsigned __int8 v11 = +[NSSet setWithObjects:](NSSet, "setWithObjects:", v8, v9, v10, objc_opt_class(), 0);
    id v30 = 0;
    id v12 = +[NSKeyedUnarchiver unarchivedObjectOfClasses:v11 fromData:v5 error:&v30];
    id v13 = v30;

    if (v13)
    {
      id v14 = os_log_create("com.apple.notes", "SharingExtension");
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
        sub_1000B690C();
      }
    }
    [v7 setMetadata:v12];
    uint64_t v15 = ICAttachmentMetadataURLKey;
    id v16 = [v12 objectForKeyedSubscript:ICAttachmentMetadataURLKey];
    if (!v16) {
      goto LABEL_18;
    }
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v17 = v16;
    }
    else
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0)
      {
        long long v22 = os_log_create("com.apple.notes", "SharingExtension");
        if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
          sub_1000B69E8();
        }
        goto LABEL_17;
      }
      id v17 = [v16 absoluteString];
      if (!v17)
      {
LABEL_18:
        [a1[5] addObject:v7];

LABEL_19:
        goto LABEL_20;
      }
    }
    id v18 = [v12 mutableCopy];
    [v18 removeObjectForKey:v15];
    id v19 = v13;
    id v20 = [v18 copy];

    long long v24 = [a1[4] managedObjectContext];
    v25[0] = _NSConcreteStackBlock;
    v25[1] = 3221225472;
    id v25[2] = sub_10002B64C;
    v25[3] = &unk_1000EEA90;
    id v26 = a1[4];
    id v27 = v17;
    id v21 = v20;
    id v13 = v19;
    id v12 = v21;
    id v28 = v21;
    long long v29 = v7;
    long long v22 = v17;
    [v24 performBlockAndWait:v25];

LABEL_17:
    goto LABEL_18;
  }
LABEL_20:
  long long v23 = [a1[6] appendLock];
  [v23 unlock];
}

void sub_10002B64C(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = +[NSURL URLWithString:*(void *)(a1 + 40)];
  id v5 = [v2 addURLAttachmentWithURL:v3];

  [v5 setMetadata:*(void *)(a1 + 48)];
  uint64_t v4 = +[NSDate date];
  [v5 setCreationDate:v4];
  [v5 setModificationDate:v4];
  [*(id *)(a1 + 56) setAttachment:v5];
  [*(id *)(a1 + 56) setMetadata:0];
}

void sub_10002B714(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    BOOL v7 = os_log_create("com.apple.notes", "SharingExtension");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1000B6A50();
    }
    goto LABEL_6;
  }
  if (v5)
  {
    BOOL v7 = objc_alloc_init((Class)ICAddAttachmentsManagerAttachmentInfo);
    uint64_t v11 = ICAttachmentMetadataMapItemDataKey;
    uint64_t v8 = [v5 base64EncodedStringWithOptions:0];
    id v12 = v8;
    uint64_t v9 = +[NSDictionary dictionaryWithObjects:&v12 forKeys:&v11 count:1];
    [v7 setMetadata:v9];

    [*(id *)(a1 + 32) addObject:v7];
LABEL_6:
  }
  uint64_t v10 = [*(id *)(a1 + 40) appendLock];
  [v10 unlock];
}

void sub_10002B9D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10002B9F0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) attachment];
  if ([v2 isURL])
  {
    id v3 = [*(id *)(a1 + 32) attachment];
    if ([v3 isiTunes])
    {
      unsigned int v4 = 0;
    }
    else
    {
      id v5 = [*(id *)(a1 + 32) attachment];
      if ([v5 isAppStore])
      {
        unsigned int v4 = 0;
      }
      else
      {
        id v6 = [*(id *)(a1 + 32) attachment];
        if ([v6 isNews])
        {
          unsigned int v4 = 0;
        }
        else
        {
          BOOL v7 = [*(id *)(a1 + 32) attachment];
          if ([v7 isMap])
          {
            unsigned int v4 = 0;
          }
          else
          {
            uint64_t v8 = [*(id *)(a1 + 32) attachment];
            unsigned int v4 = [v8 isPodcasts] ^ 1;
          }
        }
      }
    }
  }
  else
  {
    unsigned int v4 = 0;
  }

  uint64_t v9 = [*(id *)(a1 + 32) attachment];
  if (([v9 isiTunes] & 1) == 0)
  {
    uint64_t v10 = [*(id *)(a1 + 32) attachment];
    if (([v10 isAppStore] & 1) == 0)
    {
      uint64_t v11 = [*(id *)(a1 + 32) attachment];
      if (([v11 isNews] & 1) == 0)
      {
        id v12 = [*(id *)(a1 + 32) attachment];
        if (([v12 isMap] & 1) == 0)
        {
          id v13 = [*(id *)(a1 + 32) attachment];
          if (([v13 isURL] & 1) == 0)
          {
            v67 = [*(id *)(a1 + 32) attachment];
            unsigned __int8 v68 = [v67 isPodcasts];

            if ((v68 & 1) == 0) {
              return;
            }
            goto LABEL_26;
          }
        }
      }
    }
  }

LABEL_26:
  if (![*(id *)(a1 + 40) count]) {
    return;
  }
  uint64_t v14 = 0;
  char v15 = 0;
  while (*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) == v14)
  {
LABEL_61:
    if (++v14 >= (unint64_t)[*(id *)(a1 + 40) count]) {
      goto LABEL_82;
    }
  }
  id v16 = [*(id *)(a1 + 40) objectAtIndexedSubscript:v14];
  id v17 = [v16 image];
  if (v17) {
    char v18 = v4;
  }
  else {
    char v18 = 1;
  }

  if ((v18 & 1) == 0)
  {
    long long v32 = [v16 image];
    [v32 size];
    double v34 = v33;
    double v36 = v35;
    [v32 scale];
    double v38 = v37;
    if (v34 * v37 <= 800.0 && v36 * v37 <= 800.0)
    {
      [v32 ic_cropRectZeroAlpha];
      double x = v79.origin.x;
      double y = v79.origin.y;
      double width = v79.size.width;
      double height = v79.size.height;
      if (!CGRectIsEmpty(v79))
      {
        [v32 size];
        if (width < v44 || ([v32 size], height < v45))
        {
          uint64_t v46 = [v32 ic_imageFromRect:x, y, width, height];

          long long v32 = (void *)v46;
        }
      }
    }
    [v32 size];
    double v49 = v38 * v48;
    if (v38 * v47 > 384.0 && v49 > 384.0)
    {
      uint64_t v51 = [v32 ic_scaledImageMinDimension:384.0 scale:v38];

      long long v32 = (void *)v51;
    }
    v52 = [*(id *)(a1 + 32) attachment];
    char v15 = 1;
    id v53 = [v52 updateAttachmentPreviewImageWithImage:v32 scale:1 scaleWhenDrawing:0 metadata:1 sendNotification:0.0];
    goto LABEL_56;
  }
  id v19 = [v16 metadata];
  if (v19) {
    char v20 = v4;
  }
  else {
    char v20 = 1;
  }

  if ((v20 & 1) == 0)
  {
    long long v32 = [v16 metadata];
    v52 = [*(id *)(a1 + 32) attachment];
    [v52 setMetadata:v32];
    goto LABEL_56;
  }
  uint64_t v21 = [*(id *)(a1 + 32) attachment];
  if (!v21
    || (long long v22 = (void *)v21,
        [v16 attachment],
        long long v23 = objc_claimAutoreleasedReturnValue(),
        v23,
        v22,
        !v23))
  {
    id v56 = [*(id *)(a1 + 32) attachment];
    unsigned int v57 = [v56 isNews];

    if (!v57) {
      goto LABEL_60;
    }
    v58 = [*(id *)(a1 + 32) attachment];
    uint64_t v59 = [v58 title];
    BOOL v60 = v59 == 0;
    if (v59)
    {
      v61 = (void *)v59;
    }
    else
    {
      uint64_t v62 = [v16 title];

      if (!v62)
      {
        BOOL v60 = 0;
        goto LABEL_69;
      }
      v58 = [v16 title];
      v61 = [*(id *)(a1 + 32) attachment];
      [v61 setTitle:v58];
    }

LABEL_69:
    v63 = [*(id *)(a1 + 32) attachment];
    v64 = [v63 summary];
    if (v64)
    {

      if (!v60) {
        goto LABEL_60;
      }
      goto LABEL_71;
    }
    id v65 = [v16 attributedContentText];

    if (!v65)
    {
      if (!v60) {
        goto LABEL_60;
      }
LABEL_71:
      char v15 = 1;
      goto LABEL_57;
    }
    long long v32 = [v16 attributedContentText];
    v52 = [v32 string];
    v66 = [*(id *)(a1 + 32) attachment];
    [v66 setSummary:v52];

    char v15 = 1;
LABEL_56:

LABEL_57:
    [*(id *)(a1 + 40) removeObjectAtIndex:v14];
    uint64_t v54 = *(void *)(*(void *)(a1 + 56) + 8);
    uint64_t v55 = *(void *)(v54 + 24);
    if (v55 >= v14) {
      *(void *)(v54 + 24) = v55 - 1;
    }
    --v14;
    goto LABEL_60;
  }
  long long v24 = *(void **)(a1 + 48);
  long long v25 = [*(id *)(a1 + 32) attachment];
  id v26 = [v25 URL];
  id v27 = [v24 getURLWithoutQueryAndFragmentFromURL:v26];

  id v28 = *(void **)(a1 + 48);
  long long v29 = [v16 attachment];
  id v30 = [v29 URL];
  unsigned __int8 v31 = [v28 getURLWithoutQueryAndFragmentFromURL:v30];

  if ((([v27 isEqual:v31] | v4) & 1) == 0)
  {

LABEL_60:
    goto LABEL_61;
  }
  v69 = [*(id *)(a1 + 32) attachment];
  v70 = [v69 title];

  if (!v70)
  {
    v71 = [v16 attachment];
    v72 = [v71 title];
    v73 = [*(id *)(a1 + 32) attachment];
    [v73 setTitle:v72];
  }
  v74 = [v16 attachment];
  +[ICAttachment deleteAttachment:v74];

  [*(id *)(a1 + 40) removeObjectAtIndex:v14];
  *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = [*(id *)(a1 + 40) count];

LABEL_82:
  if (v15)
  {
    v75 = [*(id *)(a1 + 32) attachment];
    v76 = [v75 managedObjectContext];
    v77[0] = _NSConcreteStackBlock;
    v77[1] = 3221225472;
    v77[2] = sub_10002C138;
    v77[3] = &unk_1000EE0C0;
    id v78 = *(id *)(a1 + 32);
    [v76 performBlockAndWait:v77];
  }
}

void sub_10002C138(uint64_t a1)
{
  id v2 = +[NSDate date];
  id v3 = [*(id *)(a1 + 32) attachment];
  [v3 setPreviewUpdateDate:v2];

  id v4 = [*(id *)(a1 + 32) attachment];
  [v4 updateChangeCountWithReason:@"Consolidated duplicate attachment"];
}

void sub_10002C350(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) metadata];
  if (v2)
  {
    id v11 = v2;
    id v3 = [*(id *)(a1 + 32) title];

    if (!v3)
    {
      uint64_t v4 = ICAttachmentMetadataTitleKey;
      id v5 = [v11 objectForKeyedSubscript:ICAttachmentMetadataTitleKey];

      if (v5)
      {
        id v6 = [v11 objectForKeyedSubscript:v4];
        [*(id *)(a1 + 32) setTitle:v6];
      }
    }
    BOOL v7 = [*(id *)(a1 + 32) summary];

    id v2 = v11;
    if (!v7)
    {
      uint64_t v8 = ICAttachmentMetadataDescriptionKey;
      uint64_t v9 = [v11 objectForKeyedSubscript:ICAttachmentMetadataDescriptionKey];

      id v2 = v11;
      if (v9)
      {
        uint64_t v10 = [v11 objectForKeyedSubscript:v8];
        [*(id *)(a1 + 32) setSummary:v10];

        id v2 = v11;
      }
    }
  }
}

intptr_t sub_10002CBCC(intptr_t result)
{
  if (*(unsigned char *)(result + 40)) {
    return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(result + 32));
  }
  return result;
}

intptr_t sub_10002CBE0(intptr_t result)
{
  if (*(unsigned char *)(result + 40)) {
    return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(result + 32));
  }
  return result;
}

void sub_10002CEB0(id a1)
{
  id v1 = [UTTypeImage identifier];
  id v2 = [UTTypePDF identifier:v1];
  v6[1] = v2;
  id v3 = [UTTypeAudiovisualContent identifier];
  v6[2] = v3;
  uint64_t v4 = +[NSArray arrayWithObjects:v6 count:3];
  id v5 = (void *)qword_100105710;
  qword_100105710 = v4;
}

id sub_10002D380(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addObject:a2];
}

void sub_10002D38C(uint64_t a1, uint64_t a2)
{
  if (a2) {
    [*(id *)(a1 + 32) addObject:a2];
  }
  id v3 = [*(id *)(a1 + 40) appendLock];
  [v3 unlock];

  uint64_t v4 = *(NSObject **)(a1 + 48);

  dispatch_group_leave(v4);
}

void sub_10002D3E8(uint64_t a1, uint64_t a2)
{
  if (a2) {
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
  id v3 = [*(id *)(a1 + 32) appendLock];
  [v3 unlock];

  uint64_t v4 = *(NSObject **)(a1 + 40);

  dispatch_group_leave(v4);
}

void sub_10002D448(uint64_t a1, uint64_t a2)
{
  if (a2) {
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
  id v3 = [*(id *)(a1 + 32) appendLock];
  [v3 unlock];

  uint64_t v4 = *(NSObject **)(a1 + 40);

  dispatch_group_leave(v4);
}

void sub_10002D7D4(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  if (v3)
  {
    uint64_t v14 = a1;
    long long v19 = 0u;
    long long v20 = 0u;
    long long v17 = 0u;
    long long v18 = 0u;
    id v5 = [v3 countByEnumeratingWithState:&v17 objects:v23 count:16];
    if (v5)
    {
      id v6 = v5;
      uint64_t v7 = *(void *)v18;
      do
      {
        for (i = 0; i != v6; i = (char *)i + 1)
        {
          if (*(void *)v18 != v7) {
            objc_enumerationMutation(v4);
          }
          uint64_t v9 = *(void *)(*((void *)&v17 + 1) + 8 * i);
          uint64_t v10 = os_log_create("com.apple.notes", "SharingExtension");
          if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 138412290;
            uint64_t v22 = v9;
            _os_log_error_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "Error pushing cloud objects, but trying again: %@", buf, 0xCu);
          }
        }
        id v6 = [v4 countByEnumeratingWithState:&v17 objects:v23 count:16];
      }
      while (v6);
    }
    id v11 = +[ICCloudContext sharedContext];
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472;
    v15[2] = sub_10002DA08;
    v15[3] = &unk_1000EECF8;
    id v16 = *(id *)(v14 + 32);
    [v11 processAllCloudObjectsWithCompletionHandler:v15];
  }
  else
  {
    id v12 = +[ICNoteContext sharedContext];
    [v12 save];

    uint64_t v13 = *(void *)(a1 + 32);
    if (v13) {
      (*(void (**)(void))(v13 + 16))();
    }
  }
}

uint64_t sub_10002DA08(uint64_t a1)
{
  id v2 = +[ICNoteContext sharedContext];
  [v2 save];

  uint64_t result = *(void *)(a1 + 32);
  if (result)
  {
    uint64_t v4 = *(uint64_t (**)(void))(result + 16);
    return v4();
  }
  return result;
}

void sub_10002DEB4(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

void sub_10002DED4(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_10002DEF0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

void sub_10002F210(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10002F228(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  uint64_t v6 = *(void *)(a1 + 32);
  id v7 = a2;
  uint64_t v8 = +[ICUTType typeWithIdentifier:v6];
  LOBYTE(v6) = [v8 conformsToType:v7];

  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = v6;
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)) {
    *a4 = 1;
  }
}

void sub_10002F998(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40)
{
  _Block_object_dispose(&a40, 8);
  _Block_object_dispose((const void *)(v40 - 232), 8);
  _Unwind_Resume(a1);
}

void sub_10002F9C8(void *a1, void *a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  if (a2)
  {
    id v7 = [a2 fileWrapper];
    if ([v7 isRegularFile])
    {
      uint64_t v8 = [v7 regularFileContents];
      uint64_t v9 = (char *)[v8 length];
    }
    else
    {
      if (![v7 isDirectory])
      {
LABEL_19:

        return;
      }
      uint64_t v10 = (void *)a1[4];
      id v11 = [v7 filename];
      uint64_t v8 = [v10 URLByAppendingPathComponent:v11 isDirectory:1];

      id v12 = +[NSFileManager defaultManager];
      uint64_t v13 = +[NSArray arrayWithObject:NSURLFileSizeKey];
      uint64_t v14 = [v12 enumeratorAtURL:v8 includingPropertiesForKeys:v13 options:4 errorHandler:0];

      long long v31 = 0u;
      long long v32 = 0u;
      long long v29 = 0u;
      long long v30 = 0u;
      id v15 = v14;
      id v16 = [v15 countByEnumeratingWithState:&v29 objects:v33 count:16];
      if (v16)
      {
        id v17 = v16;
        long long v24 = v12;
        long long v25 = v8;
        id v26 = a1;
        id v27 = a5;
        id v18 = 0;
        uint64_t v9 = 0;
        uint64_t v19 = *(void *)v30;
        do
        {
          long long v20 = 0;
          uint64_t v21 = v18;
          do
          {
            if (*(void *)v30 != v19) {
              objc_enumerationMutation(v15);
            }
            uint64_t v22 = *(void **)(*((void *)&v29 + 1) + 8 * (void)v20);
            id v28 = 0;
            unsigned int v23 = [v22 getResourceValue:&v28 forKey:NSURLFileSizeKey error:0];
            id v18 = v28;

            if (v23) {
              uint64_t v9 = &v9[(void)[v18 unsignedIntegerValue]];
            }
            long long v20 = (char *)v20 + 1;
            uint64_t v21 = v18;
          }
          while (v17 != v20);
          id v17 = [v15 countByEnumeratingWithState:&v29 objects:v33 count:16];
        }
        while (v17);

        a1 = v26;
        a5 = v27;
        id v12 = v24;
        uint64_t v8 = v25;
      }
      else
      {
        uint64_t v9 = 0;
      }
    }
    if ((unint64_t)v9 > a1[7])
    {
      *(unsigned char *)(*(void *)(a1[5] + 8) + 24) = 1;
      *(void *)(*(void *)(a1[6] + 8) + 24) = v9;
      *a5 = 1;
    }
    goto LABEL_19;
  }
}

void sub_10002FC34(uint64_t a1)
{
  id v5 = [*(id *)(a1 + 32) textStorage];
  id v2 = objc_alloc_init((Class)ICTextController);
  [v5 setStyler:v2];

  [v5 setConvertAttributes:1];
  [v5 setWantsUndoCommands:0];
  [v5 replaceCharactersInRange:0 withAttributedString:*(void *)(a1 + 40)];
  [v5 fixupAfterEditing];
  [v5 setConvertAttributes:0];
  [v5 setStyler:0];
  id v3 = [*(id *)(a1 + 32) textStorage];
  uint64_t v4 = [*(id *)(a1 + 32) managedObjectContext];
  [v3 ic_enumerateAttachmentsInContext:v4 usingBlock:&stru_1000EED90];
}

void sub_10002FD28(id a1, ICAttachment *a2, _NSRange a3, BOOL *a4)
{
}

void sub_10002FD38(uint64_t a1)
{
  if (*(void *)(a1 + 40))
  {
    id v2 = (id *)(a1 + 32);
    [*(id *)(a1 + 32) setCreationDate:];
  }
  else
  {
    id v3 = +[NSDate date];
    id v2 = (id *)(a1 + 32);
    [*(id *)(a1 + 32) setCreationDate:v3];
  }
  if (*(void *)(a1 + 48))
  {
    id v4 = *v2;
    [v4 setModificationDate:];
  }
  else
  {
    id v5 = +[NSDate date];
    [*v2 setModificationDate:v5];
  }
}

void sub_100030184(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000301A4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000301B4(uint64_t a1)
{
}

void sub_1000301BC(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  id v4 = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_100030CC4(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) dimmingView];
  [v1 setAlpha:1.0];
}

void sub_100030DF4(uint64_t a1)
{
  [*(id *)(a1 + 32) frameOfPresentedViewInContainerView];
  double v3 = v2;
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  id v10 = [*(id *)(a1 + 32) presentedView];
  [v10 setFrame:v3, v5, v7, v9];
}

void sub_100030F40(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) dimmingView];
  [v1 setAlpha:0.0];
}

void sub_100031064()
{
  algn_10010E938[5] = 0;
  *(_WORD *)&algn_10010E938[6] = -5120;
}

uint64_t *ICArchive.packageExtension.unsafeMutableAddressor()
{
  if (qword_100103640 != -1) {
    swift_once();
  }
  return &static ICArchive.packageExtension;
}

uint64_t static ICArchive.packageExtension.getter()
{
  if (qword_100103640 != -1) {
    swift_once();
  }
  uint64_t v0 = static ICArchive.packageExtension;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static ICArchive.archiveTitle<A>(for:)(uint64_t a1)
{
  uint64_t v2 = sub_1000B71E0();
  uint64_t v3 = sub_1000B79E0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  double v6 = (char *)v20 - v5;
  if (sub_1000B7750() != 1) {
    goto LABEL_9;
  }
  v20[1] = a1;
  sub_1000B7760();
  swift_getWitnessTable();
  sub_1000B77F0();
  uint64_t v7 = *(void *)(v2 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v6, 1, v2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
LABEL_9:
    id v16 = [self mainBundle];
    NSString v17 = sub_1000B7580();
    id v18 = [v16 localizedStringForKey:v17 value:0 table:0];

    uint64_t v12 = sub_1000B75B0();
    return v12;
  }
  sub_1000B71B0();
  uint64_t v9 = v8;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v6, v2);
  if (!v9) {
    goto LABEL_9;
  }
  NSString v10 = sub_1000B7580();
  swift_bridgeObjectRelease();
  id v11 = [v10 ic_sanitizedFilenameString];

  uint64_t v12 = sub_1000B75B0();
  unint64_t v14 = v13;

  uint64_t v15 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0) {
    uint64_t v15 = v12 & 0xFFFFFFFFFFFFLL;
  }
  if (!v15)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  return v12;
}

void sub_10003147C()
{
  qword_10010E940 = 0x6F736A2E6F666E69;
  *(void *)algn_10010E948 = 0xE90000000000006ELL;
}

void sub_1000314A4()
{
  qword_10010E950 = 0x2E77656976657250;
  *(void *)algn_10010E958 = 0xEB00000000676E70;
}

void sub_1000314D0()
{
  qword_10010E960 = 0x2E77656976657250;
  *(void *)algn_10010E968 = 0xEB00000000666470;
}

uint64_t sub_1000314FC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_1000B7DC0();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  uint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_1000B7DC0() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1000315C4(uint64_t result, uint64_t a2)
{
  if ((result & 0x8000000000000000) == 0) {
    return a2;
  }
  __break(1u);
  return result;
}

uint64_t sub_100031604()
{
  uint64_t v0 = sub_1000B6D30();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000B6D70();
  swift_allocObject();
  uint64_t v4 = sub_1000B6D60();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for JSONEncoder.DateEncodingStrategy.iso8601(_:), v0);
  uint64_t result = sub_1000B6D40();
  qword_10010E970 = v4;
  return result;
}

uint64_t sub_1000316F8()
{
  uint64_t v0 = sub_1000B6CE0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000B6D20();
  swift_allocObject();
  uint64_t v4 = sub_1000B6D10();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for JSONDecoder.DateDecodingStrategy.iso8601(_:), v0);
  uint64_t result = sub_1000B6CF0();
  qword_10010E978 = v4;
  return result;
}

uint64_t variable initialization expression of ICArchiveExporterConfiguration.exportsAttributions()
{
  return ICInternalSettingsIsAlexandriaDemoModeEnabled();
}

double variable initialization expression of ICArchiveImporter.Configuration.timestampOffset()
{
  return 0.0;
}

uint64_t variable initialization expression of ICArchiveImporter.Configuration.rootContainer()
{
  return 0;
}

uint64_t variable initialization expression of ICArchiveExporterConfiguration.exportsInternalProperties()
{
  return 0;
}

unint64_t variable initialization expression of ICArchiveImporter.errors()
{
  return sub_100031840((uint64_t)&_swiftEmptyArrayStorage);
}

uint64_t variable initialization expression of ICArchiveImporter.saveBatchSize()
{
  return 32;
}

double variable initialization expression of ICArchiveImporter.didReceiveMemoryWarningObserver@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

unint64_t sub_100031840(uint64_t a1)
{
  uint64_t v2 = sub_100032E20(&qword_100103758);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100032E20(&qword_100103760);
  uint64_t v6 = sub_1000B7BD0();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_100032FC8(v12, (uint64_t)v5, &qword_100103758);
    unint64_t result = sub_10006A0A8((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_1000B6F10();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100031A34(uint64_t a1)
{
  uint64_t v2 = sub_100032E20(&qword_100103728);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100032E20(&qword_100103730);
  uint64_t v6 = sub_1000B7BD0();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = &v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_100032FC8(v12, (uint64_t)v5, &qword_100103728);
    unint64_t result = sub_10006A17C((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_100032E20(&qword_100104330);
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    uint64_t v19 = v7[7] + 24 * v16;
    char v20 = v9[16];
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v9;
    *(unsigned char *)(v19 + 16) = v20;
    uint64_t v21 = v7[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_11;
    }
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100031C44(uint64_t a1)
{
  uint64_t v2 = sub_100032E20(&qword_100103748);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100032E20(&qword_100103750);
  uint64_t v6 = sub_1000B7BD0();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = &v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_100032FC8(v12, (uint64_t)v5, &qword_100103748);
    unint64_t result = sub_10006A2C8((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_1000B7030();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    uint64_t v19 = (void *)(v7[7] + 16 * v16);
    uint64_t v20 = *((void *)v9 + 1);
    *uint64_t v19 = *(void *)v9;
    v19[1] = v20;
    uint64_t v21 = v7[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_11;
    }
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100031E40(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100032E20(&qword_100103738);
  uint64_t v2 = sub_1000B7BD0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_100032FC8(v6, (uint64_t)&v13, &qword_100103740);
    uint64_t v7 = v13;
    unint64_t result = sub_10006A39C(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_100032FB8(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100031F70(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100032E20((uint64_t *)&unk_1001043A0);
  uint64_t v2 = (void *)sub_1000B7BD0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_10006A250(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v11 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10003208C(uint64_t a1)
{
  uint64_t v2 = sub_100032E20(&qword_100103720);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100032E20(&qword_100104300);
  uint64_t v6 = sub_1000B7BD0();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  char v9 = &v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_100032FC8(v12, (uint64_t)v5, &qword_100103720);
    unint64_t result = sub_10006A0A8((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_1000B6F10();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    uint64_t v19 = v7[7] + 32 * v16;
    uint64_t v20 = *((void *)v9 + 1);
    long long v21 = *((_OWORD *)v9 + 1);
    *(void *)uint64_t v19 = *(void *)v9;
    *(void *)(v19 + 8) = v20;
    *(_OWORD *)(v19 + 16) = v21;
    uint64_t v22 = v7[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t variable initialization expression of ICArchivePreviewer.objects()
{
  return sub_100031A34((uint64_t)&_swiftEmptyArrayStorage);
}

uint64_t variable initialization expression of ICArchiveExporterConfiguration.creator@<X0>(uint64_t a1@<X8>)
{
  if (qword_1001036C8 != -1) {
    swift_once();
  }
  uint64_t v2 = *((void *)&xmmword_10010E9A0 + 1);
  *(void *)a1 = static ICArchiveCreator.default;
  *(_OWORD *)(a1 + 8) = *(long long *)((char *)&static ICArchiveCreator.default + 8);
  *(_OWORD *)(a1 + 24) = unk_10010E998;
  *(void *)(a1 + 40) = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t variable initialization expression of ICArchiveCreator.softwareIdentifier()
{
  id v0 = [self mainBundle];
  id v1 = [v0 bundleIdentifier];

  if (!v1) {
    return 0;
  }
  uint64_t v2 = sub_1000B75B0();

  return v2;
}

uint64_t variable initialization expression of ICArchiveCreator.softwareVersionName()
{
  id v0 = [self mainBundle];
  id v1 = [v0 infoDictionary];

  if (!v1)
  {
    long long v7 = 0u;
    long long v8 = 0u;
    goto LABEL_11;
  }
  uint64_t v2 = sub_1000B7510();

  if (!*(void *)(v2 + 16) || (unint64_t v3 = sub_10006A250(0xD00000000000001ALL, 0x80000001000C8000), (v4 & 1) == 0))
  {
    long long v7 = 0u;
    long long v8 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  sub_100032E64(*(void *)(v2 + 56) + 32 * v3, (uint64_t)&v7);
  swift_bridgeObjectRelease();
  if (!*((void *)&v8 + 1))
  {
LABEL_11:
    sub_100032DC0((uint64_t)&v7);
    return 0;
  }
  if (swift_dynamicCast()) {
    return v6;
  }
  else {
    return 0;
  }
}

CFStringRef variable initialization expression of ICArchiveCreator.softwareVersion()
{
  id v0 = [self mainBundle];
  id v1 = [v0 infoDictionary];

  if (!v1)
  {
    long long v9 = 0u;
    long long v10 = 0u;
    goto LABEL_12;
  }
  uint64_t v2 = sub_1000B7510();

  CFStringRef result = kCFBundleVersionKey;
  if (!kCFBundleVersionKey)
  {
    __break(1u);
    return result;
  }
  uint64_t v4 = sub_1000B75B0();
  if (!*(void *)(v2 + 16) || (unint64_t v6 = sub_10006A250(v4, v5), (v7 & 1) == 0))
  {
    long long v9 = 0u;
    long long v10 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  sub_100032E64(*(void *)(v2 + 56) + 32 * v6, (uint64_t)&v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v10 + 1))
  {
LABEL_12:
    sub_100032DC0((uint64_t)&v9);
    return 0;
  }
  if (swift_dynamicCast()) {
    return (CFStringRef)v8;
  }
  else {
    return 0;
  }
}

uint64_t sub_100032670(uint64_t a1, uint64_t a2)
{
  return sub_100032768(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_100032688()
{
  sub_1000B75B0();
  sub_1000B7620();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000326DC()
{
  sub_1000B75B0();
  sub_1000B7E40();
  sub_1000B7620();
  Swift::Int v0 = sub_1000B7E70();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100032750(uint64_t a1, uint64_t a2)
{
  return sub_100032768(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_100032768(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_1000B75B0();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1000327AC(uint64_t a1, id *a2)
{
  uint64_t result = sub_1000B7590();
  *a2 = 0;
  return result;
}

uint64_t sub_100032824(uint64_t a1, id *a2)
{
  char v3 = sub_1000B75A0();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1000328A4@<X0>(void *a1@<X8>)
{
  sub_1000B75B0();
  NSString v2 = sub_1000B7580();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1000328E8()
{
  uint64_t v0 = sub_1000B75B0();
  uint64_t v2 = v1;
  if (v0 == sub_1000B75B0() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1000B7DC0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_100032974@<X0>(void *a1@<X8>)
{
  NSString v2 = sub_1000B7580();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1000329BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000B75B0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1000329E8(uint64_t a1)
{
  uint64_t v2 = sub_1000330E0(&qword_100103798);
  uint64_t v3 = sub_1000330E0(&qword_1001037A0);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100032A80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 32))(a3, a4);
  uint64_t v6 = v5;
  if (v5)
  {
    sub_100032E20(&qword_100103700);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1000CB7A0;
    if (qword_100103648 != -1) {
      swift_once();
    }
    uint64_t v8 = *(void *)algn_10010E948;
    *(void *)(inited + 32) = qword_10010E940;
    *(void *)(inited + 40) = v8;
    uint64_t v9 = qword_100103650;
    swift_bridgeObjectRetain();
    if (v9 != -1) {
      swift_once();
    }
    uint64_t v10 = *(void *)algn_10010E958;
    *(void *)(inited + 48) = qword_10010E950;
    *(void *)(inited + 56) = v10;
    char v11 = sub_1000314FC(v4, v6, (void *)inited);
    swift_setDeallocating();
    swift_bridgeObjectRetain();
    swift_arrayDestroy();
    if (v11)
    {
      sub_100032EC0();
      uint64_t v12 = sub_1000B7A10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_100032E20(&qword_100103710);
      sub_100032F14();
      uint64_t v13 = sub_1000B7550();
      swift_unknownObjectRelease();
      uint64_t v14 = *(void *)(v12 + 16);
      if (v14)
      {
        uint64_t v15 = v12 + 32 + 16 * v14;
        uint64_t v16 = *(void *)(v15 - 16);
        uint64_t v17 = *(void **)(v15 - 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v19 = v13;
        v20._countAndFlagsBits = 3027488;
        v20._object = (void *)0xE300000000000000;
        sub_1000B7650(v20);
        v21._countAndFlagsBits = v16;
        v21._object = v17;
        sub_1000B7650(v21);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v19 = v13;
        v22._countAndFlagsBits = 12832;
        v22._object = (void *)0xE200000000000000;
        sub_1000B7650(v22);
      }
      return v19;
    }
  }
  return v4;
}

uint64_t _sSo9ICArchiveC38com_apple_mobilenotes_SharingExtensionE15archiveFilename8forTitleS2S_tFZ_0()
{
  NSString v0 = sub_1000B7580();
  id v1 = [v0 ic_sanitizedFilenameString];

  uint64_t v2 = sub_1000B75B0();
  uint64_t v6 = v2;
  v7._countAndFlagsBits = 46;
  v7._object = (void *)0xE100000000000000;
  sub_1000B7650(v7);
  if (qword_100103640 != -1) {
    swift_once();
  }
  uint64_t v3 = static ICArchive.packageExtension;
  uint64_t v4 = *(void **)algn_10010E938;
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v3;
  v8._object = v4;
  sub_1000B7650(v8);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_100032DC0(uint64_t a1)
{
  uint64_t v2 = sub_100032E20(&qword_1001036F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100032E20(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_100032E64(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_100032EC0()
{
  unint64_t result = qword_100103708;
  if (!qword_100103708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100103708);
  }
  return result;
}

unint64_t sub_100032F14()
{
  unint64_t result = qword_100103718;
  if (!qword_100103718)
  {
    sub_100032F70(&qword_100103710);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100103718);
  }
  return result;
}

uint64_t sub_100032F70(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

_OWORD *sub_100032FB8(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_100032FC8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100032E20(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void type metadata accessor for CGColor(uint64_t a1)
{
}

__n128 _s16AttributedStringV14AttributeRangeVwCP(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for _NSRange(uint64_t a1)
{
}

void type metadata accessor for Key(uint64_t a1)
{
}

uint64_t sub_100033078()
{
  return sub_1000330E0(&qword_100103780);
}

uint64_t sub_1000330AC()
{
  return sub_1000330E0(&qword_100103788);
}

uint64_t sub_1000330E0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for Key(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100033124()
{
  return sub_1000330E0(&qword_100103790);
}

void type metadata accessor for NotesVersion(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for ICArchiveImporter.Configuration(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 initializeWithTake for ICArchiveImporter.Configuration(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_1000331C0(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1000331E0(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

uint64_t _s16AttributedStringV14AttributeRangeVwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s16AttributedStringV14AttributeRangeVwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void sub_10003327C(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

unint64_t sub_1000332D0()
{
  unint64_t result = qword_1001037C8;
  if (!qword_1001037C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001037C8);
  }
  return result;
}

unint64_t sub_100033324(char a1)
{
  unint64_t result = 0xD000000000000017;
  switch(a1)
  {
    case 2:
      unint64_t result = 0xD000000000000016;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 0xD00000000000001ALL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000333BC(unsigned __int8 *a1, char *a2)
{
  return sub_1000394C0(*a1, *a2);
}

Swift::Int sub_1000333C8()
{
  return sub_10005C818();
}

uint64_t sub_1000333D0()
{
  return sub_10005D1B4();
}

Swift::Int sub_1000333D8()
{
  return sub_10005D60C();
}

uint64_t sub_1000333E0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100033584(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_100033410@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_100033324(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10003343C()
{
  return sub_1000B76B0();
}

uint64_t sub_10003349C()
{
  return sub_1000B76A0();
}

void sub_1000334EC(void *a1@<X8>)
{
  *a1 = &off_1000EEFC0;
}

void sub_1000334FC(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_100033504@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100033584(a1, a2);
  *a3 = result;
  return result;
}

unint64_t sub_100033530()
{
  unint64_t result = qword_1001037D0;
  if (!qword_1001037D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001037D0);
  }
  return result;
}

uint64_t sub_100033584(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1000EEF28;
  v6._object = a2;
  unint64_t v4 = sub_1000B7C00(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 5) {
    return 5;
  }
  else {
    return v4;
  }
}

unsigned char *initializeBufferWithCopyOfBuffer for ICArchiveModels(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ICArchiveModels(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ICArchiveModels(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100033738);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

uint64_t sub_100033760(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_10003376C(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ICArchiveModels()
{
  return &type metadata for ICArchiveModels;
}

unint64_t sub_100033788()
{
  unint64_t result = qword_1001037D8;
  if (!qword_1001037D8)
  {
    sub_100032F70(&qword_1001037E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001037D8);
  }
  return result;
}

unint64_t sub_1000337E8()
{
  unint64_t result = qword_1001037E8;
  if (!qword_1001037E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001037E8);
  }
  return result;
}

uint64_t sub_10003383C()
{
  uint64_t v0 = sub_1000B7490();
  sub_100038F18(v0, qword_1001037F0);
  sub_100038E8C(v0, (uint64_t)qword_1001037F0);
  return sub_1000B7470();
}

uint64_t ICArchiveNotesPreviewer.__allocating_init(forArchiveAt:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return ICArchiveNotesPreviewer.init(forArchiveAt:)(a1);
}

uint64_t ICArchiveNotesPreviewer.init(forArchiveAt:)(uint64_t a1)
{
  int v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = sub_100032E20(&qword_100103808);
  __chkstk_darwin(v4 - 8);
  v71 = (char *)v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = type metadata accessor for ICArchiveNotesPreviewer.Note();
  uint64_t v72 = *(void *)(v83 - 8);
  uint64_t v6 = __chkstk_darwin(v83);
  uint64_t v84 = (uint64_t)v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v89 = (uint64_t)v63 - v9;
  __chkstk_darwin(v8);
  uint64_t v70 = (uint64_t)v63 - v10;
  uint64_t v11 = sub_100032E20(&qword_100104330);
  uint64_t v86 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  v82 = (char *)v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  v85 = (char *)v63 - v15;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)v63 - v16;
  uint64_t v18 = sub_1000B6F10();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  Swift::String v21 = (char *)v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, a1, v18);
  type metadata accessor for ICArchivePreviewer();
  swift_allocObject();
  BOOL v23 = v2;
  uint64_t v24 = v88;
  uint64_t v25 = ICArchivePreviewer.init(forArchiveAt:)(v21);
  if (v24)
  {

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(a1, v18);
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v26 = v25;
    uint64_t v67 = v22;
    v88 = v17;
    uint64_t v27 = v86;
    uint64_t v81 = v19;
    uint64_t v66 = v18;
    *(void *)&v23[OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension23ICArchiveNotesPreviewer_archivePreviewer] = v25;
    swift_beginAccess();
    uint64_t v28 = *(void *)(v26 + 24);
    swift_bridgeObjectRetain_n();
    long long v29 = sub_100036104(v28);
    swift_bridgeObjectRelease();
    v91 = v29;
    sub_100036058(&v91);
    swift_bridgeObjectRelease();
    uint64_t v30 = v91[2];
    uint64_t v31 = v81;
    long long v32 = v85;
    if (v30)
    {
      v64 = v23;
      uint64_t v65 = 0;
      double v34 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
      uint64_t v33 = v27 + 16;
      double v35 = (char *)v91 + ((*(unsigned __int8 *)(v33 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 64));
      uint64_t v79 = *(void *)(v33 + 56);
      v80 = v34;
      id v78 = (uint64_t (**)(char *, uint64_t))(v33 + 72);
      int v77 = enum case for ICObjectReferences.note<A>(_:);
      v75 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v72 + 56);
      v69 = (void (**)(char *, uint64_t))(v33 + 80);
      v74 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48);
      v63[1] = v91;
      swift_retain();
      v87 = _swiftEmptyArrayStorage;
      v76 = (void (**)(char *, uint64_t))(v33 - 8);
      uint64_t v73 = (v33 - 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v36 = (uint64_t)v71;
      double v37 = v88;
      uint64_t v86 = v33;
      do
      {
        double v38 = v80;
        v80(v37, v35, v11);
        v38(v32, v37, v11);
        v39 = v82;
        uint64_t v40 = v32;
        v38(v82, v32, v11);
        int v41 = (*v78)(v39, v11);
        if (v41 == v77)
        {
          (*v69)(v39, v11);
          sub_1000B7140();
          uint64_t v42 = sub_1000B71B0();
          uint64_t v44 = v43;
          double v45 = *v76;
          (*v76)(v40, v11);
          uint64_t v36 = (uint64_t)v71;
          swift_release();
          uint64_t v46 = v83;
          double v47 = (uint64_t *)(v89 + *(int *)(v83 + 20));
          *double v47 = v42;
          v47[1] = v44;
          sub_100036298(v89, v36);
          uint64_t v48 = 0;
        }
        else
        {
          double v45 = *v76;
          (*v76)(v32, v11);
          v45(v39, v11);
          uint64_t v48 = 1;
          uint64_t v46 = v83;
        }
        (*v75)(v36, v48, 1, v46);
        double v37 = v88;
        v45(v88, v11);
        if ((*v74)(v36, 1, v46) == 1)
        {
          sub_100038E30(v36, &qword_100103808);
          uint64_t v31 = v81;
          long long v32 = v85;
        }
        else
        {
          uint64_t v49 = v70;
          sub_100036298(v36, v70);
          sub_100036298(v49, v84);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v31 = v81;
          if (isUniquelyReferenced_nonNull_native)
          {
            long long v32 = v85;
            unint64_t v51 = (unint64_t)v87;
          }
          else
          {
            unint64_t v51 = sub_100035A34(0, v87[2] + 1, 1, (unint64_t)v87, &qword_1001039B8, (uint64_t (*)(void))type metadata accessor for ICArchiveNotesPreviewer.Note, (uint64_t (*)(void))type metadata accessor for ICArchiveNotesPreviewer.Note);
            long long v32 = v85;
          }
          unint64_t v53 = *(void *)(v51 + 16);
          unint64_t v52 = *(void *)(v51 + 24);
          uint64_t v54 = v72;
          uint64_t v55 = v84;
          if (v53 >= v52 >> 1)
          {
            uint64_t v57 = sub_100035A34(v52 > 1, v53 + 1, 1, v51, &qword_1001039B8, (uint64_t (*)(void))type metadata accessor for ICArchiveNotesPreviewer.Note, (uint64_t (*)(void))type metadata accessor for ICArchiveNotesPreviewer.Note);
            uint64_t v54 = v72;
            unint64_t v51 = v57;
            uint64_t v55 = v84;
          }
          *(void *)(v51 + 16) = v53 + 1;
          unint64_t v56 = (*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
          v87 = (void *)v51;
          sub_100036298(v55, v51 + v56 + *(void *)(v54 + 72) * v53);
          double v37 = v88;
        }
        v35 += v79;
        --v30;
      }
      while (v30);
      swift_release_n();
      uint64_t v58 = v67;
      uint64_t v59 = (objc_class *)ObjectType;
      BOOL v23 = v64;
      BOOL v60 = v87;
      uint64_t v61 = v66;
    }
    else
    {
      swift_release();
      BOOL v60 = _swiftEmptyArrayStorage;
      uint64_t v61 = v66;
      uint64_t v58 = v67;
      uint64_t v59 = (objc_class *)ObjectType;
    }
    *(void *)&v23[OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension23ICArchiveNotesPreviewer_notes] = v60;

    v90.receiver = v23;
    v90.super_class = v59;
    uint64_t v11 = (uint64_t)[super init];
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v58, v61);
  }
  return v11;
}

uint64_t type metadata accessor for ICArchiveNotesPreviewer.Note()
{
  uint64_t result = qword_1001038B0;
  if (!qword_1001038B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ICArchiveNotesPreviewer.notes.getter()
{
  return swift_bridgeObjectRetain();
}

id ICArchiveNotesPreviewer.startPreviewing(_:completion:)(uint64_t a1, void (*a2)(void *, uint64_t), void *a3)
{
  uint64_t v7 = sub_100032E20(&qword_100104330);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v3
                  + OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension23ICArchiveNotesPreviewer_archivePreviewer);
  sub_1000343B4(a1, (uint64_t)v10);
  swift_retain();
  id v12 = sub_10006CDE8((uint64_t)v10, v11, a2, a3);
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v12;
}

uint64_t sub_1000343B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_100032E20(&qword_1001039A8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = *(void *)(v2
                 + OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension23ICArchiveNotesPreviewer_archivePreviewer);
  swift_beginAccess();
  uint64_t v9 = *(void *)(v8 + 24);
  uint64_t v19 = a1;
  swift_bridgeObjectRetain();
  sub_100034FF4((uint64_t (*)(char *))sub_100038E10, v9, v7);
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_100032E20(&qword_100104330);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a2, v7, v10);
  }
  sub_100038E30((uint64_t)v7, &qword_1001039A8);
  if (qword_100103670 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1000B7490();
  sub_100038E8C(v12, (uint64_t)qword_1001037F0);
  uint64_t v13 = sub_1000B7480();
  os_log_type_t v14 = sub_1000B7860();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Object to be previewed does not exist", v15, 2u);
    swift_slowDealloc();
  }

  sub_100038EC4();
  swift_allocError();
  void *v16 = 4;
  return swift_willThrow();
}

void sub_10003461C(void *a1, char a2, void (*a3)(void *, uint64_t))
{
  uint64_t v5 = a2 & 1;
  if (a2)
  {
    swift_errorRetain();
  }
  else
  {
    v7[3] = sub_100038DC8(0, (unint64_t *)&qword_100103820);
    v7[0] = a1;
    id v6 = a1;
    a1 = (void *)sub_100034958((uint64_t)v7, &qword_100103980, (uint64_t)ICNote_ptr, &qword_100103988);
    sub_100037F98((uint64_t)v7);
  }
  a3(a1, v5);
  sub_100038E04(a1, v5);
}

uint64_t sub_1000346D4(uint64_t a1)
{
  return sub_100034958(a1, &qword_100103980, (uint64_t)ICNote_ptr, &qword_100103988);
}

uint64_t sub_1000346F0(uint64_t a1)
{
  uint64_t v2 = sub_1000B7E90();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100032E64(a1, (uint64_t)v11);
  uint64_t v6 = sub_100032E20(&qword_100103968);
  if (swift_dynamicCast()) {
    return v9[0];
  }
  sub_100032E64(a1, (uint64_t)v11);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1000B7AA0(20);
  swift_bridgeObjectRelease();
  strcpy((char *)v10, "Cannot cast ");
  HIBYTE(v10[6]) = 0;
  v10[7] = -5120;
  sub_100032E64((uint64_t)v11, (uint64_t)v9);
  sub_1000B7E80();
  v12._countAndFlagsBits = sub_1000B7D80();
  sub_1000B7650(v12);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  v8(v5, v2);
  v13._countAndFlagsBits = 544432416;
  v13._object = (void *)0xE400000000000000;
  sub_1000B7650(v13);
  v9[3] = sub_100032E20(&qword_100103970);
  v9[0] = v6;
  sub_1000B7E80();
  v14._countAndFlagsBits = sub_1000B7D80();
  sub_1000B7650(v14);
  swift_bridgeObjectRelease();
  v8(v5, v2);
  uint64_t result = sub_1000B7B90();
  __break(1u);
  return result;
}

uint64_t sub_10003493C(uint64_t a1)
{
  return sub_100034958(a1, (unint64_t *)&qword_100103820, (uint64_t)ICCloudSyncingObject_ptr, &qword_1001039A0);
}

uint64_t sub_100034958(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7 = sub_1000B7E90();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100032E64(a1, (uint64_t)v16);
  uint64_t v11 = sub_100038DC8(0, a2);
  if (swift_dynamicCast()) {
    return v14[0];
  }
  sub_100032E64(a1, (uint64_t)v16);
  v14[0] = 0;
  v14[1] = 0xE000000000000000;
  sub_1000B7AA0(20);
  swift_bridgeObjectRelease();
  strcpy((char *)v15, "Cannot cast ");
  HIBYTE(v15[6]) = 0;
  v15[7] = -5120;
  sub_100032E64((uint64_t)v16, (uint64_t)v14);
  sub_1000B7E80();
  v17._countAndFlagsBits = sub_1000B7D80();
  sub_1000B7650(v17);
  swift_bridgeObjectRelease();
  Swift::String v13 = *(void (**)(char *, uint64_t))(v8 + 8);
  v13(v10, v7);
  v18._countAndFlagsBits = 544432416;
  v18._object = (void *)0xE400000000000000;
  sub_1000B7650(v18);
  v14[3] = sub_100032E20(a4);
  v14[0] = v11;
  sub_1000B7E80();
  v19._countAndFlagsBits = sub_1000B7D80();
  sub_1000B7650(v19);
  swift_bridgeObjectRelease();
  v13(v10, v7);
  uint64_t result = sub_1000B7B90();
  __break(1u);
  return result;
}

uint64_t ICArchiveNotesPreviewer.stopPreviewing(_:)(uint64_t a1)
{
  uint64_t v2 = sub_100032E20(&qword_100104330);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000343B4(a1, (uint64_t)v5);
  ICArchivePreviewer.stopPreviewing(_:)((uint64_t)v5);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t ICArchiveNotesPreviewer.state(of:)(uint64_t a1)
{
  uint64_t v3 = sub_100032E20(&qword_100104330);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1
                 + OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension23ICArchiveNotesPreviewer_archivePreviewer);
  swift_beginAccess();
  uint64_t v8 = *(void *)(v7 + 24);
  swift_bridgeObjectRetain();
  sub_1000343B4(a1, (uint64_t)v6);
  if (*(void *)(v8 + 16) && (unint64_t v9 = sub_10006A17C((uint64_t)v6), (v10 & 1) != 0))
  {
    uint64_t v11 = *(void *)(v8 + 56) + 24 * v9;
    id v12 = *(id *)v11;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 16);
    sub_100037F24(*(id *)v11, *(void *)(v11 + 8), *(unsigned char *)(v11 + 16));
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v14 = 0;
    switch(v13)
    {
      case 1:
        v16[3] = sub_100038DC8(0, (unint64_t *)&qword_100103820);
        v16[0] = v12;
        uint64_t v14 = sub_100034958((uint64_t)v16, &qword_100103980, (uint64_t)ICNote_ptr, &qword_100103988);
        sub_100037F98((uint64_t)v16);
        break;
      case 2:
        uint64_t v14 = (uint64_t)v12;
        break;
      case 3:
        return v14;
      default:
        swift_bridgeObjectRelease();
        uint64_t v14 = (uint64_t)v12;
        break;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return 0;
  }
  return v14;
}

uint64_t sub_100034EFC()
{
  uint64_t v0 = sub_1000B6F10();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100032E20(&qword_100104330);
  sub_1000B7140();
  char v4 = sub_1000B6ED0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4 & 1;
}

uint64_t sub_100034FF4@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, char *a3@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v27 = a3;
  uint64_t v5 = sub_100032E20(&qword_100104330);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  unint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  long long v32 = (char *)&v27 - v10;
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v28 = a2 + 64;
  uint64_t v12 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  uint64_t v31 = v6 + 16;
  uint64_t v34 = v6 + 32;
  int64_t v29 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v30 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v35 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v16 = 0;
  Swift::String v17 = v32;
  if (!v14) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v18 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (unint64_t i = v18 | (v16 << 6); ; unint64_t i = __clz(__rbit64(v21)) + (v16 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v17, *(void *)(v35 + 48) + *(void *)(v6 + 72) * i, v5);
    BOOL v23 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v23(v9, v17, v5);
    char v24 = v33(v9);
    if (v3)
    {
      (*v30)(v9, v5);
      return swift_release();
    }
    if (v24)
    {
      swift_release();
      uint64_t v25 = v27;
      v23(v27, v9, v5);
      uint64_t v26 = 0;
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v25, v26, 1, v5);
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))*v30)(v9, v5);
    if (v14) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v16++, 1)) {
      break;
    }
    if (v16 >= v29) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v28 + 8 * v16);
    if (!v21)
    {
      int64_t v22 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v28 + 8 * v22);
      if (v21) {
        goto LABEL_16;
      }
      int64_t v22 = v16 + 2;
      if (v16 + 2 >= v29) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v28 + 8 * v22);
      if (v21) {
        goto LABEL_16;
      }
      int64_t v22 = v16 + 3;
      if (v16 + 3 >= v29) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v28 + 8 * v22);
      if (v21)
      {
LABEL_16:
        int64_t v16 = v22;
        goto LABEL_17;
      }
      int64_t v22 = v16 + 4;
      if (v16 + 4 < v29)
      {
        unint64_t v21 = *(void *)(v28 + 8 * v22);
        if (!v21)
        {
          while (1)
          {
            int64_t v16 = v22 + 1;
            if (__OFADD__(v22, 1)) {
              goto LABEL_31;
            }
            if (v16 >= v29) {
              goto LABEL_28;
            }
            unint64_t v21 = *(void *)(v28 + 8 * v16);
            ++v22;
            if (v21) {
              goto LABEL_17;
            }
          }
        }
        goto LABEL_16;
      }
LABEL_28:
      uint64_t v25 = v27;
      swift_release();
      uint64_t v26 = 1;
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v25, v26, 1, v5);
    }
LABEL_17:
    unint64_t v14 = (v21 - 1) & v21;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

id ICCloudSyncingObject.MoveAction.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return [v1 init];
}

void ICArchiveNotesPreviewer.init()()
{
}

id ICCloudSyncingObject.MoveAction.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return [super dealloc];
}

uint64_t ICArchiveNotesPreviewer.Note.title.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ICArchiveNotesPreviewer.Note() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

Swift::Int ICArchiveNotesPreviewer.Note.hashValue.getter()
{
  return sub_1000B7E70();
}

Swift::Int sub_1000354F8()
{
  return sub_1000B7E70();
}

uint64_t sub_100035534(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100035794(a1, a2, a3, a4, &qword_100103978, &qword_100104330);
}

void *sub_100035548(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100032E20(&qword_100103990);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100037E18(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_100035658(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100032E20(&qword_100103958);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_100038844(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100035780(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100035794(a1, a2, a3, a4, &qword_100103930, &qword_100103748);
}

uint64_t sub_100035794(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = *(void *)(a4 + 24);
    uint64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v10 = a2;
      }
    }
  }
  else
  {
    uint64_t v10 = a2;
  }
  uint64_t v11 = *(void *)(a4 + 16);
  if (v10 <= v11) {
    uint64_t v12 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    int64_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100032E20(a5);
  uint64_t v13 = *(void *)(sub_100032E20(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  int64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (BOOL v18 = v14 == -1) : (BOOL v18 = 0), v18))
  {
LABEL_29:
    uint64_t result = sub_1000B7B80();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(sub_100032E20(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (unint64_t)v16 + v20;
  if (a1)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(void *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_100037CC0(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_100035A00(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100035A34(a1, a2, a3, a4, &qword_1001038F8, (uint64_t (*)(void))_s3TagVMa, (uint64_t (*)(void))_s3TagVMa);
}

uint64_t sub_100035A34(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    BOOL v18 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100032E20(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  BOOL v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_1000B7B80();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_100038C6C(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

void *sub_100035CB4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100032E20(&qword_100103910);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100038954(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_100035DC4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100032E20(&qword_100103920);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_100038A60(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_100035EEC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100032E20(&qword_1001038E8);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_100038B58(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100036010(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100035794(a1, a2, a3, a4, &qword_100103900, &qword_100103908);
}

uint64_t sub_100036024(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100035A34(a1, a2, a3, a4, &qword_100103928, _s16AttributedStringV9AttributeVMa, _s16AttributedStringV9AttributeVMa);
}

Swift::Int sub_100036058(void **a1)
{
  uint64_t v2 = *(void *)(sub_100032E20(&qword_100104330) - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_100044C3C(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_1000363F4(v6);
  *a1 = v3;
  return result;
}

void *sub_100036104(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_100032E20(&qword_100103978);
  uint64_t v3 = *(void *)(sub_100032E20(&qword_100104330) - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v6 = (void *)swift_allocObject();
  Swift::Int result = (void *)j__malloc_size(v6);
  if (v4)
  {
    if ((void *)((char *)result - v5) != (void *)0x8000000000000000 || v4 != -1)
    {
      void v6[2] = v1;
      void v6[3] = 2 * ((uint64_t)((uint64_t)result - v5) / v4);
      uint64_t v9 = *(void *)(sub_100032E20(&qword_100104330) - 8);
      uint64_t v10 = sub_10006C4D4(&v11, (uint64_t)v6 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), v1, a1);
      swift_bridgeObjectRetain();
      sub_100038F7C();
      if (v10 == v1) {
        return v6;
      }
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100036298(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ICArchiveNotesPreviewer.Note();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_1000362FC(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  while (1)
  {
    if (v2 <= 0)
    {
      uint64_t v3 = _swiftEmptyArrayStorage;
    }
    else
    {
      sub_100032E20(&qword_100103938);
      uint64_t v3 = (void *)swift_allocObject();
      int64_t v4 = j__malloc_size(v3);
      uint64_t v5 = v4 - 32;
      if (v4 < 32) {
        uint64_t v5 = v4 - 25;
      }
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_100037A0C((unint64_t)(v3 + 4), v2, v1);
    unint64_t v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1000B7BA0();
    swift_bridgeObjectRelease();
    if (!v2) {
      return _swiftEmptyArrayStorage;
    }
  }
  return v3;
}

Swift::Int sub_1000363F4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100032E20(&qword_100104330);
  uint64_t v5 = *(void **)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  v137 = (char *)&v132 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  v151 = (char *)&v132 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  v147 = (char *)&v132 - v11;
  __chkstk_darwin(v10);
  v146 = (char *)&v132 - v12;
  Swift::Int v13 = a1[1];
  Swift::Int result = sub_1000B7D70(v13);
  if (result >= v13)
  {
    if (v13 < 0) {
      goto LABEL_139;
    }
    if (v13) {
      return sub_100036F90(0, v13, 1, a1);
    }
    return result;
  }
  if (v13 >= 0) {
    uint64_t v15 = v13;
  }
  else {
    uint64_t v15 = v13 + 1;
  }
  if (v13 < -1) {
    goto LABEL_147;
  }
  uint64_t v150 = v4;
  Swift::Int v134 = result;
  if (v13 < 2)
  {
    size_t v19 = (char *)_swiftEmptyArrayStorage;
    unint64_t v139 = (unint64_t)_swiftEmptyArrayStorage
         + ((*((unsigned __int8 *)v5 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v5 + 80));
    v133 = _swiftEmptyArrayStorage;
    if (v13 != 1)
    {
      unint64_t v21 = _swiftEmptyArrayStorage[2];
LABEL_105:
      if (v21 >= 2)
      {
        uint64_t v126 = *a1;
        do
        {
          unint64_t v127 = v21 - 2;
          if (v21 < 2) {
            goto LABEL_134;
          }
          if (!v126) {
            goto LABEL_146;
          }
          uint64_t v128 = *(void *)&v19[16 * v127 + 32];
          uint64_t v129 = *(void *)&v19[16 * v21 + 24];
          sub_1000372A8(v126 + v5[9] * v128, v126 + v5[9] * *(void *)&v19[16 * v21 + 16], v126 + v5[9] * v129, v139);
          if (v2) {
            break;
          }
          if (v129 < v128) {
            goto LABEL_135;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            size_t v19 = sub_100043780((uint64_t)v19);
          }
          if (v127 >= *((void *)v19 + 2)) {
            goto LABEL_136;
          }
          v130 = &v19[16 * v127 + 32];
          *(void *)v130 = v128;
          *((void *)v130 + 1) = v129;
          unint64_t v131 = *((void *)v19 + 2);
          if (v21 > v131) {
            goto LABEL_137;
          }
          memmove(&v19[16 * v21 + 16], &v19[16 * v21 + 32], 16 * (v131 - v21));
          *((void *)v19 + 2) = v131 - 1;
          unint64_t v21 = v131 - 1;
        }
        while (v131 > 2);
      }
LABEL_116:
      swift_bridgeObjectRelease();
      v133[2] = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v16 = v15 >> 1;
    uint64_t v17 = sub_1000B7730();
    *(void *)(v17 + 16) = v16;
    unint64_t v18 = (*((unsigned __int8 *)v5 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v5 + 80);
    v133 = (void *)v17;
    unint64_t v139 = v17 + v18;
  }
  uint64_t v20 = 0;
  v144 = (void (**)(char *, uint64_t))(v5 + 1);
  v145 = v5 + 2;
  v154 = (char **)(v5 + 4);
  size_t v19 = (char *)_swiftEmptyArrayStorage;
  v140 = v5;
  v148 = a1;
  while (1)
  {
    uint64_t v22 = v20;
    Swift::Int v23 = v20 + 1;
    Swift::Int v153 = v13;
    if (v23 >= v13)
    {
      Swift::Int v37 = v23;
    }
    else
    {
      uint64_t v142 = *a1;
      uint64_t v24 = v142;
      Swift::Int v143 = v23;
      uint64_t v25 = v5[9];
      uint64_t v26 = v142 + v25 * v23;
      uint64_t v27 = v5;
      uint64_t v28 = v25;
      uint64_t v155 = v25;
      int64_t v29 = (void (*)(char *, uint64_t, uint64_t))v27[2];
      uint64_t v30 = v146;
      uint64_t v31 = v150;
      v29(v146, v26, v150);
      uint64_t v32 = v24 + v28 * v22;
      uint64_t v33 = v147;
      v29(v147, v32, v31);
      uint64_t v149 = sub_100038F84((unint64_t *)&qword_1001039C0, &qword_100104330);
      LODWORD(v152) = sub_1000B7560();
      Swift::Int v34 = v22;
      uint64_t v35 = (void (*)(char *, uint64_t))v140[1];
      v35(v33, v31);
      v35(v30, v31);
      uint64_t v36 = v155;
      Swift::Int v138 = v34;
      Swift::Int v37 = v34 + 2;
      if (v34 + 2 >= v153)
      {
        Swift::Int v13 = v153;
      }
      else
      {
        v135 = v19;
        uint64_t v132 = v2;
        v143 *= v155;
        uint64_t v38 = v142;
        uint64_t v39 = v155 * v37;
        while (1)
        {
          uint64_t v40 = v146;
          uint64_t v41 = v150;
          v29(v146, v38 + v39, v150);
          uint64_t v42 = v147;
          v29(v147, v38 + v143, v41);
          int v43 = sub_1000B7560();
          v35(v42, v41);
          v35(v40, v41);
          if ((v152 ^ v43)) {
            break;
          }
          ++v37;
          uint64_t v36 = v155;
          v38 += v155;
          if (v153 == v37)
          {
            Swift::Int v13 = v153;
            Swift::Int v37 = v153;
            uint64_t v2 = v132;
            size_t v19 = v135;
            goto LABEL_24;
          }
        }
        uint64_t v2 = v132;
        size_t v19 = v135;
        Swift::Int v13 = v153;
        uint64_t v36 = v155;
      }
LABEL_24:
      a1 = v148;
      uint64_t v22 = v138;
      if (v152)
      {
        if (v37 < v138) {
          goto LABEL_140;
        }
        if (v138 < v37)
        {
          uint64_t v44 = v2;
          v135 = v19;
          uint64_t v45 = 0;
          uint64_t v46 = v36 * (v37 - 1);
          Swift::Int v47 = v37 * v36;
          Swift::Int v48 = v138;
          uint64_t v49 = v138 * v36;
          uint64_t v50 = v142;
          uint64_t v149 = v37;
          do
          {
            if (v48 != v37 + v45 - 1)
            {
              if (!v50) {
                goto LABEL_145;
              }
              uint64_t v52 = v50 + v46;
              v152 = *v154;
              ((void (*)(char *, uint64_t, uint64_t))v152)(v137, v50 + v49, v150);
              if (v49 < v46 || v50 + v49 >= (unint64_t)(v50 + v47))
              {
                uint64_t v51 = v150;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                uint64_t v51 = v150;
                if (v49 != v46) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              ((void (*)(uint64_t, char *, uint64_t))v152)(v52, v137, v51);
              a1 = v148;
              Swift::Int v37 = v149;
              uint64_t v50 = v142;
              uint64_t v36 = v155;
            }
            ++v48;
            --v45;
            v46 -= v36;
            v47 -= v36;
            v49 += v36;
          }
          while (v48 < v37 + v45);
          size_t v19 = v135;
          uint64_t v2 = v44;
          uint64_t v22 = v138;
          Swift::Int v13 = v153;
        }
      }
    }
    BOOL v106 = v37 < v13;
    uint64_t v53 = v150;
    if (v106)
    {
      if (__OFSUB__(v37, v22)) {
        goto LABEL_138;
      }
      if (v37 - v22 < v134) {
        break;
      }
    }
LABEL_56:
    if (v37 < v22) {
      goto LABEL_133;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v149 = v37;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      size_t v19 = sub_100043540(0, *((void *)v19 + 2) + 1, 1, v19);
    }
    unint64_t v74 = *((void *)v19 + 2);
    unint64_t v73 = *((void *)v19 + 3);
    unint64_t v21 = v74 + 1;
    if (v74 >= v73 >> 1) {
      size_t v19 = sub_100043540((char *)(v73 > 1), v74 + 1, 1, v19);
    }
    *((void *)v19 + 2) = v21;
    v75 = v19 + 32;
    v76 = &v19[16 * v74 + 32];
    uint64_t v77 = v149;
    *(void *)v76 = v22;
    *((void *)v76 + 1) = v77;
    if (v74)
    {
      while (1)
      {
        unint64_t v78 = v21 - 1;
        if (v21 >= 4)
        {
          uint64_t v83 = &v75[16 * v21];
          uint64_t v84 = *((void *)v83 - 8);
          uint64_t v85 = *((void *)v83 - 7);
          BOOL v89 = __OFSUB__(v85, v84);
          uint64_t v86 = v85 - v84;
          if (v89) {
            goto LABEL_122;
          }
          uint64_t v88 = *((void *)v83 - 6);
          uint64_t v87 = *((void *)v83 - 5);
          BOOL v89 = __OFSUB__(v87, v88);
          uint64_t v81 = v87 - v88;
          char v82 = v89;
          if (v89) {
            goto LABEL_123;
          }
          unint64_t v90 = v21 - 2;
          v91 = &v75[16 * v21 - 32];
          uint64_t v93 = *(void *)v91;
          uint64_t v92 = *((void *)v91 + 1);
          BOOL v89 = __OFSUB__(v92, v93);
          uint64_t v94 = v92 - v93;
          if (v89) {
            goto LABEL_125;
          }
          BOOL v89 = __OFADD__(v81, v94);
          uint64_t v95 = v81 + v94;
          if (v89) {
            goto LABEL_128;
          }
          if (v95 >= v86)
          {
            v113 = &v75[16 * v78];
            uint64_t v115 = *(void *)v113;
            uint64_t v114 = *((void *)v113 + 1);
            BOOL v89 = __OFSUB__(v114, v115);
            uint64_t v116 = v114 - v115;
            if (v89) {
              goto LABEL_132;
            }
            BOOL v106 = v81 < v116;
            goto LABEL_93;
          }
        }
        else
        {
          if (v21 != 3)
          {
            uint64_t v107 = *((void *)v19 + 4);
            uint64_t v108 = *((void *)v19 + 5);
            BOOL v89 = __OFSUB__(v108, v107);
            uint64_t v100 = v108 - v107;
            char v101 = v89;
            goto LABEL_87;
          }
          uint64_t v80 = *((void *)v19 + 4);
          uint64_t v79 = *((void *)v19 + 5);
          BOOL v89 = __OFSUB__(v79, v80);
          uint64_t v81 = v79 - v80;
          char v82 = v89;
        }
        if (v82) {
          goto LABEL_124;
        }
        unint64_t v90 = v21 - 2;
        v96 = &v75[16 * v21 - 32];
        uint64_t v98 = *(void *)v96;
        uint64_t v97 = *((void *)v96 + 1);
        BOOL v99 = __OFSUB__(v97, v98);
        uint64_t v100 = v97 - v98;
        char v101 = v99;
        if (v99) {
          goto LABEL_127;
        }
        v102 = &v75[16 * v78];
        uint64_t v104 = *(void *)v102;
        uint64_t v103 = *((void *)v102 + 1);
        BOOL v89 = __OFSUB__(v103, v104);
        uint64_t v105 = v103 - v104;
        if (v89) {
          goto LABEL_130;
        }
        if (__OFADD__(v100, v105)) {
          goto LABEL_131;
        }
        if (v100 + v105 >= v81)
        {
          BOOL v106 = v81 < v105;
LABEL_93:
          if (v106) {
            unint64_t v78 = v90;
          }
          goto LABEL_95;
        }
LABEL_87:
        if (v101) {
          goto LABEL_126;
        }
        v109 = &v75[16 * v78];
        uint64_t v111 = *(void *)v109;
        uint64_t v110 = *((void *)v109 + 1);
        BOOL v89 = __OFSUB__(v110, v111);
        uint64_t v112 = v110 - v111;
        if (v89) {
          goto LABEL_129;
        }
        if (v112 < v100) {
          goto LABEL_14;
        }
LABEL_95:
        unint64_t v117 = v78 - 1;
        if (v78 - 1 >= v21)
        {
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
          goto LABEL_142;
        }
        uint64_t v118 = *a1;
        if (!*a1) {
          goto LABEL_144;
        }
        v119 = v19;
        v120 = &v75[16 * v117];
        uint64_t v121 = *(void *)v120;
        v122 = &v75[16 * v78];
        uint64_t v123 = *((void *)v122 + 1);
        sub_1000372A8(v118 + v140[9] * *(void *)v120, v118 + v140[9] * *(void *)v122, v118 + v140[9] * v123, v139);
        if (v2) {
          goto LABEL_116;
        }
        if (v123 < v121) {
          goto LABEL_119;
        }
        if (v78 > *((void *)v119 + 2)) {
          goto LABEL_120;
        }
        v124 = v119;
        *(void *)v120 = v121;
        *(void *)&v75[16 * v117 + 8] = v123;
        unint64_t v125 = *((void *)v119 + 2);
        if (v78 >= v125) {
          goto LABEL_121;
        }
        size_t v19 = v124;
        unint64_t v21 = v125 - 1;
        memmove(&v75[16 * v78], v122 + 16, 16 * (v125 - 1 - v78));
        *((void *)v19 + 2) = v125 - 1;
        a1 = v148;
        if (v125 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v21 = 1;
LABEL_14:
    Swift::Int v13 = a1[1];
    uint64_t v20 = v149;
    uint64_t v5 = v140;
    if (v149 >= v13) {
      goto LABEL_105;
    }
  }
  if (__OFADD__(v22, v134)) {
    goto LABEL_141;
  }
  Swift::Int v54 = v153;
  if (v22 + v134 < v153) {
    Swift::Int v54 = v22 + v134;
  }
  if (v54 >= v22)
  {
    if (v37 != v54)
    {
      Swift::Int v138 = v22;
      v135 = v19;
      uint64_t v132 = v2;
      uint64_t v55 = v140[9];
      v141 = (void (*)(char *, uint64_t, uint64_t))v140[2];
      uint64_t v142 = v55;
      uint64_t v155 = v55 * (v37 - 1);
      Swift::Int v56 = v37 * v55;
      Swift::Int v136 = v54;
      do
      {
        uint64_t v58 = 0;
        uint64_t v59 = (char *)v138;
        uint64_t v149 = v37;
        Swift::Int v143 = v56;
        while (1)
        {
          v152 = v59;
          uint64_t v60 = *a1;
          Swift::Int v61 = v56 + v58 + *a1;
          uint64_t v62 = v146;
          v63 = v141;
          v141(v146, v61, v53);
          uint64_t v64 = v155 + v58 + v60;
          uint64_t v65 = a1;
          uint64_t v66 = v147;
          v63(v147, v64, v53);
          sub_100038F84((unint64_t *)&qword_1001039C0, &qword_100104330);
          LODWORD(v153) = sub_1000B7560();
          uint64_t v67 = *v144;
          (*v144)(v66, v53);
          v67(v62, v53);
          if ((v153 & 1) == 0) {
            break;
          }
          uint64_t v68 = *v65;
          if (!*v65) {
            goto LABEL_143;
          }
          Swift::Int v56 = v143;
          uint64_t v69 = v68 + v155 + v58;
          uint64_t v70 = *v154;
          uint64_t v71 = v150;
          ((void (*)(char *, uint64_t, uint64_t))*v154)(v151, v68 + v143 + v58, v150);
          uint64_t v53 = v71;
          swift_arrayInitWithTakeFrontToBack();
          ((void (*)(uint64_t, char *, uint64_t))v70)(v69, v151, v71);
          v58 -= v142;
          uint64_t v59 = v152 + 1;
          a1 = v148;
          uint64_t v57 = v149;
          if ((char *)v149 == v152 + 1) {
            goto LABEL_49;
          }
        }
        uint64_t v57 = v149;
        uint64_t v53 = v150;
        a1 = v65;
        Swift::Int v56 = v143;
LABEL_49:
        Swift::Int v37 = v57 + 1;
        v155 += v142;
        v56 += v142;
      }
      while (v37 != v136);
      Swift::Int v37 = v136;
      uint64_t v2 = v132;
      size_t v19 = v135;
      uint64_t v22 = v138;
    }
    goto LABEL_56;
  }
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  Swift::Int result = sub_1000B7B80();
  __break(1u);
  return result;
}

uint64_t sub_100036F90(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v31 = a1;
  uint64_t v7 = sub_100032E20(&qword_100104330);
  uint64_t v8 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v41 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  Swift::Int v37 = (char *)&v29 - v11;
  uint64_t result = __chkstk_darwin(v10);
  uint64_t v36 = (char *)&v29 - v14;
  uint64_t v39 = a3;
  uint64_t v30 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    uint64_t v15 = v13 + 16;
    uint64_t v17 = *(void *)(v15 + 56);
    uint64_t v32 = (uint64_t (**)(char *, uint64_t))(v15 - 8);
    uint64_t v33 = v16;
    Swift::Int v34 = a4;
    uint64_t v35 = v15;
    uint64_t v40 = (void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    uint64_t v44 = v17 * (v39 - 1);
    uint64_t v38 = v17;
    uint64_t v43 = v17 * v39;
LABEL_5:
    uint64_t v18 = 0;
    uint64_t v42 = v31;
    while (1)
    {
      uint64_t v19 = *a4;
      uint64_t v20 = v43 + v18 + *a4;
      unint64_t v21 = v36;
      uint64_t v22 = v33;
      v33(v36, v20, v7);
      Swift::Int v23 = v37;
      v22(v37, v44 + v18 + v19, v7);
      sub_100038F84((unint64_t *)&qword_1001039C0, &qword_100104330);
      LOBYTE(v19) = sub_1000B7560();
      uint64_t v24 = *v32;
      (*v32)(v23, v7);
      uint64_t v25 = v21;
      a4 = v34;
      uint64_t result = v24(v25, v7);
      if ((v19 & 1) == 0)
      {
LABEL_4:
        v44 += v38;
        v43 += v38;
        if (++v39 == v30) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v26 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v27 = v26 + v44 + v18;
      uint64_t v28 = *v40;
      (*v40)(v41, v26 + v43 + v18, v7);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v28)(v27, v41, v7);
      v18 -= v38;
      if (v39 == ++v42) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1000372A8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v58 = sub_100032E20(&qword_100104330);
  uint64_t v8 = *(void *)(v58 - 8);
  uint64_t v9 = __chkstk_darwin(v58);
  Swift::Int v56 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v55 = (char *)&v48 - v11;
  uint64_t v57 = *(void *)(v12 + 72);
  if (!v57)
  {
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  if (a2 - a1 == 0x8000000000000000 && v57 == -1) {
    goto LABEL_68;
  }
  int64_t v13 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v57 == -1) {
    goto LABEL_69;
  }
  uint64_t v14 = (uint64_t)(a2 - a1) / v57;
  unint64_t v61 = a1;
  unint64_t v60 = a4;
  uint64_t v15 = v13 / v57;
  if (v14 >= v13 / v57)
  {
    if ((v15 & 0x8000000000000000) == 0)
    {
      uint64_t v17 = v15 * v57;
      if (a4 < a2 || a2 + v17 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v32 = a4 + v17;
      unint64_t v59 = a4 + v17;
      unint64_t v61 = a2;
      if (v17 >= 1 && a1 < a2)
      {
        Swift::Int v34 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
        uint64_t v35 = -v57;
        uint64_t v54 = v8 + 16;
        uint64_t v36 = (void (**)(char *, uint64_t))(v8 + 8);
        uint64_t v50 = v8 + 8;
        uint64_t v51 = v34;
        unint64_t v49 = a4;
        uint64_t v52 = (void (*)(void, void, void))a1;
        Swift::Int v37 = v56;
        uint64_t v38 = v36;
        do
        {
          unint64_t v53 = a3;
          uint64_t v57 = a3 + v35;
          uint64_t v39 = v55;
          uint64_t v40 = v58;
          uint64_t v41 = v51;
          v51(v55, v32 + v35, v58);
          unint64_t v42 = a2 + v35;
          v41(v37, a2 + v35, v40);
          sub_100038F84((unint64_t *)&qword_1001039C0, &qword_100104330);
          LOBYTE(v41) = sub_1000B7560();
          uint64_t v43 = *v38;
          (*v38)(v37, v40);
          v43(v39, v40);
          if (v41)
          {
            a3 = v57;
            if (v53 < a2 || v57 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v44 = v49;
              uint64_t v45 = v52;
            }
            else
            {
              unint64_t v44 = v49;
              uint64_t v45 = v52;
              if (v53 != a2) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v61 += v35;
          }
          else
          {
            unint64_t v46 = v59;
            v59 += v35;
            a3 = v57;
            if (v53 < v46 || v57 >= v46)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v42 = a2;
              unint64_t v44 = v49;
              uint64_t v45 = v52;
            }
            else
            {
              uint64_t v45 = v52;
              if (v53 != v46) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v42 = a2;
              unint64_t v44 = v49;
            }
          }
          unint64_t v32 = v59;
          if (v59 <= v44) {
            break;
          }
          a2 = v42;
        }
        while (v42 > (unint64_t)v45);
      }
      goto LABEL_66;
    }
  }
  else if ((v14 & 0x8000000000000000) == 0)
  {
    uint64_t v16 = v14 * v57;
    if (a4 < a1 || a1 + v16 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v53 = a4 + v16;
    unint64_t v59 = a4 + v16;
    if (v16 >= 1 && a2 < a3)
    {
      uint64_t v52 = *(void (**)(void, void, void))(v8 + 16);
      uint64_t v54 = v8 + 16;
      uint64_t v19 = (void (**)(char *, uint64_t))(v8 + 8);
      uint64_t v20 = v55;
      do
      {
        unint64_t v21 = a4;
        unint64_t v22 = a3;
        uint64_t v23 = v58;
        uint64_t v24 = (void (*)(char *, unint64_t, uint64_t))v52;
        v52(v20, a2, v58);
        uint64_t v25 = v56;
        v24(v56, v21, v23);
        sub_100038F84((unint64_t *)&qword_1001039C0, &qword_100104330);
        LOBYTE(v24) = sub_1000B7560();
        uint64_t v26 = *v19;
        (*v19)(v25, v23);
        v26(v20, v23);
        unint64_t v27 = v61;
        if (v24)
        {
          unint64_t v28 = a2 + v57;
          if (v61 < a2 || v61 >= v28)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v22;
          }
          else
          {
            a3 = v22;
            if (v61 == a2) {
              unint64_t v27 = a2;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        else
        {
          unint64_t v30 = v60 + v57;
          if (v61 < v60 || v61 >= v30)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v22;
          }
          else
          {
            a3 = v22;
            if (v61 != v60) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v60 = v30;
          unint64_t v28 = a2;
        }
        unint64_t v61 = v27 + v57;
        a4 = v60;
        if (v60 >= v53) {
          break;
        }
        a2 = v28;
      }
      while (v28 < a3);
    }
LABEL_66:
    sub_10004363C(&v61, &v60, (uint64_t *)&v59);
    return 1;
  }
LABEL_70:
  uint64_t result = sub_1000B7BE0();
  __break(1u);
  return result;
}

void (*sub_1000378D4(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(void *a1)
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_100037984(v6, a2, a3);
  return sub_10003793C;
}

void sub_10003793C(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void (*sub_100037984(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)sub_1000B7AC0();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_100037A04;
  }
  __break(1u);
  return result;
}

void sub_100037A04(id *a1)
{
}

uint64_t sub_100037A0C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1000B7BA0();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1000B7BA0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100038F84(&qword_100103950, &qword_100103948);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_100032E20(&qword_100103948);
          uint64_t v12 = sub_1000378D4(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100038DC8(0, &qword_100103940);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1000B7BE0();
  __break(1u);
  return result;
}

uint64_t _s38com_apple_mobilenotes_SharingExtension23ICArchiveNotesPreviewerC4NoteV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  if (sub_1000B6ED0())
  {
    uint64_t v4 = *(int *)(type metadata accessor for ICArchiveNotesPreviewer.Note() + 20);
    uint64_t v5 = (void *)(a1 + v4);
    uint64_t v6 = *(void *)(a1 + v4 + 8);
    uint64_t v7 = (void *)(a2 + v4);
    uint64_t v8 = v7[1];
    if (v6)
    {
      if (v8)
      {
        BOOL v9 = *v5 == *v7 && v6 == v8;
        if (v9 || (sub_1000B7DC0() & 1) != 0) {
          return 1;
        }
      }
    }
    else if (!v8)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_100037CC0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(sub_100032E20(a5) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_1000B7BE0();
  __break(1u);
  return result;
}

uint64_t sub_100037E18(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_100032E20(&qword_100103998);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1000B7BE0();
  __break(1u);
  return result;
}

id sub_100037F24(id result, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 2:
      return (id)swift_errorRetain();
    case 1:
      return result;
    case 0:
      id v4 = result;
      return (id)swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100037F98(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

unint64_t sub_100037FEC()
{
  unint64_t result = qword_100103828;
  if (!qword_100103828)
  {
    type metadata accessor for ICArchiveNotesPreviewer.Note();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100103828);
  }
  return result;
}

uint64_t type metadata accessor for ICArchiveNotesPreviewer()
{
  return self;
}

uint64_t *initializeBufferWithCopyOfBuffer for ICArchiveNotesPreviewer.Note(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1000B6F10();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    void *v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ICArchiveNotesPreviewer.Note(uint64_t a1)
{
  uint64_t v2 = sub_1000B6F10();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ICArchiveNotesPreviewer.Note(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B6F10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  void *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ICArchiveNotesPreviewer.Note(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B6F10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  void *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ICArchiveNotesPreviewer.Note(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B6F10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for ICArchiveNotesPreviewer.Note(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B6F10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  void *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ICArchiveNotesPreviewer.Note(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000383F8);
}

uint64_t sub_1000383F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B6F10();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ICArchiveNotesPreviewer.Note(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000384DC);
}

uint64_t sub_1000384DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000B6F10();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  }
  return result;
}

uint64_t sub_10003859C()
{
  uint64_t result = sub_1000B6F10();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ICArchiveNotesPreviewer.Note.States(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_100038678(*(id *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

id sub_100038678(id result, unsigned __int8 a2)
{
  if (a2 == 2) {
    return (id)swift_errorRetain();
  }
  if (a2 <= 1u) {
    return result;
  }
  return result;
}

void destroy for ICArchiveNotesPreviewer.Note.States(uint64_t a1)
{
}

void sub_1000386AC(id a1, unsigned __int8 a2)
{
  if (a2 == 2)
  {
    swift_errorRelease();
  }
  else if (a2 <= 1u)
  {
  }
}

uint64_t assignWithCopy for ICArchiveNotesPreviewer.Note.States(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_100038678(*(id *)a2, v4);
  int v5 = *(void **)a1;
  *(void *)a1 = v3;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_1000386AC(v5, v6);
  return a1;
}

uint64_t initializeWithTake for ICArchiveNotesPreviewer.Note.States(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t assignWithTake for ICArchiveNotesPreviewer.Note.States(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  unsigned __int8 v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  unsigned __int8 v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_1000386AC(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for ICArchiveNotesPreviewer.Note.States(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ICArchiveNotesPreviewer.Note.States(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100038804(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 2u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_10003881C(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)uint64_t result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ICArchiveNotesPreviewer.Note.States()
{
  return &type metadata for ICArchiveNotesPreviewer.Note.States;
}

uint64_t sub_100038844(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_100032E20(&qword_100103960);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1000B7BE0();
  __break(1u);
  return result;
}

uint64_t sub_100038954(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_100032E20(&qword_100103918);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1000B7BE0();
  __break(1u);
  return result;
}

uint64_t sub_100038A60(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1000B7BE0();
  __break(1u);
  return result;
}

uint64_t sub_100038B58(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_100032E20(&qword_1001038F0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1000B7BE0();
  __break(1u);
  return result;
}

uint64_t sub_100038C6C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_1000B7BE0();
  __break(1u);
  return result;
}

uint64_t sub_100038DC8(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_100038E04(void *a1, char a2)
{
  if (a2) {
    swift_errorRelease();
  }
  else {
}
  }

uint64_t sub_100038E10()
{
  return sub_100034EFC() & 1;
}

uint64_t sub_100038E30(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_100032E20(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100038E8C(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

unint64_t sub_100038EC4()
{
  unint64_t result = qword_1001039B0;
  if (!qword_1001039B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001039B0);
  }
  return result;
}

uint64_t *sub_100038F18(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_100038F7C()
{
  return swift_release();
}

uint64_t sub_100038F84(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100032F70(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100038FCC(char a1, char a2)
{
  if (*(void *)&aUp_1[8 * a1] == *(void *)&aUp_1[8 * a2] && qword_1000CBE50[a1] == qword_1000CBE50[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_1000B7DC0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_100039054(char a1, char a2)
{
  if (*(void *)&aPhoto_1[8 * a1] == *(void *)&aPhoto_1[8 * a2]
    && *(void *)&aGrayscalblackA[8 * a1 + 24] == *(void *)&aGrayscalblackA[8 * a2 + 24])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_1000B7DC0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1000390DC(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 0x4C41434F4CLL;
  }
  else {
    uint64_t v2 = 0x44554F4C43;
  }
  if (a2) {
    uint64_t v3 = 0x4C41434F4CLL;
  }
  else {
    uint64_t v3 = 0x44554F4C43;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_1000B7DC0();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_100039154(char a1, char a2)
{
  if (*(void *)&aNormal_1[8 * a1] == *(void *)&aNormal_1[8 * a2] && qword_1000CBED8[a1] == qword_1000CBED8[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_1000B7DC0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1000391DC(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x49444E4543534544;
  }
  else {
    uint64_t v3 = 0x4E49444E45435341;
  }
  if (v2) {
    unint64_t v4 = 0xE900000000000047;
  }
  else {
    unint64_t v4 = 0xEA0000000000474ELL;
  }
  if (a2) {
    uint64_t v5 = 0x49444E4543534544;
  }
  else {
    uint64_t v5 = 0x4E49444E45435341;
  }
  if (a2) {
    unint64_t v6 = 0xEA0000000000474ELL;
  }
  else {
    unint64_t v6 = 0xE900000000000047;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1000B7DC0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_100039288(char a1, char a2)
{
  if (*(void *)&aCreatedModifie[8 * a1] == *(void *)&aCreatedModifie[8 * a2]
    && *(void *)&aAt[8 * a1] == *(void *)&aAt[8 * a2])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_1000B7DC0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_100039310(char a1, char a2)
{
  if (*(void *)&aPreview_1[8 * a1] == *(void *)&aPreview_1[8 * a2] && qword_1000CBF38[a1] == qword_1000CBF38[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_1000B7DC0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_100039398(char a1, char a2)
{
  if (*(void *)&aNone_1[8 * a1] == *(void *)&aNone_1[8 * a2]
    && *(void *)&aSmallGrmediumG[8 * a1 + 48] == *(void *)&aSmallGrmediumG[8 * a2 + 48])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_1000B7DC0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_100039420(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x544847494CLL;
  }
  else {
    uint64_t v3 = 0x544C5541464544;
  }
  if (v2) {
    unint64_t v4 = 0xE700000000000000;
  }
  else {
    unint64_t v4 = 0xE500000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x544847494CLL;
  }
  else {
    uint64_t v5 = 0x544C5541464544;
  }
  if (a2) {
    unint64_t v6 = 0xE500000000000000;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1000B7DC0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1000394C0(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000017;
  unint64_t v3 = 0x80000001000C7D60;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000017;
  switch(v4)
  {
    case 1:
      unint64_t v6 = "com.apple.notes.account";
      goto LABEL_6;
    case 2:
      unint64_t v5 = 0xD000000000000016;
      unint64_t v6 = "com.apple.notes.folder";
      goto LABEL_6;
    case 3:
      unint64_t v5 = 0xD000000000000014;
      unint64_t v6 = "com.apple.notes.note";
      goto LABEL_6;
    case 4:
      unint64_t v5 = 0xD00000000000001ALL;
      unint64_t v6 = "com.apple.notes.attachment";
LABEL_6:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0x80000001000C7D60;
  switch(a2)
  {
    case 1:
      uint64_t v8 = "com.apple.notes.account";
      goto LABEL_12;
    case 2:
      unint64_t v2 = 0xD000000000000016;
      uint64_t v8 = "com.apple.notes.folder";
      goto LABEL_12;
    case 3:
      unint64_t v2 = 0xD000000000000014;
      uint64_t v8 = "com.apple.notes.note";
      goto LABEL_12;
    case 4:
      unint64_t v2 = 0xD00000000000001ALL;
      uint64_t v8 = "com.apple.notes.attachment";
LABEL_12:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v5 == v2 && v3 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_1000B7DC0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_10003963C(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000016;
  unint64_t v3 = 0x80000001000C7F70;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000016;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x5F4F545F5446454CLL;
      unsigned int v6 = 1212631378;
      goto LABEL_5;
    case 2:
      break;
    case 3:
      unint64_t v5 = 0x4F545F5448474952;
      unsigned int v6 = 1178946655;
LABEL_5:
      unint64_t v3 = v6 | 0xED00005400000000;
      break;
    case 4:
      unint64_t v3 = 0x80000001000C7FA0;
      break;
    default:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x4C41525554414ELL;
      break;
  }
  unint64_t v7 = 0x80000001000C7F70;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xED00005448474952;
      if (v5 == 0x5F4F545F5446454CLL) {
        goto LABEL_14;
      }
      goto LABEL_17;
    case 2:
      goto LABEL_13;
    case 3:
      unint64_t v2 = 0x4F545F5448474952;
      unint64_t v7 = 0xED00005446454C5FLL;
LABEL_13:
      if (v5 == v2) {
        goto LABEL_14;
      }
      goto LABEL_17;
    case 4:
      unint64_t v7 = 0x80000001000C7FA0;
      if (v5 != 0xD000000000000016) {
        goto LABEL_17;
      }
      goto LABEL_14;
    default:
      unint64_t v7 = 0xE700000000000000;
      if (v5 != 0x4C41525554414ELL) {
        goto LABEL_17;
      }
LABEL_14:
      if (v3 == v7) {
        char v8 = 1;
      }
      else {
LABEL_17:
      }
        char v8 = sub_1000B7DC0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8 & 1;
  }
}

uint64_t sub_100039824(char a1, char a2)
{
  if (*(void *)&aPurple_1[8 * a1] == *(void *)&aPurple_1[8 * a2] && qword_1000CBFE8[a1] == qword_1000CBFE8[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_1000B7DC0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1000398AC(char a1, char a2)
{
  if (*(void *)&aLeft_2[8 * a1] == *(void *)&aLeft_2[8 * a2] && qword_1000CC038[a1] == qword_1000CC038[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_1000B7DC0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_100039934()
{
  uint64_t v0 = sub_1000B7490();
  sub_100038F18(v0, qword_1001039C8);
  sub_100038E8C(v0, (uint64_t)qword_1001039C8);
  return sub_1000B7470();
}

uint64_t sub_100039980()
{
  uint64_t v0 = sub_1000B7490();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  char v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000B7410();
  sub_100038F18(v4, qword_1001039E0);
  sub_100038E8C(v4, (uint64_t)qword_1001039E0);
  if (qword_100103678 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100038E8C(v0, (uint64_t)qword_1001039C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  return sub_1000B73F0();
}

uint64_t ICArchiveImporter.Configuration.retainsIdentifiers.getter(char a1)
{
  return a1 & 1;
}

uint64_t ICArchiveImporter.Configuration.retainsIdentifiers.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*ICArchiveExporterConfiguration.creator.modify())()
{
  return ICCloudSyncingObject.MoveAction.Types.rawValue.getter;
}

uint64_t ICArchiveImporter.Configuration.importsRelativeTimestamps.getter(unsigned int a1)
{
  return (a1 >> 8) & 1;
}

uint64_t ICArchiveImporter.Configuration.importsRelativeTimestamps.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result;
  return result;
}

uint64_t (*ICArchiveImporter.Configuration.importsRelativeTimestamps.modify())()
{
  return ICCloudSyncingObject.MoveAction.Types.rawValue.getter;
}

void ICArchiveImporter.Configuration.timestampOffset.setter(double a1)
{
  *(double *)(v1 + 8) = a1;
}

uint64_t (*ICArchiveImporter.Configuration.timestampOffset.modify())()
{
  return ICCloudSyncingObject.MoveAction.Types.rawValue.getter;
}

double static ICArchiveImporter.Configuration.default.getter()
{
  return 0.0;
}

id ICArchiveImporter.context.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension17ICArchiveImporter_context);
}

double ICArchiveImporter.configuration.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension17ICArchiveImporter_configuration;
  swift_beginAccess();
  double v2 = *(double *)(v1 + 8);
  id v3 = *(id *)(v1 + 16);
  return v2;
}

uint64_t ICArchiveImporter.fileManager.getter()
{
  return swift_unknownObjectRetain();
}

id ICArchiveImporter.__allocating_init(context:configuration:fileManager:)(void *a1, __int16 a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  uint64_t ObjectType = swift_getObjectType();

  return sub_1000448D0(a1, a2 & 0x101, a3, a4, a5, v7, ObjectType, a6, a7);
}

id ICArchiveImporter.init(context:configuration:fileManager:)(void *a1, __int16 a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  uint64_t ObjectType = swift_getObjectType();

  return sub_100044AD4(a1, a2 & 0x101, a3, a4, a5, v7, a7, ObjectType, a6);
}

uint64_t sub_100039D84()
{
  id v1 = [self defaultCenter];
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  char v9 = sub_1000470A4;
  uint64_t v10 = v2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10007A988;
  uint64_t ObjectType = &unk_1000EFCC0;
  id v3 = _Block_copy(aBlock);
  swift_release();
  id v4 = [v1 addObserverForName:UIApplicationDidReceiveMemoryWarningNotification object:0 queue:0 usingBlock:v3];
  _Block_release(v3);

  uint64_t ObjectType = (void *)swift_getObjectType();
  aBlock[0] = v4;
  uint64_t v5 = v0 + OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension17ICArchiveImporter_didReceiveMemoryWarningObserver;
  swift_beginAccess();
  sub_1000470C4((uint64_t)aBlock, v5);
  return swift_endAccess();
}

void ICArchiveImporter.init()()
{
  id v1 = [self sharedContext];
  if (v1
    && (uint64_t v2 = v1,
        id v3 = [v1 snapshotManagedObjectContext],
        v2,
        v3))
  {
    [v0 initWithContext:v3];
  }
  else
  {
    __break(1u);
  }
}

id ICArchiveImporter.__allocating_init(context:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = [self defaultManager];
  __int16 IsAlexandriaDemoModeEnabled = ICInternalSettingsIsAlexandriaDemoModeEnabled();
  int v6 = ICInternalSettingsIsAlexandriaDemoModeEnabled();
  uint64_t v7 = objc_allocWithZone(v1);
  if (v6) {
    __int16 v8 = 256;
  }
  else {
    __int16 v8 = 0;
  }
  id v9 = sub_10004496C(a1, v8 | IsAlexandriaDemoModeEnabled, 0, 0, v4, v7, 0.0);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v9;
}

id ICArchiveImporter.init(context:)(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v3 = [self defaultManager];
  __int16 IsAlexandriaDemoModeEnabled = ICInternalSettingsIsAlexandriaDemoModeEnabled();
  int v5 = ICInternalSettingsIsAlexandriaDemoModeEnabled();
  int v6 = objc_allocWithZone(ObjectType);
  if (v5) {
    __int16 v7 = 256;
  }
  else {
    __int16 v7 = 0;
  }
  id v8 = sub_10004496C(a1, v7 | IsAlexandriaDemoModeEnabled, 0, 0, v3, v6, 0.0);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v8;
}

id ICArchiveImporter.__deallocating_deinit()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = (uint64_t)v0
     + OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension17ICArchiveImporter_didReceiveMemoryWarningObserver;
  swift_beginAccess();
  sub_100032FC8(v2, (uint64_t)v6, &qword_1001036F8);
  id v3 = [self defaultCenter];
  sub_100044C74((uint64_t)v6, v3);

  sub_100038E30((uint64_t)v6, &qword_1001036F8);
  v5.receiver = v0;
  v5.super_class = ObjectType;
  return [super dealloc];
}

uint64_t ICArchiveImporter.Errors.errorDescription.getter(uint64_t a1)
{
  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      id v1 = [self mainBundle];
      NSString v2 = sub_1000B7580();
      id v3 = [v1 localizedStringForKey:v2 value:0 table:0];

      uint64_t v4 = sub_1000B75B0();
      return v4;
    default:
      sub_1000B7DD0();
      __break(1u);
      JUMPOUT(0x10003A6BCLL);
  }
}

unint64_t ICCloudSyncingObject.MoveAction.Types.init(rawValue:)(unint64_t a1)
{
  return sub_1000452B0(a1);
}

unint64_t static ICArchiveImporter.Errors._nsErrorDomain.getter()
{
  return 0xD00000000000003FLL;
}

BOOL sub_10003A708(void *a1, void *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_10003A71C()
{
  return sub_1000B7E70();
}

uint64_t sub_10003A780(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100046C80();

  return _BridgedNSError.hash(into:)(a1, a2, v4);
}

Swift::Int sub_10003A7CC()
{
  return sub_1000B7E70();
}

unint64_t sub_10003A82C@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_1000452B0(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

void sub_10003A860(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_10003A86C()
{
  return ICArchiveImporter.Errors.errorDescription.getter(*v0);
}

uint64_t sub_10003A880(uint64_t a1)
{
  unint64_t v2 = sub_100046C80();

  return _BridgedNSError._domain.getter(a1, v2);
}

uint64_t sub_10003A8BC(uint64_t a1)
{
  unint64_t v2 = sub_100046C80();

  return _BridgedNSError._code.getter(a1, v2);
}

uint64_t sub_10003A900(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100046C80();

  return _BridgedNSError.init(_bridgedNSError:)(a1, a2, v4);
}

uint64_t ICArchiveImporter.errors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ICArchiveImporter.objects(forArchiveAt:)(char *a1)
{
  uint64_t v123 = sub_1000B7420();
  uint64_t v122 = *(void *)(v123 - 8);
  uint64_t v3 = __chkstk_darwin(v123);
  v140 = (unsigned int (**)(char *, uint64_t, uint64_t))((char *)v115 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = __chkstk_darwin(v3);
  v119 = (char *)v115 - v6;
  __chkstk_darwin(v5);
  unint64_t v117 = (char *)v115 - v7;
  uint64_t v8 = sub_100032E20(&qword_1001039A8);
  __chkstk_darwin(v8 - 8);
  v130 = (void *)((char *)v115 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_100032E20(&qword_100104330);
  uint64_t v129 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  v145 = (char *)v115 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  unint64_t v127 = (char *)v115 - v13;
  uint64_t v133 = sub_1000B6F10();
  uint64_t v141 = *(void *)(v133 - 8);
  __chkstk_darwin(v133);
  uint64_t v15 = (char *)v115 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100032E20((uint64_t *)&unk_1001042F0);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)v115 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000B73E0();
  uint64_t v143 = *(void *)(v19 - 8);
  uint64_t v144 = v19;
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v142 = (char *)v115 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = (char *)v115 - v23;
  uint64_t v25 = __chkstk_darwin(v22);
  unint64_t v27 = (char *)v115 - v26;
  uint64_t v28 = __chkstk_darwin(v25);
  unint64_t v30 = (char *)v115 - v29;
  __chkstk_darwin(v28);
  unint64_t v32 = (char *)v115 - v31;
  if (qword_100103680 != -1) {
    swift_once();
  }
  v146 = v15;
  uint64_t v149 = v10;
  uint64_t v118 = v27;
  id v128 = v1;
  v124 = v24;
  uint64_t v33 = sub_1000B7410();
  uint64_t v34 = sub_100038E8C(v33, (uint64_t)qword_1001039E0);
  v147 = a1;
  sub_1000B6E80(v35);
  sub_1000B7400();
  sub_1000B73C0();
  uint64_t v36 = sub_1000B7400();
  os_signpost_type_t v37 = sub_1000B7910();
  char v38 = sub_1000B79D0();
  uint64_t v126 = v30;
  uint64_t v125 = v34;
  if (v38)
  {
    uint64_t v39 = v143;
    unint64_t v131 = *(void (**)(void, void, void))(v143 + 16);
    unint64_t v40 = (v143 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v41 = v32;
    unint64_t v42 = v32;
    uint64_t v43 = v144;
    v131(v30, v41, v144);
    unint64_t v44 = v18;
    uint64_t v45 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v45 = 0;
    os_signpost_id_t v46 = sub_1000B73D0();
    os_signpost_type_t v47 = v37;
    uint64_t v48 = v42;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v36, v47, v46, "Objects for Archive", "", v45, 2u);
    uint64_t v18 = v44;
    unint64_t v30 = v126;
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v39 + 8))(v30, v43);
    unint64_t v49 = v131;
  }
  else
  {

    unint64_t v49 = *(void (**)(void, void, void))(v143 + 16);
    unint64_t v40 = (v143 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v48 = v32;
    uint64_t v43 = v144;
  }
  unint64_t v131 = v49;
  unint64_t v121 = v40;
  v49(v30, v48, v43);
  sub_1000B7450();
  swift_allocObject();
  uint64_t v50 = sub_1000B7440();
  id v51 = v128;
  swift_getObjectType();
  uint64_t v52 = v148;
  uint64_t v53 = sub_1000B70B0();
  uint64_t v54 = v52;
  if (v52)
  {
    uint64_t v55 = v30;
    uint64_t v148 = v52;
    Swift::Int v56 = sub_1000B7400();
    uint64_t v57 = v142;
    sub_1000B7430();
    os_signpost_type_t v58 = sub_1000B7900();
    uint64_t v59 = v50;
    if (sub_1000B79D0())
    {
      uint64_t v60 = v144;
      swift_retain();
      unint64_t v61 = (char *)v140;
      sub_1000B7460();
      uint64_t v120 = v59;
      swift_release();
      uint64_t v62 = v122;
      uint64_t v63 = v123;
      uint64_t v64 = v48;
      if ((*(unsigned int (**)(char *, uint64_t))(v122 + 88))(v61, v123) == enum case for OSSignpostError.doubleEnd(_:))
      {
        uint64_t v65 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v62 + 8))(v61, v63);
        uint64_t v65 = "";
      }
      uint64_t v83 = v142;
      v131(v55, v142, v60);
      uint64_t v84 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v84 = 0;
      os_signpost_id_t v85 = sub_1000B73D0();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v56, v58, v85, "Objects for Archive", v65, v84, 2u);
      swift_slowDealloc();

      uint64_t v81 = *(char **)(v143 + 8);
      ((void (*)(char *, uint64_t))v81)(v83, v60);
      ((void (*)(char *, uint64_t))v81)(v55, v60);
      char v82 = v64;
    }
    else
    {

      uint64_t v60 = v144;
      uint64_t v81 = *(char **)(v143 + 8);
      ((void (*)(char *, uint64_t))v81)(v57, v144);
      char v82 = v48;
    }
LABEL_25:
    swift_release();
    ((void (*)(char *, uint64_t))v81)(v82, v60);
    return (uint64_t)v81;
  }
  uint64_t v120 = v50;
  uint64_t v116 = v48;
  uint64_t v66 = *(void *)(v53 + 16);
  v115[2] = v53;
  if (v66)
  {
    uint64_t v142 = *(char **)(v141 + 16);
    unint64_t v67 = v53 + ((*(unsigned __int8 *)(v141 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v141 + 80));
    uint64_t v68 = v141 + 56;
    v140 = (unsigned int (**)(char *, uint64_t, uint64_t))(v141 + 48);
    uint64_t v136 = *(void *)(v141 + 72);
    v137 = (void (**)(uint64_t, char *, uint64_t))(v141 + 32);
    Swift::Int v138 = (void (**)(uint64_t, uint64_t))(v141 + 8);
    Swift::Int v134 = (void (**)(char *, uint64_t *, uint64_t))(v129 + 32);
    v135 = (unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v129 + 48);
    id v139 = v51;
    swift_bridgeObjectRetain();
    v147 = (char *)_swiftEmptyArrayStorage;
    uint64_t v141 = v68;
    v115[1] = v68 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v69 = v130;
    uint64_t v70 = v133;
    uint64_t v71 = (uint64_t)v146;
    while (1)
    {
      ((void (*)(char *, unint64_t, uint64_t))v142)(v18, v67, v70);
      uint64_t v72 = *(void (**)(char *, void, uint64_t, uint64_t))v141;
      (*(void (**)(char *, void, uint64_t, uint64_t))v141)(v18, 0, 1, v70);
      if ((*v140)(v18, 1, v70) == 1) {
        break;
      }
      uint64_t v132 = (void (*)(void, void, void, void))v72;
      unint64_t v73 = v18;
      (*v137)(v71, v18, v70);
      sub_10003BA68(v71, v69);
      if (v54)
      {
        uint64_t v148 = v54;
        (*v138)(v71, v70);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        uint64_t v88 = sub_1000B7400();
        BOOL v89 = v118;
        sub_1000B7430();
        os_signpost_type_t v90 = sub_1000B7900();
        if (sub_1000B79D0())
        {
          swift_retain();
          v91 = v117;
          sub_1000B7460();
          swift_release();
          uint64_t v92 = v122;
          uint64_t v93 = v123;
          if ((*(unsigned int (**)(char *, uint64_t))(v122 + 88))(v91, v123) == enum case for OSSignpostError.doubleEnd(_:))
          {
            uint64_t v94 = "[Error] Interval already ended";
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v92 + 8))(v91, v93);
            uint64_t v94 = "";
          }
          uint64_t v110 = v126;
          uint64_t v111 = v144;
          v131(v126, v89, v144);
          uint64_t v112 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v112 = 0;
          os_signpost_id_t v113 = sub_1000B73D0();
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v88, v90, v113, "Objects for Archive", v94, v112, 2u);
          swift_slowDealloc();

          uint64_t v81 = *(char **)(v143 + 8);
          uint64_t v114 = v89;
          uint64_t v60 = v111;
          ((void (*)(char *, uint64_t))v81)(v114, v111);
          ((void (*)(char *, uint64_t))v81)(v110, v111);
        }
        else
        {

          uint64_t v81 = *(char **)(v143 + 8);
          v109 = v89;
          uint64_t v60 = v144;
          ((void (*)(char *, uint64_t))v81)(v109, v144);
        }
        char v82 = v116;
        goto LABEL_25;
      }
      (*v138)(v71, v70);
      uint64_t v74 = v149;
      if ((*v135)(v69, 1, v149) == 1)
      {
        sub_100038E30((uint64_t)v69, &qword_1001039A8);
        uint64_t v71 = (uint64_t)v146;
      }
      else
      {
        uint64_t v148 = 0;
        v75 = *v134;
        v76 = v127;
        (*v134)(v127, v69, v74);
        v75(v145, (uint64_t *)v76, v74);
        unint64_t v77 = (unint64_t)v147;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v77 = sub_100035534(0, *(void *)(v77 + 16) + 1, 1, v77);
        }
        uint64_t v71 = (uint64_t)v146;
        unint64_t v79 = *(void *)(v77 + 16);
        unint64_t v78 = *(void *)(v77 + 24);
        v147 = (char *)v77;
        if (v79 >= v78 >> 1) {
          v147 = (char *)sub_100035534(v78 > 1, v79 + 1, 1, (unint64_t)v147);
        }
        uint64_t v80 = v147;
        *((void *)v147 + 2) = v79 + 1;
        v75(&v80[((*(unsigned __int8 *)(v129 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v129 + 80))+ *(void *)(v129 + 72) * v79], (uint64_t *)v145, v149);
        uint64_t v54 = v148;
        uint64_t v69 = v130;
        uint64_t v70 = v133;
      }
      v67 += v136;
      --v66;
      uint64_t v18 = v73;
      if (!v66)
      {
        v132(v73, 1, 1, v70);
        break;
      }
    }
  }
  else
  {
    uint64_t v86 = *(void (**)(void, void, void, void))(v141 + 56);
    id v87 = v51;
    swift_bridgeObjectRetain();
    v147 = (char *)_swiftEmptyArrayStorage;
    v86(v18, 1, 1, v133);
  }
  uint64_t v95 = v116;
  swift_bridgeObjectRelease_n();

  uint64_t v150 = v147;
  swift_bridgeObjectRetain();
  sub_100042080((void **)&v150);
  uint64_t v148 = v54;
  if (!v54)
  {
    swift_bridgeObjectRelease();
    uint64_t v81 = v150;
    v96 = sub_1000B7400();
    uint64_t v97 = v124;
    sub_1000B7430();
    os_signpost_type_t v98 = sub_1000B7900();
    if (sub_1000B79D0())
    {
      swift_retain();
      BOOL v99 = v119;
      sub_1000B7460();
      swift_release();
      uint64_t v100 = v122;
      uint64_t v101 = v123;
      if ((*(unsigned int (**)(char *, uint64_t))(v122 + 88))(v99, v123) == enum case for OSSignpostError.doubleEnd(_:))
      {
        v102 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v100 + 8))(v99, v101);
        v102 = "";
      }
      uint64_t v105 = v126;
      uint64_t v103 = v144;
      v131(v126, v124, v144);
      BOOL v106 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)BOOL v106 = 0;
      os_signpost_id_t v107 = sub_1000B73D0();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v96, v98, v107, "Objects for Archive", v102, v106, 2u);
      swift_slowDealloc();

      uint64_t v104 = *(void (**)(void, void))(v143 + 8);
      v104(v124, v103);
      v104(v105, v103);
      uint64_t v95 = v116;
    }
    else
    {

      uint64_t v103 = v144;
      uint64_t v104 = *(void (**)(void, void))(v143 + 8);
      v104(v97, v144);
    }
    swift_release();
    v104(v95, v103);
    return (uint64_t)v81;
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_10003BA68@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v143 = a2;
  uint64_t v4 = sub_100032E20(&qword_1001039A8);
  __chkstk_darwin(v4 - 8);
  uint64_t v148 = (char *)v138 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v166 = sub_100032E20(&qword_100104330);
  uint64_t v160 = *(void *)(v166 - 8);
  uint64_t v6 = __chkstk_darwin(v166);
  v163 = (char *)v138 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v147 = (char *)v138 - v8;
  uint64_t v9 = sub_100032E20((uint64_t *)&unk_1001042F0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v138 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000B6F10();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  v140 = (char *)v138 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v142 = (char *)v138 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  v164 = (char *)v138 - v19;
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)v138 - v20;
  sub_1000B6E90();
  uint64_t v141 = sub_1000B6E70();
  uint64_t v23 = v22;
  uint64_t v146 = v13;
  uint64_t v26 = *(void (**)(void, void))(v13 + 8);
  uint64_t v25 = v13 + 8;
  uint64_t v24 = v26;
  uint64_t v159 = v12;
  v26(v21, v12);
  v145 = v2;
  uint64_t v27 = *(void *)&v2[OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension17ICArchiveImporter_fileManager];
  uint64_t v28 = *(void *)&v145[OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension17ICArchiveImporter_fileManager + 8];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v144 = a1;
  unint64_t v30 = v165;
  uint64_t v31 = sub_1000B70B0();
  if (v30) {
    return swift_bridgeObjectRelease();
  }
  v138[2] = ObjectType;
  v138[3] = v27;
  v138[4] = v28;
  v161 = v24;
  uint64_t v162 = v25;
  uint64_t v139 = v23;
  uint64_t v33 = *(void *)(v31 + 16);
  v138[5] = v31;
  if (v33)
  {
    v157 = *(void (**)(void, void, void))(v146 + 16);
    uint64_t v158 = v146 + 16;
    unint64_t v34 = v31 + ((*(unsigned __int8 *)(v146 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80));
    uint64_t v35 = v146 + 56;
    uint64_t v36 = *(void *)(v146 + 72);
    uint64_t v155 = (unsigned int (**)(char *, uint64_t, uint64_t))(v146 + 48);
    uint64_t v152 = v36;
    Swift::Int v153 = (void (**)(char *, char *, uint64_t))(v146 + 32);
    v151 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v160 + 48);
    uint64_t v149 = (void (**)(char *, uint64_t, uint64_t))(v160 + 32);
    v154 = v145;
    swift_bridgeObjectRetain();
    v165 = (char *)_swiftEmptyArrayStorage;
    v156 = (void (**)(void, void, void, void))v35;
    v138[1] = v35 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v37 = v159;
    uint64_t v38 = (uint64_t)v148;
    uint64_t v39 = v164;
    do
    {
      v157(v11, v34, v37);
      uint64_t v150 = *v156;
      v150(v11, 0, 1, v37);
      if ((*v155)(v11, 1, v37) == 1)
      {
        uint64_t v51 = v144;
        id v49 = v145;
        goto LABEL_19;
      }
      (*v153)(v39, v11, v37);
      sub_10003BA68(v39);
      unint64_t v40 = v11;
      v161(v39, v37);
      uint64_t v41 = v166;
      if ((*v151)(v38, 1, v166) == 1)
      {
        sub_100038E30(v38, &qword_1001039A8);
        uint64_t v39 = v164;
        uint64_t v11 = v40;
      }
      else
      {
        unint64_t v42 = *v149;
        uint64_t v43 = v147;
        (*v149)(v147, v38, v41);
        v42(v163, (uint64_t)v43, v41);
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          uint64_t v39 = v164;
          unint64_t v44 = (unint64_t)v165;
        }
        else
        {
          unint64_t v44 = sub_100035534(0, *((void *)v165 + 2) + 1, 1, (unint64_t)v165);
          uint64_t v39 = v164;
        }
        uint64_t v11 = v40;
        unint64_t v46 = *(void *)(v44 + 16);
        unint64_t v45 = *(void *)(v44 + 24);
        if (v46 >= v45 >> 1) {
          unint64_t v44 = sub_100035534(v45 > 1, v46 + 1, 1, v44);
        }
        *(void *)(v44 + 16) = v46 + 1;
        unint64_t v47 = (*(unsigned __int8 *)(v160 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v160 + 80);
        v165 = (char *)v44;
        ((void (*)(unint64_t))v42)(v44 + v47 + *(void *)(v160 + 72) * v46);
        uint64_t v37 = v159;
        uint64_t v38 = (uint64_t)v148;
      }
      v34 += v152;
      --v33;
    }
    while (v33);
    id v49 = v145;
    uint64_t v48 = v150;
  }
  else
  {
    uint64_t v48 = *(void (**)(void, void, void, void))(v146 + 56);
    id v49 = v145;
    uint64_t v50 = v145;
    swift_bridgeObjectRetain();
    v165 = (char *)_swiftEmptyArrayStorage;
    uint64_t v37 = v159;
  }
  v48(v11, 1, 1, v37);
  uint64_t v51 = v144;
LABEL_19:
  swift_bridgeObjectRelease_n();

  v168 = v165;
  swift_bridgeObjectRetain();
  sub_100042080((void **)&v168);
  uint64_t v52 = v160;
  v164 = v30;
  uint64_t v53 = v146;
  uint64_t v54 = v139;
  swift_bridgeObjectRelease();
  v165 = v168;
  uint64_t v56 = sub_1000B6E50();
  uint64_t v57 = v55;
  if (v56 == 0x6372617365746F6ELL && v55 == 0xEC00000065766968 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_100103678 != -1) {
      swift_once();
    }
    uint64_t v58 = sub_1000B7490();
    sub_100038E8C(v58, (uint64_t)qword_1001039C8);
    uint64_t v59 = v142;
    uint64_t v60 = v51;
    uint64_t v61 = v159;
    (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v142, v60, v159);
    uint64_t v62 = sub_1000B7480();
    os_log_type_t v63 = sub_1000B7850();
    if (os_log_type_enabled(v62, v63))
    {
      uint64_t v64 = (uint8_t *)swift_slowAlloc();
      v168 = (char *)swift_slowAlloc();
      *(_DWORD *)uint64_t v64 = 136315138;
      uint64_t v65 = sub_1000B6E50();
      uint64_t v167 = sub_100069A50(v65, v66, (uint64_t *)&v168);
      uint64_t v67 = v166;
      uint64_t v52 = v160;
      sub_1000B79F0();
      swift_bridgeObjectRelease();
      v161(v59, v61);
      _os_log_impl((void *)&_mh_execute_header, v62, v63, "Archive object type not supported inside archive â€” skipping {pathExtension: %s}", v64, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v68 = v143;
    }
    else
    {
      v161(v59, v61);

      uint64_t v68 = v143;
      uint64_t v67 = v166;
    }
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v52 + 56))(v68, 1, 1, v67);
  }
  if (v56 == 0x746E756F636361 && v57 == 0xE700000000000000 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v69 = sub_100032E20(&qword_100103B30);
    uint64_t v70 = swift_allocBox();
    uint64_t v72 = v71;
    unint64_t v73 = (uint64_t *)(v71 + *(int *)(v69 + 48));
    uint64_t v74 = *(int *)(v69 + 64);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16))(v71, v51, v159);
    uint64_t *v73 = v141;
    v73[1] = v54;
    *(void *)(v72 + v74) = v165;
    v75 = v143;
    *uint64_t v143 = v70;
    v76 = (unsigned int *)&enum case for ICObjectReferences.account<A>(_:);
LABEL_32:
    uint64_t v77 = v166;
    (*(void (**)(uint64_t *, void, uint64_t))(v52 + 104))(v75, *v76, v166);
    unint64_t v78 = *(uint64_t (**)(void, void, void, void))(v52 + 56);
    unint64_t v79 = v75;
    uint64_t v80 = 0;
    return v78(v79, v80, 1, v77);
  }
  if (v56 == 0x7265646C6F66 && v57 == 0xE600000000000000 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v81 = sub_100032E20(&qword_100103B30);
    uint64_t v82 = swift_allocBox();
    uint64_t v84 = v83;
    os_signpost_id_t v85 = (uint64_t *)(v83 + *(int *)(v81 + 48));
    uint64_t v86 = *(int *)(v81 + 64);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16))(v83, v51, v159);
    uint64_t *v85 = v141;
    v85[1] = v54;
    *(void *)(v84 + v86) = v165;
    v75 = v143;
    *uint64_t v143 = v82;
    v76 = (unsigned int *)&enum case for ICObjectReferences.folder<A>(_:);
    goto LABEL_32;
  }
  if (v56 == 1702129518 && v57 == 0xE400000000000000 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v87 = sub_100032E20(&qword_100103B20);
    uint64_t v88 = swift_allocBox();
    uint64_t v90 = v89;
    v91 = (uint64_t *)(v89 + *(int *)(v87 + 48));
    uint64_t v92 = *(int *)(v87 + 64);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16))(v89, v51, v159);
    uint64_t *v91 = v141;
    v91[1] = v54;
    *(void *)(v90 + v92) = v165;
    v75 = v143;
    *uint64_t v143 = v88;
    v76 = (unsigned int *)&enum case for ICObjectReferences.note<A>(_:);
    goto LABEL_32;
  }
  if (v56 == 0x656D686361747461 && v57 == 0xEA0000000000746ELL)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v93 = sub_1000B7DC0();
    swift_bridgeObjectRelease();
    if ((v93 & 1) == 0)
    {
      swift_release();
      swift_bridgeObjectRelease();
      if (qword_100103678 != -1) {
        swift_once();
      }
      uint64_t v126 = sub_1000B7490();
      sub_100038E8C(v126, (uint64_t)qword_1001039C8);
      unint64_t v127 = v140;
      uint64_t v128 = v51;
      uint64_t v129 = v159;
      (*(void (**)(char *, uint64_t, uint64_t))(v146 + 16))(v140, v128, v159);
      v130 = sub_1000B7480();
      os_log_type_t v131 = sub_1000B7850();
      BOOL v132 = os_log_type_enabled(v130, v131);
      uint64_t v77 = v166;
      if (v132)
      {
        uint64_t v133 = v127;
        Swift::Int v134 = (uint8_t *)swift_slowAlloc();
        v168 = (char *)swift_slowAlloc();
        *(_DWORD *)Swift::Int v134 = 136315138;
        uint64_t v135 = sub_1000B6E50();
        uint64_t v167 = sub_100069A50(v135, v136, (uint64_t *)&v168);
        uint64_t v137 = v166;
        uint64_t v52 = v160;
        sub_1000B79F0();
        swift_bridgeObjectRelease();
        v161(v133, v129);
        _os_log_impl((void *)&_mh_execute_header, v130, v131, "Unknown object type â€” skipping {pathExtension: %s}", v134, 0xCu);
        swift_arrayDestroy();
        uint64_t v77 = v137;
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        v161(v127, v129);
      }

      unint64_t v79 = v143;
      unint64_t v78 = *(uint64_t (**)(void, void, void, void))(v52 + 56);
      uint64_t v80 = 1;
      return v78(v79, v80, 1, v77);
    }
  }
  v168 = (char *)_swiftEmptyArrayStorage;
  sub_100043800(0, 5, 0);
  uint64_t v94 = v168;
  unint64_t v96 = *((void *)v168 + 2);
  unint64_t v95 = *((void *)v168 + 3);
  unint64_t v97 = v96 + 1;
  if (v96 >= v95 >> 1)
  {
    sub_100043800(v95 > 1, v96 + 1, 1);
    uint64_t v94 = v168;
  }
  *((void *)v94 + 2) = v97;
  os_signpost_type_t v98 = &v94[16 * v96];
  strcpy(v98 + 32, "notesarchive");
  v98[45] = unk_1000CC08D;
  *((_WORD *)v98 + 23) = unk_1000CC08E;
  v168 = v94;
  unint64_t v99 = *((void *)v94 + 3);
  unint64_t v100 = v96 + 2;
  if (v97 >= v99 >> 1)
  {
    sub_100043800(v99 > 1, v96 + 2, 1);
    uint64_t v94 = v168;
  }
  *((void *)v94 + 2) = v100;
  uint64_t v101 = &v94[16 * v97];
  strcpy(v101 + 32, "account");
  *((void *)v101 + 5) = 0xE700000000000000;
  v168 = v94;
  unint64_t v102 = *((void *)v94 + 3);
  unint64_t v103 = v96 + 3;
  if (v100 >= v102 >> 1)
  {
    sub_100043800(v102 > 1, v96 + 3, 1);
    uint64_t v94 = v168;
  }
  *((void *)v94 + 2) = v103;
  uint64_t v104 = &v94[16 * v100];
  *((void *)v104 + 4) = *(void *)"folder";
  *((void *)v104 + 5) = 0xE600000000000000;
  v168 = v94;
  unint64_t v105 = *((void *)v94 + 3);
  unint64_t v106 = v96 + 4;
  if (v103 >= v105 >> 1)
  {
    sub_100043800(v105 > 1, v96 + 4, 1);
    uint64_t v94 = v168;
  }
  *((void *)v94 + 2) = v106;
  os_signpost_id_t v107 = &v94[16 * v103];
  *((void *)v107 + 4) = *(void *)"note";
  *((void *)v107 + 5) = 0xE400000000000000;
  v168 = v94;
  unint64_t v108 = *((void *)v94 + 3);
  if (v106 >= v108 >> 1)
  {
    sub_100043800(v108 > 1, v96 + 5, 1);
    uint64_t v94 = v168;
  }
  *((void *)v94 + 2) = v96 + 5;
  v109 = &v94[16 * v106];
  *((void *)v109 + 4) = *(void *)"attachmehive";
  *((void *)v109 + 5) = 0xEA0000000000746ELL;
  uint64_t v110 = v164;
  uint64_t v111 = sub_1000B70A0();
  uint64_t v112 = v160;
  uint64_t v113 = v166;
  if (v110)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v114 = sub_100044D18(v111, (uint64_t)v94);
    v164 = 0;
    swift_release();
    unint64_t v115 = *(void *)(v114 + 16);
    swift_bridgeObjectRelease();
    BOOL v116 = v115 > 1;
    unint64_t v117 = (int *)sub_100032E20(&qword_100103B10);
    uint64_t v118 = swift_allocBox();
    uint64_t v120 = v119;
    unint64_t v121 = (uint64_t *)(v119 + v117[12]);
    uint64_t v122 = v117[16];
    uint64_t v123 = v117[20];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v146 + 16))(v119, v51, v159);
    uint64_t v124 = v139;
    *unint64_t v121 = v141;
    v121[1] = v124;
    *(unsigned char *)(v120 + v122) = v116;
    *(void *)(v120 + v123) = v165;
    uint64_t v125 = v143;
    *uint64_t v143 = v118;
    (*(void (**)(uint64_t *, void, uint64_t))(v112 + 104))(v125, enum case for ICObjectReferences.attachment<A>(_:), v113);
    return (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(v112 + 56))(v125, 0, 1, v113);
  }
}

void *sub_10003CC18(uint64_t a1, void *a2, void *a3, uint64_t (**a4)(void, void, int64_t, id, uint64_t, uint64_t, double), void *a5)
{
  uint64_t v8 = sub_100046008(a1, (uint64_t)a2, a3, a4, a5);

  return v8;
}

uint64_t ICArchiveImporter.importArchive(at:intoNoteContainerWithId:progress:)()
{
  return sub_1000B7990();
}

void sub_10003CCD4(uint64_t a1, uint64_t a2, char *a3, void *a4)
{
  id v7 = [*(id *)(a1 + OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension17ICArchiveImporter_context) ic_existingObjectWithID:a2];
  if (!v7) {
    goto LABEL_10;
  }
  uint64_t v8 = v7;
  self;
  uint64_t v9 = swift_dynamicCastObjCClass();
  if (!v9)
  {

LABEL_10:
    __break(1u);
    return;
  }
  uint64_t v10 = (void (*)(void, void, void))v9;
  uint64_t v11 = ICArchiveImporter.objects(forArchiveAt:)(a3);
  if (!v4)
  {
    uint64_t v12 = v11;
    if (a4) {
      id v13 = a4;
    }
    else {
      id v13 = [objc_allocWithZone((Class)NSProgress) init];
    }
    id v14 = a4;
    ICArchiveImporter.importObjects(_:fromArchiveAt:into:progress:)(v12, (uint64_t)a3, v10, v13);

    swift_bridgeObjectRelease();
  }
}

uint64_t ICArchiveImporter.importObjects(_:fromArchiveAt:into:progress:)(uint64_t a1, uint64_t a2, void (*a3)(void, void, void), void *a4)
{
  uint64_t v5 = v4;
  v283 = a4;
  v284 = (int64_t *)a1;
  uint64_t v285 = a2;
  uint64_t v275 = sub_1000B7420();
  uint64_t v274 = *(void *)(v275 - 8);
  uint64_t v7 = __chkstk_darwin(v275);
  v244 = (char *)&v243 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  v248 = (char *)&v243 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  id v13 = (char *)&v243 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  v250 = (char *)&v243 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  v262 = (char *)&v243 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  v263 = (char *)&v243 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  v267 = (char *)&v243 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  v254 = (char *)&v243 - v23;
  __chkstk_darwin(v22);
  v243 = (char *)&v243 - v24;
  uint64_t v25 = sub_100032E20(&qword_100103A20);
  __chkstk_darwin(v25 - 8);
  v294 = (char *)&v243 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v258 = sub_1000B6FD0();
  uint64_t v27 = *(void *)(v258 - 8);
  uint64_t v28 = __chkstk_darwin(v258);
  v253 = (char *)&v243 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v252 = (char *)&v243 - v30;
  uint64_t v31 = type metadata accessor for ICArchiveModel();
  __chkstk_darwin(v31);
  v265 = (char *)&v243 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v270 = sub_1000B6F10();
  uint64_t v269 = *(void *)(v270 - 8);
  __chkstk_darwin(v270);
  v271 = (char *)&v243 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v293 = (void *)sub_100032E20(&qword_100104330);
  uint64_t v290 = *(v293 - 1);
  __chkstk_darwin(v293);
  v292 = (char *)&v243 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_1000B73E0();
  uint64_t v287 = *(void *)(v35 - 8);
  uint64_t v36 = __chkstk_darwin(v35);
  v246 = (char *)&v243 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __chkstk_darwin(v36);
  v251 = (char *)&v243 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  v257 = (char *)&v243 - v41;
  uint64_t v42 = __chkstk_darwin(v40);
  v264 = (char *)&v243 - v43;
  uint64_t v44 = __chkstk_darwin(v42);
  v268 = (char *)&v243 - v45;
  uint64_t v46 = __chkstk_darwin(v44);
  v276 = (char *)&v243 - v47;
  uint64_t v48 = __chkstk_darwin(v46);
  v259 = (char *)&v243 - v49;
  uint64_t v50 = __chkstk_darwin(v48);
  v245 = (char *)&v243 - v51;
  uint64_t v52 = __chkstk_darwin(v50);
  uint64_t v54 = (char *)&v243 - v53;
  uint64_t v55 = __chkstk_darwin(v52);
  uint64_t v57 = (char *)&v243 - v56;
  __chkstk_darwin(v55);
  uint64_t v59 = (char *)&v243 - v58;
  uint64_t v288 = OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension17ICArchiveImporter_isImporting;
  v289 = v5;
  if (v5[OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension17ICArchiveImporter_isImporting])
  {
    __break(1u);
  }
  else
  {
    uint64_t v256 = v27;
    uint64_t v266 = v31;
    v291 = a3;
    id v60 = [a3 managedObjectContext];
    if (!v60)
    {
      __break(1u);
      goto LABEL_124;
    }
    uint64_t v61 = v60;
    a3 = (void (*)(void, void, void))v289;
    uint64_t v62 = *(void **)&v289[OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension17ICArchiveImporter_context];
    sub_100038DC8(0, &qword_100103A30);
    id v63 = v62;
    id v64 = v61;
    char v65 = sub_1000B79C0();

    id v247 = v63;
    if (v65)
    {
      *((unsigned char *)a3 + v288) = 1;
      if (qword_100103680 == -1) {
        goto LABEL_5;
      }
      goto LABEL_97;
    }
  }
  __break(1u);
LABEL_97:
  swift_once();
LABEL_5:
  v255 = v54;
  v249 = v13;
  uint64_t v66 = sub_1000B7410();
  uint64_t v67 = sub_100038E8C(v66, (uint64_t)qword_1001039E0);
  sub_1000B6E80(v68);
  sub_1000B7400();
  sub_1000B73C0();
  uint64_t v277 = v67;
  uint64_t v69 = sub_1000B7400();
  os_signpost_type_t v70 = sub_1000B7910();
  char v71 = sub_1000B79D0();
  v286 = v57;
  if (v71)
  {
    uint64_t v72 = v287;
    unint64_t v73 = *(void (**)(char *, char *, uint64_t))(v287 + 16);
    unint64_t v74 = (v287 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v73(v57, v59, v35);
    v75 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v75 = 0;
    os_signpost_id_t v76 = sub_1000B73D0();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v69, v70, v76, "Import Objects from Archive", "", v75, 2u);
    uint64_t v57 = v286;
    swift_slowDealloc();

    uint64_t v77 = *(void (**)(char *, uint64_t))(v72 + 8);
    a3 = (void (*)(void, void, void))(v72 + 8);
    v77(v57, v35);
  }
  else
  {

    unint64_t v73 = *(void (**)(char *, char *, uint64_t))(v287 + 16);
    unint64_t v74 = (v287 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  unint64_t v78 = v291;
  uint64_t v281 = v35;
  v273 = v73;
  unint64_t v272 = v74;
  v73(v57, v59, v35);
  sub_1000B7450();
  swift_allocObject();
  uint64_t v282 = sub_1000B7440();
  unint64_t v79 = v289;
  uint64_t v80 = &v289[OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension17ICArchiveImporter_errors];
  swift_beginAccess();
  *(void *)uint64_t v80 = &_swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease();
  v296[3] = sub_100038DC8(0, &qword_100103A38);
  v296[0] = v78;
  id v81 = v78;
  uint64_t v82 = (void *)sub_1000346F0((uint64_t)v296);
  uint64_t v84 = v83;
  sub_100037F98((uint64_t)v296);
  os_signpost_id_t v85 = &v79[OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension17ICArchiveImporter_configuration];
  swift_beginAccess();
  uint64_t v86 = (void *)*((void *)v85 + 2);
  *((void *)v85 + 2) = v82;
  *((void *)v85 + 3) = v84;
  v260 = (uint64_t (**)(void, void, int64_t, id, uint64_t, uint64_t, double))v84;
  v261 = v85;
  id v280 = v82;

  uint64_t v87 = v284;
  int64_t v88 = v284[2];
  v278 = v59;
  if (v88)
  {
    v295 = (char *)_swiftEmptyArrayStorage;
    sub_100043860(0, v88, 0);
    uint64_t v89 = v290 + 16;
    uint64_t v90 = *(void (**)(void, void, void))(v290 + 16);
    uint64_t v87 = (int64_t *)((char *)v87
                           + ((*(unsigned __int8 *)(v290 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v290 + 80)));
    uint64_t v290 = *(void *)(v290 + 72);
    v291 = v90;
    v91 = (void (**)(char *, void *))(v89 - 8);
    uint64_t v92 = v295;
    do
    {
      char v93 = v292;
      uint64_t v94 = v293;
      v291(v292, v87, v293);
      a3 = (void (*)(void, void, void))sub_1000B7160();
      (*v91)(v93, v94);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100043860(0, *((void *)v92 + 2) + 1, 1);
        uint64_t v92 = v295;
      }
      unint64_t v96 = *((void *)v92 + 2);
      unint64_t v95 = *((void *)v92 + 3);
      unint64_t v97 = (unsigned char *)(v96 + 1);
      if (v96 >= v95 >> 1)
      {
        sub_100043860(v95 > 1, v96 + 1, 1);
        uint64_t v92 = v295;
      }
      *((void *)v92 + 2) = v97;
      *(void *)&v92[8 * v96 + 32] = a3;
      uint64_t v87 = (int64_t *)((char *)v87 + v290);
      --v88;
      uint64_t v98 = (uint64_t)v294;
    }
    while (v88);
  }
  else
  {
    uint64_t v92 = (char *)_swiftEmptyArrayStorage;
    unint64_t v97 = (unsigned char *)_swiftEmptyArrayStorage[2];
    uint64_t v98 = (uint64_t)v294;
    if (!v97)
    {
      uint64_t v101 = 0;
      uint64_t v99 = v281;
LABEL_20:
      swift_bridgeObjectRelease();
      if (qword_100103678 != -1) {
        swift_once();
      }
      uint64_t v104 = sub_1000B7490();
      sub_100038E8C(v104, (uint64_t)qword_1001039C8);
      unint64_t v105 = sub_1000B7480();
      os_log_type_t v106 = sub_1000B7840();
      if (os_log_type_enabled(v105, v106))
      {
        os_signpost_id_t v107 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)os_signpost_id_t v107 = 134217984;
        v295 = v101;
        sub_1000B79F0();
        _os_log_impl((void *)&_mh_execute_header, v105, v106, "Importing archiveâ€¦ {noteCount: %ld}", v107, 0xCu);
        swift_slowDealloc();
      }

      unint64_t v108 = v283;
      v109 = v279;
      sub_1000B7830();
      if (v109)
      {

        uint64_t v110 = sub_1000B7400();
        uint64_t v111 = v276;
        sub_1000B7430();
        os_signpost_type_t v112 = sub_1000B7900();
        if (sub_1000B79D0())
        {
          swift_retain();
          uint64_t v113 = v267;
          sub_1000B7460();
          swift_release();
          uint64_t v114 = v274;
          uint64_t v115 = v275;
          int v116 = (*(uint64_t (**)(char *, uint64_t))(v274 + 88))(v113, v275);
          v294 = v109;
          if (v116 == enum case for OSSignpostError.doubleEnd(_:))
          {
            unint64_t v121 = "[Error] Interval already ended";
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v114 + 8))(v113, v115);
            unint64_t v121 = "";
          }
          uint64_t v122 = v286;
          uint64_t v123 = v276;
          v273(v286, v276, v99);
          uint64_t v124 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v124 = 0;
          os_signpost_id_t v125 = sub_1000B73D0();
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v110, v112, v125, "Import Objects from Archive", v121, v124, 2u);
          swift_slowDealloc();

          uint64_t v120 = *(void (**)(char *, uint64_t))(v287 + 8);
          v120(v123, v99);
          v120(v122, v99);
        }
        else
        {

          uint64_t v120 = *(void (**)(char *, uint64_t))(v287 + 8);
          v120(v111, v99);
        }
        uint64_t v101 = v289;
        goto LABEL_35;
      }
      [v108 setTotalUnitCount:v101];
      swift_getObjectType();
      if (qword_100103648 != -1) {
        swift_once();
      }
      unint64_t v117 = v271;
      sub_1000B6EA0();
      uint64_t v118 = sub_1000B70D0();
      v294 = 0;
      a3 = (void (*)(void, void, void))v118;
      uint64_t v87 = v119;
      (*(void (**)(char *, uint64_t))(v269 + 8))(v117, v270);
      if (qword_100103668 != -1) {
        swift_once();
      }
      sub_100046C38(&qword_100103A40, (void (*)(uint64_t))type metadata accessor for ICArchiveModel);
      unint64_t v97 = v265;
      unint64_t v127 = v294;
      sub_1000B6D00();
      v294 = v127;
      if (v127)
      {

        sub_1000452E0((uint64_t)a3, (unint64_t)v87);
        uint64_t v128 = sub_1000B7400();
        uint64_t v129 = v264;
        sub_1000B7430();
        int v130 = sub_1000B7900();
        char v131 = sub_1000B79D0();
        uint64_t v101 = v289;
        if (v131)
        {
          LODWORD(v293) = v130;
          swift_retain();
          BOOL v132 = v262;
          sub_1000B7460();
          swift_release();
          uint64_t v133 = v274;
          uint64_t v134 = v275;
          if ((*(unsigned int (**)(char *, uint64_t))(v274 + 88))(v132, v275) == enum case for OSSignpostError.doubleEnd(_:))
          {
            uint64_t v135 = "[Error] Interval already ended";
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v133 + 8))(v132, v134);
            uint64_t v135 = "";
          }
          unint64_t v136 = v286;
          uint64_t v137 = v264;
          v273(v286, v264, v99);
          Swift::Int v138 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)Swift::Int v138 = 0;
          os_signpost_id_t v139 = sub_1000B73D0();
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v128, (os_signpost_type_t)v293, v139, "Import Objects from Archive", v135, v138, 2u);
          swift_slowDealloc();

          uint64_t v120 = *(void (**)(char *, uint64_t))(v287 + 8);
          v120(v137, v99);
          v120(v136, v99);
          goto LABEL_35;
        }
LABEL_74:

        uint64_t v120 = *(void (**)(char *, uint64_t))(v287 + 8);
        v120(v129, v99);
        goto LABEL_35;
      }
      uint64_t v101 = v289;
      switch(*v97)
      {
        case 1:
          if (0x80000001000C7D80 == 0x80000001000C7D60) {
            goto LABEL_45;
          }
          goto LABEL_49;
        case 2:
        case 3:
        case 4:
          goto LABEL_49;
        default:
LABEL_45:
          swift_bridgeObjectRelease();
          break;
      }
      goto LABEL_50;
    }
  }
  uint64_t v99 = v281;
  uint64_t v100 = 0;
  uint64_t v101 = 0;
  while (1)
  {
    uint64_t v102 = *(void *)&v92[8 * v100 + 32];
    BOOL v103 = __OFADD__(v101, v102);
    v101 += v102;
    if (v103) {
      break;
    }
    if (v97 == (unsigned char *)++v100) {
      goto LABEL_20;
    }
  }
  __break(1u);
LABEL_49:
  char v140 = sub_1000B7DC0();
  swift_bridgeObjectRelease();
  if ((v140 & 1) == 0)
  {
    uint64_t v148 = sub_1000B7480();
    os_log_type_t v149 = sub_1000B7850();
    if (os_log_type_enabled(v148, v149))
    {
      uint64_t v150 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v150 = 0;
      _os_log_impl((void *)&_mh_execute_header, v148, v149, "Notes archive specifies unknown type identifier â€” aborting", v150, 2u);
      unint64_t v97 = v265;
      swift_slowDealloc();
    }

    sub_100038EC4();
    uint64_t v151 = swift_allocError();
    void *v152 = 0;
    v294 = (char *)v151;
    swift_willThrow();
    sub_1000452E0((uint64_t)a3, (unint64_t)v87);

    sub_100046D9C((uint64_t)v97, (uint64_t (*)(void))type metadata accessor for ICArchiveModel);
    Swift::Int v153 = sub_1000B7400();
    v154 = v259;
    sub_1000B7430();
    os_signpost_type_t v155 = sub_1000B7900();
    char v156 = sub_1000B79D0();
    uint64_t v157 = v275;
    if (v156)
    {
      swift_retain();
      uint64_t v158 = v254;
      sub_1000B7460();
      swift_release();
      uint64_t v159 = v274;
      if ((*(unsigned int (**)(char *, uint64_t))(v274 + 88))(v158, v157) == enum case for OSSignpostError.doubleEnd(_:))
      {
        uint64_t v160 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v159 + 8))(v158, v157);
        uint64_t v160 = "";
      }
      v198 = v286;
      v199 = v259;
      v273(v286, v259, v99);
      v200 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v200 = 0;
      os_signpost_id_t v201 = sub_1000B73D0();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v153, v155, v201, "Import Objects from Archive", v160, v200, 2u);
      swift_slowDealloc();

      v161 = *(void (**)(char *, uint64_t))(v287 + 8);
      v161(v199, v99);
      v161(v198, v99);
    }
    else
    {

      v161 = *(void (**)(char *, uint64_t))(v287 + 8);
      v161(v154, v99);
    }
    goto LABEL_105;
  }
LABEL_50:
  uint64_t v141 = v266;
  if (v261[1] == 1)
  {
    v293 = v87;
    sub_100032FC8((uint64_t)&v97[*(int *)(v266 + 24)], v98, &qword_100103A20);
    uint64_t v142 = v98;
    uint64_t v143 = v256;
    uint64_t v144 = v258;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v256 + 48))(v142, 1, v258) == 1)
    {
      sub_100038E30(v142, &qword_100103A20);
      v145 = sub_1000B7480();
      os_log_type_t v146 = sub_1000B7840();
      if (os_log_type_enabled(v145, v146))
      {
        v147 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v147 = 0;
        _os_log_impl((void *)&_mh_execute_header, v145, v146, "Notes archive doesn't have a creation date â€” fallback back to configuration's timestamp offset", v147, 2u);
        unint64_t v97 = v265;
        swift_slowDealloc();
      }

      uint64_t v141 = v266;
    }
    else
    {
      uint64_t v162 = v252;
      (*(void (**)(char *, uint64_t, uint64_t))(v143 + 32))(v252, v142, v144);
      v163 = v253;
      sub_1000B6FC0();
      sub_1000B6F40();
      uint64_t v165 = v164;
      uint64_t v166 = *(void (**)(char *, uint64_t))(v143 + 8);
      uint64_t v167 = v163;
      uint64_t v168 = v258;
      v166(v167, v258);
      v166(v162, v168);
      *((void *)v261 + 1) = v165;
    }
    uint64_t v87 = v293;
  }
  if (*(void *)&v97[*(int *)(v141 + 32)])
  {
    id v169 = v280;
    v170 = v101;
    uint64_t v171 = swift_bridgeObjectRetain();
    uint64_t v172 = (uint64_t)v260;
    v173 = v294;
    sub_100046198(v171, (uint64_t)v169, (uint64_t)v260, (uint64_t)v170);
    v294 = v173;
    if (v173)
    {

      sub_1000452E0((uint64_t)a3, (unint64_t)v87);
      swift_bridgeObjectRelease();
      sub_100046D9C((uint64_t)v265, (uint64_t (*)(void))type metadata accessor for ICArchiveModel);
      uint64_t v128 = sub_1000B7400();
      v174 = v255;
      sub_1000B7430();
      os_signpost_type_t v175 = sub_1000B7900();
      if (sub_1000B79D0())
      {
        swift_retain();
        v176 = v250;
        sub_1000B7460();
        swift_release();
        uint64_t v177 = v274;
        uint64_t v178 = v275;
        if ((*(unsigned int (**)(char *, uint64_t))(v274 + 88))(v176, v275) == enum case for OSSignpostError.doubleEnd(_:))
        {
          v179 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v177 + 8))(v176, v178);
          v179 = "";
        }
        v202 = v286;
        v273(v286, v174, v99);
LABEL_92:
        v203 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v203 = 0;
        os_signpost_id_t v204 = sub_1000B73D0();
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v128, v175, v204, "Import Objects from Archive", v179, v203, 2u);
        swift_slowDealloc();

        uint64_t v120 = *(void (**)(char *, uint64_t))(v287 + 8);
        v120(v174, v99);
        v120(v202, v99);
        goto LABEL_35;
      }

      uint64_t v120 = *(void (**)(char *, uint64_t))(v287 + 8);
      v120(v174, v99);
LABEL_35:
      swift_release();
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v120)(v278, v99);
LABEL_106:
      v101[v288] = 0;
      return result;
    }
    swift_bridgeObjectRelease();

    unint64_t v97 = v265;
    uint64_t v141 = v266;
    v180 = (uint64_t (**)(void, void, int64_t, id, uint64_t, uint64_t, double))v172;
  }
  else
  {
    v180 = v260;
  }
  v181 = v280;
  v182 = v294;
  v183 = sub_10003F3D8((uint64_t)v284, v280, v180, v283);
  v294 = v182;
  if (v182)
  {
    sub_100046D9C((uint64_t)v97, (uint64_t (*)(void))type metadata accessor for ICArchiveModel);

    sub_1000452E0((uint64_t)a3, (unint64_t)v87);
    uint64_t v128 = sub_1000B7400();
    uint64_t v129 = v257;
    sub_1000B7430();
    os_signpost_type_t v175 = sub_1000B7900();
    if (sub_1000B79D0())
    {
      swift_retain();
      v184 = v249;
      sub_1000B7460();
      swift_release();
      uint64_t v185 = v274;
      uint64_t v186 = v275;
      if ((*(unsigned int (**)(char *, uint64_t))(v274 + 88))(v184, v275) == enum case for OSSignpostError.doubleEnd(_:))
      {
        v179 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v185 + 8))(v184, v186);
        v179 = "";
      }
      v202 = v286;
      v174 = v257;
      v273(v286, v257, v99);
      goto LABEL_92;
    }
    goto LABEL_74;
  }
  uint64_t v187 = (uint64_t)v183;
  self;
  v293 = (void *)swift_dynamicCastObjCClass();
  if (!v293)
  {
    swift_bridgeObjectRelease();
    goto LABEL_100;
  }
  if (!*(void *)&v97[*(int *)(v141 + 36)])
  {
    swift_bridgeObjectRelease();
    uint64_t v99 = v281;
    goto LABEL_100;
  }
  v292 = v181;
  swift_bridgeObjectRetain();
  uint64_t v188 = swift_bridgeObjectRetain();
  v189 = v294;
  unint64_t v190 = (unint64_t)sub_100045148(v188, v187);
  v294 = v189;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  id v191 = [v293 subFolderIdentifiersOrderedSet];
  v192 = v191;
  if (v190 >> 62)
  {
    id v205 = v191;
    swift_bridgeObjectRetain();
    uint64_t v193 = sub_1000B7BA0();
    if (v193)
    {
LABEL_79:
      if (v193 >= 1)
      {
        for (uint64_t i = 0; i != v193; ++i)
        {
          if ((v190 & 0xC000000000000001) != 0) {
            id v196 = (id)sub_1000B7AC0();
          }
          else {
            id v196 = *(id *)(v190 + 8 * i + 32);
          }
          v197 = v196;
          [v192 addObject:v196];
        }
        goto LABEL_99;
      }
LABEL_124:
      __break(1u);
    }
  }
  else
  {
    uint64_t v193 = *(void *)((v190 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v194 = v191;
    swift_bridgeObjectRetain();
    if (v193) {
      goto LABEL_79;
    }
  }
LABEL_99:

  swift_bridgeObjectRelease_n();
  id v206 = v293;
  [v293 setSubFolderOrderMergeableDataDirty:1];
  [v206 saveSubFolderMergeableDataIfNeeded];

  uint64_t v99 = v281;
  unint64_t v97 = v265;
  v181 = v280;
LABEL_100:
  v207 = v294;
  sub_1000B7830();
  v294 = v207;
  if (v207)
  {
    sub_100046D9C((uint64_t)v97, (uint64_t (*)(void))type metadata accessor for ICArchiveModel);

    sub_1000452E0((uint64_t)a3, (unint64_t)v87);
    v208 = sub_1000B7400();
    v209 = v251;
    sub_1000B7430();
    os_signpost_type_t v210 = sub_1000B7900();
    if (sub_1000B79D0())
    {
      swift_retain();
      v211 = v248;
      sub_1000B7460();
      swift_release();
      uint64_t v212 = v274;
      uint64_t v213 = v275;
      if ((*(unsigned int (**)(char *, uint64_t))(v274 + 88))(v211, v275) == enum case for OSSignpostError.doubleEnd(_:))
      {
        v214 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v212 + 8))(v211, v213);
        v214 = "";
      }
      v230 = v286;
      v231 = v251;
      v273(v286, v251, v99);
      v232 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v232 = 0;
      os_signpost_id_t v233 = sub_1000B73D0();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v208, v210, v233, "Import Objects from Archive", v214, v232, 2u);
      swift_slowDealloc();

      v161 = *(void (**)(char *, uint64_t))(v287 + 8);
      v161(v231, v99);
      v161(v230, v99);
      goto LABEL_105;
    }
LABEL_104:

    v161 = *(void (**)(char *, uint64_t))(v287 + 8);
    v161(v209, v99);
LABEL_105:
    swift_release();
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v161)(v278, v99);
    uint64_t v101 = v289;
    goto LABEL_106;
  }
  v295 = 0;
  if (![v247 save:&v295])
  {
    v223 = v295;
    uint64_t v224 = sub_1000B6E30();

    v294 = (char *)v224;
    swift_willThrow();
    sub_1000452E0((uint64_t)a3, (unint64_t)v87);

    sub_100046D9C((uint64_t)v97, (uint64_t (*)(void))type metadata accessor for ICArchiveModel);
    v208 = sub_1000B7400();
    v209 = v246;
    sub_1000B7430();
    os_signpost_type_t v225 = sub_1000B7900();
    if (sub_1000B79D0())
    {
      swift_retain();
      v226 = v244;
      sub_1000B7460();
      swift_release();
      uint64_t v227 = v274;
      uint64_t v228 = v275;
      if ((*(unsigned int (**)(char *, uint64_t))(v274 + 88))(v226, v275) == enum case for OSSignpostError.doubleEnd(_:))
      {
        v229 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v227 + 8))(v226, v228);
        v229 = "";
      }
      v239 = v286;
      v240 = v246;
      v273(v286, v246, v99);
      v241 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v241 = 0;
      os_signpost_id_t v242 = sub_1000B73D0();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v208, v225, v242, "Import Objects from Archive", v229, v241, 2u);
      swift_slowDealloc();

      v161 = *(void (**)(char *, uint64_t))(v287 + 8);
      v161(v240, v99);
      v161(v239, v99);
      goto LABEL_105;
    }
    goto LABEL_104;
  }
  v215 = v295;
  sub_100046D9C((uint64_t)v97, (uint64_t (*)(void))type metadata accessor for ICArchiveModel);

  sub_1000452E0((uint64_t)a3, (unint64_t)v87);
  v216 = sub_1000B7400();
  v217 = v245;
  sub_1000B7430();
  os_signpost_type_t v218 = sub_1000B7900();
  if (sub_1000B79D0())
  {
    swift_retain();
    v219 = v243;
    sub_1000B7460();
    swift_release();
    uint64_t v220 = v274;
    uint64_t v221 = v275;
    if ((*(unsigned int (**)(char *, uint64_t))(v274 + 88))(v219, v275) == enum case for OSSignpostError.doubleEnd(_:))
    {
      v222 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v220 + 8))(v219, v221);
      v222 = "";
    }
    v235 = v286;
    v236 = v245;
    v273(v286, v245, v99);
    v237 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v237 = 0;
    os_signpost_id_t v238 = sub_1000B73D0();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v216, v218, v238, "Import Objects from Archive", v222, v237, 2u);
    swift_slowDealloc();

    v234 = *(void (**)(char *, uint64_t))(v287 + 8);
    v234(v236, v99);
    v234(v235, v99);
  }
  else
  {

    v234 = *(void (**)(char *, uint64_t))(v287 + 8);
    v234(v217, v99);
  }
  swift_release();
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v234)(v278, v99);
  v289[v288] = 0;
  return result;
}

void *sub_10003F3D8(uint64_t a1, void *a2, uint64_t (**a3)(void, void, int64_t, id, uint64_t, uint64_t, double), void *a4)
{
  uint64_t result = sub_10003CC18(a1, v4, a2, a3, a4);
  uint64_t v7 = result;
  if (!v5)
  {
    uint64_t v8 = result[2];
    if (v8)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = _swiftEmptyArrayStorage;
      uint64_t v10 = v7 + 7;
      do
      {
        uint64_t v11 = *((void *)v10 - 3);
        if (*v10)
        {
          uint64_t v20 = (void *)*((void *)v10 - 3);
          sub_100032E20(&qword_100103AB0);
          swift_willThrowTypedImpl();
        }
        else
        {
          uint64_t v13 = *((void *)v10 - 2);
          uint64_t v12 = (void *)*((void *)v10 - 1);
          swift_bridgeObjectRetain();
          id v14 = v12;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v9 = sub_100035658(0, v9[2] + 1, 1, v9);
          }
          unint64_t v16 = v9[2];
          unint64_t v15 = v9[3];
          if (v16 >= v15 >> 1) {
            uint64_t v9 = sub_100035658((void *)(v15 > 1), v16 + 1, 1, v9);
          }
          v9[2] = v16 + 1;
          uint64_t v17 = &v9[3 * v16];
          void v17[4] = v11;
          v17[5] = v13;
          v17[6] = v14;
        }
        v10 += 32;
        --v8;
      }
      while (v8);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v9 = _swiftEmptyArrayStorage;
    }
    uint64_t v18 = sub_100040C4C((uint64_t)v9);
    swift_bridgeObjectRelease();
    if (v18[2])
    {
      sub_100032E20(&qword_100103AF0);
      uint64_t v19 = (void *)sub_1000B7BD0();
    }
    else
    {
      uint64_t v19 = &_swiftEmptyDictionarySingleton;
    }
    uint64_t v20 = v19;
    sub_100045338((uint64_t)v18, 1, &v20);
    swift_bridgeObjectRelease();
    return v20;
  }
  return result;
}

uint64_t sub_10003F5FC(uint64_t a1, void *a2, uint64_t (**a3)(void, void, int64_t, id, uint64_t, uint64_t, double), void *a4)
{
  uint64_t v124 = a3;
  uint64_t v123 = a2;
  uint64_t v132 = a1;
  uint64_t v126 = type metadata accessor for ICAttachmentArchiveModel();
  __chkstk_darwin(v126);
  uint64_t v120 = (char *)&v109 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = type metadata accessor for ICNoteArchiveModel();
  __chkstk_darwin(v117);
  uint64_t v118 = (char *)&v109 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = type metadata accessor for ICFolderArchiveModel(0);
  __chkstk_darwin(v121);
  uint64_t v122 = (char *)&v109 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = sub_100032E20(&qword_100104330);
  uint64_t v128 = *(void *)(v131 - 8);
  uint64_t v8 = __chkstk_darwin(v131);
  uint64_t v10 = (char *)&v109 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char **)((char *)&v109 - v11);
  uint64_t v13 = sub_1000B6F10();
  uint64_t v127 = *(void *)(v13 - 8);
  uint64_t v14 = __chkstk_darwin(v13);
  unint64_t v16 = (char *)&v109 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v109 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)&v109 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v25 = (char *)&v109 - v24;
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v109 - v26;
  uint64_t v28 = v130;
  sub_1000B7830();
  if (v28) {
    return (uint64_t)v12;
  }
  int v130 = 0;
  uint64_t v114 = v12;
  uint64_t v113 = v22;
  uint64_t v111 = v19;
  os_signpost_type_t v112 = v16;
  uint64_t v119 = v10;
  uint64_t v125 = v13;
  int v116 = a4;
  swift_getObjectType();
  sub_1000B7140();
  uint64_t v29 = v25;
  if (qword_100103648 != -1) {
    swift_once();
  }
  sub_1000B6EA0();
  uint64_t v31 = v127 + 8;
  uint64_t v30 = *(void (**)(void, void))(v127 + 8);
  uint64_t v115 = (uint64_t)v29;
  uint64_t v32 = v125;
  v30(v29, v125);
  uint64_t v33 = (uint64_t)v130;
  uint64_t v34 = sub_1000B70D0();
  uint64_t v12 = (char **)v33;
  int v130 = v30;
  if (v33)
  {
    v30(v27, v32);
    uint64_t v127 = 0;
    uint64_t v36 = v116;
    uint64_t v37 = v131;
    uint64_t v38 = v128;
    uint64_t v39 = v119;
    *(void *)&v133[0] = v33;
    swift_errorRetain();
    sub_100032E20(&qword_100103AB0);
    sub_100038DC8(0, &qword_100104320);
    if (!swift_dynamicCast()) {
      goto LABEL_30;
    }
    uint64_t v59 = v37;
    uint64_t v60 = v32;
    uint64_t v61 = v31;
    uint64_t v62 = v36;
    id v63 = v134;
    id v64 = [v134 domain];
    uint64_t v65 = sub_1000B75B0();
    uint64_t v67 = v66;

    if (v65 == sub_1000B75B0() && v67 == v68)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v69 = v63;
    }
    else
    {
      char v70 = sub_1000B7DC0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v69 = v63;
      if ((v70 & 1) == 0)
      {
LABEL_29:

        uint64_t v36 = v62;
        uint64_t v31 = v61;
        uint64_t v32 = v60;
        uint64_t v37 = v59;
        uint64_t v39 = v119;
        uint64_t v38 = v128;
LABEL_30:
        swift_errorRelease();
        if (qword_100103678 != -1) {
          swift_once();
        }
        uint64_t v71 = sub_1000B7490();
        sub_100038E8C(v71, (uint64_t)qword_1001039C8);
        (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v39, v132, v37);
        swift_errorRetain();
        swift_errorRetain();
        uint64_t v72 = sub_1000B7480();
        os_log_type_t v73 = sub_1000B7850();
        int v74 = v73;
        if (os_log_type_enabled(v72, v73))
        {
          uint64_t v75 = swift_slowAlloc();
          os_signpost_id_t v76 = (uint64_t (**)(void, void, int64_t, id, uint64_t, uint64_t, double))swift_slowAlloc();
          uint64_t v126 = v31;
          uint64_t v124 = v76;
          *(void *)&v133[0] = v76;
          *(_DWORD *)uint64_t v75 = 136315394;
          swift_getErrorValue();
          LODWORD(v123) = v74;
          uint64_t v77 = sub_1000B7E00();
          id v134 = (id)sub_100069A50(v77, v78, (uint64_t *)v133);
          sub_1000B79F0();
          swift_bridgeObjectRelease();
          swift_errorRelease();
          swift_errorRelease();
          *(_WORD *)(v75 + 12) = 2080;
          uint64_t v122 = (char *)(v75 + 14);
          uint64_t v79 = v38;
          uint64_t v80 = v115;
          sub_1000B7140();
          sub_100046C38(&qword_100103B08, (void (*)(uint64_t))&type metadata accessor for URL);
          uint64_t v81 = sub_1000B7D80();
          unint64_t v83 = v82;
          uint64_t v84 = v130;
          v130(v80, v125);
          id v134 = (id)sub_100069A50(v81, v83, (uint64_t *)v133);
          uint64_t v32 = v125;
          os_signpost_id_t v85 = v116;
          sub_1000B79F0();
          uint64_t v86 = v131;
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v79 + 8))(v119, v86);
          _os_log_impl((void *)&_mh_execute_header, v72, (os_log_type_t)v123, "Cannot import model {error: %s, containerID: %s}", (uint8_t *)v75, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          uint64_t v36 = v85;
          swift_slowDealloc();
        }
        else
        {
          swift_errorRelease();
          swift_errorRelease();
          (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v37);

          uint64_t v80 = v115;
          uint64_t v84 = v130;
        }
        sub_1000B7140();
        uint64_t v87 = (id *)(v129 + OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension17ICArchiveImporter_errors);
        swift_beginAccess();
        swift_errorRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        id v134 = *v87;
        id *v87 = (id)0x8000000000000000;
        sub_10006B1E0(v33, v80, isUniquelyReferenced_nonNull_native);
        id *v87 = v134;
        swift_bridgeObjectRelease();
        v84(v80, v32);
        swift_endAccess();
        [v36 setCompletedUnitCount:[v36 totalUnitCount]];
        return (uint64_t)v12;
      }
    }
    if ([v69 code] == (id)3072)
    {
      swift_errorRelease();
      swift_willThrow();
      swift_errorRelease();
      return (uint64_t)v12;
    }
    goto LABEL_29;
  }
  uint64_t v109 = v34;
  unint64_t v110 = v35;
  v30(v27, v32);
  uint64_t v40 = v128;
  uint64_t v41 = v114;
  uint64_t v42 = v131;
  (*(void (**)(char **, uint64_t, uint64_t))(v128 + 16))(v114, v132, v131);
  int v43 = (*(uint64_t (**)(char **, uint64_t))(v40 + 88))(v41, v42);
  if (v43 == enum case for ICObjectReferences.account<A>(_:))
  {
    uint64_t v126 = v31;
    (*(void (**)(char **, uint64_t))(v40 + 96))(v41, v42);
    uint64_t v44 = *v41;
    uint64_t v45 = sub_100032E20(&qword_100103B30);
    uint64_t v122 = v44;
    uint64_t v46 = swift_projectBox();
    uint64_t v121 = *(void *)(v46 + *(int *)(v45 + 64));
    (*(void (**)(char *, uint64_t, uint64_t))(v127 + 16))(v113, v46, v32);
    if (qword_100103668 != -1) {
      swift_once();
    }
    sub_100046DFC();
    sub_1000B6D00();
    v135[0] = v133[0];
    v135[1] = v133[1];
    v135[2] = v133[2];
    v135[3] = v133[3];
    uint64_t v12 = (char **)sub_100040DC4((uint64_t)v135, v121, v55, v123, (uint64_t)v124, (uint64_t)v116);
    v130(v113, v32);
    sub_1000452E0(v109, v110);
    sub_100046E50((uint64_t)v135);
LABEL_41:
    swift_release();
    return (uint64_t)v12;
  }
  if (v43 == enum case for ICObjectReferences.folder<A>(_:))
  {
    uint64_t v47 = v114;
    (*(void (**)(char **, uint64_t))(v128 + 96))(v114, v42);
    uint64_t v48 = *v47;
    uint64_t v49 = sub_100032E20(&qword_100103B30);
    uint64_t v120 = v48;
    uint64_t v127 = *(void *)(swift_projectBox() + *(int *)(v49 + 64));
    if (qword_100103668 != -1) {
      swift_once();
    }
    sub_100046C38(&qword_100103B38, (void (*)(uint64_t))type metadata accessor for ICFolderArchiveModel);
    sub_1000B6D00();
    uint64_t v126 = v31;
    uint64_t v90 = (unsigned __int8 *)(v129
                            + OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension17ICArchiveImporter_configuration);
    swift_beginAccess();
    __int16 v91 = *v90;
    int v92 = v90[1];
    double v93 = *((double *)v90 + 1);
    unint64_t v95 = (void *)*((void *)v90 + 2);
    uint64_t v94 = *((void *)v90 + 3);
    if (v92) {
      __int16 v96 = 256;
    }
    else {
      __int16 v96 = 0;
    }
    __int16 v97 = v96 | v91;
    id v98 = v95;
    uint64_t v99 = (uint64_t)v122;
    BOOL v103 = sub_1000ADF60(v93, (uint64_t)v123, (uint64_t)v124, v97, (uint64_t)v95, v94);

    id v104 = v103;
    uint64_t v105 = sub_10003F3D8(v127, v104, &off_1000F1F08, v116);

    sub_100041AC0(v105, (uint64_t)ICFolder_ptr, (void (*)(unint64_t, uint64_t))sub_10006328C);
    uint64_t v107 = v106;
    swift_bridgeObjectRelease();
    id v108 = sub_1000AE358(v104, v107);
    swift_bridgeObjectRelease();

    sub_1000AE524((uint64_t)v104);
    swift_bridgeObjectRelease();
    uint64_t v12 = *(char ***)(v99 + 8);
    swift_bridgeObjectRetain();
    sub_1000452E0(v109, v110);
    sub_100046D9C(v99, type metadata accessor for ICFolderArchiveModel);
    swift_release();
    return (uint64_t)v12;
  }
  uint64_t v50 = v114;
  if (v43 == enum case for ICObjectReferences.note<A>(_:))
  {
    uint64_t v126 = v31;
    (*(void (**)(char **, uint64_t))(v128 + 96))(v114, v42);
    uint64_t v51 = *v50;
    uint64_t v52 = sub_100032E20(&qword_100103B20);
    uint64_t v122 = v51;
    uint64_t v53 = swift_projectBox();
    uint64_t v121 = *(void *)(v53 + *(int *)(v52 + 64));
    (*(void (**)(char *, uint64_t, uint64_t))(v127 + 16))(v111, v53, v32);
    if (qword_100103668 != -1) {
      swift_once();
    }
    sub_100046C38(&qword_100103B28, (void (*)(uint64_t))type metadata accessor for ICNoteArchiveModel);
    uint64_t v54 = (uint64_t)v118;
    sub_1000B6D00();
    uint64_t v12 = (char **)sub_1000410F8(v54, v121, v100, (uint64_t)v123, v124, v116);
    sub_1000452E0(v109, v110);
    sub_100046D9C(v54, (uint64_t (*)(void))type metadata accessor for ICNoteArchiveModel);
    v130(v111, v32);
    goto LABEL_41;
  }
  if (v43 == enum case for ICObjectReferences.attachment<A>(_:))
  {
    (*(void (**)(char **, uint64_t))(v128 + 96))(v114, v42);
    uint64_t v56 = *v50;
    uint64_t v57 = sub_100032E20(&qword_100103B10);
    uint64_t v122 = v56;
    uint64_t v58 = swift_projectBox();
    uint64_t v121 = *(void *)(v58 + *(int *)(v57 + 80));
    (*(void (**)(char *, uint64_t, uint64_t))(v127 + 16))(v112, v58, v32);
    if (qword_100103668 != -1) {
      swift_once();
    }
    sub_100046C38(&qword_100103B18, (void (*)(uint64_t))type metadata accessor for ICAttachmentArchiveModel);
    sub_1000B6D00();
    int64_t v101 = (int64_t)v112;
    uint64_t v102 = sub_1000416EC(v120, v121, (int64_t)v112, (uint64_t)v123, (uint64_t)v124, v116);
    uint64_t v127 = 0;
    uint64_t v12 = (char **)v102;
    sub_1000452E0(v109, v110);
    sub_100046D9C((uint64_t)v120, (uint64_t (*)(void))type metadata accessor for ICAttachmentArchiveModel);
    v130(v101, v32);
    swift_release();
    return (uint64_t)v12;
  }
  uint64_t result = sub_1000B7DB0();
  __break(1u);
  return result;
}

void *sub_100040C4C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_100043820(0, v1, 0);
    uint64_t v3 = (void **)(a1 + 48);
    do
    {
      uint64_t v4 = *v3;
      swift_bridgeObjectRetain_n();
      id v5 = v4;
      sub_100032E20(&qword_100103960);
      sub_100032E20(&qword_100103AF8);
      swift_dynamicCast();

      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_100043820(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v7 = _swiftEmptyArrayStorage[2];
      unint64_t v6 = _swiftEmptyArrayStorage[3];
      if (v7 >= v6 >> 1) {
        sub_100043820(v6 > 1, v7 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v7 + 1;
      uint64_t v8 = &_swiftEmptyArrayStorage[3 * v7];
      void v8[4] = v10;
      *(_OWORD *)(v8 + 5) = v11;
      v3 += 3;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100040DC4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = v6;
  uint64_t v12 = (double *)&v8[OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension17ICArchiveImporter_configuration];
  swift_beginAccess();
  double v13 = v12[1];
  uint64_t v15 = (void *)*((void *)v12 + 2);
  uint64_t v14 = *((void *)v12 + 3);
  if (*((unsigned char *)v12 + 1)) {
    __int16 v16 = 256;
  }
  else {
    __int16 v16 = 0;
  }
  __int16 v17 = v16 | *(unsigned __int8 *)v12;
  id v18 = v15;
  uint64_t v19 = v14;
  uint64_t v20 = a1;
  id v21 = sub_10005DAD4(a4, a5, v17, (uint64_t)v15, v19, v13);
  if (v7)
  {
  }
  else
  {
    uint64_t v23 = v21;

    self;
    uint64_t v24 = swift_dynamicCastObjCClass();
    if (v24)
    {
      uint64_t v25 = (void *)v24;
      id v26 = v23;
      uint64_t v27 = sub_10003F3D8(a2, v25, &off_1000F1ED0, a6);
      sub_100041AC0(v27, (uint64_t)ICFolder_ptr, (void (*)(unint64_t, uint64_t))sub_10006328C);
      uint64_t v33 = v32;
      swift_bridgeObjectRelease();
      id v37 = sub_10005DCD4(v25, v33);
      swift_bridgeObjectRelease();

      sub_100046EA4(a1 + 48, (uint64_t)v43);
      sub_100046EA4((uint64_t)v43, (uint64_t)&v44);
      uint64_t v38 = v44;
      if (v44)
      {
        id v39 = v26;
        uint64_t v40 = v8;
        sub_100046F0C((uint64_t)v43);
        sub_1000455FC(v38, v25, (uint64_t)v40);

        sub_100046F38((uint64_t)v43);
      }
      else
      {
      }
    }
    else
    {
      self;
      uint64_t v28 = swift_dynamicCastObjCClass();
      if (v28)
      {
        uint64_t v29 = (void *)v28;
        id v30 = v23;
        uint64_t v31 = sub_10003F3D8(a2, v29, &off_1000F1F08, a6);
        sub_100041AC0(v31, (uint64_t)ICFolder_ptr, (void (*)(unint64_t, uint64_t))sub_10006328C);
        uint64_t v35 = v34;
        swift_bridgeObjectRelease();
        id v36 = sub_10005DCD4(v29, v35);

        swift_bridgeObjectRelease();
      }
    }
    uint64_t v7 = *(void *)(v20 + 8);
    swift_bridgeObjectRetain();
  }
  return v7;
}

char *sub_1000410F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (**a5)(void, void, int64_t, id, uint64_t, uint64_t, double), void *a6)
{
  id v62 = a6;
  uint64_t v7 = v6;
  uint64_t v59 = a4;
  uint64_t v60 = a5;
  isa = (void *)sub_100032E20(&qword_100104330);
  uint64_t v11 = *(isa - 1);
  __chkstk_darwin(isa);
  double v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v14 = *(void *)(a2 + 16);
  uint64_t v56 = a2;
  if (v14)
  {
    uint64_t v57 = v6;
    uint64_t v58 = a1;
    uint64_t v67 = (char **)_swiftEmptyArrayStorage;
    sub_100043860(0, v14, 0);
    __int16 v16 = *(void (**)(char *, uint64_t, void *))(v11 + 16);
    uint64_t v15 = v11 + 16;
    uint64_t v17 = a2 + ((*(unsigned __int8 *)(v15 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 64));
    uint64_t v64 = *(void *)(v15 + 56);
    uint64_t v65 = v16;
    id v63 = (void (**)(char *, void *))(v15 - 8);
    id v18 = v67;
    uint64_t v66 = v15;
    do
    {
      v65(v13, v17, isa);
      a1 = sub_1000B7170();
      (*v63)(v13, isa);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100043860(0, (int64_t)(v18[2] + 1), 1);
        id v18 = v67;
      }
      unint64_t v20 = (unint64_t)v18[2];
      unint64_t v19 = (unint64_t)v18[3];
      id v21 = (char *)(v20 + 1);
      if (v20 >= v19 >> 1)
      {
        sub_100043860(v19 > 1, v20 + 1, 1);
        id v18 = v67;
      }
      v18[2] = v21;
      v18[v20 + 4] = (char *)a1;
      v17 += v64;
      --v14;
    }
    while (v14);
    uint64_t v7 = v57;
  }
  else
  {
    id v18 = (char **)_swiftEmptyArrayStorage;
    id v21 = (char *)_swiftEmptyArrayStorage[2];
    if (!v21) {
      goto LABEL_31;
    }
    uint64_t v58 = a1;
  }
  uint64_t v22 = 0;
  uint64_t v23 = 0;
  do
  {
    uint64_t v24 = v18[(void)v22 + 4];
    BOOL v25 = __OFADD__(v23, v24);
    uint64_t v23 = &v24[(void)v23];
    if (v25)
    {
      __break(1u);
      goto LABEL_39;
    }
    ++v22;
  }
  while (v21 != v22);
  a1 = v58;
  while (1)
  {
    swift_bridgeObjectRelease();
    if (qword_100103678 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_1000B7490();
    sub_100038E8C(v26, (uint64_t)qword_1001039C8);
    uint64_t v27 = sub_1000B7480();
    os_log_type_t v28 = sub_1000B7840();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 134217984;
      uint64_t v67 = (char **)v23;
      sub_1000B79F0();
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Importing noteâ€¦ {attachmentCount: %ld}", v29, 0xCu);
      swift_slowDealloc();
    }

    uint64_t result = v23 + 1;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
      __break(1u);
      goto LABEL_42;
    }
    isa = sub_1000B7820((Swift::Int64)result, 1).super.isa;
    uint64_t v31 = (unsigned __int8 *)(v7
                            + OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension17ICArchiveImporter_configuration);
    swift_beginAccess();
    double v32 = *((double *)v31 + 1);
    uint64_t v33 = (void *)*((void *)v31 + 2);
    uint64_t v34 = *((void *)v31 + 3);
    if (v31[1]) {
      int v35 = 256;
    }
    else {
      int v35 = 0;
    }
    uint64_t v36 = v7;
    int v37 = v35 | *v31;
    id v38 = v33;
    uint64_t v39 = v61;
    uint64_t v40 = (char *)sub_100047144(v32, v59, v60, v37, v33, v34);
    uint64_t v7 = v39;
    if (v39)
    {

      uint64_t v40 = (char *)[isa completedUnitCount];
      uint64_t v41 = v40 + 1;
      if (!__OFADD__(v40, 1)) {
        goto LABEL_36;
      }
      __break(1u);
    }
    uint64_t v42 = v40;

    int v43 = v42;
    uint64_t v44 = sub_10003F3D8(v56, v43, &off_1000F1F40, isa);
    if (!v39) {
      break;
    }

    uint64_t v45 = (char *)[isa completedUnitCount];
    uint64_t v41 = v45 + 1;
    if (!__OFADD__(v45, 1))
    {
LABEL_36:
      [isa setCompletedUnitCount:v41, v56];

      return (char *)v31;
    }
    __break(1u);
LABEL_31:
    uint64_t v23 = 0;
  }
  uint64_t v46 = v44;
  uint64_t v57 = v36;

  sub_100041AC0(v46, (uint64_t)ICAttachment_ptr, (void (*)(unint64_t, uint64_t))sub_1000635D4);
  uint64_t v48 = v47;
  swift_bridgeObjectRelease();
  double v49 = *((double *)v31 + 1);
  uint64_t v50 = (void *)*((void *)v31 + 2);
  uint64_t v51 = (char *)*((void *)v31 + 3);
  if (v31[1]) {
    __int16 v52 = 256;
  }
  else {
    __int16 v52 = 0;
  }
  __int16 v53 = v52 | *v31;
  id v54 = v50;
  id v55 = sub_1000484F8(v43, v48, v53, (uint64_t)v50, v51, v49);

  swift_bridgeObjectRelease();
  sub_1000489CC((uint64_t)v43);
  swift_bridgeObjectRelease();
  id v18 = &selRef_accessibilityUserInputLabels;
  sub_100041E10((char)[v62 completedUnitCount]);
LABEL_39:
  uint64_t v31 = *(unsigned __int8 **)(a1 + 8);
  swift_bridgeObjectRetain();
  uint64_t result = (char *)[isa v18[224]];
  if (__OFADD__(result, 1))
  {
LABEL_42:
    __break(1u);
  }
  else
  {
    [isa setCompletedUnitCount:result + 1];

    return (char *)v31;
  }
  return result;
}

char *sub_1000416EC(void *a1, uint64_t a2, int64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v55 = a5;
  id v53 = a6;
  id v54 = a1;
  int64_t v50 = a3;
  uint64_t v51 = a2;
  uint64_t v8 = sub_1000B6F10();
  uint64_t v49 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = v6;
  uint64_t v11 = (unsigned __int8 *)(v6
                          + OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension17ICArchiveImporter_configuration);
  swift_beginAccess();
  double v12 = *((double *)v11 + 1);
  double v13 = (void *)*((void *)v11 + 2);
  int64_t v14 = (void *)*((void *)v11 + 3);
  if (v11[1]) {
    int v15 = 256;
  }
  else {
    int v15 = 0;
  }
  uint64_t v16 = v15 | *v11;
  id v17 = v13;
  id v18 = (int *)v13;
  unint64_t v19 = v54;
  uint64_t v20 = v56;
  id v21 = (char *)sub_10006DBF8(v12, a4, v55, v16, v18, v14);
  if (v20)
  {

    id v22 = v53;
    id v21 = (char *)[v53 completedUnitCount];
    uint64_t v23 = v21 + 1;
    if (!__OFADD__(v21, 1)) {
      goto LABEL_21;
    }
    __break(1u);
  }
  uint64_t v24 = v21;

  BOOL v25 = v24;
  id v22 = v53;
  uint64_t v26 = (char *)sub_10003F3D8(v51, v25, &off_1000F1F78, v53);
  if (v20)
  {

    uint64_t v26 = (char *)[v22 completedUnitCount];
    uint64_t v23 = v26 + 1;
    if (!__OFADD__(v26, 1)) {
      goto LABEL_21;
    }
    __break(1u);
  }
  uint64_t v27 = (uint64_t)v26;

  sub_100041AC0(v27, (uint64_t)ICAttachment_ptr, (void (*)(unint64_t, uint64_t))sub_1000635D4);
  uint64_t v29 = v28;
  uint64_t v55 = v20;
  swift_bridgeObjectRelease();
  uint64_t v30 = v19[11];
  uint64_t v56 = v29;
  if (v30)
  {
    sub_1000B6EA0();
    sub_1000B6E80(v31);
    uint64_t v33 = v32;
    id v34 = [v25 addMediaWithURL:v32];

    (*(void (**)(char *, uint64_t))(v49 + 8))(v10, v8);
  }
  int v35 = v19;
  uint64_t v36 = (double *)((char *)v19 + *(int *)(type metadata accessor for ICAttachmentArchiveModel() + 88));
  if (((_BYTE)v36[2] & 1) == 0) {

  }
  int v37 = *(void **)(v52 + OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension17ICArchiveImporter_fileManager);
  uint64_t v38 = *(void *)(v52 + OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension17ICArchiveImporter_fileManager + 8);
  double v39 = *((double *)v11 + 1);
  uint64_t v40 = (void *)*((void *)v11 + 2);
  uint64_t v41 = (char *)*((void *)v11 + 3);
  if (v11[1]) {
    int v42 = 256;
  }
  else {
    int v42 = 0;
  }
  int v43 = v42 | *v11;
  id v54 = v40;
  uint64_t v44 = v55;
  uint64_t v16 = v56;
  sub_10006E384(v25, v50, v56, v37, v38, v43, (uint64_t)v40, v41, v39);
  if (v44)
  {

    swift_bridgeObjectRelease();
    uint64_t result = (char *)[v22 completedUnitCount];
    uint64_t v23 = result + 1;
    if (!__OFADD__(result, 1))
    {
LABEL_21:
      [v22 setCompletedUnitCount:v23];
      return (char *)v16;
    }
    __break(1u);
  }
  else
  {
    uint64_t v47 = v45;

    swift_bridgeObjectRelease();
    uint64_t v16 = v35[1];
    swift_bridgeObjectRetain();
    uint64_t result = (char *)[v22 completedUnitCount];
    uint64_t v23 = result + 1;
    if (!__OFADD__(result, 1)) {
      goto LABEL_21;
    }
  }
  __break(1u);
  return result;
}

void sub_100041AC0(uint64_t a1, uint64_t a2, void (*a3)(unint64_t, uint64_t))
{
  uint64_t v4 = a1 + 64;
  uint64_t v38 = (char *)&_swiftEmptyDictionarySingleton;
  uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
  if (-v5 < 64) {
    uint64_t v6 = ~(-1 << -(char)v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v40 = (unint64_t)(63 - v5) >> 6;
  swift_bridgeObjectRetain();
  int64_t v8 = 0;
  uint64_t v37 = v4;
  if (!v7) {
    goto LABEL_8;
  }
LABEL_5:
  unint64_t v9 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  unint64_t v10 = v9 | (v8 << 6);
  while (1)
  {
    uint64_t v11 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    int64_t v14 = *(void **)(*(void *)(a1 + 56) + 8 * v10);
    self;
    uint64_t v15 = swift_dynamicCastObjCClass();
    if (v15)
    {
      uint64_t v20 = v15;
      unint64_t v21 = *((void *)v38 + 2);
      if (*((void *)v38 + 3) <= v21)
      {
        unint64_t v39 = v21 + 1;
        id v24 = v14;
        swift_bridgeObjectRetain();
        a3(v39, 1);
        uint64_t v23 = (char *)&_swiftEmptyDictionarySingleton;
      }
      else
      {
        id v22 = v14;
        swift_bridgeObjectRetain();
        uint64_t v23 = v38;
      }
      uint64_t v38 = v23;
      sub_1000B7E40();
      sub_1000B7620();
      Swift::Int v25 = sub_1000B7E70();
      uint64_t v26 = v38 + 64;
      uint64_t v27 = -1 << v38[32];
      unint64_t v28 = v25 & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)&v38[8 * (v28 >> 6) + 64]) == 0)
      {
        char v31 = 0;
        unint64_t v32 = (unint64_t)(63 - v27) >> 6;
        uint64_t v4 = v37;
        while (++v29 != v32 || (v31 & 1) == 0)
        {
          BOOL v33 = v29 == v32;
          if (v29 == v32) {
            unint64_t v29 = 0;
          }
          v31 |= v33;
          uint64_t v34 = *(void *)&v26[8 * v29];
          if (v34 != -1)
          {
            unint64_t v30 = __clz(__rbit64(~v34)) + (v29 << 6);
            goto LABEL_37;
          }
        }
        goto LABEL_41;
      }
      unint64_t v30 = __clz(__rbit64((-1 << v28) & ~*(void *)&v38[8 * (v28 >> 6) + 64])) | v28 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v4 = v37;
LABEL_37:
      *(void *)&v26[(v30 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v30;
      int v35 = (void *)(*((void *)v38 + 6) + 16 * v30);
      void *v35 = v12;
      v35[1] = v13;
      *(void *)(*((void *)v38 + 7) + 8 * v30) = v20;
      ++*((void *)v38 + 2);

      if (v7) {
        goto LABEL_5;
      }
    }
    else if (v7)
    {
      goto LABEL_5;
    }
LABEL_8:
    int64_t v16 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v16 >= v40) {
      goto LABEL_39;
    }
    unint64_t v17 = *(void *)(v4 + 8 * v16);
    int64_t v18 = v8 + 1;
    if (!v17)
    {
      int64_t v18 = v8 + 2;
      if (v8 + 2 >= v40) {
        goto LABEL_39;
      }
      unint64_t v17 = *(void *)(v4 + 8 * v18);
      if (!v17)
      {
        int64_t v18 = v8 + 3;
        if (v8 + 3 >= v40) {
          goto LABEL_39;
        }
        unint64_t v17 = *(void *)(v4 + 8 * v18);
        if (!v17)
        {
          int64_t v18 = v8 + 4;
          if (v8 + 4 >= v40) {
            goto LABEL_39;
          }
          unint64_t v17 = *(void *)(v4 + 8 * v18);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v17 - 1) & v17;
    unint64_t v10 = __clz(__rbit64(v17)) + (v18 << 6);
    int64_t v8 = v18;
  }
  int64_t v19 = v8 + 5;
  if (v8 + 5 >= v40)
  {
LABEL_39:
    sub_100038F7C();
    return;
  }
  unint64_t v17 = *(void *)(v4 + 8 * v19);
  if (v17)
  {
    int64_t v18 = v8 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v18 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v18 >= v40) {
      goto LABEL_39;
    }
    unint64_t v17 = *(void *)(v4 + 8 * v18);
    ++v19;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_42:
  __break(1u);
}

void sub_100041E10(char a1)
{
  unint64_t v2 = v1;
  uint64_t v3 = OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension17ICArchiveImporter_didReceiveMemoryWarning;
  if ((v1[OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension17ICArchiveImporter_didReceiveMemoryWarning] & 1) != 0
    || (a1 & 0x1F) == 0)
  {
    if (qword_100103678 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1000B7490();
    sub_100038E8C(v4, (uint64_t)qword_1001039C8);
    uint64_t v5 = sub_1000B7480();
    os_log_type_t v6 = sub_1000B7840();
    if (os_log_type_enabled(v5, v6))
    {
      unint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Saving batch of imported notes and resetting inserted objectsâ€¦", v7, 2u);
      swift_slowDealloc();
    }

    int64_t v8 = *(void **)&v2[OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension17ICArchiveImporter_context];
    id v9 = [v8 insertedObjects];
    sub_100038DC8(0, &qword_100103B50);
    sub_100046F64();
    uint64_t v10 = sub_1000B7780();

    id v16 = 0;
    unsigned int v11 = [v8 save:&v16];
    id v12 = v16;
    if (v11)
    {
      uint64_t v13 = v2;
      id v14 = v12;
      sub_100045D24(v10, (uint64_t)v13);
      swift_bridgeObjectRelease();

      v2[v3] = 0;
    }
    else
    {
      id v15 = v16;
      swift_bridgeObjectRelease();
      sub_1000B6E30();

      swift_willThrow();
    }
  }
}

void sub_100042024()
{
  swift_beginAccess();
  Strong = (unsigned char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Strong[OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension17ICArchiveImporter_didReceiveMemoryWarning] = 1;
  }
}

Swift::Int sub_100042080(void **a1)
{
  uint64_t v2 = *(void *)(sub_100032E20(&qword_100104330) - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_100044C3C(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_10004212C(v6);
  *a1 = v3;
  return result;
}

Swift::Int sub_10004212C(void *a1)
{
  uint64_t v3 = sub_100032E20(&qword_100104330);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  unint64_t v136 = (char *)&v132 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v151 = (char *)&v132 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  os_log_type_t v146 = (char *)&v132 - v10;
  __chkstk_darwin(v9);
  v147 = (char *)&v132 - v11;
  Swift::Int v12 = a1[1];
  Swift::Int result = sub_1000B7D70(v12);
  if (result >= v12)
  {
    if (v12 < 0) {
      goto LABEL_141;
    }
    if (v12) {
      return sub_100042C84(0, v12, 1, a1);
    }
    return result;
  }
  if (v12 >= 0) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v12 + 1;
  }
  if (v12 < -1) {
    goto LABEL_149;
  }
  Swift::Int v133 = result;
  uint64_t v140 = v1;
  if (v12 < 2)
  {
    int64_t v18 = _swiftEmptyArrayStorage;
    unint64_t v139 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    if (v12 != 1)
    {
      unint64_t v21 = _swiftEmptyArrayStorage[2];
      uint64_t v20 = (char *)_swiftEmptyArrayStorage;
LABEL_106:
      uint64_t v132 = v18;
      if (v21 >= 2)
      {
        Swift::Int v125 = *a1;
        do
        {
          unint64_t v126 = v21 - 2;
          if (v21 < 2) {
            goto LABEL_136;
          }
          if (!v125) {
            goto LABEL_148;
          }
          uint64_t v127 = *(void *)&v20[16 * v126 + 32];
          uint64_t v128 = *(void *)&v20[16 * v21 + 24];
          uint64_t v129 = v140;
          sub_100042F78(v125 + *(void *)(v4 + 72) * v127, v125 + *(void *)(v4 + 72) * *(void *)&v20[16 * v21 + 16], v125 + *(void *)(v4 + 72) * v128, v139);
          uint64_t v140 = v129;
          if (v129) {
            break;
          }
          if (v128 < v127) {
            goto LABEL_137;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v20 = sub_100043780((uint64_t)v20);
          }
          if (v126 >= *((void *)v20 + 2)) {
            goto LABEL_138;
          }
          int v130 = &v20[16 * v126 + 32];
          *(void *)int v130 = v127;
          *((void *)v130 + 1) = v128;
          unint64_t v131 = *((void *)v20 + 2);
          if (v21 > v131) {
            goto LABEL_139;
          }
          memmove(&v20[16 * v21 + 16], &v20[16 * v21 + 32], 16 * (v131 - v21));
          *((void *)v20 + 2) = v131 - 1;
          unint64_t v21 = v131 - 1;
        }
        while (v131 > 2);
      }
LABEL_117:
      swift_bridgeObjectRelease();
      v132[2] = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v132 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v15 = v14 >> 1;
    uint64_t v16 = sub_1000B7730();
    *(void *)(v16 + 16) = v15;
    unint64_t v17 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v132 = (void *)v16;
    unint64_t v139 = v16 + v17;
  }
  int64_t v19 = 0;
  uint64_t v144 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v145 = v4 + 16;
  v154 = (char **)(v4 + 32);
  uint64_t v20 = (char *)_swiftEmptyArrayStorage;
  uint64_t v138 = v4;
  uint64_t v148 = a1;
  uint64_t v150 = v3;
  while (1)
  {
    id v22 = v19;
    uint64_t v23 = v19 + 1;
    Swift::Int v137 = (Swift::Int)v19;
    if ((uint64_t)(v19 + 1) >= v12)
    {
      Swift::Int v36 = (Swift::Int)(v19 + 1);
      uint64_t v44 = v140;
    }
    else
    {
      Swift::Int v143 = *a1;
      Swift::Int v24 = v143;
      uint64_t v25 = v4;
      uint64_t v26 = *(void *)(v4 + 72);
      uint64_t v155 = v26;
      Swift::Int v153 = v12;
      uint64_t v27 = v19;
      unint64_t v28 = *(void (**)(char *, Swift::Int, uint64_t))(v25 + 16);
      v28(v147, v143 + v26 * (void)v23, v3);
      Swift::Int v29 = v24 + v26 * (void)v27;
      uint64_t v30 = v25;
      char v31 = v146;
      v28(v146, v29, v3);
      unint64_t v32 = sub_100046FCC();
      BOOL v33 = v147;
      os_log_type_t v149 = (char *)v32;
      int v34 = sub_1000B7560();
      uint64_t v3 = v150;
      LODWORD(v152) = v34;
      int v35 = *(void (**)(char *, uint64_t))(v30 + 8);
      v35(v31, v150);
      v35(v33, v3);
      Swift::Int v36 = (Swift::Int)(v27 + 2);
      Swift::Int v12 = v153;
      if (v36 >= v153)
      {
        uint64_t v44 = v140;
      }
      else
      {
        id v134 = v20;
        uint64_t v142 = v155 * (void)v23;
        Swift::Int v37 = v143;
        uint64_t v38 = v155 * v36;
        while (1)
        {
          Swift::Int v39 = v36;
          int64_t v40 = v147;
          v28(v147, v37 + v38, v3);
          uint64_t v41 = v146;
          v28(v146, v37 + v142, v3);
          int v42 = sub_1000B7560();
          uint64_t v3 = v150;
          int v43 = v42;
          v35(v41, v150);
          v35(v40, v3);
          if ((v152 ^ v43)) {
            break;
          }
          Swift::Int v36 = v39 + 1;
          v37 += v155;
          Swift::Int v12 = v153;
          if (v153 == v36)
          {
            Swift::Int v36 = v153;
            uint64_t v44 = v140;
            uint64_t v20 = v134;
            goto LABEL_25;
          }
        }
        uint64_t v44 = v140;
        uint64_t v20 = v134;
        Swift::Int v36 = v39;
        Swift::Int v12 = v153;
      }
LABEL_25:
      a1 = v148;
      id v22 = (char *)v137;
      if (v152)
      {
        if (v36 < v137) {
          goto LABEL_142;
        }
        if (v137 < v36)
        {
          id v134 = v20;
          uint64_t v45 = 0;
          uint64_t v46 = v155;
          uint64_t v47 = v155 * (v36 - 1);
          uint64_t v48 = v36 * v155;
          Swift::Int v49 = v137;
          uint64_t v50 = v137 * v155;
          os_log_type_t v149 = (char *)v36;
          do
          {
            if (v49 != v36 + v45 - 1)
            {
              if (!v143) {
                goto LABEL_147;
              }
              uint64_t v51 = v44;
              unint64_t v52 = v143 + v50;
              Swift::Int v53 = v143 + v47;
              uint64_t v152 = *v154;
              ((void (*)(char *, Swift::Int, uint64_t))v152)(v136, v143 + v50, v3);
              if (v50 < v47 || v52 >= v143 + v48)
              {
                swift_arrayInitWithTakeFrontToBack();
              }
              else if (v50 != v47)
              {
                swift_arrayInitWithTakeBackToFront();
              }
              ((void (*)(Swift::Int, char *, uint64_t))v152)(v53, v136, v3);
              uint64_t v44 = v51;
              a1 = v148;
              Swift::Int v36 = (Swift::Int)v149;
              uint64_t v46 = v155;
            }
            ++v49;
            --v45;
            v47 -= v46;
            v48 -= v46;
            v50 += v46;
          }
          while (v49 < v36 + v45);
          uint64_t v20 = v134;
          id v22 = (char *)v137;
          Swift::Int v12 = v153;
        }
      }
    }
    if (v36 >= v12) {
      goto LABEL_57;
    }
    if (__OFSUB__(v36, v22)) {
      goto LABEL_140;
    }
    if (v36 - (uint64_t)v22 >= v133) {
      goto LABEL_57;
    }
    if (__OFADD__(v22, v133)) {
      goto LABEL_143;
    }
    Swift::Int v54 = (uint64_t)&v22[v133] >= v12 ? v12 : (Swift::Int)&v22[v133];
    if (v54 < (uint64_t)v22) {
      break;
    }
    if (v36 != v54)
    {
      id v134 = v20;
      Swift::Int v135 = v54;
      uint64_t v55 = *(void *)(v138 + 72);
      uint64_t v56 = *(void (**)(char *, uint64_t, uint64_t))(v138 + 16);
      uint64_t v140 = v44;
      uint64_t v141 = v56;
      uint64_t v155 = v55 * (v36 - 1);
      uint64_t v142 = v55;
      Swift::Int v57 = v36 * v55;
      do
      {
        uint64_t v59 = 0;
        os_log_type_t v149 = (char *)v36;
        Swift::Int v143 = v57;
        while (1)
        {
          uint64_t v152 = v22;
          Swift::Int v60 = *a1;
          Swift::Int v61 = v57 + v59 + *a1;
          id v62 = v147;
          id v63 = v141;
          v141(v147, v61, v3);
          uint64_t v64 = v155 + v59 + v60;
          uint64_t v65 = a1;
          uint64_t v66 = v146;
          v63(v146, v64, v3);
          sub_100046FCC();
          LODWORD(v153) = sub_1000B7560();
          uint64_t v67 = *v144;
          (*v144)(v66, v3);
          v67(v62, v3);
          if ((v153 & 1) == 0) {
            break;
          }
          uint64_t v68 = *v65;
          if (!*v65) {
            goto LABEL_145;
          }
          Swift::Int v57 = v143;
          uint64_t v69 = v68 + v155 + v59;
          char v70 = *v154;
          uint64_t v3 = v150;
          ((void (*)(char *, uint64_t, uint64_t))*v154)(v151, v68 + v143 + v59, v150);
          swift_arrayInitWithTakeFrontToBack();
          ((void (*)(uint64_t, char *, uint64_t))v70)(v69, v151, v3);
          v59 -= v142;
          id v22 = v152 + 1;
          a1 = v148;
          uint64_t v58 = v149;
          if (v149 == v152 + 1) {
            goto LABEL_50;
          }
        }
        uint64_t v58 = v149;
        uint64_t v3 = v150;
        a1 = v65;
        Swift::Int v57 = v143;
LABEL_50:
        Swift::Int v36 = (Swift::Int)(v58 + 1);
        v155 += v142;
        v57 += v142;
        id v22 = (char *)v137;
      }
      while (v36 != v135);
      Swift::Int v36 = v135;
      uint64_t v44 = v140;
      uint64_t v20 = v134;
    }
LABEL_57:
    if (v36 < (uint64_t)v22) {
      goto LABEL_135;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v140 = v44;
    os_log_type_t v149 = (char *)v36;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v20 = sub_100043540(0, *((void *)v20 + 2) + 1, 1, v20);
    }
    unint64_t v73 = *((void *)v20 + 2);
    unint64_t v72 = *((void *)v20 + 3);
    unint64_t v21 = v73 + 1;
    if (v73 >= v72 >> 1) {
      uint64_t v20 = sub_100043540((char *)(v72 > 1), v73 + 1, 1, v20);
    }
    *((void *)v20 + 2) = v21;
    int v74 = v20 + 32;
    uint64_t v75 = &v20[16 * v73 + 32];
    os_signpost_id_t v76 = v149;
    *(void *)uint64_t v75 = v137;
    *((void *)v75 + 1) = v76;
    if (v73)
    {
      while (1)
      {
        unint64_t v77 = v21 - 1;
        if (v21 >= 4)
        {
          unint64_t v82 = &v74[16 * v21];
          uint64_t v83 = *((void *)v82 - 8);
          uint64_t v84 = *((void *)v82 - 7);
          BOOL v88 = __OFSUB__(v84, v83);
          uint64_t v85 = v84 - v83;
          if (v88) {
            goto LABEL_124;
          }
          uint64_t v87 = *((void *)v82 - 6);
          uint64_t v86 = *((void *)v82 - 5);
          BOOL v88 = __OFSUB__(v86, v87);
          uint64_t v80 = v86 - v87;
          char v81 = v88;
          if (v88) {
            goto LABEL_125;
          }
          unint64_t v89 = v21 - 2;
          uint64_t v90 = &v74[16 * v21 - 32];
          uint64_t v92 = *(void *)v90;
          uint64_t v91 = *((void *)v90 + 1);
          BOOL v88 = __OFSUB__(v91, v92);
          uint64_t v93 = v91 - v92;
          if (v88) {
            goto LABEL_127;
          }
          BOOL v88 = __OFADD__(v80, v93);
          uint64_t v94 = v80 + v93;
          if (v88) {
            goto LABEL_130;
          }
          if (v94 >= v85)
          {
            os_signpost_type_t v112 = &v74[16 * v77];
            uint64_t v114 = *(void *)v112;
            uint64_t v113 = *((void *)v112 + 1);
            BOOL v88 = __OFSUB__(v113, v114);
            uint64_t v115 = v113 - v114;
            if (v88) {
              goto LABEL_134;
            }
            BOOL v105 = v80 < v115;
            goto LABEL_94;
          }
        }
        else
        {
          if (v21 != 3)
          {
            uint64_t v106 = *((void *)v20 + 4);
            uint64_t v107 = *((void *)v20 + 5);
            BOOL v88 = __OFSUB__(v107, v106);
            uint64_t v99 = v107 - v106;
            char v100 = v88;
            goto LABEL_88;
          }
          uint64_t v79 = *((void *)v20 + 4);
          uint64_t v78 = *((void *)v20 + 5);
          BOOL v88 = __OFSUB__(v78, v79);
          uint64_t v80 = v78 - v79;
          char v81 = v88;
        }
        if (v81) {
          goto LABEL_126;
        }
        unint64_t v89 = v21 - 2;
        unint64_t v95 = &v74[16 * v21 - 32];
        uint64_t v97 = *(void *)v95;
        uint64_t v96 = *((void *)v95 + 1);
        BOOL v98 = __OFSUB__(v96, v97);
        uint64_t v99 = v96 - v97;
        char v100 = v98;
        if (v98) {
          goto LABEL_129;
        }
        int64_t v101 = &v74[16 * v77];
        uint64_t v103 = *(void *)v101;
        uint64_t v102 = *((void *)v101 + 1);
        BOOL v88 = __OFSUB__(v102, v103);
        uint64_t v104 = v102 - v103;
        if (v88) {
          goto LABEL_132;
        }
        if (__OFADD__(v99, v104)) {
          goto LABEL_133;
        }
        if (v99 + v104 >= v80)
        {
          BOOL v105 = v80 < v104;
LABEL_94:
          if (v105) {
            unint64_t v77 = v89;
          }
          goto LABEL_96;
        }
LABEL_88:
        if (v100) {
          goto LABEL_128;
        }
        id v108 = &v74[16 * v77];
        uint64_t v110 = *(void *)v108;
        uint64_t v109 = *((void *)v108 + 1);
        BOOL v88 = __OFSUB__(v109, v110);
        uint64_t v111 = v109 - v110;
        if (v88) {
          goto LABEL_131;
        }
        if (v111 < v99) {
          goto LABEL_15;
        }
LABEL_96:
        unint64_t v116 = v77 - 1;
        if (v77 - 1 >= v21)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        Swift::Int v117 = *a1;
        if (!*a1) {
          goto LABEL_146;
        }
        uint64_t v118 = v20;
        uint64_t v119 = &v74[16 * v116];
        uint64_t v120 = *(void *)v119;
        uint64_t v121 = &v74[16 * v77];
        uint64_t v122 = *((void *)v121 + 1);
        uint64_t v123 = v140;
        sub_100042F78(v117 + *(void *)(v138 + 72) * *(void *)v119, v117 + *(void *)(v138 + 72) * *(void *)v121, v117 + *(void *)(v138 + 72) * v122, v139);
        uint64_t v140 = v123;
        if (v123) {
          goto LABEL_117;
        }
        if (v122 < v120) {
          goto LABEL_121;
        }
        if (v77 > *((void *)v118 + 2)) {
          goto LABEL_122;
        }
        *(void *)uint64_t v119 = v120;
        *(void *)&v74[16 * v116 + 8] = v122;
        unint64_t v124 = *((void *)v118 + 2);
        if (v77 >= v124) {
          goto LABEL_123;
        }
        uint64_t v20 = v118;
        unint64_t v21 = v124 - 1;
        memmove(&v74[16 * v77], v121 + 16, 16 * (v124 - 1 - v77));
        *((void *)v118 + 2) = v124 - 1;
        a1 = v148;
        if (v124 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v21 = 1;
LABEL_15:
    Swift::Int v12 = a1[1];
    int64_t v19 = v149;
    uint64_t v4 = v138;
    if ((uint64_t)v149 >= v12)
    {
      int64_t v18 = v132;
      goto LABEL_106;
    }
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  Swift::Int result = sub_1000B7B80();
  __break(1u);
  return result;
}

uint64_t sub_100042C84(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v31 = a1;
  uint64_t v7 = sub_100032E20(&qword_100104330);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v41 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  Swift::Int v37 = (char *)&v29 - v11;
  uint64_t result = __chkstk_darwin(v10);
  Swift::Int v36 = (char *)&v29 - v14;
  uint64_t v39 = a3;
  uint64_t v30 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    uint64_t v15 = v13 + 16;
    uint64_t v17 = *(void *)(v15 + 56);
    unint64_t v32 = (uint64_t (**)(char *, uint64_t))(v15 - 8);
    BOOL v33 = v16;
    int v34 = a4;
    uint64_t v35 = v15;
    int64_t v40 = (void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    uint64_t v44 = v17 * (v39 - 1);
    uint64_t v38 = v17;
    uint64_t v43 = v17 * v39;
LABEL_5:
    uint64_t v18 = 0;
    uint64_t v42 = v31;
    while (1)
    {
      uint64_t v19 = *a4;
      uint64_t v20 = v43 + v18 + *a4;
      unint64_t v21 = v36;
      id v22 = v33;
      v33(v36, v20, v7);
      uint64_t v23 = v37;
      v22(v37, v44 + v18 + v19, v7);
      sub_100046FCC();
      LOBYTE(v19) = sub_1000B7560();
      Swift::Int v24 = *v32;
      (*v32)(v23, v7);
      uint64_t v25 = v21;
      a4 = v34;
      uint64_t result = v24(v25, v7);
      if ((v19 & 1) == 0)
      {
LABEL_4:
        v44 += v38;
        v43 += v38;
        if (++v39 == v30) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v26 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v27 = v26 + v44 + v18;
      unint64_t v28 = *v40;
      (*v40)(v41, v26 + v43 + v18, v7);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v28)(v27, v41, v7);
      v18 -= v38;
      if (v39 == ++v42) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100042F78(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v57 = sub_100032E20(&qword_100104330);
  uint64_t v8 = *(void *)(v57 - 8);
  uint64_t v9 = __chkstk_darwin(v57);
  uint64_t v56 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v55 = (char *)&v47 - v11;
  uint64_t v13 = *(void *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_71;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_72;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v13;
  unint64_t v60 = a1;
  unint64_t v59 = a4;
  uint64_t v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v32 = a4 + v18;
      unint64_t v58 = a4 + v18;
      unint64_t v60 = a2;
      unint64_t v52 = (void (*)(char *, unint64_t, uint64_t))a1;
      if (v18 >= 1 && a1 < a2)
      {
        int v34 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
        uint64_t v54 = v8 + 16;
        Swift::Int v49 = (void (**)(char *, uint64_t))(v8 + 8);
        uint64_t v50 = v34;
        uint64_t v35 = -v13;
        unint64_t v51 = a4;
        uint64_t v48 = -v13;
        uint64_t v36 = v57;
        do
        {
          unint64_t v53 = a3 + v35;
          unint64_t v37 = a3;
          uint64_t v38 = v55;
          uint64_t v39 = v50;
          v50(v55, v32 + v35, v36);
          unint64_t v40 = a2 + v35;
          uint64_t v41 = v56;
          v39(v56, v40, v36);
          sub_100046FCC();
          LOBYTE(v39) = sub_1000B7560();
          uint64_t v42 = *v49;
          (*v49)(v41, v36);
          v42(v38, v36);
          if (v39)
          {
            uint64_t v35 = v48;
            a3 = v53;
            if (v37 < a2 || v53 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v43 = v51;
            }
            else
            {
              unint64_t v43 = v51;
              if (v37 != a2) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v60 += v35;
          }
          else
          {
            unint64_t v44 = v58;
            v58 += v48;
            a3 = v53;
            BOOL v45 = v37 < v44 || v53 >= v44;
            uint64_t v35 = v48;
            if (v45)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v40 = a2;
              unint64_t v43 = v51;
            }
            else
            {
              unint64_t v43 = v51;
              if (v37 != v44) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v40 = a2;
            }
          }
          unint64_t v32 = v58;
          if (v58 <= v43) {
            break;
          }
          a2 = v40;
        }
        while (v40 > (unint64_t)v52);
      }
      goto LABEL_69;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v53 = a4 + v17;
    unint64_t v58 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      unint64_t v52 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
      uint64_t v54 = v8 + 16;
      uint64_t v50 = (void (*)(char *, unint64_t, uint64_t))(v8 + 8);
      uint64_t v20 = v57;
      do
      {
        uint64_t v21 = v13;
        unint64_t v22 = a3;
        uint64_t v23 = v55;
        Swift::Int v24 = v52;
        v52(v55, a2, v20);
        uint64_t v25 = v56;
        v24(v56, a4, v20);
        sub_100046FCC();
        LOBYTE(v24) = sub_1000B7560();
        uint64_t v26 = *(void (**)(char *, uint64_t))v50;
        (*(void (**)(char *, uint64_t))v50)(v25, v20);
        v26(v23, v20);
        unint64_t v27 = v60;
        if (v24)
        {
          uint64_t v13 = v21;
          unint64_t v28 = a2 + v21;
          if (v60 < a2 || v60 >= v28)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v22;
          }
          else
          {
            a3 = v22;
            if (v60 == a2) {
              unint64_t v27 = a2;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        else
        {
          uint64_t v13 = v21;
          unint64_t v30 = v59 + v21;
          if (v60 < v59 || v60 >= v30)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v22;
          }
          else
          {
            a3 = v22;
            if (v60 != v59) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v59 = v30;
          unint64_t v28 = a2;
        }
        unint64_t v60 = v27 + v13;
        a4 = v59;
        if (v59 >= v53) {
          break;
        }
        a2 = v28;
      }
      while (v28 < a3);
    }
LABEL_69:
    sub_10004363C(&v60, &v59, (uint64_t *)&v58);
    return 1;
  }
LABEL_73:
  uint64_t result = sub_1000B7BE0();
  __break(1u);
  return result;
}

char *sub_100043540(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100032E20(&qword_100103B88);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_10004363C(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = sub_100032E20(&qword_100104330);
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_18;
  }
  if (v8 / v7 < 0)
  {
LABEL_19:
    uint64_t result = sub_1000B7BE0();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_100043780(uint64_t a1)
{
  return sub_100043540(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_100043794(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000442E8(a1, a2, a3, (void *)*v3, &qword_100103AE8, &qword_100103728);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1000437C4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100044528(a1, a2, a3, (void *)*v3, &qword_100103B80, (uint64_t (*)(void))&type metadata accessor for URL);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100043800(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100043A00(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_100043820(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100043B6C(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100043840(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100043D14(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100043860(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100043E9C(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_100043880(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100043FFC(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1000438A0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100044528(a1, a2, a3, (void *)*v3, &qword_100103AD8, (uint64_t (*)(void))_s8ActivityVMa);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1000438DC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100044528(a1, a2, a3, (void *)*v3, &qword_1001038F8, (uint64_t (*)(void))_s3TagVMa);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100043918(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100044528(a1, a2, a3, (void *)*v3, &qword_100103AD0, _s14descr1000EDEE9C14AudioRecordingV8FragmentVMa);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100043954(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10004415C(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100043974(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000442E8(a1, a2, a3, (void *)*v3, &qword_100103900, &qword_100103908);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1000439A4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100044528(a1, a2, a3, (void *)*v3, &qword_100103AC8, _s14descr1000EDEE9C14AudioRecordingV17TranscriptSegmentVMa);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1000439E0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100044770(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_100043A00(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100032E20(&qword_100103700);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1000B7BE0();
  __break(1u);
  return result;
}

uint64_t sub_100043B6C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100032E20(&qword_100103B00);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    sub_100032E20(&qword_100103AF8);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1000B7BE0();
  __break(1u);
  return result;
}

uint64_t sub_100043D14(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100032E20(&qword_100103B68);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 4;
  int64_t v14 = a4 + 4;
  size_t v15 = 4 * v8;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v10 + 4, a4 + 4, v15 * 8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    sub_100032E20(&qword_100103B70);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1000B7BE0();
  __break(1u);
  return result;
}

uint64_t sub_100043E9C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100032E20(&qword_100103B78);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1000B7BE0();
  __break(1u);
  return result;
}

uint64_t sub_100043FFC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100032E20(&qword_100103B60);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1000B7BE0();
  __break(1u);
  return result;
}

uint64_t sub_10004415C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100032E20(&qword_100103AA8);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    sub_100032E20(&qword_1001036F8);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1000B7BE0();
  __break(1u);
  return result;
}

uint64_t sub_1000442E8(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100032E20(a5);
  uint64_t v13 = *(void *)(sub_100032E20(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(sub_100032E20(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  unint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  Swift::Int v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_1000B7BE0();
  __break(1u);
  return result;
}

uint64_t sub_100044528(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100032E20(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  unint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  Swift::Int v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_1000B7BE0();
  __break(1u);
  return result;
}

uint64_t sub_100044770(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100032E20(&qword_100103AC0);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1000B7BE0();
  __break(1u);
  return result;
}

id sub_1000448D0(void *a1, __int16 a2, void *a3, uint64_t a4, uint64_t a5, Class a6, uint64_t a7, uint64_t a8, double a9)
{
  size_t v17 = objc_allocWithZone(a6);

  return sub_100044AD4(a1, a2 & 0x101, a3, a4, a5, v17, a9, a7, a8);
}

id sub_10004496C(void *a1, __int16 a2, void *a3, uint64_t a4, void *a5, unsigned char *a6, double a7)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  a6[OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension17ICArchiveImporter_isImporting] = 0;
  uint64_t v15 = OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension17ICArchiveImporter_errors;
  uint64_t v16 = a6;
  *(void *)&a6[v15] = sub_100031840((uint64_t)_swiftEmptyArrayStorage);
  *(void *)&v16[OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension17ICArchiveImporter_saveBatchSize] = 32;
  v16[OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension17ICArchiveImporter_didReceiveMemoryWarning] = 0;
  size_t v17 = &v16[OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension17ICArchiveImporter_didReceiveMemoryWarningObserver];
  *size_t v17 = 0u;
  v17[1] = 0u;
  *(void *)&v16[OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension17ICArchiveImporter_context] = a1;
  uint64_t v18 = (double *)&v16[OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension17ICArchiveImporter_configuration];
  *(unsigned char *)uint64_t v18 = a2 & 1;
  *((unsigned char *)v18 + 1) = HIBYTE(a2) & 1;
  v18[1] = a7;
  *((void *)v18 + 2) = a3;
  *((void *)v18 + 3) = a4;
  uint64_t v19 = &v16[OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension17ICArchiveImporter_fileManager];
  *uint64_t v19 = a5;
  v19[1] = &protocol witness table for NSFileManager;
  id v20 = a3;
  id v21 = a5;
  id v22 = a1;

  v25.receiver = v16;
  v25.super_class = ObjectType;
  id v23 = [super init];
  sub_100039D84();

  return v23;
}

id sub_100044AD4(void *a1, __int16 a2, void *a3, uint64_t a4, uint64_t a5, unsigned char *a6, double a7, uint64_t a8, uint64_t a9)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  a6[OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension17ICArchiveImporter_isImporting] = 0;
  uint64_t v18 = OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension17ICArchiveImporter_errors;
  uint64_t v19 = a6;
  *(void *)&a6[v18] = sub_100031840((uint64_t)_swiftEmptyArrayStorage);
  *(void *)&v19[OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension17ICArchiveImporter_saveBatchSize] = 32;
  v19[OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension17ICArchiveImporter_didReceiveMemoryWarning] = 0;
  id v20 = &v19[OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension17ICArchiveImporter_didReceiveMemoryWarningObserver];
  *id v20 = 0u;
  v20[1] = 0u;
  *(void *)&v19[OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension17ICArchiveImporter_context] = a1;
  id v21 = (double *)&v19[OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension17ICArchiveImporter_configuration];
  *(unsigned char *)id v21 = a2 & 1;
  *((unsigned char *)v21 + 1) = HIBYTE(a2) & 1;
  v21[1] = a7;
  *((void *)v21 + 2) = a3;
  *((void *)v21 + 3) = a4;
  id v22 = &v19[OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension17ICArchiveImporter_fileManager];
  *id v22 = a5;
  v22[1] = a9;
  id v23 = a3;
  swift_unknownObjectRetain();
  id v24 = a1;

  v27.receiver = v19;
  v27.super_class = ObjectType;
  [super init];
  sub_100039D84();

  swift_unknownObjectRelease();
  return v25;
}

uint64_t sub_100044C3C(void *a1)
{
  return sub_1000442E8(0, a1[2], 0, a1, &qword_100103978, &qword_100104330);
}

BOOL sub_100044C74(uint64_t a1, void *a2)
{
  sub_100032FC8(a1, (uint64_t)&v7, &qword_1001036F8);
  uint64_t v3 = v8;
  if (v8)
  {
    sub_100032FB8(&v7, &v5);
    sub_100047028(&v5, v6);
    [a2 removeObserver:sub_1000B7DA0()];
    swift_unknownObjectRelease();
    sub_100037F98((uint64_t)&v5);
  }
  return v3 == 0;
}

uint64_t sub_100044D18(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_100032E20((uint64_t *)&unk_1001042F0);
  __chkstk_darwin(v5 - 8);
  long long v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000B6F10();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  BOOL v33 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v10);
  uint64_t v46 = (char *)v30 - v13;
  uint64_t v47 = (char *)_swiftEmptyArrayStorage;
  uint64_t v42 = *(void *)(a1 + 16);
  if (!v42)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    sub_100038E30((uint64_t)v7, (uint64_t *)&unk_1001042F0);
    return (uint64_t)v47;
  }
  unint64_t v14 = 0;
  uint64_t v38 = v7;
  uint64_t v39 = v9 + 48;
  uint64_t v44 = a2;
  BOOL v45 = (void (**)(char *, char *, uint64_t))(v9 + 32);
  unint64_t v32 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  v30[1] = v2;
  uint64_t v31 = (void *)(a2 + 56);
  uint64_t v40 = v9 + 56;
  uint64_t v41 = v9 + 16;
  v30[0] = (v9 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  uint64_t v36 = v8;
  uint64_t v37 = a1;
  uint64_t v35 = v9;
  while (1)
  {
    if (v14 >= *(void *)(a1 + 16))
    {
      __break(1u);
      goto LABEL_30;
    }
    unint64_t v15 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v16 = *(void *)(v9 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v7, a1 + v15 + v16 * v14, v8);
    int v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v34(v7, 0, 1, v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
      goto LABEL_28;
    }
    unint64_t v43 = *v45;
    v43(v46, v7, v8);
    uint64_t v17 = sub_1000B6E50();
    uint64_t v19 = v18;
    uint64_t v20 = *(void *)(a2 + 16);
    if (!v20) {
      goto LABEL_20;
    }
    uint64_t v21 = v17;
    if (*(void *)(v44 + 32) != v17 || *(void *)(v44 + 40) != v18)
    {
      uint64_t result = sub_1000B7DC0();
      if ((result & 1) == 0) {
        break;
      }
    }
LABEL_3:
    swift_bridgeObjectRelease();
    uint64_t v8 = v36;
    uint64_t result = (*v32)(v46, v36);
    long long v7 = v38;
LABEL_4:
    a2 = v44;
    ++v14;
    a1 = v37;
    uint64_t v9 = v35;
    if (v14 == v42)
    {
      v34(v7, 1, 1, v8);
      goto LABEL_28;
    }
  }
  if (v20 == 1)
  {
LABEL_20:
    swift_bridgeObjectRelease();
    uint64_t v8 = v36;
    uint64_t v26 = (uint64_t (*)(char *, char *, uint64_t))v43;
    v43(v33, v46, v36);
    objc_super v27 = v47;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1000437C4(0, *((void *)v27 + 2) + 1, 1);
      objc_super v27 = v47;
    }
    long long v7 = v38;
    unint64_t v29 = *((void *)v27 + 2);
    unint64_t v28 = *((void *)v27 + 3);
    if (v29 >= v28 >> 1)
    {
      sub_1000437C4(v28 > 1, v29 + 1, 1);
      objc_super v27 = v47;
    }
    *((void *)v27 + 2) = v29 + 1;
    uint64_t result = v26(&v27[v15 + v29 * v16], v33, v8);
    uint64_t v47 = v27;
    goto LABEL_4;
  }
  id v22 = v31;
  uint64_t v23 = 1;
  while (1)
  {
    uint64_t v24 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (*(v22 - 1) == v21 && *v22 == v19) {
      goto LABEL_3;
    }
    uint64_t result = sub_1000B7DC0();
    if (result) {
      goto LABEL_3;
    }
    v22 += 2;
    ++v23;
    if (v24 == v20) {
      goto LABEL_20;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_100045148(uint64_t a1, uint64_t a2)
{
  uint64_t result = _swiftEmptyArrayStorage;
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = (uint64_t *)(a1 + 40);
    do
    {
      if (*(void *)(a2 + 16))
      {
        uint64_t v7 = *(v6 - 1);
        uint64_t v8 = *v6;
        swift_bridgeObjectRetain();
        unint64_t v9 = sub_10006A250(v7, v8);
        if ((v10 & 1) != 0
          && (id v11 = [*(id *)(*(void *)(a2 + 56) + 8 * v9) identifier]) != 0)
        {
          uint64_t v12 = v11;
          sub_1000B75B0();

          sub_1000B7580();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1000B76C0();
          if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1000B7710();
          }
          sub_1000B7740();
          sub_1000B7700();
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      v6 += 2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return result;
}

unint64_t sub_1000452B0(unint64_t result)
{
  if (result > 4) {
    return 0;
  }
  return result;
}

void sub_1000452C0()
{
  sub_10003CCD4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(char **)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_1000452E0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_100045338(uint64_t result, char a2, void *a3)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v6 = result;
    uint64_t v7 = (void *)swift_bridgeObjectRetain();
    uint64_t v9 = v7[4];
    uint64_t v8 = v7[5];
    char v10 = (void *)v7[6];
    id v11 = (void *)*a3;
    swift_bridgeObjectRetain();
    id v48 = v10;
    unint64_t v13 = sub_10006A250(v9, v8);
    uint64_t v14 = v11[2];
    BOOL v15 = (v12 & 1) == 0;
    uint64_t v16 = v14 + v15;
    if (__OFADD__(v14, v15))
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    char v17 = v12;
    if (v11[3] < v16)
    {
      sub_100063280(v16, a2 & 1);
      unint64_t v18 = sub_10006A250(v9, v8);
      if ((v17 & 1) != (v19 & 1))
      {
LABEL_27:
        uint64_t result = sub_1000B7DF0();
        __break(1u);
        return result;
      }
      unint64_t v13 = v18;
      uint64_t v20 = (void *)*a3;
      if ((v17 & 1) == 0) {
        goto LABEL_12;
      }
LABEL_9:
      id v21 = *(id *)(v20[7] + 8 * v13);
      swift_bridgeObjectRelease();

      uint64_t v22 = v20[7];
      *(void *)(v22 + 8 * v13) = v21;
      uint64_t v23 = v3 - 1;
      if (v3 == 1) {
        return swift_bridgeObjectRelease();
      }
LABEL_16:
      for (uint64_t i = (void **)(v6 + 72); ; i += 3)
      {
        uint64_t v33 = (uint64_t)*(i - 2);
        uint64_t v32 = (uint64_t)*(i - 1);
        int v34 = *i;
        uint64_t v35 = (void *)*a3;
        swift_bridgeObjectRetain();
        id v36 = v34;
        unint64_t v37 = sub_10006A250(v33, v32);
        uint64_t v39 = v35[2];
        BOOL v40 = (v38 & 1) == 0;
        BOOL v26 = __OFADD__(v39, v40);
        uint64_t v41 = v39 + v40;
        if (v26) {
          break;
        }
        char v42 = v38;
        if (v35[3] < v41)
        {
          sub_100063280(v41, 1);
          unint64_t v37 = sub_10006A250(v33, v32);
          if ((v42 & 1) != (v43 & 1)) {
            goto LABEL_27;
          }
        }
        uint64_t v44 = (void *)*a3;
        if (v42)
        {
          uint64_t v29 = 8 * v37;
          id v30 = *(id *)(v44[7] + 8 * v37);
          swift_bridgeObjectRelease();

          uint64_t v31 = v44[7];
          *(void *)(v31 + v29) = v30;
        }
        else
        {
          v44[(v37 >> 6) + 8] |= 1 << v37;
          BOOL v45 = (uint64_t *)(v44[6] + 16 * v37);
          *BOOL v45 = v33;
          v45[1] = v32;
          *(void *)(v44[7] + 8 * v37) = v36;
          uint64_t v46 = v44[2];
          BOOL v26 = __OFADD__(v46, 1);
          uint64_t v47 = v46 + 1;
          if (v26) {
            goto LABEL_26;
          }
          v44[2] = v47;
        }
        if (!--v23) {
          return swift_bridgeObjectRelease();
        }
      }
      goto LABEL_25;
    }
    if (a2)
    {
      uint64_t v20 = (void *)*a3;
      if (v12) {
        goto LABEL_9;
      }
    }
    else
    {
      sub_100065068();
      uint64_t v20 = (void *)*a3;
      if (v17) {
        goto LABEL_9;
      }
    }
LABEL_12:
    v20[(v13 >> 6) + 8] |= 1 << v13;
    uint64_t v24 = (uint64_t *)(v20[6] + 16 * v13);
    *uint64_t v24 = v9;
    v24[1] = v8;
    *(void *)(v20[7] + 8 * v13) = v48;
    uint64_t v25 = v20[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    void v20[2] = v27;
    uint64_t v23 = v3 - 1;
    if (v3 == 1) {
      return swift_bridgeObjectRelease();
    }
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_1000455FC(uint64_t a1, void *a2, uint64_t a3)
{
  id v65 = a2;
  uint64_t v5 = sub_100032E20(&qword_100103A20);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v55 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v64 = (char *)&v51 - v8;
  uint64_t v68 = sub_1000B6FD0();
  uint64_t v9 = *(void *)(v68 - 8);
  uint64_t v10 = __chkstk_darwin(v68 - 8);
  unint64_t v52 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v71 = (char *)&v51 - v12;
  uint64_t v13 = _s3TagVMa();
  uint64_t v62 = *(void *)(v13 - 8);
  uint64_t v63 = v13;
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v61 = (uint64_t)&v51 - v17;
  uint64_t v18 = *(void *)(a1 + 56);
  uint64_t v56 = a1 + 56;
  uint64_t v19 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & v18;
  uint64_t v22 = (id *)(a3 + OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension17ICArchiveImporter_configuration);
  uint64_t v66 = a1;
  swift_bridgeObjectRetain();
  unint64_t v60 = v22;
  swift_beginAccess();
  int64_t v23 = 0;
  uint64_t v67 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  int64_t v57 = (unint64_t)(v19 + 63) >> 6;
  unint64_t v58 = (void (**)(char *, uint64_t, uint64_t))(v9 + 32);
  unint64_t v59 = (void (**)(char *, uint64_t))(v9 + 8);
  unint64_t v53 = 0x80000001000C8610;
  uint64_t v54 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  while (1)
  {
    if (v21)
    {
      uint64_t v69 = (v21 - 1) & v21;
      int64_t v70 = v23;
      unint64_t v26 = __clz(__rbit64(v21)) | (v23 << 6);
      goto LABEL_24;
    }
    int64_t v27 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v27 >= v57) {
      return swift_release();
    }
    unint64_t v28 = *(void *)(v56 + 8 * v27);
    int64_t v29 = v23 + 1;
    if (!v28)
    {
      int64_t v29 = v23 + 2;
      if (v23 + 2 >= v57) {
        return swift_release();
      }
      unint64_t v28 = *(void *)(v56 + 8 * v29);
      if (!v28)
      {
        int64_t v29 = v23 + 3;
        if (v23 + 3 >= v57) {
          return swift_release();
        }
        unint64_t v28 = *(void *)(v56 + 8 * v29);
        if (!v28)
        {
          int64_t v29 = v23 + 4;
          if (v23 + 4 >= v57) {
            return swift_release();
          }
          unint64_t v28 = *(void *)(v56 + 8 * v29);
          if (!v28) {
            break;
          }
        }
      }
    }
LABEL_23:
    uint64_t v69 = (v28 - 1) & v28;
    int64_t v70 = v29;
    unint64_t v26 = __clz(__rbit64(v28)) + (v29 << 6);
LABEL_24:
    uint64_t v31 = v61;
    sub_100046CD4(*(void *)(v66 + 48) + *(void *)(v62 + 72) * v26, v61);
    sub_100046D38(v31, (uint64_t)v16);
    char v32 = *(unsigned char *)v60;
    id v33 = v60[2];
    swift_bridgeObjectRetain();
    id v34 = v65;
    NSString v35 = sub_1000B7580();
    swift_bridgeObjectRelease();
    id v36 = [self hashtagWithDisplayText:v35 account:v34 createIfNecessary:1];

    if (!v36) {
      goto LABEL_37;
    }
    uint64_t v37 = (uint64_t)v64;
    if (v32)
    {
      NSString v38 = sub_1000B7580();
      [v36 setDisplayText:v38];

      [v36 unmarkForDeletion];
      NSString v39 = sub_1000B7580();
      [v36 updateChangeCountWithReason:v39];
    }
    BOOL v40 = v16;
    sub_100032FC8((uint64_t)v16, v37, &qword_100103A20);
    uint64_t v41 = v68;
    char v42 = *v67;
    if ((*v67)(v37, 1, v68) != 1)
    {
      (*v58)(v71, v37, v41);
      uint64_t v16 = v40;
      int64_t v23 = v70;
      goto LABEL_5;
    }
    id v43 = [v36 creationDate];
    if (!v43)
    {
      uint64_t v46 = (uint64_t)v55;
      uint64_t v41 = v68;
      (*v54)(v55, 1, 1, v68);
      uint64_t v16 = v40;
      int64_t v23 = v70;
LABEL_32:
      sub_1000B6FB0();
      sub_100038E30(v46, &qword_100103A20);
      goto LABEL_33;
    }
    uint64_t v44 = v43;
    BOOL v45 = v52;
    sub_1000B6FA0();

    uint64_t v46 = (uint64_t)v55;
    uint64_t v47 = v45;
    uint64_t v41 = v68;
    id v48 = *v58;
    (*v58)(v55, (uint64_t)v47, v68);
    (*v54)((char *)v46, 0, 1, v41);
    unsigned int v49 = v42(v46, 1, v41);
    uint64_t v16 = v40;
    int64_t v23 = v70;
    if (v49 == 1) {
      goto LABEL_32;
    }
    v48(v71, v46, v41);
LABEL_33:
    sub_100038E30(v37, &qword_100103A20);
LABEL_5:
    uint64_t v24 = v71;
    Class isa = sub_1000B6F60().super.isa;
    (*v59)(v24, v41);
    [v36 setCreationDate:isa];

    sub_100046D9C((uint64_t)v16, (uint64_t (*)(void))_s3TagVMa);
    unint64_t v21 = v69;
  }
  uint64_t v30 = v23 + 5;
  if (v23 + 5 >= v57) {
    return swift_release();
  }
  unint64_t v28 = *(void *)(v56 + 8 * v30);
  if (v28)
  {
    int64_t v29 = v23 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v29 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v29 >= v57) {
      return swift_release();
    }
    unint64_t v28 = *(void *)(v56 + 8 * v29);
    ++v30;
    if (v28) {
      goto LABEL_23;
    }
  }
LABEL_36:
  __break(1u);
LABEL_37:
  uint64_t result = sub_1000B7B90();
  __break(1u);
  return result;
}

void sub_100045D24(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1000B7A50();
    sub_100038DC8(0, &qword_100103B50);
    sub_100046F64();
    sub_1000B77A0();
    uint64_t v3 = v19;
    uint64_t v18 = v20;
    uint64_t v4 = v21;
    uint64_t v5 = v22;
    unint64_t v6 = v23;
  }
  else
  {
    uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v18 = a1 + 56;
    uint64_t v4 = ~v7;
    uint64_t v8 = -v7;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v6 = v9 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
  }
  int64_t v17 = (unint64_t)(v4 + 64) >> 6;
  if (v3 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v6)
    {
      uint64_t v10 = (v6 - 1) & v6;
      unint64_t v11 = __clz(__rbit64(v6)) | (v5 << 6);
      uint64_t v12 = v5;
      goto LABEL_29;
    }
    int64_t v14 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      break;
    }
    if (v14 >= v17) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v18 + 8 * v14);
    uint64_t v12 = v5 + 1;
    if (!v15)
    {
      uint64_t v12 = v5 + 2;
      if (v5 + 2 >= v17) {
        goto LABEL_32;
      }
      unint64_t v15 = *(void *)(v18 + 8 * v12);
      if (!v15)
      {
        uint64_t v12 = v5 + 3;
        if (v5 + 3 >= v17) {
          goto LABEL_32;
        }
        unint64_t v15 = *(void *)(v18 + 8 * v12);
        if (!v15)
        {
          uint64_t v12 = v5 + 4;
          if (v5 + 4 >= v17) {
            goto LABEL_32;
          }
          unint64_t v15 = *(void *)(v18 + 8 * v12);
          if (!v15)
          {
            uint64_t v12 = v5 + 5;
            if (v5 + 5 >= v17) {
              goto LABEL_32;
            }
            unint64_t v15 = *(void *)(v18 + 8 * v12);
            if (!v15)
            {
              uint64_t v16 = v5 + 6;
              while (v17 != v16)
              {
                unint64_t v15 = *(void *)(v18 + 8 * v16++);
                if (v15)
                {
                  uint64_t v12 = v16 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_100038F7C();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v10 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + (v12 << 6);
LABEL_29:
    id v13 = *(id *)(*(void *)(v3 + 48) + 8 * v11);
    if (!v13) {
      goto LABEL_32;
    }
    while (1)
    {
      [*(id *)(a2 + OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension17ICArchiveImporter_context) refreshObject:v13 mergeChanges:0];

      uint64_t v5 = v12;
      unint64_t v6 = v10;
      if ((v3 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (sub_1000B7A60())
      {
        sub_100038DC8(0, &qword_100103B50);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v13 = v24;
        swift_unknownObjectRelease();
        uint64_t v12 = v5;
        uint64_t v10 = v6;
        if (v24) {
          continue;
        }
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

void *sub_100046008(uint64_t a1, uint64_t a2, void *a3, uint64_t (**a4)(void, void, int64_t, id, uint64_t, uint64_t, double), void *a5)
{
  int64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    sub_100043840(0, v6, 0);
    uint64_t v8 = *(void *)(sub_100032E20(&qword_100104330) - 8);
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v23 = *(void *)(v8 + 72);
    while (1)
    {
      uint64_t v10 = sub_10003F5FC(v9, a3, a4, a5);
      if (v5) {
        break;
      }
      uint64_t v14 = v10;
      uint64_t v15 = v11;
      uint64_t v16 = v12;
      char v17 = v13;
      unint64_t v19 = _swiftEmptyArrayStorage[2];
      unint64_t v18 = _swiftEmptyArrayStorage[3];
      unint64_t v20 = v19 + 1;
      if (v19 >= v18 >> 1)
      {
        sub_100043840(v18 > 1, v19 + 1, 1);
        unint64_t v20 = v19 + 1;
      }
      _swiftEmptyArrayStorage[2] = v20;
      uint64_t v21 = &_swiftEmptyArrayStorage[4 * v19];
      void v21[4] = v14;
      v21[5] = v15;
      v21[6] = v16;
      *((unsigned char *)v21 + 56) = v17 & 1;
      v9 += v23;
      if (!--v6) {
        return _swiftEmptyArrayStorage;
      }
    }
    swift_release();
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100046198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v77 = a2;
  uint64_t v7 = sub_100032E20(&qword_100103A20);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v64 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v71 = (uint64_t)&v62 - v10;
  uint64_t v70 = sub_1000B6FD0();
  uint64_t v11 = *(void *)(v70 - 8);
  uint64_t v12 = __chkstk_darwin(v70 - 8);
  uint64_t v62 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v68 = (char *)&v62 - v14;
  uint64_t v15 = _s3TagVMa();
  uint64_t v75 = *(void *)(v15 - 8);
  uint64_t v76 = v15;
  uint64_t v16 = __chkstk_darwin(v15);
  unint64_t v18 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v74 = (uint64_t)&v62 - v19;
  uint64_t v20 = *(void *)(a1 + 56);
  uint64_t v65 = a1 + 56;
  uint64_t v21 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v22 = -1;
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  unint64_t v23 = v22 & v20;
  uint64_t v24 = (double *)(a4 + OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension17ICArchiveImporter_configuration);
  uint64_t v79 = a1;
  swift_bridgeObjectRetain();
  unint64_t v73 = v24;
  uint64_t result = swift_beginAccess();
  int64_t v26 = 0;
  int64_t v66 = (unint64_t)(v21 + 63) >> 6;
  uint64_t v78 = a3;
  uint64_t v72 = a3 + 8;
  uint64_t v27 = (uint64_t)v18;
  uint64_t v80 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  uint64_t v67 = (void (**)(char *, uint64_t, uint64_t))(v11 + 32);
  uint64_t v63 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  uint64_t v69 = (void (**)(char *, uint64_t))(v11 + 8);
  while (1)
  {
    if (v23)
    {
      int64_t v81 = v26;
      uint64_t v82 = (v23 - 1) & v23;
      unint64_t v30 = __clz(__rbit64(v23)) | (v26 << 6);
      goto LABEL_21;
    }
    BOOL v31 = __OFADD__(v26, 1);
    int64_t v32 = v26 + 1;
    if (v31)
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v32 >= v66) {
      return swift_release();
    }
    unint64_t v33 = *(void *)(v65 + 8 * v32);
    if (!v33) {
      break;
    }
LABEL_20:
    int64_t v81 = v32;
    uint64_t v82 = (v33 - 1) & v33;
    unint64_t v30 = __clz(__rbit64(v33)) + (v32 << 6);
LABEL_21:
    uint64_t v35 = v74;
    sub_100046CD4(*(void *)(v79 + 48) + *(void *)(v75 + 72) * v30, v74);
    sub_100046D38(v35, v27);
    unsigned int v36 = *(unsigned __int8 *)v73;
    int v37 = *((unsigned __int8 *)v73 + 1);
    double v38 = v73[1];
    NSString v39 = (void *)*((void *)v73 + 2);
    uint64_t v84 = *((void *)v73 + 3);
    uint64_t ObjectType = swift_getObjectType();
    BOOL v40 = (uint64_t *)(v27 + *(int *)(v76 + 20));
    uint64_t v41 = *v40;
    uint64_t v42 = v40[1];
    uint64_t v43 = v78;
    uint64_t v44 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t, double))(v78 + 8);
    if (v37) {
      int v45 = 256;
    }
    else {
      int v45 = 0;
    }
    uint64_t v46 = v45 | v36;
    id v47 = v39;
    uint64_t v48 = v85;
    uint64_t v49 = v44(v41, v42, v46, v39, v84, ObjectType, v43, v38);
    uint64_t v85 = v48;
    if (v48)
    {

      sub_100046D9C(v27, (uint64_t (*)(void))_s3TagVMa);
      return swift_release();
    }
    uint64_t v50 = (void *)v49;
    uint64_t v51 = v71;
    sub_100032FC8(v27, v71, &qword_100103A20);
    unint64_t v52 = *v80;
    uint64_t v53 = v70;
    if ((*v80)(v51, 1, v70) != 1)
    {
      unint64_t v28 = v68;
      (*v67)(v68, v51, v53);
      int64_t v26 = v81;
      goto LABEL_5;
    }
    id v54 = [v50 creationDate];
    if (!v54)
    {
      uint64_t v61 = (uint64_t)v64;
      (*v63)(v64, 1, 1, v53);
      int64_t v26 = v81;
LABEL_30:
      unint64_t v28 = v68;
      sub_1000B6FB0();
      sub_100038E30(v61, &qword_100103A20);
      goto LABEL_31;
    }
    uint64_t v55 = v54;
    uint64_t v56 = v62;
    sub_1000B6FA0();

    int64_t v57 = *v67;
    uint64_t v58 = v27;
    unint64_t v59 = v64;
    (*v67)(v64, (uint64_t)v56, v53);
    (*v63)(v59, 0, 1, v53);
    unsigned int v60 = v52((uint64_t)v59, 1, v53);
    uint64_t v61 = (uint64_t)v59;
    uint64_t v27 = v58;
    int64_t v26 = v81;
    if (v60 == 1) {
      goto LABEL_30;
    }
    unint64_t v28 = v68;
    v57(v68, v61, v53);
LABEL_31:
    sub_100038E30(v51, &qword_100103A20);
LABEL_5:
    Class isa = sub_1000B6F60().super.isa;
    (*v69)(v28, v53);
    [v50 setCreationDate:isa];

    uint64_t result = sub_100046D9C(v27, (uint64_t (*)(void))_s3TagVMa);
    unint64_t v23 = v82;
  }
  int64_t v34 = v32 + 1;
  if (v32 + 1 >= v66) {
    return swift_release();
  }
  unint64_t v33 = *(void *)(v65 + 8 * v34);
  if (v33) {
    goto LABEL_19;
  }
  int64_t v34 = v32 + 2;
  if (v32 + 2 >= v66) {
    return swift_release();
  }
  unint64_t v33 = *(void *)(v65 + 8 * v34);
  if (v33) {
    goto LABEL_19;
  }
  int64_t v34 = v32 + 3;
  if (v32 + 3 >= v66) {
    return swift_release();
  }
  unint64_t v33 = *(void *)(v65 + 8 * v34);
  if (v33) {
    goto LABEL_19;
  }
  int64_t v34 = v32 + 4;
  if (v32 + 4 >= v66) {
    return swift_release();
  }
  unint64_t v33 = *(void *)(v65 + 8 * v34);
  if (v33)
  {
LABEL_19:
    int64_t v32 = v34;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v32 = v34 + 1;
    if (__OFADD__(v34, 1)) {
      break;
    }
    if (v32 >= v66) {
      return swift_release();
    }
    unint64_t v33 = *(void *)(v65 + 8 * v32);
    ++v34;
    if (v33) {
      goto LABEL_20;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

unint64_t sub_100046894()
{
  unint64_t result = qword_100103A48;
  if (!qword_100103A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100103A48);
  }
  return result;
}

unint64_t sub_1000468F0()
{
  unint64_t result = qword_100103A50;
  if (!qword_100103A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100103A50);
  }
  return result;
}

unint64_t sub_100046948()
{
  unint64_t result = qword_100103A58;
  if (!qword_100103A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100103A58);
  }
  return result;
}

unint64_t sub_1000469A0()
{
  unint64_t result = qword_100103A60;
  if (!qword_100103A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100103A60);
  }
  return result;
}

unint64_t sub_1000469F8()
{
  unint64_t result = qword_100103A68;
  if (!qword_100103A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100103A68);
  }
  return result;
}

uint64_t type metadata accessor for ICArchiveImporter()
{
  return self;
}

void destroy for ICArchiveImporter.Configuration(uint64_t a1)
{
}

uint64_t initializeWithCopy for ICArchiveImporter.Configuration(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 16) = v3;
  id v4 = (id)v3;
  return a1;
}

uint64_t assignWithCopy for ICArchiveImporter.Configuration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  long long v3 = *(void **)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  uint64_t v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v3;
  id v6 = v3;

  *(void *)(a1 + 24) = v4;
  return a1;
}

uint64_t assignWithTake for ICArchiveImporter.Configuration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ICArchiveImporter.Configuration(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ICArchiveImporter.Configuration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICArchiveImporter.Configuration()
{
  return &type metadata for ICArchiveImporter.Configuration;
}

ValueMetadata *type metadata accessor for ICArchiveImporter.Errors()
{
  return &type metadata for ICArchiveImporter.Errors;
}

uint64_t sub_100046C38(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100046C80()
{
  unint64_t result = qword_100103AE0;
  if (!qword_100103AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100103AE0);
  }
  return result;
}

uint64_t sub_100046CD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s3TagVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100046D38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s3TagVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100046D9C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_100046DFC()
{
  unint64_t result = qword_100103B40;
  if (!qword_100103B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100103B40);
  }
  return result;
}

uint64_t sub_100046E50(uint64_t a1)
{
  return a1;
}

uint64_t sub_100046EA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100032E20(&qword_100103B48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100046F0C(uint64_t a1)
{
  return a1;
}

uint64_t sub_100046F38(uint64_t a1)
{
  return a1;
}

unint64_t sub_100046F64()
{
  unint64_t result = qword_100103B58;
  if (!qword_100103B58)
  {
    sub_100038DC8(255, &qword_100103B50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100103B58);
  }
  return result;
}

unint64_t sub_100046FCC()
{
  unint64_t result = qword_1001039C0;
  if (!qword_1001039C0)
  {
    sub_100032F70(&qword_100104330);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001039C0);
  }
  return result;
}

void *sub_100047028(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_10004706C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000470A4()
{
}

uint64_t sub_1000470AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000470BC()
{
  return swift_release();
}

uint64_t sub_1000470C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100032E20(&qword_1001036F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_10004712C()
{
}

id sub_100047144(double a1, uint64_t a2, uint64_t (**a3)(void, void, int64_t, id, uint64_t, uint64_t, double), int a4, void *a5, uint64_t a6)
{
  uint64_t v179 = a6;
  id v180 = a5;
  LODWORD(v178) = a4;
  uint64_t v177 = a3;
  uint64_t v185 = sub_1000B7030();
  uint64_t v181 = *(void *)(v185 - 8);
  __chkstk_darwin(v185);
  v182 = (char *)&v158 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100032E20(&qword_100103BE0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  v184 = (char *)&v158 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v183 = (uint64_t)&v158 - v11;
  uint64_t v12 = sub_100032E20(&qword_100103A20);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v172 = (uint64_t)&v158 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v171 = (char *)&v158 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  id v169 = (char *)&v158 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  v170 = (char *)&v158 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v167 = (char *)&v158 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v168 = (char *)&v158 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v165 = (char *)&v158 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v166 = (char *)&v158 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  v173 = (uint64_t *)((char *)&v158 - v30);
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v164 = (char *)&v158 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v35 = (char *)&v158 - v34;
  __chkstk_darwin(v33);
  uint64_t v174 = (uint64_t)&v158 - v36;
  uint64_t v37 = sub_1000B6FD0();
  int64_t v176 = *(void *)(v37 - 8);
  uint64_t v38 = __chkstk_darwin(v37);
  BOOL v40 = (char *)&v158 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __chkstk_darwin(v38);
  uint64_t v43 = (char *)&v158 - v42;
  uint64_t v44 = __chkstk_darwin(v41);
  uint64_t v46 = (char *)&v158 - v45;
  uint64_t v47 = __chkstk_darwin(v44);
  uint64_t v49 = (char *)&v158 - v48;
  __chkstk_darwin(v47);
  uint64_t v51 = (char *)&v158 - v50;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v53 = v175;
  id v54 = v186;
  id result = (id)v177[4](*(void *)(v175 + 8), *(void *)(v175 + 16), v178 & 0x101, v180, v179, ObjectType, a1);
  if (!v54)
  {
    uint64_t v159 = v43;
    uint64_t v160 = v46;
    v163 = v40;
    id v186 = result;
    uint64_t v162 = (int *)type metadata accessor for ICNoteArchiveModel();
    uint64_t v56 = v174;
    sub_100032FC8(v53 + v162[10], v174, &qword_100103A20);
    int64_t v57 = v176;
    uint64_t v58 = *(uint64_t (***)(void, void, int64_t, id, uint64_t, uint64_t, double))(v176 + 48);
    int64_t v161 = v176 + 48;
    uint64_t v177 = v58;
    int v59 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v58)(v56, 1, v37);
    uint64_t v60 = v37;
    int64_t v61 = v57;
    uint64_t v158 = 0;
    if (v59 == 1)
    {
      sub_1000B6FC0();
      sub_100038E30(v56, &qword_100103A20);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(v49, v56, v60);
    }
    uint64_t v62 = (uint64_t)v35;
    uint64_t v63 = v60;
    sub_1000B6F70();
    uint64_t v64 = *(void (**)(char *, uint64_t))(v61 + 8);
    v64(v49, v63);
    Class isa = sub_1000B6F60().super.isa;
    int64_t v178 = (int64_t)v64;
    uint64_t v179 = v61 + 8;
    v64(v51, v63);
    [v186 setCreationDate:isa];

    sub_100032FC8(v53 + v162[11], v62, &qword_100103A20);
    int64_t v66 = (unsigned int (*)(void, void, void))v177;
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v177)(v62, 1, v63) == 1)
    {
      uint64_t v67 = v159;
      sub_1000B6FC0();
      sub_100038E30(v62, &qword_100103A20);
    }
    else
    {
      uint64_t v67 = v159;
      (*(void (**)(char *, uint64_t, uint64_t))(v61 + 32))(v159, v62, v63);
    }
    uint64_t v68 = v160;
    sub_1000B6F70();
    uint64_t v69 = v67;
    uint64_t v70 = (void (*)(char *, uint64_t))v178;
    ((void (*)(char *, uint64_t))v178)(v69, v63);
    Class v71 = sub_1000B6F60().super.isa;
    uint64_t v174 = v63;
    v70(v68, v63);
    [v186 setModificationDate:v71];

    uint64_t v72 = v162;
    uint64_t v73 = v53;
    if (*(void *)(v53 + v162[12] + 8)) {
      NSString v74 = sub_1000B7580();
    }
    else {
      NSString v74 = 0;
    }
    int64_t v75 = v176;
    id v76 = v186;
    [v186 setTitle:v74, v158];

    [v76 setIsPinned:*(unsigned char *)(v73 + v72[13]) & 1];
    [v76 setIsSystemPaper:*(unsigned char *)(v73 + v72[14]) & 1];
    [v76 setPaperStyleType:word_1000DFD1C[*(char *)(v73 + v72[15])]];
    int v77 = *(unsigned __int8 *)(v73 + v72[16]);
    if (v77) {
      unsigned int v78 = 2;
    }
    else {
      unsigned int v78 = 1;
    }
    if (v77 == 2) {
      uint64_t v79 = 0;
    }
    else {
      uint64_t v79 = v78;
    }
    [v76 setPreferredBackgroundType:v79];
    uint64_t v80 = v174;
    uint64_t v81 = 0;
    switch(*(unsigned char *)(v73 + v72[17]))
    {
      case 1:
        uint64_t v81 = 1;
        break;
      case 2:
        uint64_t v81 = 2;
        break;
      case 3:
        uint64_t v81 = [v186 attachmentViewType];
        break;
      default:
        break;
    }
    [v186 setAttachmentViewType:v81];
    if (*(void *)(v73 + v72[18] + 8)) {
      NSString v82 = sub_1000B7580();
    }
    else {
      NSString v82 = 0;
    }
    [v186 setHostApplicationIdentifier:v82];

    uint64_t v83 = (void (*)(void, void, void, void))v173;
    sub_100032FC8(v73 + v72[19], (uint64_t)v173, &qword_100103A20);
    if (v66(v83, 1, v80) == 1)
    {
      uint64_t v84 = v164;
      v173 = *(void **)(v75 + 56);
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v173)(v164, 1, 1, v80);
    }
    else
    {
      uint64_t v85 = v163;
      (*(void (**)(char *, void (*)(void, void, void, void), uint64_t))(v75 + 32))(v163, v83, v80);
      id v86 = v180;
      uint64_t v87 = v164;
      sub_1000B6F70();
      BOOL v88 = v85;
      int64_t v66 = (unsigned int (*)(void, void, void))v177;
      ((void (*)(char *, uint64_t))v178)(v88, v80);
      v173 = *(void **)(v75 + 56);
      ((void (*)(char *, void, uint64_t, uint64_t))v173)(v87, 0, 1, v80);

      uint64_t v84 = v87;
    }
    if (v66(v84, 1, v80) == 1)
    {
      Class v89 = 0;
    }
    else
    {
      Class v89 = sub_1000B6F60().super.isa;
      ((void (*)(char *, uint64_t))v178)(v84, v80);
    }
    uint64_t v90 = (uint64_t)v165;
    [v186 setLastOpenedDate:v89];

    sub_100032FC8(v73 + v72[20], v90, &qword_100103A20);
    if (v66(v90, 1, v80) == 1)
    {
      uint64_t v91 = v166;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v173)(v166, 1, 1, v80);
    }
    else
    {
      uint64_t v92 = v163;
      (*(void (**)(char *, uint64_t, uint64_t))(v75 + 32))(v163, v90, v174);
      id v93 = v180;
      uint64_t v94 = v166;
      sub_1000B6F70();
      unint64_t v95 = v92;
      int64_t v66 = (unsigned int (*)(void, void, void))v177;
      ((void (*)(char *, uint64_t))v178)(v95, v174);
      uint64_t v80 = v174;
      ((void (*)(char *, void, uint64_t, uint64_t))v173)(v94, 0, 1, v174);

      uint64_t v91 = v94;
    }
    if (v66(v91, 1, v80) == 1)
    {
      Class v96 = 0;
    }
    else
    {
      Class v96 = sub_1000B6F60().super.isa;
      ((void (*)(char *, uint64_t))v178)(v91, v80);
    }
    uint64_t v97 = (uint64_t)v167;
    [v186 setLastActivitySummaryViewedDate:v96];

    sub_100032FC8(v73 + v72[21], v97, &qword_100103A20);
    if (v66(v97, 1, v80) == 1)
    {
      BOOL v98 = v168;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v173)(v168, 1, 1, v80);
    }
    else
    {
      uint64_t v99 = v163;
      (*(void (**)(char *, uint64_t, uint64_t))(v75 + 32))(v163, v97, v174);
      id v100 = v180;
      BOOL v98 = v168;
      sub_1000B6F70();
      ((void (*)(char *, uint64_t))v178)(v99, v174);
      uint64_t v80 = v174;
      ((void (*)(char *, void, uint64_t, uint64_t))v173)(v98, 0, 1, v174);
    }
    uint64_t v101 = (uint64_t)v169;
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v177)(v98, 1, v80) == 1)
    {
      Class v102 = 0;
    }
    else
    {
      Class v102 = sub_1000B6F60().super.isa;
      ((void (*)(char *, uint64_t))v178)(v98, v80);
    }
    uint64_t v103 = v163;
    [v186 setLastActivityRecentUpdatesViewedDate:v102];

    sub_100032FC8(v73 + v72[22], v101, &qword_100103A20);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v177)(v101, 1, v80) == 1)
    {
      uint64_t v104 = v170;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v173)(v170, 1, 1, v80);
      uint64_t v105 = v80;
    }
    else
    {
      int64_t v106 = v75;
      uint64_t v105 = v80;
      (*(void (**)(char *, uint64_t, uint64_t))(v106 + 32))(v103, v101, v80);
      id v107 = v180;
      id v108 = v170;
      sub_1000B6F70();
      ((void (*)(char *, uint64_t))v178)(v103, v80);
      ((void (*)(char *, void, uint64_t, uint64_t))v173)(v108, 0, 1, v80);

      uint64_t v104 = v108;
    }
    uint64_t v109 = v181;
    uint64_t v110 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v177;
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v177)(v104, 1, v105) == 1)
    {
      Class v111 = 0;
    }
    else
    {
      uint64_t v112 = v109;
      uint64_t v113 = v104;
      Class v111 = sub_1000B6F60().super.isa;
      uint64_t v114 = v113;
      uint64_t v109 = v112;
      ((void (*)(char *, uint64_t))v178)(v114, v105);
    }
    [v186 setRecentUpdatesGenerationDate:v111];

    uint64_t v115 = v172;
    sub_100032FC8(v73 + v72[23], v172, &qword_100103A20);
    if (v110(v115, 1, v105) == 1)
    {
      unint64_t v116 = v171;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v173)(v171, 1, 1, v105);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v176 + 32))(v103, v115, v105);
      id v117 = v180;
      unint64_t v116 = v171;
      sub_1000B6F70();
      ((void (*)(char *, uint64_t))v178)(v103, v105);
      uint64_t v110 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v177;
      ((void (*)(char *, void, uint64_t, uint64_t))v173)(v116, 0, 1, v105);
    }
    if (v110((uint64_t)v116, 1, v105) == 1)
    {
      Class v118 = 0;
    }
    else
    {
      Class v118 = sub_1000B6F60().super.isa;
      ((void (*)(char *, uint64_t))v178)(v116, v105);
    }
    [v186 setLastAttributionsViewedDate:v118];

    Class v119 = *(Class *)(v73 + v72[26]);
    if (v119)
    {
      id v120 = objc_allocWithZone((Class)ICOutlineState);
      sub_100051F7C((unint64_t *)&unk_100104370, (void (*)(uint64_t))&type metadata accessor for UUID);
      swift_bridgeObjectRetain();
      Class v121 = sub_1000B7770().super.isa;
      swift_bridgeObjectRelease();
      id v122 = [v120 initWithCollapsedUUIDs:v121];

      Class v119 = (Class)[v122 data];
      if (v119)
      {
        uint64_t v123 = sub_1000B6F30();
        unint64_t v125 = v124;

        Class v119 = sub_1000B6F20().super.isa;
        sub_1000452E0(v123, v125);
      }
    }
    [v186 setOutlineStateData:v119];

    uint64_t v126 = v72[28];
    uint64_t v127 = v185;
    if (*(void *)(v73 + v126)) {
      unint64_t v128 = *(void *)(v73 + v126);
    }
    else {
      unint64_t v128 = sub_100031C44((uint64_t)_swiftEmptyArrayStorage);
    }
    id v180 = (id)v128;
    uint64_t v129 = *(void *)(v128 + 64);
    uint64_t v177 = (uint64_t (**)(void, void, int64_t, id, uint64_t, uint64_t, double))(v128 + 64);
    uint64_t v130 = 1 << *(unsigned char *)(v128 + 32);
    uint64_t v131 = -1;
    if (v130 < 64) {
      uint64_t v131 = ~(-1 << v130);
    }
    unint64_t v132 = v131 & v129;
    int64_t v178 = (unint64_t)(v130 + 63) >> 6;
    uint64_t v179 = v109 + 16;
    Swift::Int v133 = (void (**)(char *, uint64_t, uint64_t))(v109 + 32);
    id v134 = (void (**)(char *, uint64_t))(v109 + 8);
    int64_t v176 = v178 - 1;
    swift_bridgeObjectRetain();
    int64_t v135 = 0;
    unint64_t v136 = (uint64_t *)&unk_100103BE8;
    if (!v132) {
      goto LABEL_67;
    }
LABEL_65:
    unint64_t v142 = __clz(__rbit64(v132));
    v132 &= v132 - 1;
    unint64_t v143 = v142 | (v135 << 6);
    uint64_t v144 = v184;
LABEL_66:
    uint64_t v145 = v180;
    (*(void (**)(char *, unint64_t, uint64_t))(v181 + 16))(v144, *((void *)v180 + 6) + *(void *)(v181 + 72) * v143, v127);
    os_log_type_t v146 = (uint64_t *)(v145[7] + 16 * v143);
    uint64_t v147 = sub_100032E20(v136);
    uint64_t v148 = &v144[*(int *)(v147 + 48)];
    uint64_t v149 = *v146;
    uint64_t v150 = v146[1];
    *(void *)uint64_t v148 = v149;
    *((void *)v148 + 1) = v150;
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v147 - 8) + 56))(v144, 0, 1, v147);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v155 = (uint64_t)v144;
      uint64_t v156 = v183;
      sub_10004EA80(v155, v183, &qword_100103BE0);
      uint64_t v157 = sub_100032E20(v136);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v157 - 8) + 48))(v156, 1, v157) == 1) {
        break;
      }
      Swift::Int v137 = v136;
      uint64_t v138 = v182;
      (*v133)(v182, v156, v127);
      NSString v139 = sub_1000B7580();
      swift_bridgeObjectRelease();
      Class v140 = sub_1000B7000().super.isa;
      [v186 addUserID:v139 forReplicaID:v140];

      uint64_t v127 = v185;
      uint64_t v141 = v138;
      unint64_t v136 = v137;
      (*v134)(v141, v127);
      if (v132) {
        goto LABEL_65;
      }
LABEL_67:
      int64_t v151 = v135 + 1;
      uint64_t v144 = v184;
      if (__OFADD__(v135, 1))
      {
        __break(1u);
LABEL_89:
        __break(1u);
        JUMPOUT(0x1000484E8);
      }
      if (v151 < v178)
      {
        unint64_t v152 = (unint64_t)v177[v151];
        if (v152) {
          goto LABEL_70;
        }
        int64_t v153 = v135 + 2;
        ++v135;
        if (v151 + 1 < v178)
        {
          unint64_t v152 = (unint64_t)v177[v153];
          if (v152) {
            goto LABEL_73;
          }
          int64_t v135 = v151 + 1;
          if (v151 + 2 < v178)
          {
            unint64_t v152 = (unint64_t)v177[v151 + 2];
            if (v152)
            {
              v151 += 2;
              goto LABEL_70;
            }
            int64_t v153 = v151 + 3;
            int64_t v135 = v151 + 2;
            if (v151 + 3 < v178)
            {
              unint64_t v152 = (unint64_t)v177[v153];
              if (v152)
              {
LABEL_73:
                int64_t v151 = v153;
LABEL_70:
                unint64_t v132 = (v152 - 1) & v152;
                unint64_t v143 = __clz(__rbit64(v152)) + (v151 << 6);
                int64_t v135 = v151;
                goto LABEL_66;
              }
              while (1)
              {
                int64_t v151 = v153 + 1;
                if (__OFADD__(v153, 1)) {
                  goto LABEL_89;
                }
                if (v151 >= v178) {
                  break;
                }
                unint64_t v152 = (unint64_t)v177[v151];
                ++v153;
                if (v152) {
                  goto LABEL_70;
                }
              }
              int64_t v135 = v176;
            }
          }
        }
      }
      uint64_t v154 = sub_100032E20(v136);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v154 - 8) + 56))(v144, 1, 1, v154);
      unint64_t v132 = 0;
    }
    swift_release();
    return v186;
  }
  return result;
}

id sub_1000484F8(id a1, uint64_t a2, __int16 a3, uint64_t a4, char *a5, double a6)
{
  uint64_t v14 = type metadata accessor for ICNoteArchiveModel();
  uint64_t v15 = (uint64_t *)(v6 + *(int *)(v14 + 100));
  uint64_t v16 = v15[1];
  if (!v16)
  {
    uint64_t v21 = (uint64_t *)(v6 + *(int *)(v14 + 96));
    uint64_t v22 = v21[10];
    if (!v22) {
      return 0;
    }
    uint64_t v23 = v21[1];
    unint64_t v24 = v21[2];
    uint64_t v25 = v21[3];
    unint64_t v26 = v21[4];
    uint64_t v27 = v21[5];
    int64_t v61 = a1;
    unint64_t v29 = v21[6];
    uint64_t v28 = v21[7];
    unint64_t v31 = v21[8];
    uint64_t v30 = v21[9];
    uint64_t v32 = v21[11];
    unint64_t v33 = v21[12];
    uint64_t v63 = *v21;
    aBlock[6] = *v21;
    aBlock[7] = v23;
    aBlock[8] = v24;
    aBlock[9] = v25;
    aBlock[10] = v26;
    aBlock[11] = v27;
    aBlock[12] = v29;
    aBlock[13] = v28;
    aBlock[14] = v31;
    aBlock[15] = v30;
    uint64_t v59 = v23;
    uint64_t v60 = v30;
    aBlock[16] = v22;
    aBlock[17] = v32;
    aBlock[18] = v33;
    unint64_t v67 = v24;
    sub_10004E998(v23, v24);
    unint64_t v64 = v26;
    uint64_t v65 = v25;
    unint64_t v34 = v26;
    uint64_t v35 = v27;
    sub_10004E998(v25, v34);
    unint64_t v62 = v29;
    unint64_t v36 = v29;
    uint64_t v37 = v28;
    sub_10004E998(v27, v36);
    sub_10004E998(v28, v31);
    swift_bridgeObjectRetain();
    sub_10004E998(v32, v33);
    sub_10008FABC(v61);
    id v38 = [v61 noteData];
    if (v38)
    {
      uint64_t v39 = v38;
      Class isa = sub_1000B6F20().super.isa;
      [v39 setData:isa];
    }
    a1 = [v61 noteData];
    sub_10004E8CC(v63, v59, v67, v65, v64, v35, v62, v37, v31, v60, v22, v32, v33);
    return a1;
  }
  uint64_t v17 = v15[2];
  uint64_t v18 = *v15;
  uint64_t v19 = sub_10004CDDC(a2);
  uint64_t v20 = (objc_class *)sub_100098CCC(v19, (uint64_t)a1, (uint64_t)&off_1000F1F40, a3 & 0x101, a4, a5, a6, v18, v16, v17);
  swift_release();
  if (v7) {
    return a1;
  }
  uint64_t v68 = v20;
  id result = [a1 textStorage];
  if (result)
  {
    uint64_t v42 = result;
    [result beginSkippingTimestampUpdates];
    id v43 = [v42 mergeableString];
    id v44 = [v42 ic_range];
    uint64_t v46 = v45;
    id v47 = [objc_allocWithZone((Class)NSAttributedString) init];
    [v43 replaceCharactersInRange:v44 withAttributedString:v46];

    id v48 = [v42 mergeableString];
    v49.super.Class isa = v68;
    sub_1000B79A0(v49, 0);

    id v50 = [v42 mergeableString];
    id v66 = [v42 ic_range];
    uint64_t v52 = v51;
    uint64_t v53 = swift_allocObject();
    *(void *)(v53 + 16) = a1;
    uint64_t v54 = swift_allocObject();
    *(void *)(v54 + 16) = sub_10004EA28;
    *(void *)(v54 + 24) = v53;
    aBlock[4] = sub_10004EA40;
    aBlock[5] = v54;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004C6F0;
    void aBlock[3] = &unk_1000EFD38;
    uint64_t v55 = _Block_copy(aBlock);
    id v56 = a1;
    swift_retain();
    swift_release();
    [v50 enumerateEditsInRange:v66 usingBlock:v52, v55];

    _Block_release(v55);
    LOBYTE(v55) = swift_isEscapingClosureAtFileLocation();
    id result = (id)swift_release();
    if ((v55 & 1) == 0)
    {
      [v42 endSkippingTimestampUpdates];
      id v57 = [v56 noteData];
      if (v57)
      {
        uint64_t v58 = v57;
        [v57 setNeedsToBeSaved:1];
      }
      a1 = [v56 noteData];
      swift_release();

      return a1;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1000489CC(uint64_t a1)
{
  uint64_t v4 = sub_100032E20(&qword_100103BC0);
  __chkstk_darwin(v4 - 8);
  uint64_t v35 = (uint64_t)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100032E20(&qword_100103BC8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000B7330();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v31 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = _s8ActivityVMa();
  uint64_t v12 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v14 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(v1 + *(int *)(type metadata accessor for ICNoteArchiveModel() + 108));
  if (!v15) {
    return 0;
  }
  v27[2] = a1;
  unint64_t v37 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v16 = *(void *)(v15 + 16);
  if (!v16) {
    goto LABEL_13;
  }
  v27[0] = v15;
  v27[1] = v2;
  uint64_t v17 = v15 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v18 = *(void *)(v12 + 72);
  unint64_t v33 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v34 = v18;
  uint64_t v28 = (void (**)(char *, uint64_t))(v10 + 8);
  unint64_t v29 = (void (**)(char *, char *, uint64_t))(v10 + 32);
  swift_bridgeObjectRetain();
  unint64_t v36 = v14;
  do
  {
    sub_100052070(v17, (uint64_t)v14, (uint64_t (*)(void))_s8ActivityVMa);
    ICInternalSettingsIsAlexandriaDemoModeEnabled();
    ICInternalSettingsIsAlexandriaDemoModeEnabled();
    sub_1000561A0((uint64_t)v8);
    if ((*v33)(v8, 1, v9) == 1)
    {
      sub_100038E30((uint64_t)v8, &qword_100103BC8);
      uint64_t v32 = sub_100038DC8(0, (unint64_t *)&qword_100103820);
      uint64_t v19 = v8;
      uint64_t v20 = v35;
      sub_100056974(v35);
      uint64_t v14 = v36;
      sub_1000B7930();
      uint64_t v21 = v20;
      uint64_t v8 = v19;
      sub_100038E30(v21, &qword_100103BC0);
      sub_1000520D8((uint64_t)v14, (uint64_t (*)(void))_s8ActivityVMa);
    }
    else
    {
      uint64_t v22 = v31;
      (*v29)(v31, v8, v9);
      sub_100038DC8(0, (unint64_t *)&qword_100103820);
      uint64_t v23 = v35;
      sub_100056974(v35);
      uint64_t v24 = sub_1000B7920();
      uint64_t v25 = v23;
      uint64_t v14 = v36;
      sub_100038E30(v25, &qword_100103BC0);
      (*v28)(v22, v9);
      sub_1000520D8((uint64_t)v14, (uint64_t (*)(void))_s8ActivityVMa);
      if (!v24) {
        goto LABEL_8;
      }
    }
    sub_1000B76C0();
    if (*(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1000B7710();
    }
    sub_1000B7740();
    sub_1000B7700();
LABEL_8:
    v17 += v34;
    --v16;
  }
  while (v16);
  swift_bridgeObjectRelease();
LABEL_13:
  sub_1000B7950();
  return sub_1000B7940();
}

uint64_t sub_100048E78()
{
  uint64_t v0 = sub_1000B7490();
  sub_100038F18(v0, qword_100103B90);
  sub_100038E8C(v0, (uint64_t)qword_100103B90);
  return sub_1000B7470();
}

unint64_t sub_100048EC4(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x696669746E656469;
      break;
    case 2:
      return result;
    case 3:
      unint64_t result = 0x6954746E65726170;
      break;
    case 4:
    case 5:
    case 12:
      unint64_t result = 0xD000000000000013;
      break;
    case 6:
      unint64_t result = 0x4164657461657263;
      break;
    case 7:
      unint64_t result = 0x6465696669646F6DLL;
      break;
    case 8:
      unint64_t result = 0x656C746974;
      break;
    case 9:
      unint64_t result = 0x64656E6E69507369;
      break;
    case 10:
      unint64_t result = 0x4E6B636975517369;
      break;
    case 11:
      unint64_t result = 0x7974537265706170;
      break;
    case 13:
      unint64_t result = 0xD000000000000012;
      break;
    case 14:
      unint64_t result = 0xD000000000000019;
      break;
    case 15:
      unint64_t result = 0x7441646577656976;
      break;
    case 16:
      unint64_t result = 0xD000000000000017;
      break;
    case 17:
      unint64_t result = 0xD000000000000015;
      break;
    case 18:
      unint64_t result = 0xD000000000000018;
      break;
    case 19:
      unint64_t result = 0xD000000000000014;
      break;
    case 20:
      unint64_t result = 0x6574707972636E65;
      break;
    case 21:
      unint64_t result = 0x746E65746E6F63;
      break;
    case 22:
      unint64_t result = 0xD000000000000017;
      break;
    case 23:
      unint64_t result = 0x6974697669746361;
      break;
    case 24:
      unint64_t result = 0xD000000000000023;
      break;
    default:
      unint64_t result = 0x6E65644965707974;
      break;
  }
  return result;
}

BOOL sub_1000491A8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_1000491BC()
{
  Swift::UInt v1 = *v0;
  sub_1000B7E40();
  sub_1000B7E50(v1);
  return sub_1000B7E70();
}

void sub_100049204()
{
  sub_1000B7E50(*v0);
}

Swift::Int sub_100049230()
{
  Swift::UInt v1 = *v0;
  sub_1000B7E40();
  sub_1000B7E50(v1);
  return sub_1000B7E70();
}

unint64_t sub_100049274()
{
  return sub_100048EC4(*v0);
}

uint64_t sub_10004927C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10004D6C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000492A4()
{
  return 0;
}

void sub_1000492B0(unsigned char *a1@<X8>)
{
  *a1 = 25;
}

uint64_t sub_1000492BC(uint64_t a1)
{
  unint64_t v2 = sub_1000519B8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000492F8(uint64_t a1)
{
  unint64_t v2 = sub_1000519B8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100049334(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100032E20(&qword_100103D28);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100047028(a1, a1[3]);
  sub_1000519B8();
  sub_1000B7EB0();
  LOBYTE(v18) = *v3;
  char v25 = 0;
  sub_100051A0C();
  sub_1000B7D50();
  if (!v2)
  {
    LOBYTE(v18) = 1;
    sub_1000B7D10();
    LOBYTE(v18) = 2;
    sub_1000B7CC0();
    LOBYTE(v18) = 3;
    sub_1000B7CC0();
    LOBYTE(v18) = 4;
    sub_1000B7CD0();
    LOBYTE(v18) = 5;
    sub_1000B7CD0();
    uint64_t v9 = (int *)type metadata accessor for ICNoteArchiveModel();
    LOBYTE(v18) = 6;
    sub_1000B6FD0();
    sub_100051F7C(&qword_100103D40, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_1000B7D00();
    LOBYTE(v18) = 7;
    sub_1000B7D00();
    LOBYTE(v18) = 8;
    sub_1000B7CC0();
    LOBYTE(v18) = 9;
    sub_1000B7CD0();
    LOBYTE(v18) = 10;
    sub_1000B7CD0();
    LOBYTE(v18) = v3[v9[15]];
    char v25 = 11;
    sub_100051A60();
    sub_1000B7D00();
    LOBYTE(v18) = v3[v9[16]];
    char v25 = 12;
    sub_100051AB4();
    sub_1000B7D00();
    LOBYTE(v18) = v3[v9[17]];
    char v25 = 13;
    sub_100051B08();
    sub_1000B7D00();
    LOBYTE(v18) = 14;
    sub_1000B7CC0();
    LOBYTE(v18) = 15;
    sub_1000B7D00();
    LOBYTE(v18) = 16;
    sub_1000B7D00();
    LOBYTE(v18) = 17;
    sub_1000B7D00();
    LOBYTE(v18) = 18;
    sub_1000B7D00();
    LOBYTE(v18) = 19;
    sub_1000B7D00();
    uint64_t v10 = &v3[v9[24]];
    uint64_t v11 = *((void *)v10 + 12);
    long long v12 = *((_OWORD *)v10 + 1);
    long long v18 = *(_OWORD *)v10;
    long long v19 = v12;
    long long v13 = *((_OWORD *)v10 + 3);
    long long v20 = *((_OWORD *)v10 + 2);
    long long v21 = v13;
    long long v14 = *((_OWORD *)v10 + 5);
    long long v22 = *((_OWORD *)v10 + 4);
    long long v23 = v14;
    uint64_t v24 = v11;
    char v25 = 20;
    sub_100051B5C();
    sub_1000B7D00();
    uint64_t v15 = &v3[v9[25]];
    uint64_t v16 = *((void *)v15 + 2);
    long long v18 = *(_OWORD *)v15;
    *(void *)&long long v19 = v16;
    char v25 = 21;
    sub_100051BB0();
    sub_1000B7D00();
    *(void *)&long long v18 = *(void *)&v3[v9[26]];
    char v25 = 22;
    sub_100032E20(&qword_100103D70);
    sub_100051E54(&qword_100103D78, &qword_100103D80);
    sub_1000B7D00();
    *(void *)&long long v18 = *(void *)&v3[v9[27]];
    char v25 = 23;
    sub_100032E20(&qword_100103D88);
    sub_100051EE8(&qword_100103D90, &qword_100103D98);
    sub_1000B7D00();
    *(void *)&long long v18 = *(void *)&v3[v9[28]];
    char v25 = 24;
    sub_100032E20(&qword_100103DA0);
    sub_100051C04();
    sub_1000B7D00();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100049AA8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v67 = a2;
  uint64_t v3 = sub_100032E20(&qword_100103A20);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v66 = (uint64_t)v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v65 = (uint64_t)v62 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v64 = (uint64_t)v62 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v63 = (uint64_t)v62 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v68 = (uint64_t)v62 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  *(void *)&long long v74 = (char *)v62 - v15;
  __chkstk_darwin(v14);
  *(void *)&long long v75 = (char *)v62 - v16;
  uint64_t v77 = sub_100032E20(&qword_100103DB0);
  uint64_t v76 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  long long v18 = (char *)v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for ICNoteArchiveModel();
  long long v20 = (int *)(v19 - 8);
  __chkstk_darwin(v19);
  long long v22 = (char *)v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  *long long v22 = 3;
  *(_OWORD *)(v22 + 40) = 0u;
  *(_OWORD *)(v22 + 24) = 0u;
  *((_WORD *)v22 + 28) = 514;
  long long v23 = &v22[v20[12]];
  uint64_t v24 = sub_1000B6FD0();
  char v25 = *(void (**)(void))(*(void *)(v24 - 8) + 56);
  uint64_t v92 = (uint64_t)v23;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v25)(v23, 1, 1, v24);
  uint64_t v91 = &v22[v20[13]];
  v25();
  unint64_t v26 = &v22[v20[14]];
  *(void *)unint64_t v26 = 0;
  *((void *)v26 + 1) = 0;
  uint64_t v90 = v26;
  *(void *)&long long v73 = v20[15];
  v22[v73] = 2;
  *(void *)&long long v72 = v20[16];
  v22[v72] = 2;
  *(void *)&long long v71 = v20[17];
  v22[v71] = 7;
  uint64_t v70 = v20[18];
  v22[v70] = 2;
  uint64_t v69 = v20[19];
  v22[v69] = 3;
  uint64_t v27 = &v22[v20[20]];
  *(void *)uint64_t v27 = 0;
  *((void *)v27 + 1) = 0;
  id v86 = v27;
  uint64_t v87 = &v22[v20[21]];
  v25();
  uint64_t v84 = &v22[v20[22]];
  v25();
  NSString v82 = &v22[v20[23]];
  v25();
  uint64_t v81 = &v22[v20[24]];
  v25();
  uint64_t v80 = &v22[v20[25]];
  v25();
  uint64_t v28 = &v22[v20[26]];
  *((void *)v28 + 12) = 0;
  *((_OWORD *)v28 + 4) = 0u;
  *((_OWORD *)v28 + 5) = 0u;
  *((_OWORD *)v28 + 2) = 0u;
  *((_OWORD *)v28 + 3) = 0u;
  *(_OWORD *)uint64_t v28 = 0u;
  *((_OWORD *)v28 + 1) = 0u;
  unint64_t v29 = (uint64_t *)&v22[v20[27]];
  uint64_t *v29 = 0;
  v29[1] = 0;
  v29[2] = 0;
  uint64_t v83 = v20[28];
  *(void *)&v22[v83] = 0;
  uint64_t v85 = v20[29];
  *(void *)&v22[v85] = 0;
  uint64_t v88 = v20[30];
  Class v89 = a1;
  *(void *)&v22[v88] = 0;
  sub_100047028(a1, a1[3]);
  sub_1000519B8();
  unsigned int v78 = v18;
  uint64_t v30 = v79;
  sub_1000B7EA0();
  if (v30)
  {
    uint64_t v32 = (uint64_t)v91;
    uint64_t v31 = v92;
    sub_100037F98((uint64_t)v89);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100038E30(v31, &qword_100103A20);
    sub_100038E30(v32, &qword_100103A20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100038E30((uint64_t)v87, &qword_100103A20);
    sub_100038E30((uint64_t)v84, &qword_100103A20);
    sub_100038E30((uint64_t)v82, &qword_100103A20);
    sub_100038E30((uint64_t)v81, &qword_100103A20);
    sub_100038E30((uint64_t)v80, &qword_100103A20);
    sub_10004E8CC(*(void *)v28, *((void *)v28 + 1), *((void *)v28 + 2), *((void *)v28 + 3), *((void *)v28 + 4), *((void *)v28 + 5), *((void *)v28 + 6), *((void *)v28 + 7), *((void *)v28 + 8), *((void *)v28 + 9), *((void *)v28 + 10), *((void *)v28 + 11), *((void *)v28 + 12));
    sub_10004E888(*v29, v29[1]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v100 = 0;
    sub_1000332D0();
    sub_1000B7CA0();
    uint64_t v34 = (uint64_t)v91;
    uint64_t v33 = v92;
    *long long v22 = v93;
    LOBYTE(v93) = 1;
    *((void *)v22 + 1) = sub_1000B7C60();
    *((void *)v22 + 2) = v36;
    LOBYTE(v93) = 2;
    *((void *)v22 + 3) = sub_1000B7C10();
    *((void *)v22 + 4) = v37;
    LOBYTE(v93) = 3;
    *((void *)v22 + 5) = sub_1000B7C10();
    *((void *)v22 + 6) = v38;
    LOBYTE(v93) = 4;
    v22[56] = sub_1000B7C20();
    LOBYTE(v93) = 5;
    v22[57] = sub_1000B7C20();
    LOBYTE(v93) = 6;
    uint64_t v39 = sub_100051F7C(&qword_100103DB8, (void (*)(uint64_t))&type metadata accessor for Date);
    v62[1] = v24;
    *(void *)&long long v79 = v39;
    sub_1000B7C50();
    sub_10004E390(v75, v33);
    LOBYTE(v93) = 7;
    sub_1000B7C50();
    sub_10004E390(v74, v34);
    LOBYTE(v93) = 8;
    uint64_t v40 = sub_1000B7C10();
    *(void *)&long long v75 = v41;
    uint64_t v42 = v40;
    id v43 = v90;
    swift_bridgeObjectRelease();
    uint64_t v44 = v75;
    *id v43 = v42;
    v43[1] = v44;
    LOBYTE(v93) = 9;
    v22[v73] = sub_1000B7C20();
    LOBYTE(v93) = 10;
    v22[v72] = sub_1000B7C20();
    char v100 = 11;
    sub_100051CB0();
    sub_1000B7C50();
    v22[v71] = v93;
    char v100 = 12;
    sub_100051D04();
    sub_1000B7C50();
    v22[v70] = v93;
    char v100 = 13;
    sub_100051D58();
    sub_1000B7C50();
    v22[v69] = v93;
    LOBYTE(v93) = 14;
    uint64_t v45 = sub_1000B7C10();
    uint64_t v47 = v46;
    id v48 = (uint64_t *)v86;
    swift_bridgeObjectRelease();
    uint64_t *v48 = v45;
    v48[1] = v47;
    LOBYTE(v93) = 15;
    sub_1000B7C50();
    sub_10004E390(v68, (uint64_t)v87);
    LOBYTE(v93) = 16;
    sub_1000B7C50();
    sub_10004E390(v63, (uint64_t)v84);
    LOBYTE(v93) = 17;
    sub_1000B7C50();
    sub_10004E390(v64, (uint64_t)v82);
    LOBYTE(v93) = 18;
    sub_1000B7C50();
    sub_10004E390(v65, (uint64_t)v81);
    LOBYTE(v93) = 19;
    sub_1000B7C50();
    sub_10004E390(v66, (uint64_t)v80);
    char v100 = 20;
    sub_100051DAC();
    sub_1000B7C50();
    long long v79 = v93;
    long long v75 = v94;
    long long v74 = v95;
    long long v73 = v96;
    long long v72 = v97;
    long long v71 = v98;
    uint64_t v49 = v99;
    sub_10004E8CC(*(void *)v28, *((void *)v28 + 1), *((void *)v28 + 2), *((void *)v28 + 3), *((void *)v28 + 4), *((void *)v28 + 5), *((void *)v28 + 6), *((void *)v28 + 7), *((void *)v28 + 8), *((void *)v28 + 9), *((void *)v28 + 10), *((void *)v28 + 11), *((void *)v28 + 12));
    long long v50 = v75;
    *(_OWORD *)uint64_t v28 = v79;
    *((_OWORD *)v28 + 1) = v50;
    long long v51 = v73;
    *((_OWORD *)v28 + 2) = v74;
    *((_OWORD *)v28 + 3) = v51;
    long long v52 = v71;
    *((_OWORD *)v28 + 4) = v72;
    *((_OWORD *)v28 + 5) = v52;
    *((void *)v28 + 12) = v49;
    char v100 = 21;
    sub_100051E00();
    sub_1000B7C50();
    long long v79 = v93;
    uint64_t v53 = v94;
    sub_10004E888(*v29, v29[1]);
    *(_OWORD *)unint64_t v29 = v79;
    v29[2] = v53;
    sub_100032E20(&qword_100103D70);
    char v100 = 22;
    sub_100051E54(&qword_100103DE8, &qword_100103DF0);
    sub_1000B7C50();
    uint64_t v54 = v93;
    uint64_t v55 = v83;
    swift_bridgeObjectRelease();
    *(void *)&v22[v55] = v54;
    sub_100032E20(&qword_100103D88);
    char v100 = 23;
    sub_100051EE8(&qword_100103DF8, &qword_100103E00);
    sub_1000B7C50();
    uint64_t v56 = v93;
    uint64_t v57 = v85;
    swift_bridgeObjectRelease();
    *(void *)&v22[v57] = v56;
    sub_100032E20(&qword_100103DA0);
    char v100 = 24;
    sub_100051FC4();
    uint64_t v58 = v77;
    uint64_t v59 = v78;
    sub_1000B7C50();
    (*(void (**)(char *, uint64_t))(v76 + 8))(v59, v58);
    uint64_t v60 = v93;
    uint64_t v61 = v88;
    swift_bridgeObjectRelease();
    *(void *)&v22[v61] = v60;
    sub_100052070((uint64_t)v22, v67, (uint64_t (*)(void))type metadata accessor for ICNoteArchiveModel);
    sub_100037F98((uint64_t)v89);
    return sub_1000520D8((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for ICNoteArchiveModel);
  }
}

void sub_10004AAAC(void *a1@<X0>, unsigned char *a2@<X1>, uint64_t a3@<X8>)
{
  os_signpost_id_t v242 = a2;
  id v243 = a1;
  uint64_t v240 = sub_1000B7030();
  uint64_t v217 = *(void *)(v240 - 8);
  __chkstk_darwin(v240);
  v216 = (char *)&v209 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = _s8ActivityVMa();
  uint64_t v211 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  v239 = (char *)&v209 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v219 = sub_1000B7490();
  uint64_t v220 = *(void *)(v219 - 8);
  uint64_t v7 = __chkstk_darwin(v219);
  os_signpost_type_t v210 = (char *)&v209 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v212 = (char *)&v209 - v10;
  __chkstk_darwin(v9);
  v209 = (char *)&v209 - v11;
  uint64_t v12 = sub_100032E20(&qword_100103A20);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  v229 = (char *)&v209 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  *(void *)&long long v238 = (char *)&v209 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v228 = (char *)&v209 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  v226 = (char *)&v209 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  v223 = (char *)&v209 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  char v25 = (char *)&v209 - v24;
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v209 - v26;
  *(unsigned char *)a3 = 3;
  *(_OWORD *)(a3 + 24) = 0u;
  *(_OWORD *)(a3 + 40) = 0u;
  *(_WORD *)(a3 + 56) = 514;
  uint64_t v28 = (int *)type metadata accessor for ICNoteArchiveModel();
  uint64_t v29 = a3 + v28[10];
  uint64_t v30 = sub_1000B6FD0();
  uint64_t v31 = *(void (**)(void))(*(void *)(v30 - 8) + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v31)(v29, 1, 1, v30);
  uint64_t v232 = a3 + v28[11];
  v31();
  uint64_t v32 = (uint64_t *)(a3 + v28[12]);
  uint64_t *v32 = 0;
  v32[1] = 0;
  os_signpost_type_t v218 = v32;
  uint64_t v231 = v28[13];
  *(unsigned char *)(a3 + v231) = 2;
  *(void *)&long long v233 = v28[14];
  *(unsigned char *)(a3 + v233) = 2;
  *(void *)&long long v234 = v28[15];
  *(unsigned char *)(a3 + v234) = 7;
  *(void *)&long long v235 = v28[16];
  *(unsigned char *)(a3 + v235) = 2;
  *(void *)&long long v236 = v28[17];
  *(unsigned char *)(a3 + v236) = 3;
  uint64_t v33 = (void *)(a3 + v28[18]);
  void *v33 = 0;
  v33[1] = 0;
  *(void *)&long long v237 = v33;
  uint64_t v221 = a3 + v28[19];
  v31();
  uint64_t v222 = a3 + v28[20];
  v31();
  uint64_t v224 = a3 + v28[21];
  v31();
  uint64_t v225 = a3 + v28[22];
  v31();
  uint64_t v227 = a3 + v28[23];
  v31();
  uint64_t v34 = a3 + v28[24];
  *(void *)(v34 + 96) = 0;
  *(_OWORD *)(v34 + 64) = 0u;
  *(_OWORD *)(v34 + 80) = 0u;
  *(_OWORD *)(v34 + 32) = 0u;
  *(_OWORD *)(v34 + 48) = 0u;
  *(_OWORD *)uint64_t v34 = 0u;
  *(_OWORD *)(v34 + 16) = 0u;
  uint64_t v35 = (uint64_t *)(a3 + v28[25]);
  uint64_t *v35 = 0;
  v35[1] = 0;
  uint64_t v213 = v35;
  v35[2] = 0;
  uint64_t v230 = v28[26];
  *(void *)(a3 + v230) = 0;
  uint64_t v214 = v28[27];
  *(void *)(a3 + v214) = 0;
  uint64_t v36 = v28[28];
  uint64_t v241 = a3;
  uint64_t v215 = v36;
  *(void *)(a3 + v36) = 0;
  id v37 = [v243 identifier];
  if (v37)
  {
    uint64_t v38 = v37;
    uint64_t v39 = sub_1000B75B0();
    unint64_t v41 = v40;
  }
  else
  {
    uint64_t v39 = 0;
    unint64_t v41 = 0xE000000000000000;
  }
  uint64_t v42 = v241;
  *(void *)(v241 + 8) = v39;
  *(void *)(v42 + 16) = v41;
  id v43 = [v243 creationDate];
  if (v43)
  {
    uint64_t v44 = v43;
    sub_1000B6FA0();

    uint64_t v45 = 0;
  }
  else
  {
    uint64_t v45 = 1;
  }
  uint64_t v46 = v238;
  uint64_t v47 = 1;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v31)(v27, v45, 1, v30);
  sub_10004E390((uint64_t)v27, v29);
  id v48 = v243;
  id v49 = [v243 modificationDate];
  if (v49)
  {
    long long v50 = v49;
    sub_1000B6FA0();

    uint64_t v47 = 0;
  }
  uint64_t v51 = v233;
  uint64_t v52 = v232;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v31)(v25, v47, 1, v30);
  sub_10004E390((uint64_t)v25, v52);
  unsigned __int8 v53 = [v48 isPinned];
  uint64_t v54 = v241;
  *(unsigned char *)(v241 + v231) = v53;
  *(unsigned char *)(v54 + v51) = [v48 isSystemPaper];
  unsigned int v55 = [v48 paperStyleType];
  if ((v55 & 0x80000000) != 0)
  {
    sub_1000B7B80();
    __break(1u);
    swift_bridgeObjectRelease();
    swift_release();
    __break(1u);
    return;
  }
  *(unsigned char *)(v54 + v234) = sub_10004E050((unsigned __int16)v55);
  char v56 = sub_10004E154((unsigned __int16)[v48 preferredBackgroundType]);
  *(unsigned char *)(v54 + v235) = v56;
  char v57 = sub_10004E258((uint64_t)[v48 attachmentViewType]);
  *(unsigned char *)(v54 + v236) = v57;
  id v58 = [v48 hostApplicationIdentifier];
  if (v58)
  {
    uint64_t v59 = v58;
    uint64_t v60 = sub_1000B75B0();
    uint64_t v62 = v61;
  }
  else
  {
    uint64_t v60 = 0;
    uint64_t v62 = 0;
  }
  uint64_t v63 = (uint64_t *)v237;
  swift_bridgeObjectRelease();
  uint64_t *v63 = v60;
  v63[1] = v62;
  if (v242[50] & 1) != 0 || (v242[51])
  {
    id v64 = [v48 lastOpenedDate];
    if (v64)
    {
      uint64_t v65 = v64;
      uint64_t v66 = v223;
      sub_1000B6FA0();

      uint64_t v67 = (uint64_t)v66;
      uint64_t v68 = 0;
      uint64_t v69 = v226;
    }
    else
    {
      uint64_t v68 = 1;
      uint64_t v69 = v226;
      uint64_t v67 = (uint64_t)v223;
    }
    uint64_t v70 = 1;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v31)(v67, v68, 1, v30);
    sub_10004E390(v67, v221);
    id v71 = [v48 lastActivitySummaryViewedDate];
    if (v71)
    {
      long long v72 = v71;
      sub_1000B6FA0();

      uint64_t v70 = 0;
    }
    uint64_t v73 = (uint64_t)v69;
    uint64_t v74 = 1;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v31)(v73, v70, 1, v30);
    sub_10004E390(v73, v222);
    id v75 = [v48 lastActivityRecentUpdatesViewedDate];
    if (v75)
    {
      uint64_t v76 = v75;
      uint64_t v77 = v228;
      sub_1000B6FA0();

      uint64_t v78 = (uint64_t)v77;
      uint64_t v74 = 0;
    }
    else
    {
      uint64_t v78 = (uint64_t)v228;
    }
    uint64_t v79 = 1;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v31)(v78, v74, 1, v30);
    sub_10004E390(v78, v224);
    id v80 = [v48 recentUpdatesGenerationDate];
    if (v80)
    {
      uint64_t v81 = v80;
      sub_1000B6FA0();

      uint64_t v79 = 0;
    }
    uint64_t v82 = 1;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v31)(v46, v79, 1, v30);
    sub_10004E390(v46, v225);
    id v83 = [v48 lastAttributionsViewedDate];
    if (v83)
    {
      uint64_t v84 = v83;
      uint64_t v85 = (uint64_t)v229;
      sub_1000B6FA0();

      uint64_t v82 = 0;
    }
    else
    {
      uint64_t v85 = (uint64_t)v229;
    }
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v31)(v85, v82, 1, v30);
    sub_10004E390(v85, v227);
  }
  uint64_t v86 = (uint64_t)v242;
  if ((v242[52] & 1) == 0)
  {
    if (![v48 isPasswordProtected])
    {
      id v109 = [v48 textStorage];
      if (v109)
      {
        uint64_t v110 = v109;
        id v111 = [v109 mergeableString];
        id v112 = v48;
        sub_10004E7F4((void *)v86, (void (*)(void, void, void, void, void, void))sub_10004E834);
        id v113 = sub_10009F3C4(v111, v112, v86);
        uint64_t v115 = v114;
        unint64_t v116 = (void *)v86;
        uint64_t v118 = v117;
        sub_10004E7F4(v116, (void (*)(void, void, void, void, void, void))sub_10004E3F8);

        Class v119 = v213;
        sub_10004E888(*v213, v213[1]);
        uint64_t *v119 = (uint64_t)v113;
        v119[1] = v115;
        v119[2] = v118;
        uint64_t v86 = (uint64_t)v116;
        uint64_t v95 = (uint64_t)v239;
        goto LABEL_70;
      }
      uint64_t v95 = (uint64_t)v239;
      if (qword_100103688 != -1) {
        goto LABEL_111;
      }
      goto LABEL_47;
    }
    id v87 = [v48 noteData];
    if (v87)
    {
      uint64_t v88 = v87;
      uint64_t v89 = v86;
      id v90 = [v87 data];

      if (v90)
      {
        uint64_t v91 = sub_1000B6F30();
        uint64_t v93 = v92;
      }
      else
      {
        uint64_t v91 = 0;
        uint64_t v93 = 0xC000000000000000;
      }
      uint64_t v54 = v241;
    }
    else
    {
      uint64_t v89 = v86;
      uint64_t v91 = 0;
      uint64_t v93 = 0xC000000000000000;
    }
    id v152 = v48;
    sub_100090080(v152, v91, v93, v245);
    long long v238 = v245[0];
    long long v237 = v245[1];
    long long v236 = v245[2];
    long long v235 = v245[3];
    long long v234 = v245[4];
    long long v233 = v245[5];
    uint64_t v153 = v246;

    sub_10004E8CC(*(void *)v34, *(void *)(v34 + 8), *(void *)(v34 + 16), *(void *)(v34 + 24), *(void *)(v34 + 32), *(void *)(v34 + 40), *(void *)(v34 + 48), *(void *)(v34 + 56), *(void *)(v34 + 64), *(void *)(v34 + 72), *(void *)(v34 + 80), *(void *)(v34 + 88), *(void *)(v34 + 96));
    long long v154 = v237;
    *(_OWORD *)uint64_t v34 = v238;
    *(_OWORD *)(v34 + 16) = v154;
    long long v155 = v235;
    *(_OWORD *)(v34 + 32) = v236;
    *(_OWORD *)(v34 + 48) = v155;
    long long v156 = v233;
    *(_OWORD *)(v34 + 64) = v234;
    *(_OWORD *)(v34 + 80) = v156;
    *(void *)(v34 + 96) = v153;
    id v157 = [v152 title];
    if (v157)
    {
      uint64_t v158 = v157;
      uint64_t v159 = sub_1000B75B0();
      uint64_t v161 = v160;
    }
    else
    {
      uint64_t v159 = 0;
      uint64_t v161 = 0;
    }
    uint64_t v95 = (uint64_t)v239;
    uint64_t v162 = v230;
    uint64_t v86 = v89;
    v163 = v218;
    swift_bridgeObjectRelease();
    uint64_t *v163 = v159;
    v163[1] = v161;
    while (1)
    {
      id v164 = [v48 outlineState];
      id v165 = [v164 collapsedUUIDs];

      sub_100051F7C((unint64_t *)&unk_100104370, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v166 = sub_1000B7780();

      swift_bridgeObjectRelease();
      *(void *)(v54 + v162) = v166;
      if ((*(unsigned char *)(v86 + 48) & 1) == 0) {
        break;
      }
      id v167 = v48;
      unint64_t v168 = sub_1000B7940();

      if (v168 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v86 = sub_1000B7BA0();
        swift_bridgeObjectRelease();
        if (!v86)
        {
LABEL_84:
          swift_bridgeObjectRelease();
          v170 = _swiftEmptyArrayStorage;
LABEL_85:
          uint64_t v175 = v214;
          swift_bridgeObjectRelease();
          *(void *)(v54 + v175) = v170;
          uint64_t v86 = (uint64_t)v242;
          break;
        }
      }
      else
      {
        uint64_t v86 = *(void *)((v168 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v86) {
          goto LABEL_84;
        }
      }
      v244 = _swiftEmptyArrayStorage;
      sub_1000438A0(0, v86 & ~(v86 >> 63), 0);
      if ((v86 & 0x8000000000000000) == 0)
      {
        uint64_t v169 = 0;
        v170 = v244;
        uint64_t v171 = v211;
        do
        {
          if ((v168 & 0xC000000000000001) != 0) {
            id v172 = (id)sub_1000B7AC0();
          }
          else {
            id v172 = *(id *)(v168 + 8 * v169 + 32);
          }
          sub_100054E98(v172, v95);
          v244 = v170;
          unint64_t v174 = v170[2];
          unint64_t v173 = v170[3];
          if (v174 >= v173 >> 1)
          {
            sub_1000438A0(v173 > 1, v174 + 1, 1);
            uint64_t v171 = v211;
            v170 = v244;
          }
          ++v169;
          v170[2] = v174 + 1;
          sub_10004E790(v95, (uint64_t)v170+ ((*(unsigned __int8 *)(v171 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v171 + 80))+ *(void *)(v171 + 72) * v174);
        }
        while (v86 != v169);
        swift_bridgeObjectRelease();
        uint64_t v54 = v241;
        goto LABEL_85;
      }
      __break(1u);
LABEL_111:
      swift_once();
LABEL_47:
      uint64_t v122 = v219;
      uint64_t v133 = sub_100038E8C(v219, (uint64_t)qword_100103B90);
      uint64_t v121 = v220;
      id v134 = v210;
      (*(void (**)(char *, uint64_t, uint64_t))(v220 + 16))(v210, v133, v122);
      id v135 = v48;
      unint64_t v136 = sub_1000B7480();
      os_log_type_t v137 = sub_1000B7850();
      if (os_log_type_enabled(v136, v137))
      {
        uint64_t v138 = (uint8_t *)swift_slowAlloc();
        *(void *)&long long v238 = swift_slowAlloc();
        *(void *)&v245[0] = v238;
        *(_DWORD *)uint64_t v138 = 136315138;
        id v139 = [v135 identifier];
        if (v139)
        {
          Class v140 = v139;
          uint64_t v141 = sub_1000B75B0();
          unint64_t v143 = v142;
        }
        else
        {
          uint64_t v141 = 9732322;
          unint64_t v143 = 0xA300000000000000;
        }
        v244 = (void *)sub_100069A50(v141, v143, (uint64_t *)v245);
        sub_1000B79F0();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v136, v137, "Note doesn't have a text storage â€” skipping {identifier: %s}", v138, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v121 + 8))(v210, v122);
LABEL_68:
        uint64_t v86 = (uint64_t)v242;
        id v48 = v243;
      }
      else
      {
LABEL_55:

        (*(void (**)(char *, uint64_t))(v121 + 8))(v134, v122);
      }
      uint64_t v54 = v241;
LABEL_70:
      uint64_t v162 = v230;
    }
    if (*(unsigned char *)(v86 + 49))
    {
      uint64_t v176 = v86;
      Class isa = (Class)[v48 replicaIDToUserIDDictData];
      if (isa)
      {
        uint64_t v178 = sub_1000B6F30();
        unint64_t v180 = v179;

        uint64_t v181 = v216;
        sub_1000B7020();
        uint64_t v182 = v217;
        if (v180 >> 60 == 15)
        {
          Class isa = 0;
        }
        else
        {
          Class isa = sub_1000B6F20().super.isa;
          sub_10004E77C(v178, v180);
        }
      }
      else
      {
        uint64_t v181 = v216;
        sub_1000B7020();
        uint64_t v182 = v217;
      }
      id v183 = objc_allocWithZone((Class)ICMergeableDictionary);
      Class v184 = sub_1000B7000().super.isa;
      id v185 = [v183 initWithData:isa replicaID:v184];

      (*(void (**)(char *, uint64_t))(v182 + 8))(v181, v240);
      id v186 = [v185 allKeys];
      sub_100038DC8(0, (unint64_t *)&qword_100103BA8);
      unint64_t v187 = sub_1000B76E0();

      id v188 = v48;
      v189 = sub_10004D098(v187, v188);
      swift_bridgeObjectRelease();

      if (v189[2])
      {
        sub_100032E20(&qword_100103750);
        unint64_t v190 = (void *)sub_1000B7BD0();
      }
      else
      {
        unint64_t v190 = &_swiftEmptyDictionarySingleton;
      }
      v244 = v190;
      sub_10004E44C((uint64_t)v189, 1, (uint64_t *)&v244);

      swift_bridgeObjectRelease();
      id v191 = v244;
      uint64_t v54 = v241;
      uint64_t v192 = v215;
      swift_bridgeObjectRelease();
      sub_10004E7F4((void *)v176, (void (*)(void, void, void, void, void, void))sub_10004E3F8);
      *(void *)(v54 + v192) = v191;
      if ((*(unsigned char *)(v176 + 51) & 1) == 0) {
        goto LABEL_88;
      }
    }
    else
    {
      sub_10004E7F4((void *)v86, (void (*)(void, void, void, void, void, void))sub_10004E3F8);
      if ((*(unsigned char *)(v86 + 51) & 1) == 0)
      {
LABEL_88:

        return;
      }
    }
    id v193 = [v48 folder];
    id v194 = v193;
    if (v193)
    {
      id v195 = [v193 identifier];

      if (v195)
      {
        id v194 = (void *)sub_1000B75B0();
        uint64_t v197 = v196;

LABEL_103:
        swift_bridgeObjectRelease();
        *(void *)(v54 + 24) = v194;
        *(void *)(v54 + 32) = v197;
        id v198 = [v48 folder];
        v199 = v198;
        if (v198)
        {
          id v200 = [v198 title];

          v199 = (void *)sub_1000B75B0();
          uint64_t v202 = v201;
        }
        else
        {
          uint64_t v202 = 0;
        }
        swift_bridgeObjectRelease();
        *(void *)(v54 + 40) = v199;
        *(void *)(v54 + 48) = v202;
        id v203 = [v48 title];
        if (v203)
        {
          os_signpost_id_t v204 = v203;
          uint64_t v205 = sub_1000B75B0();
          uint64_t v207 = v206;
        }
        else
        {
          uint64_t v205 = 0;
          uint64_t v207 = 0;
        }
        v208 = v218;
        swift_bridgeObjectRelease();
        uint64_t *v208 = v205;
        v208[1] = v207;
        *(unsigned char *)(v54 + 56) = [v48 markedForDeletion];
        LOBYTE(v208) = [v48 isPasswordProtected];

        *(unsigned char *)(v54 + 57) = (_BYTE)v208;
        return;
      }
      id v194 = 0;
    }
    uint64_t v197 = 0;
    goto LABEL_103;
  }
  unsigned __int8 v94 = [v48 isPasswordProtectedAndLocked];
  uint64_t v95 = (uint64_t)v239;
  if ((v94 & 1) == 0)
  {
    id v120 = [v48 textStorage];
    uint64_t v121 = v220;
    uint64_t v122 = v219;
    if (v120)
    {
      uint64_t v123 = v120;
      id v124 = [v120 mergeableString];
      id v125 = v48;
      sub_10004E7F4((void *)v86, (void (*)(void, void, void, void, void, void))sub_10004E834);
      id v126 = sub_10009F3C4(v124, v125, v86);
      uint64_t v128 = v127;
      uint64_t v129 = (void *)v86;
      uint64_t v131 = v130;
      sub_10004E7F4(v129, (void (*)(void, void, void, void, void, void))sub_10004E3F8);

      unint64_t v132 = v213;
      sub_10004E888(*v213, v213[1]);
      *unint64_t v132 = (uint64_t)v126;
      v132[1] = v128;
      v132[2] = v131;
      uint64_t v86 = (uint64_t)v129;
      goto LABEL_70;
    }
    if (qword_100103688 != -1) {
      swift_once();
    }
    uint64_t v144 = sub_100038E8C(v122, (uint64_t)qword_100103B90);
    id v134 = v209;
    (*(void (**)(char *, uint64_t, uint64_t))(v121 + 16))(v209, v144, v122);
    id v135 = v48;
    unint64_t v136 = sub_1000B7480();
    os_log_type_t v145 = sub_1000B7850();
    if (os_log_type_enabled(v136, v145))
    {
      os_log_type_t v146 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v238 = swift_slowAlloc();
      *(void *)&v245[0] = v238;
      *(_DWORD *)os_log_type_t v146 = 136315138;
      id v147 = [v135 identifier];
      if (v147)
      {
        uint64_t v148 = v147;
        uint64_t v149 = sub_1000B75B0();
        unint64_t v151 = v150;
      }
      else
      {
        uint64_t v149 = 9732322;
        unint64_t v151 = 0xA300000000000000;
      }
      v244 = (void *)sub_100069A50(v149, v151, (uint64_t *)v245);
      sub_1000B79F0();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v136, v145, "Note doesn't have a text storage â€” skipping {identifier: %s}", v146, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v121 + 8))(v209, v122);
      goto LABEL_68;
    }
    goto LABEL_55;
  }
  sub_10004E7F4((void *)v86, (void (*)(void, void, void, void, void, void))sub_10004E3F8);
  uint64_t v96 = v220;
  uint64_t v97 = v219;
  if (qword_100103688 != -1) {
    swift_once();
  }
  uint64_t v98 = sub_100038E8C(v97, (uint64_t)qword_100103B90);
  uint64_t v99 = v212;
  (*(void (**)(char *, uint64_t, uint64_t))(v96 + 16))(v212, v98, v97);
  id v100 = v48;
  uint64_t v101 = sub_1000B7480();
  os_log_type_t v102 = sub_1000B7850();
  if (os_log_type_enabled(v101, v102))
  {
    uint64_t v103 = (uint8_t *)swift_slowAlloc();
    *(void *)&v245[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v103 = 136315138;
    id v104 = [v100 identifier];
    if (v104)
    {
      uint64_t v105 = v104;
      uint64_t v106 = sub_1000B75B0();
      unint64_t v108 = v107;
    }
    else
    {
      uint64_t v106 = 9732322;
      unint64_t v108 = 0xA300000000000000;
    }
    v244 = (void *)sub_100069A50(v106, v108, (uint64_t *)v245);
    sub_1000B79F0();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v101, v102, "Pages Handoff: Note is locked â€” skipping {identifier: %s}", v103, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v220 + 8))(v99, v219);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v96 + 8))(v99, v97);
  }
}

uint64_t sub_10004C3F4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100049AA8(a1, a2);
}

uint64_t sub_10004C40C(void *a1)
{
  return sub_100049334(a1);
}

void sub_10004C424(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1000B7030();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000B6FD0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100032E20(&qword_100103A20);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = [a1 timestamp];
  if (v16)
  {
    uint64_t v17 = v16;
    sub_1000B6FA0();

    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v12, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v15, 0, 1, v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9) != 1)
    {
      sub_100038E30((uint64_t)v15, &qword_100103A20);
      Class isa = sub_1000B7E30().super.super.isa;
      id v19 = [a1 replicaID];
      sub_1000B7010();

      Class v20 = sub_1000B7000().super.isa;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      [a3 setNotesVersion:isa forReplicaID:v20];

      return;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v15, 1, 1, v9);
  }
  sub_100038E30((uint64_t)v15, &qword_100103A20);
}

void sub_10004C6F0(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void (**)(void))(a1 + 32);
  id v3 = a2;
  v2();
}

uint64_t sub_10004C74C(char a1)
{
  return *(void *)&aNone_2[8 * a1];
}

uint64_t sub_10004C76C(char *a1, char *a2)
{
  return sub_100039398(*a1, *a2);
}

Swift::Int sub_10004C778()
{
  return sub_10005D770();
}

uint64_t sub_10004C784()
{
  return sub_10005D0F8();
}

Swift::Int sub_10004C78C()
{
  return sub_10005D770();
}

uint64_t sub_10004C794@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100052BC8(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_10004C7C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10004C74C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_10004C7F0(void *a1@<X8>)
{
  *a1 = &off_1000EF0D8;
}

uint64_t sub_10004C800()
{
  return sub_1000B76B0();
}

uint64_t sub_10004C860()
{
  return sub_1000B76A0();
}

uint64_t sub_10004C8B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10004CC90(a1, a2, a3, a4, (void (*)(void))sub_100052C14, (void (*)(void))sub_100052ACC);
}

uint64_t sub_10004C8DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10004CD50(a1, a2, a3, a4, (void (*)(void))sub_100052C14, (void (*)(void))sub_100052ACC);
}

uint64_t sub_10004C908(char a1)
{
  if (a1) {
    return 0x544847494CLL;
  }
  else {
    return 0x544C5541464544;
  }
}

uint64_t sub_10004C93C(char *a1, char *a2)
{
  return sub_100039420(*a1, *a2);
}

Swift::Int sub_10004C948()
{
  return sub_10005C904();
}

uint64_t sub_10004C950()
{
  return sub_10005D14C();
}

Swift::Int sub_10004C958()
{
  return sub_10005D6F4();
}

uint64_t sub_10004C960@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  v8._countAndFlagsBits = *a1;
  id v3 = (void *)a1[1];
  v4._rawValue = &off_1000EF100;
  v8._object = v3;
  Swift::Int v5 = sub_1000B7C00(v4, v8);
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *a2 = v7;
  return result;
}

uint64_t sub_10004C9C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10004C908(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_10004C9EC(void *a1@<X8>)
{
  *a1 = &off_1000EF150;
}

uint64_t sub_10004C9FC()
{
  return sub_1000B76B0();
}

uint64_t sub_10004CA5C()
{
  return sub_1000B76A0();
}

uint64_t sub_10004CAAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10004CC90(a1, a2, a3, a4, (void (*)(void))sub_100052B74, (void (*)(void))sub_100052B20);
}

uint64_t sub_10004CAD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10004CD50(a1, a2, a3, a4, (void (*)(void))sub_100052B74, (void (*)(void))sub_100052B20);
}

uint64_t sub_10004CB04(char a1)
{
  return *(void *)&aPreview_2[8 * a1];
}

uint64_t sub_10004CB24(char *a1, char *a2)
{
  return sub_100039310(*a1, *a2);
}

Swift::Int sub_10004CB30()
{
  return sub_10005C984();
}

uint64_t sub_10004CB38()
{
  return sub_10005D0A4();
}

Swift::Int sub_10004CB40()
{
  return sub_10005D7D8();
}

uint64_t sub_10004CB48@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100052C68(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_10004CB78@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10004CB04(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_10004CBA4(void *a1@<X8>)
{
  *a1 = &off_1000EF1E0;
}

uint64_t sub_10004CBB4()
{
  return sub_1000B76B0();
}

uint64_t sub_10004CC14()
{
  return sub_1000B76A0();
}

uint64_t sub_10004CC64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10004CC90(a1, a2, a3, a4, (void (*)(void))sub_100052CB4, (void (*)(void))sub_100052A78);
}

uint64_t sub_10004CC90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), void (*a6)(void))
{
  a5();
  a6();

  return sub_1000B70F0();
}

uint64_t sub_10004CD24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10004CD50(a1, a2, a3, a4, (void (*)(void))sub_100052CB4, (void (*)(void))sub_100052A78);
}

uint64_t sub_10004CD50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), void (*a6)(void))
{
  a5();
  a6();

  return sub_1000B7110();
}

uint64_t sub_10004CDDC(uint64_t a1)
{
  sub_100032E20(&qword_100103BD0);
  uint64_t result = sub_1000B7BB0();
  int64_t v3 = 0;
  uint64_t v32 = (void *)result;
  uint64_t v33 = a1;
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v5 = a1 + 64;
  uint64_t v4 = v6;
  uint64_t v7 = 1 << *(unsigned char *)(v5 - 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v4;
  uint64_t v29 = v5;
  int64_t v30 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v31 = result + 64;
  if ((v8 & v4) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  int64_t v34 = v3;
  for (unint64_t i = v10 | (v3 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v14 << 6))
  {
    id v16 = (uint64_t *)(*(void *)(v33 + 48) + 16 * i);
    uint64_t v17 = v16[1];
    uint64_t v35 = *v16;
    uint64_t v18 = *(void **)(*(void *)(v33 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    id v19 = v18;
    id v20 = [v19 identifier];
    if (v20)
    {
      uint64_t v21 = v20;
      sub_1000B75B0();
    }
    id v22 = [v19 typeUTI];
    if (v22)
    {
      uint64_t v23 = v22;
      sub_1000B75B0();
    }
    sub_100038DC8(0, (unint64_t *)&qword_100103BD8);
    uint64_t v24 = sub_1000B7870();

    uint64_t result = (uint64_t)v32;
    *(void *)(v31 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    char v25 = (void *)(v32[6] + 16 * i);
    *char v25 = v35;
    v25[1] = v17;
    *(void *)(v32[7] + 8 * i) = v24;
    uint64_t v26 = v32[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27)
    {
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    v32[2] = v28;
    int64_t v3 = v34;
    if (v9) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v12 = v3 + 1;
    if (__OFADD__(v3, 1)) {
      goto LABEL_28;
    }
    if (v12 >= v30) {
      return result;
    }
    unint64_t v13 = *(void *)(v29 + 8 * v12);
    int64_t v14 = v3 + 1;
    if (!v13)
    {
      int64_t v14 = v3 + 2;
      if (v3 + 2 >= v30) {
        return result;
      }
      unint64_t v13 = *(void *)(v29 + 8 * v14);
      if (!v13)
      {
        int64_t v14 = v3 + 3;
        if (v3 + 3 >= v30) {
          return result;
        }
        unint64_t v13 = *(void *)(v29 + 8 * v14);
        if (!v13) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v9 = (v13 - 1) & v13;
    int64_t v34 = v14;
  }
  uint64_t v15 = v3 + 4;
  if (v3 + 4 >= v30) {
    return result;
  }
  unint64_t v13 = *(void *)(v29 + 8 * v15);
  if (v13)
  {
    int64_t v14 = v3 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v14 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v14 >= v30) {
      return result;
    }
    unint64_t v13 = *(void *)(v29 + 8 * v14);
    ++v15;
    if (v13) {
      goto LABEL_18;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

void *sub_10004D098(unint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  id v49 = a2;
  uint64_t v5 = sub_100032E20(&qword_100103BB0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000B7030();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  id v48 = (char *)v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v60 = (char *)v43 - v12;
  uint64_t v13 = sub_100032E20(&qword_100103BB8);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_100032E20(&qword_100103748);
  uint64_t v50 = *(void *)(v62 - 8);
  uint64_t v16 = __chkstk_darwin(v62);
  uint64_t v61 = (uint64_t)v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v47 = (uint64_t)v43 - v18;
  if (a1 >> 62)
  {
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1000B7BA0();
    if (v19) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v19 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v19)
    {
LABEL_3:
      v43[1] = v3;
      unint64_t v59 = a1 & 0xC000000000000001;
      uint64_t v52 = (void (**)(char *, char *, uint64_t))(v9 + 32);
      unsigned __int8 v53 = (void (**)(char *, uint64_t))(v9 + 8);
      char v56 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v50 + 56);
      char v57 = (unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
      unsigned int v55 = (unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48);
      id v20 = _swiftEmptyArrayStorage;
      uint64_t v21 = 4;
      uint64_t v45 = v7;
      unint64_t v46 = a1;
      uint64_t v44 = v15;
      uint64_t v58 = v19;
      while (1)
      {
        uint64_t v63 = v20;
        if (v59) {
          id v22 = (id)sub_1000B7AC0();
        }
        else {
          id v22 = *(id *)(a1 + 8 * v21);
        }
        uint64_t v23 = v22;
        uint64_t v9 = v21 - 3;
        if (__OFADD__(v21 - 4, 1))
        {
          __break(1u);
          goto LABEL_27;
        }
        sub_1000B75B0();
        sub_1000B6FE0();
        swift_bridgeObjectRelease();
        if ((*v57)(v7, 1, v8) != 1) {
          break;
        }
        sub_100038E30((uint64_t)v7, &qword_100103BB0);
        uint64_t v24 = 1;
LABEL_19:
        uint64_t v3 = v62;
        (*v56)(v15, v24, 1, v62);

        if ((*v55)(v15, 1, v3) == 1)
        {
          sub_100038E30((uint64_t)v15, &qword_100103BB8);
          id v20 = v63;
        }
        else
        {
          uint64_t v38 = v9;
          uint64_t v39 = v47;
          sub_10004EA80((uint64_t)v15, v47, &qword_100103748);
          sub_10004EA80(v39, v61, &qword_100103748);
          id v20 = v63;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v20 = (void *)sub_100035780(0, v20[2] + 1, 1, (unint64_t)v20);
          }
          unint64_t v41 = v20[2];
          unint64_t v40 = v20[3];
          uint64_t v3 = v41 + 1;
          if (v41 >= v40 >> 1) {
            id v20 = (void *)sub_100035780(v40 > 1, v41 + 1, 1, (unint64_t)v20);
          }
          void v20[2] = v3;
          sub_10004EA80(v61, (uint64_t)v20+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(void *)(v50 + 72) * v41, &qword_100103748);
          uint64_t v9 = v38;
        }
        ++v21;
        if (v9 == v58)
        {
          swift_bridgeObjectRelease();
          return v20;
        }
      }
      uint64_t v54 = v21 - 3;
      uint64_t v51 = *v52;
      v51(v60, v7, v8);
      Class isa = sub_1000B7000().super.isa;
      id v26 = [v49 userIDForReplicaID:isa];

      uint64_t v27 = sub_1000B75B0();
      uint64_t v29 = v28;

      id v30 = [self CR_unknown];
      uint64_t v31 = v48;
      sub_1000B7010();

      uint64_t v32 = sub_1000B6FF0();
      uint64_t v34 = v33;
      uint64_t v35 = *v53;
      (*v53)(v31, v8);
      if (v27 == v32 && v29 == v34)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v36 = sub_1000B7DC0();
        swift_bridgeObjectRelease();
        if ((v36 & 1) == 0)
        {
          uint64_t v15 = v44;
          id v37 = (uint64_t *)&v44[*(int *)(v62 + 48)];
          v51(v44, v60, v8);
          uint64_t v24 = 0;
          uint64_t *v37 = v27;
          v37[1] = v29;
          uint64_t v7 = v45;
          a1 = v46;
          goto LABEL_18;
        }
      }
      v35(v60, v8);
      swift_bridgeObjectRelease();
      uint64_t v24 = 1;
      uint64_t v7 = v45;
      a1 = v46;
      uint64_t v15 = v44;
LABEL_18:
      uint64_t v9 = v54;
      goto LABEL_19;
    }
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10004D6C8(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6E65644965707974 && a2 == 0xEE00726569666974;
  if (v3 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001000C86D0 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6954746E65726170 && a2 == 0xEB00000000656C74 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001000C86F0 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001000C8710 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x4164657461657263 && a2 == 0xE900000000000074 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6465696669646F6DLL && a2 == 0xEA00000000007441 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x64656E6E69507369 && a2 == 0xE800000000000000 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x4E6B636975517369 && a2 == 0xEB0000000065746FLL || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x7974537265706170 && a2 == 0xEA0000000000656CLL || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001000C8730 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001000C8750 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001000C8770 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x7441646577656976 && a2 == 0xE800000000000000 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001000C8790 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001000C87B0 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001000C87D0 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001000C87F0 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0x6574707972636E65 && a2 == 0xED00006174614464 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001000C8810 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0x6974697669746361 && a2 == 0xEA00000000007365 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000001000C8830)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else
  {
    char v6 = sub_1000B7DC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 24;
    }
    else {
      return 25;
    }
  }
}

unint64_t sub_10004E050(unint64_t a1)
{
  if (a1 < 8) {
    return 0x605040302010007uLL >> (8 * a1);
  }
  if (qword_100103688 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000B7490();
  sub_100038E8C(v2, (uint64_t)qword_100103B90);
  BOOL v3 = sub_1000B7480();
  os_log_type_t v4 = sub_1000B7860();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Unknown paper style â€” returning nil", v5, 2u);
    swift_slowDealloc();
  }

  return 7;
}

uint64_t sub_10004E154(unsigned __int16 a1)
{
  if (a1 < 3u) {
    return 0x10002u >> (8 * a1);
  }
  if (qword_100103688 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000B7490();
  sub_100038E8C(v2, (uint64_t)qword_100103B90);
  BOOL v3 = sub_1000B7480();
  os_log_type_t v4 = sub_1000B7860();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Unknown preferred background color â€” returning nil", v5, 2u);
    swift_slowDealloc();
  }

  return 2;
}

uint64_t sub_10004E258(uint64_t result)
{
  if ((unsigned __int16)result >= 3u)
  {
    if (qword_100103688 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_1000B7490();
    sub_100038E8C(v1, (uint64_t)qword_100103B90);
    uint64_t v2 = sub_1000B7480();
    os_log_type_t v3 = sub_1000B7860();
    if (os_log_type_enabled(v2, v3))
    {
      os_log_type_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "Unknown attachment view type â€” returning default", v4, 2u);
      swift_slowDealloc();
    }

    return 0;
  }
  return result;
}

uint64_t type metadata accessor for ICNoteArchiveModel()
{
  uint64_t result = qword_100103C48;
  if (!qword_100103C48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10004E390(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100032E20(&qword_100103A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10004E3F8(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10004E44C(uint64_t a1, char a2, uint64_t *a3)
{
  id v43 = a3;
  uint64_t v41 = sub_1000B7030();
  uint64_t v6 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v42 = (char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100032E20(&qword_100103748);
  uint64_t result = __chkstk_darwin(v8);
  uint64_t v12 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(a1 + 16);
  if (!v13) {
    return result;
  }
  uint64_t v39 = &v12[*(int *)(result + 48)];
  uint64_t v14 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  uint64_t v38 = *(void *)(v10 + 72);
  unint64_t v40 = (void (**)(uint64_t, char *, uint64_t))(v6 + 32);
  uint64_t v36 = v6;
  v34[1] = v3;
  uint64_t v35 = (void (**)(uint64_t, uint64_t))(v6 + 8);
  v34[0] = a1;
  swift_bridgeObjectRetain();
  id v37 = v12;
  while (1)
  {
    sub_100032FC8(v14, (uint64_t)v12, &qword_100103748);
    uint64_t v16 = *v40;
    uint64_t v17 = (uint64_t)v42;
    (*v40)((uint64_t)v42, v12, v41);
    uint64_t v19 = *(void *)v39;
    uint64_t v18 = *((void *)v39 + 1);
    uint64_t v20 = *v43;
    unint64_t v22 = sub_10006A2C8(v17);
    uint64_t v23 = *(void *)(v20 + 16);
    BOOL v24 = (v21 & 1) == 0;
    uint64_t v25 = v23 + v24;
    if (__OFADD__(v23, v24)) {
      break;
    }
    char v26 = v21;
    if (*(void *)(v20 + 24) >= v25)
    {
      if (a2)
      {
        if (v21) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_10006567C();
        if (v26) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_100063D10(v25, a2 & 1);
      unint64_t v27 = sub_10006A2C8((uint64_t)v42);
      if ((v26 & 1) != (v28 & 1)) {
        goto LABEL_20;
      }
      unint64_t v22 = v27;
      if (v26)
      {
LABEL_3:
        (*v35)((uint64_t)v42, v41);
        uint64_t v15 = (void *)(*(void *)(*v43 + 56) + 16 * v22);
        swift_bridgeObjectRelease();
        void *v15 = v19;
        v15[1] = v18;
        goto LABEL_4;
      }
    }
    uint64_t v29 = (void *)*v43;
    *(void *)(*v43 + 8 * (v22 >> 6) + 64) |= 1 << v22;
    v16(v29[6] + *(void *)(v36 + 72) * v22, v42, v41);
    id v30 = (void *)(v29[7] + 16 * v22);
    void *v30 = v19;
    v30[1] = v18;
    uint64_t v31 = v29[2];
    BOOL v32 = __OFADD__(v31, 1);
    uint64_t v33 = v31 + 1;
    if (v32) {
      goto LABEL_19;
    }
    v29[2] = v33;
LABEL_4:
    uint64_t v12 = v37;
    v14 += v38;
    a2 = 1;
    if (!--v13) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  uint64_t result = sub_1000B7DF0();
  __break(1u);
  return result;
}

uint64_t sub_10004E77C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1000452E0(a1, a2);
  }
  return a1;
}

uint64_t sub_10004E790(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s8ActivityVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_10004E7F4(void *a1, void (*a2)(void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_10004E834(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10004E888(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_10004E8CC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, unint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t a13)
{
  if (a11)
  {
    sub_1000452E0(a2, a3);
    sub_1000452E0(a4, a5);
    sub_1000452E0(a6, a7);
    sub_1000452E0(a8, a9);
    swift_bridgeObjectRelease();
    sub_1000452E0(a12, a13);
  }
}

uint64_t sub_10004E998(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_10004E9F0()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10004EA28(void *a1, uint64_t a2)
{
  sub_10004C424(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_10004EA30()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10004EA40()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10004EA68(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10004EA78()
{
  return swift_release();
}

uint64_t sub_10004EA80(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100032E20(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void *sub_10004EAE4(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v6 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v6;
    uint64_t v7 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v7;
    uint64_t v8 = a2[5];
    uint64_t v9 = a2[6];
    *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
    uint64_t v10 = a3[10];
    __dst = (void *)(a1 + v10);
    uint64_t v11 = (char *)a2 + v10;
    *(void *)(a1 + 40) = v8;
    *(void *)(a1 + 48) = v9;
    uint64_t v12 = sub_1000B6FD0();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      uint64_t v15 = sub_100032E20(&qword_100103A20);
      memcpy(__dst, v11, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    uint64_t v17 = v13;
    uint64_t v18 = a3[11];
    uint64_t v19 = (char *)v4 + v18;
    uint64_t v20 = (char *)a2 + v18;
    if (v14((char *)a2 + v18, 1, v12))
    {
      uint64_t v21 = sub_100032E20(&qword_100103A20);
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v19, v20, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v19, 0, 1, v12);
    }
    uint64_t v22 = a3[12];
    uint64_t v23 = a3[13];
    BOOL v24 = (void *)((char *)v4 + v22);
    uint64_t v25 = (uint64_t *)((char *)a2 + v22);
    uint64_t v26 = v25[1];
    *BOOL v24 = *v25;
    v24[1] = v26;
    *((unsigned char *)v4 + v23) = *((unsigned char *)a2 + v23);
    uint64_t v27 = a3[15];
    *((unsigned char *)v4 + a3[14]) = *((unsigned char *)a2 + a3[14]);
    *((unsigned char *)v4 + v27) = *((unsigned char *)a2 + v27);
    uint64_t v28 = a3[17];
    *((unsigned char *)v4 + a3[16]) = *((unsigned char *)a2 + a3[16]);
    *((unsigned char *)v4 + v28) = *((unsigned char *)a2 + v28);
    uint64_t v29 = a3[18];
    uint64_t v30 = a3[19];
    uint64_t v31 = (void *)((char *)v4 + v29);
    BOOL v32 = (uint64_t *)((char *)a2 + v29);
    uint64_t v33 = v32[1];
    void *v31 = *v32;
    v31[1] = v33;
    uint64_t v34 = (char *)v4 + v30;
    uint64_t v35 = (char *)a2 + v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v35, 1, v12))
    {
      uint64_t v36 = sub_100032E20(&qword_100103A20);
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v34, v35, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v34, 0, 1, v12);
    }
    uint64_t v37 = a3[20];
    uint64_t v38 = (char *)v4 + v37;
    uint64_t v39 = (char *)a2 + v37;
    if (v14((char *)a2 + v37, 1, v12))
    {
      uint64_t v40 = sub_100032E20(&qword_100103A20);
      memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v38, v39, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v38, 0, 1, v12);
    }
    uint64_t v41 = a3[21];
    uint64_t v42 = (char *)v4 + v41;
    id v43 = (char *)a2 + v41;
    if (v14((char *)a2 + v41, 1, v12))
    {
      uint64_t v44 = sub_100032E20(&qword_100103A20);
      memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v42, v43, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v42, 0, 1, v12);
    }
    uint64_t v45 = a3[22];
    unint64_t v46 = (char *)v4 + v45;
    uint64_t v47 = (char *)a2 + v45;
    if (v14((char *)a2 + v45, 1, v12))
    {
      uint64_t v48 = sub_100032E20(&qword_100103A20);
      memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v46, v47, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v46, 0, 1, v12);
    }
    uint64_t v49 = a3[23];
    uint64_t v50 = (char *)v4 + v49;
    uint64_t v51 = (char *)a2 + v49;
    if (v14((char *)a2 + v49, 1, v12))
    {
      uint64_t v52 = sub_100032E20(&qword_100103A20);
      memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v50, v51, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v50, 0, 1, v12);
    }
    uint64_t v53 = a3[24];
    uint64_t v54 = (void *)((char *)v4 + v53);
    unsigned int v55 = (uint64_t *)((char *)a2 + v53);
    if (*(uint64_t *)((char *)a2 + v53 + 80))
    {
      uint64_t v56 = v55[1];
      *uint64_t v54 = *v55;
      unint64_t v57 = v55[2];
      sub_10004E998(v56, v57);
      v54[1] = v56;
      v54[2] = v57;
      uint64_t v58 = v55[3];
      unint64_t v59 = v55[4];
      sub_10004E998(v58, v59);
      v54[3] = v58;
      v54[4] = v59;
      uint64_t v60 = v55[5];
      unint64_t v61 = v55[6];
      sub_10004E998(v60, v61);
      v54[5] = v60;
      v54[6] = v61;
      uint64_t v62 = v55[7];
      unint64_t v63 = v55[8];
      sub_10004E998(v62, v63);
      v54[7] = v62;
      v54[8] = v63;
      uint64_t v64 = v55[10];
      v54[9] = v55[9];
      v54[10] = v64;
      uint64_t v65 = v55[11];
      unint64_t v66 = v55[12];
      swift_bridgeObjectRetain();
      sub_10004E998(v65, v66);
      v54[11] = v65;
      v54[12] = v66;
    }
    else
    {
      long long v67 = *((_OWORD *)v55 + 5);
      *((_OWORD *)v54 + 4) = *((_OWORD *)v55 + 4);
      *((_OWORD *)v54 + 5) = v67;
      v54[12] = v55[12];
      long long v68 = *((_OWORD *)v55 + 1);
      *(_OWORD *)uint64_t v54 = *(_OWORD *)v55;
      *((_OWORD *)v54 + 1) = v68;
      long long v69 = *((_OWORD *)v55 + 3);
      *((_OWORD *)v54 + 2) = *((_OWORD *)v55 + 2);
      *((_OWORD *)v54 + 3) = v69;
    }
    uint64_t v70 = a3[25];
    id v71 = (void *)((char *)v4 + v70);
    long long v72 = (uint64_t *)((char *)a2 + v70);
    uint64_t v73 = v72[1];
    if (v73)
    {
      void *v71 = *v72;
      v71[1] = v73;
      v71[2] = v72[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)id v71 = *(_OWORD *)v72;
      v71[2] = v72[2];
    }
    uint64_t v74 = a3[27];
    *(void *)((char *)v4 + a3[26]) = *(uint64_t *)((char *)a2 + a3[26]);
    *(void *)((char *)v4 + v74) = *(uint64_t *)((char *)a2 + v74);
    *(void *)((char *)v4 + a3[28]) = *(uint64_t *)((char *)a2 + a3[28]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_10004F1E0(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[10];
  uint64_t v5 = sub_1000B6FD0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = a1 + a2[11];
  if (!v7(v8, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = a1 + a2[19];
  if (!v7(v9, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  }
  uint64_t v10 = a1 + a2[20];
  if (!v7(v10, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v5);
  }
  uint64_t v11 = a1 + a2[21];
  if (!v7(v11, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11, v5);
  }
  uint64_t v12 = a1 + a2[22];
  if (!v7(v12, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v12, v5);
  }
  uint64_t v13 = a1 + a2[23];
  if (!v7(v13, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v13, v5);
  }
  uint64_t v14 = (void *)(a1 + a2[24]);
  if (v14[10])
  {
    sub_1000452E0(v14[1], v14[2]);
    sub_1000452E0(v14[3], v14[4]);
    sub_1000452E0(v14[5], v14[6]);
    sub_1000452E0(v14[7], v14[8]);
    swift_bridgeObjectRelease();
    sub_1000452E0(v14[11], v14[12]);
  }
  if (*(void *)(a1 + a2[25] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10004F4DC(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  uint64_t v9 = a3[10];
  __dst = (void *)(a1 + v9);
  uint64_t v10 = (const void *)(a2 + v9);
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  uint64_t v11 = sub_1000B6FD0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    uint64_t v14 = sub_100032E20(&qword_100103A20);
    memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(__dst, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
  }
  uint64_t v15 = v12;
  uint64_t v16 = a3[11];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (const void *)(a2 + v16);
  if (v13((const void *)(a2 + v16), 1, v11))
  {
    uint64_t v19 = sub_100032E20(&qword_100103A20);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v17, v18, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v17, 0, 1, v11);
  }
  uint64_t v20 = a3[12];
  uint64_t v21 = a3[13];
  uint64_t v22 = (void *)(a1 + v20);
  uint64_t v23 = (void *)(a2 + v20);
  uint64_t v24 = v23[1];
  *uint64_t v22 = *v23;
  v22[1] = v24;
  *(unsigned char *)(a1 + v21) = *(unsigned char *)(a2 + v21);
  uint64_t v25 = a3[15];
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  *(unsigned char *)(a1 + v25) = *(unsigned char *)(a2 + v25);
  uint64_t v26 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(unsigned char *)(a1 + v26) = *(unsigned char *)(a2 + v26);
  uint64_t v27 = a3[18];
  uint64_t v28 = a3[19];
  uint64_t v29 = (void *)(a1 + v27);
  uint64_t v30 = (void *)(a2 + v27);
  uint64_t v31 = v30[1];
  void *v29 = *v30;
  v29[1] = v31;
  BOOL v32 = (void *)(a1 + v28);
  uint64_t v33 = (const void *)(a2 + v28);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v33, 1, v11))
  {
    uint64_t v34 = sub_100032E20(&qword_100103A20);
    memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v32, v33, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v32, 0, 1, v11);
  }
  uint64_t v35 = a3[20];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (const void *)(a2 + v35);
  if (v13((const void *)(a2 + v35), 1, v11))
  {
    uint64_t v38 = sub_100032E20(&qword_100103A20);
    memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v36, v37, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v36, 0, 1, v11);
  }
  uint64_t v39 = a3[21];
  uint64_t v40 = (void *)(a1 + v39);
  uint64_t v41 = (const void *)(a2 + v39);
  if (v13((const void *)(a2 + v39), 1, v11))
  {
    uint64_t v42 = sub_100032E20(&qword_100103A20);
    memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v40, v41, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v40, 0, 1, v11);
  }
  uint64_t v43 = a3[22];
  uint64_t v44 = (void *)(a1 + v43);
  uint64_t v45 = (const void *)(a2 + v43);
  if (v13((const void *)(a2 + v43), 1, v11))
  {
    uint64_t v46 = sub_100032E20(&qword_100103A20);
    memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v44, v45, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v44, 0, 1, v11);
  }
  uint64_t v47 = a3[23];
  uint64_t v48 = (void *)(a1 + v47);
  uint64_t v49 = (const void *)(a2 + v47);
  if (v13((const void *)(a2 + v47), 1, v11))
  {
    uint64_t v50 = sub_100032E20(&qword_100103A20);
    memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v48, v49, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v48, 0, 1, v11);
  }
  uint64_t v51 = a3[24];
  uint64_t v52 = (void *)(a1 + v51);
  uint64_t v53 = (void *)(a2 + v51);
  if (*(void *)(a2 + v51 + 80))
  {
    uint64_t v54 = v53[1];
    void *v52 = *v53;
    unint64_t v55 = v53[2];
    sub_10004E998(v54, v55);
    v52[1] = v54;
    v52[2] = v55;
    uint64_t v56 = v53[3];
    unint64_t v57 = v53[4];
    sub_10004E998(v56, v57);
    v52[3] = v56;
    v52[4] = v57;
    uint64_t v58 = v53[5];
    unint64_t v59 = v53[6];
    sub_10004E998(v58, v59);
    v52[5] = v58;
    v52[6] = v59;
    uint64_t v60 = v53[7];
    unint64_t v61 = v53[8];
    sub_10004E998(v60, v61);
    v52[7] = v60;
    v52[8] = v61;
    uint64_t v62 = v53[10];
    v52[9] = v53[9];
    v52[10] = v62;
    uint64_t v63 = v53[11];
    unint64_t v64 = v53[12];
    swift_bridgeObjectRetain();
    sub_10004E998(v63, v64);
    v52[11] = v63;
    v52[12] = v64;
  }
  else
  {
    long long v65 = *((_OWORD *)v53 + 5);
    *((_OWORD *)v52 + 4) = *((_OWORD *)v53 + 4);
    *((_OWORD *)v52 + 5) = v65;
    v52[12] = v53[12];
    long long v66 = *((_OWORD *)v53 + 1);
    *(_OWORD *)uint64_t v52 = *(_OWORD *)v53;
    *((_OWORD *)v52 + 1) = v66;
    long long v67 = *((_OWORD *)v53 + 3);
    *((_OWORD *)v52 + 2) = *((_OWORD *)v53 + 2);
    *((_OWORD *)v52 + 3) = v67;
  }
  uint64_t v68 = a3[25];
  long long v69 = (void *)(a1 + v68);
  uint64_t v70 = (void *)(a2 + v68);
  uint64_t v71 = v70[1];
  if (v71)
  {
    void *v69 = *v70;
    v69[1] = v71;
    v69[2] = v70[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)long long v69 = *(_OWORD *)v70;
    v69[2] = v70[2];
  }
  uint64_t v72 = a3[27];
  *(void *)(a1 + a3[26]) = *(void *)(a2 + a3[26]);
  *(void *)(a1 + v72) = *(void *)(a2 + v72);
  *(void *)(a1 + a3[28]) = *(void *)(a2 + a3[28]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10004FB88(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  uint64_t v6 = a3[10];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_1000B6FD0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_100032E20(&qword_100103A20);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[11];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  int v18 = v11((void *)(a1 + v15), 1, v9);
  int v19 = v11(v17, 1, v9);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v16, v17, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v16, v9);
LABEL_12:
    uint64_t v20 = sub_100032E20(&qword_100103A20);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v16, v17, v9);
LABEL_13:
  uint64_t v21 = a3[12];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  *uint64_t v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  uint64_t v24 = a3[18];
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (void *)(a2 + v24);
  *uint64_t v25 = *v26;
  v25[1] = v26[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[19];
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (void *)(a2 + v27);
  int v30 = v11((void *)(a1 + v27), 1, v9);
  int v31 = v11(v29, 1, v9);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v28, v29, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v28, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v31)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v28, v9);
LABEL_18:
    uint64_t v32 = sub_100032E20(&qword_100103A20);
    memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v28, v29, v9);
LABEL_19:
  uint64_t v33 = a3[20];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (void *)(a2 + v33);
  int v36 = v11((void *)(a1 + v33), 1, v9);
  int v37 = v11(v35, 1, v9);
  if (v36)
  {
    if (!v37)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v34, v35, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v34, 0, 1, v9);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v37)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v34, v9);
LABEL_24:
    uint64_t v38 = sub_100032E20(&qword_100103A20);
    memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v34, v35, v9);
LABEL_25:
  uint64_t v39 = a3[21];
  uint64_t v40 = (void *)(a1 + v39);
  uint64_t v41 = (void *)(a2 + v39);
  int v42 = v11((void *)(a1 + v39), 1, v9);
  int v43 = v11(v41, 1, v9);
  if (v42)
  {
    if (!v43)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v40, v41, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v40, 0, 1, v9);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v43)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v40, v9);
LABEL_30:
    uint64_t v44 = sub_100032E20(&qword_100103A20);
    memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v40, v41, v9);
LABEL_31:
  uint64_t v45 = a3[22];
  uint64_t v46 = (void *)(a1 + v45);
  uint64_t v47 = (void *)(a2 + v45);
  int v48 = v11((void *)(a1 + v45), 1, v9);
  int v49 = v11(v47, 1, v9);
  if (v48)
  {
    if (!v49)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v46, v47, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v46, 0, 1, v9);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v49)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v46, v9);
LABEL_36:
    uint64_t v50 = sub_100032E20(&qword_100103A20);
    memcpy(v46, v47, *(void *)(*(void *)(v50 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v46, v47, v9);
LABEL_37:
  uint64_t v51 = a3[23];
  uint64_t v52 = (void *)(a1 + v51);
  uint64_t v53 = (void *)(a2 + v51);
  int v54 = v11((void *)(a1 + v51), 1, v9);
  int v55 = v11(v53, 1, v9);
  if (v54)
  {
    if (!v55)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v52, v53, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v52, 0, 1, v9);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v55)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v52, v9);
LABEL_42:
    uint64_t v56 = sub_100032E20(&qword_100103A20);
    memcpy(v52, v53, *(void *)(*(void *)(v56 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v52, v53, v9);
LABEL_43:
  uint64_t v57 = a3[24];
  uint64_t v58 = (void *)(a1 + v57);
  unint64_t v59 = (void *)(a2 + v57);
  uint64_t v60 = *(void *)(a1 + v57 + 80);
  uint64_t v61 = *(void *)(a2 + v57 + 80);
  if (v60)
  {
    if (v61)
    {
      void *v58 = *v59;
      uint64_t v62 = v59[1];
      unint64_t v63 = v59[2];
      sub_10004E998(v62, v63);
      uint64_t v64 = v58[1];
      unint64_t v65 = v58[2];
      v58[1] = v62;
      v58[2] = v63;
      sub_1000452E0(v64, v65);
      uint64_t v66 = v59[3];
      unint64_t v67 = v59[4];
      sub_10004E998(v66, v67);
      uint64_t v68 = v58[3];
      unint64_t v69 = v58[4];
      v58[3] = v66;
      v58[4] = v67;
      sub_1000452E0(v68, v69);
      uint64_t v70 = v59[5];
      unint64_t v71 = v59[6];
      sub_10004E998(v70, v71);
      uint64_t v72 = v58[5];
      unint64_t v73 = v58[6];
      v58[5] = v70;
      v58[6] = v71;
      sub_1000452E0(v72, v73);
      uint64_t v74 = v59[7];
      unint64_t v75 = v59[8];
      sub_10004E998(v74, v75);
      uint64_t v76 = v58[7];
      unint64_t v77 = v58[8];
      v58[7] = v74;
      v58[8] = v75;
      sub_1000452E0(v76, v77);
      v58[9] = v59[9];
      v58[10] = v59[10];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v78 = v59[11];
      unint64_t v79 = v59[12];
      sub_10004E998(v78, v79);
      uint64_t v80 = v58[11];
      unint64_t v81 = v58[12];
      v58[11] = v78;
      v58[12] = v79;
      sub_1000452E0(v80, v81);
    }
    else
    {
      sub_1000506B4((uint64_t)v58);
      long long v93 = *((_OWORD *)v59 + 1);
      long long v92 = *((_OWORD *)v59 + 2);
      *(_OWORD *)uint64_t v58 = *(_OWORD *)v59;
      *((_OWORD *)v58 + 1) = v93;
      *((_OWORD *)v58 + 2) = v92;
      long long v95 = *((_OWORD *)v59 + 4);
      long long v94 = *((_OWORD *)v59 + 5);
      long long v96 = *((_OWORD *)v59 + 3);
      v58[12] = v59[12];
      *((_OWORD *)v58 + 4) = v95;
      *((_OWORD *)v58 + 5) = v94;
      *((_OWORD *)v58 + 3) = v96;
    }
  }
  else if (v61)
  {
    void *v58 = *v59;
    uint64_t v82 = v59[1];
    unint64_t v83 = v59[2];
    sub_10004E998(v82, v83);
    v58[1] = v82;
    v58[2] = v83;
    uint64_t v84 = v59[3];
    unint64_t v85 = v59[4];
    sub_10004E998(v84, v85);
    v58[3] = v84;
    v58[4] = v85;
    uint64_t v86 = v59[5];
    unint64_t v87 = v59[6];
    sub_10004E998(v86, v87);
    v58[5] = v86;
    v58[6] = v87;
    uint64_t v88 = v59[7];
    unint64_t v89 = v59[8];
    sub_10004E998(v88, v89);
    v58[7] = v88;
    v58[8] = v89;
    v58[9] = v59[9];
    v58[10] = v59[10];
    uint64_t v90 = v59[11];
    unint64_t v91 = v59[12];
    swift_bridgeObjectRetain();
    sub_10004E998(v90, v91);
    v58[11] = v90;
    v58[12] = v91;
  }
  else
  {
    long long v97 = *(_OWORD *)v59;
    long long v98 = *((_OWORD *)v59 + 2);
    *((_OWORD *)v58 + 1) = *((_OWORD *)v59 + 1);
    *((_OWORD *)v58 + 2) = v98;
    *(_OWORD *)uint64_t v58 = v97;
    long long v99 = *((_OWORD *)v59 + 3);
    long long v100 = *((_OWORD *)v59 + 4);
    long long v101 = *((_OWORD *)v59 + 5);
    v58[12] = v59[12];
    *((_OWORD *)v58 + 4) = v100;
    *((_OWORD *)v58 + 5) = v101;
    *((_OWORD *)v58 + 3) = v99;
  }
  uint64_t v102 = a3[25];
  uint64_t v103 = (void *)(a1 + v102);
  id v104 = (void *)(a2 + v102);
  uint64_t v105 = *(void *)(a1 + v102 + 8);
  uint64_t v106 = *(void *)(a2 + v102 + 8);
  if (v105)
  {
    if (v106)
    {
      *uint64_t v103 = *v104;
      v103[1] = v104[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v103[2] = v104[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100050708((uint64_t)v103);
      uint64_t v107 = v104[2];
      *(_OWORD *)uint64_t v103 = *(_OWORD *)v104;
      v103[2] = v107;
    }
  }
  else if (v106)
  {
    *uint64_t v103 = *v104;
    v103[1] = v104[1];
    v103[2] = v104[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v108 = *(_OWORD *)v104;
    v103[2] = v104[2];
    *(_OWORD *)uint64_t v103 = v108;
  }
  *(void *)(a1 + a3[26]) = *(void *)(a2 + a3[26]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[27]) = *(void *)(a2 + a3[27]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[28]) = *(void *)(a2 + a3[28]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000506B4(uint64_t a1)
{
  return a1;
}

uint64_t sub_100050708(uint64_t a1)
{
  return a1;
}

uint64_t sub_10005075C(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  uint64_t v6 = a3[10];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_1000B6FD0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_100032E20(&qword_100103A20);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = a3[11];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  if (v11((const void *)(a2 + v13), 1, v9))
  {
    uint64_t v16 = sub_100032E20(&qword_100103A20);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v14, v15, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  uint64_t v17 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  *(unsigned char *)(a1 + v17) = *(unsigned char *)(a2 + v17);
  uint64_t v18 = a3[15];
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  *(unsigned char *)(a1 + v18) = *(unsigned char *)(a2 + v18);
  uint64_t v19 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(unsigned char *)(a1 + v19) = *(unsigned char *)(a2 + v19);
  uint64_t v20 = a3[19];
  *(_OWORD *)(a1 + a3[18]) = *(_OWORD *)(a2 + a3[18]);
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (const void *)(a2 + v20);
  if (v11((const void *)(a2 + v20), 1, v9))
  {
    uint64_t v23 = sub_100032E20(&qword_100103A20);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v21, v22, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v21, 0, 1, v9);
  }
  uint64_t v24 = a3[20];
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (const void *)(a2 + v24);
  if (v11((const void *)(a2 + v24), 1, v9))
  {
    uint64_t v27 = sub_100032E20(&qword_100103A20);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v25, v26, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v25, 0, 1, v9);
  }
  uint64_t v28 = a3[21];
  uint64_t v29 = (void *)(a1 + v28);
  int v30 = (const void *)(a2 + v28);
  if (v11((const void *)(a2 + v28), 1, v9))
  {
    uint64_t v31 = sub_100032E20(&qword_100103A20);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v29, v30, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v29, 0, 1, v9);
  }
  uint64_t v32 = a3[22];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (const void *)(a2 + v32);
  if (v11((const void *)(a2 + v32), 1, v9))
  {
    uint64_t v35 = sub_100032E20(&qword_100103A20);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v33, v34, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v33, 0, 1, v9);
  }
  uint64_t v36 = a3[23];
  int v37 = (void *)(a1 + v36);
  uint64_t v38 = (const void *)(a2 + v36);
  if (v11((const void *)(a2 + v36), 1, v9))
  {
    uint64_t v39 = sub_100032E20(&qword_100103A20);
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v37, v38, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v37, 0, 1, v9);
  }
  uint64_t v40 = a3[24];
  uint64_t v41 = a3[25];
  uint64_t v42 = a1 + v40;
  uint64_t v43 = a2 + v40;
  *(void *)(v42 + 96) = *(void *)(v43 + 96);
  long long v44 = *(_OWORD *)(v43 + 16);
  *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
  *(_OWORD *)(v42 + 16) = v44;
  long long v45 = *(_OWORD *)(v43 + 80);
  *(_OWORD *)(v42 + 64) = *(_OWORD *)(v43 + 64);
  *(_OWORD *)(v42 + 80) = v45;
  long long v46 = *(_OWORD *)(v43 + 48);
  *(_OWORD *)(v42 + 32) = *(_OWORD *)(v43 + 32);
  *(_OWORD *)(v42 + 48) = v46;
  uint64_t v47 = a1 + v41;
  uint64_t v48 = a2 + v41;
  *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
  *(void *)(v47 + 16) = *(void *)(v48 + 16);
  uint64_t v49 = a3[27];
  *(void *)(a1 + a3[26]) = *(void *)(a2 + a3[26]);
  *(void *)(a1 + v49) = *(void *)(a2 + v49);
  *(void *)(a1 + a3[28]) = *(void *)(a2 + a3[28]);
  return a1;
}

uint64_t sub_100050CF8(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  uint64_t v9 = a3[10];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = sub_1000B6FD0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = sub_100032E20(&qword_100103A20);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = a3[11];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  int v21 = v14((void *)(a1 + v18), 1, v12);
  int v22 = v14(v20, 1, v12);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v19, v20, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v19, 0, 1, v12);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v22)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v19, v12);
LABEL_12:
    uint64_t v23 = sub_100032E20(&qword_100103A20);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v19, v20, v12);
LABEL_13:
  uint64_t v24 = a3[12];
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (uint64_t *)(a2 + v24);
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  *uint64_t v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  uint64_t v29 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  *(unsigned char *)(a1 + v29) = *(unsigned char *)(a2 + v29);
  uint64_t v30 = a3[16];
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  *(unsigned char *)(a1 + v30) = *(unsigned char *)(a2 + v30);
  uint64_t v31 = a3[18];
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = (uint64_t *)(a2 + v31);
  uint64_t v35 = *v33;
  uint64_t v34 = v33[1];
  void *v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  uint64_t v36 = a3[19];
  int v37 = (void *)(a1 + v36);
  uint64_t v38 = (void *)(a2 + v36);
  int v39 = v14((void *)(a1 + v36), 1, v12);
  int v40 = v14(v38, 1, v12);
  if (v39)
  {
    if (!v40)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v37, v38, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v37, 0, 1, v12);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v40)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v37, v12);
LABEL_18:
    uint64_t v41 = sub_100032E20(&qword_100103A20);
    memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v37, v38, v12);
LABEL_19:
  uint64_t v42 = a3[20];
  uint64_t v43 = (void *)(a1 + v42);
  long long v44 = (void *)(a2 + v42);
  int v45 = v14((void *)(a1 + v42), 1, v12);
  int v46 = v14(v44, 1, v12);
  if (v45)
  {
    if (!v46)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v43, v44, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v43, 0, 1, v12);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v46)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v43, v12);
LABEL_24:
    uint64_t v47 = sub_100032E20(&qword_100103A20);
    memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v43, v44, v12);
LABEL_25:
  uint64_t v48 = a3[21];
  uint64_t v49 = (void *)(a1 + v48);
  uint64_t v50 = (void *)(a2 + v48);
  int v51 = v14((void *)(a1 + v48), 1, v12);
  int v52 = v14(v50, 1, v12);
  if (v51)
  {
    if (!v52)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v49, v50, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v49, 0, 1, v12);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v52)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v49, v12);
LABEL_30:
    uint64_t v53 = sub_100032E20(&qword_100103A20);
    memcpy(v49, v50, *(void *)(*(void *)(v53 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v49, v50, v12);
LABEL_31:
  uint64_t v54 = a3[22];
  int v55 = (void *)(a1 + v54);
  uint64_t v56 = (void *)(a2 + v54);
  int v57 = v14((void *)(a1 + v54), 1, v12);
  int v58 = v14(v56, 1, v12);
  if (v57)
  {
    if (!v58)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v55, v56, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v55, 0, 1, v12);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v58)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v55, v12);
LABEL_36:
    uint64_t v59 = sub_100032E20(&qword_100103A20);
    memcpy(v55, v56, *(void *)(*(void *)(v59 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v55, v56, v12);
LABEL_37:
  uint64_t v60 = a3[23];
  uint64_t v61 = (void *)(a1 + v60);
  uint64_t v62 = (void *)(a2 + v60);
  int v63 = v14((void *)(a1 + v60), 1, v12);
  int v64 = v14(v62, 1, v12);
  if (v63)
  {
    if (!v64)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v61, v62, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v61, 0, 1, v12);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v64)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v61, v12);
LABEL_42:
    uint64_t v65 = sub_100032E20(&qword_100103A20);
    memcpy(v61, v62, *(void *)(*(void *)(v65 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v61, v62, v12);
LABEL_43:
  uint64_t v66 = a3[24];
  uint64_t v67 = a1 + v66;
  uint64_t v68 = a2 + v66;
  if (*(void *)(a1 + v66 + 80))
  {
    if (*(void *)(v68 + 80))
    {
      uint64_t v69 = *(void *)(v68 + 16);
      uint64_t v70 = *(void *)(v67 + 8);
      unint64_t v71 = *(void *)(v67 + 16);
      *(_OWORD *)uint64_t v67 = *(_OWORD *)v68;
      *(void *)(v67 + 16) = v69;
      sub_1000452E0(v70, v71);
      uint64_t v72 = *(void *)(v67 + 24);
      unint64_t v73 = *(void *)(v67 + 32);
      *(_OWORD *)(v67 + 24) = *(_OWORD *)(v68 + 24);
      sub_1000452E0(v72, v73);
      uint64_t v74 = *(void *)(v67 + 40);
      unint64_t v75 = *(void *)(v67 + 48);
      *(_OWORD *)(v67 + 40) = *(_OWORD *)(v68 + 40);
      sub_1000452E0(v74, v75);
      uint64_t v76 = *(void *)(v67 + 56);
      unint64_t v77 = *(void *)(v67 + 64);
      *(_OWORD *)(v67 + 56) = *(_OWORD *)(v68 + 56);
      sub_1000452E0(v76, v77);
      uint64_t v78 = *(void *)(v68 + 80);
      *(void *)(v67 + 72) = *(void *)(v68 + 72);
      *(void *)(v67 + 80) = v78;
      swift_bridgeObjectRelease();
      uint64_t v79 = *(void *)(v67 + 88);
      unint64_t v80 = *(void *)(v67 + 96);
      *(_OWORD *)(v67 + 88) = *(_OWORD *)(v68 + 88);
      sub_1000452E0(v79, v80);
      goto LABEL_48;
    }
    sub_1000506B4(v67);
  }
  long long v81 = *(_OWORD *)(v68 + 80);
  *(_OWORD *)(v67 + 64) = *(_OWORD *)(v68 + 64);
  *(_OWORD *)(v67 + 80) = v81;
  *(void *)(v67 + 96) = *(void *)(v68 + 96);
  long long v82 = *(_OWORD *)(v68 + 16);
  *(_OWORD *)uint64_t v67 = *(_OWORD *)v68;
  *(_OWORD *)(v67 + 16) = v82;
  long long v83 = *(_OWORD *)(v68 + 48);
  *(_OWORD *)(v67 + 32) = *(_OWORD *)(v68 + 32);
  *(_OWORD *)(v67 + 48) = v83;
LABEL_48:
  uint64_t v84 = a3[25];
  uint64_t v85 = a1 + v84;
  uint64_t v86 = a2 + v84;
  if (!*(void *)(a1 + v84 + 8))
  {
LABEL_52:
    *(_OWORD *)uint64_t v85 = *(_OWORD *)v86;
    *(void *)(v85 + 16) = *(void *)(v86 + 16);
    goto LABEL_53;
  }
  uint64_t v87 = *(void *)(v86 + 8);
  if (!v87)
  {
    sub_100050708(v85);
    goto LABEL_52;
  }
  *(void *)uint64_t v85 = *(void *)v86;
  *(void *)(v85 + 8) = v87;
  swift_bridgeObjectRelease();
  *(void *)(v85 + 16) = *(void *)(v86 + 16);
  swift_bridgeObjectRelease();
LABEL_53:
  *(void *)(a1 + a3[26]) = *(void *)(a2 + a3[26]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[27]) = *(void *)(a2 + a3[27]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[28]) = *(void *)(a2 + a3[28]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100051648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10005165C);
}

uint64_t sub_10005165C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100032E20(&qword_100103A20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 40);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100051710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100051724);
}

uint64_t sub_100051724(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100032E20(&qword_100103A20);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1000517D0()
{
  sub_1000518DC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1000518DC()
{
  if (!qword_100103C58)
  {
    sub_1000B6FD0();
    unint64_t v0 = sub_1000B79E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100103C58);
    }
  }
}

uint64_t sub_100051934(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_100051F7C(&qword_100103B28, (void (*)(uint64_t))type metadata accessor for ICNoteArchiveModel);
  uint64_t result = sub_100051F7C(&qword_100103D20, (void (*)(uint64_t))type metadata accessor for ICNoteArchiveModel);
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1000519B8()
{
  unint64_t result = qword_100103D30;
  if (!qword_100103D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100103D30);
  }
  return result;
}

unint64_t sub_100051A0C()
{
  unint64_t result = qword_100103D38;
  if (!qword_100103D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100103D38);
  }
  return result;
}

unint64_t sub_100051A60()
{
  unint64_t result = qword_100103D48;
  if (!qword_100103D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100103D48);
  }
  return result;
}

unint64_t sub_100051AB4()
{
  unint64_t result = qword_100103D50;
  if (!qword_100103D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100103D50);
  }
  return result;
}

unint64_t sub_100051B08()
{
  unint64_t result = qword_100103D58;
  if (!qword_100103D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100103D58);
  }
  return result;
}

unint64_t sub_100051B5C()
{
  unint64_t result = qword_100103D60;
  if (!qword_100103D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100103D60);
  }
  return result;
}

unint64_t sub_100051BB0()
{
  unint64_t result = qword_100103D68;
  if (!qword_100103D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100103D68);
  }
  return result;
}

unint64_t sub_100051C04()
{
  unint64_t result = qword_100103DA8;
  if (!qword_100103DA8)
  {
    sub_100032F70(&qword_100103DA0);
    sub_100051F7C(&qword_100103D80, (void (*)(uint64_t))&type metadata accessor for UUID);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100103DA8);
  }
  return result;
}

unint64_t sub_100051CB0()
{
  unint64_t result = qword_100103DC0;
  if (!qword_100103DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100103DC0);
  }
  return result;
}

unint64_t sub_100051D04()
{
  unint64_t result = qword_100103DC8;
  if (!qword_100103DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100103DC8);
  }
  return result;
}

unint64_t sub_100051D58()
{
  unint64_t result = qword_100103DD0;
  if (!qword_100103DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100103DD0);
  }
  return result;
}

unint64_t sub_100051DAC()
{
  unint64_t result = qword_100103DD8;
  if (!qword_100103DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100103DD8);
  }
  return result;
}

unint64_t sub_100051E00()
{
  unint64_t result = qword_100103DE0;
  if (!qword_100103DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100103DE0);
  }
  return result;
}

uint64_t sub_100051E54(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100032F70(&qword_100103D70);
    sub_100051F7C(a2, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100051EE8(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100032F70(&qword_100103D88);
    sub_100051F7C(a2, (void (*)(uint64_t))_s8ActivityVMa);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100051F7C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100051FC4()
{
  unint64_t result = qword_100103E08;
  if (!qword_100103E08)
  {
    sub_100032F70(&qword_100103DA0);
    sub_100051F7C(&qword_100103DF0, (void (*)(uint64_t))&type metadata accessor for UUID);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100103E08);
  }
  return result;
}

uint64_t sub_100052070(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000520D8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for ICNoteArchiveModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE8) {
    goto LABEL_17;
  }
  if (a2 + 24 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 24) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 24;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 24;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 24;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x19;
  int v8 = v6 - 25;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ICNoteArchiveModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 24 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 24) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE7)
  {
    unsigned int v6 = ((a2 - 232) >> 8) + 1;
    *unint64_t result = a2 + 24;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100052294);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 24;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICNoteArchiveModel.CodingKeys()
{
  return &type metadata for ICNoteArchiveModel.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ICNoteArchiveModel.Backgrounds(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ICNoteArchiveModel.Backgrounds(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100052428);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_100052450(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ICNoteArchiveModel.Backgrounds()
{
  return &type metadata for ICNoteArchiveModel.Backgrounds;
}

uint64_t getEnumTagSinglePayload for ICNoteArchiveModel.PaperStyles(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ICNoteArchiveModel.PaperStyles(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000525C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICNoteArchiveModel.PaperStyles()
{
  return &type metadata for ICNoteArchiveModel.PaperStyles;
}

uint64_t getEnumTagSinglePayload for ICNoteArchiveModel.AttachmentViewTypes(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ICNoteArchiveModel.AttachmentViewTypes(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10005275CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICNoteArchiveModel.AttachmentViewTypes()
{
  return &type metadata for ICNoteArchiveModel.AttachmentViewTypes;
}

uint64_t sub_100052798()
{
  return sub_1000528C8(&qword_100103E10, &qword_100103E18);
}

unint64_t sub_1000527C4()
{
  unint64_t result = qword_100103E20;
  if (!qword_100103E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100103E20);
  }
  return result;
}

uint64_t sub_10005281C()
{
  return sub_1000528C8(&qword_100103E28, &qword_100103E30);
}

unint64_t sub_100052848()
{
  unint64_t result = qword_100103E38;
  if (!qword_100103E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100103E38);
  }
  return result;
}

uint64_t sub_1000528A0()
{
  return sub_1000528C8(&qword_100103E40, &qword_100103E48);
}

uint64_t sub_1000528C8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100032F70(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10005291C()
{
  unint64_t result = qword_100103E50;
  if (!qword_100103E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100103E50);
  }
  return result;
}

unint64_t sub_100052974()
{
  unint64_t result = qword_100103E58;
  if (!qword_100103E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100103E58);
  }
  return result;
}

unint64_t sub_1000529CC()
{
  unint64_t result = qword_100103E60;
  if (!qword_100103E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100103E60);
  }
  return result;
}

unint64_t sub_100052A24()
{
  unint64_t result = qword_100103E68;
  if (!qword_100103E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100103E68);
  }
  return result;
}

unint64_t sub_100052A78()
{
  unint64_t result = qword_100103E70;
  if (!qword_100103E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100103E70);
  }
  return result;
}

unint64_t sub_100052ACC()
{
  unint64_t result = qword_100103E78;
  if (!qword_100103E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100103E78);
  }
  return result;
}

unint64_t sub_100052B20()
{
  unint64_t result = qword_100103E80;
  if (!qword_100103E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100103E80);
  }
  return result;
}

unint64_t sub_100052B74()
{
  unint64_t result = qword_100103E88;
  if (!qword_100103E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100103E88);
  }
  return result;
}

uint64_t sub_100052BC8(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1000EF010;
  v6._object = a2;
  unint64_t v4 = sub_1000B7C00(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 7) {
    return 7;
  }
  else {
    return v4;
  }
}

unint64_t sub_100052C14()
{
  unint64_t result = qword_100103E90;
  if (!qword_100103E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100103E90);
  }
  return result;
}

uint64_t sub_100052C68(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1000EF178;
  v6._object = a2;
  unint64_t v4 = sub_1000B7C00(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 3) {
    return 3;
  }
  else {
    return v4;
  }
}

unint64_t sub_100052CB4()
{
  unint64_t result = qword_100103E98;
  if (!qword_100103E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100103E98);
  }
  return result;
}

uint64_t sub_100052D10()
{
  id v1 = [v0 identifier];
  if (!v1) {
    return 0;
  }
  int v2 = v1;
  uint64_t v3 = sub_1000B75B0();

  return v3;
}

uint64_t sub_100052D78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000B6F10();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 1, 1, v2);
}

uint64_t sub_100052DE4(uint64_t a1, uint64_t a2)
{
  return sub_100053468(a1, a2, (SEL *)&selRef_localizedName);
}

void *sub_100052DF0()
{
  return &_swiftEmptySetSingleton;
}

uint64_t sub_100052DFC@<X0>(uint64_t a1@<X8>)
{
  return sub_100052D78(a1);
}

uint64_t sub_100052E14()
{
  return 0;
}

uint64_t sub_100052E20(uint64_t *a1)
{
  uint64_t v3 = *v1;
  [v3 persistPendingChanges];
  id v4 = v3;
  sub_100054560(a1);
  sub_10005E7C0(v4, a1, (uint64_t)&v7);
  if (qword_100103660 != -1) {
    swift_once();
  }
  sub_100054E40();
  uint64_t v5 = sub_1000B6D50();
  sub_100046E50((uint64_t)&v7);
  return v5;
}

void *sub_100052F0C()
{
  uint64_t v1 = sub_100032E20(&qword_100103A20);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = _s3TagVMa();
  uint64_t v41 = *(void *)(v4 - 8);
  uint64_t v42 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  long long v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v37 - v8;
  id v10 = [v0 account];
  if (!v10) {
    return &_swiftEmptySetSingleton;
  }
  uint64_t v11 = v10;
  id v12 = [v0 visibleInlineAttachments];
  sub_100038DC8(0, &qword_100103EC0);
  sub_100054D78();
  uint64_t v13 = sub_1000B7780();

  id v14 = v11;
  sub_100054660(v13, v14);
  unint64_t v16 = v15;
  swift_bridgeObjectRelease();

  if (!(v16 >> 62))
  {
    uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v17) {
      goto LABEL_4;
    }
LABEL_22:
    swift_bridgeObjectRelease();
    uint64_t v33 = _swiftEmptyArrayStorage;
LABEL_23:
    uint64_t v36 = sub_10008D724((uint64_t)v33);

    swift_bridgeObjectRelease();
    return (void *)v36;
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1000B7BA0();
  swift_bridgeObjectRelease();
  if (!v17) {
    goto LABEL_22;
  }
LABEL_4:
  uint64_t v43 = _swiftEmptyArrayStorage;
  unint64_t result = (void *)sub_1000438DC(0, v17 & ~(v17 >> 63), 0);
  if ((v17 & 0x8000000000000000) == 0)
  {
    uint64_t v19 = 0;
    id v37 = v14;
    unint64_t v38 = v16 & 0xC000000000000001;
    uint64_t v39 = v17;
    unint64_t v40 = v16;
    do
    {
      if (v38) {
        id v20 = (id)sub_1000B7AC0();
      }
      else {
        id v20 = *(id *)(v16 + 8 * v19 + 32);
      }
      int v21 = v20;
      uint64_t v22 = sub_1000B6FD0();
      uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
      uint64_t v24 = 1;
      v23(v7, 1, 1, v22);
      id v25 = [v21 creationDate];
      if (v25)
      {
        uint64_t v26 = v25;
        sub_1000B6FA0();

        uint64_t v24 = 0;
      }
      v23(v3, v24, 1, v22);
      sub_10004E390((uint64_t)v3, (uint64_t)v7);
      id v27 = [v21 displayText];
      if (v27)
      {
        uint64_t v28 = v27;
        uint64_t v29 = sub_1000B75B0();
        unint64_t v31 = v30;
      }
      else
      {

        uint64_t v29 = 0;
        unint64_t v31 = 0xE000000000000000;
      }
      uint64_t v32 = (uint64_t *)&v7[*(int *)(v42 + 20)];
      uint64_t *v32 = v29;
      v32[1] = v31;
      sub_100046D38((uint64_t)v7, (uint64_t)v9);
      uint64_t v33 = v43;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1000438DC(0, v33[2] + 1, 1);
        uint64_t v33 = v43;
      }
      unint64_t v35 = v33[2];
      unint64_t v34 = v33[3];
      if (v35 >= v34 >> 1)
      {
        sub_1000438DC(v34 > 1, v35 + 1, 1);
        uint64_t v33 = v43;
      }
      ++v19;
      v33[2] = v35 + 1;
      sub_100046D38((uint64_t)v9, (uint64_t)v33+ ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))+ *(void *)(v41 + 72) * v35);
      unint64_t v16 = v40;
    }
    while (v39 != v19);
    swift_bridgeObjectRelease();
    id v14 = v37;
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

void *sub_100053348(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_11;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = sub_1000B7BA0())
  {
    uint64_t v3 = 4;
    while (1)
    {
      id v4 = (a1 & 0xC000000000000001) != 0 ? (id)sub_1000B7AC0() : *(id *)(a1 + 8 * v3);
      uint64_t v5 = v4;
      uint64_t v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1)) {
        break;
      }
      long long v7 = sub_100052F0C();

      sub_10006A5D8((uint64_t)v7);
      ++v3;
      if (v6 == v2) {
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_11:
    swift_bridgeObjectRetain();
  }
LABEL_12:
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10005345C(uint64_t a1, uint64_t a2)
{
  return sub_100053468(a1, a2, (SEL *)&selRef_title);
}

uint64_t sub_100053468(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v4 = [*v3 *a3];
  uint64_t v5 = sub_1000B75B0();

  return v5;
}

uint64_t sub_1000534BC()
{
  id v1 = [*v0 visibleNotesInFolder];
  sub_100038DC8(0, &qword_100103980);
  unint64_t v2 = sub_1000B76E0();

  uint64_t v3 = sub_100053348(v2);
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_10008D724((uint64_t)v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_100053560(uint64_t *a1)
{
  uint64_t v3 = type metadata accessor for ICFolderArchiveModel(0);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v1;
  [v6 persistPendingChanges];
  id v7 = v6;
  sub_100054560(a1);
  sub_1000AE9D0(v7, a1, (uint64_t)v5);
  if (qword_100103660 != -1) {
    swift_once();
  }
  sub_100054D30(&qword_100103ED0, (void (*)(uint64_t))type metadata accessor for ICFolderArchiveModel);
  uint64_t v8 = sub_1000B6D50();
  sub_100054DE0((uint64_t)v5, type metadata accessor for ICFolderArchiveModel);
  return v8;
}

uint64_t sub_1000536CC()
{
  id v1 = [*v0 title];
  if (!v1) {
    return 0;
  }
  unint64_t v2 = v1;
  uint64_t v3 = sub_1000B75B0();

  return v3;
}

void *sub_100053734()
{
  return sub_100052F0C();
}

uint64_t sub_100053758(uint64_t *a1)
{
  uint64_t v3 = type metadata accessor for ICNoteArchiveModel();
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v1;
  [v6 persistPendingChanges];
  id v7 = v6;
  sub_100054560(a1);
  sub_10004AAAC(v7, a1, (uint64_t)v5);
  if (qword_100103660 != -1) {
    swift_once();
  }
  sub_100054D30(&qword_100103D20, (void (*)(uint64_t))type metadata accessor for ICNoteArchiveModel);
  uint64_t v8 = sub_1000B6D50();
  sub_100054DE0((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ICNoteArchiveModel);
  return v8;
}

uint64_t sub_1000538C4@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = v1;
  uint64_t v4 = sub_100032E20((uint64_t *)&unk_1001042F0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ([v2 isPasswordProtected]
    || (id v7 = [v2 media]) == 0)
  {
    uint64_t v11 = sub_1000B6F10();
    id v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    return v12(a1, 1, 1, v11);
  }
  else
  {
    uint64_t v8 = v7;
    id v9 = [v7 mediaURL];

    if (v9)
    {
      sub_1000B6EE0();

      uint64_t v10 = sub_1000B6F10();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v6, 0, 1, v10);
    }
    else
    {
      uint64_t v14 = sub_1000B6F10();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v6, 1, 1, v14);
    }
    return sub_10004EA80((uint64_t)v6, a1, (uint64_t *)&unk_1001042F0);
  }
}

id sub_100053A8C()
{
  id v1 = [v0 media];
  if (!v1) {
    return 0;
  }
  unint64_t v2 = v1;
  id v3 = [v1 cryptoStrategy];

  if (v3)
  {
    id v4 = [v3 decryptedData];
    swift_unknownObjectRelease();
    if (v4)
    {
      id v3 = (id)sub_1000B6F30();

      return v3;
    }
    return 0;
  }
  return v3;
}

void *sub_100053B40()
{
  id v1 = v0;
  uint64_t v2 = sub_1000B6F10();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v22 - v7;
  id v9 = [v1 attachmentModel];
  self;
  uint64_t v10 = swift_dynamicCastObjCClass();
  if (v10)
  {
    uint64_t v11 = (void *)v10;
    sub_100032E20(&qword_100103B80);
    uint64_t v12 = *(void *)(v3 + 72);
    unint64_t v13 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1000CB7A0;
    unint64_t v15 = v14 + v13;
    id v16 = v9;
    id v17 = [v11 paperBundleDatabaseSubdirectoryURL];
    sub_1000B6EE0();

    uint64_t v18 = *(void (**)(unint64_t, char *, uint64_t))(v3 + 32);
    v18(v15, v8, v2);
    id v19 = [v11 paperBundleAssetsSubdirectoryURL];
    sub_1000B6EE0();

    v18(v15 + v12, v6, v2);
    id v20 = sub_100054A18(v14);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
  }
  else
  {

    return &_swiftEmptySetSingleton;
  }
  return v20;
}

id sub_100053D74()
{
  id v1 = v0;
  uint64_t v2 = sub_100032E20(&qword_100103EA8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v8 = (char *)&v27 - v7;
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v27 - v9;
  id v11 = [v1 attachmentModel];
  self;
  uint64_t v12 = swift_dynamicCastObjCClass();
  if (v12)
  {
    unint64_t v13 = (void *)v12;
    id v14 = v11;
    id v15 = [v13 newDrawingFromMergeableData];
    if (v15)
    {
      id v16 = v15;
      sub_1000B74E0();

      uint64_t v17 = sub_1000B74F0();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v8, 0, 1, v17);
    }
    else
    {
      uint64_t v17 = sub_1000B74F0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v8, 1, 1, v17);
    }
    sub_10004EA80((uint64_t)v8, (uint64_t)v10, &qword_100103EA8);
    sub_100054598((uint64_t)v10, (uint64_t)v5);
    sub_1000B74F0();
    uint64_t v22 = *(void *)(v17 - 8);
    Class isa = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v5, 1, v17) != 1)
    {
      Class isa = sub_1000B74D0().super.isa;
      (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v17);
    }
    id v24 = [self generateImageForAttachment:v1 fromDrawing:isa fullResolution:1 appearanceInfo:0];

    if (v24)
    {
      id v25 = [v24 ic_PNGData];
      id v20 = (id)sub_1000B6F30();
    }
    else
    {

      id v20 = 0;
    }
    sub_100054600((uint64_t)v10);
  }
  else
  {
    self;
    if (swift_dynamicCastObjCClass())
    {
      uint64_t v18 = self;
      id v19 = [self appearanceInfoWithType:0];
      id v20 = [v18 generateImageForAttachment:v1 fullResolution:1 appearanceInfo:v19];

      if (v20)
      {
        id v21 = [v20 ic_PNGData];

        id v20 = (id)sub_1000B6F30();
      }
    }
    else
    {

      return 0;
    }
  }
  return v20;
}

uint64_t sub_100054118()
{
  if ([v0 attachmentType] != 14 && objc_msgSend(v0, "attachmentType") != 15) {
    return 0;
  }
  id v1 = [v0 fallbackPDFData];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_1000B6F30();

  return v3;
}

uint64_t sub_1000541AC(uint64_t *a1)
{
  uint64_t v3 = type metadata accessor for ICAttachmentArchiveModel();
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  [v1 persistPendingChanges];
  id v6 = [v1 media];
  if (v6)
  {
    uint64_t v7 = v6;
    [v6 persistPendingChanges];
  }
  id v8 = v1;
  sub_100054560(a1);
  sub_10006F794(v8, (uint64_t)a1, (uint64_t)v5);
  if (qword_100103660 != -1) {
    swift_once();
  }
  sub_100054D30(&qword_100103EA0, (void (*)(uint64_t))type metadata accessor for ICAttachmentArchiveModel);
  uint64_t v9 = sub_1000B6D50();
  sub_100054DE0((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ICAttachmentArchiveModel);
  return v9;
}

uint64_t sub_10005434C()
{
  return sub_100052D10();
}

uint64_t sub_100054370()
{
  id v1 = *v0;
  id v2 = [*v0 userTitle];
  if (!v2)
  {
    id v2 = [v1 title];
    if (!v2) {
      return 0;
    }
  }
  uint64_t v3 = sub_1000B75B0();

  return v3;
}

void *sub_100054400()
{
  id v1 = [*v0 media];
  id v2 = v1;
  if (v1)
  {
    id v3 = [v1 filename];

    id v2 = (void *)sub_1000B75B0();
  }
  return v2;
}

uint64_t sub_100054488@<X0>(uint64_t a1@<X8>)
{
  return sub_1000538C4(a1);
}

id sub_1000544AC()
{
  return sub_100053A8C();
}

void *sub_1000544D0()
{
  return sub_100053B40();
}

id sub_1000544F4()
{
  return sub_100053D74();
}

uint64_t sub_100054518()
{
  return sub_100054118();
}

uint64_t sub_10005453C(uint64_t *a1)
{
  return sub_1000541AC(a1);
}

uint64_t *sub_100054560(uint64_t *a1)
{
  return a1;
}

uint64_t sub_100054598(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100032E20(&qword_100103EA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100054600(uint64_t a1)
{
  uint64_t v2 = sub_100032E20(&qword_100103EA8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_100054660(uint64_t a1, void *a2)
{
  uint64_t v2 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1000B7A50();
    sub_100038DC8(0, &qword_100103EC0);
    sub_100054D78();
    sub_1000B77A0();
    uint64_t v2 = v25;
    uint64_t v23 = v26;
    uint64_t v3 = v27;
    int64_t v4 = v28;
    unint64_t v5 = v29;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v23 = a1 + 56;
    uint64_t v3 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    int64_t v4 = 0;
  }
  int64_t v9 = (unint64_t)(v3 + 64) >> 6;
  while (v2 < 0)
  {
    if (!sub_1000B7A60()) {
      goto LABEL_40;
    }
    sub_100038DC8(0, &qword_100103EC0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v13 = v24;
    swift_unknownObjectRelease();
    int64_t v12 = v4;
    uint64_t v10 = v5;
    if (!v24) {
      goto LABEL_40;
    }
LABEL_28:
    if (![v13 isHashtagAttachment]
      || (id v16 = [v13 tokenContentIdentifier]) == 0)
    {

      goto LABEL_9;
    }
    uint64_t v17 = v16;
    sub_1000B75B0();

    id v18 = a2;
    NSString v19 = sub_1000B7580();
    swift_bridgeObjectRelease();
    id v20 = [self hashtagWithStandardizedContent:v19 onlyVisible:1 account:v18];

    int64_t v4 = v12;
    unint64_t v5 = v10;
    if (v20)
    {
      sub_1000B76C0();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1000B7710();
      }
      sub_1000B7740();
      sub_1000B7700();
LABEL_9:
      int64_t v4 = v12;
      unint64_t v5 = v10;
    }
  }
  if (v5)
  {
    uint64_t v10 = (v5 - 1) & v5;
    unint64_t v11 = __clz(__rbit64(v5)) | (v4 << 6);
    int64_t v12 = v4;
LABEL_27:
    id v13 = *(id *)(*(void *)(v2 + 48) + 8 * v11);
    if (!v13) {
      goto LABEL_40;
    }
    goto LABEL_28;
  }
  int64_t v12 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v12 >= v9) {
      goto LABEL_40;
    }
    unint64_t v14 = *(void *)(v23 + 8 * v12);
    if (!v14)
    {
      int64_t v15 = v4 + 2;
      if (v4 + 2 >= v9) {
        goto LABEL_40;
      }
      unint64_t v14 = *(void *)(v23 + 8 * v15);
      if (v14) {
        goto LABEL_25;
      }
      int64_t v15 = v4 + 3;
      if (v4 + 3 >= v9) {
        goto LABEL_40;
      }
      unint64_t v14 = *(void *)(v23 + 8 * v15);
      if (v14) {
        goto LABEL_25;
      }
      int64_t v15 = v4 + 4;
      if (v4 + 4 >= v9) {
        goto LABEL_40;
      }
      unint64_t v14 = *(void *)(v23 + 8 * v15);
      if (v14)
      {
LABEL_25:
        int64_t v12 = v15;
      }
      else
      {
        int64_t v12 = v4 + 5;
        if (v4 + 5 >= v9) {
          goto LABEL_40;
        }
        unint64_t v14 = *(void *)(v23 + 8 * v12);
        if (!v14)
        {
          int64_t v21 = v4 + 6;
          while (v9 != v21)
          {
            unint64_t v14 = *(void *)(v23 + 8 * v21++);
            if (v14)
            {
              int64_t v12 = v21 - 1;
              goto LABEL_26;
            }
          }
LABEL_40:
          sub_100038F7C();
          return;
        }
      }
    }
LABEL_26:
    uint64_t v10 = (v14 - 1) & v14;
    unint64_t v11 = __clz(__rbit64(v14)) + (v12 << 6);
    goto LABEL_27;
  }
  __break(1u);
}

void *sub_100054A18(uint64_t a1)
{
  uint64_t v2 = sub_1000B6F10();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  id v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_100032E20(&qword_100103EB0);
    uint64_t v9 = sub_1000B7A90();
    uint64_t v10 = 0;
    int64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    unint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    int64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    unint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_100054D30(&qword_100103AB8, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v16 = sub_1000B7520();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_100054D30(&qword_100103EB8, (void (*)(uint64_t))&type metadata accessor for URL);
          char v23 = sub_1000B7570();
          id v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        unint64_t result = (void *)(*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return (void *)v9;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

uint64_t sub_100054D30(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100054D78()
{
  unint64_t result = qword_100103EC8;
  if (!qword_100103EC8)
  {
    sub_100038DC8(255, &qword_100103EC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100103EC8);
  }
  return result;
}

uint64_t sub_100054DE0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_100054E40()
{
  unint64_t result = qword_100103ED8;
  if (!qword_100103ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100103ED8);
  }
  return result;
}

uint64_t sub_100054E98@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v192 = a1;
  uint64_t v3 = sub_100032E20(&qword_100103EE0);
  __chkstk_darwin(v3 - 8);
  id v186 = (char *)&v149 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100032E20(&qword_100103EE8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  unint64_t v168 = (char *)&v149 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v175 = (char *)&v149 - v8;
  uint64_t v9 = sub_100032E20(&qword_100103EF0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v190 = (uint64_t)&v149 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v158 = (char *)&v149 - v12;
  uint64_t v13 = sub_100032E20(&qword_100103A20);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v178 = (uint64_t)&v149 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  long long v154 = (char *)&v149 - v16;
  uint64_t v17 = sub_100032E20(&qword_100103BC0);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v171 = (char *)&v149 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v176 = (uint64_t)&v149 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v169 = (char *)&v149 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  v163 = (char *)&v149 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  id v185 = (char *)&v149 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v151 = (uint64_t)&v149 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  long long v156 = (char *)&v149 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v150 = (uint64_t)&v149 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v153 = (char *)&v149 - v35;
  __chkstk_darwin(v34);
  id v37 = (char *)&v149 - v36;
  uint64_t v38 = sub_100032E20(&qword_100103BC8);
  uint64_t v39 = __chkstk_darwin(v38 - 8);
  id v165 = (char *)&v149 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __chkstk_darwin(v39);
  unint64_t v174 = (char *)&v149 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  int v45 = (char *)&v149 - v44;
  uint64_t v46 = __chkstk_darwin(v43);
  uint64_t v48 = (char *)&v149 - v47;
  __chkstk_darwin(v46);
  uint64_t v50 = (char *)&v149 - v49;
  uint64_t v51 = sub_1000B6FD0();
  uint64_t v52 = *(void *)(v51 - 8);
  uint64_t v177 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 56);
  v177(a2, 1, 1, v51);
  uint64_t v53 = (int *)_s8ActivityVMa();
  uint64_t v54 = a2 + v53[5];
  uint64_t v55 = sub_1000B71F0();
  uint64_t v172 = *(void *)(v55 - 8);
  uint64_t v56 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v172 + 56);
  uint64_t v155 = v54;
  uint64_t v187 = v55;
  unint64_t v179 = v56;
  uint64_t v180 = v172 + 56;
  ((void (*)(uint64_t, uint64_t, uint64_t))v56)(v54, 1, 1);
  uint64_t v57 = a2 + v53[6];
  uint64_t v58 = sub_1000B7350();
  uint64_t v173 = *(void *)(v58 - 8);
  uint64_t v59 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v173 + 56);
  uint64_t v157 = v57;
  uint64_t v183 = v173 + 56;
  uint64_t v184 = v58;
  uint64_t v182 = v59;
  ((void (*)(uint64_t, uint64_t, uint64_t))v59)(v57, 1, 1);
  uint64_t v60 = a2 + v53[7];
  uint64_t v61 = sub_1000B72D0();
  uint64_t v62 = *(void *)(v61 - 8);
  int v63 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v62 + 56);
  uint64_t v162 = v60;
  uint64_t v161 = v61;
  uint64_t v160 = v63;
  uint64_t v159 = v62 + 56;
  ((void (*)(uint64_t, uint64_t, uint64_t))v63)(v60, 1, 1);
  int v64 = (uint64_t *)(a2 + v53[8]);
  uint64_t *v64 = 0;
  v64[1] = 0;
  id v164 = v64;
  uint64_t v65 = a2 + v53[9];
  *(void *)uint64_t v65 = 0;
  uint64_t v166 = (uint64_t *)v65;
  *(unsigned char *)(v65 + 8) = 1;
  v170 = v53;
  uint64_t v66 = v53[10];
  uint64_t v193 = a2;
  uint64_t v67 = (uint64_t *)(a2 + v66);
  sub_1000560FC();
  uint64_t *v67 = 0;
  v67[1] = 0;
  sub_1000B7970();
  id v191 = v37;
  sub_1000B7960();
  id v188 = v50;
  sub_100032FC8((uint64_t)v50, (uint64_t)v48, &qword_100103BC8);
  uint64_t v68 = sub_1000B7330();
  uint64_t v69 = *(void *)(v68 - 8);
  id v194 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v69 + 48);
  uint64_t v195 = v69 + 48;
  int v70 = v194(v48, 1, v68);
  uint64_t v189 = v68;
  id v167 = v67;
  id v152 = v45;
  if (v70 == 1)
  {
    sub_100038E30((uint64_t)v48, &qword_100103BC8);
    uint64_t v71 = 1;
    uint64_t v72 = v190;
    uint64_t v73 = (uint64_t)v154;
    uint64_t v74 = v178;
  }
  else
  {
    uint64_t v74 = v178;
    sub_1000B7310();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v48, v68);
    uint64_t v71 = 0;
    uint64_t v72 = v190;
    uint64_t v73 = (uint64_t)v154;
  }
  uint64_t v75 = (uint64_t)v153;
  uint64_t v76 = v177;
  v177(v74, v71, 1, v51);
  sub_100032FC8((uint64_t)v191, v75, &qword_100103BC0);
  int v77 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v52 + 48))(v74, 1, v51);
  uint64_t v181 = v69;
  if (v77 == 1)
  {
    uint64_t v78 = v150;
    sub_100032FC8(v75, v150, &qword_100103BC0);
    uint64_t v79 = sub_1000B7270();
    uint64_t v80 = *(void *)(v79 - 8);
    int v81 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v80 + 48))(v78, 1, v79);
    uint64_t v82 = (uint64_t)v152;
    if (v81 == 1)
    {
      sub_100038E30(v75, &qword_100103BC0);
      sub_100038E30(v78, &qword_100103BC0);
      uint64_t v83 = 1;
    }
    else
    {
      sub_1000B7250();
      sub_100038E30(v75, &qword_100103BC0);
      (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v78, v79);
      uint64_t v83 = 0;
    }
    uint64_t v87 = (uint64_t)v185;
    uint64_t v72 = v190;
    v177(v73, v83, 1, v51);
    sub_100038E30(v178, &qword_100103A20);
    uint64_t v84 = v193;
    uint64_t v85 = (uint64_t)v188;
    uint64_t v86 = v189;
    uint64_t v88 = (uint64_t)v158;
  }
  else
  {
    sub_100038E30(v75, &qword_100103BC0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 32))(v73, v74, v51);
    v76(v73, 0, 1, v51);
    uint64_t v84 = v193;
    uint64_t v85 = (uint64_t)v188;
    uint64_t v86 = v189;
    uint64_t v87 = (uint64_t)v185;
    uint64_t v88 = (uint64_t)v158;
    uint64_t v82 = (uint64_t)v152;
  }
  sub_10005613C(v73, v84, &qword_100103A20);
  sub_100032FC8(v85, v82, &qword_100103BC8);
  if (v194((char *)v82, 1, v86) == 1)
  {
    sub_100038E30(v82, &qword_100103BC8);
    uint64_t v89 = 1;
  }
  else
  {
    sub_1000B72F0();
    (*(void (**)(uint64_t, uint64_t))(v181 + 8))(v82, v86);
    uint64_t v89 = 0;
  }
  uint64_t v90 = (uint64_t)v191;
  uint64_t v91 = (uint64_t)v156;
  long long v92 = v179;
  uint64_t v93 = v187;
  v179(v72, v89, 1, v187);
  uint64_t v94 = v90;
  sub_100032FC8(v90, v91, &qword_100103BC0);
  uint64_t v95 = v172;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v172 + 48))(v72, 1, v93) == 1)
  {
    uint64_t v96 = v151;
    sub_100032FC8(v91, v151, &qword_100103BC0);
    uint64_t v97 = sub_1000B7270();
    uint64_t v98 = *(void *)(v97 - 8);
    int v99 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v98 + 48))(v96, 1, v97);
    uint64_t v100 = (uint64_t)v188;
    uint64_t v101 = v94;
    if (v99 == 1)
    {
      sub_100038E30(v91, &qword_100103BC0);
      sub_100038E30(v96, &qword_100103BC0);
      uint64_t v102 = 1;
      uint64_t v103 = (uint64_t)v174;
      uint64_t v104 = (uint64_t)v175;
      uint64_t v105 = v187;
    }
    else
    {
      sub_1000B7230();
      uint64_t v105 = v187;
      sub_100038E30(v91, &qword_100103BC0);
      (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v96, v97);
      uint64_t v102 = 0;
      uint64_t v103 = (uint64_t)v174;
      uint64_t v104 = (uint64_t)v175;
    }
    v179(v88, v102, 1, v105);
    sub_100038E30(v190, &qword_100103EF0);
    uint64_t v87 = (uint64_t)v185;
    uint64_t v106 = v155;
  }
  else
  {
    sub_100038E30(v91, &qword_100103BC0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v95 + 32))(v88, v72, v93);
    v92(v88, 0, 1, v93);
    uint64_t v103 = (uint64_t)v174;
    uint64_t v106 = v155;
    uint64_t v100 = (uint64_t)v188;
    uint64_t v104 = (uint64_t)v175;
    uint64_t v101 = v94;
  }
  sub_10005613C(v88, v106, &qword_100103EF0);
  sub_100032FC8(v100, v103, &qword_100103BC8);
  if (v194((char *)v103, 1, v86) == 1)
  {
    sub_100038E30(v103, &qword_100103BC8);
    uint64_t v107 = (uint64_t)v163;
    uint64_t v108 = v184;
    id v109 = v182;
    uint64_t v110 = v168;
    v182((uint64_t)v168, 1, 1, v184);
  }
  else
  {
    uint64_t v110 = v168;
    sub_1000B72E0();
    (*(void (**)(uint64_t, uint64_t))(v181 + 8))(v103, v86);
    uint64_t v107 = (uint64_t)v163;
    uint64_t v108 = v184;
    id v109 = v182;
    v182((uint64_t)v110, 0, 1, v184);
  }
  sub_100032FC8(v101, v87, &qword_100103BC0);
  uint64_t v111 = v173;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v173 + 48))(v110, 1, v108) == 1)
  {
    uint64_t v112 = (uint64_t)v110;
    sub_100032FC8(v87, v107, &qword_100103BC0);
    uint64_t v113 = v87;
    uint64_t v114 = sub_1000B7270();
    uint64_t v115 = *(void *)(v114 - 8);
    int v116 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v115 + 48))(v107, 1, v114);
    uint64_t v117 = (uint64_t)v169;
    if (v116 == 1)
    {
      sub_100038E30(v113, &qword_100103BC0);
      sub_100038E30(v107, &qword_100103BC0);
      uint64_t v118 = 1;
    }
    else
    {
      sub_1000B7220();
      sub_100038E30(v113, &qword_100103BC0);
      (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v107, v114);
      uint64_t v118 = 0;
    }
    v182(v104, v118, 1, v184);
    sub_100038E30(v112, &qword_100103EE8);
    uint64_t v119 = (uint64_t)v165;
    uint64_t v120 = v162;
    uint64_t v121 = v157;
    uint64_t v122 = v189;
  }
  else
  {
    sub_100038E30(v87, &qword_100103BC0);
    (*(void (**)(uint64_t, char *, uint64_t))(v111 + 32))(v104, v110, v108);
    v109(v104, 0, 1, v108);
    uint64_t v119 = (uint64_t)v165;
    uint64_t v120 = v162;
    uint64_t v121 = v157;
    uint64_t v122 = v189;
    uint64_t v117 = (uint64_t)v169;
  }
  sub_10005613C(v104, v121, &qword_100103EE8);
  sub_100032FC8(v100, v119, &qword_100103BC8);
  if (v194((char *)v119, 1, v122) == 1)
  {
    sub_100038E30(v119, &qword_100103BC8);
    uint64_t v123 = 1;
  }
  else
  {
    sub_1000B7300();
    (*(void (**)(uint64_t, uint64_t))(v181 + 8))(v119, v122);
    uint64_t v123 = 0;
  }
  uint64_t v124 = (uint64_t)v186;
  v160(v186, v123, 1, v161);
  sub_10005613C(v124, v120, &qword_100103EE0);
  sub_100032FC8(v101, v117, &qword_100103BC0);
  uint64_t v125 = sub_1000B7270();
  uint64_t v126 = *(void *)(v125 - 8);
  uint64_t v127 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v126 + 48);
  if (v127(v117, 1, v125) == 1)
  {
    sub_100038E30(v117, &qword_100103BC0);
    uint64_t v128 = 0;
    uint64_t v129 = 0;
  }
  else
  {
    uint64_t v128 = sub_1000B7240();
    uint64_t v129 = v130;
    (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v117, v125);
  }
  uint64_t v131 = v164;
  swift_bridgeObjectRelease();
  *uint64_t v131 = v128;
  v131[1] = v129;
  uint64_t v132 = v176;
  sub_100032FC8(v101, v176, &qword_100103BC0);
  unsigned int v133 = v127(v132, 1, v125);
  if (v133 == 1)
  {
    sub_100038E30(v132, &qword_100103BC0);
    uint64_t v134 = 0;
  }
  else
  {
    uint64_t v134 = sub_1000B7200();
    (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v132, v125);
  }
  id v135 = v166;
  uint64_t v136 = (uint64_t)v171;
  *uint64_t v166 = v134;
  *((unsigned char *)v135 + 8) = v133 == 1;
  sub_100032FC8(v101, v136, &qword_100103BC0);
  if (v127(v136, 1, v125) == 1)
  {
    sub_100038E30(v136, &qword_100103BC0);
    uint64_t v137 = 0;
    uint64_t v138 = 0;
  }
  else
  {
    uint64_t v137 = sub_1000B7210();
    uint64_t v138 = v139;
    (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v136, v125);
  }
  Class v140 = v192;
  uint64_t v141 = v170;
  unint64_t v142 = v167;
  swift_bridgeObjectRelease();
  *unint64_t v142 = v137;
  v142[1] = v138;
  id v143 = [v140 data];
  uint64_t v144 = sub_1000B6F30();
  uint64_t v146 = v145;

  sub_100038E30(v101, &qword_100103BC0);
  uint64_t result = sub_100038E30(v100, &qword_100103BC8);
  uint64_t v148 = (uint64_t *)(v193 + v141[11]);
  uint64_t *v148 = v144;
  v148[1] = v146;
  return result;
}

uint64_t _s8ActivityVMa()
{
  uint64_t result = qword_100103F50;
  if (!qword_100103F50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1000560FC()
{
  unint64_t result = qword_100103820;
  if (!qword_100103820)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100103820);
  }
  return result;
}

uint64_t sub_10005613C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100032E20(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000561A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v62 = a1;
  uint64_t v2 = sub_100032E20(&qword_100103EE0);
  __chkstk_darwin(v2 - 8);
  uint64_t v54 = (uint64_t)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000B72D0();
  uint64_t v55 = *(void *)(v4 - 8);
  uint64_t v56 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v50 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v53 = (char *)&v47 - v7;
  uint64_t v8 = sub_100032E20(&qword_100103EE8);
  __chkstk_darwin(v8 - 8);
  uint64_t v58 = (uint64_t)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_1000B7350();
  uint64_t v59 = *(void *)(v61 - 8);
  uint64_t v10 = __chkstk_darwin(v61);
  uint64_t v49 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v57 = (char *)&v47 - v12;
  uint64_t v13 = sub_100032E20(&qword_100103EF0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000B71F0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v52 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v60 = (char *)&v47 - v20;
  uint64_t v21 = sub_100032E20(&qword_100103A20);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)&v47 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1000B6FD0();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v51 = (char *)&v47 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v47 - v28;
  sub_100032FC8(v1, (uint64_t)v23, &qword_100103A20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) == 1)
  {
    uint64_t v30 = &qword_100103A20;
    uint64_t v31 = (uint64_t)v23;
LABEL_9:
    sub_100038E30(v31, v30);
    uint64_t v42 = sub_1000B7330();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v62, 1, 1, v42);
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v29, v23, v24);
  uint64_t v32 = (int *)_s8ActivityVMa();
  sub_100032FC8(v1 + v32[5], (uint64_t)v15, &qword_100103EF0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v29, v24);
    uint64_t v30 = &qword_100103EF0;
    uint64_t v31 = (uint64_t)v15;
    goto LABEL_9;
  }
  uint64_t v33 = v60;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v60, v15, v16);
  uint64_t v34 = v58;
  sub_100032FC8(v1 + v32[6], v58, &qword_100103EE8);
  uint64_t v35 = v59;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v34, 1, v61) == 1)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v33, v16);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v29, v24);
    uint64_t v30 = &qword_100103EE8;
    uint64_t v31 = v34;
    goto LABEL_9;
  }
  uint64_t v47 = v17;
  uint64_t v48 = v16;
  uint64_t v36 = v57;
  uint64_t v37 = v34;
  uint64_t v38 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v57, v37, v61);
  uint64_t v39 = v54;
  sub_100032FC8(v1 + v32[7], v54, &qword_100103EE0);
  uint64_t v40 = v55;
  uint64_t v41 = v56;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v39, 1, v56) == 1)
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v38);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v60, v48);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v29, v24);
    uint64_t v30 = &qword_100103EE0;
    uint64_t v31 = v39;
    goto LABEL_9;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))(v53, v39, v41);
  sub_1000B6F50();
  uint64_t v44 = v47;
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v52, v60, v48);
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v49, v36, v38);
  int v45 = v53;
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v50, v53, v41);
  sub_1000B7320();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v45, v41);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v57, v61);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v60, v48);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v29, v24);
  uint64_t v46 = sub_1000B7330();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v62, 0, 1, v46);
}

uint64_t sub_100056974@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v59 = a1;
  uint64_t v3 = sub_100032E20(&qword_100103EE8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000B7350();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v56 = v6;
  uint64_t v57 = v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v53 = (char *)v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v55 = (char *)v49 - v10;
  uint64_t v11 = sub_100032E20(&qword_100103EF0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000B71F0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v52 = (char *)v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v58 = (char *)v49 - v18;
  uint64_t v19 = sub_100032E20(&qword_100103A20);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1000B6FD0();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v54 = (char *)v49 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)v49 - v26;
  sub_100032FC8(v2, (uint64_t)v21, &qword_100103A20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
  {
    sub_100038E30((uint64_t)v21, &qword_100103A20);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v27, v21, v22);
    uint64_t v28 = (int *)_s8ActivityVMa();
    sub_100032FC8(v2 + v28[5], (uint64_t)v13, &qword_100103EF0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    {
      (*(void (**)(char *, uint64_t))(v23 + 8))(v27, v22);
      sub_100038E30((uint64_t)v13, &qword_100103EF0);
    }
    else
    {
      uint64_t v29 = v2;
      uint64_t v30 = v58;
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v58, v13, v14);
      uint64_t v31 = v28[6];
      uint64_t v51 = v29;
      sub_100032FC8(v29 + v31, (uint64_t)v5, &qword_100103EE8);
      uint64_t v32 = v56;
      uint64_t v33 = v57;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v5, 1, v56) == 1)
      {
        (*(void (**)(char *, uint64_t))(v15 + 8))(v30, v14);
        (*(void (**)(char *, uint64_t))(v23 + 8))(v27, v22);
        sub_100038E30((uint64_t)v5, &qword_100103EE8);
      }
      else
      {
        uint64_t v50 = v14;
        uint64_t v34 = v55;
        (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v55, v5, v32);
        uint64_t v35 = v51 + v28[9];
        if (*(unsigned char *)(v35 + 8) == 1)
        {
          (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v32);
          (*(void (**)(char *, uint64_t))(v15 + 8))(v58, v50);
        }
        else
        {
          uint64_t v36 = (uint64_t *)(v51 + v28[8]);
          uint64_t v37 = v58;
          if (v36[1])
          {
            uint64_t v38 = (void *)(v51 + v28[10]);
            uint64_t v39 = v38[1];
            if (v39)
            {
              uint64_t v51 = *(void *)v35;
              uint64_t v40 = *v36;
              v49[2] = *v38;
              v49[3] = v40;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_1000B6F50();
              (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v52, v37, v50);
              uint64_t v41 = v57;
              uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
              v49[1] = v39;
              uint64_t v43 = v55;
              v42(v53, v55, v32);
              uint64_t v44 = v59;
              sub_1000B7260();
              (*(void (**)(char *, uint64_t))(v41 + 8))(v43, v56);
              (*(void (**)(char *, uint64_t))(v15 + 8))(v58, v50);
              (*(void (**)(char *, uint64_t))(v23 + 8))(v27, v22);
              uint64_t v45 = sub_1000B7270();
              return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v44, 0, 1, v45);
            }
          }
          (*(void (**)(char *, uint64_t))(v57 + 8))(v55, v32);
          (*(void (**)(char *, uint64_t))(v15 + 8))(v37, v50);
        }
        (*(void (**)(char *, uint64_t))(v23 + 8))(v27, v22);
      }
    }
  }
  uint64_t v47 = v59;
  uint64_t v48 = sub_1000B7270();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v47, 1, 1, v48);
}

uint64_t *sub_10005705C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1000B6FD0();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_100032E20(&qword_100103A20);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = a3[5];
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_1000B71F0();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      uint64_t v16 = sub_100032E20(&qword_100103EF0);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    uint64_t v17 = a3[6];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = sub_1000B7350();
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      uint64_t v22 = sub_100032E20(&qword_100103EE8);
      memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    uint64_t v23 = a3[7];
    uint64_t v24 = (char *)a1 + v23;
    uint64_t v25 = (char *)a2 + v23;
    uint64_t v26 = sub_1000B72D0();
    uint64_t v27 = *(void *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      uint64_t v28 = sub_100032E20(&qword_100103EE0);
      memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    uint64_t v29 = a3[8];
    uint64_t v30 = a3[9];
    uint64_t v31 = (uint64_t *)((char *)a1 + v29);
    uint64_t v32 = (uint64_t *)((char *)a2 + v29);
    uint64_t v33 = v32[1];
    void *v31 = *v32;
    v31[1] = v33;
    uint64_t v34 = (char *)a1 + v30;
    uint64_t v35 = (char *)a2 + v30;
    v34[8] = v35[8];
    *(void *)uint64_t v34 = *(void *)v35;
    uint64_t v36 = a3[10];
    uint64_t v37 = a3[11];
    uint64_t v38 = (uint64_t *)((char *)a1 + v36);
    uint64_t v39 = (uint64_t *)((char *)a2 + v36);
    uint64_t v40 = v39[1];
    *uint64_t v38 = *v39;
    v38[1] = v40;
    uint64_t v41 = (uint64_t *)((char *)a1 + v37);
    uint64_t v42 = (char *)a2 + v37;
    uint64_t v43 = *(uint64_t *)((char *)a2 + v37);
    unint64_t v44 = *((void *)v42 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10004E998(v43, v44);
    *uint64_t v41 = v43;
    v41[1] = v44;
  }
  return a1;
}

uint64_t sub_1000574FC(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_1000B6FD0();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + a2[5];
  uint64_t v7 = sub_1000B71F0();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  uint64_t v9 = a1 + a2[6];
  uint64_t v10 = sub_1000B7350();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = a1 + a2[7];
  uint64_t v13 = sub_1000B72D0();
  uint64_t v14 = *(void *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = (uint64_t *)(a1 + a2[11]);
  uint64_t v16 = *v15;
  unint64_t v17 = v15[1];

  return sub_1000452E0(v16, v17);
}

char *sub_1000577A4(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1000B6FD0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100032E20(&qword_100103A20);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_1000B71F0();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = sub_100032E20(&qword_100103EF0);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  unint64_t v17 = &a2[v15];
  uint64_t v18 = sub_1000B7350();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    uint64_t v20 = sub_100032E20(&qword_100103EE8);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  uint64_t v21 = a3[7];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = sub_1000B72D0();
  uint64_t v25 = *(void *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    uint64_t v26 = sub_100032E20(&qword_100103EE0);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  uint64_t v27 = a3[8];
  uint64_t v28 = a3[9];
  uint64_t v29 = &a1[v27];
  uint64_t v30 = &a2[v27];
  uint64_t v31 = *((void *)v30 + 1);
  *(void *)uint64_t v29 = *(void *)v30;
  *((void *)v29 + 1) = v31;
  uint64_t v32 = &a1[v28];
  uint64_t v33 = &a2[v28];
  v32[8] = v33[8];
  *(void *)uint64_t v32 = *(void *)v33;
  uint64_t v34 = a3[10];
  uint64_t v35 = a3[11];
  uint64_t v36 = &a1[v34];
  uint64_t v37 = &a2[v34];
  uint64_t v38 = *((void *)v37 + 1);
  *(void *)uint64_t v36 = *(void *)v37;
  *((void *)v36 + 1) = v38;
  uint64_t v39 = (uint64_t *)&a1[v35];
  uint64_t v40 = &a2[v35];
  uint64_t v41 = *(void *)&a2[v35];
  unint64_t v42 = *((void *)v40 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10004E998(v41, v42);
  uint64_t *v39 = v41;
  v39[1] = v42;
  return a1;
}

char *sub_100057BF4(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1000B6FD0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_100032E20(&qword_100103A20);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_1000B71F0();
  uint64_t v16 = *(void *)(v15 - 8);
  unint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
LABEL_12:
    uint64_t v20 = sub_100032E20(&qword_100103EF0);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v13, v14, v15);
LABEL_13:
  uint64_t v21 = a3[6];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = sub_1000B7350();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  int v27 = v26(v22, 1, v24);
  int v28 = v26(v23, 1, v24);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
LABEL_18:
    uint64_t v29 = sub_100032E20(&qword_100103EE8);
    memcpy(v22, v23, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 24))(v22, v23, v24);
LABEL_19:
  uint64_t v30 = a3[7];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  uint64_t v33 = sub_1000B72D0();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48);
  int v36 = v35(v31, 1, v33);
  int v37 = v35(v32, 1, v33);
  if (!v36)
  {
    if (!v37)
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 24))(v31, v32, v33);
      goto LABEL_25;
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v31, v33);
    goto LABEL_24;
  }
  if (v37)
  {
LABEL_24:
    uint64_t v38 = sub_100032E20(&qword_100103EE0);
    memcpy(v31, v32, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
LABEL_25:
  uint64_t v39 = a3[8];
  uint64_t v40 = &a1[v39];
  uint64_t v41 = &a2[v39];
  *(void *)uint64_t v40 = *(void *)v41;
  *((void *)v40 + 1) = *((void *)v41 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v42 = a3[9];
  uint64_t v43 = &a1[v42];
  unint64_t v44 = &a2[v42];
  uint64_t v45 = *(void *)v44;
  char v43[8] = v44[8];
  *(void *)uint64_t v43 = v45;
  uint64_t v46 = a3[10];
  uint64_t v47 = &a1[v46];
  uint64_t v48 = &a2[v46];
  *(void *)uint64_t v47 = *(void *)v48;
  *((void *)v47 + 1) = *((void *)v48 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v49 = a3[11];
  uint64_t v50 = (uint64_t *)&a1[v49];
  uint64_t v51 = (uint64_t *)&a2[v49];
  uint64_t v52 = *v51;
  unint64_t v53 = v51[1];
  sub_10004E998(*v51, v53);
  uint64_t v54 = *v50;
  unint64_t v55 = v50[1];
  uint64_t *v50 = v52;
  v50[1] = v53;
  sub_1000452E0(v54, v55);
  return a1;
}

char *sub_1000581F0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1000B6FD0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100032E20(&qword_100103A20);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  int v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_1000B71F0();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = sub_100032E20(&qword_100103EF0);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  unint64_t v17 = &a2[v15];
  uint64_t v18 = sub_1000B7350();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    uint64_t v20 = sub_100032E20(&qword_100103EE8);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  uint64_t v21 = a3[7];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = sub_1000B72D0();
  uint64_t v25 = *(void *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    uint64_t v26 = sub_100032E20(&qword_100103EE0);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  uint64_t v27 = a3[9];
  *(_OWORD *)&a1[a3[8]] = *(_OWORD *)&a2[a3[8]];
  int v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  *(void *)int v28 = *(void *)v29;
  v28[8] = v29[8];
  uint64_t v30 = a3[11];
  *(_OWORD *)&a1[a3[10]] = *(_OWORD *)&a2[a3[10]];
  *(_OWORD *)&a1[v30] = *(_OWORD *)&a2[v30];
  return a1;
}

char *sub_100058610(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1000B6FD0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_100032E20(&qword_100103A20);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_1000B71F0();
  uint64_t v16 = *(void *)(v15 - 8);
  unint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
LABEL_12:
    uint64_t v20 = sub_100032E20(&qword_100103EF0);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v14, v15);
LABEL_13:
  uint64_t v21 = a3[6];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = sub_1000B7350();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  int v27 = v26(v22, 1, v24);
  int v28 = v26(v23, 1, v24);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
LABEL_18:
    uint64_t v29 = sub_100032E20(&qword_100103EE8);
    memcpy(v22, v23, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 40))(v22, v23, v24);
LABEL_19:
  uint64_t v30 = a3[7];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  uint64_t v33 = sub_1000B72D0();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48);
  int v36 = v35(v31, 1, v33);
  int v37 = v35(v32, 1, v33);
  if (!v36)
  {
    if (!v37)
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 40))(v31, v32, v33);
      goto LABEL_25;
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v31, v33);
    goto LABEL_24;
  }
  if (v37)
  {
LABEL_24:
    uint64_t v38 = sub_100032E20(&qword_100103EE0);
    memcpy(v31, v32, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v31, v32, v33);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
LABEL_25:
  uint64_t v39 = a3[8];
  uint64_t v40 = &a1[v39];
  uint64_t v41 = &a2[v39];
  uint64_t v43 = *(void *)v41;
  uint64_t v42 = *((void *)v41 + 1);
  *(void *)uint64_t v40 = v43;
  *((void *)v40 + 1) = v42;
  swift_bridgeObjectRelease();
  uint64_t v44 = a3[9];
  uint64_t v45 = a3[10];
  uint64_t v46 = &a1[v44];
  uint64_t v47 = &a2[v44];
  *(void *)uint64_t v46 = *(void *)v47;
  v46[8] = v47[8];
  uint64_t v48 = &a1[v45];
  uint64_t v49 = &a2[v45];
  uint64_t v51 = *(void *)v49;
  uint64_t v50 = *((void *)v49 + 1);
  *(void *)uint64_t v48 = v51;
  *((void *)v48 + 1) = v50;
  swift_bridgeObjectRelease();
  uint64_t v52 = a3[11];
  uint64_t v53 = *(void *)&a1[v52];
  unint64_t v54 = *(void *)&a1[v52 + 8];
  *(_OWORD *)&a1[v52] = *(_OWORD *)&a2[v52];
  sub_1000452E0(v53, v54);
  return a1;
}

uint64_t sub_100058BD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100058BEC);
}

uint64_t sub_100058BEC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100032E20(&qword_100103A20);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_100032E20(&qword_100103EF0);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v10 = a1 + v13;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  uint64_t v14 = sub_100032E20(&qword_100103EE8);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_9;
  }
  uint64_t v15 = sub_100032E20(&qword_100103EE0);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_9;
  }
  unint64_t v17 = *(void *)(a1 + a3[8] + 8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  int v18 = v17 - 1;
  if (v18 < 0) {
    int v18 = -1;
  }
  return (v18 + 1);
}

uint64_t sub_100058DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100058DCC);
}

uint64_t sub_100058DCC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_100032E20(&qword_100103A20);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = sub_100032E20(&qword_100103EF0);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      uint64_t v16 = sub_100032E20(&qword_100103EE8);
      if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
      {
        uint64_t v10 = v16;
        uint64_t v14 = *(void *)(v16 - 8);
        uint64_t v15 = a4[6];
      }
      else
      {
        uint64_t result = sub_100032E20(&qword_100103EE0);
        if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
        {
          *(void *)(a1 + a4[8] + 8) = a2;
          return result;
        }
        uint64_t v10 = result;
        uint64_t v14 = *(void *)(result - 8);
        uint64_t v15 = a4[7];
      }
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_100058F88()
{
  sub_100059158(319, (unint64_t *)&qword_100103C58, (void (*)(uint64_t))&type metadata accessor for Date);
  if (v0 <= 0x3F)
  {
    sub_100059158(319, &qword_100103F60, (void (*)(uint64_t))&type metadata accessor for ActivityEventObject);
    if (v1 <= 0x3F)
    {
      sub_100059158(319, &qword_100103F68, (void (*)(uint64_t))&type metadata accessor for ActivityEventParticipant);
      if (v2 <= 0x3F)
      {
        sub_100059158(319, (unint64_t *)&unk_100103F70, (void (*)(uint64_t))&type metadata accessor for PersistedActivityEvent.Activities);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_100059158(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1000B79E0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1000591AC(char a1)
{
  unint64_t result = 0xD000000000000016;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7463656A626FLL;
      break;
    case 2:
      unint64_t result = 0x7069636974726170;
      break;
    case 3:
      unint64_t result = 0x7974697669746361;
      break;
    case 4:
    case 6:
    case 7:
      unint64_t result = 0x6B6361626C6C6166;
      break;
    case 5:
      return result;
    default:
      unint64_t result = 0x6D617473656D6974;
      break;
  }
  return result;
}

uint64_t sub_1000592B4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100032E20(&qword_100103FF0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100047028(a1, a1[3]);
  sub_100059FF8();
  sub_1000B7EB0();
  LOBYTE(v13) = 0;
  sub_1000B6FD0();
  sub_10005A160(&qword_100103D40, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1000B7D00();
  if (!v2)
  {
    uint64_t v9 = _s8ActivityVMa();
    LOBYTE(v13) = 1;
    sub_1000B71F0();
    sub_10005A160(&qword_100103FF8, (void (*)(uint64_t))&type metadata accessor for ActivityEventObject);
    sub_1000B7D00();
    LOBYTE(v13) = 2;
    sub_1000B7350();
    sub_10005A160(&qword_100104000, (void (*)(uint64_t))&type metadata accessor for ActivityEventParticipant);
    sub_1000B7D00();
    LOBYTE(v13) = 3;
    sub_1000B72D0();
    sub_10005A160(&qword_100104008, (void (*)(uint64_t))&type metadata accessor for PersistedActivityEvent.Activities);
    sub_1000B7D00();
    LOBYTE(v13) = 4;
    sub_1000B7CC0();
    uint64_t v10 = (uint64_t *)(v3 + *(int *)(v9 + 36));
    uint64_t v11 = *v10;
    LOBYTE(v10) = *((unsigned char *)v10 + 8);
    *(void *)&long long v13 = v11;
    BYTE8(v13) = (_BYTE)v10;
    char v14 = 5;
    type metadata accessor for NotesVersion(0);
    sub_10005A160(&qword_100104010, type metadata accessor for NotesVersion);
    sub_1000B7D00();
    LOBYTE(v13) = 6;
    sub_1000B7CC0();
    long long v13 = *(_OWORD *)(v3 + *(int *)(v9 + 44));
    char v14 = 7;
    sub_10005A1A8();
    sub_1000B7D50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1000596D4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v59 = a2;
  uint64_t v3 = sub_100032E20(&qword_100103EE0);
  __chkstk_darwin(v3 - 8);
  uint64_t v60 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100032E20(&qword_100103EE8);
  __chkstk_darwin(v5 - 8);
  uint64_t v61 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100032E20(&qword_100103EF0);
  __chkstk_darwin(v7 - 8);
  int v64 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100032E20(&qword_100103A20);
  __chkstk_darwin(v9 - 8);
  uint64_t v65 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_100032E20(&qword_100103FB8);
  uint64_t v63 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v13 = (int *)_s8ActivityVMa();
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000B6FD0();
  unint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v62 = v16;
  v17(v15, 1, 1);
  uint64_t v18 = (uint64_t)&v15[v13[5]];
  uint64_t v19 = sub_1000B71F0();
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  uint64_t v71 = v18;
  v20(v18, 1, 1, v19);
  uint64_t v21 = (uint64_t)&v15[v13[6]];
  uint64_t v22 = sub_1000B7350();
  uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  uint64_t v69 = v21;
  v23(v21, 1, 1, v22);
  uint64_t v24 = &v15[v13[7]];
  uint64_t v25 = sub_1000B72D0();
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
  uint64_t v70 = (uint64_t)v24;
  v26(v24, 1, 1, v25);
  int v27 = &v15[v13[8]];
  *(void *)int v27 = 0;
  *((void *)v27 + 1) = 0;
  uint64_t v74 = v27;
  uint64_t v75 = v15;
  int v28 = &v15[v13[9]];
  *(void *)int v28 = 0;
  v28[8] = 1;
  uint64_t v29 = &v15[v13[10]];
  *(void *)uint64_t v29 = 0;
  *((void *)v29 + 1) = 0;
  uint64_t v73 = v29;
  uint64_t v30 = a1[3];
  uint64_t v68 = a1;
  sub_100047028(a1, v30);
  sub_100059FF8();
  uint64_t v66 = v12;
  uint64_t v31 = v72;
  sub_1000B7EA0();
  if (v31)
  {
    uint64_t v32 = v69;
    uint64_t v34 = v70;
    uint64_t v33 = v71;
    sub_100037F98((uint64_t)v68);
    sub_100038E30((uint64_t)v75, &qword_100103A20);
    sub_100038E30(v33, &qword_100103EF0);
    sub_100038E30(v32, &qword_100103EE8);
    sub_100038E30(v34, &qword_100103EE0);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v58 = v13;
    uint64_t v72 = v28;
    uint64_t v35 = v63;
    uint64_t v36 = (uint64_t)v64;
    LOBYTE(v76) = 0;
    sub_10005A160(&qword_100103DB8, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v37 = (uint64_t)v65;
    sub_1000B7C50();
    uint64_t v38 = v70;
    sub_10005613C(v37, (uint64_t)v75, &qword_100103A20);
    LOBYTE(v76) = 1;
    sub_10005A160(&qword_100103FC8, (void (*)(uint64_t))&type metadata accessor for ActivityEventObject);
    sub_1000B7C50();
    sub_10005613C(v36, v71, &qword_100103EF0);
    LOBYTE(v76) = 2;
    sub_10005A160(&qword_100103FD0, (void (*)(uint64_t))&type metadata accessor for ActivityEventParticipant);
    uint64_t v39 = (uint64_t)v61;
    sub_1000B7C50();
    sub_10005613C(v39, v69, &qword_100103EE8);
    LOBYTE(v76) = 3;
    sub_10005A160(&qword_100103FD8, (void (*)(uint64_t))&type metadata accessor for PersistedActivityEvent.Activities);
    uint64_t v41 = (uint64_t)v60;
    sub_1000B7C50();
    sub_10005613C(v41, v38, &qword_100103EE0);
    LOBYTE(v76) = 4;
    uint64_t v42 = sub_1000B7C10();
    uint64_t v65 = v43;
    uint64_t v44 = v42;
    uint64_t v45 = v74;
    swift_bridgeObjectRelease();
    uint64_t v46 = v65;
    *uint64_t v45 = v44;
    v45[1] = v46;
    type metadata accessor for NotesVersion(0);
    char v77 = 5;
    sub_10005A160(&qword_100103FE0, type metadata accessor for NotesVersion);
    sub_1000B7C50();
    char v47 = BYTE8(v76);
    uint64_t v48 = v72;
    *(void *)uint64_t v72 = v76;
    v48[8] = v47;
    LOBYTE(v76) = 6;
    uint64_t v49 = sub_1000B7C10();
    uint64_t v72 = v50;
    uint64_t v51 = v49;
    uint64_t v52 = v73;
    swift_bridgeObjectRelease();
    uint64_t v53 = v72;
    void *v52 = v51;
    v52[1] = v53;
    char v77 = 7;
    sub_10005A04C();
    unint64_t v54 = v66;
    uint64_t v55 = v67;
    sub_1000B7CA0();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v54, v55);
    uint64_t v56 = v59;
    uint64_t v57 = (uint64_t)v75;
    *(_OWORD *)&v75[v58[11]] = v76;
    sub_10005A0A0(v57, v56);
    sub_100037F98((uint64_t)v68);
    return sub_10005A104(v57);
  }
}

unint64_t sub_100059F14()
{
  return sub_1000591AC(*v0);
}

uint64_t sub_100059F1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10005A498(a1, a2);
  *a3 = result;
  return result;
}

void sub_100059F44(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_100059F50(uint64_t a1)
{
  unint64_t v2 = sub_100059FF8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100059F8C(uint64_t a1)
{
  unint64_t v2 = sub_100059FF8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100059FC8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000596D4(a1, a2);
}

uint64_t sub_100059FE0(void *a1)
{
  return sub_1000592B4(a1);
}

unint64_t sub_100059FF8()
{
  unint64_t result = qword_100103FC0;
  if (!qword_100103FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100103FC0);
  }
  return result;
}

unint64_t sub_10005A04C()
{
  unint64_t result = qword_100103FE8;
  if (!qword_100103FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100103FE8);
  }
  return result;
}

uint64_t sub_10005A0A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s8ActivityVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10005A104(uint64_t a1)
{
  uint64_t v2 = _s8ActivityVMa();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10005A160(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10005A1A8()
{
  unint64_t result = qword_100104018;
  if (!qword_100104018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104018);
  }
  return result;
}

uint64_t _s8ActivityV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s8ActivityV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10005A358);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *_s8ActivityV10CodingKeysOMa()
{
  return &_s8ActivityV10CodingKeysON;
}

unint64_t sub_10005A394()
{
  unint64_t result = qword_100104020;
  if (!qword_100104020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104020);
  }
  return result;
}

unint64_t sub_10005A3EC()
{
  unint64_t result = qword_100104028;
  if (!qword_100104028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104028);
  }
  return result;
}

unint64_t sub_10005A444()
{
  unint64_t result = qword_100104030;
  if (!qword_100104030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104030);
  }
  return result;
}

uint64_t sub_10005A498(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070;
  if (v3 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7463656A626FLL && a2 == 0xE600000000000000 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7069636974726170 && a2 == 0xEB00000000746E61 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7974697669746361 && a2 == 0xE800000000000000 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6B6361626C6C6166 && a2 == 0xEC00000065707954 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001000C8860 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6B6361626C6C6166 && a2 == 0xED0000656C746954 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6B6361626C6C6166 && a2 == 0xEC00000061746144)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_1000B7DC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t *sub_10005A7DC(uint64_t *a1, uint64_t *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    uint64_t *v4 = *a2;
    unsigned int v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    a1[1] = a2[1];
    uint64_t v7 = a3[6];
    int v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1000B6FD0();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = sub_100032E20(&qword_100103A20);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v14 = a3[7];
    uint64_t v15 = (char *)v4 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = *((void *)v16 + 1);
    if (v17 == 1)
    {
      long long v18 = *((_OWORD *)v16 + 1);
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v18;
      *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
    }
    else
    {
      *(void *)uint64_t v15 = *(void *)v16;
      *((void *)v15 + 1) = v17;
      uint64_t v19 = *((void *)v16 + 3);
      *((void *)v15 + 2) = *((void *)v16 + 2);
      *((void *)v15 + 3) = v19;
      uint64_t v20 = *((void *)v16 + 5);
      *((void *)v15 + 4) = *((void *)v16 + 4);
      *((void *)v15 + 5) = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t v21 = a3[9];
    *(uint64_t *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    *(uint64_t *)((char *)v4 + v21) = *(uint64_t *)((char *)a2 + v21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_10005A9D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1000B6FD0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  if (*(void *)(a1 + *(int *)(a2 + 28) + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10005AAE0(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  int v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_1000B6FD0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_100032E20(&qword_100103A20);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = *(void *)(v14 + 8);
  if (v15 == 1)
  {
    long long v16 = *(_OWORD *)(v14 + 16);
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    *(_OWORD *)(v13 + 16) = v16;
    *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
  }
  else
  {
    *(void *)uint64_t v13 = *(void *)v14;
    *(void *)(v13 + 8) = v15;
    uint64_t v17 = *(void *)(v14 + 24);
    *(void *)(v13 + 16) = *(void *)(v14 + 16);
    *(void *)(v13 + 24) = v17;
    uint64_t v18 = *(void *)(v14 + 40);
    *(void *)(v13 + 32) = *(void *)(v14 + 32);
    *(void *)(v13 + 40) = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v19 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10005AC84(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  int v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_1000B6FD0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_100032E20(&qword_100103A20);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = (long long *)(a2 + v15);
  uint64_t v18 = *(void *)(a1 + v15 + 8);
  uint64_t v19 = *(void *)(a2 + v15 + 8);
  if (v18 == 1)
  {
    if (v19 == 1)
    {
      long long v20 = *v17;
      long long v21 = v17[2];
      *(_OWORD *)(v16 + 16) = v17[1];
      *(_OWORD *)(v16 + 32) = v21;
      *(_OWORD *)uint64_t v16 = v20;
    }
    else
    {
      *(void *)uint64_t v16 = *(void *)v17;
      *(void *)(v16 + 8) = *((void *)v17 + 1);
      *(void *)(v16 + 16) = *((void *)v17 + 2);
      *(void *)(v16 + 24) = *((void *)v17 + 3);
      *(void *)(v16 + 32) = *((void *)v17 + 4);
      *(void *)(v16 + 40) = *((void *)v17 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v19 == 1)
  {
    sub_10005AF4C(v16);
    long long v23 = v17[1];
    long long v22 = v17[2];
    *(_OWORD *)uint64_t v16 = *v17;
    *(_OWORD *)(v16 + 16) = v23;
    *(_OWORD *)(v16 + 32) = v22;
  }
  else
  {
    *(void *)uint64_t v16 = *(void *)v17;
    *(void *)(v16 + 8) = *((void *)v17 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v16 + 16) = *((void *)v17 + 2);
    *(void *)(v16 + 24) = *((void *)v17 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v16 + 32) = *((void *)v17 + 4);
    *(void *)(v16 + 40) = *((void *)v17 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10005AF4C(uint64_t a1)
{
  return a1;
}

uint64_t sub_10005AFA0(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  int v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_1000B6FD0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_100032E20(&qword_100103A20);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[7];
  uint64_t v13 = a3[8];
  uint64_t v14 = (_OWORD *)(a1 + v12);
  uint64_t v15 = (_OWORD *)(a2 + v12);
  long long v16 = v15[1];
  _OWORD *v14 = *v15;
  v14[1] = v16;
  v14[2] = v15[2];
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_10005B0FC(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  int v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_1000B6FD0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_100032E20(&qword_100103A20);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[7];
  long long v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  if (*(void *)(a1 + v15 + 8) != 1)
  {
    uint64_t v18 = v17[1];
    if (v18 != 1)
    {
      void *v16 = *v17;
      v16[1] = v18;
      swift_bridgeObjectRelease();
      uint64_t v20 = v17[3];
      v16[2] = v17[2];
      v16[3] = v20;
      swift_bridgeObjectRelease();
      uint64_t v21 = v17[5];
      v16[4] = v17[4];
      void v16[5] = v21;
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    sub_10005AF4C((uint64_t)v16);
  }
  long long v19 = *((_OWORD *)v17 + 1);
  *(_OWORD *)long long v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v19;
  *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
LABEL_12:
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10005B320(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10005B334);
}

uint64_t sub_10005B334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100032E20(&qword_100103A20);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 32));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    int v13 = v12 - 1;
    if (v13 < 0) {
      int v13 = -1;
    }
    return (v13 + 1);
  }
}

uint64_t sub_10005B408(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10005B41C);
}

uint64_t sub_10005B41C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100032E20(&qword_100103A20);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 24);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 32)) = a2;
  }
  return result;
}

uint64_t type metadata accessor for ICArchiveModel()
{
  uint64_t result = qword_100104090;
  if (!qword_100104090) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10005B52C()
{
  sub_1000518DC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_10005B5E4(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E6F697369766572;
      break;
    case 2:
      unint64_t result = 0x4164657461657263;
      break;
    case 3:
      unint64_t result = 0x4264657461657263;
      break;
    case 4:
      unint64_t result = 1936154996;
      break;
    case 5:
      return result;
    default:
      unint64_t result = 0x6E65644965707974;
      break;
  }
  return result;
}

uint64_t sub_10005B6C4(void *a1)
{
  BOOL v3 = v1;
  uint64_t v5 = sub_100032E20(&qword_100104118);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100047028(a1, a1[3]);
  sub_10005C014();
  sub_1000B7EB0();
  LOBYTE(v13[0]) = *v3;
  char v14 = 0;
  sub_100051A0C();
  sub_1000B7D50();
  if (!v2)
  {
    LOBYTE(v13[0]) = 1;
    sub_1000B7D40();
    uint64_t v9 = (int *)type metadata accessor for ICArchiveModel();
    LOBYTE(v13[0]) = 2;
    sub_1000B6FD0();
    sub_10005C264(&qword_100103D40, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_1000B7D00();
    uint64_t v10 = &v3[v9[7]];
    long long v11 = v10[1];
    v13[0] = *v10;
    v13[1] = v11;
    v13[2] = v10[2];
    char v14 = 3;
    sub_10005C17C();
    sub_1000B7D00();
    *(void *)&v13[0] = *(void *)&v3[v9[8]];
    char v14 = 4;
    sub_100032E20(&qword_1001040F0);
    sub_10005C1D0(&qword_100104128, &qword_100104130);
    sub_1000B7D00();
    *(void *)&v13[0] = *(void *)&v3[v9[9]];
    char v14 = 5;
    sub_100032E20(&qword_100104108);
    sub_10005C2AC(&qword_100104138);
    sub_1000B7D00();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10005BA0C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v3 = sub_100032E20(&qword_100103A20);
  __chkstk_darwin(v3 - 8);
  *(void *)&long long v38 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_100032E20(&qword_1001040D8);
  uint64_t v37 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ICArchiveModel();
  uint64_t v8 = (int *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char *v10 = 0;
  *((void *)v10 + 1) = 1;
  uint64_t v11 = (uint64_t)&v10[v8[8]];
  sub_1000B6FC0();
  uint64_t v12 = sub_1000B6FD0();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 0, 1, v12);
  int v13 = (uint64_t *)&v10[v8[9]];
  *(_OWORD *)int v13 = xmmword_1000CCA80;
  *((_OWORD *)v13 + 1) = 0u;
  *((_OWORD *)v13 + 2) = 0u;
  uint64_t v14 = v8[10];
  *(void *)&v10[v14] = 0;
  uint64_t v15 = v8[11];
  uint64_t v42 = v10;
  *(void *)&v10[v15] = 0;
  uint64_t v16 = a1[3];
  uint64_t v41 = a1;
  sub_100047028(a1, v16);
  sub_10005C014();
  uint64_t v40 = v6;
  uint64_t v17 = v43;
  sub_1000B7EA0();
  if (v17)
  {
    uint64_t v27 = (uint64_t)v41;
    uint64_t v22 = (uint64_t)v42;
  }
  else
  {
    *(void *)&long long v43 = v12;
    uint64_t v34 = v13;
    uint64_t v35 = v11;
    uint64_t v19 = v37;
    uint64_t v18 = v38;
    uint64_t v33 = v14;
    char v48 = 0;
    sub_1000332D0();
    uint64_t v20 = v39;
    sub_1000B7CA0();
    uint64_t v22 = (uint64_t)v42;
    *uint64_t v42 = v44;
    LOBYTE(v44) = 1;
    *(void *)(v22 + 8) = sub_1000B7C90();
    LOBYTE(v44) = 2;
    sub_10005C264(&qword_100103DB8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_1000B7C50();
    sub_10004E390(v18, v35);
    char v48 = 3;
    sub_10005C0C4();
    sub_1000B7C50();
    long long v43 = v44;
    long long v38 = v45;
    uint64_t v23 = v46;
    uint64_t v24 = v47;
    uint64_t v25 = v34;
    sub_10004E3F8(*v34, v34[1]);
    long long v26 = v38;
    *(_OWORD *)uint64_t v25 = v43;
    *((_OWORD *)v25 + 1) = v26;
    void v25[4] = v23;
    id v25[5] = v24;
    sub_100032E20(&qword_1001040F0);
    char v48 = 4;
    sub_10005C1D0(&qword_1001040F8, &qword_100104100);
    sub_1000B7C50();
    uint64_t v28 = v44;
    uint64_t v29 = v33;
    swift_bridgeObjectRelease();
    *(void *)(v22 + v29) = v28;
    sub_100032E20(&qword_100104108);
    char v48 = 5;
    sub_10005C2AC(&qword_100104110);
    uint64_t v30 = v40;
    sub_1000B7C50();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v30, v20);
    uint64_t v31 = v44;
    swift_bridgeObjectRelease();
    *(void *)(v22 + v15) = v31;
    sub_10005C118(v22, v36);
    uint64_t v27 = (uint64_t)v41;
  }
  sub_100037F98(v27);
  return sub_10005C068(v22);
}

unint64_t sub_10005BF30()
{
  return sub_10005B5E4(*v0);
}

uint64_t sub_10005BF38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10005C5AC(a1, a2);
  *a3 = result;
  return result;
}

void sub_10005BF60(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_10005BF6C(uint64_t a1)
{
  unint64_t v2 = sub_10005C014();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10005BFA8(uint64_t a1)
{
  unint64_t v2 = sub_10005C014();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10005BFE4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005BA0C(a1, a2);
}

uint64_t sub_10005BFFC(void *a1)
{
  return sub_10005B6C4(a1);
}

unint64_t sub_10005C014()
{
  unint64_t result = qword_1001040E0;
  if (!qword_1001040E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001040E0);
  }
  return result;
}

uint64_t sub_10005C068(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ICArchiveModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10005C0C4()
{
  unint64_t result = qword_1001040E8;
  if (!qword_1001040E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001040E8);
  }
  return result;
}

uint64_t sub_10005C118(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ICArchiveModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10005C17C()
{
  unint64_t result = qword_100104120;
  if (!qword_100104120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104120);
  }
  return result;
}

uint64_t sub_10005C1D0(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100032F70(&qword_1001040F0);
    sub_10005C264(a2, (void (*)(uint64_t))_s3TagVMa);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10005C264(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10005C2AC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100032F70(&qword_100104108);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ICArchiveModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ICArchiveModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10005C46CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICArchiveModel.CodingKeys()
{
  return &type metadata for ICArchiveModel.CodingKeys;
}

unint64_t sub_10005C4A8()
{
  unint64_t result = qword_100104140;
  if (!qword_100104140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104140);
  }
  return result;
}

unint64_t sub_10005C500()
{
  unint64_t result = qword_100104148;
  if (!qword_100104148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104148);
  }
  return result;
}

unint64_t sub_10005C558()
{
  unint64_t result = qword_100104150;
  if (!qword_100104150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104150);
  }
  return result;
}

uint64_t sub_10005C5AC(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6E65644965707974 && a2 == 0xEE00726569666974;
  if (v3 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697369766572 && a2 == 0xE800000000000000 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4164657461657263 && a2 == 0xE900000000000074 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4264657461657263 && a2 == 0xE900000000000079 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1936154996 && a2 == 0xE400000000000000 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001000C8880)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1000B7DC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

Swift::Int sub_10005C818()
{
  return sub_1000B7E70();
}

Swift::Int sub_10005C904()
{
  return sub_1000B7E70();
}

Swift::Int sub_10005C984()
{
  return sub_1000B7E70();
}

Swift::Int sub_10005C9F0()
{
  return sub_1000B7E70();
}

Swift::Int sub_10005CA60()
{
  return sub_1000B7E70();
}

Swift::Int sub_10005CACC()
{
  return sub_1000B7E70();
}

Swift::Int sub_10005CB38()
{
  return sub_1000B7E70();
}

Swift::Int sub_10005CBA4()
{
  return sub_1000B7E70();
}

Swift::Int sub_10005CC10()
{
  return sub_1000B7E70();
}

Swift::Int sub_10005CD2C()
{
  return sub_1000B7E70();
}

Swift::Int sub_10005CD98()
{
  return sub_1000B7E70();
}

Swift::Int sub_10005CE04()
{
  return sub_1000B7E70();
}

uint64_t sub_10005CE90()
{
  sub_1000B7620();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10005CEE4()
{
  sub_1000B7620();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10005CF38()
{
  sub_1000B7620();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10005CF88()
{
  sub_1000B7620();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10005CFDC()
{
  sub_1000B7620();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10005D050()
{
  sub_1000B7620();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10005D0A4()
{
  sub_1000B7620();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10005D0F8()
{
  sub_1000B7620();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10005D14C()
{
  sub_1000B7620();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10005D1B4()
{
  sub_1000B7620();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10005D280()
{
  sub_1000B7620();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10005D37C()
{
  sub_1000B7620();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10005D3D0()
{
  sub_1000B7620();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10005D424()
{
  return sub_1000B7E70();
}

Swift::Int sub_10005D48C()
{
  return sub_1000B7E70();
}

Swift::Int sub_10005D4F4()
{
  return sub_1000B7E70();
}

Swift::Int sub_10005D60C()
{
  return sub_1000B7E70();
}

Swift::Int sub_10005D6F4()
{
  return sub_1000B7E70();
}

Swift::Int sub_10005D770()
{
  return sub_1000B7E70();
}

Swift::Int sub_10005D7D8()
{
  return sub_1000B7E70();
}

Swift::Int sub_10005D840()
{
  return sub_1000B7E70();
}

Swift::Int sub_10005D8A8()
{
  return sub_1000B7E70();
}

Swift::Int sub_10005D930()
{
  return sub_1000B7E70();
}

Swift::Int sub_10005D998()
{
  return sub_1000B7E70();
}

Swift::Int sub_10005DA04()
{
  return sub_1000B7E70();
}

Swift::Int sub_10005DA6C()
{
  return sub_1000B7E70();
}

id sub_10005DAD4(id a1, uint64_t a2, __int16 a3, uint64_t a4, uint64_t a5, double a6)
{
  uint64_t v8 = v6;
  if ((a3 & 1) == 0 || (id v15 = [a1 managedObjectContext]) == 0)
  {
LABEL_8:
    uint64_t ObjectType = swift_getObjectType();
    id v20 = a1;
    uint64_t v22 = (*(uint64_t (**)(void, void, void, uint64_t, uint64_t, uint64_t, uint64_t, double))(a2 + 16))(*(void *)(v8 + 8), *(void *)(v8 + 16), a3 & 0x101, a4, a5, ObjectType, a2, a6);
    if (!v7)
    {
      id v20 = (id)v22;
      self;
      uint64_t v23 = swift_dynamicCastObjCClass();
      if (v23)
      {
        uint64_t v24 = (void *)v23;
        id v20 = v20;
        NSString v25 = v20;
        if ([v24 isRenamable])
        {
          swift_bridgeObjectRetain();
          NSString v25 = sub_1000B7580();
          swift_bridgeObjectRelease();
          [v24 setTitle:v25];
        }
      }
    }
    return v20;
  }
  uint64_t v16 = v15;
  sub_10004EA80(v6 + 40, (uint64_t)&v27, &qword_100104178);
  sub_10004EA80((uint64_t)&v27, (uint64_t)&v28, &qword_100104178);
  char v17 = v28;
  if (v28 == 2)
  {

    goto LABEL_8;
  }
  uint64_t v18 = self;
  uint64_t v19 = &selRef_cloudKitAccountInContext_;
  if (v17) {
    uint64_t v19 = &selRef_localAccountInContext_;
  }
  id v20 = [v18 *v19 v16];

  if (!v20) {
    goto LABEL_8;
  }
  return v20;
}

id sub_10005DCD4(void *a1, uint64_t a2)
{
  sub_10004EA80(v2 + 56, (uint64_t)v16, &qword_100104170);
  sub_10004EA80((uint64_t)v16, (uint64_t)&v17, &qword_100104170);
  uint64_t v5 = v17;
  if (!v17) {
    return 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = (unint64_t)sub_100045148(v5, a2);
  swift_bridgeObjectRelease();
  id v7 = [a1 subFolderIdentifiersOrderedSet];
  uint64_t v8 = v7;
  if (!(v6 >> 62))
  {
    uint64_t v9 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v10 = v7;
    id result = (id)swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_4;
    }
LABEL_12:

    swift_bridgeObjectRelease_n();
    [a1 setSubFolderOrderMergeableDataDirty:1];
    [a1 saveSubFolderMergeableDataIfNeeded];
    return [a1 subFolderIdentifiersOrderedSetDocument];
  }
  id v15 = v7;
  swift_bridgeObjectRetain();
  id result = (id)sub_1000B7BA0();
  uint64_t v9 = (uint64_t)result;
  if (!result) {
    goto LABEL_12;
  }
LABEL_4:
  if (v9 >= 1)
  {
    for (uint64_t i = 0; i != v9; ++i)
    {
      if ((v6 & 0xC000000000000001) != 0) {
        id v13 = (id)sub_1000B7AC0();
      }
      else {
        id v13 = *(id *)(v6 + 8 * i + 32);
      }
      uint64_t v14 = v13;
      [v8 addObject:v13];
    }
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_10005DE9C()
{
  uint64_t v0 = sub_1000B7490();
  sub_100038F18(v0, qword_100104158);
  sub_100038E8C(v0, (uint64_t)qword_100104158);
  return sub_1000B7470();
}

unint64_t sub_10005DEE8(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x696669746E656469;
      break;
    case 2:
      unint64_t result = 0x656C746974;
      break;
    case 3:
      unint64_t result = 1701869940;
      break;
    case 4:
      unint64_t result = 1936154996;
      break;
    case 5:
      return result;
    default:
      unint64_t result = 0x6E65644965707974;
      break;
  }
  return result;
}

uint64_t sub_10005DFB4(void *a1)
{
  BOOL v3 = v1;
  uint64_t v5 = sub_100032E20(&qword_1001041D8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_100047028(a1, a1[3]);
  sub_10005EFE0();
  sub_1000B7EB0();
  v11[0] = *v3;
  char v12 = 0;
  sub_100051A0C();
  sub_1000B7D50();
  if (!v2)
  {
    v11[0] = 1;
    sub_1000B7D10();
    v11[0] = 2;
    sub_1000B7CC0();
    sub_10004EA80((uint64_t)(v3 + 40), (uint64_t)&v15, &qword_100104178);
    sub_10004EA80((uint64_t)&v15, (uint64_t)v11, &qword_100104178);
    char v12 = 3;
    sub_10005F034();
    sub_1000B7D00();
    sub_10004EA80((uint64_t)(v3 + 48), (uint64_t)v14, &qword_100103B48);
    sub_10004EA80((uint64_t)v14, (uint64_t)v11, &qword_100103B48);
    char v12 = 4;
    sub_100032E20(&qword_1001040F0);
    sub_10005F738(&qword_100104128, &qword_100104130);
    sub_1000B7D00();
    sub_10004EA80((uint64_t)(v3 + 56), (uint64_t)v13, &qword_100104170);
    sub_10004EA80((uint64_t)v13, (uint64_t)v11, &qword_100104170);
    char v12 = 5;
    sub_100032E20(&qword_100104108);
    sub_10005C2AC(&qword_100104138);
    sub_1000B7D00();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_10005E2E8()
{
  return sub_10005DEE8(*v0);
}

uint64_t sub_10005E2F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10005F088(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10005E318(uint64_t a1)
{
  unint64_t v2 = sub_10005EFE0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10005E354(uint64_t a1)
{
  unint64_t v2 = sub_10005EFE0();

  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_10005E390@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_10005F2D8(a1, v7);
  if (!v2)
  {
    long long v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    double result = *(double *)&v8;
    long long v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_10005E3D4(void *a1)
{
  return sub_10005DFB4(a1);
}

uint64_t sub_10005E410(char a1)
{
  if (a1) {
    return 0x4C41434F4CLL;
  }
  else {
    return 0x44554F4C43;
  }
}

uint64_t sub_10005E438(char *a1, char *a2)
{
  return sub_1000390DC(*a1, *a2);
}

Swift::Int sub_10005E444()
{
  return sub_10005C9F0();
}

uint64_t sub_10005E44C()
{
  return sub_10005CF38();
}

Swift::Int sub_10005E454()
{
  return sub_10005D998();
}

uint64_t sub_10005E45C@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  v8._countAndFlagsBits = *a1;
  BOOL v3 = (void *)a1[1];
  v4._rawValue = &off_1000EF208;
  v8._object = v3;
  Swift::Int v5 = sub_1000B7C00(v4, v8);
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *a2 = v7;
  return result;
}

uint64_t sub_10005E4BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10005E410(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_10005E4E8(void *a1@<X8>)
{
  *a1 = &off_1000EF258;
}

uint64_t sub_10005E4F8()
{
  return sub_1000B76B0();
}

uint64_t sub_10005E558()
{
  return sub_1000B76A0();
}

void sub_10005E5A8(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_10005E5B4()
{
  sub_10005F850();
  sub_10005F7FC();

  return sub_1000B70F0();
}

uint64_t sub_10005E63C()
{
  sub_10005F850();
  sub_10005F7FC();

  return sub_1000B7110();
}

uint64_t sub_10005E6B4(int a1)
{
  if (a1 == 1) {
    return 0;
  }
  if (a1 == 3) {
    return 1;
  }
  if (qword_100103690 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000B7490();
  sub_100038E8C(v2, (uint64_t)qword_100104158);
  BOOL v3 = sub_1000B7480();
  os_log_type_t v4 = sub_1000B7860();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v1 = 2;
    Swift::Int v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)Swift::Int v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Unknown account type â€” returning nil", v5, 2u);
    swift_slowDealloc();
  }
  else
  {

    return 2;
  }
  return v1;
}

uint64_t sub_10005E7C0@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  sub_10005EA8C(a2);
  id v5 = [a1 identifier];
  if (v5)
  {
    long long v6 = v5;
    uint64_t v7 = sub_1000B75B0();
    unint64_t v9 = v8;
  }
  else
  {
    uint64_t v7 = 0;
    unint64_t v9 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  id v10 = [a1 localizedName];
  uint64_t v30 = sub_1000B75B0();
  uint64_t v12 = v11;

  uint64_t v29 = v12;
  swift_bridgeObjectRetain();
  char v28 = sub_10005E6B4((int)[a1 accountType]);
  uint64_t v32 = a1;
  id v13 = [a1 subFolderIdentifiersOrderedSet];
  id v14 = [v13 allObjects];

  sub_10005EAC4();
  unint64_t v15 = sub_1000B76E0();

  if (!(v15 >> 62))
  {
    uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    unint64_t v31 = v9;
    if (v16) {
      goto LABEL_6;
    }
LABEL_16:
    swift_bridgeObjectRelease();

LABEL_17:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease_n();
    *(unsigned char *)a3 = 1;
    *(void *)(a3 + 8) = v7;
    *(void *)(a3 + 16) = v31;
    *(void *)(a3 + 24) = v30;
    *(void *)(a3 + 32) = v29;
    *(unsigned char *)(a3 + 40) = v28;
    *(void *)(a3 + 48) = &_swiftEmptySetSingleton;
    *(void *)(a3 + 56) = _swiftEmptyArrayStorage;
    return result;
  }
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1000B7BA0();
  swift_bridgeObjectRelease();
  unint64_t v31 = v9;
  if (!v16) {
    goto LABEL_16;
  }
LABEL_6:
  uint64_t result = sub_100043800(0, v16 & ~(v16 >> 63), 0);
  if ((v16 & 0x8000000000000000) == 0)
  {
    uint64_t v27 = a3;
    uint64_t v18 = 0;
    do
    {
      if ((v15 & 0xC000000000000001) != 0) {
        id v19 = (id)sub_1000B7AC0();
      }
      else {
        id v19 = *(id *)(v15 + 8 * v18 + 32);
      }
      id v20 = v19;
      uint64_t v21 = sub_1000B75B0();
      uint64_t v23 = v22;

      unint64_t v25 = _swiftEmptyArrayStorage[2];
      unint64_t v24 = _swiftEmptyArrayStorage[3];
      if (v25 >= v24 >> 1) {
        sub_100043800(v24 > 1, v25 + 1, 1);
      }
      ++v18;
      _swiftEmptyArrayStorage[2] = v25 + 1;
      long long v26 = &_swiftEmptyArrayStorage[2 * v25];
      void v26[4] = v21;
      v26[5] = v23;
    }
    while (v16 != v18);
    swift_bridgeObjectRelease();

    a3 = v27;
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t *sub_10005EA8C(uint64_t *a1)
{
  return a1;
}

unint64_t sub_10005EAC4()
{
  unint64_t result = qword_100103BA8;
  if (!qword_100103BA8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100103BA8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ICAccountArchiveModel.Types(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10005EBD0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICAccountArchiveModel.Types()
{
  return &type metadata for ICAccountArchiveModel.Types;
}

uint64_t destroy for ICAccountArchiveModel()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ICAccountArchiveModel(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ICAccountArchiveModel(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for ICAccountArchiveModel(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ICAccountArchiveModel(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ICAccountArchiveModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ICAccountArchiveModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICAccountArchiveModel()
{
  return &type metadata for ICAccountArchiveModel;
}

unint64_t sub_10005EEA0(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_100046DFC();
  unint64_t result = sub_100054E40();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_10005EED4()
{
  unint64_t result = qword_1001041B8;
  if (!qword_1001041B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001041B8);
  }
  return result;
}

unint64_t sub_10005EF2C()
{
  unint64_t result = qword_1001041C0;
  if (!qword_1001041C0)
  {
    sub_100032F70(&qword_1001041C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001041C0);
  }
  return result;
}

unint64_t sub_10005EF8C()
{
  unint64_t result = qword_1001041D0;
  if (!qword_1001041D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001041D0);
  }
  return result;
}

unint64_t sub_10005EFE0()
{
  unint64_t result = qword_1001041E0;
  if (!qword_1001041E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001041E0);
  }
  return result;
}

unint64_t sub_10005F034()
{
  unint64_t result = qword_1001041E8;
  if (!qword_1001041E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001041E8);
  }
  return result;
}

uint64_t sub_10005F088(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6E65644965707974 && a2 == 0xEE00726569666974;
  if (v3 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1936154996 && a2 == 0xE400000000000000 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001000C8880)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1000B7DC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_10005F2D8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_100032E20(&qword_1001041F0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100047028(a1, a1[3]);
  sub_10005EFE0();
  sub_1000B7EA0();
  if (v2)
  {
    sub_100037F98((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v27 = 0;
    sub_1000332D0();
    sub_1000B7CA0();
    int v9 = v25;
    LOBYTE(v25) = 1;
    uint64_t v10 = sub_1000B7C60();
    uint64_t v12 = v11;
    uint64_t v24 = v10;
    int v26 = v9;
    LOBYTE(v25) = 2;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1000B7C10();
    uint64_t v15 = v14;
    uint64_t v23 = v13;
    char v27 = 3;
    sub_10005EED4();
    swift_bridgeObjectRetain();
    sub_1000B7C50();
    int v22 = v25;
    sub_100032E20(&qword_1001040F0);
    char v27 = 4;
    sub_10005F738(&qword_1001040F8, &qword_100104100);
    sub_1000B7C50();
    uint64_t v21 = a2;
    uint64_t v16 = v25;
    sub_100032E20(&qword_100104108);
    char v27 = 5;
    sub_10005C2AC(&qword_100104110);
    swift_bridgeObjectRetain();
    sub_1000B7C50();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v17 = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_100037F98((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    id v19 = v21;
    *uint64_t v21 = v26;
    *((void *)v19 + 1) = v24;
    *((void *)v19 + 2) = v12;
    *((void *)v19 + 3) = v23;
    *((void *)v19 + 4) = v15;
    v19[40] = v22;
    *((void *)v19 + 6) = v16;
    *((void *)v19 + 7) = v17;
  }
  return result;
}

uint64_t sub_10005F738(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100032F70(&qword_1001040F0);
    sub_10005F7B8(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10005F7B8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    _s3TagVMa();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10005F7FC()
{
  unint64_t result = qword_1001041F8;
  if (!qword_1001041F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001041F8);
  }
  return result;
}

unint64_t sub_10005F850()
{
  unint64_t result = qword_100104200;
  if (!qword_100104200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104200);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ICAccountArchiveModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10005F970);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICAccountArchiveModel.CodingKeys()
{
  return &type metadata for ICAccountArchiveModel.CodingKeys;
}

unint64_t sub_10005F9AC()
{
  unint64_t result = qword_100104208;
  if (!qword_100104208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104208);
  }
  return result;
}

unint64_t sub_10005FA04()
{
  unint64_t result = qword_100104210;
  if (!qword_100104210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104210);
  }
  return result;
}

unint64_t sub_10005FA5C()
{
  unint64_t result = qword_100104218;
  if (!qword_100104218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104218);
  }
  return result;
}

uint64_t sub_10005FAB0(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  unint64_t v3 = sub_10006A0A8(a1);
  if ((v4 & 1) == 0) {
    return 0;
  }
  uint64_t v5 = (uint64_t *)(*(void *)(a2 + 56) + 32 * v3);
  uint64_t v6 = *v5;
  uint64_t v7 = (void *)v5[2];
  unint64_t v8 = (void *)v5[3];
  swift_errorRetain();
  id v9 = v8;
  swift_bridgeObjectRetain();
  id v10 = v7;
  return v6;
}

uint64_t sub_10005FB34()
{
  uint64_t v0 = sub_1000B7490();
  sub_100038F18(v0, qword_100104220);
  sub_100038E8C(v0, (uint64_t)qword_100104220);
  return sub_1000B7470();
}

id sub_10005FB80()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v1 = sub_1000B73B0();
  uint64_t v25 = *(void *)(v1 - 8);
  uint64_t v26 = v1;
  __chkstk_darwin(v1);
  uint64_t v24 = (char *)v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000B78A0();
  uint64_t v22 = *(void *)(v3 - 8);
  uint64_t v23 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000B7890();
  __chkstk_darwin(v6);
  uint64_t v7 = sub_1000B74C0();
  __chkstk_darwin(v7 - 8);
  uint64_t v21 = OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension29ICArchiveImportNoteFileParser_queue;
  v20[1] = sub_100038DC8(0, &qword_100104328);
  uint64_t v29 = (void *)sub_100032E20(&qword_100104338);
  unint64_t v8 = v0;
  sub_100032E20(&qword_100104340);
  sub_1000B75F0();
  sub_1000B74B0();
  uint64_t v29 = _swiftEmptyArrayStorage;
  sub_100066BC8(&qword_100104348, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100032E20(&qword_100104350);
  sub_100038F84(&qword_100104358, &qword_100104350);
  sub_1000B7A20();
  (*(void (**)(char *, void, uint64_t))(v22 + 104))(v5, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v23);
  *(void *)(v20[0] + v21) = sub_1000B78D0();
  id v9 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v10 = sub_1000B7580();
  id v11 = [v9 initWithSuiteName:v10];

  if (!v11) {
    id v11 = [self standardUserDefaults];
  }
  *(void *)&v8[OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension29ICArchiveImportNoteFileParser_userDefaults] = v11;
  uint64_t v12 = OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension29ICArchiveImportNoteFileParser_allowedContentTypes;
  sub_100032E20((uint64_t *)&unk_100104360);
  uint64_t v13 = v25;
  unint64_t v14 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1000CD1B0;
  id v16 = [self universalTypeIdentifier];
  uint64_t v17 = v24;
  sub_1000B73A0();

  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v15 + v14, v17, v26);
  *(void *)&v8[v12] = v15;
  uint64_t v18 = OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension29ICArchiveImportNoteFileParser_importStates;
  *(void *)&v8[v18] = sub_10003208C((uint64_t)_swiftEmptyArrayStorage);
  *(void *)&v8[OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension29ICArchiveImportNoteFileParser_archiveImporter] = [objc_allocWithZone((Class)type metadata accessor for ICArchiveImporter()) init];

  v28.receiver = v8;
  v28.super_class = ObjectType;
  return [super init];
}

uint64_t sub_1000600D0()
{
  uint64_t v1 = *(void **)(v0
                + OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension29ICArchiveImportNoteFileParser_userDefaults);
  NSString v2 = [self userDefaultsKey];
  if (!v2)
  {
    sub_1000B75B0();
    NSString v2 = sub_1000B7580();
    swift_bridgeObjectRelease();
  }
  unsigned int v3 = [v1 BOOLForKey:v2];

  if (v3)
  {
    uint64_t v4 = sub_1000B6E50();
    uint64_t v6 = v5;
    if (qword_100103640 != -1) {
      swift_once();
    }
    if (v4 == static ICArchive.packageExtension && v6 == *(void *)algn_10010E938) {
      char v8 = 1;
    }
    else {
      char v8 = sub_1000B7DC0();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v8 = 0;
  }
  return v8 & 1;
}

void sub_1000602DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v38 = a3;
  uint64_t v36 = a2;
  uint64_t v5 = sub_1000B6F10();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v33 = v7;
  uint64_t v34 = a1;
  char v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v32(v8, a1, v5);
  uint64_t v37 = v3;
  id v9 = (uint64_t *)&v3[OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension29ICArchiveImportNoteFileParser_importStates];
  swift_beginAccess();
  uint64_t v10 = sub_10005FAB0((uint64_t)v8, *v9);
  uint64_t v12 = v11;
  unint64_t v14 = v13;
  id v16 = v15;
  swift_endAccess();
  uint64_t v35 = v6;
  uint64_t v17 = *(void (**)(char *, uint64_t))(v6 + 8);
  v17(v8, v5);
  sub_100062DC8(v10, v12, v14, v16);
  if (v12)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v18 = v34;
  id v19 = v32;
  v32(v8, v34, v5);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v40 = *v9;
  uint64_t *v9 = 0x8000000000000000;
  sub_10006B388(0, (uint64_t)_swiftEmptyArrayStorage, 0, 0, (uint64_t)v8, isUniquelyReferenced_nonNull_native);
  uint64_t *v9 = v40;
  swift_bridgeObjectRelease();
  v17(v8, v5);
  swift_endAccess();
  sub_100038DC8(0, &qword_100104328);
  uint64_t v21 = sub_1000B78B0();
  v19(v8, v18, v5);
  uint64_t v22 = v35;
  unint64_t v23 = (*(unsigned __int8 *)(v35 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  unint64_t v24 = (v33 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v25 = swift_allocObject();
  uint64_t v26 = v37;
  *(void *)(v25 + 16) = v37;
  (*(void (**)(unint64_t, char *, uint64_t))(v22 + 32))(v25 + v23, v8, v5);
  char v27 = (void *)(v25 + v24);
  uint64_t v28 = v38;
  void *v27 = v36;
  v27[1] = v28;
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = sub_100066674;
  *(void *)(v29 + 24) = v25;
  aBlock[4] = sub_100066718;
  aBlock[5] = v29;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100060FA0;
  void aBlock[3] = &unk_1000F05E8;
  uint64_t v30 = _Block_copy(aBlock);
  id v31 = v26;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v21, v30);

  _Block_release(v30);
  LOBYTE(v30) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (v30) {
LABEL_5:
  }
    __break(1u);
}

uint64_t sub_100060694(uint64_t a1, char *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v69 = a3;
  uint64_t v7 = sub_1000B6F10();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v70 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v62 - v11;
  uint64_t v13 = sub_100032E20(&qword_100104330);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v16 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = a2;
  uint64_t v17 = ICArchiveImporter.objects(forArchiveAt:)(a2);
  uint64_t v70 = v12;
  uint64_t v63 = v17;
  uint64_t v64 = v7;
  uint64_t v27 = *(void *)(v17 + 16);
  if (v27)
  {
    uint64_t v65 = v8;
    uint64_t v66 = a1;
    uint64_t v67 = a4;
    uint64_t v29 = *(void *)(v14 + 16);
    uint64_t v28 = v14 + 16;
    uint64_t v26 = v29;
    unint64_t v30 = v17 + ((*(unsigned __int8 *)(v28 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 64));
    uint64_t v31 = *(void *)(v28 + 56);
    swift_bridgeObjectRetain();
    uint64_t v32 = 0;
    while (1)
    {
      ((void (*)(char *, unint64_t, uint64_t))v26)(v16, v30, v13);
      uint64_t v33 = sub_1000B7160();
      BOOL v34 = __OFADD__(v32, v33);
      v32 += v33;
      if (v34) {
        break;
      }
      (*(void (**)(char *, uint64_t))(v28 - 8))(v16, v13);
      v30 += v31;
      if (!--v27)
      {
        swift_bridgeObjectRelease();
        uint64_t v35 = v69;
        uint64_t v8 = v65;
        goto LABEL_14;
      }
    }
    __break(1u);
    swift_once();
    uint64_t v18 = sub_1000B7490();
    sub_100038E8C(v18, (uint64_t)qword_100104220);
    swift_errorRetain();
    swift_errorRetain();
    id v19 = sub_1000B7480();
    os_log_type_t v20 = sub_1000B7850();
    BOOL v21 = os_log_type_enabled(v19, v20);
    uint64_t v22 = (void (*)(void))v69;
    if (v21)
    {
      unint64_t v23 = (uint8_t *)swift_slowAlloc();
      v71[0] = swift_slowAlloc();
      *(_DWORD *)unint64_t v23 = 136315138;
      uint64_t v65 = v26;
      swift_getErrorValue();
      uint64_t v24 = sub_1000B7E00();
      v71[4] = sub_100069A50(v24, v25, v71);
      uint64_t v26 = v65;
      sub_1000B79F0();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Error getting objects for archive {error: %s}", v23, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v70, v68, v27);
    swift_beginAccess();
    uint64_t v37 = sub_100060E38(v71);
    if (v36[1])
    {
      uint64_t v38 = v36;
      uint64_t v39 = v27;
      uint64_t v40 = v22;
      uint64_t v41 = v26;
      long long v43 = (void *)v36[2];
      uint64_t v42 = (void *)v36[3];
      swift_errorRetain();
      id v44 = v42;
      swift_bridgeObjectRetain();
      id v45 = v43;
      swift_errorRelease();
      swift_bridgeObjectRelease();

      uint64_t v26 = v41;
      uint64_t v22 = v40;

      uint64_t v27 = v39;
      *uint64_t v38 = v32;
      swift_errorRetain();
      swift_errorRelease();
    }
    ((void (*)(uint64_t *, void))v37)(v71, 0);
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v70, v27);
    v22(0);
    return swift_errorRelease();
  }
  else
  {
    uint64_t v32 = 0;
    uint64_t v35 = v69;
LABEL_14:
    uint64_t v47 = v64;
    char v48 = v70;
    if (qword_100103698 != -1) {
      swift_once();
    }
    uint64_t v49 = sub_1000B7490();
    sub_100038E8C(v49, (uint64_t)qword_100104220);
    uint64_t v50 = sub_1000B7480();
    os_log_type_t v51 = sub_1000B7840();
    if (os_log_type_enabled(v50, v51))
    {
      uint64_t v52 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v52 = 134217984;
      char v48 = v70;
      v71[0] = v32;
      sub_1000B79F0();
      _os_log_impl((void *)&_mh_execute_header, v50, v51, "Created objects for archive {noteCount: %ld}", v52, 0xCu);
      swift_slowDealloc();
    }

    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v48, v68, v47);
    swift_beginAccess();
    unint64_t v54 = sub_100060E38(v71);
    if (v53[1])
    {
      uint64_t v55 = v53;
      uint64_t v56 = v35;
      uint64_t v57 = v8;
      uint64_t v59 = (void *)v53[2];
      uint64_t v58 = (void *)v53[3];
      swift_errorRetain();
      id v60 = v58;
      swift_bridgeObjectRetain();
      id v61 = v59;
      uint64_t v47 = v64;
      swift_errorRelease();
      swift_bridgeObjectRelease();

      uint64_t v8 = v57;
      char v48 = v70;
      uint64_t v35 = v56;
      v55[1] = v63;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    ((void (*)(uint64_t *, void))v54)(v71, 0);
    swift_endAccess();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v48, v47);
    if (v32 < 0)
    {
      uint64_t result = sub_1000B7B80();
      __break(1u);
    }
    else
    {
      return v35(v32);
    }
  }
  return result;
}

void (*sub_100060E38(void *a1))(void *a1)
{
  NSString v2 = malloc(0x40uLL);
  *a1 = v2;
  uint64_t v3 = sub_1000B6F10();
  v2[4] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = v4;
  v2[5] = v4;
  uint64_t v6 = malloc(*(void *)(v4 + 64));
  v2[6] = v6;
  (*(void (**)(void))(v5 + 16))();
  v2[7] = sub_100066090(v2, (uint64_t)v6);
  return sub_100060F28;
}

void sub_100060F28(void *a1)
{
  uint64_t v1 = (void *)*a1;
  NSString v2 = *(void **)(*a1 + 48);
  uint64_t v3 = *(void *)(*a1 + 32);
  uint64_t v4 = *(void *)(*a1 + 40);
  (*(void (**)(void, void))(*a1 + 56))(*a1, 0);
  (*(void (**)(void *, uint64_t))(v4 + 8))(v2, v3);
  free(v2);

  free(v1);
}

uint64_t sub_100060FA0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

void sub_1000610FC()
{
  sub_1000B75B0();
  id v0 = objc_allocWithZone((Class)NSError);
  NSString v1 = sub_1000B7580();
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithDomain:v1 code:3072 userInfo:0];

  qword_100104238 = (uint64_t)v2;
}

void sub_10006118C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t), uint64_t a7, void (*a8)(void), void (*a9)(void))
{
  uint64_t v10 = v9;
  uint64_t v105 = a8;
  int v99 = a6;
  uint64_t v100 = a7;
  uint64_t v92 = a5;
  uint64_t v91 = a4;
  uint64_t v95 = a3;
  uint64_t v94 = a2;
  uint64_t v12 = sub_1000B74A0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v98 = (char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000B74C0();
  uint64_t v97 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v96 = (char *)&v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000B6F10();
  uint64_t v18 = *(void **)(v17 - 8);
  uint64_t v19 = v18[8];
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v93 = (char *)&v81 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v101 = (char *)&v81 - v22;
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v81 - v23;
  unint64_t v25 = (uint64_t *)&v9[OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension29ICArchiveImportNoteFileParser_importStates];
  swift_beginAccess();
  uint64_t v26 = *v25;
  uint64_t v107 = a1;
  uint64_t v27 = sub_10005FAB0(a1, v26);
  id v103 = v29;
  id v104 = v28;
  uint64_t v106 = v30;
  if (v30)
  {
    uint64_t v31 = v27;
    uint64_t v102 = a9;
    swift_endAccess();
    if (v31)
    {
      swift_errorRetain();
      uint64_t v32 = (void *)sub_1000B6E20();
      if (qword_1001036A0 != -1) {
        swift_once();
      }
      uint64_t v33 = (void *)qword_100104238;
      sub_100038DC8(0, &qword_100104320);
      id v34 = v33;
      char v35 = sub_1000B79C0();

      if ((v35 & 1) == 0) {
        v99(v31);
      }
      sub_100061AE0(v107);
      v105();
      swift_errorRelease();
      swift_errorRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v84 = v15;
      uint64_t v85 = v10;
      uint64_t v86 = v13;
      uint64_t v87 = v12;
      id v36 = [objc_allocWithZone((Class)NSProgress) init];
      uint64_t v90 = (void (*)(char *, uint64_t, uint64_t))v18[2];
      v90(v24, v107, v17);
      swift_beginAccess();
      uint64_t v38 = sub_100060E38(aBlock);
      uint64_t v39 = v37[1];
      id v89 = v36;
      uint64_t v88 = (char *)(v18 + 2);
      if (v39)
      {
        uint64_t v40 = v37;
        uint64_t v83 = v18;
        uint64_t v41 = (void *)v37[2];
        uint64_t v42 = (void *)v37[3];
        uint64_t v82 = (void (*)(void *, void))v38;
        swift_errorRetain();
        id v43 = v42;
        swift_bridgeObjectRetain();
        id v44 = v41;
        swift_errorRelease();
        swift_bridgeObjectRelease();

        uint64_t v18 = v83;
        id v45 = (void *)v40[2];
        v40[2] = v36;
        id v46 = v36;

        v82(aBlock, 0);
      }
      else
      {
        ((void (*)(void *, void))v38)(aBlock, 0);
      }
      swift_endAccess();
      uint64_t v47 = (void (*)(char *, uint64_t))v18[1];
      v47(v24, v17);
      v90(v101, v107, v17);
      swift_beginAccess();
      uint64_t v49 = sub_100060E38(aBlock);
      if (v48[1])
      {
        uint64_t v50 = v48;
        os_log_type_t v51 = v47;
        uint64_t v53 = (void *)v48[2];
        uint64_t v52 = (void *)v48[3];
        uint64_t v83 = v49;
        swift_errorRetain();
        id v54 = v52;
        swift_bridgeObjectRetain();
        id v55 = v53;
        swift_errorRelease();
        swift_bridgeObjectRelease();

        uint64_t v47 = v51;
        void aBlock[6] = v89;
        swift_getKeyPath();
        uint64_t v56 = swift_allocObject();
        *(void *)(v56 + 16) = v91;
        *(void *)(v56 + 24) = v92;
        swift_retain();
        uint64_t v57 = sub_1000B6E40();
        swift_release();
        swift_release();
        uint64_t v58 = (void *)v50[3];
        v50[3] = v57;

        ((void (*)(void *, void))v83)(aBlock, 0);
      }
      else
      {
        ((void (*)(void *, void))v49)(aBlock, 0);
      }
      swift_endAccess();
      v47(v101, v17);
      uint64_t v59 = v85;
      uint64_t v101 = *(char **)&v85[OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension29ICArchiveImportNoteFileParser_queue];
      id v60 = v93;
      v90(v93, v107, v17);
      unint64_t v61 = (*((unsigned __int8 *)v18 + 80) + 56) & ~(unint64_t)*((unsigned __int8 *)v18 + 80);
      unint64_t v62 = (v19 + v61 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v63 = (v62 + 23) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v64 = (char *)swift_allocObject();
      *((void *)v64 + 2) = v59;
      *((void *)v64 + 3) = 0;
      id v65 = v104;
      *((void *)v64 + 4) = v106;
      *((void *)v64 + 5) = v65;
      uint64_t v66 = v18;
      id v67 = v103;
      *((void *)v64 + 6) = v103;
      ((void (*)(char *, char *, uint64_t))v66[4])(&v64[v61], v60, v17);
      uint64_t v68 = &v64[v62];
      uint64_t v69 = v95;
      *(void *)uint64_t v68 = v94;
      *((void *)v68 + 1) = v69;
      uint64_t v70 = &v64[v63];
      uint64_t v71 = v100;
      *(void *)uint64_t v70 = v99;
      *((void *)v70 + 1) = v71;
      uint64_t v72 = (void (**)(void))&v64[(v63 + 23) & 0xFFFFFFFFFFFFFFF8];
      uint64_t v73 = v102;
      char *v72 = v105;
      v72[1] = v73;
      aBlock[4] = sub_100065F9C;
      aBlock[5] = v64;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100061F4C;
      void aBlock[3] = &unk_1000F0548;
      uint64_t v74 = _Block_copy(aBlock);
      id v75 = v67;
      swift_retain();
      swift_retain();
      swift_retain();
      id v76 = v59;
      swift_bridgeObjectRetain();
      id v77 = v65;
      uint64_t v78 = v96;
      sub_1000B74B0();
      aBlock[7] = _swiftEmptyArrayStorage;
      sub_100066BC8(&qword_100104308, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100032E20(&qword_100104310);
      sub_100038F84(&qword_100104318, &qword_100104310);
      uint64_t v79 = v98;
      uint64_t v80 = v87;
      sub_1000B7A20();
      sub_1000B78C0();
      _Block_release(v74);

      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v86 + 8))(v79, v80);
      (*(void (**)(char *, uint64_t))(v97 + 8))(v78, v84);
      swift_release();
    }
  }
  else
  {
    swift_endAccess();
    __break(1u);
  }
}

void sub_100061AE0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(v1
                 + OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension29ICArchiveImportNoteFileParser_importStates);
  swift_beginAccess();
  uint64_t v4 = sub_10005FAB0(a1, *v3);
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  swift_endAccess();
  if (v6)
  {
    sub_100065C60(v4, v6, v8, v10);
    id v11 = v8;
    swift_errorRelease();

    swift_bridgeObjectRelease();
    [v11 cancel];

    sub_100065C60(v4, v6, v8, v10);
    id v12 = v10;
    swift_errorRelease();

    swift_bridgeObjectRelease();
    if (v10)
    {
      sub_1000B6E10();
    }
  }
  swift_beginAccess();
  uint64_t v13 = sub_100062CA0(a1);
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  swift_endAccess();
  sub_100062DC8(v13, v15, v17, v19);
  sub_100062DC8(v4, v6, v8, v10);
}

void sub_100061C50(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(void))
{
  uint64_t v10 = (uint64_t *)(v7
                  + OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension29ICArchiveImportNoteFileParser_importStates);
  swift_beginAccess();
  uint64_t v11 = a2;
  uint64_t v12 = sub_10005FAB0(a2, *v10);
  if (!v13)
  {
LABEL_6:
    swift_endAccess();
    goto LABEL_7;
  }
  uint64_t v16 = v12;
  uint64_t v17 = v13;
  uint64_t v18 = v14;
  uint64_t v19 = v15;
  swift_endAccess();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  id v20 = v19;
  id v21 = v18;
  swift_errorRelease();

  swift_bridgeObjectRelease();
  sub_100062DC8(v16, v17, v18, v19);
  if (v18)
  {
    uint64_t v24 = (void *)a3(v22, v23);
    id v25 = [v24 managedObjectContext:a6, a5];
    if (v25)
    {
      uint64_t v26 = v25;
      __chkstk_darwin(v25);
      sub_1000B7990();
      id v27 = [self sharedGenerator];
      [v27 generatePreviewsIfNeeded];

      sub_100061AE0(v11);
      a7();

      return;
    }
    __break(1u);
    goto LABEL_6;
  }
LABEL_7:
  sub_1000B7B90();
  __break(1u);
}

uint64_t sub_100061F4C(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

void sub_1000621BC(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  id v11 = [a1 folder];
  if (v11)
  {
    uint64_t v12 = (void (*)(void, void, void))v11;
    [a2 deleteObject:a1];
    uint64_t v13 = (objc_class *)type metadata accessor for ICArchiveImporter();
    uint64_t v14 = (uint64_t *)(*(void *)(a3
                                + OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension29ICArchiveImportNoteFileParser_archiveImporter)
                    + OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension17ICArchiveImporter_fileManager);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    id v17 = a2;
    swift_unknownObjectRetain();
    __int16 IsAlexandriaDemoModeEnabled = ICInternalSettingsIsAlexandriaDemoModeEnabled();
    int v19 = ICInternalSettingsIsAlexandriaDemoModeEnabled();
    uint64_t ObjectType = swift_getObjectType();
    if (v19) {
      __int16 v21 = 256;
    }
    else {
      __int16 v21 = 0;
    }
    id v22 = sub_1000448D0(v17, v21 | IsAlexandriaDemoModeEnabled, 0, 0, v15, v13, ObjectType, v16, 0.0);
    ICArchiveImporter.importObjects(_:fromArchiveAt:into:progress:)(a4, a5, v12, a6);
  }
  else
  {
    __break(1u);
  }
}

void sub_100062300()
{
  uint64_t v1 = sub_1000B6F10();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100032E20((uint64_t *)&unk_1001042F0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t *)&v0[OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension29ICArchiveImportNoteFileParser_importStates];
  swift_beginAccess();
  uint64_t v9 = *v8;
  uint64_t v10 = *(void *)(*v8 + 64);
  uint64_t v48 = *v8 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  int64_t v49 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v54 = v2;
  id v55 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
  uint64_t v52 = v2 + 48;
  uint64_t v53 = v2 + 16;
  uint64_t v50 = (void (**)(char *, char *, uint64_t))(v2 + 32);
  uint64_t v56 = v9;
  uint64_t v57 = (void (**)(unint64_t, uint64_t))(v2 + 8);
  swift_bridgeObjectRetain_n();
  uint64_t v47 = v0;
  int64_t v14 = 0;
  uint64_t v58 = v1;
  os_log_type_t v51 = v7;
  while (1)
  {
    if (v13)
    {
      unint64_t v21 = __clz(__rbit64(v13));
      uint64_t v22 = (v13 - 1) & v13;
      unint64_t v23 = v21 | (v14 << 6);
      goto LABEL_26;
    }
    int64_t v24 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_38;
    }
    if (v24 >= v49) {
      goto LABEL_35;
    }
    unint64_t v25 = *(void *)(v48 + 8 * v24);
    ++v14;
    if (!v25)
    {
      int64_t v14 = v24 + 1;
      if (v24 + 1 >= v49) {
        goto LABEL_35;
      }
      unint64_t v25 = *(void *)(v48 + 8 * v14);
      if (!v25)
      {
        int64_t v14 = v24 + 2;
        if (v24 + 2 >= v49) {
          goto LABEL_35;
        }
        unint64_t v25 = *(void *)(v48 + 8 * v14);
        if (!v25)
        {
          int64_t v14 = v24 + 3;
          if (v24 + 3 >= v49) {
            goto LABEL_35;
          }
          unint64_t v25 = *(void *)(v48 + 8 * v14);
          if (!v25)
          {
            int64_t v14 = v24 + 4;
            if (v24 + 4 >= v49) {
              goto LABEL_35;
            }
            unint64_t v25 = *(void *)(v48 + 8 * v14);
            if (!v25) {
              break;
            }
          }
        }
      }
    }
LABEL_25:
    uint64_t v22 = (v25 - 1) & v25;
    unint64_t v23 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_26:
    uint64_t v27 = v54;
    uint64_t v28 = *(void *)(v54 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v54 + 16))(v7, *(void *)(v56 + 48) + v28 * v23, v1);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v7, 0, 1, v1);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v7, 1, v1) == 1) {
      goto LABEL_36;
    }
    (*v50)(v4, v7, v1);
    swift_beginAccess();
    uint64_t v29 = *v8;
    uint64_t v30 = *(void *)(*v8 + 16);
    unint64_t v62 = v22;
    int64_t v63 = v14;
    if (v30 && (unint64_t v31 = sub_10006A0A8((uint64_t)v4), (v32 & 1) != 0))
    {
      uint64_t v33 = (uint64_t *)(*(void *)(v29 + 56) + 32 * v31);
      uint64_t v34 = *v33;
      uint64_t v35 = v33[1];
      uint64_t v37 = (void *)v33[2];
      id v36 = (void *)v33[3];
      swift_endAccess();
      uint64_t v60 = v35;
      swift_bridgeObjectRetain();
      uint64_t v61 = v34;
      swift_errorRetain();
      id v38 = v36;
      uint64_t v59 = v37;
      [v37 cancel];
      if (v36)
      {
        id v39 = v38;
        sub_1000B6E10();
      }
    }
    else
    {
      swift_endAccess();
      uint64_t v60 = 0;
      uint64_t v61 = 0;
      uint64_t v59 = 0;
      id v36 = 0;
    }
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v40 = v4;
    unint64_t v41 = sub_10006A0A8((uint64_t)v4);
    char v43 = v42;
    swift_bridgeObjectRelease();
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    id v20 = 0;
    int v19 = 0;
    if (v43)
    {
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v45 = *v8;
      uint64_t v64 = *v8;
      uint64_t *v8 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_100065954();
        uint64_t v45 = v64;
      }
      (*v57)(*(void *)(v45 + 48) + v41 * v28, v58);
      uint64_t v15 = v64;
      uint64_t v16 = (uint64_t *)(*(void *)(v64 + 56) + 32 * v41);
      uint64_t v17 = *v16;
      uint64_t v18 = v16[1];
      id v20 = (void *)v16[2];
      int v19 = (void *)v16[3];
      sub_1000647B4(v41, v64);
      uint64_t *v8 = v15;
      swift_bridgeObjectRelease();
    }
    swift_endAccess();
    sub_100062DC8(v17, v18, v20, v19);
    sub_100062DC8(v61, v60, v59, v36);
    uint64_t v1 = v58;
    uint64_t v4 = v40;
    (*v57)((unint64_t)v40, v58);
    uint64_t v7 = v51;
    unint64_t v13 = v62;
    int64_t v14 = v63;
  }
  int64_t v26 = v24 + 5;
  if (v26 >= v49)
  {
LABEL_35:
    (*v55)(v7, 1, 1, v1);
LABEL_36:
    swift_release();
    swift_bridgeObjectRelease();

    return;
  }
  unint64_t v25 = *(void *)(v48 + 8 * v26);
  if (v25)
  {
    int64_t v14 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v14 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v14 >= v49) {
      goto LABEL_35;
    }
    unint64_t v25 = *(void *)(v48 + 8 * v14);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_38:
  __break(1u);
}

uint64_t type metadata accessor for ICArchiveImportNoteFileParser()
{
  return self;
}

void destroy for ICArchiveImportNoteFileParser.ImportState(uint64_t a1)
{
  swift_errorRelease();
  swift_bridgeObjectRelease();

  uint64_t v2 = *(void **)(a1 + 24);
}

void *initializeWithCopy for ICArchiveImportNoteFileParser.ImportState(void *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  swift_errorRetain();
  uint64_t v5 = a2[1];
  uint64_t v6 = (void *)a2[2];
  *a1 = v4;
  a1[1] = v5;
  uint64_t v7 = (void *)a2[3];
  a1[2] = v6;
  a1[3] = v7;
  swift_bridgeObjectRetain();
  id v8 = v6;
  id v9 = v7;
  return a1;
}

void *assignWithCopy for ICArchiveImportNoteFileParser.ImportState(void *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  swift_errorRetain();
  *a1 = v4;
  swift_errorRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)a1[2];
  uint64_t v6 = (void *)a2[2];
  a1[2] = v6;
  id v7 = v6;

  id v8 = (void *)a1[3];
  id v9 = (void *)a2[3];
  a1[3] = v9;
  id v10 = v9;

  return a1;
}

uint64_t assignWithTake for ICArchiveImportNoteFileParser.ImportState(uint64_t a1, _OWORD *a2)
{
  swift_errorRelease();
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();

  uint64_t v4 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];

  return a1;
}

uint64_t getEnumTagSinglePayload for ICArchiveImportNoteFileParser.ImportState(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ICArchiveImportNoteFileParser.ImportState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICArchiveImportNoteFileParser.ImportState()
{
  return &type metadata for ICArchiveImportNoteFileParser.ImportState;
}

double sub_100062BA8@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_10006A39C(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v11 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_10006521C();
      uint64_t v9 = v11;
    }

    sub_100032FB8((_OWORD *)(*(void *)(v9 + 56) + 32 * v6), a2);
    sub_1000645C0(v6, v9);
    uint64_t *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_100062CA0(uint64_t a1)
{
  unint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_10006A0A8(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v12 = *v2;
  *unint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_100065954();
    uint64_t v7 = v12;
  }
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = sub_1000B6F10();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * v4, v9);
  uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 32 * v4);
  sub_1000647B4(v4, v7);
  *unint64_t v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

void sub_100062DC8(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  if (a2)
  {
    swift_errorRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_100062E24(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_100032E20(&qword_100104330);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_100032E20(&qword_100103730);
  int v50 = a2;
  uint64_t v10 = sub_1000B7BC0();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_41;
  }
  uint64_t v53 = v8;
  uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v13 = *(void *)(v9 + 64);
  uint64_t v46 = (void *)(v9 + 64);
  if (v12 < 64) {
    uint64_t v14 = ~(-1 << v12);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v13;
  id v44 = v2;
  int64_t v45 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v47 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  os_log_type_t v51 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v16 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v18 = 0;
  uint64_t v48 = v6;
  uint64_t v49 = v9;
  uint64_t v54 = v5;
  while (1)
  {
    if (v15)
    {
      unint64_t v21 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v22 = v21 | (v18 << 6);
      goto LABEL_22;
    }
    int64_t v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v45) {
      break;
    }
    int64_t v24 = v46;
    unint64_t v25 = v46[v23];
    ++v18;
    if (!v25)
    {
      int64_t v18 = v23 + 1;
      if (v23 + 1 >= v45) {
        goto LABEL_34;
      }
      unint64_t v25 = v46[v18];
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v45)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v44;
          if ((v50 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v25 = v46[v26];
        if (!v25)
        {
          while (1)
          {
            int64_t v18 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_43;
            }
            if (v18 >= v45) {
              goto LABEL_34;
            }
            unint64_t v25 = v46[v18];
            ++v26;
            if (v25) {
              goto LABEL_21;
            }
          }
        }
        int64_t v18 = v26;
      }
    }
LABEL_21:
    unint64_t v15 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_22:
    uint64_t v27 = *(void *)(v6 + 72);
    unint64_t v28 = *(void *)(v9 + 48) + v27 * v22;
    uint64_t v29 = 24 * v22;
    int64_t v52 = v18;
    if (v50)
    {
      (*v51)(v53, v28, v54);
      uint64_t v30 = *(void *)(v9 + 56) + v29;
      id v32 = *(id *)v30;
      uint64_t v31 = *(void *)(v30 + 8);
      char v33 = *(unsigned char *)(v30 + 16);
    }
    else
    {
      (*v47)(v53, v28, v54);
      uint64_t v34 = *(void *)(v9 + 56) + v29;
      id v32 = *(id *)v34;
      uint64_t v31 = *(void *)(v34 + 8);
      char v33 = *(unsigned char *)(v34 + 16);
      sub_100037F24(*(id *)v34, v31, v33);
    }
    sub_100038F84((unint64_t *)&unk_100104380, &qword_100104330);
    uint64_t result = sub_1000B7520();
    uint64_t v35 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v36 = result & ~v35;
    unint64_t v37 = v36 >> 6;
    if (((-1 << v36) & ~*(void *)(v16 + 8 * (v36 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v36) & ~*(void *)(v16 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v38 = 0;
      unint64_t v39 = (unint64_t)(63 - v35) >> 6;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v40 = v37 == v39;
        if (v37 == v39) {
          unint64_t v37 = 0;
        }
        v38 |= v40;
        uint64_t v41 = *(void *)(v16 + 8 * v37);
      }
      while (v41 == -1);
      unint64_t v19 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v51)(*(void *)(v11 + 48) + v27 * v19, v53, v54);
    uint64_t v20 = *(void *)(v11 + 56) + 24 * v19;
    *(void *)uint64_t v20 = v32;
    *(void *)(v20 + 8) = v31;
    *(unsigned char *)(v20 + 16) = v33;
    ++*(void *)(v11 + 16);
    uint64_t v6 = v48;
    uint64_t v9 = v49;
    int64_t v18 = v52;
  }
  swift_release();
  uint64_t v3 = v44;
  int64_t v24 = v46;
  if ((v50 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v42 = 1 << *(unsigned char *)(v9 + 32);
  if (v42 >= 64) {
    bzero(v24, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v24 = -1 << v42;
  }
  *(void *)(v9 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v11;
  return result;
}

uint64_t sub_100063280(uint64_t a1, char a2)
{
  return sub_1000635E0(a1, a2, &qword_100103AF0);
}

uint64_t sub_10006328C(uint64_t a1, char a2)
{
  return sub_1000635E0(a1, a2, (uint64_t *)&unk_100104390);
}

uint64_t sub_100063298(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100032E20(&qword_100103738);
  char v35 = a2;
  uint64_t v6 = sub_1000B7BC0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v33 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v17 >= v33) {
      break;
    }
    int64_t v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v34 + 8 * v17);
    ++v13;
    if (!v19)
    {
      int64_t v13 = v17 + 1;
      if (v17 + 1 >= v33) {
        goto LABEL_34;
      }
      unint64_t v19 = *(void *)(v34 + 8 * v13);
      if (!v19)
      {
        int64_t v20 = v17 + 2;
        if (v20 >= v33)
        {
LABEL_34:
          swift_release();
          if ((v35 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v19 = *(void *)(v34 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            int64_t v13 = v20 + 1;
            if (__OFADD__(v20, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v33) {
              goto LABEL_34;
            }
            unint64_t v19 = *(void *)(v34 + 8 * v13);
            ++v20;
            if (v19) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v20;
      }
    }
LABEL_21:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    unint64_t v21 = *(void **)(*(void *)(v5 + 48) + 8 * v16);
    unint64_t v22 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v16);
    if (v35)
    {
      sub_100032FB8(v22, v36);
    }
    else
    {
      sub_100032E64((uint64_t)v22, (uint64_t)v36);
      id v23 = v21;
    }
    sub_1000B75B0();
    sub_1000B7E40();
    sub_1000B7620();
    Swift::Int v24 = sub_1000B7E70();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v26 = v24 & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v11 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(void *)(*(void *)(v7 + 48) + 8 * v14) = v21;
    uint64_t result = (uint64_t)sub_100032FB8(v36, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v18 = (void *)(v5 + 64);
  if ((v35 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v18, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v18 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1000635D4(uint64_t a1, char a2)
{
  return sub_1000635E0(a1, a2, (uint64_t *)&unk_1001043A0);
}

uint64_t sub_1000635E0(uint64_t a1, char a2, uint64_t *a3)
{
  unint64_t v4 = v3;
  uint64_t v6 = *v3;
  sub_100032E20(a3);
  char v39 = a2;
  uint64_t v7 = sub_1000B7BC0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v38 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  unint64_t v36 = v3;
  int64_t v37 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37) {
      break;
    }
    id v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v38 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v37) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v38 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          unint64_t v4 = v36;
          if ((v39 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v37) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v38 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    BOOL v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    int64_t v33 = *(void **)(*(void *)(v6 + 56) + 8 * v21);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v34 = v33;
    }
    sub_1000B7E40();
    sub_1000B7620();
    uint64_t result = sub_1000B7E70();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *unint64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  unint64_t v4 = v36;
  id v23 = (void *)(v6 + 64);
  if ((v39 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v6 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v23 = -1 << v35;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v4 = v8;
  return result;
}

uint64_t sub_1000638EC(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1000B6F10();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_100032E20(&qword_100103760);
  int v46 = a2;
  uint64_t v10 = sub_1000B7BC0();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  uint64_t v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  BOOL v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  unint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    int64_t v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
      swift_errorRetain();
    }
    sub_100066BC8(&qword_100103AB8, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t result = sub_1000B7520();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  int64_t v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v12;
  return result;
}

uint64_t sub_100063D10(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1000B7030();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_100032E20(&qword_100103750);
  int v47 = a2;
  uint64_t v10 = sub_1000B7BC0();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_41;
  }
  uint64_t v49 = v8;
  uint64_t v50 = v5;
  uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v13 = *(void *)(v9 + 64);
  uint64_t v43 = (void *)(v9 + 64);
  if (v12 < 64) {
    uint64_t v14 = ~(-1 << v12);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v13;
  int64_t v41 = v2;
  int64_t v42 = (unint64_t)(v12 + 63) >> 6;
  id v44 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v48 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v16 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v18 = 0;
  uint64_t v45 = v9;
  uint64_t v46 = v6;
  while (1)
  {
    if (v15)
    {
      unint64_t v21 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v22 = v21 | (v18 << 6);
      goto LABEL_22;
    }
    int64_t v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v42) {
      break;
    }
    int64_t v24 = v43;
    unint64_t v25 = v43[v23];
    ++v18;
    if (!v25)
    {
      int64_t v18 = v23 + 1;
      if (v23 + 1 >= v42) {
        goto LABEL_34;
      }
      unint64_t v25 = v43[v18];
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v42)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v41;
          if ((v47 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v25 = v43[v26];
        if (!v25)
        {
          while (1)
          {
            int64_t v18 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_43;
            }
            if (v18 >= v42) {
              goto LABEL_34;
            }
            unint64_t v25 = v43[v18];
            ++v26;
            if (v25) {
              goto LABEL_21;
            }
          }
        }
        int64_t v18 = v26;
      }
    }
LABEL_21:
    unint64_t v15 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_22:
    uint64_t v27 = *(void *)(v6 + 72);
    unint64_t v28 = *(void *)(v9 + 48) + v27 * v22;
    if (v47)
    {
      (*v48)(v49, v28, v50);
      unint64_t v29 = (uint64_t *)(*(void *)(v9 + 56) + 16 * v22);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
    }
    else
    {
      (*v44)(v49, v28, v50);
      unint64_t v32 = (uint64_t *)(*(void *)(v9 + 56) + 16 * v22);
      uint64_t v31 = *v32;
      uint64_t v30 = v32[1];
      swift_bridgeObjectRetain();
    }
    sub_100066BC8((unint64_t *)&unk_100104370, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t result = sub_1000B7520();
    uint64_t v33 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v16 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v34) & ~*(void *)(v16 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v6 = v46;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      uint64_t v6 = v46;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v16 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v19 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v48)(*(void *)(v11 + 48) + v27 * v19, v49, v50);
    int64_t v20 = (void *)(*(void *)(v11 + 56) + 16 * v19);
    *int64_t v20 = v31;
    v20[1] = v30;
    ++*(void *)(v11 + 16);
    uint64_t v9 = v45;
  }
  swift_release();
  uint64_t v3 = v41;
  int64_t v24 = v43;
  if ((v47 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v9 + 32);
  if (v40 >= 64) {
    bzero(v24, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v24 = -1 << v40;
  }
  *(void *)(v9 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v11;
  return result;
}

uint64_t sub_100064150(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1000B6F10();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_100032E20(&qword_100104300);
  int v52 = a2;
  uint64_t v10 = sub_1000B7BC0();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_41;
  }
  uint64_t v56 = v8;
  uint64_t v45 = v2;
  uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v13 = *(void *)(v9 + 64);
  int v47 = (void *)(v9 + 64);
  if (v12 < 64) {
    uint64_t v14 = ~(-1 << v12);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v13;
  int64_t v46 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v48 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v53 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v16 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v18 = 0;
  uint64_t v49 = v6;
  uint64_t v50 = v9;
  uint64_t v57 = v5;
  uint64_t v51 = v11;
  while (1)
  {
    if (v15)
    {
      unint64_t v21 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v22 = v21 | (v18 << 6);
      goto LABEL_22;
    }
    int64_t v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v46) {
      break;
    }
    int64_t v24 = v47;
    unint64_t v25 = v47[v23];
    ++v18;
    if (!v25)
    {
      int64_t v18 = v23 + 1;
      if (v23 + 1 >= v46) {
        goto LABEL_34;
      }
      unint64_t v25 = v47[v18];
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v46)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v45;
          if ((v52 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v25 = v47[v26];
        if (!v25)
        {
          while (1)
          {
            int64_t v18 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_43;
            }
            if (v18 >= v46) {
              goto LABEL_34;
            }
            unint64_t v25 = v47[v18];
            ++v26;
            if (v25) {
              goto LABEL_21;
            }
          }
        }
        int64_t v18 = v26;
      }
    }
LABEL_21:
    unint64_t v15 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_22:
    uint64_t v27 = *(void *)(v6 + 72);
    unint64_t v28 = *(void *)(v9 + 48) + v27 * v22;
    int64_t v55 = v18;
    if (v52)
    {
      (*v53)(v56, v28, v57);
      unint64_t v29 = (uint64_t *)(*(void *)(v9 + 56) + 32 * v22);
      uint64_t v30 = v29[1];
      uint64_t v54 = *v29;
      unint64_t v32 = (void *)v29[2];
      uint64_t v31 = (void *)v29[3];
    }
    else
    {
      (*v48)(v56, v28, v57);
      uint64_t v33 = (uint64_t *)(*(void *)(v9 + 56) + 32 * v22);
      uint64_t v30 = v33[1];
      unint64_t v32 = (void *)v33[2];
      uint64_t v31 = (void *)v33[3];
      uint64_t v54 = *v33;
      swift_errorRetain();
      id v34 = v31;
      swift_bridgeObjectRetain();
      id v35 = v32;
    }
    uint64_t v11 = v51;
    sub_100066BC8(&qword_100103AB8, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t result = sub_1000B7520();
    uint64_t v36 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v37 = result & ~v36;
    unint64_t v38 = v37 >> 6;
    if (((-1 << v37) & ~*(void *)(v16 + 8 * (v37 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v37) & ~*(void *)(v16 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v39 = 0;
      unint64_t v40 = (unint64_t)(63 - v36) >> 6;
      do
      {
        if (++v38 == v40 && (v39 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v41 = v38 == v40;
        if (v38 == v40) {
          unint64_t v38 = 0;
        }
        v39 |= v41;
        uint64_t v42 = *(void *)(v16 + 8 * v38);
      }
      while (v42 == -1);
      unint64_t v19 = __clz(__rbit64(~v42)) + (v38 << 6);
    }
    *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v53)(*(void *)(v11 + 48) + v27 * v19, v56, v57);
    int64_t v20 = (void *)(*(void *)(v11 + 56) + 32 * v19);
    int64_t v18 = v55;
    *int64_t v20 = v54;
    v20[1] = v30;
    void v20[2] = v32;
    v20[3] = v31;
    ++*(void *)(v11 + 16);
    uint64_t v6 = v49;
    uint64_t v9 = v50;
  }
  swift_release();
  uint64_t v3 = v45;
  int64_t v24 = v47;
  if ((v52 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v43 = 1 << *(unsigned char *)(v9 + 32);
  if (v43 >= 64) {
    bzero(v24, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v24 = -1 << v43;
  }
  *(void *)(v9 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v11;
  return result;
}

unint64_t sub_1000645C0(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1000B7A30();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v10 = *(void **)(*(void *)(a2 + 48) + 8 * v6);
        sub_1000B75B0();
        sub_1000B7E40();
        id v11 = v10;
        sub_1000B7620();
        Swift::Int v12 = sub_1000B7E70();

        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8) {
            goto LABEL_5;
          }
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          uint64_t v14 = *(void *)(a2 + 48);
          unint64_t v15 = (void *)(v14 + 8 * v3);
          uint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || v15 >= v16 + 1) {
            void *v15 = *v16;
          }
          uint64_t v17 = *(void *)(a2 + 56);
          int64_t v18 = (_OWORD *)(v17 + 32 * v3);
          unint64_t v19 = (_OWORD *)(v17 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v18 >= v19 + 2))
          {
            long long v9 = v19[1];
            _OWORD *v18 = *v19;
            v18[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  *int64_t v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1000647B4(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000B6F10();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = __chkstk_darwin(v4);
  unint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v35 = a2 + 64;
    unint64_t result = sub_1000B7A30();
    uint64_t v12 = v35;
    if ((*(void *)(v35 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v32 = (result + 1) & v11;
      uint64_t v33 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v34 = v5 + 16;
      unint64_t v13 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
      uint64_t v14 = *(void *)(v5 + 72);
      do
      {
        uint64_t v15 = v14;
        int64_t v16 = v14 * v10;
        v33(v8, *(void *)(a2 + 48) + v14 * v10, v4);
        sub_100066BC8(&qword_100103AB8, (void (*)(uint64_t))&type metadata accessor for URL);
        uint64_t v17 = sub_1000B7520();
        unint64_t result = (*v13)(v8, v4);
        unint64_t v18 = v17 & v11;
        if (a1 >= (uint64_t)v32)
        {
          if (v18 >= v32 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            uint64_t v21 = *(void *)(a2 + 48);
            uint64_t v14 = v15;
            unint64_t result = v21 + v15 * a1;
            if (v15 * a1 < v16 || result >= v21 + v16 + v15)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v22 = *(void *)(a2 + 56);
            uint64_t v23 = (_OWORD *)(v22 + 32 * a1);
            BOOL v24 = (_OWORD *)(v22 + 32 * v10);
            uint64_t v12 = v35;
            if (a1 != v10 || (a1 = v10, v23 >= v24 + 2))
            {
              long long v25 = v24[1];
              _OWORD *v23 = *v24;
              v23[1] = v25;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v32 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v35;
        uint64_t v14 = v15;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v12 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    int64_t v26 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v27 = *v26;
    uint64_t v28 = (-1 << a1) - 1;
  }
  else
  {
    int64_t v26 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v28 = *v26;
    uint64_t v27 = (-1 << a1) - 1;
  }
  *int64_t v26 = v28 & v27;
  uint64_t v29 = *(void *)(a2 + 16);
  BOOL v30 = __OFSUB__(v29, 1);
  uint64_t v31 = v29 - 1;
  if (v30)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v31;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_100064AAC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6)
{
  a6[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v12 = a6[6];
  uint64_t v13 = sub_100032E20(&qword_100104330);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v12 + *(void *)(*(void *)(v13 - 8) + 72) * a1, a2, v13);
  uint64_t v15 = a6[7] + 24 * a1;
  *(void *)uint64_t v15 = a3;
  *(void *)(v15 + 8) = a4;
  *(unsigned char *)(v15 + 16) = a5;
  uint64_t v16 = a6[2];
  BOOL v17 = __OFADD__(v16, 1);
  uint64_t v18 = v16 + 1;
  if (v17) {
    __break(1u);
  }
  else {
    a6[2] = v18;
  }
  return result;
}

_OWORD *sub_100064B84(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t result = sub_100032FB8(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

uint64_t sub_100064BEC(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_1000B6F10();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

uint64_t sub_100064CA4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  a7[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v14 = a7[6];
  uint64_t v15 = sub_1000B6F10();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v14 + *(void *)(*(void *)(v15 - 8) + 72) * a1, a2, v15);
  BOOL v17 = (void *)(a7[7] + 32 * a1);
  *BOOL v17 = a3;
  v17[1] = a4;
  v17[2] = a5;
  v17[3] = a6;
  uint64_t v18 = a7[2];
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19) {
    __break(1u);
  }
  else {
    a7[2] = v20;
  }
  return result;
}

char *sub_100064D78()
{
  uint64_t v40 = sub_100032E20(&qword_100104330);
  uint64_t v1 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  char v39 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100032E20(&qword_100103730);
  uint64_t v34 = v0;
  uint64_t v3 = *v0;
  uint64_t v4 = sub_1000B7BB0();
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v42 = v4;
  if (!v5)
  {
    uint64_t result = (char *)swift_release();
    uint64_t v32 = v42;
    uint64_t v31 = v34;
LABEL_25:
    uint64_t *v31 = v32;
    return result;
  }
  uint64_t v6 = v4;
  uint64_t result = (char *)(v4 + 64);
  uint64_t v8 = (char *)(v3 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  uint64_t v35 = v3 + 64;
  if (v6 != v3 || result >= &v8[8 * v9])
  {
    uint64_t result = (char *)memmove(result, v8, 8 * v9);
    uint64_t v6 = v42;
  }
  int64_t v10 = 0;
  *(void *)(v6 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v41 = v3;
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  uint64_t v38 = v1 + 16;
  int64_t v36 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v37 = v1 + 32;
  uint64_t v15 = v39;
  uint64_t v14 = v40;
  uint64_t v16 = v42;
  while (1)
  {
    if (v13)
    {
      unint64_t v17 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v18 = v17 | (v10 << 6);
      uint64_t v19 = v41;
      goto LABEL_9;
    }
    int64_t v28 = v10 + 1;
    uint64_t v19 = v41;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v28 >= v36) {
      goto LABEL_23;
    }
    unint64_t v29 = *(void *)(v35 + 8 * v28);
    ++v10;
    if (!v29)
    {
      int64_t v10 = v28 + 1;
      if (v28 + 1 >= v36) {
        goto LABEL_23;
      }
      unint64_t v29 = *(void *)(v35 + 8 * v10);
      if (!v29) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v29 - 1) & v29;
    unint64_t v18 = __clz(__rbit64(v29)) + (v10 << 6);
LABEL_9:
    unint64_t v20 = *(void *)(v1 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v15, *(void *)(v19 + 48) + v20, v14);
    uint64_t v21 = *(void *)(v19 + 56);
    uint64_t v22 = 24 * v18;
    uint64_t v23 = v21 + 24 * v18;
    BOOL v24 = *(void **)v23;
    uint64_t v25 = *(void *)(v23 + 8);
    unint64_t v26 = *(void *)(v16 + 48) + v20;
    LOBYTE(v20) = *(unsigned char *)(v23 + 16);
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(v26, v15, v14);
    uint64_t v27 = *(void *)(v16 + 56) + v22;
    *(void *)uint64_t v27 = v24;
    *(void *)(v27 + 8) = v25;
    *(unsigned char *)(v27 + 16) = v20;
    uint64_t result = (char *)sub_100037F24(v24, v25, v20);
  }
  int64_t v30 = v28 + 2;
  if (v30 >= v36)
  {
LABEL_23:
    uint64_t result = (char *)swift_release();
    uint64_t v31 = v34;
    uint64_t v32 = v42;
    goto LABEL_25;
  }
  unint64_t v29 = *(void *)(v35 + 8 * v30);
  if (v29)
  {
    int64_t v10 = v30;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v10 >= v36) {
      goto LABEL_23;
    }
    unint64_t v29 = *(void *)(v35 + 8 * v10);
    ++v30;
    if (v29) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_100065068()
{
  uint64_t v1 = v0;
  sub_100032E20(&qword_100103AF0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1000B7BB0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    unint64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_10006521C()
{
  uint64_t v1 = v0;
  sub_100032E20(&qword_100103738);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1000B7BB0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 32 * v15;
    sub_100032E64(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    sub_100032FB8(v22, (_OWORD *)(*(void *)(v4 + 56) + v18));
    id result = v17;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1000653E4()
{
  uint64_t v1 = sub_1000B6F10();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100032E20(&qword_100103760);
  unint64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1000B7BB0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t *v23 = v7;
    return result;
  }
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v24 = v5 + 64;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  uint64_t v27 = v2 + 16;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
    id result = (void *)swift_errorRetain();
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_10006567C()
{
  uint64_t v38 = sub_1000B7030();
  uint64_t v1 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v37 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100032E20(&qword_100103750);
  uint64_t v32 = v0;
  uint64_t v3 = *v0;
  uint64_t v4 = sub_1000B7BB0();
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v40 = v4;
  if (!v5)
  {
    id result = (void *)swift_release();
    uint64_t v30 = v40;
    unint64_t v29 = v32;
LABEL_25:
    uint64_t *v29 = v30;
    return result;
  }
  uint64_t v6 = v4;
  id result = (void *)(v4 + 64);
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  if (v6 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
  {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
    uint64_t v6 = v40;
  }
  int64_t v9 = 0;
  *(void *)(v6 + 16) = *(void *)(v3 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v39 = v3;
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v3 + 64);
  uint64_t v33 = v3 + 64;
  int64_t v34 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v35 = v1 + 32;
  uint64_t v36 = v1 + 16;
  unint64_t v14 = v37;
  uint64_t v13 = v38;
  uint64_t v15 = v40;
  while (1)
  {
    if (v12)
    {
      unint64_t v16 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v17 = v16 | (v9 << 6);
      uint64_t v18 = v39;
      goto LABEL_9;
    }
    int64_t v26 = v9 + 1;
    uint64_t v18 = v39;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v26 >= v34) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v34) {
        goto LABEL_23;
      }
      unint64_t v27 = *(void *)(v33 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_22:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v17 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_9:
    unint64_t v19 = *(void *)(v1 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v14, *(void *)(v18 + 48) + v19, v13);
    uint64_t v20 = *(void *)(v18 + 56);
    uint64_t v21 = 16 * v17;
    uint64_t v22 = (uint64_t *)(v20 + 16 * v17);
    uint64_t v23 = *v22;
    uint64_t v24 = v22[1];
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(void *)(v15 + 48) + v19, v14, v13);
    int64_t v25 = (void *)(*(void *)(v15 + 56) + v21);
    *int64_t v25 = v23;
    v25[1] = v24;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v34)
  {
LABEL_23:
    id result = (void *)swift_release();
    unint64_t v29 = v32;
    uint64_t v30 = v40;
    goto LABEL_25;
  }
  unint64_t v27 = *(void *)(v33 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v34) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

char *sub_100065954()
{
  uint64_t v40 = sub_1000B6F10();
  uint64_t v42 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v39 = (char *)&v34 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100032E20(&qword_100104300);
  int64_t v34 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1000B7BB0();
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v43 = v3;
  if (!v4)
  {
    id result = (char *)swift_release();
    uint64_t v33 = v43;
    uint64_t v32 = v34;
LABEL_25:
    uint64_t *v32 = v33;
    return result;
  }
  uint64_t v5 = v3;
  id result = (char *)(v3 + 64);
  uint64_t v7 = (char *)(v2 + 64);
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  uint64_t v35 = v2 + 64;
  if (v5 != v2 || result >= &v7[8 * v8])
  {
    id result = (char *)memmove(result, v7, 8 * v8);
    uint64_t v5 = v43;
  }
  int64_t v9 = 0;
  *(void *)(v5 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v41 = v2;
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  uint64_t v13 = v43;
  uint64_t v38 = v42 + 16;
  int64_t v36 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v37 = v42 + 32;
  uint64_t v14 = v42;
  uint64_t v15 = v39;
  uint64_t v16 = v40;
  while (1)
  {
    if (v12)
    {
      uint64_t v44 = (v12 - 1) & v12;
      int64_t v45 = v9;
      unint64_t v17 = __clz(__rbit64(v12)) | (v9 << 6);
      uint64_t v18 = v41;
      goto LABEL_9;
    }
    int64_t v28 = v9 + 1;
    uint64_t v18 = v41;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v28 >= v36) {
      goto LABEL_23;
    }
    unint64_t v29 = *(void *)(v35 + 8 * v28);
    int64_t v30 = v9 + 1;
    if (!v29)
    {
      int64_t v30 = v9 + 2;
      if (v9 + 2 >= v36) {
        goto LABEL_23;
      }
      unint64_t v29 = *(void *)(v35 + 8 * v30);
      if (!v29) {
        break;
      }
    }
LABEL_22:
    uint64_t v44 = (v29 - 1) & v29;
    int64_t v45 = v30;
    unint64_t v17 = __clz(__rbit64(v29)) + (v30 << 6);
LABEL_9:
    unint64_t v19 = *(void *)(v14 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v15, *(void *)(v18 + 48) + v19, v16);
    uint64_t v20 = 32 * v17;
    uint64_t v21 = (uint64_t *)(*(void *)(v18 + 56) + 32 * v17);
    uint64_t v22 = *v21;
    uint64_t v23 = v21[1];
    uint64_t v24 = (void *)v21[2];
    int64_t v25 = (void *)v21[3];
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(*(void *)(v13 + 48) + v19, v15, v16);
    int64_t v26 = (void *)(*(void *)(v13 + 56) + v20);
    *int64_t v26 = v22;
    v26[1] = v23;
    v26[2] = v24;
    v26[3] = v25;
    swift_errorRetain();
    id v27 = v25;
    swift_bridgeObjectRetain();
    id result = v24;
    unint64_t v12 = v44;
    int64_t v9 = v45;
  }
  uint64_t v31 = v9 + 3;
  if (v9 + 3 >= v36)
  {
LABEL_23:
    id result = (char *)swift_release();
    uint64_t v32 = v34;
    uint64_t v33 = v43;
    goto LABEL_25;
  }
  unint64_t v29 = *(void *)(v35 + 8 * v31);
  if (v29)
  {
    int64_t v30 = v9 + 3;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v30 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v30 >= v36) {
      goto LABEL_23;
    }
    unint64_t v29 = *(void *)(v35 + 8 * v30);
    ++v31;
    if (v29) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void sub_100065C60(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  if (a2)
  {
    swift_errorRetain();
    id v5 = a4;
    swift_bridgeObjectRetain();
    id v6 = a3;
  }
}

uint64_t sub_100065CBC()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

id sub_100065CF4()
{
  uint64_t v1 = (void *)(*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();

  return v1;
}

uint64_t sub_100065D2C()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

void sub_100065D40()
{
  uint64_t v1 = *(void *)(v0 + 16);
  id v2 = (id)sub_1000B6E20();
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

uint64_t sub_100065D98()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

const char *sub_100065DA8()
{
  return "completedUnitCount";
}

id sub_100065DB4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 completedUnitCount];
  *a2 = result;
  return result;
}

id sub_100065DE8(void *a1, id *a2)
{
  return [*a2 setCompletedUnitCount:*a1];
}

uint64_t sub_100065DFC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100065E34()
{
  return (*(uint64_t (**)(void))(v0 + 16))(0);
}

uint64_t sub_100065E60()
{
  uint64_t v1 = sub_1000B6F10();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;

  swift_errorRelease();
  swift_bridgeObjectRelease();

  (*(void (**)(char *, uint64_t))(v2 + 8))((char *)v0 + v4, v1);
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v6 + 16, v5);
}

void sub_100065F9C()
{
  uint64_t v1 = *(void *)(sub_1000B6F10() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_100061C50(*(void *)(v0 + 32), v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v0 + v3), *(void *)(v0 + v3 + 8), *(void *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8) + 8), *(void (**)(void))(v0 + ((((v3 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_100066054(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100066064()
{
  return swift_release();
}

void sub_10006606C()
{
  sub_1000621BC(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void **)(v0 + 56));
}

void (*sub_100066090(void *a1, uint64_t a2))(uint64_t a1)
{
  uint64_t v4 = malloc(0x68uLL);
  *a1 = v4;
  uint64_t v5 = sub_1000B6F10();
  v4[8] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = v6;
  v4[9] = v6;
  unint64_t v8 = malloc(*(void *)(v6 + 64));
  v4[10] = v8;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  (*(void (**)(void *, uint64_t, uint64_t))(v7 + 16))(v8, a2, v5);
  v4[11] = sub_1000663E0(v4);
  v4[12] = sub_100066248(v4 + 4, (uint64_t)v8, isUniquelyReferenced_nonNull_native);
  return sub_1000661B0;
}

void sub_1000661B0(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 88);
  uint64_t v4 = *(void *)(*(void *)a1 + 72);
  unint64_t v3 = *(void **)(*(void *)a1 + 80);
  uint64_t v5 = *(void *)(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 96))();
  (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v5);
  v2(v1, 0);
  free(v3);

  free(v1);
}

void (*sub_100066248(void *a1, uint64_t a2, char a3))(uint64_t **a1)
{
  uint64_t v4 = v3;
  unint64_t v8 = malloc(0x40uLL);
  *a1 = v8;
  void v8[4] = a2;
  v8[5] = v3;
  uint64_t v9 = *v3;
  unint64_t v11 = sub_10006A0A8(a2);
  *((unsigned char *)v8 + 56) = v10 & 1;
  uint64_t v12 = *(void *)(v9 + 16);
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    char v15 = v10;
    uint64_t v16 = *(void *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      void v8[6] = v11;
      if (v15)
      {
LABEL_8:
        uint64_t v17 = *(void *)(*v4 + 56) + 32 * v11;
        uint64_t v18 = *(void *)v17;
        uint64_t v19 = *(void *)(v17 + 8);
        long long v20 = *(_OWORD *)(v17 + 16);
LABEL_12:
        void *v8 = v18;
        v8[1] = v19;
        *((_OWORD *)v8 + 1) = v20;
        return sub_10006638C;
      }
LABEL_11:
      uint64_t v18 = 0;
      uint64_t v19 = 0;
      long long v20 = 0uLL;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_100065954();
      goto LABEL_7;
    }
    sub_100064150(v14, a3 & 1);
    unint64_t v21 = sub_10006A0A8(a2);
    if ((v15 & 1) == (v22 & 1))
    {
      unint64_t v11 = v21;
      void v8[6] = v21;
      if (v15) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  sub_1000B6F10();
  id result = (void (*)(uint64_t **))sub_1000B7DF0();
  __break(1u);
  return result;
}

void sub_10006638C(uint64_t **a1)
{
  uint64_t v1 = *a1;
  sub_10006641C(*a1, *((unsigned char *)*a1 + 56), (uint64_t *)(*a1)[5], (*a1)[6], (*a1)[4]);
  sub_100062DC8(*v1, v1[1], (void *)v1[2], (void *)v1[3]);

  free(v1);
}

uint64_t (*sub_1000663E0(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_100066410;
}

uint64_t sub_100066410(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

void sub_10006641C(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_1000B6F10();
  __chkstk_darwin(v10);
  BOOL v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *a1;
  uint64_t v14 = a1[1];
  uint64_t v16 = (void *)a1[2];
  uint64_t v17 = (void *)a1[3];
  if (v14)
  {
    uint64_t v18 = (void *)*a3;
    if (a2)
    {
      uint64_t v19 = (uint64_t *)(v18[7] + 32 * a4);
      *uint64_t v19 = v15;
      v19[1] = v14;
      v19[2] = (uint64_t)v16;
      v19[3] = (uint64_t)v17;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v11 + 16))(v13, a5);
      sub_100064CA4(a4, (uint64_t)v13, v15, v14, (uint64_t)v16, (uint64_t)v17, v18);
    }
  }
  else if (a2)
  {
    swift_arrayDestroy();
    sub_1000647B4(a4, *a3);
  }
  sub_100065C60(v15, v14, v16, v17);
}

uint64_t sub_100066588()
{
  uint64_t v1 = sub_1000B6F10();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_100066674()
{
  uint64_t v1 = *(void *)(sub_1000B6F10() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = (char *)(v0 + v2);
  uint64_t v5 = v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = *(uint64_t (**)(void))v5;
  uint64_t v7 = *(void *)(v5 + 8);

  return sub_100060694(v3, v4, v6, v7);
}

uint64_t sub_100066708()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100066718()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

id sub_100066740(void *a1)
{
  int64_t v30 = a1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = sub_1000B73B0();
  uint64_t v28 = *(void *)(v2 - 8);
  uint64_t v29 = v2;
  __chkstk_darwin(v2);
  id v27 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000B78A0();
  uint64_t v25 = *(void *)(v4 - 8);
  uint64_t v26 = v4;
  __chkstk_darwin(v4);
  unint64_t v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000B7890();
  __chkstk_darwin(v7);
  uint64_t v8 = sub_1000B74C0();
  __chkstk_darwin(v8 - 8);
  uint64_t v24 = OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension29ICArchiveImportNoteFileParser_queue;
  v23[2] = sub_100038DC8(0, &qword_100104328);
  uint64_t v33 = (void *)sub_100032E20(&qword_100104338);
  uint64_t v9 = v1;
  sub_100032E20(&qword_100104340);
  sub_1000B75F0();
  sub_1000B74B0();
  uint64_t v33 = _swiftEmptyArrayStorage;
  sub_100066BC8(&qword_100104348, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100032E20(&qword_100104350);
  sub_100038F84(&qword_100104358, &qword_100104350);
  sub_1000B7A20();
  (*(void (**)(char *, void, uint64_t))(v25 + 104))(v6, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v26);
  *(void *)(v23[1] + v24) = sub_1000B78D0();
  id v10 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v11 = sub_1000B7580();
  id v12 = [v10 initWithSuiteName:v11];

  if (!v12) {
    id v12 = [self standardUserDefaults];
  }
  *(void *)&v9[OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension29ICArchiveImportNoteFileParser_userDefaults] = v12;
  uint64_t v13 = OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension29ICArchiveImportNoteFileParser_allowedContentTypes;
  sub_100032E20((uint64_t *)&unk_100104360);
  uint64_t v14 = v28;
  unint64_t v15 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1000CD1B0;
  id v17 = [self universalTypeIdentifier];
  uint64_t v18 = v27;
  sub_1000B73A0();

  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v16 + v15, v18, v29);
  *(void *)&v9[v13] = v16;
  uint64_t v19 = OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension29ICArchiveImportNoteFileParser_importStates;
  *(void *)&v9[v19] = sub_10003208C((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v20 = v30;
  *(void *)&v9[OBJC_IVAR____TtC38com_apple_mobilenotes_SharingExtension29ICArchiveImportNoteFileParser_archiveImporter] = v30;
  id v21 = v20;

  v32.receiver = v9;
  v32.super_class = ObjectType;
  return [super init];
}

uint64_t sub_100066BC8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t ICArchivePreviewer.__allocating_init(forArchiveAt:)(char *a1)
{
  uint64_t v2 = swift_allocObject();
  ICArchivePreviewer.init(forArchiveAt:)(a1);
  return v2;
}

id ICArchivePreviewer.startPreviewing(_:completion:)(uint64_t a1, void (*a2)(void *, uint64_t), void *a3)
{
  uint64_t v4 = v3;
  id v77 = a2;
  id v78 = a3;
  uint64_t v6 = sub_1000B6F10();
  uint64_t v75 = *(void *)(v6 - 8);
  uint64_t v76 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100032E20(&qword_100104330);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v73 = (char *)&v72 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v72 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v72 - v19;
  uint64_t v74 = v3 + 24;
  swift_beginAccess();
  uint64_t v21 = *(void *)(v3 + 24);
  if (*(void *)(v21 + 16) && (unint64_t v22 = sub_10006A17C(a1), (v23 & 1) != 0))
  {
    uint64_t v76 = v10;
    uint64_t v24 = *(void *)(v21 + 56) + 24 * v22;
    uint64_t v26 = *(void **)v24;
    uint64_t v25 = *(void **)(v24 + 8);
    uint64_t v27 = *(unsigned __int8 *)(v24 + 16);
    swift_endAccess();
    uint64_t v28 = v27;
    uint64_t v29 = a1;
    switch(v28)
    {
      case 1:
        uint64_t v48 = self;
        id v49 = v26;
        id v32 = [v48 progressWithTotalUnitCount:1];
        [v32 setCompletedUnitCount:[v32 totalUnitCount]];
        id v50 = v49;
        v77(v26, 0);
        sub_10006B028(v26, (uint64_t)v25, 1);
        sub_10006B028(v26, (uint64_t)v25, 1);
        return v32;
      case 2:
        swift_errorRetain();
        v77(v26, 1);
        id v32 = [objc_allocWithZone((Class)NSProgress) init];
        sub_10006B028(v26, (uint64_t)v25, 2);
        return v32;
      case 3:
        id v51 = [self progressWithTotalUnitCount:1];
        uint64_t v52 = v76;
        uint64_t v53 = *(void (**)(char *, uint64_t, uint64_t))(v76 + 16);
        uint64_t v75 = v76 + 16;
        v53(v18, v29, v9);
        sub_100032E20(&qword_100103990);
        uint64_t v54 = v29;
        uint64_t v55 = swift_allocObject();
        *(_OWORD *)(v55 + 16) = xmmword_1000CD1B0;
        uint64_t v56 = swift_allocObject();
        id v57 = v78;
        *(void *)(v56 + 16) = v77;
        *(void *)(v56 + 24) = v57;
        *(void *)(v55 + 32) = sub_10006A24C;
        *(void *)(v55 + 40) = v56;
        swift_beginAccess();
        swift_retain();
        id v78 = v51;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v80 = *(void *)(v4 + 24);
        *(void *)(v4 + 24) = 0x8000000000000000;
        sub_10006AE2C((uint64_t)v51, v55, 0, (uint64_t)v18, isUniquelyReferenced_nonNull_native);
        *(void *)(v4 + 24) = v80;
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v52 + 8))(v18, v9);
        swift_endAccess();
        v53(v18, v54, v9);
        uint64_t v59 = *(unsigned __int8 *)(v52 + 80);
        uint64_t v72 = v59 | 7;
        uint64_t v60 = swift_allocObject();
        uint64_t v74 = v60;
        *(void *)(v60 + 16) = v4;
        uint64_t v61 = *(void (**)(uint64_t, char *, uint64_t))(v52 + 32);
        v61(v60 + ((v59 + 24) & ~v59), v18, v9);
        id v77 = *(void (**)(void *, uint64_t))(v4 + 16);
        unint64_t v62 = v73;
        v53(v73, v54, v9);
        uint64_t v63 = (v59 + 16) & ~v59;
        unint64_t v64 = (v11 + v63 + 7) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v65 = (v64 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v66 = swift_allocObject();
        v61(v66 + v63, v62, v9);
        id v67 = v78;
        *(void *)(v66 + v64) = v78;
        *(void *)(v66 + v65) = v4;
        uint64_t v68 = (void *)(v66 + ((v65 + 15) & 0xFFFFFFFFFFFFFFF8));
        uint64_t v69 = v74;
        *uint64_t v68 = sub_10006B004;
        v68[1] = v69;
        aBlock[4] = (uint64_t)sub_10006B00C;
        aBlock[5] = v66;
        aBlock[0] = (uint64_t)_NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_1000699E8;
        void aBlock[3] = (uint64_t)&unk_1000F0688;
        uint64_t v70 = _Block_copy(aBlock);
        swift_retain_n();
        id v71 = v67;
        swift_retain();
        swift_release();
        [v77 performBackgroundTask:v70];
        _Block_release(v70);
        swift_release();
        id result = v71;
        break;
      default:
        (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v20, a1, v9);
        uint64_t v30 = swift_allocObject();
        id v31 = v78;
        *(void *)(v30 + 16) = v77;
        *(void *)(v30 + 24) = v31;
        sub_100037F24(v26, (uint64_t)v25, 0);
        id v32 = v26;
        swift_retain();
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v25 = sub_100035548(0, v25[2] + 1, 1, v25);
        }
        unint64_t v34 = v25[2];
        unint64_t v33 = v25[3];
        if (v34 >= v33 >> 1) {
          uint64_t v25 = sub_100035548((void *)(v33 > 1), v34 + 1, 1, v25);
        }
        void v25[2] = v34 + 1;
        uint64_t v35 = &v25[2 * v34];
        v35[4] = sub_10006A24C;
        v35[5] = v30;
        swift_release();
        int64_t v36 = (uint64_t *)v74;
        swift_beginAccess();
        char v37 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v80 = *v36;
        uint64_t *v36 = 0x8000000000000000;
        sub_10006AE2C((uint64_t)v26, (uint64_t)v25, 0, (uint64_t)v20, v37);
        uint64_t *v36 = v80;
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v76 + 8))(v20, v9);
        swift_endAccess();
        return v32;
    }
  }
  else
  {
    swift_endAccess();
    if (qword_1001036A8 != -1) {
      swift_once();
    }
    uint64_t v38 = sub_1000B7490();
    sub_100038E8C(v38, (uint64_t)qword_100104410);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a1, v9);
    uint64_t v39 = sub_1000B7480();
    os_log_type_t v40 = sub_1000B7860();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      uint64_t v74 = swift_slowAlloc();
      aBlock[0] = v74;
      *(_DWORD *)uint64_t v41 = 136315138;
      uint64_t v73 = (char *)(v41 + 4);
      sub_1000B7140();
      sub_10006CC70(&qword_100103B08, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v42 = v76;
      uint64_t v43 = sub_1000B7D80();
      uint64_t v72 = v9;
      unint64_t v45 = v44;
      (*(void (**)(char *, uint64_t))(v75 + 8))(v8, v42);
      uint64_t v80 = sub_100069A50(v43, v45, aBlock);
      sub_1000B79F0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v72);
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "Object to be previewed does not exist {url: %s}", v41, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    }

    sub_100038EC4();
    swift_allocError();
    *int64_t v46 = 4;
    ((void (*)(void))v77)();
    swift_errorRelease();
    return [objc_allocWithZone((Class)NSProgress) init];
  }
  return result;
}

void ICArchivePreviewer.stopPreviewing(_:)(uint64_t a1)
{
  uint64_t v3 = sub_1000B6F10();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100032E20(&qword_100104330);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v44 - v12;
  uint64_t v14 = (uint64_t *)(v1 + 24);
  swift_beginAccess();
  uint64_t v15 = *(void *)(v1 + 24);
  if (*(void *)(v15 + 16))
  {
    unint64_t v16 = sub_10006A17C(a1);
    if (v17)
    {
      uint64_t v18 = *(void *)(v15 + 56) + 24 * v16;
      uint64_t v20 = *(void **)v18;
      uint64_t v19 = *(void *)(v18 + 8);
      uint64_t v21 = *(unsigned __int8 *)(v18 + 16);
      swift_endAccess();
      switch(v21)
      {
        case 1:
          [v20 setMarkedForDeletion:1];
          (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v13, a1, v7);
          swift_beginAccess();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v53 = *v14;
          uint64_t *v14 = 0x8000000000000000;
          sub_10006AE2C(0, 0, 3, (uint64_t)v13, isUniquelyReferenced_nonNull_native);
          uint64_t *v14 = v53;
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
          swift_endAccess();
          sub_10006B028(v20, v19, 1);
          return;
        case 2:
          (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v13, a1, v7);
          swift_beginAccess();
          char v41 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v53 = *v14;
          uint64_t *v14 = 0x8000000000000000;
          uint64_t v42 = 0;
          uint64_t v43 = 0;
          goto LABEL_19;
        case 3:
          (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v13, a1, v7);
          swift_beginAccess();
          char v41 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v53 = *v14;
          uint64_t *v14 = 0x8000000000000000;
          uint64_t v42 = (uint64_t)v20;
          uint64_t v43 = v19;
LABEL_19:
          sub_10006AE2C(v42, v43, 3, (uint64_t)v13, v41);
          uint64_t *v14 = v53;
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
          goto LABEL_14;
        default:
          id v22 = v20;
          swift_bridgeObjectRetain();
          [v22 cancel];
          (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v13, a1, v7);
          swift_beginAccess();
          char v23 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v53 = *v14;
          uint64_t *v14 = 0x8000000000000000;
          sub_10006AE2C(0, 0, 3, (uint64_t)v13, v23);
          uint64_t *v14 = v53;
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
          swift_endAccess();
          sub_1000B75B0();
          id v24 = objc_allocWithZone((Class)NSError);
          NSString v25 = sub_1000B7580();
          swift_bridgeObjectRelease();
          id v26 = [v24 initWithDomain:v25 code:3072 userInfo:0];

          uint64_t v27 = *(void *)(v19 + 16);
          if (v27)
          {
            swift_bridgeObjectRetain();
            uint64_t v28 = v19 + 40;
            do
            {
              uint64_t v29 = *(void (**)(uint64_t *))(v28 - 8);
              uint64_t v54 = (uint64_t)v26;
              char v55 = 1;
              swift_retain();
              v29(&v54);
              swift_release();
              v28 += 16;
              --v27;
            }
            while (v27);

            swift_bridgeObjectRelease();
          }
          else
          {
          }
          swift_bridgeObjectRelease();
          return;
      }
    }
  }
  uint64_t v51 = v4;
  swift_endAccess();
  if (qword_1001036A8 != -1) {
    swift_once();
  }
  uint64_t v30 = sub_1000B7490();
  sub_100038E8C(v30, (uint64_t)qword_100104410);
  uint64_t v52 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v52(v11, a1, v7);
  id v31 = sub_1000B7480();
  os_log_type_t v32 = sub_1000B7860();
  int v50 = v32;
  if (os_log_type_enabled(v31, v32))
  {
    os_log_t v47 = v31;
    unint64_t v33 = (uint8_t *)swift_slowAlloc();
    uint64_t v46 = swift_slowAlloc();
    uint64_t v54 = v46;
    id v49 = v13;
    *(_DWORD *)unint64_t v33 = 136315138;
    v44[1] = v33 + 4;
    unint64_t v45 = v33;
    sub_1000B7140();
    sub_10006CC70(&qword_100103B08, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v34 = sub_1000B7D80();
    uint64_t v48 = a1;
    uint64_t v35 = v8;
    unint64_t v37 = v36;
    (*(void (**)(char *, uint64_t))(v51 + 8))(v6, v3);
    uint64_t v53 = sub_100069A50(v34, v37, &v54);
    uint64_t v13 = v49;
    sub_1000B79F0();
    swift_bridgeObjectRelease();
    uint64_t v38 = *(void (**)(char *, uint64_t))(v35 + 8);
    v38(v11, v7);
    id v31 = v47;
    a1 = v48;
    _os_log_impl((void *)&_mh_execute_header, v47, (os_log_type_t)v50, "Object to be previewed does not exist {url: %s}", v45, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v38 = *(void (**)(char *, uint64_t))(v8 + 8);
    v38(v11, v7);
  }

  v52(v13, a1, v7);
  swift_beginAccess();
  char v39 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v53 = *v14;
  uint64_t *v14 = 0x8000000000000000;
  sub_10006AE2C(0, 0, 3, (uint64_t)v13, v39);
  uint64_t *v14 = v53;
  swift_bridgeObjectRelease();
  v38(v13, v7);
LABEL_14:
  swift_endAccess();
}

uint64_t sub_100067E70()
{
  uint64_t v0 = sub_1000B7490();
  sub_100038F18(v0, qword_100104410);
  sub_100038E8C(v0, (uint64_t)qword_100104410);
  return sub_1000B7470();
}

uint64_t ICArchivePreviewer.init(forArchiveAt:)(char *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100032E20(&qword_100103728);
  uint64_t v71 = *(void *)(v4 - 8);
  uint64_t v72 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100032E20(&qword_100104330);
  uint64_t v74 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v1 + 24) = sub_100031A34((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v10 = (void *)(v1 + 24);
  id v11 = [self sharedContext];
  if (!v11
    || (uint64_t v12 = v11,
        id v13 = [v11 persistentContainer],
        v12,
        !v13))
  {
    if (qword_1001036A8 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_1000B7490();
    sub_100038E8C(v28, (uint64_t)qword_100104410);
    uint64_t v29 = sub_1000B7480();
    os_log_type_t v30 = sub_1000B7860();
    if (os_log_type_enabled(v29, v30))
    {
      id v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v31 = 0;
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "No shared note context has been set up", v31, 2u);
      swift_slowDealloc();
    }

    sub_1000B75B0();
    id v32 = objc_allocWithZone((Class)NSError);
    NSString v33 = sub_1000B7580();
    swift_bridgeObjectRelease();
    [v32 initWithDomain:v33 code:134060 userInfo:0];

    swift_willThrow();
    uint64_t v34 = sub_1000B6F10();
    (*(void (**)(char *, uint64_t))(*(void *)(v34 - 8) + 8))(a1, v34);
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
    return v2;
  }
  uint64_t v70 = v6;
  uint64_t v66 = v10;
  *(void *)(v2 + 16) = v13;
  id v14 = v13;
  uint64_t v68 = (char *)[v14 viewContext];
  uint64_t v15 = (objc_class *)type metadata accessor for ICArchiveImporter();
  id v16 = objc_allocWithZone(v15);
  id v17 = [self defaultManager];
  __int16 IsAlexandriaDemoModeEnabled = ICInternalSettingsIsAlexandriaDemoModeEnabled();
  id v67 = a1;
  __int16 v19 = IsAlexandriaDemoModeEnabled;
  int v20 = ICInternalSettingsIsAlexandriaDemoModeEnabled();
  uint64_t v21 = objc_allocWithZone(v15);
  if (v20) {
    __int16 v22 = 256;
  }
  else {
    __int16 v22 = 0;
  }
  char v23 = v67;
  id v24 = sub_10004496C(v68, v22 | v19, 0, 0, v17, v21, 0.0);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  NSString v25 = v69;
  id v26 = (char *)ICArchiveImporter.objects(forArchiveAt:)(v23);
  if (v25)
  {
    swift_release();

    uint64_t v27 = sub_1000B6F10();
    (*(void (**)(char *, uint64_t))(*(void *)(v27 - 8) + 8))(v23, v27);
    return v2;
  }
  id v62 = v24;
  id v63 = v14;
  uint64_t v64 = 0;
  uint64_t v73 = _swiftEmptyArrayStorage;
  uint64_t v36 = *((void *)v26 + 2);
  uint64_t v65 = v2;
  if (v36)
  {
    unint64_t v37 = *(void (**)(void, void, void))(v74 + 16);
    uint64_t v68 = v26;
    uint64_t v69 = v37;
    uint64_t v38 = &v26[(*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80)];
    uint64_t v39 = *(void *)(v74 + 72);
    os_log_type_t v40 = (void (**)(char *, uint64_t))(v74 + 8);
    swift_bridgeObjectRetain();
    do
    {
      v69(v9, v38, v7);
      uint64_t v41 = sub_1000B7150();
      (*v40)(v9, v7);
      sub_10006A430(v41);
      v38 += v39;
      --v36;
    }
    while (v36);
    swift_bridgeObjectRelease_n();
    uint64_t v42 = v73;
    uint64_t v2 = v65;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v42 = _swiftEmptyArrayStorage;
  }
  int64_t v43 = v42[2];
  uint64_t v44 = (uint64_t)v70;
  if (v43)
  {
    uint64_t v73 = _swiftEmptyArrayStorage;
    sub_100043794(0, v43, 0);
    unint64_t v45 = *(void (**)(void, void, void))(v74 + 16);
    uint64_t v46 = *(unsigned __int8 *)(v74 + 80);
    v61[1] = v42;
    os_log_t v47 = (char *)v42 + ((v46 + 32) & ~v46);
    uint64_t v68 = *(char **)(v74 + 72);
    uint64_t v69 = v45;
    v74 += 16;
    uint64_t v48 = (void (**)(char *, uint64_t))(v74 - 8);
    do
    {
      id v49 = (void (*)(uint64_t, char *, uint64_t))v69;
      v69(v9, v47, v7);
      uint64_t v50 = v44 + *(int *)(v72 + 48);
      v49(v44, v9, v7);
      *(void *)uint64_t v50 = 0;
      *(void *)(v50 + 8) = 0;
      *(unsigned char *)(v50 + 16) = 3;
      (*v48)(v9, v7);
      uint64_t v51 = v73;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100043794(0, v51[2] + 1, 1);
        uint64_t v51 = v73;
      }
      unint64_t v53 = v51[2];
      unint64_t v52 = v51[3];
      if (v53 >= v52 >> 1)
      {
        sub_100043794(v52 > 1, v53 + 1, 1);
        uint64_t v51 = v73;
      }
      v51[2] = v53 + 1;
      uint64_t v44 = (uint64_t)v70;
      sub_10006C0A0((uint64_t)v70, (uint64_t)v51+ ((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80))+ *(void *)(v71 + 72) * v53);
      os_log_t v47 = &v68[(void)v47];
      --v43;
    }
    while (v43);
    swift_bridgeObjectRelease();
    uint64_t v2 = v65;
    if (v51[2]) {
      goto LABEL_27;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    if (_swiftEmptyArrayStorage[2])
    {
LABEL_27:
      sub_100032E20(&qword_100103730);
      uint64_t v54 = (void *)sub_1000B7BD0();
      goto LABEL_30;
    }
  }
  uint64_t v54 = &_swiftEmptyDictionarySingleton;
LABEL_30:
  char v55 = v63;
  uint64_t v73 = v54;
  uint64_t v56 = swift_bridgeObjectRetain();
  uint64_t v57 = v64;
  sub_10006BB1C(v56, 1, &v73);
  if (!v57)
  {

    swift_bridgeObjectRelease();
    uint64_t v58 = v73;
    uint64_t v59 = sub_1000B6F10();
    (*(void (**)(char *, uint64_t))(*(void *)(v59 - 8) + 8))(v67, v59);
    uint64_t v60 = v66;
    swift_beginAccess();
    *uint64_t v60 = v58;
    swift_bridgeObjectRelease();
    return v2;
  }
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t ICArchivePreviewer.deinit()
{
  uint64_t v1 = sub_100032E20(&qword_100104330);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v0 + 24);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v18 = v5 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v6;
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v12 << 6);
      goto LABEL_5;
    }
    int64_t v15 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v15 >= v10) {
      goto LABEL_25;
    }
    unint64_t v16 = *(void *)(v18 + 8 * v15);
    ++v12;
    if (!v16)
    {
      int64_t v12 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_25;
      }
      unint64_t v16 = *(void *)(v18 + 8 * v12);
      if (!v16)
      {
        int64_t v12 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_25;
        }
        unint64_t v16 = *(void *)(v18 + 8 * v12);
        if (!v16)
        {
          int64_t v12 = v15 + 3;
          if (v15 + 3 >= v10) {
            goto LABEL_25;
          }
          unint64_t v16 = *(void *)(v18 + 8 * v12);
          if (!v16)
          {
            int64_t v12 = v15 + 4;
            if (v15 + 4 >= v10) {
              goto LABEL_25;
            }
            unint64_t v16 = *(void *)(v18 + 8 * v12);
            if (!v16) {
              break;
            }
          }
        }
      }
    }
LABEL_24:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v12 << 6);
LABEL_5:
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + *(void *)(v2 + 72) * v14, v1);
    ICArchivePreviewer.stopPreviewing(_:)((uint64_t)v4);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  int64_t v17 = v15 + 5;
  if (v17 >= v10)
  {
LABEL_25:
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    *(void *)(v0 + 24) = &_swiftEmptyDictionarySingleton;
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    return v0;
  }
  unint64_t v16 = *(void *)(v18 + 8 * v17);
  if (v16)
  {
    int64_t v12 = v17;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v10) {
      goto LABEL_25;
    }
    unint64_t v16 = *(void *)(v18 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_24;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t ICArchivePreviewer.__deallocating_deinit()
{
  ICArchivePreviewer.deinit();

  return swift_deallocClassInstance();
}

uint64_t ICArchivePreviewer.Errors.errorDescription.getter(uint64_t a1)
{
  if (a1)
  {
    uint64_t result = sub_1000B7DD0();
    __break(1u);
  }
  else
  {
    id v1 = [self mainBundle];
    NSString v2 = sub_1000B7580();
    id v3 = [v1 localizedStringForKey:v2 value:0 table:0];

    uint64_t v4 = sub_1000B75B0();
    return v4;
  }
  return result;
}

uint64_t ICArchivePreviewer.Errors.init(rawValue:)()
{
  return 0;
}

unint64_t static ICArchivePreviewer.Errors._nsErrorDomain.getter()
{
  return 0xD000000000000040;
}

uint64_t sub_100068A58(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_10006CBA8();

  return _BridgedNSError.hash(into:)(a1, a2, v4);
}

void *sub_100068AA4@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2 = *result != 0;
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_100068ABC()
{
  return ICArchivePreviewer.Errors.errorDescription.getter(*v0);
}

uint64_t sub_100068AC4(uint64_t a1)
{
  unint64_t v2 = sub_10006CBA8();

  return _BridgedNSError._domain.getter(a1, v2);
}

uint64_t sub_100068B00(uint64_t a1)
{
  unint64_t v2 = sub_10006CBA8();

  return _BridgedNSError._code.getter(a1, v2);
}

uint64_t sub_100068B3C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_10006CBA8();

  return _BridgedNSError.init(_bridgedNSError:)(a1, a2, v4);
}

uint64_t ICArchivePreviewer.objects.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_100068BC8(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1000B6F10();
  uint64_t v48 = *(void *)(v8 - 8);
  uint64_t v49 = v8;
  __chkstk_darwin(v8);
  os_log_t v47 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100032E20(&qword_100104330);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v51 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  int64_t v15 = (char *)&v45 - v14;
  unint64_t v16 = (uint64_t *)(a3 + 24);
  swift_beginAccess();
  uint64_t v17 = *(void *)(a3 + 24);
  if (*(void *)(v17 + 16) && (unint64_t v18 = sub_10006A17C(a4), (v19 & 1) != 0))
  {
    uint64_t v20 = *(void *)(v17 + 56) + 24 * v18;
    uint64_t v21 = *(void *)(v20 + 8);
    int v22 = *(unsigned __int8 *)(v20 + 16);
    unint64_t v52 = *(void **)v20;
    uint64_t v53 = v21;
    int v54 = v22;
    sub_100037F24(v52, v21, v22);
  }
  else
  {
    unint64_t v52 = 0;
    uint64_t v53 = 0;
    int v54 = 255;
  }
  swift_endAccess();
  char v23 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v50 = a4;
  v23(v15, a4, v10);
  swift_beginAccess();
  uint64_t v24 = v11;
  uint64_t v25 = v10;
  if (a2) {
    int v26 = 2;
  }
  else {
    int v26 = 1;
  }
  sub_10006CDC8(a1, a2 & 1);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v55 = *v16;
  uint64_t *v16 = 0x8000000000000000;
  sub_10006AE2C((uint64_t)a1, 0, v26, (uint64_t)v15, isUniquelyReferenced_nonNull_native);
  uint64_t *v16 = v55;
  swift_bridgeObjectRelease();
  uint64_t v28 = *(void (**)(char *, uint64_t))(v24 + 8);
  v28(v15, v25);
  swift_endAccess();
  char v29 = v54;
  if (v54)
  {
    if (qword_1001036A8 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_1000B7490();
    sub_100038E8C(v30, (uint64_t)qword_100104410);
    id v31 = v51;
    v23(v51, v50, v25);
    id v32 = sub_1000B7480();
    os_log_type_t v33 = sub_1000B7860();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v50 = swift_slowAlloc();
      uint64_t v56 = v50;
      uint64_t v46 = v25;
      *(_DWORD *)uint64_t v34 = 136315138;
      unint64_t v45 = v34 + 4;
      uint64_t v35 = v47;
      sub_1000B7140();
      sub_10006CC70(&qword_100103B08, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v36 = v49;
      uint64_t v37 = sub_1000B7D80();
      unint64_t v39 = v38;
      (*(void (**)(char *, uint64_t))(v48 + 8))(v35, v36);
      uint64_t v55 = sub_100069A50(v37, v39, &v56);
      sub_1000B79F0();
      swift_bridgeObjectRelease();
      v28(v51, v46);
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "Preview object is in unexpected state {url: %s}", v34, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_10006CDD4(v52, v53, v54);
    }
    else
    {
      sub_10006CDD4(v52, v53, v29);
      v28(v31, v25);
    }
  }
  else
  {
    uint64_t v41 = v52;
    uint64_t v40 = v53;
    sub_100037F24(v52, v53, 0);

    uint64_t v42 = *(void *)(v40 + 16);
    if (v42)
    {
      swift_bridgeObjectRetain();
      uint64_t v43 = v40 + 40;
      do
      {
        uint64_t v44 = *(void (**)(uint64_t *))(v43 - 8);
        uint64_t v56 = (uint64_t)a1;
        char v57 = a2 & 1;
        swift_retain();
        v44(&v56);
        swift_release();
        v43 += 16;
        --v42;
      }
      while (v42);
      swift_bridgeObjectRelease();
    }
    sub_10006CDD4(v41, v40, 0);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_100069110(void *a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v60 = a5;
  uint64_t v61 = a6;
  uint64_t v58 = a4;
  uint64_t v59 = sub_1000B74A0();
  uint64_t v65 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000B74C0();
  uint64_t v63 = *(void *)(v11 - 8);
  uint64_t v64 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (objc_class *)type metadata accessor for ICArchiveImporter();
  id v15 = objc_allocWithZone(v14);
  unint64_t v16 = self;
  id v17 = a1;
  id v18 = [v16 defaultManager];
  __int16 IsAlexandriaDemoModeEnabled = ICInternalSettingsIsAlexandriaDemoModeEnabled();
  int v20 = ICInternalSettingsIsAlexandriaDemoModeEnabled();
  uint64_t v21 = objc_allocWithZone(v14);
  if (v20) {
    __int16 v22 = 256;
  }
  else {
    __int16 v22 = 0;
  }
  id v23 = sub_10004496C(v17, v22 | IsAlexandriaDemoModeEnabled, 0, 0, v18, v21, 0.0);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  id v24 = [self inMemoryAccountInContext:v17];
  id v25 = [v24 defaultFolder];
  id v62 = v23;
  uint64_t v26 = sub_10003F5FC(a2, v25, (uint64_t (**)(void, void, int64_t, id, uint64_t, uint64_t, double))&off_1000F1F08, a3);
  char v28 = v27;
  uint64_t v55 = v26;
  uint64_t v56 = v29;
  char v57 = v30;

  aBlock = 0;
  unsigned int v31 = [v17 save:&aBlock];
  id v32 = aBlock;
  if (v31)
  {
    sub_100038DC8(0, &qword_100104328);
    os_log_type_t v33 = v32;
    uint64_t v54 = sub_1000B78B0();
    uint64_t v34 = swift_allocObject();
    uint64_t v36 = v55;
    uint64_t v35 = v56;
    *(void *)(v34 + 16) = v55;
    *(void *)(v34 + 24) = v35;
    uint64_t v37 = v58;
    *(void *)(v34 + 32) = v57;
    char v38 = v28 & 1;
    *(unsigned char *)(v34 + 40) = v38;
    *(void *)(v34 + 48) = v37;
    *(void *)(v34 + 56) = a3;
    uint64_t v39 = v61;
    *(void *)(v34 + 64) = v60;
    *(void *)(v34 + 72) = v39;
    uint64_t v70 = sub_10006CD60;
    uint64_t v71 = (void *)v34;
    aBlock = _NSConcreteStackBlock;
    uint64_t v67 = 1107296256;
    uint64_t v68 = sub_100061F4C;
    uint64_t v69 = &unk_1000F0800;
    uint64_t v60 = _Block_copy(&aBlock);
    uint64_t v40 = v35;
    uint64_t v41 = v57;
    sub_10006CD78(v36, v40, v57, v38);
    swift_retain();
    id v42 = a3;
    swift_retain();
    swift_release();
    sub_1000B74B0();
    aBlock = (void **)_swiftEmptyArrayStorage;
    sub_10006CC70(&qword_100104308, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100032E20(&qword_100104310);
    sub_100038F84(&qword_100104318, &qword_100104310);
    uint64_t v43 = v59;
    sub_1000B7A20();
    uint64_t v44 = v60;
    unint64_t v45 = (void *)v54;
    sub_1000B78C0();
    _Block_release(v44);

    sub_10006CCB8(v55, v56, v41, v38);
  }
  else
  {
    uint64_t v46 = aBlock;
    uint64_t v47 = sub_1000B6E30();

    swift_willThrow();
    sub_10006CCB8(v55, v56, v57, v28 & 1);

    sub_100038DC8(0, &qword_100104328);
    uint64_t v48 = (void *)sub_1000B78B0();
    uint64_t v49 = (void *)swift_allocObject();
    uint64_t v50 = v61;
    v49[2] = v60;
    v49[3] = v50;
    void v49[4] = v47;
    uint64_t v70 = sub_10006CC3C;
    uint64_t v71 = v49;
    aBlock = _NSConcreteStackBlock;
    uint64_t v67 = 1107296256;
    uint64_t v68 = sub_100061F4C;
    uint64_t v69 = &unk_1000F07B0;
    uint64_t v51 = _Block_copy(&aBlock);
    swift_retain();
    swift_errorRetain();
    swift_release();
    sub_1000B74B0();
    aBlock = (void **)_swiftEmptyArrayStorage;
    sub_10006CC70(&qword_100104308, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100032E20(&qword_100104310);
    sub_100038F84(&qword_100104318, &qword_100104310);
    uint64_t v43 = v59;
    sub_1000B7A20();
    sub_1000B78C0();

    _Block_release(v51);
    swift_errorRelease();
  }
  (*(void (**)(char *, uint64_t))(v65 + 8))(v10, v43);
  return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v13, v64);
}

void sub_1000697CC(void *a1, uint64_t a2, void *a3, char a4, uint64_t a5, void *a6, void (*a7)(void *, uint64_t))
{
  uint64_t v9 = a1;
  if (a4)
  {
    swift_errorRetain();
    uint64_t v13 = 1;
  }
  else
  {
    v14[0] = a1;
    v14[1] = a2;
    v14[2] = a3;
    swift_bridgeObjectRetain();
    id v12 = a3;
    sub_1000698C0((uint64_t)v14, a5, (uint64_t)&v15);

    swift_bridgeObjectRelease();
    uint64_t v9 = v15;
    uint64_t v13 = v16;
  }
  objc_msgSend(a6, "setCompletedUnitCount:", objc_msgSend(a6, "totalUnitCount"));
  a7(v9, v13);

  sub_100038E04(v9, v13);
}

void sub_1000698C0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4 = *(void **)(a1 + 16);
  id v5 = [*(id *)(a2 + 16) viewContext];
  id v6 = [v4 objectID];
  id v7 = [v5 objectWithID:v6];

  void v14[3] = sub_100038DC8(0, &qword_100103B50);
  v14[0] = v7;
  id v8 = v7;
  uint64_t v9 = (void *)sub_10003493C((uint64_t)v14);
  sub_100037F98((uint64_t)v14);
  unsigned int v10 = [v9 isPasswordProtected:v14[0]];
  char v11 = v10;
  if (v10)
  {
    sub_10006C164();
    uint64_t v12 = swift_allocError();
    *uint64_t v13 = 0;

    uint64_t v9 = (void *)v12;
  }

  *(void *)a3 = v9;
  *(unsigned char *)(a3 + 8) = v11;
}

void sub_1000699E8(uint64_t a1, void *a2)
{
  id v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_100069A50(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_100069B24(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_100032E64((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_100032E64((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_100037F98((uint64_t)v12);
  return v7;
}

uint64_t sub_100069B24(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1000B7A00();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_100069CE0(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_1000B7AD0();
  if (!v8)
  {
    sub_1000B7B80();
    __break(1u);
LABEL_17:
    uint64_t result = sub_1000B7BE0();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_100069CE0(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_100069D78(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_100069F58(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_100069F58(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_100069D78(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_100069EF0(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_1000B7AB0();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      sub_1000B7B80();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_1000B7660();
      if (!v2) {
        return _swiftEmptyArrayStorage;
      }
    }
    sub_1000B7BE0();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)sub_1000B7B80();
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_100069EF0(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  sub_100032E20(&qword_100104510);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_100069F58(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_100032E20(&qword_100104510);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1000B7BE0();
  __break(1u);
  return result;
}

unint64_t sub_10006A0A8(uint64_t a1)
{
  sub_1000B6F10();
  sub_10006CC70(&qword_100103AB8, (void (*)(uint64_t))&type metadata accessor for URL);
  uint64_t v2 = sub_1000B7520();
  return sub_10006B804(a1, v2, (uint64_t (*)(void))&type metadata accessor for URL, &qword_100103EB8, (void (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
}

unint64_t sub_10006A17C(uint64_t a1)
{
  sub_100032E20(&qword_100104330);
  sub_100038F84((unint64_t *)&unk_100104380, &qword_100104330);
  uint64_t v2 = sub_1000B7520();

  return sub_10006B568(a1, v2);
}

uint64_t sub_10006A214()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

unint64_t sub_10006A250(uint64_t a1, uint64_t a2)
{
  sub_1000B7E40();
  sub_1000B7620();
  Swift::Int v4 = sub_1000B7E70();

  return sub_10006B720(a1, a2, v4);
}

unint64_t sub_10006A2C8(uint64_t a1)
{
  sub_1000B7030();
  sub_10006CC70((unint64_t *)&unk_100104370, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v2 = sub_1000B7520();
  return sub_10006B804(a1, v2, (uint64_t (*)(void))&type metadata accessor for UUID, &qword_100104508, (void (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
}

unint64_t sub_10006A39C(uint64_t a1)
{
  sub_1000B75B0();
  sub_1000B7E40();
  sub_1000B7620();
  Swift::Int v2 = sub_1000B7E70();
  swift_bridgeObjectRelease();

  return sub_10006B9A4(a1, v2);
}

uint64_t sub_10006A430(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v22 = v4 + v2;
  }
  else {
    int64_t v22 = v4;
  }
  unint64_t v3 = sub_100035534(isUniquelyReferenced_nonNull_native, v22, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = (*(void *)(v3 + 24) >> 1) - v8;
  uint64_t v10 = *(void *)(sub_100032E20(&qword_100104330) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = v3 + v12 + v11 * v8;
  unint64_t v14 = a1 + v12;
  uint64_t v15 = v11 * v2;
  unint64_t v16 = v13 + v15;
  unint64_t v17 = v14 + v15;
  if (v14 < v16 && v13 < v17) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *id v1 = v3;
    return result;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFADD__(v19, v2);
  uint64_t v21 = v19 + v2;
  if (!v20)
  {
    *(void *)(v3 + 16) = v21;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1000B7BE0();
  __break(1u);
  return result;
}

uint64_t sub_10006A5D8(uint64_t a1)
{
  uint64_t v4 = _s3TagVMa();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v78 = (uint64_t)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100032E20(&qword_1001044F8);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v79 = (uint64_t)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v77 = (uint64_t)&v65 - v11;
  __chkstk_darwin(v10);
  unint64_t v14 = (char *)&v65 - v13;
  uint64_t v15 = *(void *)(a1 + 16);
  unint64_t v16 = *v1;
  int64_t v17 = *(void *)(*v1 + 16);
  int64_t v18 = v17 + v15;
  if (__OFADD__(v17, v15))
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v2 = v5;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *id v1 = v16;
  uint64_t v80 = v4;
  if (!isUniquelyReferenced_nonNull_native || (int64_t v20 = *(void *)(v16 + 24) >> 1, v20 < v18))
  {
    if (v17 <= v18) {
      int64_t v21 = v17 + v15;
    }
    else {
      int64_t v21 = v17;
    }
    unint64_t v16 = sub_100035A00(isUniquelyReferenced_nonNull_native, v21, 1, v16);
    *id v1 = v16;
    int64_t v20 = *(void *)(v16 + 24) >> 1;
  }
  uint64_t v22 = *(void *)(v16 + 16);
  int64_t v17 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  int64_t v18 = *(void *)(v5 + 72);
  int64_t v23 = v20 - v22;
  uint64_t v24 = sub_10006C820(&v81, v16 + v17 + v18 * v22, v20 - v22, a1);
  if (v24 < v15) {
    goto LABEL_17;
  }
  if (v24)
  {
    uint64_t v26 = *(void *)(v16 + 16);
    BOOL v27 = __OFADD__(v26, v24);
    uint64_t v28 = v26 + v24;
    if (v27)
    {
      __break(1u);
      goto LABEL_22;
    }
    *(void *)(v16 + 16) = v28;
  }
  if (v24 == v23)
  {
LABEL_18:
    int64_t v67 = *(void *)(v16 + 16);
    uint64_t v25 = v81;
    int64_t v23 = v84;
    uint64_t v75 = v82;
    uint64_t v76 = v83;
    if (v85)
    {
      unint64_t v74 = (v85 - 1) & v85;
      unint64_t v30 = __clz(__rbit64(v85)) | (v84 << 6);
      uint64_t v31 = v80;
LABEL_20:
      uint64_t v32 = v25;
      sub_100046CD4(*(void *)(v25 + 48) + v30 * v18, (uint64_t)v14);
      uint64_t v69 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
      v69(v14, 0, 1, v31);
      uint64_t v15 = v23;
      goto LABEL_44;
    }
LABEL_22:
    int64_t v33 = v23 + 1;
    uint64_t v31 = v80;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
LABEL_42:
      uint64_t v31 = v80;
      uint64_t v25 = v12;
    }
    else
    {
      int64_t v34 = (unint64_t)(v76 + 64) >> 6;
      uint64_t v15 = v23;
      if (v33 < v34)
      {
        unint64_t v35 = *(void *)(v75 + 8 * v33);
        if (v35)
        {
LABEL_25:
          unint64_t v74 = (v35 - 1) & v35;
          unint64_t v30 = __clz(__rbit64(v35)) + (v33 << 6);
          int64_t v23 = v33;
          goto LABEL_20;
        }
        int64_t v36 = v23 + 2;
        uint64_t v15 = v23 + 1;
        if (v23 + 2 < v34)
        {
          uint64_t v12 = v25;
          unint64_t v35 = *(void *)(v75 + 8 * v36);
          if (v35)
          {
LABEL_28:
            int64_t v33 = v36;
LABEL_29:
            uint64_t v31 = v80;
            goto LABEL_25;
          }
          uint64_t v15 = v23 + 2;
          uint64_t v31 = v80;
          if (v23 + 3 < v34)
          {
            unint64_t v35 = *(void *)(v75 + 8 * (v23 + 3));
            if (v35)
            {
              int64_t v33 = v23 + 3;
              goto LABEL_29;
            }
            int64_t v36 = v23 + 4;
            uint64_t v15 = v23 + 3;
            uint64_t v31 = v80;
            if (v23 + 4 < v34)
            {
              unint64_t v35 = *(void *)(v75 + 8 * v36);
              if (v35) {
                goto LABEL_28;
              }
              int64_t v33 = v23 + 5;
              uint64_t v15 = v23 + 4;
              uint64_t v31 = v80;
              if (v23 + 5 < v34)
              {
                unint64_t v35 = *(void *)(v75 + 8 * v33);
                if (v35) {
                  goto LABEL_25;
                }
                uint64_t v15 = v34 - 1;
                int64_t v37 = v23 + 6;
                do
                {
                  if (v34 == v37) {
                    goto LABEL_42;
                  }
                  unint64_t v35 = *(void *)(v75 + 8 * v37++);
                }
                while (!v35);
                int64_t v33 = v37 - 1;
                goto LABEL_29;
              }
            }
          }
        }
      }
    }
    uint64_t v32 = v25;
    uint64_t v69 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
    v69(v14, 1, 1, v31);
    unint64_t v74 = 0;
LABEL_44:
    uint64_t v38 = v32;
    uint64_t v81 = v32;
    uint64_t v82 = v75;
    uint64_t v83 = v76;
    int64_t v84 = v15;
    uint64_t v70 = v15;
    unint64_t v85 = v74;
    uint64_t v39 = v77;
    sub_100032FC8((uint64_t)v14, v77, &qword_1001044F8);
    uint64_t v73 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
    if (v73(v39, 1, v31) == 1)
    {
      uint64_t v40 = v77;
LABEL_46:
      sub_10006CAEC((uint64_t)v14);
      sub_100038F7C();
      return sub_10006CAEC(v40);
    }
    uint64_t v68 = v5 + 56;
    uint64_t v40 = v77;
    int64_t v41 = v67;
    while (1)
    {
      uint64_t v66 = v38;
      sub_10006CAEC(v40);
      unint64_t v42 = *v1;
      unint64_t v43 = *(void *)(*v1 + 24);
      int64_t v44 = v43 >> 1;
      int64_t v67 = v41;
      if ((uint64_t)(v43 >> 1) < v41 + 1)
      {
        unint64_t v42 = sub_100035A00(v43 > 1, v41 + 1, 1, v42);
        *id v1 = v42;
        int64_t v44 = *(void *)(v42 + 24) >> 1;
      }
      uint64_t v45 = v79;
      sub_100032FC8((uint64_t)v14, v79, &qword_1001044F8);
      if (v73(v45, 1, v80) == 1)
      {
        uint64_t v46 = v45;
        uint64_t v38 = v66;
        int64_t v41 = v67;
LABEL_87:
        sub_10006CAEC(v46);
        goto LABEL_49;
      }
      unint64_t v71 = v42 + v17;
      uint64_t v47 = v78;
      sub_100046D38(v45, v78);
      uint64_t v38 = v66;
      BOOL v48 = v67 < v44;
      int64_t v49 = v67 <= v44 ? v44 : v67;
      int64_t v72 = v49;
      uint64_t v50 = v47;
      int64_t v51 = v67;
      if (v48) {
        break;
      }
LABEL_48:
      sub_10006CB4C(v50);
      int64_t v41 = v72;
LABEL_49:
      uint64_t v40 = v77;
      *(void *)(*v1 + 16) = v41;
      sub_100032FC8((uint64_t)v14, v40, &qword_1001044F8);
      if (v73(v40, 1, v80) == 1) {
        goto LABEL_46;
      }
    }
    while (1)
    {
      sub_10006CAEC((uint64_t)v14);
      uint64_t result = sub_100046D38(v50, v71 + v51 * v18);
      uint64_t v52 = v81;
      int64_t v53 = v84;
      uint64_t v75 = v82;
      uint64_t v76 = v83;
      if (v85) {
        break;
      }
      int64_t v58 = v84 + 1;
      if (__OFADD__(v84, 1))
      {
        __break(1u);
        return result;
      }
      int64_t v59 = (unint64_t)(v76 + 64) >> 6;
      int64_t v60 = v84;
      if (v58 < v59)
      {
        unint64_t v61 = *(void *)(v75 + 8 * v58);
        if (v61) {
          goto LABEL_65;
        }
        int64_t v60 = v84 + 1;
        if (v84 + 2 < v59)
        {
          unint64_t v61 = *(void *)(v75 + 8 * (v84 + 2));
          if (v61)
          {
            int64_t v58 = v84 + 2;
            goto LABEL_65;
          }
          int64_t v60 = v84 + 2;
          if (v84 + 3 < v59)
          {
            unint64_t v61 = *(void *)(v75 + 8 * (v84 + 3));
            if (v61)
            {
              int64_t v58 = v84 + 3;
              goto LABEL_65;
            }
            int64_t v60 = v84 + 3;
            if (v84 + 4 < v59)
            {
              unint64_t v61 = *(void *)(v75 + 8 * (v84 + 4));
              if (v61)
              {
                int64_t v58 = v84 + 4;
LABEL_65:
                uint64_t v54 = v51;
                unint64_t v74 = (v61 - 1) & v61;
                unint64_t v55 = __clz(__rbit64(v61)) + (v58 << 6);
                int64_t v53 = v58;
LABEL_61:
                sub_100046CD4(*(void *)(v81 + 48) + v55 * v18, (uint64_t)v14);
                uint64_t v56 = v80;
                v69(v14, 0, 1, v80);
                int64_t v57 = v53;
                uint64_t v50 = v78;
                goto LABEL_83;
              }
              int64_t v58 = v84 + 5;
              int64_t v60 = v84 + 4;
              uint64_t v50 = v78;
              if (v84 + 5 < v59)
              {
                unint64_t v61 = *(void *)(v75 + 8 * v58);
                if (v61) {
                  goto LABEL_65;
                }
                int64_t v62 = v84 + 6;
                while (v59 != v62)
                {
                  unint64_t v61 = *(void *)(v75 + 8 * v62++);
                  if (v61)
                  {
                    int64_t v58 = v62 - 1;
                    goto LABEL_65;
                  }
                }
                uint64_t v50 = v78;
                int64_t v60 = v59 - 1;
              }
            }
          }
        }
      }
      uint64_t v54 = v51;
      uint64_t v56 = v80;
      int64_t v63 = v60;
      v69(v14, 1, 1, v80);
      int64_t v57 = v63;
      unint64_t v74 = 0;
LABEL_83:
      int64_t v41 = v54 + 1;
      uint64_t v38 = v52;
      uint64_t v81 = v52;
      uint64_t v82 = v75;
      uint64_t v83 = v76;
      int64_t v84 = v57;
      uint64_t v70 = v57;
      unint64_t v85 = v74;
      uint64_t v64 = v79;
      sub_100032FC8((uint64_t)v14, v79, &qword_1001044F8);
      if (v73(v64, 1, v56) == 1)
      {
        uint64_t v46 = v64;
        goto LABEL_87;
      }
      sub_100046D38(v64, v50);
      int64_t v51 = v41;
      if (v41 == v72) {
        goto LABEL_48;
      }
    }
    uint64_t v54 = v51;
    unint64_t v74 = (v85 - 1) & v85;
    unint64_t v55 = __clz(__rbit64(v85)) | (v84 << 6);
    goto LABEL_61;
  }

  return sub_100038F7C();
}

void sub_10006AE2C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, char a5)
{
  uint64_t v6 = (void **)v5;
  int v28 = a3;
  uint64_t v27 = a2;
  uint64_t v10 = sub_100032E20(&qword_100104330);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v14 = (void *)*v5;
  unint64_t v16 = sub_10006A17C(a4);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v20 = v15;
  uint64_t v21 = v14[3];
  if (v21 >= v19 && (a5 & 1) != 0)
  {
LABEL_7:
    uint64_t v22 = *v6;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = v22[7] + 24 * v16;
      sub_10006B028(*(void **)v23, *(void *)(v23 + 8), *(unsigned char *)(v23 + 16));
      uint64_t v24 = v27;
      *(void *)uint64_t v23 = a1;
      *(void *)(v23 + 8) = v24;
      *(unsigned char *)(v23 + 16) = v28;
      return;
    }
    goto LABEL_11;
  }
  if (v21 >= v19 && (a5 & 1) == 0)
  {
    sub_100064D78();
    goto LABEL_7;
  }
  sub_100062E24(v19, a5 & 1);
  unint64_t v25 = sub_10006A17C(a4);
  if ((v20 & 1) != (v26 & 1))
  {
LABEL_14:
    sub_1000B7DF0();
    __break(1u);
    return;
  }
  unint64_t v16 = v25;
  uint64_t v22 = *v6;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a4, v10);
  sub_100064AAC(v16, (uint64_t)v13, a1, v27, v28, v22);
}

uint64_t sub_10006B010(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10006B020()
{
  return swift_release();
}

void sub_10006B028(void *a1, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 2:
      swift_errorRelease();
      break;
    case 1:

      break;
    case 0:

      swift_bridgeObjectRelease();
      break;
  }
}

_OWORD *sub_10006B09C(_OWORD *a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v7 = (void *)*v3;
  unint64_t v9 = sub_10006A39C((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 < v12 || (a3 & 1) == 0)
  {
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_10006521C();
      goto LABEL_7;
    }
    sub_100063298(v12, a3 & 1);
    unint64_t v18 = sub_10006A39C((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      unint64_t v9 = v18;
      char v15 = *v4;
      if (v13) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    type metadata accessor for Key(0);
    uint64_t result = (_OWORD *)sub_1000B7DF0();
    __break(1u);
    return result;
  }
LABEL_7:
  char v15 = *v4;
  if (v13)
  {
LABEL_8:
    unint64_t v16 = (_OWORD *)(v15[7] + 32 * v9);
    sub_100037F98((uint64_t)v16);
    return sub_100032FB8(a1, v16);
  }
LABEL_13:
  sub_100064B84(v9, (uint64_t)a2, a1, v15);

  return a2;
}

uint64_t sub_10006B1E0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_1000B6F10();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  BOOL v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_10006A0A8(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    char v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t result = swift_errorRelease();
      *(void *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1000653E4();
    goto LABEL_7;
  }
  sub_1000638EC(v17, a3 & 1);
  unint64_t v23 = sub_10006A0A8(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    uint64_t result = sub_1000B7DF0();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  char v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_100064BEC(v14, (uint64_t)v11, a1, v20);
}

void sub_10006B388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v7 = (void **)v6;
  uint64_t v33 = a3;
  uint64_t v34 = a4;
  uint64_t v32 = a2;
  uint64_t v11 = sub_1000B6F10();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  unint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (void *)*v6;
  unint64_t v17 = sub_10006A0A8(a5);
  uint64_t v18 = v15[2];
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v21 = v16;
  uint64_t v22 = v15[3];
  if (v22 >= v20 && (a6 & 1) != 0)
  {
LABEL_7:
    unint64_t v23 = *v7;
    if (v21)
    {
LABEL_8:
      char v24 = (uint64_t *)(v23[7] + 32 * v17);
      uint64_t v25 = (void *)v24[2];
      char v26 = (void *)v24[3];
      swift_errorRelease();
      swift_bridgeObjectRelease();

      uint64_t v27 = v32;
      *char v24 = a1;
      v24[1] = v27;
      uint64_t v28 = v34;
      void v24[2] = v33;
      v24[3] = v28;
      return;
    }
    goto LABEL_11;
  }
  if (v22 >= v20 && (a6 & 1) == 0)
  {
    sub_100065954();
    goto LABEL_7;
  }
  sub_100064150(v20, a6 & 1);
  unint64_t v29 = sub_10006A0A8(a5);
  if ((v21 & 1) != (v30 & 1))
  {
LABEL_14:
    sub_1000B7DF0();
    __break(1u);
    return;
  }
  unint64_t v17 = v29;
  unint64_t v23 = *v7;
  if (v21) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a5, v11);
  sub_100064CA4(v17, (uint64_t)v14, a1, v32, v33, v34, v23);
}

unint64_t sub_10006B568(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = sub_100032E20(&qword_100104330);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v18 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    uint64_t v11 = v13;
    uint64_t v14 = *(void *)(v12 + 56);
    do
    {
      v11(v7, *(void *)(v20 + 48) + v14 * v9, v4);
      sub_100038F84(&qword_100104518, &qword_100104330);
      char v15 = sub_1000B7570();
      (*(void (**)(char *, uint64_t))(v12 - 8))(v7, v4);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v18 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

unint64_t sub_10006B720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1000B7DC0() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1000B7DC0() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_10006B804(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, void (*a5)(uint64_t), uint64_t a6)
{
  char v24 = a5;
  uint64_t v25 = a6;
  unint64_t v23 = a4;
  v21[1] = a1;
  uint64_t v8 = a3(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  BOOL v11 = (char *)v21 - v10;
  uint64_t v22 = v6;
  uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v13 = a2 & ~v12;
  v21[0] = v6 + 64;
  if ((*(void *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v14 = ~v12;
    uint64_t v17 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    uint64_t v16 = v9 + 16;
    char v15 = v17;
    uint64_t v18 = *(void *)(v16 + 56);
    do
    {
      v15(v11, *(void *)(v22 + 48) + v18 * v13, v8);
      sub_10006CC70(v23, v24);
      char v19 = sub_1000B7570();
      (*(void (**)(char *, uint64_t))(v16 - 8))(v11, v8);
      if (v19) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
    }
    while (((*(void *)(v21[0] + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

unint64_t sub_10006B9A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_1000B75B0();
    uint64_t v8 = v7;
    if (v6 == sub_1000B75B0() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_1000B7DC0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_1000B75B0();
          uint64_t v15 = v14;
          if (v13 == sub_1000B75B0() && v15 == v16) {
            break;
          }
          char v18 = sub_1000B7DC0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

uint64_t sub_10006BB1C(uint64_t a1, char a2, void *a3)
{
  uint64_t v7 = sub_100032E20(&qword_100104330);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100032E20(&qword_100103728);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(a1 + 16);
  if (!v16) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v64 = v3;
  uint64_t v65 = v16;
  uint64_t v17 = a3;
  char v18 = &v15[*(int *)(v12 + 48)];
  unint64_t v63 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v19 = a1 + v63;
  uint64_t v70 = *(void *)(v13 + 72);
  uint64_t v67 = a1;
  swift_bridgeObjectRetain();
  sub_100032FC8(v19, (uint64_t)v15, &qword_100103728);
  uint64_t v66 = v8;
  uint64_t v20 = *(void (**)(unint64_t, uint64_t, uint64_t))(v8 + 32);
  uint64_t v69 = v15;
  uint64_t v72 = v8 + 32;
  uint64_t v73 = v7;
  unint64_t v71 = v20;
  v20((unint64_t)v10, (uint64_t)v15, v7);
  char v21 = *(void **)v18;
  uint64_t v22 = *((void *)v18 + 1);
  char v23 = v18[16];
  unint64_t v74 = v17;
  uint64_t v75 = v10;
  uint64_t v24 = *v17;
  unint64_t v26 = sub_10006A17C((uint64_t)v10);
  uint64_t v27 = *(void *)(v24 + 16);
  BOOL v28 = (v25 & 1) == 0;
  uint64_t v29 = v27 + v28;
  if (__OFADD__(v27, v28)) {
    goto LABEL_24;
  }
  char v30 = v25;
  if (*(void *)(v24 + 24) >= v29)
  {
    if (a2)
    {
      if (v25) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_100064D78();
      if (v30) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v37 = (uint64_t)v75;
    uint64_t v38 = (void *)*v74;
    *(void *)(*v74 + 8 * (v26 >> 6) + 64) |= 1 << v26;
    uint64_t v39 = v38[6];
    uint64_t v68 = *(void *)(v66 + 72);
    v71(v39 + v68 * v26, v37, v73);
    uint64_t v40 = v38[7] + 24 * v26;
    *(void *)uint64_t v40 = v21;
    *(void *)(v40 + 8) = v22;
    *(unsigned char *)(v40 + 16) = v23;
    uint64_t v41 = v38[2];
    BOOL v42 = __OFADD__(v41, 1);
    uint64_t v43 = v41 + 1;
    if (v42)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v38[2] = v43;
    uint64_t v44 = v65 - 1;
    if (v65 == 1) {
      return swift_bridgeObjectRelease_n();
    }
    uint64_t v45 = v67 + v70 + v63;
    while (1)
    {
      uint64_t v46 = (uint64_t)v69;
      sub_100032FC8(v45, (uint64_t)v69, &qword_100103728);
      uint64_t v47 = (uint64_t)v75;
      v71((unint64_t)v75, v46, v73);
      char v21 = *(void **)v18;
      uint64_t v22 = *((void *)v18 + 1);
      char v23 = v18[16];
      BOOL v48 = (void *)*v74;
      unint64_t v50 = sub_10006A17C(v47);
      uint64_t v51 = v48[2];
      BOOL v52 = (v49 & 1) == 0;
      uint64_t v53 = v51 + v52;
      if (__OFADD__(v51, v52)) {
        break;
      }
      char v54 = v49;
      if (v48[3] < v53)
      {
        sub_100062E24(v53, 1);
        unint64_t v55 = sub_10006A17C((uint64_t)v75);
        if ((v54 & 1) != (v56 & 1)) {
          goto LABEL_26;
        }
        unint64_t v50 = v55;
      }
      if (v54) {
        goto LABEL_10;
      }
      uint64_t v57 = (uint64_t)v75;
      int64_t v58 = (void *)*v74;
      *(void *)(*v74 + 8 * (v50 >> 6) + 64) |= 1 << v50;
      v71(v58[6] + v68 * v50, v57, v73);
      uint64_t v59 = v58[7] + 24 * v50;
      *(void *)uint64_t v59 = v21;
      *(void *)(v59 + 8) = v22;
      *(unsigned char *)(v59 + 16) = v23;
      uint64_t v60 = v58[2];
      BOOL v42 = __OFADD__(v60, 1);
      uint64_t v61 = v60 + 1;
      if (v42) {
        goto LABEL_25;
      }
      v58[2] = v61;
      v45 += v70;
      if (!--v44) {
        return swift_bridgeObjectRelease_n();
      }
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_100062E24(v29, a2 & 1);
  unint64_t v31 = sub_10006A17C((uint64_t)v75);
  if ((v30 & 1) == (v32 & 1))
  {
    unint64_t v26 = v31;
    if ((v30 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v34 = swift_allocError();
    swift_willThrow();
    uint64_t v78 = v34;
    swift_errorRetain();
    sub_100032E20(&qword_100103AB0);
    char v35 = swift_dynamicCast();
    uint64_t v36 = (uint64_t)v75;
    if ((v35 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      sub_10006B028(v21, v22, v23);
      (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v36, v73);
      swift_bridgeObjectRelease();
      return swift_errorRelease();
    }
    goto LABEL_27;
  }
LABEL_26:
  sub_1000B7DF0();
  __break(1u);
LABEL_27:
  uint64_t v76 = 0;
  unint64_t v77 = 0xE000000000000000;
  sub_1000B7AA0(30);
  v79._object = (void *)0x80000001000C8B60;
  v79._countAndFlagsBits = 0xD00000000000001BLL;
  sub_1000B7650(v79);
  sub_1000B7B70();
  v80._countAndFlagsBits = 39;
  v80._object = (void *)0xE100000000000000;
  sub_1000B7650(v80);
  uint64_t result = sub_1000B7B90();
  __break(1u);
  return result;
}

uint64_t sub_10006C0A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100032E20(&qword_100103728);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10006C10C()
{
  unint64_t result = qword_100104428;
  if (!qword_100104428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104428);
  }
  return result;
}

unint64_t sub_10006C164()
{
  unint64_t result = qword_100104430;
  if (!qword_100104430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104430);
  }
  return result;
}

unint64_t sub_10006C1BC()
{
  unint64_t result = qword_100104438;
  if (!qword_100104438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104438);
  }
  return result;
}

unint64_t sub_10006C214()
{
  unint64_t result = qword_100104440;
  if (!qword_100104440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104440);
  }
  return result;
}

unint64_t sub_10006C26C()
{
  unint64_t result = qword_100104448;
  if (!qword_100104448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104448);
  }
  return result;
}

uint64_t type metadata accessor for ICArchivePreviewer()
{
  return self;
}

ValueMetadata *type metadata accessor for ICArchivePreviewer.Errors()
{
  return &type metadata for ICArchivePreviewer.Errors;
}

void destroy for ICArchivePreviewer.ObjectStates(uint64_t a1)
{
}

uint64_t _s38com_apple_mobilenotes_SharingExtension18ICArchivePreviewerC12ObjectStatesOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_100037F24(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ICArchivePreviewer.ObjectStates(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_100037F24(*(id *)a2, v4, v5);
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_10006B028(v6, v7, v8);
  return a1;
}

__n128 initializeWithTake for ICArchivePreviewer.ObjectStates(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ICArchivePreviewer.ObjectStates(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_10006B028(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ICArchivePreviewer.ObjectStates(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ICArchivePreviewer.ObjectStates(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_10006C494(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_10006C4AC(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)__n128 result = a2 - 3;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ICArchivePreviewer.ObjectStates()
{
  return &type metadata for ICArchivePreviewer.ObjectStates;
}

uint64_t sub_10006C4D4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_100032E20(&qword_100104330);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  BOOL v42 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v10);
  uint64_t v41 = (char *)&v32 - v13;
  uint64_t v43 = a4;
  uint64_t v16 = *(void *)(a4 + 64);
  uint64_t v15 = a4 + 64;
  uint64_t v14 = v16;
  uint64_t v37 = v15;
  uint64_t v17 = -1 << *(unsigned char *)(v15 - 32);
  if (-v17 < 64) {
    uint64_t v18 = ~(-1 << -(char)v17);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & v14;
  if (!a2)
  {
    int64_t v20 = 0;
    a3 = 0;
LABEL_38:
    uint64_t v31 = v37;
    *a1 = v43;
    a1[1] = v31;
    a1[2] = ~v17;
    a1[3] = v20;
    a1[4] = v19;
    return a3;
  }
  if (!a3)
  {
    int64_t v20 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v34 = -1 << *(unsigned char *)(v15 - 32);
  char v35 = a1;
  int64_t v20 = 0;
  uint64_t v21 = 0;
  uint64_t v38 = v9 + 32;
  uint64_t v39 = v9 + 16;
  int64_t v36 = (unint64_t)(63 - v17) >> 6;
  int64_t v33 = v36 - 1;
  uint64_t v40 = a3;
  uint64_t v22 = v41;
  if (!v19) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v23 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  unint64_t v24 = v23 | (v20 << 6);
  while (1)
  {
    ++v21;
    BOOL v28 = v42;
    uint64_t v29 = *(void *)(v9 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v42, *(void *)(v43 + 48) + v29 * v24, v8);
    char v30 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v30(v22, v28, v8);
    uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(a2, v22, v8);
    a3 = v40;
    if (v21 == v40) {
      goto LABEL_37;
    }
    a2 += v29;
    if (v19) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v25 >= v36) {
      goto LABEL_32;
    }
    unint64_t v26 = *(void *)(v37 + 8 * v25);
    if (!v26) {
      break;
    }
LABEL_18:
    unint64_t v19 = (v26 - 1) & v26;
    unint64_t v24 = __clz(__rbit64(v26)) + (v25 << 6);
    int64_t v20 = v25;
  }
  v20 += 2;
  if (v25 + 1 >= v36)
  {
    unint64_t v19 = 0;
    int64_t v20 = v25;
    goto LABEL_36;
  }
  unint64_t v26 = *(void *)(v37 + 8 * v20);
  if (v26) {
    goto LABEL_14;
  }
  int64_t v27 = v25 + 2;
  if (v25 + 2 >= v36) {
    goto LABEL_32;
  }
  unint64_t v26 = *(void *)(v37 + 8 * v27);
  if (v26) {
    goto LABEL_17;
  }
  int64_t v20 = v25 + 3;
  if (v25 + 3 >= v36)
  {
    unint64_t v19 = 0;
    int64_t v20 = v25 + 2;
    goto LABEL_36;
  }
  unint64_t v26 = *(void *)(v37 + 8 * v20);
  if (v26)
  {
LABEL_14:
    int64_t v25 = v20;
    goto LABEL_18;
  }
  int64_t v27 = v25 + 4;
  if (v25 + 4 >= v36)
  {
LABEL_32:
    unint64_t v19 = 0;
LABEL_36:
    a3 = v21;
LABEL_37:
    uint64_t v17 = v34;
    a1 = v35;
    goto LABEL_38;
  }
  unint64_t v26 = *(void *)(v37 + 8 * v27);
  if (v26)
  {
LABEL_17:
    int64_t v25 = v27;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v25 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v25 >= v36)
    {
      unint64_t v19 = 0;
      int64_t v20 = v33;
      goto LABEL_36;
    }
    unint64_t v26 = *(void *)(v37 + 8 * v25);
    ++v27;
    if (v26) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_10006C820(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = _s3TagVMa();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8 - 8);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v30 - v14;
  uint64_t v35 = a4;
  uint64_t v18 = *(void *)(a4 + 56);
  uint64_t v17 = a4 + 56;
  uint64_t v16 = v18;
  uint64_t v19 = -1 << *(unsigned char *)(v17 - 24);
  if (-v19 < 64) {
    uint64_t v20 = ~(-1 << -(char)v19);
  }
  else {
    uint64_t v20 = -1;
  }
  unint64_t v21 = v20 & v16;
  if (!a2)
  {
    int64_t v22 = 0;
    a3 = 0;
LABEL_38:
    *a1 = v35;
    a1[1] = v17;
    a1[2] = ~v19;
    a1[3] = v22;
    a1[4] = v21;
    return a3;
  }
  if (!a3)
  {
    int64_t v22 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v32 = -1 << *(unsigned char *)(v17 - 24);
  int64_t v33 = a1;
  int64_t v22 = 0;
  uint64_t v23 = 0;
  int64_t v34 = (unint64_t)(63 - v19) >> 6;
  int64_t v31 = v34 - 1;
  if (!v21) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v24 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  unint64_t v25 = v24 | (v22 << 6);
  while (1)
  {
    ++v23;
    uint64_t v29 = *(void *)(v9 + 72);
    sub_100046CD4(*(void *)(v35 + 48) + v29 * v25, (uint64_t)v12);
    sub_100046D38((uint64_t)v12, (uint64_t)v15);
    uint64_t result = sub_100046D38((uint64_t)v15, a2);
    if (v23 == a3) {
      goto LABEL_37;
    }
    a2 += v29;
    if (v21) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v26 >= v34) {
      goto LABEL_32;
    }
    unint64_t v27 = *(void *)(v17 + 8 * v26);
    if (!v27) {
      break;
    }
LABEL_18:
    unint64_t v21 = (v27 - 1) & v27;
    unint64_t v25 = __clz(__rbit64(v27)) + (v26 << 6);
    int64_t v22 = v26;
  }
  v22 += 2;
  if (v26 + 1 >= v34)
  {
    unint64_t v21 = 0;
    int64_t v22 = v26;
    goto LABEL_36;
  }
  unint64_t v27 = *(void *)(v17 + 8 * v22);
  if (v27) {
    goto LABEL_14;
  }
  int64_t v28 = v26 + 2;
  if (v26 + 2 >= v34) {
    goto LABEL_32;
  }
  unint64_t v27 = *(void *)(v17 + 8 * v28);
  if (v27) {
    goto LABEL_17;
  }
  int64_t v22 = v26 + 3;
  if (v26 + 3 >= v34)
  {
    unint64_t v21 = 0;
    int64_t v22 = v26 + 2;
    goto LABEL_36;
  }
  unint64_t v27 = *(void *)(v17 + 8 * v22);
  if (v27)
  {
LABEL_14:
    int64_t v26 = v22;
    goto LABEL_18;
  }
  int64_t v28 = v26 + 4;
  if (v26 + 4 >= v34)
  {
LABEL_32:
    unint64_t v21 = 0;
LABEL_36:
    a3 = v23;
LABEL_37:
    uint64_t v19 = v32;
    a1 = v33;
    goto LABEL_38;
  }
  unint64_t v27 = *(void *)(v17 + 8 * v28);
  if (v27)
  {
LABEL_17:
    int64_t v26 = v28;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v26 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v26 >= v34)
    {
      unint64_t v21 = 0;
      int64_t v22 = v31;
      goto LABEL_36;
    }
    unint64_t v27 = *(void *)(v17 + 8 * v26);
    ++v28;
    if (v27) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_10006CAEC(uint64_t a1)
{
  uint64_t v2 = sub_100032E20(&qword_1001044F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10006CB4C(uint64_t a1)
{
  uint64_t v2 = _s3TagVMa();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10006CBA8()
{
  unint64_t result = qword_100104500;
  if (!qword_100104500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104500);
  }
  return result;
}

uint64_t sub_10006CBFC()
{
  swift_release();
  swift_errorRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10006CC3C()
{
  return (*(uint64_t (**)(void, uint64_t))(v0 + 16))(*(void *)(v0 + 32), 1);
}

uint64_t sub_10006CC70(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_10006CCB8(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  if (a4)
  {
    swift_errorRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10006CD08()
{
  sub_10006CCB8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(unsigned char *)(v0 + 40));
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 80, 7);
}

void sub_10006CD60()
{
  sub_1000697CC(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(unsigned char *)(v0 + 40), *(void *)(v0 + 48), *(void **)(v0 + 56), *(void (**)(void *, uint64_t))(v0 + 64));
}

id sub_10006CD78(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  if (a4)
  {
    return (id)swift_errorRetain();
  }
  else
  {
    swift_bridgeObjectRetain();
    return a3;
  }
}

id sub_10006CDC8(void *a1, char a2)
{
  if (a2) {
    return (id)swift_errorRetain();
  }
  else {
    return a1;
  }
}

void sub_10006CDD4(void *a1, uint64_t a2, char a3)
{
  if (a3 != -1) {
    sub_10006B028(a1, a2, a3);
  }
}

id sub_10006CDE8(uint64_t a1, uint64_t a2, void (*a3)(void *, uint64_t), void *a4)
{
  uint64_t v8 = (void *)sub_1000B6F10();
  uint64_t v86 = *(v8 - 1);
  id v87 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_100032E20(&qword_100104330);
  uint64_t v11 = *(void *)(v91 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = __chkstk_darwin(v91);
  int64_t v84 = (char *)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v83 = (char *)&v83 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v83 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v83 - v19;
  uint64_t v21 = swift_allocObject();
  id v89 = a3;
  uint64_t v90 = v21;
  *(void *)(v21 + 16) = a3;
  *(void *)(v21 + 24) = a4;
  uint64_t v85 = a2 + 24;
  swift_beginAccess();
  uint64_t v22 = *(void *)(a2 + 24);
  uint64_t v23 = *(void *)(v22 + 16);
  id v88 = a4;
  uint64_t v24 = a1;
  swift_retain();
  if (v23 && (unint64_t v25 = sub_10006A17C(a1), (v26 & 1) != 0))
  {
    uint64_t v27 = *(void *)(v22 + 56) + 24 * v25;
    int64_t v28 = *(void **)v27;
    uint64_t v29 = *(void **)(v27 + 8);
    uint64_t v30 = *(unsigned __int8 *)(v27 + 16);
    swift_endAccess();
    switch(v30)
    {
      case 1:
        char v56 = self;
        id v57 = v28;
        id v36 = [v56 progressWithTotalUnitCount:1];
        [v36 setCompletedUnitCount:[v36 totalUnitCount]];
        uint64_t v93 = (void *)sub_100038DC8(0, (unint64_t *)&qword_100103820);
        aBlock[0] = (uint64_t)v57;
        id v58 = v57;
        uint64_t v59 = (void *)sub_1000346D4((uint64_t)aBlock);
        sub_100037F98((uint64_t)aBlock);
        v89(v59, 0);

        sub_10006B028(v28, (uint64_t)v29, 1);
        sub_10006B028(v28, (uint64_t)v29, 1);
        goto LABEL_15;
      case 2:
        swift_errorRetain();
        v89(v28, 1);
        id v36 = [objc_allocWithZone((Class)NSProgress) init];
        sub_10006B028(v28, (uint64_t)v29, 2);
        goto LABEL_15;
      case 3:
        id v60 = [self progressWithTotalUnitCount:1];
        uint64_t v61 = *(void (**)(char *, uint64_t))(v11 + 16);
        id v89 = (void (*)(void *, uint64_t))(v11 + 16);
        uint64_t v62 = (uint64_t)v83;
        uint64_t v63 = v24;
        uint64_t v64 = v24;
        uint64_t v65 = v91;
        v61(v83, v63);
        sub_100032E20(&qword_100103990);
        uint64_t v66 = swift_allocObject();
        *(_OWORD *)(v66 + 16) = xmmword_1000CD1B0;
        uint64_t v67 = swift_allocObject();
        uint64_t v68 = v90;
        *(void *)(v67 + 16) = sub_10006D8A0;
        *(void *)(v67 + 24) = v68;
        *(void *)(v66 + 32) = sub_10006A24C;
        *(void *)(v66 + 40) = v67;
        swift_beginAccess();
        swift_retain();
        id v88 = v60;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v96 = *(void *)(a2 + 24);
        *(void *)(a2 + 24) = 0x8000000000000000;
        sub_10006AE2C((uint64_t)v60, v66, 0, v62, isUniquelyReferenced_nonNull_native);
        *(void *)(a2 + 24) = v96;
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v62, v65);
        swift_endAccess();
        ((void (*)(uint64_t, uint64_t, uint64_t))v61)(v62, v64, v65);
        uint64_t v70 = *(unsigned __int8 *)(v11 + 80);
        uint64_t v85 = v70 | 7;
        uint64_t v71 = swift_allocObject();
        uint64_t v86 = v71;
        *(void *)(v71 + 16) = a2;
        uint64_t v72 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32);
        v72(v71 + ((v70 + 24) & ~v70), v62, v65);
        id v87 = *(id *)(a2 + 16);
        uint64_t v73 = v84;
        ((void (*)(char *, uint64_t, uint64_t))v61)(v84, v64, v65);
        uint64_t v74 = (v70 + 16) & ~v70;
        unint64_t v75 = (v12 + v74 + 7) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v76 = (v75 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v77 = swift_allocObject();
        v72(v77 + v74, (uint64_t)v73, v65);
        uint64_t v78 = v88;
        *(void *)(v77 + v75) = v88;
        *(void *)(v77 + v76) = a2;
        Swift::String v79 = (void *)(v77 + ((v76 + 15) & 0xFFFFFFFFFFFFFFF8));
        uint64_t v80 = v86;
        *Swift::String v79 = sub_10006B004;
        v79[1] = v80;
        uint64_t v94 = sub_10006B00C;
        uint64_t v95 = v77;
        aBlock[0] = (uint64_t)_NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_1000699E8;
        uint64_t v93 = &unk_1000F08C8;
        uint64_t v81 = _Block_copy(aBlock);
        swift_retain_n();
        id v82 = v78;
        swift_retain();
        swift_release();
        [v87 performBackgroundTask:v81];
        _Block_release(v81);
        swift_release();
        swift_release();
        id result = v82;
        break;
      default:
        uint64_t v31 = v11;
        uint64_t v32 = (uint64_t)v18;
        uint64_t v33 = v91;
        (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v18, v24, v91);
        uint64_t v34 = swift_allocObject();
        uint64_t v35 = v90;
        *(void *)(v34 + 16) = sub_10006D8A0;
        *(void *)(v34 + 24) = v35;
        sub_100037F24(v28, (uint64_t)v29, 0);
        id v36 = v28;
        swift_retain();
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v29 = sub_100035548(0, v29[2] + 1, 1, v29);
        }
        uint64_t v37 = v29;
        unint64_t v38 = v29[2];
        uint64_t v39 = v37;
        unint64_t v40 = v37[3];
        if (v38 >= v40 >> 1) {
          uint64_t v39 = sub_100035548((void *)(v40 > 1), v38 + 1, 1, v39);
        }
        v39[2] = v38 + 1;
        uint64_t v41 = &v39[2 * v38];
        v41[4] = sub_10006A24C;
        v41[5] = v34;
        swift_release();
        BOOL v42 = (uint64_t *)v85;
        swift_beginAccess();
        char v43 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v96 = *v42;
        *BOOL v42 = 0x8000000000000000;
        sub_10006AE2C((uint64_t)v28, (uint64_t)v39, 0, v32, v43);
        *BOOL v42 = v96;
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v32, v33);
        swift_endAccess();
        goto LABEL_15;
    }
  }
  else
  {
    swift_endAccess();
    if (qword_1001036A8 != -1) {
      swift_once();
    }
    uint64_t v44 = sub_1000B7490();
    sub_100038E8C(v44, (uint64_t)qword_100104410);
    uint64_t v45 = v91;
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v20, a1, v91);
    uint64_t v46 = sub_1000B7480();
    os_log_type_t v47 = sub_1000B7860();
    if (os_log_type_enabled(v46, v47))
    {
      BOOL v48 = (uint8_t *)swift_slowAlloc();
      uint64_t v85 = swift_slowAlloc();
      aBlock[0] = v85;
      *(_DWORD *)BOOL v48 = 136315138;
      int64_t v84 = (char *)(v48 + 4);
      sub_1000B7140();
      sub_10006CC70(&qword_100103B08, (void (*)(uint64_t))&type metadata accessor for URL);
      id v49 = v87;
      uint64_t v50 = sub_1000B7D80();
      unint64_t v52 = v51;
      (*(void (**)(char *, id))(v86 + 8))(v10, v49);
      uint64_t v96 = sub_100069A50(v50, v52, aBlock);
      sub_1000B79F0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v20, v91);
      _os_log_impl((void *)&_mh_execute_header, v46, v47, "Object to be previewed does not exist {url: %s}", v48, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v20, v45);
    }

    sub_100038EC4();
    uint64_t v53 = swift_allocError();
    *char v54 = 4;
    swift_errorRetain();
    v89((void *)v53, 1);
    swift_errorRelease();
    swift_errorRelease();
    id v36 = [objc_allocWithZone((Class)NSProgress) init];
LABEL_15:
    swift_release();
    return v36;
  }
  return result;
}

void sub_10006D8A0(void *a1, char a2)
{
  sub_10003461C(a1, a2 & 1, *(void (**)(void *, uint64_t))(v2 + 16));
}

uint64_t sub_10006D8B0()
{
  uint64_t v1 = sub_100032E20(&qword_100104330);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_10006D980(void *a1, char a2)
{
  char v4 = a2 & 1;
  uint64_t v5 = *(void *)(sub_100032E20(&qword_100104330) - 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  sub_100068BC8(a1, v4, v6, v7);
}

uint64_t sub_10006DA0C()
{
  uint64_t v1 = sub_100032E20(&qword_100104330);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_release();
  swift_release();

  return _swift_deallocObject(v0, ((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16, v5);
}

uint64_t sub_10006DAE0(void *a1)
{
  uint64_t v3 = *(void *)(sub_100032E20(&qword_100104330) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void **)(v1 + v5);
  uint64_t v8 = v1 + v4;
  uint64_t v9 = *(void *)(v1 + v6);
  uint64_t v10 = v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = *(void **)v10;
  uint64_t v12 = *(void *)(v10 + 8);

  return sub_100069110(a1, v8, v7, v9, v11, v12);
}

uint64_t sub_10006DB9C(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*(void *)a1, *(unsigned __int8 *)(a1 + 8));
}

id sub_10006DBF8(double a1, uint64_t a2, uint64_t a3, int a4, int *a5, void *a6)
{
  uint64_t v77 = a6;
  uint64_t v7 = v6;
  unint64_t v76 = a5;
  LODWORD(v75) = a4;
  uint64_t v74 = (char *)a3;
  uint64_t v9 = sub_100032E20((uint64_t *)&unk_1001042F0);
  __chkstk_darwin(v9 - 8);
  uint64_t v73 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100032E20(&qword_100103A20);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v69 - v15;
  uint64_t v17 = sub_1000B6FD0();
  uint64_t v72 = *(void *)(v17 - 8);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v23 = (char *)&v69 - v22;
  uint64_t v24 = __chkstk_darwin(v21);
  char v26 = (char *)&v69 - v25;
  __chkstk_darwin(v24);
  int64_t v28 = (char *)&v69 - v27;
  uint64_t ObjectType = swift_getObjectType();
  id v30 = v78;
  uint64_t v31 = (void *)(*((uint64_t (**)(void, void, uint64_t, int *, void *, uint64_t, double))v74 + 5))(v7[1], v7[2], v75 & 0x101, v76, v77, ObjectType, a1);
  id v32 = v31;
  if (!v30)
  {
    uint64_t v69 = v26;
    uint64_t v70 = v28;
    uint64_t v33 = v72;
    uint64_t v71 = v20;
    id v78 = v31;
    uint64_t v74 = v14;
    uint64_t v75 = 0;
    if (v7[9]) {
      NSString v34 = sub_1000B7580();
    }
    else {
      NSString v34 = 0;
    }
    uint64_t v35 = v23;
    [v78 setTypeUTI:v34, v69];

    unint64_t v76 = (int *)type metadata accessor for ICAttachmentArchiveModel();
    uint64_t v77 = v7;
    uint64_t v36 = (uint64_t)v16;
    sub_100032FC8((uint64_t)v7 + v76[12], (uint64_t)v16, &qword_100103A20);
    uint64_t v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
    uint64_t v38 = v17;
    if (v37(v16, 1, v17) == 1)
    {
      uint64_t v39 = v69;
      sub_1000B6FC0();
      sub_100038E30(v36, &qword_100103A20);
    }
    else
    {
      uint64_t v39 = v69;
      (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v69, v36, v17);
    }
    unint64_t v40 = v70;
    sub_1000B6F70();
    uint64_t v41 = *(void (**)(char *, uint64_t))(v33 + 8);
    v41(v39, v38);
    Class isa = sub_1000B6F60().super.isa;
    v41(v40, v38);
    [v78 setCreationDate:isa];

    uint64_t v43 = (uint64_t)v74;
    sub_100032FC8((uint64_t)v77 + v76[13], (uint64_t)v74, &qword_100103A20);
    if (v37((char *)v43, 1, v38) == 1)
    {
      uint64_t v44 = v71;
      sub_1000B6FC0();
      sub_100038E30(v43, &qword_100103A20);
    }
    else
    {
      uint64_t v44 = v71;
      (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v71, v43, v38);
    }
    sub_1000B6F70();
    v41(v44, v38);
    Class v45 = sub_1000B6F60().super.isa;
    v41(v35, v38);
    id v32 = v78;
    [v78 setModificationDate:v45];

    os_log_type_t v47 = v76;
    uint64_t v46 = v77;
    if (*(void *)((char *)v77 + v76[15] + 8)) {
      NSString v48 = sub_1000B7580();
    }
    else {
      NSString v48 = 0;
    }
    uint64_t v49 = (uint64_t)v73;
    [v32 setTitle:v48];

    uint64_t v50 = (uint64_t)v46 + v47[16];
    double v51 = 0.0;
    double v52 = 0.0;
    double v53 = 0.0;
    double v54 = 0.0;
    if ((*(unsigned char *)(v50 + 32) & 1) == 0)
    {
      double v51 = *(double *)(v50 + 16);
      double v52 = *(double *)(v50 + 24);
      double v53 = *(double *)v50;
      double v54 = *(double *)(v50 + 8);
    }
    [v32 setBounds:v53, v54, v51, v52];
    uint64_t v55 = (uint64_t)v46 + v47[17];
    if ((*(unsigned char *)(v55 + 64) & 1) == 0)
    {
      double v57 = *(double *)(v55 + 48);
      double v56 = *(double *)(v55 + 56);
      double v59 = *(double *)(v55 + 32);
      double v58 = *(double *)(v55 + 40);
      double v61 = *(double *)(v55 + 16);
      double v60 = *(double *)(v55 + 24);
      double v62 = *(double *)(v55 + 8);
      [v32 setCroppingQuadTopLeftX:*(double *)v55];
      [v32 setCroppingQuadTopLeftY:v62];
      [v32 setCroppingQuadTopRightX:v61];
      [v32 setCroppingQuadTopRightY:v60];
      [v32 setCroppingQuadBottomRightX:v59];
      [v32 setCroppingQuadBottomRightY:v58];
      [v32 setCroppingQuadBottomLeftX:v57];
      [v32 setCroppingQuadBottomLeftY:v56];
    }
    [v32 setOrientation:word_1000CDCA6[*((char *)v46 + v47[18])]];
    [v32 setImageFilterType:word_1000CDCB0[*((char *)v46 + v47[19])]];
    sub_100032FC8((uint64_t)v46 + v47[20], v49, (uint64_t *)&unk_1001042F0);
    uint64_t v63 = sub_1000B6F10();
    uint64_t v64 = *(void *)(v63 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v49, 1, v63) == 1)
    {
      sub_100038E30(v49, (uint64_t *)&unk_1001042F0);
      NSString v65 = 0;
    }
    else
    {
      sub_1000B6E60();
      (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v49, v63);
      id v32 = v78;
      NSString v65 = sub_1000B7580();
      swift_bridgeObjectRelease();
    }
    [v32 setUrlString:v65];

    if (*(void *)((char *)v46 + v47[21] + 8) >> 60 == 15) {
      Class v66 = 0;
    }
    else {
      Class v66 = sub_1000B6F20().super.isa;
    }
    [v32 setSynapseData:v66];

    uint64_t v67 = 0;
    switch(*((unsigned char *)v46 + v47[27]))
    {
      case 1:
        uint64_t v67 = 1;
        goto LABEL_27;
      case 2:
        uint64_t v67 = 2;
        goto LABEL_27;
      case 3:
        return v32;
      default:
LABEL_27:
        [v32 setPreferredViewSize:v67];
        break;
    }
  }
  return v32;
}

void sub_10006E384(void *a1, int64_t a2, uint64_t a3, void *a4, uint64_t a5, int a6, uint64_t a7, char *a8, double a9)
{
  uint64_t v182 = a8;
  uint64_t v181 = a7;
  LODWORD(v186) = a6;
  uint64_t v188 = a5;
  uint64_t v189 = a4;
  uint64_t v191 = a3;
  int64_t v187 = a2;
  uint64_t v11 = (char *)sub_1000B6F10();
  id v190 = (id)*((void *)v11 - 1);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v165 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v165 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v165 - v19;
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v23 = (char *)&v165 - v22;
  uint64_t v24 = __chkstk_darwin(v21);
  char v26 = (char *)&v165 - v25;
  __chkstk_darwin(v24);
  int64_t v28 = (char *)&v165 - v27;
  id v29 = [a1 attachmentModel];
  self;
  uint64_t v30 = swift_dynamicCastObjCClass();
  if (v30)
  {
    unint64_t v31 = v30;
    uint64_t v14 = (char *)v29;
    id v32 = (SEL *)[a1 managedObjectContext];
    if (v32)
    {
      uint64_t v33 = v32;
      uint64_t v34 = *(void *)(v183 + *(int *)(type metadata accessor for ICAttachmentArchiveModel() + 100));
      uint64_t v35 = v185;
      uint64_t v36 = v191;
      id v190 = v14;
      if (!v34) {
        goto LABEL_98;
      }
      swift_bridgeObjectRetain();
      uint64_t v37 = swift_bridgeObjectRetain();
      unint64_t v38 = (unint64_t)sub_100073600(v37, v36);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v185 = v35;
      if (v38 >> 62)
      {
LABEL_96:
        long long v154 = v14;
        swift_bridgeObjectRetain();
        uint64_t v39 = sub_1000B7BA0();
        if (v39) {
          goto LABEL_6;
        }
      }
      else
      {
        uint64_t v39 = *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
        unint64_t v40 = v14;
        swift_bridgeObjectRetain();
        if (v39)
        {
LABEL_6:
          if (v39 < 1)
          {
LABEL_109:
            __break(1u);
LABEL_110:
            swift_once();
LABEL_30:
            uint64_t v84 = sub_1000B7490();
            sub_100038E8C(v84, (uint64_t)qword_100104520);
            swift_errorRetain();
            swift_errorRetain();
            uint64_t v85 = sub_1000B7480();
            os_log_type_t v86 = sub_1000B7850();
            BOOL v87 = os_log_type_enabled(v85, v86);
            id v88 = v176;
            if (v87)
            {
              id v89 = (uint8_t *)swift_slowAlloc();
              v193[0] = swift_slowAlloc();
              *(_DWORD *)id v89 = 136315138;
              swift_getErrorValue();
              uint64_t v90 = sub_1000B7E00();
              uint64_t v192 = sub_100069A50(v90, v91, v193);
              sub_1000B79F0();
              swift_bridgeObjectRelease();
              swift_errorRelease();
              swift_errorRelease();
              _os_log_impl((void *)&_mh_execute_header, v85, v86, "Cannot import paper attachment database and assets â€” skipping {error: %s}", v89, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              swift_errorRelease();
            }
            else
            {
              swift_errorRelease();
              swift_errorRelease();
              swift_errorRelease();
            }
            return;
          }
          for (uint64_t i = 0; i != v39; ++i)
          {
            if ((v38 & 0xC000000000000001) != 0) {
              id v42 = (id)sub_1000B7AC0();
            }
            else {
              id v42 = *(id *)(v38 + 8 * i + 32);
            }
            uint64_t v43 = v42;
            [(id)v31 addSubAttachment:v42];
          }
        }
      }
      id v155 = v190;

      swift_bridgeObjectRelease_n();
LABEL_98:
      [(id)v31 writeMergeableData];
      uint64_t v156 = swift_bridgeObjectRetain();
      sub_1000726D0(v156);
      unint64_t v158 = v157;
      if (v157 >> 62)
      {
        id v164 = v33;
        swift_bridgeObjectRetain();
        uint64_t v159 = sub_1000B7BA0();
        if (v159) {
          goto LABEL_100;
        }
      }
      else
      {
        uint64_t v159 = *(void *)((v157 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t v160 = v33;
        swift_bridgeObjectRetain();
        if (v159)
        {
LABEL_100:
          if (v159 >= 1)
          {
            for (uint64_t j = 0; j != v159; ++j)
            {
              if ((v158 & 0xC000000000000001) != 0) {
                id v162 = (id)sub_1000B7AC0();
              }
              else {
                id v162 = *(id *)(v158 + 8 * j + 32);
              }
              v163 = v162;
              [(SEL *)v33 deleteObject:v162];
            }
            goto LABEL_107;
          }
          __break(1u);
          goto LABEL_109;
        }
      }
LABEL_107:

      swift_bridgeObjectRelease_n();
      return;
    }
    goto LABEL_114;
  }
  uint64_t v177 = v20;
  uint64_t v175 = v17;
  unint64_t v174 = v14;
  unint64_t v179 = v28;
  uint64_t v180 = v23;
  uint64_t v178 = v11;
  uint64_t v44 = v190;
  self;
  Class v45 = (void *)swift_dynamicCastObjCClass();
  if (v45)
  {
    id v184 = v45;
    unint64_t v46 = *(void *)(v183 + *(int *)(type metadata accessor for ICAttachmentArchiveModel() + 56) + 8);
    os_log_type_t v47 = a1;
    id v176 = v29;
    id v48 = v29;
    if (v46 >> 60 == 15) {
      Class isa = 0;
    }
    else {
      Class isa = sub_1000B6F20().super.isa;
    }
    uint64_t v69 = v44;
    [v47 setMergeableData:isa];

    id v70 = v184;
    id v71 = [v184 paperBundleDatabaseSubdirectoryURL];
    sub_1000B6EE0();

    sub_1000B6E70();
    uint64_t v72 = (void (*)(char *, char *))v69[1];
    uint64_t v73 = v178;
    v72(v26, v178);
    uint64_t v74 = (uint64_t)v179;
    sub_1000B6EA0();
    swift_bridgeObjectRelease();
    id v75 = [v70 paperBundleAssetsSubdirectoryURL];
    sub_1000B6EE0();

    sub_1000B6E70();
    v72(v26, v73);
    sub_1000B6EA0();
    swift_bridgeObjectRelease();
    uint64_t ObjectType = swift_getObjectType();
    id v77 = [v70 paperBundleURL];
    uint64_t v78 = (uint64_t)v177;
    sub_1000B6EE0();

    uint64_t v79 = v185;
    uint64_t v191 = ObjectType;
    sub_1000B7090();
    if (!v79)
    {
      v72((char *)v78, v73);
      id v81 = [v184 paperBundleDatabaseSubdirectoryURL];
      id v82 = v175;
      sub_1000B6EE0();

      sub_1000B70E0();
      v72(v82, v73);
      id v136 = [v184 paperBundleAssetsSubdirectoryURL];
      uint64_t v137 = v174;
      sub_1000B6EE0();

      uint64_t v138 = (uint64_t)v180;
      sub_1000B70E0();

      v72(v137, v73);
      v72((char *)v138, v73);
      v72(v179, v73);
      return;
    }
    uint64_t v185 = 0;
    uint64_t v80 = v78;
    uint64_t v83 = (uint64_t)v180;
    v72((char *)v80, v73);
    v72((char *)v83, v73);
    v72((char *)v74, v73);
    if (qword_1001036B0 == -1) {
      goto LABEL_30;
    }
    goto LABEL_110;
  }
  self;
  uint64_t v50 = (void *)swift_dynamicCastObjCClass();
  if (v50)
  {
    id v184 = v50;
    uint64_t v51 = type metadata accessor for ICAttachmentArchiveModel();
    uint64_t v52 = v185;
    if (!*(void *)(v183 + *(int *)(v51 + 92))) {
      return;
    }
    uint64_t v169 = *(void *)(v183 + *(int *)(v51 + 92));
    uint64_t v165 = v51;
    id v166 = v29;
    id v53 = [v184 table];
    unint64_t v54 = (unint64_t)[v53 rowCount];

    if ((v54 & 0x8000000000000000) != 0) {
      goto LABEL_112;
    }
    for (id k = v184; v54; --v54)
    {
      id v56 = [k table];
      [v56 removeRowAtIndex:0];
    }
    unint64_t v38 = (unint64_t)[k table];
    unint64_t v57 = (unint64_t)[(id)v38 columnCount];

    if ((v57 & 0x8000000000000000) != 0)
    {
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
      goto LABEL_116;
    }
    for (id m = v184; v57; --v57)
    {
      unint64_t v38 = (unint64_t)[m table];
      [(id)v38 removeColumnAtIndex:0];
    }
    id v59 = [m table];
    uint64_t v60 = v169;

    id v61 = [m table];
    uint64_t v62 = v60;
    uint64_t v63 = v61;
    uint64_t v64 = *(void *)(v60 + 16);
    uint64_t v33 = (SEL *)&selRef_accessibilityUserInputLabels;
    uint64_t v167 = v64;
    if (v64)
    {
      uint64_t v66 = v62 + 32;
      uint64_t v65 = *(void *)(v62 + 32);
      uint64_t v168 = v66;

      int v170 = v186 & 0x101;
      uint64_t v67 = swift_bridgeObjectRetain();
      unint64_t v68 = 0;
      while (1)
      {
        if (v68 >= *(void *)(v67 + 16))
        {
          __break(1u);
LABEL_112:
          __break(1u);
          goto LABEL_113;
        }
        uint64_t v104 = *(void *)(v168 + 8 * v68);
        uint64_t v173 = *(char **)(v104 + 16);
        if (!v173) {
          goto LABEL_38;
        }
        uint64_t v171 = v68;
        unint64_t v174 = (char *)(v104 + 32);
        swift_bridgeObjectRetain();
        unint64_t v31 = 0;
        uint64_t v172 = v104;
LABEL_42:
        if (v31 >= *(void *)(v104 + 16))
        {
LABEL_95:
          __break(1u);
          goto LABEL_96;
        }
        uint64_t v185 = v52;
        uint64_t v105 = (uint64_t *)&v174[24 * v31];
        uint64_t v106 = v105[1];
        uint64_t v177 = (char *)*v105;
        uint64_t v107 = v105[2];
        uint64_t v180 = (char *)v106;
        swift_bridgeObjectRetain();
        unint64_t v179 = (char *)v107;
        swift_bridgeObjectRetain();
        uint64_t v178 = (char *)[v184 attachment];
        if (!v178) {
          goto LABEL_115;
        }
        id v176 = (id)v31;
        uint64_t v175 = (char *)(v31 + 1);
        unint64_t v108 = sub_100031F70((uint64_t)_swiftEmptyArrayStorage);
        uint64_t v33 = (SEL *)sub_100032E20(&qword_100103BD0);
        uint64_t v109 = sub_1000B7BB0();
        int v99 = (void *)v109;
        int64_t v110 = 0;
        uint64_t v111 = 1 << *(unsigned char *)(v108 + 32);
        id v190 = (id)v108;
        uint64_t v113 = *(void *)(v108 + 64);
        unint64_t v31 = v108 + 64;
        uint64_t v112 = v113;
        unint64_t v186 = v31;
        if (v111 < 64) {
          uint64_t v114 = ~(-1 << v111);
        }
        else {
          uint64_t v114 = -1;
        }
        unint64_t v96 = v114 & v112;
        int64_t v187 = (unint64_t)(v111 + 63) >> 6;
        uint64_t v188 = v109 + 64;
        uint64_t v189 = (void *)v109;
        if ((v114 & v112) != 0)
        {
LABEL_48:
          unint64_t v115 = __clz(__rbit64(v96));
          v96 &= v96 - 1;
          unint64_t v38 = v115 | (v110 << 6);
          goto LABEL_62;
        }
        while (1)
        {
          BOOL v116 = __OFADD__(v110++, 1);
          if (v116)
          {
            __break(1u);
            goto LABEL_93;
          }
          if (v110 >= v187) {
            goto LABEL_74;
          }
          unint64_t v117 = *(void *)(v186 + 8 * v110);
          if (!v117) {
            break;
          }
LABEL_61:
          unint64_t v96 = (v117 - 1) & v117;
          unint64_t v38 = __clz(__rbit64(v117)) + (v110 << 6);
LABEL_62:
          uint64_t v119 = *((void *)v190 + 7);
          uint64_t v120 = (uint64_t *)(*((void *)v190 + 6) + 16 * v38);
          uint64_t v121 = v120[1];
          uint64_t v191 = *v120;
          uint64_t v122 = *(void **)(v119 + 8 * v38);
          swift_bridgeObjectRetain();
          id v123 = [v122 identifier];
          if (v123)
          {
            uint64_t v124 = v123;
            sub_1000B75B0();
          }
          id v125 = [v122 typeUTI];
          if (v125)
          {
            uint64_t v126 = v125;
            uint64_t v14 = (char *)sub_1000B75B0();
            unint64_t v31 = v127;
          }
          else
          {
            uint64_t v14 = 0;
            unint64_t v31 = 0;
          }
          uint64_t v33 = (SEL *)sub_100073ECC();
          uint64_t v128 = sub_1000B7870();
          int v99 = v189;
          *(void *)(v188 + ((v38 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v38;
          uint64_t v129 = (uint64_t *)(v99[6] + 16 * v38);
          *uint64_t v129 = v191;
          v129[1] = v121;
          *(void *)(v99[7] + 8 * v38) = v128;
          uint64_t v130 = v99[2];
          BOOL v116 = __OFADD__(v130, 1);
          uint64_t v131 = v130 + 1;
          if (v116)
          {
            __break(1u);
            goto LABEL_90;
          }
          v99[2] = v131;
          if (v96) {
            goto LABEL_48;
          }
        }
        int64_t v118 = v110 + 1;
        if (v110 + 1 >= v187) {
          goto LABEL_74;
        }
        unint64_t v117 = *(void *)(v186 + 8 * v118);
        if (v117) {
          goto LABEL_60;
        }
        int64_t v118 = v110 + 2;
        if (v110 + 2 >= v187) {
          goto LABEL_74;
        }
        unint64_t v117 = *(void *)(v186 + 8 * v118);
        if (v117) {
          goto LABEL_60;
        }
        int64_t v118 = v110 + 3;
        if (v110 + 3 >= v187) {
          goto LABEL_74;
        }
        unint64_t v117 = *(void *)(v186 + 8 * v118);
        if (v117) {
          goto LABEL_60;
        }
        int64_t v118 = v110 + 4;
        if (v110 + 4 < v187) {
          break;
        }
LABEL_74:
        uint64_t v132 = v185;
        unint64_t v38 = (unint64_t)v179;
        unsigned int v133 = v178;
        uint64_t v134 = (SEL *)sub_100098CCC((uint64_t)v99, (uint64_t)v178, (uint64_t)&off_1000F1F78, v170, v181, v182, a9, (uint64_t)v177, (uint64_t)v180, (uint64_t)v179);
        uint64_t v14 = v133;
        uint64_t v52 = v132;
        if (v132)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          id v153 = v166;

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          return;
        }
        uint64_t v33 = v134;

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        id v135 = [v184 table];
        [v135 setAttributedString:v33 columnIndex:v176 rowIndex:v171];

        unint64_t v31 = (unint64_t)v175;
        uint64_t v104 = v172;
        if (v175 != v173) {
          goto LABEL_42;
        }
        swift_bridgeObjectRelease();
        uint64_t v33 = (SEL *)&selRef_accessibilityUserInputLabels;
        uint64_t v67 = v169;
        unint64_t v68 = v171;
LABEL_38:
        if (++v68 == v167)
        {
LABEL_93:
          swift_bridgeObjectRelease();
          goto LABEL_78;
        }
      }
      unint64_t v117 = *(void *)(v186 + 8 * v118);
      if (!v117)
      {
        while (1)
        {
          int64_t v110 = v118 + 1;
          if (__OFADD__(v118, 1)) {
            break;
          }
          if (v110 >= v187) {
            goto LABEL_74;
          }
          unint64_t v117 = *(void *)(v186 + 8 * v110);
          ++v118;
          if (v117) {
            goto LABEL_61;
          }
        }
        __break(1u);
        goto LABEL_95;
      }
LABEL_60:
      int64_t v110 = v118;
      goto LABEL_61;
    }

LABEL_78:
    int v139 = *(unsigned __int8 *)(v183 + *(int *)(v165 + 96));
    id v140 = v184;
    if (v139 != 2)
    {
      BOOL v141 = (v139 & 1) == 0;
      id v142 = [v184 v33[315]];
      unsigned int v143 = [v142 isRightToLeft];

      if (((v141 ^ v143) & 1) == 0)
      {
        id v144 = [v140 table];
        [v144 reverseColumnDirection];
      }
    }
    [v140 writeMergeableData];
  }
  else
  {
    uint64_t v92 = (uint64_t)a1;
    self;
    uint64_t v93 = swift_dynamicCastObjCClass();
    uint64_t v94 = v185;
    if (v93)
    {
      uint64_t v95 = (void *)v93;
      unint64_t v31 = (unint64_t)v29;
      unint64_t v96 = (unint64_t)v95;
      id v97 = [v95 audioDocument];
      if (v97)
      {
        uint64_t v98 = v97;
        int v99 = [v97 document];

        uint64_t v100 = v183 + *(int *)(type metadata accessor for ICAttachmentArchiveModel() + 112);
        uint64_t v101 = *(void *)(v100 + 8);
        uint64_t v102 = v191;
        if (v101 == 1)
        {
          uint64_t v103 = 0;
        }
        else
        {
          char v147 = *(unsigned char *)(v100 + 72);
          uint64_t v148 = *(void *)(v100 + 64);
          int v149 = *(_DWORD *)(v100 + 56);
          uint64_t v150 = *(void *)(v100 + 48);
          v193[1] = *(void *)v100;
          v193[2] = v101;
          long long v151 = *(_OWORD *)(v100 + 32);
          long long v194 = *(_OWORD *)(v100 + 16);
          long long v195 = v151;
          uint64_t v196 = v150;
          char v197 = v149 & 1;
          uint64_t v198 = v148;
          char v199 = v147;
          id v152 = (char *)[(id)v96 audioDocument];
          if (!v152)
          {
LABEL_117:
            __break(1u);
            return;
          }
          uint64_t v14 = v152;
          uint64_t v128 = (uint64_t)sub_10009110C(v152, v92, (uint64_t)&off_1000F1F78, v102, v186 & 0x101, v181, v182, a9);
          if (v94)
          {

            return;
          }
LABEL_90:
          uint64_t v103 = v128;
        }
        [v99 setRootObject:v103];

        swift_unknownObjectRelease();
        [(id)v96 writeMergeableData];

        return;
      }
LABEL_116:
      __break(1u);
      goto LABEL_117;
    }

    Class v145 = 0;
    if (*(void *)(v183 + *(int *)(type metadata accessor for ICAttachmentArchiveModel() + 56) + 8) >> 60 != 15) {
      Class v145 = sub_1000B6F20().super.isa;
    }
    [a1 setMergeableData:v145];

    id v146 = [a1 attachmentModel];
  }
}

void sub_10006F794(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v151 = a2;
  uint64_t v5 = sub_100032E20((uint64_t *)&unk_1001042F0);
  __chkstk_darwin(v5 - 8);
  uint64_t v150 = (char *)&v131 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100032E20(&qword_100103A20);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  id v144 = (char *)&v131 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v131 - v10;
  *(unsigned char *)a3 = 4;
  *(_OWORD *)(a3 + 24) = 0u;
  *(_OWORD *)(a3 + 40) = 0u;
  *(_WORD *)(a3 + 56) = 514;
  uint64_t v12 = (int *)type metadata accessor for ICAttachmentArchiveModel();
  uint64_t v13 = a3 + v12[12];
  uint64_t v14 = sub_1000B6FD0();
  uint64_t v15 = *(void (**)(void))(*(void *)(v14 - 8) + 56);
  uint64_t v141 = v13;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v15)(v13, 1, 1, v14);
  uint64_t v142 = a3 + v12[13];
  unsigned int v143 = v15;
  v15();
  uint64_t v16 = (uint64_t *)(a3 + v12[14]);
  long long v149 = xmmword_1000CD420;
  uint64_t v132 = v16;
  *(_OWORD *)uint64_t v16 = xmmword_1000CD420;
  uint64_t v17 = (uint64_t *)(a3 + v12[15]);
  *uint64_t v17 = 0;
  v17[1] = 0;
  id v152 = v17;
  uint64_t v18 = a3 + v12[16];
  *(_OWORD *)uint64_t v18 = 0u;
  *(_OWORD *)(v18 + 16) = 0u;
  *(unsigned char *)(v18 + 32) = 1;
  uint64_t v19 = a3 + v12[17];
  *(_OWORD *)(v19 + 32) = 0u;
  *(_OWORD *)(v19 + 48) = 0u;
  *(_OWORD *)uint64_t v19 = 0u;
  *(_OWORD *)(v19 + 16) = 0u;
  *(unsigned char *)(v19 + 64) = 1;
  uint64_t v145 = v12[18];
  *(unsigned char *)(a3 + v145) = 4;
  uint64_t v146 = v12[19];
  *(unsigned char *)(a3 + v146) = 5;
  uint64_t v20 = a3 + v12[20];
  uint64_t v21 = sub_1000B6F10();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
  uint64_t v147 = v20;
  uint64_t v136 = v21;
  id v135 = v23;
  uint64_t v134 = v22 + 56;
  ((void (*)(uint64_t, uint64_t, uint64_t))v23)(v20, 1, 1);
  uint64_t v148 = (uint64_t *)(a3 + v12[21]);
  *(_OWORD *)uint64_t v148 = v149;
  uint64_t v24 = a3 + v12[22];
  *(void *)uint64_t v24 = 0;
  *(void *)(v24 + 8) = 0;
  uint64_t v138 = (void *)v24;
  *(unsigned char *)(v24 + 16) = 1;
  uint64_t v139 = v12[23];
  *(void *)(a3 + v139) = 0;
  uint64_t v140 = v12[24];
  *(unsigned char *)(a3 + v140) = 2;
  uint64_t v133 = v12[25];
  *(void *)(a3 + v133) = 0;
  uint64_t v25 = (void *)(a3 + v12[26]);
  *uint64_t v25 = 0;
  v25[1] = 0;
  *(void *)&long long v149 = v25;
  uint64_t v137 = v12[27];
  *(unsigned char *)(a3 + v137) = 3;
  char v26 = (_OWORD *)(a3 + v12[28]);
  *char v26 = xmmword_1000CCA80;
  v26[1] = 0u;
  v26[2] = 0u;
  v26[3] = 0u;
  uint64_t v131 = (uint64_t *)v26;
  *(_OWORD *)((char *)v26 + 57) = 0u;
  id v27 = [a1 identifier];
  if (v27)
  {
    int64_t v28 = v27;
    uint64_t v29 = sub_1000B75B0();
    unint64_t v31 = v30;
  }
  else
  {
    uint64_t v29 = 0;
    unint64_t v31 = 0xE000000000000000;
  }
  *(void *)(a3 + 8) = v29;
  *(void *)(a3 + 16) = v31;
  id v32 = [a1 typeUTI];
  if (v32)
  {
    uint64_t v33 = v32;
    uint64_t v34 = sub_1000B75B0();
    uint64_t v36 = v35;
  }
  else
  {
    uint64_t v34 = 0;
    uint64_t v36 = 0;
  }
  uint64_t v37 = v143;
  *(void *)(a3 + 64) = v34;
  *(void *)(a3 + 72) = v36;
  id v38 = a1;
  uint64_t v39 = sub_100073350(v38);
  uint64_t v41 = v40;

  *(void *)(a3 + 80) = v39;
  *(void *)(a3 + 88) = v41;
  id v42 = [v38 creationDate];
  if (v42)
  {
    uint64_t v43 = v42;
    sub_1000B6FA0();

    uint64_t v44 = 0;
  }
  else
  {
    uint64_t v44 = 1;
  }
  uint64_t v45 = (uint64_t)v144;
  uint64_t v46 = 1;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v37)(v11, v44, 1, v14);
  sub_10005613C((uint64_t)v11, v141, &qword_100103A20);
  id v47 = [v38 modificationDate];
  if (v47)
  {
    id v48 = v47;
    sub_1000B6FA0();

    uint64_t v46 = 0;
  }
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v37)(v45, v46, 1, v14);
  sub_10005613C(v45, v142, &qword_100103A20);
  id v49 = [v38 title];
  if (v49)
  {
    uint64_t v50 = v49;
    uint64_t v51 = sub_1000B75B0();
    uint64_t v53 = v52;
  }
  else
  {
    uint64_t v51 = 0;
    uint64_t v53 = 0;
  }
  unint64_t v54 = v152;
  swift_bridgeObjectRelease();
  *unint64_t v54 = v51;
  v54[1] = v53;
  [v38 bounds];
  uint64_t v55 = 0;
  v156.origin.double x = 0.0;
  v156.origin.double y = 0.0;
  v156.size.double width = 0.0;
  v156.size.double height = 0.0;
  BOOL v56 = CGRectEqualToRect(v155, v156);
  uint64_t v57 = 0;
  uint64_t v58 = 0;
  uint64_t v59 = 0;
  if (!v56)
  {
    [v38 bounds];
    uint64_t v55 = v60;
  }
  *(void *)uint64_t v18 = v55;
  *(void *)(v18 + 8) = v57;
  *(void *)(v18 + 16) = v58;
  *(void *)(v18 + 24) = v59;
  *(unsigned char *)(v18 + 32) = v56;
  id v61 = v38;
  sub_100073730(v61, (uint64_t)v153);

  sub_10004EA80((uint64_t)v153, v19, &qword_100104538);
  *(unsigned char *)(a3 + v145) = sub_100073910((int)[v61 orientation]);
  unsigned int v62 = [v61 imageFilterType];
  unint64_t v63 = 0x403020105uLL >> (8 * v62);
  if (v62 >= 5) {
    LOBYTE(v63) = 5;
  }
  *(unsigned char *)(a3 + v146) = v63;
  id v64 = [v61 urlString];
  if (v64)
  {
    uint64_t v65 = v64;
    sub_1000B75B0();

    swift_bridgeObjectRetain();
    uint64_t v66 = (uint64_t)v150;
    sub_1000B6F00();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v66 = (uint64_t)v150;
    v135(v150, 1, 1, v136);
  }
  uint64_t v67 = v151;
  sub_10005613C(v66, v147, (uint64_t *)&unk_1001042F0);
  id v68 = [v61 synapseData];
  if (v68)
  {
    uint64_t v69 = v68;
    uint64_t v70 = sub_1000B6F30();
    unint64_t v72 = v71;
  }
  else
  {
    uint64_t v70 = 0;
    unint64_t v72 = 0xF000000000000000;
  }
  uint64_t v73 = v148;
  sub_10004E77C(*v148, v148[1]);
  uint64_t *v73 = v70;
  v73[1] = v72;
  id v74 = [v61 synapseBasedMetadata];
  id v75 = v74;
  if (v74)
  {
    id v76 = [v74 selectedText];

    if (v76)
    {
      id v75 = (void *)sub_1000B75B0();
      uint64_t v78 = v77;

      goto LABEL_30;
    }
    id v75 = 0;
  }
  uint64_t v78 = 0;
LABEL_30:
  uint64_t v79 = (void *)v149;
  swift_bridgeObjectRelease();
  *uint64_t v79 = v75;
  v79[1] = v78;
  id v80 = [v61 mergeablePreferredViewSize];
  if (v80)
  {
    id v81 = v80;
    uint64_t v82 = sub_1000B6F30();
    unint64_t v84 = v83;

    sub_1000452E0(v82, v84);
    char v85 = sub_10004E258((uint64_t)[v61 preferredViewSize]);
    *(unsigned char *)(a3 + v137) = v85;
  }
  id v86 = [v61 location];
  if (v86)
  {
    BOOL v87 = v86;
    [v86 latitude];
    uint64_t v89 = v88;
    [v87 longitude];
    uint64_t v91 = v90;

    uint64_t v92 = v138;
    *uint64_t v138 = v89;
    v92[1] = v91;
    *((unsigned char *)v92 + 16) = 0;
  }
  id v93 = [v61 tableModel];
  if (v93)
  {
    uint64_t v94 = v93;
    uint64_t v95 = sub_100073A0C(v93, v67);
    uint64_t v96 = v139;
    swift_bridgeObjectRelease();
    *(void *)(a3 + v96) = v95;
    id v97 = [v94 table];
    LOBYTE(v96) = [v97 isRightToLeft];

    sub_10004E7F4((void *)v67, (void (*)(void, void, void, void, void, void))sub_10004E3F8);
    *(unsigned char *)(a3 + v140) = v96;
    if ((*(unsigned char *)(v67 + 51) & 1) == 0)
    {
LABEL_36:

      return;
    }
  }
  else
  {
    id v98 = [v61 attachmentModel];
    self;
    int v99 = (void *)swift_dynamicCastObjCClass();
    if (v99)
    {
      id v100 = [v99 subAttachmentIdentifiers];
      uint64_t v101 = sub_1000B76E0();

      uint64_t v102 = v133;
      swift_bridgeObjectRelease();
      sub_10004E7F4((void *)v67, (void (*)(void, void, void, void, void, void))sub_10004E3F8);
      *(void *)(a3 + v102) = v101;
      if ((*(unsigned char *)(v67 + 51) & 1) == 0) {
        goto LABEL_36;
      }
    }
    else
    {

      id v108 = [v61 audioModel];
      if (!v108) {
        goto LABEL_58;
      }
      uint64_t v109 = v108;
      id v110 = [v108 audioDocument];

      if (!v110)
      {
        __break(1u);
        return;
      }
      uint64_t v111 = (void *)sub_1000B7880();

      if (v111)
      {
        id v112 = v61;
        sub_10004E7F4((void *)v67, (void (*)(void, void, void, void, void, void))sub_10004E834);
        sub_100093D20(v111, v112, (void *)v67, (uint64_t)v154);
        uint64_t v113 = (uint64_t)v131;
        sub_100073BDC(*v131, v131[1], v131[2], v131[3], v131[4]);
        sub_10004E7F4((void *)v67, (void (*)(void, void, void, void, void, void))sub_10004E3F8);
        sub_10004EA80((uint64_t)v154, v113, &qword_100104540);
        if ((*(unsigned char *)(v67 + 51) & 1) == 0) {
          goto LABEL_36;
        }
      }
      else
      {
LABEL_58:
        id v125 = [v61 mergeableData];
        if (v125)
        {
          uint64_t v126 = v125;
          uint64_t v127 = sub_1000B6F30();
          unint64_t v129 = v128;
        }
        else
        {
          uint64_t v127 = 0;
          unint64_t v129 = 0xF000000000000000;
        }
        uint64_t v130 = v132;
        sub_10004E77C(*v132, v132[1]);
        sub_10004E7F4((void *)v67, (void (*)(void, void, void, void, void, void))sub_10004E3F8);
        uint64_t *v130 = v127;
        v130[1] = v129;
        if ((*(unsigned char *)(v67 + 51) & 1) == 0) {
          goto LABEL_36;
        }
      }
    }
  }
  id v103 = [v61 note];
  uint64_t v104 = v103;
  if (v103)
  {
    id v105 = [v103 identifier];

    if (v105)
    {
      uint64_t v104 = (void *)sub_1000B75B0();
      uint64_t v107 = v106;

      goto LABEL_49;
    }
    uint64_t v104 = 0;
  }
  uint64_t v107 = 0;
LABEL_49:
  swift_bridgeObjectRelease();
  *(void *)(a3 + 24) = v104;
  *(void *)(a3 + 32) = v107;
  id v114 = [v61 note];
  unint64_t v115 = v114;
  if (!v114)
  {
LABEL_53:
    uint64_t v118 = 0;
    goto LABEL_54;
  }
  id v116 = [v114 title];

  if (!v116)
  {
    unint64_t v115 = 0;
    goto LABEL_53;
  }
  unint64_t v115 = (void *)sub_1000B75B0();
  uint64_t v118 = v117;

LABEL_54:
  swift_bridgeObjectRelease();
  *(void *)(a3 + 40) = v115;
  *(void *)(a3 + 48) = v118;
  id v119 = [v61 title];
  if (v119)
  {
    uint64_t v120 = v119;
    uint64_t v121 = sub_1000B75B0();
    uint64_t v123 = v122;
  }
  else
  {
    uint64_t v121 = 0;
    uint64_t v123 = 0;
  }
  swift_bridgeObjectRelease();
  *unint64_t v54 = v121;
  v54[1] = v123;
  *(unsigned char *)(a3 + 56) = [v61 markedForDeletion];
  unsigned __int8 v124 = [v61 isPasswordProtected];

  *(unsigned char *)(a3 + 57) = v124;
}

uint64_t type metadata accessor for ICAttachmentArchiveModel()
{
  uint64_t result = qword_1001045A0;
  if (!qword_1001045A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100070448()
{
  uint64_t v0 = sub_1000B7490();
  sub_100038F18(v0, qword_100104520);
  sub_100038E8C(v0, (uint64_t)qword_100104520);
  return sub_1000B7470();
}

unint64_t sub_100070494(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x696669746E656469;
      break;
    case 2:
      return result;
    case 3:
      unint64_t result = 0x6954746E65726170;
      break;
    case 4:
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    case 6:
      unint64_t result = 0xD000000000000018;
      break;
    case 7:
      unint64_t result = 0x6C6946616964656DLL;
      break;
    case 8:
      unint64_t result = 0x4164657461657263;
      break;
    case 9:
      unint64_t result = 0x6465696669646F6DLL;
      break;
    case 10:
      unint64_t result = 1635017060;
      break;
    case 11:
      unint64_t result = 0x656C746974;
      break;
    case 12:
      unint64_t result = 0x73646E756F62;
      break;
    case 13:
      unint64_t result = 0x676E6970706F7263;
      break;
    case 14:
      unint64_t result = 0x7461746E6569726FLL;
      break;
    case 15:
      unint64_t result = 0x6C69466567616D69;
      break;
    case 16:
      unint64_t result = 7107189;
      break;
    case 17:
      unint64_t result = 0x4474657070696E73;
      break;
    case 18:
      unint64_t result = 0x616E6964726F6F63;
      break;
    case 19:
      unint64_t result = 1937207154;
      break;
    case 20:
      unint64_t result = 0x5474686769527369;
      break;
    case 21:
      unint64_t result = 0xD000000000000018;
      break;
    case 22:
      unint64_t result = 0x65746F75516C7275;
      break;
    case 23:
      unint64_t result = 0xD000000000000011;
      break;
    case 24:
      unint64_t result = 0x6365526F69647561;
      break;
    default:
      unint64_t result = 0x6E65644965707974;
      break;
  }
  return result;
}

uint64_t sub_1000707B4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100032E20(&qword_100104678);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100047028(a1, a1[3]);
  sub_1000765A8();
  sub_1000B7EB0();
  LOBYTE(v25) = *v3;
  char v31 = 0;
  sub_100051A0C();
  sub_1000B7D50();
  if (!v2)
  {
    LOBYTE(v25) = 1;
    sub_1000B7D10();
    LOBYTE(v25) = 2;
    sub_1000B7CC0();
    LOBYTE(v25) = 3;
    sub_1000B7CC0();
    LOBYTE(v25) = 4;
    sub_1000B7CD0();
    LOBYTE(v25) = 5;
    sub_1000B7CD0();
    LOBYTE(v25) = 6;
    sub_1000B7CC0();
    LOBYTE(v25) = 7;
    sub_1000B7CC0();
    uint64_t v9 = (int *)type metadata accessor for ICAttachmentArchiveModel();
    LOBYTE(v25) = 8;
    sub_1000B6FD0();
    sub_10007793C(&qword_100103D40, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_1000B7D00();
    LOBYTE(v25) = 9;
    sub_1000B7D00();
    long long v25 = *(_OWORD *)&v3[v9[14]];
    char v31 = 10;
    sub_10005A1A8();
    sub_1000B7D00();
    LOBYTE(v25) = 11;
    sub_1000B7CC0();
    uint64_t v10 = &v3[v9[16]];
    char v11 = v10[32];
    long long v12 = *((_OWORD *)v10 + 1);
    long long v25 = *(_OWORD *)v10;
    long long v26 = v12;
    LOBYTE(v27) = v11;
    char v31 = 12;
    type metadata accessor for CGRect(0);
    sub_10007793C(&qword_100104688, type metadata accessor for CGRect);
    sub_1000B7D00();
    uint64_t v13 = &v3[v9[17]];
    char v14 = v13[64];
    long long v15 = *((_OWORD *)v13 + 1);
    long long v25 = *(_OWORD *)v13;
    long long v26 = v15;
    long long v16 = *((_OWORD *)v13 + 3);
    long long v27 = *((_OWORD *)v13 + 2);
    long long v28 = v16;
    LOBYTE(v29) = v14;
    char v31 = 13;
    sub_1000765FC();
    sub_1000B7D00();
    LOBYTE(v25) = v3[v9[18]];
    char v31 = 14;
    sub_100076650();
    sub_1000B7D00();
    LOBYTE(v25) = v3[v9[19]];
    char v31 = 15;
    sub_1000766A4();
    sub_1000B7D00();
    LOBYTE(v25) = 16;
    sub_1000B6F10();
    sub_10007793C(&qword_1001046A8, (void (*)(uint64_t))&type metadata accessor for URL);
    sub_1000B7D00();
    long long v25 = *(_OWORD *)&v3[v9[21]];
    char v31 = 17;
    sub_1000B7D00();
    uint64_t v17 = &v3[v9[22]];
    char v18 = v17[16];
    long long v25 = *(_OWORD *)v17;
    LOBYTE(v26) = v18;
    char v31 = 18;
    sub_1000766F8();
    sub_1000B7D00();
    *(void *)&long long v25 = *(void *)&v3[v9[23]];
    char v31 = 19;
    sub_100032E20(&qword_1001046B8);
    sub_100076788(&qword_1001046C0, &qword_1001046B8, (void (*)(void))sub_10007674C);
    sub_1000B7D00();
    LOBYTE(v25) = 20;
    sub_1000B7CD0();
    *(void *)&long long v25 = *(void *)&v3[v9[25]];
    char v31 = 21;
    sub_100032E20(&qword_100104108);
    sub_10005C2AC(&qword_100104138);
    sub_1000B7D00();
    LOBYTE(v25) = 22;
    sub_1000B7CC0();
    LOBYTE(v25) = v3[v9[27]];
    char v31 = 23;
    sub_100051B08();
    sub_1000B7D00();
    uint64_t v19 = &v3[v9[28]];
    uint64_t v20 = *((void *)v19 + 8);
    char v21 = v19[72];
    long long v22 = *((_OWORD *)v19 + 1);
    long long v25 = *(_OWORD *)v19;
    long long v26 = v22;
    long long v23 = *((_OWORD *)v19 + 3);
    long long v27 = *((_OWORD *)v19 + 2);
    long long v28 = v23;
    uint64_t v29 = v20;
    char v30 = v21;
    char v31 = 24;
    sub_1000767F4();
    sub_1000B7D00();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100070FC4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v98 = a1;
  uint64_t v78 = a2;
  uint64_t v2 = sub_100032E20((uint64_t *)&unk_1001042F0);
  __chkstk_darwin(v2 - 8);
  uint64_t v77 = (uint64_t)&v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100032E20(&qword_100103A20);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v80 = (uint64_t)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  unint64_t v83 = (char *)&v73 - v7;
  uint64_t v84 = sub_100032E20(&qword_1001046D8);
  uint64_t v82 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  *(void *)&long long v97 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ICAttachmentArchiveModel();
  uint64_t v10 = (int *)(v9 - 8);
  __chkstk_darwin(v9);
  long long v12 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *long long v12 = 4;
  *(_OWORD *)(v12 + 40) = 0u;
  *(_OWORD *)(v12 + 24) = 0u;
  *((_WORD *)v12 + 28) = 514;
  *((_OWORD *)v12 + 4) = 0u;
  *((_OWORD *)v12 + 5) = 0u;
  uint64_t v13 = &v12[v10[14]];
  uint64_t v14 = sub_1000B6FD0();
  long long v15 = *(void (**)(void))(*(void *)(v14 - 8) + 56);
  *(void *)&long long v96 = v13;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v15)(v13, 1, 1, v14);
  *(void *)&long long v94 = &v12[v10[15]];
  uint64_t v81 = v14;
  v15();
  long long v16 = &v12[v10[16]];
  long long v95 = xmmword_1000CD420;
  *(void *)&long long v93 = v16;
  *(_OWORD *)long long v16 = xmmword_1000CD420;
  uint64_t v17 = &v12[v10[17]];
  *(void *)uint64_t v17 = 0;
  *((void *)v17 + 1) = 0;
  uint64_t v92 = v17;
  char v18 = &v12[v10[18]];
  *(_OWORD *)char v18 = 0u;
  *((_OWORD *)v18 + 1) = 0u;
  v18[32] = 1;
  uint64_t v19 = &v12[v10[19]];
  *((_OWORD *)v19 + 2) = 0u;
  *((_OWORD *)v19 + 3) = 0u;
  *(_OWORD *)uint64_t v19 = 0u;
  *((_OWORD *)v19 + 1) = 0u;
  v19[64] = 1;
  uint64_t v79 = v10[20];
  v12[v79] = 4;
  uint64_t v76 = v10[21];
  v12[v76] = 5;
  uint64_t v20 = (uint64_t)&v12[v10[22]];
  uint64_t v21 = sub_1000B6F10();
  long long v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
  uint64_t v91 = v20;
  v22(v20, 1, 1, v21);
  uint64_t v90 = &v12[v10[23]];
  *(_OWORD *)uint64_t v90 = v95;
  long long v23 = &v12[v10[24]];
  *(void *)long long v23 = 0;
  *((void *)v23 + 1) = 0;
  v23[16] = 1;
  uint64_t v89 = v10[25];
  *(void *)&v12[v89] = 0;
  uint64_t v24 = v10[26];
  v12[v24] = 2;
  uint64_t v87 = v10[27];
  *(void *)&v12[v87] = 0;
  long long v25 = &v12[v10[28]];
  *(void *)long long v25 = 0;
  *((void *)v25 + 1) = 0;
  uint64_t v88 = v25;
  uint64_t v26 = v10[29];
  v12[v26] = 3;
  uint64_t v27 = v10[30];
  *(void *)&long long v95 = v12;
  long long v28 = &v12[v27];
  *(_OWORD *)long long v28 = xmmword_1000CCA80;
  *((_OWORD *)v28 + 1) = 0u;
  *((_OWORD *)v28 + 2) = 0u;
  *((_OWORD *)v28 + 3) = 0u;
  id v86 = (uint64_t *)&v12[v27];
  *(_OWORD *)(v28 + 57) = 0u;
  sub_100047028(v98, v98[3]);
  sub_1000765A8();
  uint64_t v29 = v85;
  sub_1000B7EA0();
  if (v29)
  {
    sub_100037F98((uint64_t)v98);
    id v32 = v86;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100038E30(v96, &qword_100103A20);
    sub_100038E30(v94, &qword_100103A20);
    sub_10004E77C(*(void *)v93, *(void *)(v93 + 8));
    swift_bridgeObjectRelease();
    sub_100038E30(v91, (uint64_t *)&unk_1001042F0);
    sub_10004E77C(*(void *)v90, *((void *)v90 + 1));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_100073BDC(*v32, v32[1], v32[2], v32[3], v32[4]);
  }
  else
  {
    uint64_t v30 = (uint64_t)v83;
    char v85 = v19;
    id v74 = v23;
    uint64_t v75 = v24;
    uint64_t v31 = v82;
    char v105 = 0;
    sub_1000332D0();
    sub_1000B7CA0();
    uint64_t v33 = v95;
    *(unsigned char *)long long v95 = v99;
    LOBYTE(v99) = 1;
    *(void *)(v33 + 8) = sub_1000B7C60();
    *(void *)(v33 + 16) = v34;
    LOBYTE(v99) = 2;
    *(void *)(v33 + 24) = sub_1000B7C10();
    *(void *)(v33 + 32) = v35;
    LOBYTE(v99) = 3;
    *(void *)(v33 + 40) = sub_1000B7C10();
    *(void *)(v33 + 48) = v36;
    LOBYTE(v99) = 4;
    *(unsigned char *)(v33 + 56) = sub_1000B7C20();
    LOBYTE(v99) = 5;
    *(unsigned char *)(v33 + 57) = sub_1000B7C20();
    LOBYTE(v99) = 6;
    *(void *)(v33 + 64) = sub_1000B7C10();
    *(void *)(v33 + 72) = v37;
    LOBYTE(v99) = 7;
    *(void *)(v33 + 80) = sub_1000B7C10();
    *(void *)(v33 + 88) = v38;
    LOBYTE(v99) = 8;
    uint64_t v73 = sub_10007793C(&qword_100103DB8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_1000B7C50();
    sub_10005613C(v30, v96, &qword_100103A20);
    LOBYTE(v99) = 9;
    sub_1000B7C50();
    sub_10005613C(v80, v94, &qword_100103A20);
    char v105 = 10;
    sub_10005A04C();
    sub_1000B7C50();
    long long v39 = v99;
    uint64_t v40 = (_OWORD *)v93;
    sub_10004E77C(*(void *)v93, *(void *)(v93 + 8));
    *uint64_t v40 = v39;
    LOBYTE(v99) = 11;
    uint64_t v41 = sub_1000B7C10();
    uint64_t v43 = v42;
    uint64_t v44 = (uint64_t *)v92;
    swift_bridgeObjectRelease();
    *uint64_t v44 = v41;
    v44[1] = v43;
    type metadata accessor for CGRect(0);
    char v105 = 12;
    sub_10007793C(&qword_1001046E0, type metadata accessor for CGRect);
    sub_1000B7C50();
    char v45 = v101;
    long long v46 = v100;
    *(_OWORD *)char v18 = v99;
    *((_OWORD *)v18 + 1) = v46;
    v18[32] = v45;
    char v105 = 13;
    sub_100076848();
    sub_1000B7C50();
    char v47 = v103;
    long long v48 = v100;
    id v49 = v85;
    *(_OWORD *)char v85 = v99;
    *((_OWORD *)v49 + 1) = v48;
    long long v50 = v102;
    *((_OWORD *)v49 + 2) = v101;
    *((_OWORD *)v49 + 3) = v50;
    v49[64] = v47;
    char v105 = 14;
    sub_10007689C();
    sub_1000B7C50();
    *(unsigned char *)(v95 + v79) = v99;
    char v105 = 15;
    sub_1000768F0();
    sub_1000B7C50();
    *(unsigned char *)(v95 + v76) = v99;
    LOBYTE(v99) = 16;
    sub_10007793C(&qword_100104700, (void (*)(uint64_t))&type metadata accessor for URL);
    sub_1000B7C50();
    sub_10005613C(v77, v91, (uint64_t *)&unk_1001042F0);
    char v105 = 17;
    sub_1000B7C50();
    long long v51 = v99;
    uint64_t v52 = v90;
    sub_10004E77C(*(void *)v90, *((void *)v90 + 1));
    *(_OWORD *)uint64_t v52 = v51;
    char v105 = 18;
    sub_100076944();
    sub_1000B7C50();
    char v53 = v100;
    unint64_t v54 = v74;
    *(_OWORD *)id v74 = v99;
    v54[16] = v53;
    sub_100032E20(&qword_1001046B8);
    char v105 = 19;
    sub_100076788(&qword_100104710, &qword_1001046B8, (void (*)(void))sub_100076998);
    sub_1000B7C50();
    uint64_t v55 = v99;
    uint64_t v56 = v89;
    uint64_t v57 = v95;
    swift_bridgeObjectRelease();
    *(void *)(v57 + v56) = v55;
    LOBYTE(v99) = 20;
    *(unsigned char *)(v95 + v75) = sub_1000B7C20();
    sub_100032E20(&qword_100104108);
    char v105 = 21;
    sub_10005C2AC(&qword_100104110);
    sub_1000B7C50();
    uint64_t v58 = v99;
    uint64_t v59 = v87;
    uint64_t v60 = v95;
    swift_bridgeObjectRelease();
    *(void *)(v60 + v59) = v58;
    LOBYTE(v99) = 22;
    uint64_t v61 = sub_1000B7C10();
    uint64_t v63 = v62;
    id v64 = (uint64_t *)v88;
    swift_bridgeObjectRelease();
    uint64_t *v64 = v61;
    v64[1] = v63;
    char v105 = 23;
    sub_100051D58();
    sub_1000B7C50();
    *(unsigned char *)(v95 + v26) = v99;
    char v105 = 24;
    sub_1000769D4();
    uint64_t v65 = v84;
    uint64_t v66 = v97;
    sub_1000B7C50();
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v66, v65);
    long long v96 = v100;
    long long v97 = v99;
    long long v94 = v101;
    long long v93 = v102;
    uint64_t v67 = v103;
    LOBYTE(v66) = v104;
    id v68 = v86;
    sub_100073BDC(*v86, v86[1], v86[2], v86[3], v86[4]);
    long long v69 = v96;
    *(_OWORD *)id v68 = v97;
    *((_OWORD *)v68 + 1) = v69;
    long long v70 = v93;
    *((_OWORD *)v68 + 2) = v94;
    *((_OWORD *)v68 + 3) = v70;
    v68[8] = v67;
    *((unsigned char *)v68 + 72) = v66;
    uint64_t v71 = v95;
    sub_100076A28(v95, v78);
    sub_100037F98((uint64_t)v98);
    return sub_100076A8C(v71);
  }
}

unint64_t sub_100071ECC()
{
  return sub_100070494(*v0);
}

uint64_t sub_100071ED4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100076AE8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100071EFC(uint64_t a1)
{
  unint64_t v2 = sub_1000765A8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100071F38(uint64_t a1)
{
  unint64_t v2 = sub_1000765A8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100071F74@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100070FC4(a1, a2);
}

uint64_t sub_100071F8C(void *a1)
{
  return sub_1000707B4(a1);
}

uint64_t sub_100071FA4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void **a6)
{
  long long v28 = a6;
  uint64_t v9 = sub_1000B7030();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  long long v12 = (char *)&aBlock[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = _swiftEmptyArrayStorage;
  id v13 = [a4 table];
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v15 = (v11 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  long long v16 = (void *)((v15 + 60) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a4;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v17 + v14, v12, v9);
  unint64_t v18 = v17 + v15;
  long long v19 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)unint64_t v18 = *(_OWORD *)a5;
  *(_OWORD *)(v18 + 16) = v19;
  *(_OWORD *)(v18 + 32) = *(_OWORD *)(a5 + 32);
  *(void *)(v18 + 45) = *(void *)(a5 + 45);
  *(void *)((char *)v16 + v17) = &v30;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_100073DF8;
  *(void *)(v20 + 24) = v17;
  aBlock[4] = sub_100078774;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000725CC;
  uint64_t aBlock[3] = &unk_1000F09E0;
  uint64_t v21 = _Block_copy(aBlock);
  long long v22 = a4;
  sub_10004E7F4((void *)a5, (void (*)(void, void, void, void, void, void))sub_10004E834);
  swift_retain();
  swift_release();
  [v13 enumerateColumnsWithBlock:v21];

  _Block_release(v21);
  uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    uint64_t isEscapingClosureAtFileLocation = (uint64_t)v30;
    long long v16 = v28;
    a4 = *v28;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    void *v16 = a4;
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_3;
    }
  }
  a4 = sub_100035CB4(0, a4[2] + 1, 1, a4);
  void *v16 = a4;
LABEL_3:
  unint64_t v26 = a4[2];
  unint64_t v25 = a4[3];
  if (v26 >= v25 >> 1)
  {
    a4 = sub_100035CB4((void *)(v25 > 1), v26 + 1, 1, a4);
    void *v16 = a4;
  }
  a4[2] = v26 + 1;
  a4[v26 + 4] = isEscapingClosureAtFileLocation;
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_1000722E8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void *a6, void **a7)
{
  uint64_t v10 = sub_100032E20(&qword_100103BB0);
  __chkstk_darwin(v10 - 8);
  long long v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = [a4 table];
  Class isa = sub_1000B7000().super.isa;
  Class v15 = sub_1000B7000().super.isa;
  id v16 = [v13 mergeableStringForColumnID:isa rowID:v15];

  if (!v16)
  {
    sub_1000B7020();
    uint64_t v17 = sub_1000B7030();
    uint64_t v18 = *(void *)(v17 - 8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v12, 0, 1, v17);
    Class v19 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v12, 1, v17) != 1)
    {
      Class v19 = sub_1000B7000().super.isa;
      (*(void (**)(char *, uint64_t))(v18 + 8))(v12, v17);
    }
    id v16 = [objc_allocWithZone((Class)ICTTMergeableAttributedString) initWithReplicaID:v19];
  }
  id v20 = [a4 attachment];
  if (v20)
  {
    uint64_t v21 = v20;
    sub_10004E7F4(a6, (void (*)(void, void, void, void, void, void))sub_10004E834);
    id v22 = v16;
    id v23 = sub_10009F3C4(v22, v21, (uint64_t)a6);
    uint64_t v25 = v24;
    uint64_t v27 = v26;
    sub_10004E7F4(a6, (void (*)(void, void, void, void, void, void))sub_10004E3F8);
    long long v28 = *a7;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a7 = v28;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      long long v28 = sub_100035DC4(0, v28[2] + 1, 1, v28);
      *a7 = v28;
    }
    unint64_t v31 = v28[2];
    unint64_t v30 = v28[3];
    if (v31 >= v30 >> 1)
    {
      long long v28 = sub_100035DC4((void *)(v30 > 1), v31 + 1, 1, v28);
      *a7 = v28;
    }
    v28[2] = v31 + 1;
    id v32 = &v28[3 * v31];
    v32[4] = v23;
    v32[5] = v25;
    v32[6] = v27;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1000725CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_1000B7030();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(a1 + 32);
  sub_1000B7010();
  v11(v10, a3, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_1000726D0(uint64_t a1)
{
  int64_t v2 = 0;
  uint64_t v4 = a1 + 64;
  uint64_t v3 = *(void *)(a1 + 64);
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & v3;
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  if ((v6 & v3) != 0) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v12 = v2 + 1;
  if (!__OFADD__(v2, 1))
  {
    if (v12 < v8)
    {
      unint64_t v13 = *(void *)(v4 + 8 * v12);
      ++v2;
      if (v13) {
        goto LABEL_22;
      }
      int64_t v2 = v12 + 1;
      if (v12 + 1 >= v8) {
        goto LABEL_26;
      }
      unint64_t v13 = *(void *)(v4 + 8 * v2);
      if (v13) {
        goto LABEL_22;
      }
      int64_t v2 = v12 + 2;
      if (v12 + 2 >= v8) {
        goto LABEL_26;
      }
      unint64_t v13 = *(void *)(v4 + 8 * v2);
      if (v13) {
        goto LABEL_22;
      }
      int64_t v2 = v12 + 3;
      if (v12 + 3 >= v8) {
        goto LABEL_26;
      }
      unint64_t v13 = *(void *)(v4 + 8 * v2);
      if (v13)
      {
LABEL_22:
        unint64_t v7 = (v13 - 1) & v13;
        for (unint64_t i = __clz(__rbit64(v13)) + (v2 << 6); ; unint64_t i = v10 | (v2 << 6))
        {
          id v15 = *(id *)(*(void *)(a1 + 56) + 8 * i);
          id v16 = [v15 parentAttachment];
          if (v16)
          {
            uint64_t v9 = v16;

            if (!v7) {
              goto LABEL_7;
            }
          }
          else
          {
            sub_1000B7AF0();
            sub_1000B7B20();
            sub_1000B7B30();
            sub_1000B7B00();
            if (!v7) {
              goto LABEL_7;
            }
          }
LABEL_6:
          unint64_t v10 = __clz(__rbit64(v7));
          v7 &= v7 - 1;
        }
      }
      int64_t v14 = v12 + 4;
      if (v14 < v8)
      {
        unint64_t v13 = *(void *)(v4 + 8 * v14);
        if (v13)
        {
          int64_t v2 = v14;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v2 = v14 + 1;
          if (__OFADD__(v14, 1)) {
            goto LABEL_28;
          }
          if (v2 >= v8) {
            break;
          }
          unint64_t v13 = *(void *)(v4 + 8 * v2);
          ++v14;
          if (v13) {
            goto LABEL_22;
          }
        }
      }
    }
LABEL_26:
    swift_release();
    return;
  }
  __break(1u);
LABEL_28:
  __break(1u);
}

uint64_t sub_1000728A4(char a1)
{
  return *(void *)&aTopleft_0[8 * a1];
}

uint64_t sub_1000728C4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100032E20(&qword_100104740);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100047028(a1, a1[3]);
  sub_1000778E8();
  sub_1000B7EB0();
  long long v12 = *v3;
  char v11 = 0;
  type metadata accessor for CGPoint(0);
  sub_10007793C(&qword_100104748, type metadata accessor for CGPoint);
  sub_1000B7D50();
  if (!v2)
  {
    long long v12 = v3[1];
    char v11 = 1;
    sub_1000B7D50();
    long long v12 = v3[2];
    char v11 = 2;
    sub_1000B7D50();
    long long v12 = v3[3];
    char v11 = 3;
    sub_1000B7D50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100072AF8()
{
  return sub_1000728A4(*v0);
}

uint64_t sub_100072B00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100077484(a1, a2);
  *a3 = result;
  return result;
}

void sub_100072B28(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_100072B34(uint64_t a1)
{
  unint64_t v2 = sub_1000778E8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100072B70(uint64_t a1)
{
  unint64_t v2 = sub_1000778E8();

  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_100072BAC@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_100077640(a1, v7);
  if (!v2)
  {
    long long v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    double result = *(double *)&v8;
    long long v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_100072BF0(void *a1)
{
  return sub_1000728C4(a1);
}

uint64_t sub_100072C08(char a1)
{
  return qword_1000CDD00[a1];
}

uint64_t sub_100072C28(char *a1, char *a2)
{
  return sub_100038FCC(*a1, *a2);
}

Swift::Int sub_100072C34()
{
  return sub_10005CA60();
}

uint64_t sub_100072C3C()
{
  return sub_10005CE90();
}

Swift::Int sub_100072C44()
{
  return sub_10005DA6C();
}

uint64_t sub_100072C4C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100078184(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_100072C7C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100072C08(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_100072CA8(void *a1@<X8>)
{
  *a1 = &off_1000EF300;
}

uint64_t sub_100072CB8()
{
  return sub_1000B76B0();
}

uint64_t sub_100072D18()
{
  return sub_1000B76A0();
}

uint64_t sub_100072D68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000730F0(a1, a2, a3, a4, (void (*)(void))sub_100078510, (void (*)(void))sub_100078088);
}

uint64_t sub_100072D94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000731B0(a1, a2, a3, a4, (void (*)(void))sub_100078510, (void (*)(void))sub_100078088);
}

uint64_t sub_100072DC0(char a1)
{
  return *(void *)&aPhoto_3[8 * a1];
}

uint64_t sub_100072DE0(char a1)
{
  if (a1) {
    return 0x64757469676E6F6CLL;
  }
  else {
    return 0x656475746974616CLL;
  }
}

uint64_t sub_100072E1C(void *a1)
{
  uint64_t v3 = sub_100032E20(&qword_1001047C0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  long long v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100047028(a1, a1[3]);
  sub_100078130();
  sub_1000B7EB0();
  char v10 = 0;
  sub_1000B7D30();
  if (!v1)
  {
    char v9 = 1;
    sub_1000B7D30();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_100072F84(char *a1, char *a2)
{
  return sub_100039054(*a1, *a2);
}

Swift::Int sub_100072F90()
{
  return sub_10005CACC();
}

uint64_t sub_100072F98()
{
  return sub_10005CEE4();
}

Swift::Int sub_100072FA0()
{
  return sub_10005DA04();
}

uint64_t sub_100072FA8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000781D0(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_100072FD8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100072DC0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_100073004(void *a1@<X8>)
{
  *a1 = &off_1000EF3C0;
}

uint64_t sub_100073014()
{
  return sub_1000B76B0();
}

uint64_t sub_100073074()
{
  return sub_1000B76A0();
}

uint64_t sub_1000730C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000730F0(a1, a2, a3, a4, (void (*)(void))sub_1000784BC, (void (*)(void))sub_1000780DC);
}

uint64_t sub_1000730F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), void (*a6)(void))
{
  a5();
  a6();

  return sub_1000B70F0();
}

uint64_t sub_100073184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000731B0(a1, a2, a3, a4, (void (*)(void))sub_1000784BC, (void (*)(void))sub_1000780DC);
}

uint64_t sub_1000731B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), void (*a6)(void))
{
  a5();
  a6();

  return sub_1000B7110();
}

BOOL sub_10007323C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_100073254()
{
  return sub_100072DE0(*v0);
}

uint64_t sub_10007325C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10007821C(a1, a2);
  *a3 = result;
  return result;
}

void sub_100073284(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_100073290(uint64_t a1)
{
  unint64_t v2 = sub_100078130();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000732CC(uint64_t a1)
{
  unint64_t v2 = sub_100078130();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100073308(void *a1@<X0>, uint64_t a2@<X8>)
{
  double v4 = sub_100078310(a1);
  if (!v2)
  {
    *(double *)a2 = v4;
    *(void *)(a2 + 8) = v5;
  }
}

uint64_t sub_100073334(void *a1)
{
  return sub_100072E1C(a1);
}

uint64_t sub_100073350(void *a1)
{
  id v1 = [a1 media];
  uint64_t v2 = v1;
  if (!v1) {
    return 0;
  }
  id v3 = [v1 filename];

  uint64_t v4 = sub_1000B75B0();
  uint64_t v6 = v5;

  sub_100032E20(&qword_100103700);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000CB7A0;
  if (qword_100103648 != -1) {
    swift_once();
  }
  uint64_t v8 = *(void *)algn_10010E948;
  *(void *)(inited + 32) = qword_10010E940;
  *(void *)(inited + 40) = v8;
  uint64_t v9 = qword_100103650;
  swift_bridgeObjectRetain();
  if (v9 != -1) {
    swift_once();
  }
  uint64_t v10 = *(void *)algn_10010E958;
  *(void *)(inited + 48) = qword_10010E950;
  *(void *)(inited + 56) = v10;
  char v11 = sub_1000314FC(v4, v6, (void *)inited);
  swift_setDeallocating();
  swift_bridgeObjectRetain();
  swift_arrayDestroy();
  if (v11)
  {
    sub_100032EC0();
    uint64_t v12 = sub_1000B7A10();
    swift_bridgeObjectRelease();
    sub_1000315C4(1, v12);
    swift_bridgeObjectRetain();
    sub_100032E20(&qword_100103710);
    sub_100038F84((unint64_t *)&qword_100103718, &qword_100103710);
    uint64_t v13 = sub_1000B7550();
    swift_unknownObjectRelease();
    uint64_t v14 = *(void *)(v12 + 16);
    if (v14)
    {
      uint64_t v15 = v12 + 16 * v14;
      uint64_t v16 = *(void *)(v15 + 16);
      uint64_t v17 = *(void **)(v15 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v19 = v13;
      v20._countAndFlagsBits = 3027488;
      v20._object = (void *)0xE300000000000000;
      sub_1000B7650(v20);
      v21._countAndFlagsBits = v16;
      v21._object = v17;
      sub_1000B7650(v21);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v19 = v13;
      v22._countAndFlagsBits = 12832;
      v22._object = (void *)0xE200000000000000;
      sub_1000B7650(v22);
    }
    return v19;
  }
  return v4;
}

void *sub_100073600(uint64_t a1, uint64_t a2)
{
  uint64_t result = _swiftEmptyArrayStorage;
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = (uint64_t *)(a1 + 40);
    do
    {
      if (*(void *)(a2 + 16))
      {
        uint64_t v7 = *(v6 - 1);
        uint64_t v8 = *v6;
        swift_bridgeObjectRetain_n();
        unint64_t v9 = sub_10006A250(v7, v8);
        if (v10)
        {
          id v11 = *(id *)(*(void *)(a2 + 56) + 8 * v9);
          swift_bridgeObjectRelease_n();
          sub_1000B76C0();
          if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1000B7710();
          }
          sub_1000B7740();
          sub_1000B7700();
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }
      }
      v6 += 2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return result;
}

id sub_100073730@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  [a1 croppingQuadTopLeftX];
  if (v4 == 0.0
    && ([a1 croppingQuadTopLeftY], v5 == 1.0)
    && ([a1 croppingQuadTopRightX], v6 == 1.0)
    && ([a1 croppingQuadTopRightY], v7 == 1.0)
    && ([a1 croppingQuadBottomRightX], v8 == 1.0)
    && ([a1 croppingQuadBottomRightY], v9 == 0.0)
    && ([a1 croppingQuadBottomLeftX], v10 == 0.0)
    && (id result = [a1 croppingQuadBottomLeftY], v12 == 0.0))
  {
    uint64_t v13 = 0;
    char v14 = 1;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    uint64_t v21 = 0;
  }
  else
  {
    [a1 croppingQuadTopLeftX];
    uint64_t v13 = v22;
    [a1 croppingQuadTopLeftY];
    uint64_t v15 = v23;
    [a1 croppingQuadTopRightX];
    uint64_t v16 = v24;
    [a1 croppingQuadTopRightY];
    uint64_t v17 = v25;
    [a1 croppingQuadBottomRightX];
    uint64_t v18 = v26;
    [a1 croppingQuadBottomRightY];
    uint64_t v19 = v27;
    [a1 croppingQuadBottomLeftX];
    uint64_t v20 = v28;
    id result = [a1 croppingQuadBottomLeftY];
    char v14 = 0;
  }
  *(void *)a2 = v13;
  *(void *)(a2 + 8) = v15;
  *(void *)(a2 + 16) = v16;
  *(void *)(a2 + 24) = v17;
  *(void *)(a2 + 32) = v18;
  *(void *)(a2 + 40) = v19;
  *(void *)(a2 + 48) = v20;
  *(void *)(a2 + 56) = v21;
  *(unsigned char *)(a2 + 64) = v14;
  return result;
}

uint64_t sub_100073910(unint64_t a1)
{
  if (a1 < 4) {
    return 0x3020104u >> (8 * a1);
  }
  if (qword_1001036B0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000B7490();
  sub_100038E8C(v2, (uint64_t)qword_100104520);
  id v3 = sub_1000B7480();
  os_log_type_t v4 = sub_1000B7860();
  if (os_log_type_enabled(v3, v4))
  {
    double v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)double v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Unknown drawing orientation â€” returning nil", v5, 2u);
    swift_slowDealloc();
  }

  return 4;
}

uint64_t sub_100073A0C(void *a1, uint64_t a2)
{
  uint64_t v13 = _swiftEmptyArrayStorage;
  id v4 = [a1 table];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v5 + 24) = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 40) = v6;
  *(_OWORD *)(v5 + 56) = *(_OWORD *)(a2 + 32);
  *(void *)(v5 + 69) = *(void *)(a2 + 45);
  *(void *)(v5 + 80) = &v13;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_100073C9C;
  *(void *)(v7 + 24) = v5;
  aBlock[4] = sub_100073CBC;
  aBlock[5] = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000725CC;
  uint64_t aBlock[3] = &unk_1000F0968;
  double v8 = _Block_copy(aBlock);
  id v9 = a1;
  sub_10004E7F4((void *)a2, (void (*)(void, void, void, void, void, void))sub_10004E834);
  swift_retain();
  swift_release();
  [v4 enumerateRowsWithBlock:v8];

  _Block_release(v8);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v4)
  {
    __break(1u);
  }
  else
  {
    id v11 = v13;
    swift_release();
    return (uint64_t)v11;
  }
  return result;
}

uint64_t sub_100073BDC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a2 != 1)
  {
    sub_10004E888(result, a2);
    sub_10004E888(a4, a5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100073C44()
{
  if (*(void *)(v0 + 32) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_100073C9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100071FA4(a1, a2, a3, *(void **)(v3 + 16), v3 + 24, *(void ***)(v3 + 80));
}

uint64_t sub_100073CAC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100073CBC()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100073CE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100073CF4()
{
  return swift_release();
}

uint64_t sub_100073CFC()
{
  uint64_t v1 = sub_1000B7030();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  if (*(void *)(v0 + v5 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return _swift_deallocObject(v0, ((v5 + 60) & 0xFFFFFFFFFFFFFFF8) + 8, v3 | 7);
}

void sub_100073DF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(sub_1000B7030() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  double v10 = *(void **)(v3 + 16);
  id v11 = *(void ***)(v3 + ((v9 + 60) & 0xFFFFFFFFFFFFFFF8));

  sub_1000722E8(a1, a2, a3, v10, v3 + v8, (void *)(v3 + v9), v11);
}

uint64_t sub_100073EBC()
{
  return _swift_deallocObject(v0, 32, 7);
}

unint64_t sub_100073ECC()
{
  unint64_t result = qword_100103BD8;
  if (!qword_100103BD8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100103BD8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ICAttachmentArchiveModel.Cropping(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ICAttachmentArchiveModel.Cropping(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 64) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ICAttachmentArchiveModel.Cropping()
{
  return &type metadata for ICAttachmentArchiveModel.Cropping;
}

void *sub_100073F78(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) == 0)
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v7;
    uint64_t v8 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v8;
    uint64_t v9 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v9;
    *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
    uint64_t v10 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v10;
    uint64_t v11 = a2[11];
    uint64_t v12 = a3[12];
    __dst = (void *)(a1 + v12);
    unint64_t v72 = (char *)a2 + v12;
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v11;
    uint64_t v13 = sub_1000B6FD0();
    uint64_t v73 = *(void *)(v13 - 8);
    char v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48);
    uint64_t v15 = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v72, 1, v15))
    {
      uint64_t v16 = sub_100032E20(&qword_100103A20);
      memcpy(__dst, v72, *(void *)(*(void *)(v16 - 8) + 64));
      uint64_t v17 = v73;
    }
    else
    {
      uint64_t v17 = v73;
      (*(void (**)(void *, char *, uint64_t))(v73 + 16))(__dst, v72, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v73 + 56))(__dst, 0, 1, v15);
    }
    uint64_t v19 = a3[13];
    uint64_t v20 = (char *)v4 + v19;
    uint64_t v21 = (char *)a2 + v19;
    if (v14((char *)a2 + v19, 1, v15))
    {
      uint64_t v22 = sub_100032E20(&qword_100103A20);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v20, v21, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v15);
    }
    uint64_t v23 = a3[14];
    uint64_t v24 = (char *)v4 + v23;
    uint64_t v25 = (uint64_t *)((char *)a2 + v23);
    unint64_t v26 = v25[1];
    if (v26 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    }
    else
    {
      uint64_t v27 = *v25;
      sub_10004E998(*v25, v25[1]);
      *(void *)uint64_t v24 = v27;
      *((void *)v24 + 1) = v26;
    }
    uint64_t v28 = a3[15];
    uint64_t v29 = a3[16];
    unint64_t v30 = (void *)((char *)v4 + v28);
    unint64_t v31 = (uint64_t *)((char *)a2 + v28);
    uint64_t v32 = v31[1];
    void *v30 = *v31;
    v30[1] = v32;
    uint64_t v33 = (char *)v4 + v29;
    uint64_t v34 = (uint64_t)a2 + v29;
    v33[32] = *(unsigned char *)(v34 + 32);
    long long v35 = *(_OWORD *)(v34 + 16);
    *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
    *((_OWORD *)v33 + 1) = v35;
    uint64_t v36 = a3[17];
    uint64_t v37 = a3[18];
    uint64_t v38 = (char *)v4 + v36;
    uint64_t v39 = (uint64_t)a2 + v36;
    v38[64] = *(unsigned char *)(v39 + 64);
    long long v40 = *(_OWORD *)(v39 + 48);
    *((_OWORD *)v38 + 2) = *(_OWORD *)(v39 + 32);
    *((_OWORD *)v38 + 3) = v40;
    long long v41 = *(_OWORD *)(v39 + 16);
    *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
    *((_OWORD *)v38 + 1) = v41;
    *((unsigned char *)v4 + v37) = *((unsigned char *)a2 + v37);
    uint64_t v42 = a3[20];
    *((unsigned char *)v4 + a3[19]) = *((unsigned char *)a2 + a3[19]);
    uint64_t v43 = (char *)v4 + v42;
    uint64_t v44 = (char *)a2 + v42;
    uint64_t v45 = sub_1000B6F10();
    uint64_t v46 = *(void *)(v45 - 8);
    char v47 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48);
    swift_bridgeObjectRetain();
    if (v47(v44, 1, v45))
    {
      uint64_t v48 = sub_100032E20((uint64_t *)&unk_1001042F0);
      memcpy(v43, v44, *(void *)(*(void *)(v48 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v43, v44, v45);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
    }
    uint64_t v49 = a3[21];
    long long v50 = (char *)v4 + v49;
    long long v51 = (uint64_t *)((char *)a2 + v49);
    unint64_t v52 = v51[1];
    if (v52 >> 60 == 15)
    {
      *(_OWORD *)long long v50 = *(_OWORD *)v51;
    }
    else
    {
      uint64_t v53 = *v51;
      sub_10004E998(*v51, v51[1]);
      *(void *)long long v50 = v53;
      *((void *)v50 + 1) = v52;
    }
    uint64_t v54 = a3[22];
    uint64_t v55 = a3[23];
    uint64_t v56 = (char *)v4 + v54;
    uint64_t v57 = (uint64_t)a2 + v54;
    *(_OWORD *)uint64_t v56 = *(_OWORD *)v57;
    v56[16] = *(unsigned char *)(v57 + 16);
    *(void *)((char *)v4 + v55) = *(uint64_t *)((char *)a2 + v55);
    uint64_t v58 = a3[25];
    *((unsigned char *)v4 + a3[24]) = *((unsigned char *)a2 + a3[24]);
    *(void *)((char *)v4 + v58) = *(uint64_t *)((char *)a2 + v58);
    uint64_t v59 = a3[26];
    uint64_t v60 = a3[27];
    uint64_t v61 = (void *)((char *)v4 + v59);
    uint64_t v62 = (uint64_t *)((char *)a2 + v59);
    uint64_t v63 = v62[1];
    void *v61 = *v62;
    v61[1] = v63;
    *((unsigned char *)v4 + v60) = *((unsigned char *)a2 + v60);
    uint64_t v64 = a3[28];
    uint64_t v65 = (char *)v4 + v64;
    uint64_t v66 = (uint64_t)a2 + v64;
    uint64_t v67 = *(uint64_t *)((char *)a2 + v64 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v67)
    {
      if (v67 == 1)
      {
        long long v68 = *(_OWORD *)(v66 + 48);
        *((_OWORD *)v65 + 2) = *(_OWORD *)(v66 + 32);
        *((_OWORD *)v65 + 3) = v68;
        *(_OWORD *)(v65 + 57) = *(_OWORD *)(v66 + 57);
        long long v69 = *(_OWORD *)(v66 + 16);
        *(_OWORD *)uint64_t v65 = *(_OWORD *)v66;
        *((_OWORD *)v65 + 1) = v69;
        return v4;
      }
      *(void *)uint64_t v65 = *(void *)v66;
      *((void *)v65 + 1) = v67;
      *((void *)v65 + 2) = *(void *)(v66 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v70 = *(void *)(v66 + 32);
      if (!v70) {
        goto LABEL_24;
      }
    }
    else
    {
      *(_OWORD *)uint64_t v65 = *(_OWORD *)v66;
      *((void *)v65 + 2) = *(void *)(v66 + 16);
      uint64_t v70 = *(void *)(v66 + 32);
      if (!v70)
      {
LABEL_24:
        *(_OWORD *)(v65 + 24) = *(_OWORD *)(v66 + 24);
        *((void *)v65 + 5) = *(void *)(v66 + 40);
        goto LABEL_25;
      }
    }
    *((void *)v65 + 3) = *(void *)(v66 + 24);
    *((void *)v65 + 4) = v70;
    *((void *)v65 + 5) = *(void *)(v66 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_25:
    *((void *)v65 + 6) = *(void *)(v66 + 48);
    v65[56] = *(unsigned char *)(v66 + 56);
    *((void *)v65 + 8) = *(void *)(v66 + 64);
    v65[72] = *(unsigned char *)(v66 + 72);
    swift_bridgeObjectRetain();
    return v4;
  }
  uint64_t v18 = *a2;
  void *v4 = *a2;
  uint64_t v4 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return v4;
}

uint64_t sub_1000744FC(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[12];
  uint64_t v5 = sub_1000B6FD0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = a1 + a2[13];
  if (!v7(v8, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  }
  uint64_t v9 = (uint64_t *)(a1 + a2[14]);
  unint64_t v10 = v9[1];
  if (v10 >> 60 != 15) {
    sub_1000452E0(*v9, v10);
  }
  swift_bridgeObjectRelease();
  uint64_t v11 = a1 + a2[20];
  uint64_t v12 = sub_1000B6F10();
  uint64_t v13 = *(void *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  char v14 = (uint64_t *)(a1 + a2[21]);
  unint64_t v15 = v14[1];
  if (v15 >> 60 != 15) {
    sub_1000452E0(*v14, v15);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v16 = a1 + a2[28];
  uint64_t result = *(void *)(v16 + 8);
  if (result)
  {
    if (result == 1) {
      return result;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v16 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_100074774(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  uint64_t v10 = *(void *)(a2 + 88);
  uint64_t v11 = a3[12];
  __dst = (void *)(a1 + v11);
  uint64_t v70 = (const void *)(a2 + v11);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v10;
  uint64_t v12 = sub_1000B6FD0();
  uint64_t v71 = *(void *)(v12 - 8);
  uint64_t v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v71 + 48);
  uint64_t v14 = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v70, 1, v14))
  {
    uint64_t v15 = sub_100032E20(&qword_100103A20);
    memcpy(__dst, v70, *(void *)(*(void *)(v15 - 8) + 64));
    uint64_t v16 = v71;
  }
  else
  {
    uint64_t v16 = v71;
    (*(void (**)(void *, const void *, uint64_t))(v71 + 16))(__dst, v70, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v71 + 56))(__dst, 0, 1, v14);
  }
  uint64_t v17 = a3[13];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (const void *)(a2 + v17);
  if (v13((const void *)(a2 + v17), 1, v14))
  {
    uint64_t v20 = sub_100032E20(&qword_100103A20);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v18, v19, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v18, 0, 1, v14);
  }
  uint64_t v21 = a3[14];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = (uint64_t *)(a2 + v21);
  unint64_t v24 = v23[1];
  if (v24 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  }
  else
  {
    uint64_t v25 = *v23;
    sub_10004E998(*v23, v23[1]);
    *(void *)uint64_t v22 = v25;
    *(void *)(v22 + 8) = v24;
  }
  uint64_t v26 = a3[15];
  uint64_t v27 = a3[16];
  uint64_t v28 = (void *)(a1 + v26);
  uint64_t v29 = (void *)(a2 + v26);
  uint64_t v30 = v29[1];
  void *v28 = *v29;
  v28[1] = v30;
  uint64_t v31 = a1 + v27;
  uint64_t v32 = a2 + v27;
  *(unsigned char *)(v31 + 32) = *(unsigned char *)(v32 + 32);
  long long v33 = *(_OWORD *)(v32 + 16);
  *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
  *(_OWORD *)(v31 + 16) = v33;
  uint64_t v34 = a3[17];
  uint64_t v35 = a3[18];
  uint64_t v36 = a1 + v34;
  uint64_t v37 = a2 + v34;
  *(unsigned char *)(v36 + 64) = *(unsigned char *)(v37 + 64);
  long long v38 = *(_OWORD *)(v37 + 48);
  *(_OWORD *)(v36 + 32) = *(_OWORD *)(v37 + 32);
  *(_OWORD *)(v36 + 48) = v38;
  long long v39 = *(_OWORD *)(v37 + 16);
  *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
  *(_OWORD *)(v36 + 16) = v39;
  *(unsigned char *)(a1 + v35) = *(unsigned char *)(a2 + v35);
  uint64_t v40 = a3[20];
  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  long long v41 = (void *)(a1 + v40);
  uint64_t v42 = (const void *)(a2 + v40);
  uint64_t v43 = sub_1000B6F10();
  uint64_t v44 = *(void *)(v43 - 8);
  uint64_t v45 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v44 + 48);
  swift_bridgeObjectRetain();
  if (v45(v42, 1, v43))
  {
    uint64_t v46 = sub_100032E20((uint64_t *)&unk_1001042F0);
    memcpy(v41, v42, *(void *)(*(void *)(v46 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v44 + 16))(v41, v42, v43);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
  }
  uint64_t v47 = a3[21];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = (uint64_t *)(a2 + v47);
  unint64_t v50 = v49[1];
  if (v50 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
  }
  else
  {
    uint64_t v51 = *v49;
    sub_10004E998(*v49, v49[1]);
    *(void *)uint64_t v48 = v51;
    *(void *)(v48 + 8) = v50;
  }
  uint64_t v52 = a3[22];
  uint64_t v53 = a3[23];
  uint64_t v54 = a1 + v52;
  uint64_t v55 = a2 + v52;
  *(_OWORD *)uint64_t v54 = *(_OWORD *)v55;
  *(unsigned char *)(v54 + 16) = *(unsigned char *)(v55 + 16);
  *(void *)(a1 + v53) = *(void *)(a2 + v53);
  uint64_t v56 = a3[25];
  *(unsigned char *)(a1 + a3[24]) = *(unsigned char *)(a2 + a3[24]);
  *(void *)(a1 + v56) = *(void *)(a2 + v56);
  uint64_t v57 = a3[26];
  uint64_t v58 = a3[27];
  uint64_t v59 = (void *)(a1 + v57);
  uint64_t v60 = (void *)(a2 + v57);
  uint64_t v61 = v60[1];
  void *v59 = *v60;
  v59[1] = v61;
  *(unsigned char *)(a1 + v58) = *(unsigned char *)(a2 + v58);
  uint64_t v62 = a3[28];
  uint64_t v63 = a1 + v62;
  uint64_t v64 = a2 + v62;
  uint64_t v65 = *(void *)(a2 + v62 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v65)
  {
    *(_OWORD *)uint64_t v63 = *(_OWORD *)v64;
    *(void *)(v63 + 16) = *(void *)(v64 + 16);
    uint64_t v68 = *(void *)(v64 + 32);
    if (!v68)
    {
LABEL_22:
      *(_OWORD *)(v63 + 24) = *(_OWORD *)(v64 + 24);
      *(void *)(v63 + 40) = *(void *)(v64 + 40);
      goto LABEL_23;
    }
LABEL_20:
    *(void *)(v63 + 24) = *(void *)(v64 + 24);
    *(void *)(v63 + 32) = v68;
    *(void *)(v63 + 40) = *(void *)(v64 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_23:
    *(void *)(v63 + 48) = *(void *)(v64 + 48);
    *(unsigned char *)(v63 + 56) = *(unsigned char *)(v64 + 56);
    *(void *)(v63 + 64) = *(void *)(v64 + 64);
    *(unsigned char *)(v63 + 72) = *(unsigned char *)(v64 + 72);
    swift_bridgeObjectRetain();
    return a1;
  }
  if (v65 != 1)
  {
    *(void *)uint64_t v63 = *(void *)v64;
    *(void *)(v63 + 8) = v65;
    *(void *)(v63 + 16) = *(void *)(v64 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v68 = *(void *)(v64 + 32);
    if (!v68) {
      goto LABEL_22;
    }
    goto LABEL_20;
  }
  long long v66 = *(_OWORD *)(v64 + 48);
  *(_OWORD *)(v63 + 32) = *(_OWORD *)(v64 + 32);
  *(_OWORD *)(v63 + 48) = v66;
  *(_OWORD *)(v63 + 57) = *(_OWORD *)(v64 + 57);
  long long v67 = *(_OWORD *)(v64 + 16);
  *(_OWORD *)uint64_t v63 = *(_OWORD *)v64;
  *(_OWORD *)(v63 + 16) = v67;
  return a1;
}

uint64_t sub_100074CA8(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[12];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_1000B6FD0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_100032E20(&qword_100103A20);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[13];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  int v18 = v11((void *)(a1 + v15), 1, v9);
  int v19 = v11(v17, 1, v9);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v16, v17, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v16, v9);
LABEL_12:
    uint64_t v20 = sub_100032E20(&qword_100103A20);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v16, v17, v9);
LABEL_13:
  uint64_t v21 = a3[14];
  uint64_t v22 = (uint64_t *)(a1 + v21);
  uint64_t v23 = (uint64_t *)(a2 + v21);
  unint64_t v24 = *(void *)(a2 + v21 + 8);
  if (*(void *)(a1 + v21 + 8) >> 60 == 15)
  {
    if (v24 >> 60 != 15)
    {
      uint64_t v25 = *v23;
      sub_10004E998(v25, v24);
      *uint64_t v22 = v25;
      v22[1] = v24;
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v24 >> 60 == 15)
  {
    sub_1000755D0((uint64_t)v22);
LABEL_18:
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
    goto LABEL_20;
  }
  uint64_t v26 = *v23;
  sub_10004E998(v26, v24);
  uint64_t v27 = *v22;
  unint64_t v28 = v22[1];
  *uint64_t v22 = v26;
  v22[1] = v24;
  sub_1000452E0(v27, v28);
LABEL_20:
  uint64_t v29 = a3[15];
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = (void *)(a2 + v29);
  void *v30 = *v31;
  v30[1] = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v32 = a3[16];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  char v35 = *(unsigned char *)(v34 + 32);
  long long v36 = *(_OWORD *)(v34 + 16);
  *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
  *(_OWORD *)(v33 + 16) = v36;
  *(unsigned char *)(v33 + 32) = v35;
  uint64_t v37 = a3[17];
  uint64_t v38 = a1 + v37;
  uint64_t v39 = a2 + v37;
  long long v40 = *(_OWORD *)(v39 + 16);
  long long v41 = *(_OWORD *)(v39 + 32);
  long long v42 = *(_OWORD *)(v39 + 48);
  *(unsigned char *)(v38 + 64) = *(unsigned char *)(v39 + 64);
  *(_OWORD *)(v38 + 32) = v41;
  *(_OWORD *)(v38 + 48) = v42;
  *(_OWORD *)(v38 + 16) = v40;
  *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  uint64_t v43 = a3[20];
  uint64_t v44 = (void *)(a1 + v43);
  uint64_t v45 = (void *)(a2 + v43);
  uint64_t v46 = sub_1000B6F10();
  uint64_t v47 = *(void *)(v46 - 8);
  uint64_t v48 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v47 + 48);
  int v49 = v48(v44, 1, v46);
  int v50 = v48(v45, 1, v46);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(void *, void *, uint64_t))(v47 + 16))(v44, v45, v46);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
      goto LABEL_26;
    }
    goto LABEL_25;
  }
  if (v50)
  {
    (*(void (**)(void *, uint64_t))(v47 + 8))(v44, v46);
LABEL_25:
    uint64_t v51 = sub_100032E20((uint64_t *)&unk_1001042F0);
    memcpy(v44, v45, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_26;
  }
  (*(void (**)(void *, void *, uint64_t))(v47 + 24))(v44, v45, v46);
LABEL_26:
  uint64_t v52 = a3[21];
  uint64_t v53 = (uint64_t *)(a1 + v52);
  uint64_t v54 = (uint64_t *)(a2 + v52);
  unint64_t v55 = *(void *)(a2 + v52 + 8);
  if (*(void *)(a1 + v52 + 8) >> 60 == 15)
  {
    if (v55 >> 60 != 15)
    {
      uint64_t v56 = *v54;
      sub_10004E998(v56, v55);
      *uint64_t v53 = v56;
      v53[1] = v55;
      goto LABEL_33;
    }
    goto LABEL_31;
  }
  if (v55 >> 60 == 15)
  {
    sub_1000755D0((uint64_t)v53);
LABEL_31:
    *(_OWORD *)uint64_t v53 = *(_OWORD *)v54;
    goto LABEL_33;
  }
  uint64_t v57 = *v54;
  sub_10004E998(v57, v55);
  uint64_t v58 = *v53;
  unint64_t v59 = v53[1];
  *uint64_t v53 = v57;
  v53[1] = v55;
  sub_1000452E0(v58, v59);
LABEL_33:
  uint64_t v60 = a3[22];
  uint64_t v61 = a1 + v60;
  uint64_t v62 = (long long *)(a2 + v60);
  long long v63 = *v62;
  *(unsigned char *)(v61 + 16) = *((unsigned char *)v62 + 16);
  *(_OWORD *)uint64_t v61 = v63;
  *(void *)(a1 + a3[23]) = *(void *)(a2 + a3[23]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[24]) = *(unsigned char *)(a2 + a3[24]);
  *(void *)(a1 + a3[25]) = *(void *)(a2 + a3[25]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v64 = a3[26];
  uint64_t v65 = (void *)(a1 + v64);
  long long v66 = (void *)(a2 + v64);
  *uint64_t v65 = *v66;
  v65[1] = v66[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[27]) = *(unsigned char *)(a2 + a3[27]);
  uint64_t v67 = a3[28];
  uint64_t v68 = a1 + v67;
  long long v69 = (long long *)(a2 + v67);
  uint64_t v70 = *(void *)(a1 + v67 + 8);
  uint64_t v71 = *((void *)v69 + 1);
  if (v70 == 1)
  {
    if (v71 == 1)
    {
      *(_OWORD *)uint64_t v68 = *v69;
      long long v72 = v69[1];
      long long v73 = v69[2];
      long long v74 = v69[3];
      *(_OWORD *)(v68 + 57) = *(long long *)((char *)v69 + 57);
      *(_OWORD *)(v68 + 32) = v73;
      *(_OWORD *)(v68 + 48) = v74;
      *(_OWORD *)(v68 + 16) = v72;
      return a1;
    }
    if (v71)
    {
      *(void *)uint64_t v68 = *(void *)v69;
      *(void *)(v68 + 8) = *((void *)v69 + 1);
      *(void *)(v68 + 16) = *((void *)v69 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (*((void *)v69 + 4))
      {
LABEL_40:
        *(void *)(v68 + 24) = *((void *)v69 + 3);
        *(void *)(v68 + 32) = *((void *)v69 + 4);
        *(void *)(v68 + 40) = *((void *)v69 + 5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_49:
        uint64_t v80 = *((void *)v69 + 6);
        *(unsigned char *)(v68 + 56) = *((unsigned char *)v69 + 56);
        *(void *)(v68 + 48) = v80;
        *(void *)(v68 + 64) = *((void *)v69 + 8);
        *(unsigned char *)(v68 + 72) = *((unsigned char *)v69 + 72);
        swift_bridgeObjectRetain();
        return a1;
      }
    }
    else
    {
      long long v78 = *v69;
      *(void *)(v68 + 16) = *((void *)v69 + 2);
      *(_OWORD *)uint64_t v68 = v78;
      if (*((void *)v69 + 4)) {
        goto LABEL_40;
      }
    }
    long long v79 = *(long long *)((char *)v69 + 24);
    *(void *)(v68 + 40) = *((void *)v69 + 5);
    *(_OWORD *)(v68 + 24) = v79;
    goto LABEL_49;
  }
  if (v71 == 1)
  {
    sub_100075624(v68);
    *(_OWORD *)uint64_t v68 = *v69;
    long long v76 = v69[2];
    long long v75 = v69[3];
    long long v77 = v69[1];
    *(_OWORD *)(v68 + 57) = *(long long *)((char *)v69 + 57);
    *(_OWORD *)(v68 + 32) = v76;
    *(_OWORD *)(v68 + 48) = v75;
    *(_OWORD *)(v68 + 16) = v77;
  }
  else
  {
    if (v70)
    {
      if (v71)
      {
        *(void *)uint64_t v68 = *(void *)v69;
        *(void *)(v68 + 8) = *((void *)v69 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)(v68 + 16) = *((void *)v69 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_100050708(v68);
        uint64_t v81 = *((void *)v69 + 2);
        *(_OWORD *)uint64_t v68 = *v69;
        *(void *)(v68 + 16) = v81;
      }
    }
    else if (v71)
    {
      *(void *)uint64_t v68 = *(void *)v69;
      *(void *)(v68 + 8) = *((void *)v69 + 1);
      *(void *)(v68 + 16) = *((void *)v69 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v82 = *v69;
      *(void *)(v68 + 16) = *((void *)v69 + 2);
      *(_OWORD *)uint64_t v68 = v82;
    }
    unint64_t v83 = (_OWORD *)(v68 + 24);
    uint64_t v84 = (long long *)((char *)v69 + 24);
    uint64_t v85 = *((void *)v69 + 4);
    if (*(void *)(v68 + 32))
    {
      if (v85)
      {
        *(void *)(v68 + 24) = *((void *)v69 + 3);
        *(void *)(v68 + 32) = *((void *)v69 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)(v68 + 40) = *((void *)v69 + 5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_100050708(v68 + 24);
        uint64_t v86 = *((void *)v69 + 5);
        *unint64_t v83 = *v84;
        *(void *)(v68 + 40) = v86;
      }
    }
    else if (v85)
    {
      *(void *)(v68 + 24) = *((void *)v69 + 3);
      *(void *)(v68 + 32) = *((void *)v69 + 4);
      *(void *)(v68 + 40) = *((void *)v69 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v87 = *v84;
      *(void *)(v68 + 40) = *((void *)v69 + 5);
      *unint64_t v83 = v87;
    }
    uint64_t v88 = *((void *)v69 + 6);
    *(unsigned char *)(v68 + 56) = *((unsigned char *)v69 + 56);
    *(void *)(v68 + 48) = v88;
    *(void *)(v68 + 64) = *((void *)v69 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v68 + 72) = *((unsigned char *)v69 + 72);
  }
  return a1;
}

uint64_t sub_1000755D0(uint64_t a1)
{
  return a1;
}

uint64_t sub_100075624(uint64_t a1)
{
  return a1;
}

uint64_t sub_100075678(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  long long v6 = *(_OWORD *)(a2 + 80);
  uint64_t v7 = a3[12];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  uint64_t v10 = sub_1000B6FD0();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_100032E20(&qword_100103A20);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[13];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  if (v12((const void *)(a2 + v14), 1, v10))
  {
    uint64_t v17 = sub_100032E20(&qword_100103A20);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v15, v16, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  uint64_t v18 = a3[15];
  *(_OWORD *)(a1 + a3[14]) = *(_OWORD *)(a2 + a3[14]);
  *(_OWORD *)(a1 + v18) = *(_OWORD *)(a2 + v18);
  uint64_t v19 = a3[16];
  uint64_t v20 = a3[17];
  uint64_t v21 = a1 + v19;
  uint64_t v22 = a2 + v19;
  long long v23 = *(_OWORD *)(v22 + 16);
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  *(_OWORD *)(v21 + 16) = v23;
  *(unsigned char *)(v21 + 32) = *(unsigned char *)(v22 + 32);
  uint64_t v24 = a1 + v20;
  uint64_t v25 = a2 + v20;
  *(unsigned char *)(v24 + 64) = *(unsigned char *)(v25 + 64);
  long long v26 = *(_OWORD *)(v25 + 48);
  *(_OWORD *)(v24 + 32) = *(_OWORD *)(v25 + 32);
  *(_OWORD *)(v24 + 48) = v26;
  long long v27 = *(_OWORD *)(v25 + 16);
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  *(_OWORD *)(v24 + 16) = v27;
  uint64_t v28 = a3[19];
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  *(unsigned char *)(a1 + v28) = *(unsigned char *)(a2 + v28);
  uint64_t v29 = a3[20];
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = (const void *)(a2 + v29);
  uint64_t v32 = sub_1000B6F10();
  uint64_t v33 = *(void *)(v32 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
  {
    uint64_t v34 = sub_100032E20((uint64_t *)&unk_1001042F0);
    memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v33 + 32))(v30, v31, v32);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
  }
  uint64_t v35 = a3[22];
  *(_OWORD *)(a1 + a3[21]) = *(_OWORD *)(a2 + a3[21]);
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
  *(unsigned char *)(v36 + 16) = *(unsigned char *)(v37 + 16);
  uint64_t v38 = a3[24];
  *(void *)(a1 + a3[23]) = *(void *)(a2 + a3[23]);
  *(unsigned char *)(a1 + v38) = *(unsigned char *)(a2 + v38);
  uint64_t v39 = a3[26];
  *(void *)(a1 + a3[25]) = *(void *)(a2 + a3[25]);
  *(_OWORD *)(a1 + v39) = *(_OWORD *)(a2 + v39);
  uint64_t v40 = a3[28];
  *(unsigned char *)(a1 + a3[27]) = *(unsigned char *)(a2 + a3[27]);
  long long v41 = (_OWORD *)(a1 + v40);
  long long v42 = (_OWORD *)(a2 + v40);
  *(_OWORD *)((char *)v41 + 57) = *(_OWORD *)((char *)v42 + 57);
  long long v43 = v42[3];
  v41[2] = v42[2];
  v41[3] = v43;
  long long v44 = v42[1];
  *long long v41 = *v42;
  v41[1] = v44;
  return a1;
}

uint64_t sub_100075A1C(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[12];
  int v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = sub_1000B6FD0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    uint64_t v19 = sub_100032E20(&qword_100103A20);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v12, v13, v14);
LABEL_7:
  uint64_t v20 = a3[13];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  int v23 = v16((void *)(a1 + v20), 1, v14);
  int v24 = v16(v22, 1, v14);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v21, v22, v14);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v21, 0, 1, v14);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v24)
  {
    (*(void (**)(void *, uint64_t))(v15 + 8))(v21, v14);
LABEL_12:
    uint64_t v25 = sub_100032E20(&qword_100103A20);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v21, v22, v14);
LABEL_13:
  uint64_t v26 = a3[14];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  unint64_t v29 = *(void *)(a1 + v26 + 8);
  if (v29 >> 60 == 15)
  {
LABEL_16:
    *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
    goto LABEL_18;
  }
  unint64_t v30 = *(void *)(v28 + 8);
  if (v30 >> 60 == 15)
  {
    sub_1000755D0(v27);
    goto LABEL_16;
  }
  uint64_t v31 = *(void *)v27;
  *(void *)uint64_t v27 = *(void *)v28;
  *(void *)(v27 + 8) = v30;
  sub_1000452E0(v31, v29);
LABEL_18:
  uint64_t v32 = a3[15];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (uint64_t *)(a2 + v32);
  uint64_t v36 = *v34;
  uint64_t v35 = v34[1];
  void *v33 = v36;
  v33[1] = v35;
  swift_bridgeObjectRelease();
  uint64_t v37 = a3[16];
  uint64_t v38 = a3[17];
  uint64_t v39 = a1 + v37;
  uint64_t v40 = a2 + v37;
  *(unsigned char *)(v39 + 32) = *(unsigned char *)(v40 + 32);
  long long v41 = *(_OWORD *)(v40 + 16);
  *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
  *(_OWORD *)(v39 + 16) = v41;
  uint64_t v42 = a1 + v38;
  uint64_t v43 = a2 + v38;
  *(unsigned char *)(v42 + 64) = *(unsigned char *)(v43 + 64);
  long long v44 = *(_OWORD *)(v43 + 48);
  *(_OWORD *)(v42 + 32) = *(_OWORD *)(v43 + 32);
  *(_OWORD *)(v42 + 48) = v44;
  long long v45 = *(_OWORD *)(v43 + 16);
  *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
  *(_OWORD *)(v42 + 16) = v45;
  uint64_t v46 = a3[19];
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  *(unsigned char *)(a1 + v46) = *(unsigned char *)(a2 + v46);
  uint64_t v47 = a3[20];
  uint64_t v48 = (void *)(a1 + v47);
  int v49 = (void *)(a2 + v47);
  uint64_t v50 = sub_1000B6F10();
  uint64_t v51 = *(void *)(v50 - 8);
  uint64_t v52 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v51 + 48);
  int v53 = v52(v48, 1, v50);
  int v54 = v52(v49, 1, v50);
  if (v53)
  {
    if (!v54)
    {
      (*(void (**)(void *, void *, uint64_t))(v51 + 32))(v48, v49, v50);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  if (v54)
  {
    (*(void (**)(void *, uint64_t))(v51 + 8))(v48, v50);
LABEL_23:
    uint64_t v55 = sub_100032E20((uint64_t *)&unk_1001042F0);
    memcpy(v48, v49, *(void *)(*(void *)(v55 - 8) + 64));
    goto LABEL_24;
  }
  (*(void (**)(void *, void *, uint64_t))(v51 + 40))(v48, v49, v50);
LABEL_24:
  uint64_t v56 = a3[21];
  uint64_t v57 = a1 + v56;
  uint64_t v58 = a2 + v56;
  unint64_t v59 = *(void *)(a1 + v56 + 8);
  if (v59 >> 60 == 15)
  {
LABEL_27:
    *(_OWORD *)uint64_t v57 = *(_OWORD *)v58;
    goto LABEL_29;
  }
  unint64_t v60 = *(void *)(v58 + 8);
  if (v60 >> 60 == 15)
  {
    sub_1000755D0(v57);
    goto LABEL_27;
  }
  uint64_t v61 = *(void *)v57;
  *(void *)uint64_t v57 = *(void *)v58;
  *(void *)(v57 + 8) = v60;
  sub_1000452E0(v61, v59);
LABEL_29:
  uint64_t v62 = a3[22];
  uint64_t v63 = a3[23];
  uint64_t v64 = a1 + v62;
  uint64_t v65 = a2 + v62;
  *(_OWORD *)uint64_t v64 = *(_OWORD *)v65;
  *(unsigned char *)(v64 + 16) = *(unsigned char *)(v65 + 16);
  *(void *)(a1 + v63) = *(void *)(a2 + v63);
  swift_bridgeObjectRelease();
  uint64_t v66 = a3[25];
  *(unsigned char *)(a1 + a3[24]) = *(unsigned char *)(a2 + a3[24]);
  *(void *)(a1 + v66) = *(void *)(a2 + v66);
  swift_bridgeObjectRelease();
  uint64_t v67 = a3[26];
  uint64_t v68 = (void *)(a1 + v67);
  long long v69 = (uint64_t *)(a2 + v67);
  uint64_t v71 = *v69;
  uint64_t v70 = v69[1];
  *uint64_t v68 = v71;
  v68[1] = v70;
  swift_bridgeObjectRelease();
  uint64_t v72 = a3[28];
  *(unsigned char *)(a1 + a3[27]) = *(unsigned char *)(a2 + a3[27]);
  uint64_t v73 = a1 + v72;
  uint64_t v74 = a2 + v72;
  uint64_t v75 = *(void *)(a1 + v72 + 8);
  if (v75 != 1)
  {
    uint64_t v76 = *(void *)(v74 + 8);
    if (v76 == 1)
    {
      sub_100075624(a1 + v72);
      goto LABEL_32;
    }
    if (v75)
    {
      if (v76)
      {
        *(void *)uint64_t v73 = *(void *)v74;
        *(void *)(v73 + 8) = v76;
        swift_bridgeObjectRelease();
        *(void *)(v73 + 16) = *(void *)(v74 + 16);
        swift_bridgeObjectRelease();
        goto LABEL_41;
      }
      sub_100050708(a1 + v72);
    }
    *(_OWORD *)uint64_t v73 = *(_OWORD *)v74;
    *(void *)(v73 + 16) = *(void *)(v74 + 16);
LABEL_41:
    if (*(void *)(v73 + 32))
    {
      uint64_t v79 = *(void *)(v74 + 32);
      if (v79)
      {
        *(void *)(v73 + 24) = *(void *)(v74 + 24);
        *(void *)(v73 + 32) = v79;
        swift_bridgeObjectRelease();
        *(void *)(v73 + 40) = *(void *)(v74 + 40);
        swift_bridgeObjectRelease();
LABEL_46:
        *(void *)(v73 + 48) = *(void *)(v74 + 48);
        *(unsigned char *)(v73 + 56) = *(unsigned char *)(v74 + 56);
        *(void *)(v73 + 64) = *(void *)(v74 + 64);
        swift_bridgeObjectRelease();
        *(unsigned char *)(v73 + 72) = *(unsigned char *)(v74 + 72);
        return a1;
      }
      sub_100050708(v73 + 24);
    }
    *(_OWORD *)(v73 + 24) = *(_OWORD *)(v74 + 24);
    *(void *)(v73 + 40) = *(void *)(v74 + 40);
    goto LABEL_46;
  }
LABEL_32:
  long long v77 = *(_OWORD *)(v74 + 48);
  *(_OWORD *)(v73 + 32) = *(_OWORD *)(v74 + 32);
  *(_OWORD *)(v73 + 48) = v77;
  *(_OWORD *)(v73 + 57) = *(_OWORD *)(v74 + 57);
  long long v78 = *(_OWORD *)(v74 + 16);
  *(_OWORD *)uint64_t v73 = *(_OWORD *)v74;
  *(_OWORD *)(v73 + 16) = v78;
  return a1;
}

uint64_t sub_1000760A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000760B8);
}

uint64_t sub_1000760B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100032E20(&qword_100103A20);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 48);
      int v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100032E20((uint64_t *)&unk_1001042F0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 80);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1000761EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100076200);
}

uint64_t sub_100076200(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_100032E20(&qword_100103A20);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 48);
      int v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100032E20((uint64_t *)&unk_1001042F0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 80);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_100076334()
{
  sub_1000764D0(319, (unint64_t *)&qword_100103C58, (void (*)(uint64_t))&type metadata accessor for Date);
  if (v0 <= 0x3F)
  {
    sub_1000764D0(319, (unint64_t *)&unk_1001045B0, (void (*)(uint64_t))&type metadata accessor for URL);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1000764D0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1000B79E0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_100076524(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_10007793C(&qword_100103B18, (void (*)(uint64_t))type metadata accessor for ICAttachmentArchiveModel);
  uint64_t result = sub_10007793C(&qword_100103EA0, (void (*)(uint64_t))type metadata accessor for ICAttachmentArchiveModel);
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1000765A8()
{
  unint64_t result = qword_100104680;
  if (!qword_100104680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104680);
  }
  return result;
}

unint64_t sub_1000765FC()
{
  unint64_t result = qword_100104690;
  if (!qword_100104690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104690);
  }
  return result;
}

unint64_t sub_100076650()
{
  unint64_t result = qword_100104698;
  if (!qword_100104698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104698);
  }
  return result;
}

unint64_t sub_1000766A4()
{
  unint64_t result = qword_1001046A0;
  if (!qword_1001046A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001046A0);
  }
  return result;
}

unint64_t sub_1000766F8()
{
  unint64_t result = qword_1001046B0;
  if (!qword_1001046B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001046B0);
  }
  return result;
}

uint64_t sub_10007674C()
{
  return sub_100076788(&qword_1001046C8, &qword_100103918, (void (*)(void))sub_100051BB0);
}

uint64_t sub_100076788(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100032F70(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000767F4()
{
  unint64_t result = qword_1001046D0;
  if (!qword_1001046D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001046D0);
  }
  return result;
}

unint64_t sub_100076848()
{
  unint64_t result = qword_1001046E8;
  if (!qword_1001046E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001046E8);
  }
  return result;
}

unint64_t sub_10007689C()
{
  unint64_t result = qword_1001046F0;
  if (!qword_1001046F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001046F0);
  }
  return result;
}

unint64_t sub_1000768F0()
{
  unint64_t result = qword_1001046F8;
  if (!qword_1001046F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001046F8);
  }
  return result;
}

unint64_t sub_100076944()
{
  unint64_t result = qword_100104708;
  if (!qword_100104708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104708);
  }
  return result;
}

uint64_t sub_100076998()
{
  return sub_100076788(&qword_100104718, &qword_100103918, (void (*)(void))sub_100051E00);
}

unint64_t sub_1000769D4()
{
  unint64_t result = qword_100104720;
  if (!qword_100104720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104720);
  }
  return result;
}

uint64_t sub_100076A28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ICAttachmentArchiveModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100076A8C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ICAttachmentArchiveModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100076AE8(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6E65644965707974 && a2 == 0xEE00726569666974;
  if (v3 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001000C86D0 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6954746E65726170 && a2 == 0xEB00000000656C74 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001000C86F0 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001000C8710 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001000C8DB0 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6C6946616964656DLL && a2 == 0xED0000656D616E65 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x4164657461657263 && a2 == 0xE900000000000074 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6465696669646F6DLL && a2 == 0xEA00000000007441 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 1635017060 && a2 == 0xE400000000000000 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x73646E756F62 && a2 == 0xE600000000000000 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x676E6970706F7263 && a2 == 0xE800000000000000 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x7461746E6569726FLL && a2 == 0xEB000000006E6F69 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x6C69466567616D69 && a2 == 0xEB00000000726574 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x4474657070696E73 && a2 == 0xEB00000000617461 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x616E6964726F6F63 && a2 == 0xEA00000000006574 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 1937207154 && a2 == 0xE400000000000000 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0x5474686769527369 && a2 == 0xED00007466654C6FLL || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001000C8DD0 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0x65746F75516C7275 && a2 == 0xEC00000074786554 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001000C8DF0 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0x6365526F69647561 && a2 == 0xEE00676E6964726FLL)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else
  {
    char v6 = sub_1000B7DC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 24;
    }
    else {
      return 25;
    }
  }
}

uint64_t sub_100077484(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x7466654C706F74 && a2 == 0xE700000000000000;
  if (v3 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7468676952706F74 && a2 == 0xE800000000000000 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x69526D6F74746F62 && a2 == 0xEB00000000746867 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x654C6D6F74746F62 && a2 == 0xEA00000000007466)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1000B7DC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_100077640@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_100032E20(&qword_100104728);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100047028(a1, a1[3]);
  sub_1000778E8();
  sub_1000B7EA0();
  if (v2) {
    return sub_100037F98((uint64_t)a1);
  }
  type metadata accessor for CGPoint(0);
  char v20 = 0;
  sub_10007793C(&qword_100104738, type metadata accessor for CGPoint);
  sub_1000B7CA0();
  uint64_t v9 = v18;
  uint64_t v10 = v19;
  char v20 = 1;
  sub_1000B7CA0();
  uint64_t v11 = v18;
  uint64_t v12 = v19;
  char v20 = 2;
  sub_1000B7CA0();
  uint64_t v13 = v18;
  uint64_t v14 = v19;
  char v20 = 3;
  sub_1000B7CA0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v15 = v18;
  uint64_t v16 = v19;
  uint64_t result = sub_100037F98((uint64_t)a1);
  *a2 = v9;
  a2[1] = v10;
  a2[2] = v11;
  a2[3] = v12;
  a2[4] = v13;
  a2[5] = v14;
  a2[6] = v15;
  a2[7] = v16;
  return result;
}

unint64_t sub_1000778E8()
{
  unint64_t result = qword_100104730;
  if (!qword_100104730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104730);
  }
  return result;
}

uint64_t sub_10007793C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for ICAttachmentArchiveModel.Cropping.CodingKeys()
{
  return &type metadata for ICAttachmentArchiveModel.Cropping.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ICAttachmentArchiveModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 24 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 24) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE7)
  {
    unsigned int v6 = ((a2 - 232) >> 8) + 1;
    *uint64_t result = a2 + 24;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100077A68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 24;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICAttachmentArchiveModel.CodingKeys()
{
  return &type metadata for ICAttachmentArchiveModel.CodingKeys;
}

ValueMetadata *type metadata accessor for ICAttachmentArchiveModel.Coordinate()
{
  return &type metadata for ICAttachmentArchiveModel.Coordinate;
}

unsigned char *storeEnumTagSinglePayload for ICAttachmentArchiveModel.ImageFilters(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100077B7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICAttachmentArchiveModel.ImageFilters()
{
  return &type metadata for ICAttachmentArchiveModel.ImageFilters;
}

uint64_t _s38com_apple_mobilenotes_SharingExtension24ICAttachmentArchiveModelV12OrientationsOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s38com_apple_mobilenotes_SharingExtension24ICAttachmentArchiveModelV12OrientationsOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100077D10);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICAttachmentArchiveModel.Orientations()
{
  return &type metadata for ICAttachmentArchiveModel.Orientations;
}

uint64_t sub_100077D4C()
{
  return sub_100038F84(&qword_100104750, &qword_100104758);
}

unint64_t sub_100077D8C()
{
  unint64_t result = qword_100104760;
  if (!qword_100104760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104760);
  }
  return result;
}

uint64_t sub_100077DE4()
{
  return sub_100038F84(&qword_100104768, &qword_100104770);
}

unint64_t sub_100077E24()
{
  unint64_t result = qword_100104778;
  if (!qword_100104778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104778);
  }
  return result;
}

unint64_t sub_100077E7C()
{
  unint64_t result = qword_100104780;
  if (!qword_100104780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104780);
  }
  return result;
}

unint64_t sub_100077ED4()
{
  unint64_t result = qword_100104788;
  if (!qword_100104788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104788);
  }
  return result;
}

unint64_t sub_100077F2C()
{
  unint64_t result = qword_100104790;
  if (!qword_100104790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104790);
  }
  return result;
}

unint64_t sub_100077F84()
{
  unint64_t result = qword_100104798;
  if (!qword_100104798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104798);
  }
  return result;
}

unint64_t sub_100077FDC()
{
  unint64_t result = qword_1001047A0;
  if (!qword_1001047A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001047A0);
  }
  return result;
}

unint64_t sub_100078034()
{
  unint64_t result = qword_1001047A8;
  if (!qword_1001047A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001047A8);
  }
  return result;
}

unint64_t sub_100078088()
{
  unint64_t result = qword_1001047B0;
  if (!qword_1001047B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001047B0);
  }
  return result;
}

unint64_t sub_1000780DC()
{
  unint64_t result = qword_1001047B8;
  if (!qword_1001047B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001047B8);
  }
  return result;
}

unint64_t sub_100078130()
{
  unint64_t result = qword_1001047C8;
  if (!qword_1001047C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001047C8);
  }
  return result;
}

uint64_t sub_100078184(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1000EF280;
  v6._object = a2;
  unint64_t v4 = sub_1000B7C00(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 4) {
    return 4;
  }
  else {
    return v4;
  }
}

uint64_t sub_1000781D0(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1000EF328;
  v6._object = a2;
  unint64_t v4 = sub_1000B7C00(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 5) {
    return 5;
  }
  else {
    return v4;
  }
}

uint64_t sub_10007821C(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x656475746974616CLL && a2 == 0xE800000000000000;
  if (v3 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1000B7DC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

double sub_100078310(void *a1)
{
  uint64_t v4 = sub_100032E20(&qword_1001047D0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  BOOL v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100047028(a1, a1[3]);
  sub_100078130();
  sub_1000B7EA0();
  if (!v1)
  {
    v10[15] = 0;
    sub_1000B7C80();
    double v2 = v8;
    v10[14] = 1;
    sub_1000B7C80();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  }
  sub_100037F98((uint64_t)a1);
  return v2;
}

unint64_t sub_1000784BC()
{
  unint64_t result = qword_1001047D8;
  if (!qword_1001047D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001047D8);
  }
  return result;
}

unint64_t sub_100078510()
{
  unint64_t result = qword_1001047E0;
  if (!qword_1001047E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001047E0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ICAttachmentArchiveModel.Coordinate.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100078630);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICAttachmentArchiveModel.Coordinate.CodingKeys()
{
  return &type metadata for ICAttachmentArchiveModel.Coordinate.CodingKeys;
}

unint64_t sub_10007866C()
{
  unint64_t result = qword_1001047E8;
  if (!qword_1001047E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001047E8);
  }
  return result;
}

unint64_t sub_1000786C4()
{
  unint64_t result = qword_1001047F0;
  if (!qword_1001047F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001047F0);
  }
  return result;
}

unint64_t sub_10007871C()
{
  unint64_t result = qword_1001047F8;
  if (!qword_1001047F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001047F8);
  }
  return result;
}

uint64_t ICCloudSyncingObject.MoveAction.Types.init(fromParentObject:toParentObject:)(void *a1, void *a2)
{
  return sub_100079AFC(a1, a2);
}

Swift::Int sub_1000787A0()
{
  Swift::UInt v1 = *v0;
  sub_1000B7E40();
  sub_1000B7E50(v1);
  return sub_1000B7E70();
}

void sub_1000787E8()
{
  sub_1000B7E50(*v0);
}

Swift::Int sub_100078814()
{
  Swift::UInt v1 = *v0;
  sub_1000B7E40();
  sub_1000B7E50(v1);
  return sub_1000B7E70();
}

uint64_t ICCloudSyncingObject.MoveAction.type.getter()
{
  return *(void *)(v0 + OBJC_IVAR___ICCloudSyncingObjectMoveAction_type);
}

id ICCloudSyncingObject.MoveAction.object.getter()
{
  return *(id *)(v0 + OBJC_IVAR___ICCloudSyncingObjectMoveAction_object);
}

id ICCloudSyncingObject.MoveAction.fromParentObject.getter()
{
  return *(id *)(v0 + OBJC_IVAR___ICCloudSyncingObjectMoveAction_fromParentObject);
}

id ICCloudSyncingObject.MoveAction.toParentObject.getter()
{
  return *(id *)(v0 + OBJC_IVAR___ICCloudSyncingObjectMoveAction_toParentObject);
}

uint64_t ICCloudSyncingObject.MoveAction.isCopy.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___ICCloudSyncingObjectMoveAction_isCopy);
}

id ICCloudSyncingObject.MoveAction.__allocating_init(type:object:fromParentObject:toParentObject:isCopy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v11 = objc_allocWithZone(v5);
  *(void *)&v11[OBJC_IVAR___ICCloudSyncingObjectMoveAction_type] = a1;
  *(void *)&v11[OBJC_IVAR___ICCloudSyncingObjectMoveAction_object] = a2;
  *(void *)&v11[OBJC_IVAR___ICCloudSyncingObjectMoveAction_fromParentObject] = a3;
  *(void *)&v11[OBJC_IVAR___ICCloudSyncingObjectMoveAction_toParentObject] = a4;
  v11[OBJC_IVAR___ICCloudSyncingObjectMoveAction_isCopy] = a5;
  v13.receiver = v11;
  v13.super_class = v5;
  return [super init];
}

id ICCloudSyncingObject.MoveAction.init(type:object:fromParentObject:toParentObject:isCopy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v5[OBJC_IVAR___ICCloudSyncingObjectMoveAction_type] = a1;
  *(void *)&v5[OBJC_IVAR___ICCloudSyncingObjectMoveAction_object] = a2;
  *(void *)&v5[OBJC_IVAR___ICCloudSyncingObjectMoveAction_fromParentObject] = a3;
  *(void *)&v5[OBJC_IVAR___ICCloudSyncingObjectMoveAction_toParentObject] = a4;
  v5[OBJC_IVAR___ICCloudSyncingObjectMoveAction_isCopy] = a5;
  v13.receiver = v5;
  v13.super_class = ObjectType;
  return [super init];
}

id ICCloudSyncingObject.MoveAction.__allocating_init(object:fromParentObject:toParentObject:isCopy:)(void *a1, void *a2, void *a3, char a4)
{
  id v9 = objc_allocWithZone(v4);
  if (!a2)
  {

    a1 = a3;
LABEL_8:

    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  if (!a3)
  {

    goto LABEL_8;
  }
  id v10 = a3;
  id v11 = a2;
  uint64_t v12 = sub_100079AFC(v11, v10);
  if (v13)
  {

    goto LABEL_8;
  }
  id v14 = [v9 initWithType:v12 object:a1 fromParentObject:v11 toParentObject:v10 isCopy:a4 & 1];

  return v14;
}

id ICCloudSyncingObject.MoveAction.init(object:fromParentObject:toParentObject:isCopy:)(void *a1, void *a2, void *a3, char a4)
{
  unsigned int v6 = a1;
  if (!a2)
  {

    unsigned int v6 = a3;
LABEL_8:

    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  if (!a3)
  {

    goto LABEL_8;
  }
  id v8 = a2;
  id v9 = a3;
  uint64_t v10 = sub_100079AFC(v8, v9);
  if (v11)
  {

    goto LABEL_8;
  }
  id v12 = [v4 initWithType:v10 object:v6 fromParentObject:v8 toParentObject:v9 isCopy:a4 & 1];

  return v12;
}

id ICCloudSyncingObject.MoveAction.__allocating_init(folder:toParentObject:isCopy:)(void *a1, void *a2, char a3)
{
  unsigned int v4 = v3;
  id v8 = objc_allocWithZone(v4);
  id v9 = [a1 parent];
  if (!v9) {
    id v9 = [a1 account];
  }
  id v10 = [v8 initWithObject:a1 fromParentObject:v9 toParentObject:a2 isCopy:a3 & 1];

  return v10;
}

id ICCloudSyncingObject.MoveAction.init(folder:toParentObject:isCopy:)(void *a1, void *a2, char a3)
{
  unsigned int v4 = v3;
  id v8 = [a1 parent];
  if (!v8) {
    id v8 = [a1 account];
  }
  id v9 = [v4 initWithObject:a1 fromParentObject:v8 toParentObject:a2 isCopy:a3 & 1];

  return v9;
}

id ICCloudSyncingObject.MoveAction.__allocating_init(note:toFolder:isCopy:)(void *a1, void *a2, char a3)
{
  id v7 = objc_allocWithZone(v3);
  id v8 = [a1 folder];
  id v9 = [v7 initWithObject:a1 fromParentObject:v8 toParentObject:a2 isCopy:a3 & 1];

  return v9;
}

id ICCloudSyncingObject.MoveAction.init(note:toFolder:isCopy:)(void *a1, void *a2, char a3)
{
  id v7 = [a1 folder];
  id v8 = [v3 initWithObject:a1 fromParentObject:v7 toParentObject:a2 isCopy:a3 & 1];

  return v8;
}

void ICCloudSyncingObject.MoveAction.init()()
{
}

Swift::Void __swiftcall ICCloudSyncingObject.persistParticipantActivityEvents(oldShare:newShare:)(CKShare_optional oldShare, CKShare_optional newShare)
{
  int v3 = *(void **)&oldShare.is_nil;
  Class isa = oldShare.value.super.super.isa;
  uint64_t v38 = sub_100032E20(&qword_100104828);
  uint64_t v5 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  id v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100032E20(&qword_100104830);
  uint64_t v9 = __chkstk_darwin(v8);
  char v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v37 = (char *)&v32 - v12;
  if (isa)
  {
    id v13 = [(objc_class *)isa ic_nonCurrentUserParticipants];
    sub_100038DC8(0, &qword_100103940);
    unint64_t v14 = sub_1000B76E0();

    if ((v14 & 0x8000000000000000) != 0) {
      goto LABEL_9;
    }
  }
  else
  {
    unint64_t v14 = (unint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_9;
    }
  }
  if ((v14 & 0x4000000000000000) == 0)
  {
    uint64_t v15 = v14 & 0xFFFFFFFFFFFFFF8;
    if (!v3) {
      goto LABEL_10;
    }
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v15 = (uint64_t)sub_1000362FC(v14);
  swift_bridgeObjectRelease();
  if (!v3)
  {
LABEL_10:
    unint64_t v17 = (unint64_t)_swiftEmptyArrayStorage;
    uint64_t v32 = v2;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_18;
    }
    goto LABEL_11;
  }
LABEL_7:
  id v16 = [v3 ic_nonCurrentUserParticipants];
  sub_100038DC8(0, &qword_100103940);
  unint64_t v17 = sub_1000B76E0();

  uint64_t v32 = v2;
  if ((v17 & 0x8000000000000000) != 0) {
    goto LABEL_18;
  }
LABEL_11:
  if ((v17 & 0x4000000000000000) == 0)
  {
    uint64_t v18 = v17 & 0xFFFFFFFFFFFFFF8;
    goto LABEL_13;
  }
LABEL_18:
  uint64_t v18 = (uint64_t)sub_1000362FC(v17);
  swift_bridgeObjectRelease();
LABEL_13:
  v39[0] = v18;
  v39[4] = v15;
  sub_100032E20(&qword_100103948);
  sub_100038F84(&qword_100104838, &qword_100103948);
  sub_10007A17C();
  sub_1000B7540();
  swift_release();
  swift_release();
  uint64_t v19 = v38;
  uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  uint64_t v35 = v5 + 16;
  v34(v11, v7, v38);
  sub_100038F84(&qword_100104848, &qword_100104828);
  sub_1000B77B0();
  char v20 = *(void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v36 = v5 + 8;
  uint64_t v33 = v20;
  v20(v7, v19);
  *(void *)&v11[*(int *)(v8 + 36)] = v39[0];
  uint64_t v21 = (uint64_t)v37;
  sub_10007A1E4((uint64_t)v11, (uint64_t)v37);
  uint64_t v22 = (uint64_t *)(v21 + *(int *)(v8 + 36));
  uint64_t v23 = *v22;
  sub_1000B77D0();
  int v24 = v32;
  if (v23 != v39[0])
  {
    do
    {
      uint64_t v25 = (void (*)(void *, void))sub_1000B7800();
      uint64_t v27 = *(void **)(v26 + 8);
      int v28 = *(unsigned __int8 *)(v26 + 25);
      id v29 = v27;
      v25(v39, 0);
      v34(v7, v37, v38);
      sub_1000B77E0();
      v33(v7, v38);
      unint64_t v30 = &selRef_persistRemoveParticipantActivityEventForObject_participant_;
      if (!v28) {
        unint64_t v30 = &selRef_persistAddParticipantActivityEventForObject_participant_;
      }

      uint64_t v21 = (uint64_t)v37;
      uint64_t v31 = *v22;
      sub_1000B77D0();
    }
    while (v31 != v39[0]);
  }
  sub_100038E30(v21, &qword_100104830);
}

Swift::Void __swiftcall ICCloudSyncingObject.persistJoinActivityEvent()()
{
}

Swift::Void __swiftcall ICCloudSyncingObject.persistLeaveActivityEvent()()
{
}

uint64_t sub_1000797A8(unsigned int *a1)
{
  uint64_t v18 = a1;
  uint64_t v19 = sub_1000B6FD0();
  uint64_t v2 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  unsigned int v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000B72D0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100032E20(&qword_100103EE8);
  __chkstk_darwin(v9 - 8);
  char v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000B7350();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = v1;
  sub_1000B7340();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1) {
    return sub_100038E30((uint64_t)v11, &qword_100103EE8);
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v8, v15, v12);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *v18, v5);
  sub_1000B6FC0();

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v19);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_100079AFC(void *a1, void *a2)
{
  self;
  unsigned int v4 = (void *)swift_dynamicCastObjCClass();
  if (v4 && [v4 isTrashFolder]
    || (self, (uint64_t v5 = (void *)swift_dynamicCastObjCClass()) != 0)
    && [v5 isTrashFolder])
  {

    return 0;
  }
  if ([a1 isSharedViaICloud] && objc_msgSend(a2, "isSharedViaICloud"))
  {
    id v7 = [a1 sharedRootObject];
    id v8 = [a2 sharedRootObject];
    uint64_t v9 = v8;
    if (v7)
    {
      if (v8)
      {
        sub_100038DC8(0, (unint64_t *)&qword_100103820);
        id v10 = v7;
        char v11 = sub_1000B79C0();

        if ((v11 & 1) == 0) {
          return 2;
        }
        return 3;
      }

      uint64_t v9 = a2;
    }
    else
    {

      if (!v9) {
        return 3;
      }
    }

    return 2;
  }
  if ([a1 isSharedViaICloud])
  {
    unsigned int v12 = [a2 isSharedViaICloud];

    if (v12) {
      return 0;
    }
    else {
      return 4;
    }
  }
  else
  {

    return 1;
  }
}

void _sSo20ICCloudSyncingObjectC38com_apple_mobilenotes_SharingExtensionE29undoablyPersistActivityEvents3for03oldC003newC0yAbCE10MoveActionC_ABSgAJtFZ_0(uint64_t a1, void *a2, void *a3)
{
  switch(*(void *)(a1 + OBJC_IVAR___ICCloudSyncingObjectMoveAction_type))
  {
    case 0:
      return;
    case 1:
      if (!a3) {
        return;
      }
      uint64_t v4 = *(void *)(a1 + OBJC_IVAR___ICCloudSyncingObjectMoveAction_toParentObject);
      id v30 = a3;
      if (*(unsigned char *)(a1 + OBJC_IVAR___ICCloudSyncingObjectMoveAction_isCopy) != 1) {
        goto LABEL_28;
      }
      uint64_t v5 = *(void *)(a1 + OBJC_IVAR___ICCloudSyncingObjectMoveAction_object);
      id v6 = a3;
      id v7 = [v6 persistCopyActivityEventForObject:v6 originalObject:v5 fromParentObject:0 toParentObject:v4];
      goto LABEL_29;
    case 2:
      id v30 = a3;
      if (a2)
      {
        unsigned int v12 = *(void **)(a1 + OBJC_IVAR___ICCloudSyncingObjectMoveAction_fromParentObject);
        id v13 = a2;
        id v14 = [v12 sharedRootObject];
        if (v14)
        {
          uint64_t v15 = v14;
          if (*(unsigned char *)(a1 + OBJC_IVAR___ICCloudSyncingObjectMoveAction_isCopy) == 1) {
            id v16 = [v14 persistCopyActivityEventForObject:v13 originalObject:*(void *)(a1 + OBJC_IVAR___ICCloudSyncingObjectMoveAction_object) fromParentObject:v12 toParentObject:0];
          }
          else {
            id v16 = [v14 persistMoveActivityEventForObject:v13 fromParentObject:v12 toParentObject:0];
          }
          id v25 = v16;
          id v26 = [self shared];
          [v26 registerUndoForCloudSyncingObjectActivityEvent:v25 cloudSyncingObject:v15];

          id v13 = v26;
        }

        a3 = v30;
      }
      if (!a3) {
        return;
      }
      uint64_t v4 = *(void *)(a1 + OBJC_IVAR___ICCloudSyncingObjectMoveAction_toParentObject);
      if (*(unsigned char *)(a1 + OBJC_IVAR___ICCloudSyncingObjectMoveAction_isCopy) == 1)
      {
        uint64_t v27 = *(void *)(a1 + OBJC_IVAR___ICCloudSyncingObjectMoveAction_object);
        id v28 = a3;
        id v7 = [v28 persistCopyActivityEventForObject:v28 originalObject:v27 fromParentObject:0 toParentObject:v4];
      }
      else
      {
LABEL_28:
        id v29 = a3;
        id v7 = [v29 persistMoveActivityEventForObject:v29 fromParentObject:0 toParentObject:v4];
      }
      goto LABEL_29;
    case 3:
      if (!a3) {
        return;
      }
      uint64_t v17 = *(void *)(a1 + OBJC_IVAR___ICCloudSyncingObjectMoveAction_fromParentObject);
      uint64_t v18 = *(void *)(a1 + OBJC_IVAR___ICCloudSyncingObjectMoveAction_toParentObject);
      id v30 = a3;
      if (*(unsigned char *)(a1 + OBJC_IVAR___ICCloudSyncingObjectMoveAction_isCopy) == 1)
      {
        uint64_t v19 = *(void *)(a1 + OBJC_IVAR___ICCloudSyncingObjectMoveAction_object);
        id v20 = a3;
        id v7 = [v20 persistCopyActivityEventForObject:v20 originalObject:v19 fromParentObject:v17 toParentObject:v18];
      }
      else
      {
        id v21 = a3;
        id v7 = [v21 persistMoveActivityEventForObject:v21 fromParentObject:v17 toParentObject:v18];
      }
LABEL_29:
      id v23 = v7;
      id v24 = [self shared];
      [v24 registerUndoForCloudSyncingObjectActivityEvent:v23 cloudSyncingObject:v30];
      goto LABEL_30;
    case 4:
      if (!a2) {
        return;
      }
      id v8 = *(void **)(a1 + OBJC_IVAR___ICCloudSyncingObjectMoveAction_fromParentObject);
      id v30 = a2;
      id v9 = [v8 sharedRootObject];
      if (v9)
      {
        id v10 = v9;
        if (*(unsigned char *)(a1 + OBJC_IVAR___ICCloudSyncingObjectMoveAction_isCopy) == 1) {
          id v11 = [v9 persistCopyActivityEventForObject:v30 originalObject:*(void *)(a1 + OBJC_IVAR___ICCloudSyncingObjectMoveAction_object) fromParentObject:v8 toParentObject:0];
        }
        else {
          id v11 = [v9 persistMoveActivityEventForObject:v30 fromParentObject:v8 toParentObject:0];
        }
        id v23 = v11;
        id v24 = [self shared];
        [v24 registerUndoForCloudSyncingObjectActivityEvent:v23 cloudSyncingObject:v10];

LABEL_30:
        uint64_t v22 = v24;
      }
      else
      {
        uint64_t v22 = v30;
      }

      return;
    default:
      sub_1000B7DD0();
      __break(1u);
      JUMPOUT(0x10007A168);
  }
}

unint64_t sub_10007A17C()
{
  unint64_t result = qword_100104840;
  if (!qword_100104840)
  {
    sub_100038DC8(255, &qword_100103940);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104840);
  }
  return result;
}

uint64_t sub_10007A1E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100032E20(&qword_100104830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10007A258()
{
  unint64_t result = qword_100104850;
  if (!qword_100104850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104850);
  }
  return result;
}

uint64_t type metadata accessor for ICCloudSyncingObject.MoveAction()
{
  return self;
}

ValueMetadata *type metadata accessor for ICCloudSyncingObject.MoveAction.Types()
{
  return &type metadata for ICCloudSyncingObject.MoveAction.Types;
}

uint64_t sub_10007A2E0(uint64_t a1)
{
  if (*(void *)(a1 + 16) == 1)
  {
    sub_100032E20(&qword_100103908);
    sub_1000B71B0();
    if (v1)
    {
      NSString v2 = sub_1000B7580();
      swift_bridgeObjectRelease();
      id v3 = [v2 ic_sanitizedFilenameString];

      uint64_t v4 = sub_1000B75B0();
      unint64_t v6 = v5;

      uint64_t v7 = HIBYTE(v6) & 0xF;
      if ((v6 & 0x2000000000000000) == 0) {
        uint64_t v7 = v4 & 0xFFFFFFFFFFFFLL;
      }
      if (v7) {
        return v4;
      }
      swift_bridgeObjectRelease();
    }
  }
  id v9 = [self mainBundle];
  NSString v10 = sub_1000B7580();
  id v11 = [v9 localizedStringForKey:v10 value:0 table:0];

  uint64_t v12 = sub_1000B75B0();
  return v12;
}

void *sub_10007A45C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_100043800(0, v1, 0);
    id v3 = (void *)(a1 + 32);
    do
    {
      uint64_t v4 = v3[3];
      uint64_t v5 = v3[4];
      sub_100047028(v3, v4);
      uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
      uint64_t v8 = v7;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_100043800(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v10 = _swiftEmptyArrayStorage[2];
      unint64_t v9 = _swiftEmptyArrayStorage[3];
      if (v10 >= v9 >> 1) {
        sub_100043800(v9 > 1, v10 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v10 + 1;
      id v11 = &_swiftEmptyArrayStorage[2 * v10];
      v11[4] = v6;
      void v11[5] = v8;
      v3 += 5;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10007A588(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v28 = a5;
  uint64_t v29 = a8;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v27 = *(void *)(a5 - 8);
  __chkstk_darwin(a1);
  uint64_t v40 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v33 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v10 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v12 = (char *)&v26 - v11;
  __chkstk_darwin(v10);
  id v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(v15 - 8);
  uint64_t v31 = v15;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v26 - v16;
  uint64_t v18 = sub_1000B77C0();
  if (!v18) {
    return sub_1000B7720();
  }
  Swift::Int v19 = v18;
  uint64_t v43 = sub_1000B7B50();
  uint64_t v32 = sub_1000B7B60();
  sub_1000B7B10(v19);
  uint64_t v36 = v8;
  uint64_t result = sub_1000B77B0();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v34 = (void (**)(char *))(v33 + 2);
    uint64_t v35 = v14;
    ++v33;
    while (1)
    {
      id v21 = (void (*)(char *, void))sub_1000B7800();
      uint64_t v22 = v12;
      id v23 = v12;
      uint64_t v24 = AssociatedTypeWitness;
      (*v34)(v22);
      v21(v42, 0);
      uint64_t v25 = v41;
      v38(v23, v40);
      if (v25) {
        break;
      }
      uint64_t v41 = 0;
      (*v33)(v23, v24);
      sub_1000B7B40();
      sub_1000B77E0();
      --v19;
      uint64_t v12 = v23;
      if (!v19)
      {
        (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
        return v43;
      }
    }
    (*v33)(v23, v24);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v29, v40, v28);
  }
  return result;
}

uint64_t sub_10007A988(uint64_t a1)
{
  uint64_t v2 = sub_1000B6D90();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void (**)(char *))(a1 + 32);
  sub_1000B6D80();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t static ICArchiveExporterConfiguration.default.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1001036C8 != -1) {
    swift_once();
  }
  long long v2 = static ICArchiveCreator.default;
  uint64_t v4 = qword_10010E990;
  uint64_t v3 = unk_10010E998;
  long long v5 = xmmword_10010E9A0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char IsAlexandriaDemoModeEnabled = ICInternalSettingsIsAlexandriaDemoModeEnabled();
  char v7 = ICInternalSettingsIsAlexandriaDemoModeEnabled();
  uint64_t result = ICInternalSettingsIsAlexandriaDemoModeEnabled();
  *(_OWORD *)a1 = v2;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v3;
  *(_OWORD *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 48) = IsAlexandriaDemoModeEnabled;
  *(unsigned char *)(a1 + 49) = v7;
  *(unsigned char *)(a1 + 50) = result;
  *(_WORD *)(a1 + 51) = 0;
  return result;
}

uint64_t sub_10007AB48()
{
  uint64_t v0 = sub_1000B7490();
  sub_100038F18(v0, qword_100104880);
  sub_100038E8C(v0, (uint64_t)qword_100104880);
  return sub_1000B7470();
}

uint64_t sub_10007AB94()
{
  uint64_t v0 = sub_1000B7490();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000B7410();
  sub_100038F18(v4, qword_100104898);
  sub_100038E8C(v4, (uint64_t)qword_100104898);
  if (qword_1001036B8 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100038E8C(v0, (uint64_t)qword_100104880);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  return sub_1000B73F0();
}

uint64_t ICArchiveExporter.objectProvider.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t ICArchiveExporter.configuration.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10008BA14(v1 + 24, a1);
}

uint64_t ICArchiveExporter.fileManager.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t ICArchiveExporter.__allocating_init(objectProvider:configuration:fileManager:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_allocObject();
  uint64_t v8 = sub_10008D8A0(a1, a2, a3, a4);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v8;
}

uint64_t ICArchiveExporter.init(objectProvider:configuration:fileManager:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = sub_10008D8A0(a1, a2, a3, a4);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v4;
}

uint64_t sub_10007ADD0()
{
  id v1 = [self defaultCenter];
  uint64_t v2 = swift_allocObject();
  swift_weakInit();
  uint64_t v8 = sub_10008E51C;
  uint64_t v9 = v2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10007A988;
  uint64_t ObjectType = &unk_1000F0FE8;
  uint64_t v3 = _Block_copy(aBlock);
  swift_release();
  id v4 = [v1 addObserverForName:UIApplicationDidReceiveMemoryWarningNotification object:0 queue:0 usingBlock:v3];
  _Block_release(v3);

  uint64_t ObjectType = (void *)swift_getObjectType();
  aBlock[0] = v4;
  swift_beginAccess();
  sub_10005613C((uint64_t)aBlock, v0 + 120, &qword_1001036F8);
  return swift_endAccess();
}

uint64_t sub_10007AF38()
{
  uint64_t v1 = (uint64_t)(v0 + 15);
  uint64_t v2 = *v0;
  id v3 = [self defaultCenter];
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = *(void *)(v2 + 80);
  v5[3] = *(void *)(v2 + 88);
  v5[4] = v4;
  uint64_t v11 = sub_10008E574;
  uint64_t v12 = v5;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10007A988;
  uint64_t ObjectType = &unk_1000F1060;
  uint64_t v6 = _Block_copy(aBlock);
  swift_release();
  id v7 = [v3 addObserverForName:UIApplicationDidReceiveMemoryWarningNotification object:0 queue:0 usingBlock:v6];
  _Block_release(v6);

  uint64_t ObjectType = (void *)swift_getObjectType();
  aBlock[0] = v7;
  swift_beginAccess();
  sub_10005613C((uint64_t)aBlock, v1, &qword_1001036F8);
  return swift_endAccess();
}

uint64_t ICArchiveExporter.deinit()
{
  sub_10007B140();
  swift_unknownObjectRelease();
  sub_10004E3F8(*(void *)(v0 + 24), *(void *)(v0 + 32));
  swift_unknownObjectRelease();
  sub_100038E30(v0 + 120, &qword_1001036F8);
  return v0;
}

void sub_10007B140()
{
  swift_beginAccess();
  sub_100032FC8(v0 + 120, (uint64_t)v2, &qword_1001036F8);
  id v1 = [self defaultCenter];
  sub_100044C74((uint64_t)v2, v1);

  sub_100038E30((uint64_t)v2, &qword_1001036F8);
}

uint64_t ICArchiveExporter.__deallocating_deinit()
{
  ICArchiveExporter.deinit();

  return swift_deallocClassInstance();
}

uint64_t ICArchiveExporter.createArchive(for:at:progress:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B6F10();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = ICArchiveExporter.createArchive(for:progress:)(a1, a3, (uint64_t)v9);
  if (!v3)
  {
    swift_getObjectType();
    sub_1000B7080();
    sub_1000B70E0();
    ICArchiveExporter.removeArchive(at:)((uint64_t)v9);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return result;
}

uint64_t sub_10007B39C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = a3;
  uint64_t v6 = sub_100032E20((uint64_t *)&unk_1001042F0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = swift_allocBox();
  uint64_t v11 = v10;
  uint64_t v12 = sub_1000B6F10();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  char v22 = 0;
  void v17[4] = v11;
  uint64_t v18 = v3;
  uint64_t v19 = a1;
  uint64_t v20 = a2;
  id v21 = &v22;
  sub_1000B72C0();
  sub_10008DE28(&qword_100104968, (void (*)(uint64_t))&type metadata accessor for ICModernObjectProvider);
  uint64_t v14 = v17[1];
  sub_1000B7120();
  if (v14) {
    goto LABEL_4;
  }
  uint64_t v15 = v17[0];
  sub_100032FC8(v11, (uint64_t)v8, (uint64_t *)&unk_1001042F0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12);
  if (result != 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v15, v8, v12);
LABEL_4:
    sub_10007BDF0(v9, &v22, v3);
    return swift_release();
  }
  __break(1u);
  return result;
}

uint64_t ICArchiveExporter.createArchive(for:progress:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v17 = a3;
  uint64_t v5 = sub_100032E20((uint64_t *)&unk_1001042F0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = swift_allocBox();
  uint64_t v10 = v9;
  uint64_t v11 = sub_1000B6F10();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
  char v25 = 0;
  uint64_t v20 = v10;
  uint64_t v21 = v3;
  uint64_t v13 = v19;
  uint64_t v22 = a1;
  uint64_t v23 = v18;
  uint64_t v24 = &v25;
  sub_1000B7120();
  if (v13) {
    goto LABEL_4;
  }
  uint64_t v14 = v17;
  sub_100032FC8(v10, (uint64_t)v7, (uint64_t *)&unk_1001042F0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v7, 1, v11);
  if (result != 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v14, v7, v11);
LABEL_4:
    sub_10007C534(v8, &v25, v3);
    return swift_release();
  }
  __break(1u);
  return result;
}

uint64_t sub_10007B798(uint64_t a1)
{
  uint64_t v3 = sub_1000B6F10();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v21 - v8;
  if (qword_1001036B8 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1000B7490();
  sub_100038E8C(v10, (uint64_t)qword_100104880);
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  uint64_t v24 = a1;
  v11(v9, a1, v3);
  uint64_t v12 = sub_1000B7480();
  os_log_type_t v13 = sub_1000B7840();
  BOOL v14 = os_log_type_enabled(v12, v13);
  uint64_t v25 = v4;
  if (v14)
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v23 = v1;
    uint64_t v16 = (uint8_t *)v15;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v27 = v22;
    *(_DWORD *)uint64_t v16 = 136315138;
    v21[1] = v16 + 4;
    sub_10008DE28(&qword_100103B08, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v17 = sub_1000B7D80();
    uint64_t v26 = sub_100069A50(v17, v18, &v27);
    sub_1000B79F0();
    swift_bridgeObjectRelease();
    uint64_t v19 = *(void (**)(char *, uint64_t))(v4 + 8);
    v19(v9, v3);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Removing archiveâ€¦ {url: %s}", v16, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v19 = *(void (**)(char *, uint64_t))(v4 + 8);
    v19(v9, v3);
  }

  swift_getObjectType();
  sub_1000B6EC0();
  sub_1000B7080();
  return ((uint64_t (*)(char *, uint64_t))v19)(v7, v3);
}

uint64_t ICArchiveExporter.removeArchive(at:)(uint64_t a1)
{
  uint64_t v3 = sub_1000B6F10();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v21 - v8;
  if (qword_1001036B8 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1000B7490();
  sub_100038E8C(v10, (uint64_t)qword_100104880);
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  uint64_t v24 = a1;
  v11(v9, a1, v3);
  uint64_t v12 = sub_1000B7480();
  os_log_type_t v13 = sub_1000B7840();
  BOOL v14 = os_log_type_enabled(v12, v13);
  uint64_t v25 = v4;
  if (v14)
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v23 = v1;
    uint64_t v16 = (uint8_t *)v15;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v27 = v22;
    *(_DWORD *)uint64_t v16 = 136315138;
    v21[1] = v16 + 4;
    sub_10008DE28(&qword_100103B08, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v17 = sub_1000B7D80();
    uint64_t v26 = sub_100069A50(v17, v18, &v27);
    sub_1000B79F0();
    swift_bridgeObjectRelease();
    uint64_t v19 = *(void (**)(char *, uint64_t))(v4 + 8);
    v19(v9, v3);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Removing archiveâ€¦ {url: %s}", v16, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v19 = *(void (**)(char *, uint64_t))(v4 + 8);
    v19(v9, v3);
  }

  swift_getObjectType();
  sub_1000B6EC0();
  sub_1000B7080();
  return ((uint64_t (*)(char *, uint64_t))v19)(v7, v3);
}

uint64_t sub_10007BDF0(uint64_t a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v46 = a3;
  uint64_t v47 = a2;
  uint64_t v51 = (uint8_t *)sub_1000B7490();
  uint64_t v49 = *((void *)v51 - 1);
  __chkstk_darwin(v51);
  uint64_t v48 = &v44[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_100032E20((uint64_t *)&unk_1001042F0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = &v44[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v10 = &v44[-v9];
  uint64_t v11 = sub_1000B6F10();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = &v44[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = __chkstk_darwin(v13);
  unint64_t v18 = &v44[-v17];
  __chkstk_darwin(v16);
  uint64_t v20 = &v44[-v19];
  uint64_t v50 = a1;
  uint64_t v21 = swift_projectBox();
  swift_beginAccess();
  uint64_t v22 = v12;
  sub_100032FC8(v21, (uint64_t)v10, (uint64_t *)&unk_1001042F0);
  uint64_t v23 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48);
  if (v23(v10, 1, v11) == 1)
  {
    sub_100038E30((uint64_t)v10, (uint64_t *)&unk_1001042F0);
LABEL_5:
    uint64_t v46 = v22;
    uint64_t v47 = v8;
    uint64_t v24 = (uint64_t)v51;
    uint64_t v25 = v48;
    uint64_t v26 = v49;
    if (qword_1001036B8 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_100038E8C(v24, (uint64_t)qword_100104880);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v26 + 16))(v25, v27, v24);
    swift_retain_n();
    uint64_t v28 = sub_1000B7480();
    int v45 = sub_1000B7840();
    if (os_log_type_enabled(v28, (os_log_type_t)v45))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v54 = swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 136315138;
      swift_beginAccess();
      uint64_t v30 = v47;
      sub_100032FC8(v21, (uint64_t)v47, (uint64_t *)&unk_1001042F0);
      if (v23(v30, 1, v11) == 1)
      {
        uint64_t result = swift_release();
        __break(1u);
      }
      else
      {
        uint64_t v31 = v46;
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v46 + 32))(v18, v30, v11);
        sub_10008DE28(&qword_100103B08, (void (*)(uint64_t))&type metadata accessor for URL);
        uint64_t v32 = sub_1000B7D80();
        unint64_t v34 = v33;
        (*(void (**)(unsigned char *, uint64_t))(v31 + 8))(v18, v11);
        uint64_t v52 = sub_100069A50(v32, v34, &v54);
        sub_1000B79F0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v28, (os_log_type_t)v45, "Created archive {url: %s}", v29, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        return (*(uint64_t (**)(unsigned char *, uint8_t *))(v49 + 8))(v48, v51);
      }
    }
    else
    {

      swift_release_n();
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v26 + 8))(v25, v24);
    }
    return result;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v22 + 32))(v20, v10, v11);
  if (*v47)
  {
    (*(void (**)(unsigned char *, uint64_t))(v22 + 8))(v20, v11);
    goto LABEL_5;
  }
  sub_10007B798((uint64_t)v20);
  if (qword_1001036B8 != -1) {
    swift_once();
  }
  sub_100038E8C((uint64_t)v51, (uint64_t)qword_100104880);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v22 + 16))(v15, v20, v11);
  uint64_t v36 = sub_1000B7480();
  uint64_t v37 = v22;
  os_log_type_t v38 = sub_1000B7840();
  if (os_log_type_enabled(v36, v38))
  {
    uint64_t v39 = (uint8_t *)swift_slowAlloc();
    v53[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v39 = 136315138;
    uint64_t v51 = v39 + 4;
    sub_10008DE28(&qword_100103B08, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v40 = sub_1000B7D80();
    uint64_t v54 = sub_100069A50(v40, v41, v53);
    sub_1000B79F0();
    swift_bridgeObjectRelease();
    uint64_t v42 = *(void (**)(unsigned char *, uint64_t))(v37 + 8);
    v42(v15, v11);
    _os_log_impl((void *)&_mh_execute_header, v36, v38, "Failed to create archive â€” removing temporary files {url: %s}", v39, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return ((uint64_t (*)(unsigned char *, uint64_t))v42)(v20, v11);
  }
  else
  {

    uint64_t v43 = *(void (**)(unsigned char *, uint64_t))(v37 + 8);
    v43(v15, v11);
    return ((uint64_t (*)(unsigned char *, uint64_t))v43)(v20, v11);
  }
}

uint64_t sub_10007C534(uint64_t a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v46 = a3;
  uint64_t v47 = a2;
  uint64_t v51 = (uint8_t *)sub_1000B7490();
  uint64_t v49 = *((void *)v51 - 1);
  __chkstk_darwin(v51);
  uint64_t v48 = &v44[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_100032E20((uint64_t *)&unk_1001042F0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = &v44[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v10 = &v44[-v9];
  uint64_t v11 = sub_1000B6F10();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = &v44[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = __chkstk_darwin(v13);
  unint64_t v18 = &v44[-v17];
  __chkstk_darwin(v16);
  uint64_t v20 = &v44[-v19];
  uint64_t v50 = a1;
  uint64_t v21 = swift_projectBox();
  swift_beginAccess();
  uint64_t v22 = v12;
  sub_100032FC8(v21, (uint64_t)v10, (uint64_t *)&unk_1001042F0);
  uint64_t v23 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48);
  if (v23(v10, 1, v11) == 1)
  {
    sub_100038E30((uint64_t)v10, (uint64_t *)&unk_1001042F0);
LABEL_5:
    uint64_t v46 = v22;
    uint64_t v47 = v8;
    uint64_t v24 = (uint64_t)v51;
    uint64_t v25 = v48;
    uint64_t v26 = v49;
    if (qword_1001036B8 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_100038E8C(v24, (uint64_t)qword_100104880);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v26 + 16))(v25, v27, v24);
    swift_retain_n();
    uint64_t v28 = sub_1000B7480();
    int v45 = sub_1000B7840();
    if (os_log_type_enabled(v28, (os_log_type_t)v45))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v54 = swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 136315138;
      swift_beginAccess();
      uint64_t v30 = v47;
      sub_100032FC8(v21, (uint64_t)v47, (uint64_t *)&unk_1001042F0);
      if (v23(v30, 1, v11) == 1)
      {
        uint64_t result = swift_release();
        __break(1u);
      }
      else
      {
        uint64_t v31 = v46;
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v46 + 32))(v15, v30, v11);
        sub_10008DE28(&qword_100103B08, (void (*)(uint64_t))&type metadata accessor for URL);
        uint64_t v32 = sub_1000B7D80();
        unint64_t v34 = v33;
        (*(void (**)(unsigned char *, uint64_t))(v31 + 8))(v15, v11);
        uint64_t v52 = sub_100069A50(v32, v34, &v54);
        sub_1000B79F0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v28, (os_log_type_t)v45, "Created archive {url: %s}", v29, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        return (*(uint64_t (**)(unsigned char *, uint8_t *))(v49 + 8))(v48, v51);
      }
    }
    else
    {

      swift_release_n();
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v26 + 8))(v25, v24);
    }
    return result;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v22 + 32))(v20, v10, v11);
  if (*v47)
  {
    (*(void (**)(unsigned char *, uint64_t))(v22 + 8))(v20, v11);
    goto LABEL_5;
  }
  ICArchiveExporter.removeArchive(at:)((uint64_t)v20);
  if (qword_1001036B8 != -1) {
    swift_once();
  }
  sub_100038E8C((uint64_t)v51, (uint64_t)qword_100104880);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v22 + 16))(v18, v20, v11);
  uint64_t v36 = sub_1000B7480();
  uint64_t v37 = v22;
  os_log_type_t v38 = sub_1000B7840();
  if (os_log_type_enabled(v36, v38))
  {
    uint64_t v39 = (uint8_t *)swift_slowAlloc();
    v53[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v39 = 136315138;
    uint64_t v51 = v39 + 4;
    sub_10008DE28(&qword_100103B08, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v40 = sub_1000B7D80();
    uint64_t v54 = sub_100069A50(v40, v41, v53);
    sub_1000B79F0();
    swift_bridgeObjectRelease();
    uint64_t v42 = *(void (**)(unsigned char *, uint64_t))(v37 + 8);
    v42(v18, v11);
    _os_log_impl((void *)&_mh_execute_header, v36, v38, "Failed to create archive â€” removing temporary files {url: %s}", v39, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return ((uint64_t (*)(unsigned char *, uint64_t))v42)(v20, v11);
  }
  else
  {

    uint64_t v43 = *(void (**)(unsigned char *, uint64_t))(v37 + 8);
    v43(v18, v11);
    return ((uint64_t (*)(unsigned char *, uint64_t))v43)(v20, v11);
  }
}

uint64_t sub_10007CC78(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, unsigned char *a5)
{
  uint64_t v129 = a1;
  uint64_t v120 = a5;
  uint64_t v121 = a4;
  uint64_t v116 = sub_1000B7420();
  uint64_t v125 = *(void *)(v116 - 8);
  uint64_t v7 = __chkstk_darwin(v116);
  id v112 = (char *)&v100 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v111 = (char *)&v100 - v10;
  __chkstk_darwin(v9);
  id v114 = (char *)&v100 - v11;
  uint64_t v12 = sub_100032E20(&qword_100103908);
  uint64_t v118 = *(void *)(v12 - 8);
  uint64_t v119 = v12;
  __chkstk_darwin(v12);
  uint64_t v117 = (char *)&v100 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000B7410();
  uint64_t v123 = *(void *)(v14 - 8);
  uint64_t v124 = v14;
  __chkstk_darwin(v14);
  uint64_t v122 = (char *)&v100 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000B73E0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v126 = v16;
  uint64_t v127 = v17;
  uint64_t v18 = __chkstk_darwin(v16);
  unint64_t v115 = (char *)&v100 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v113 = (char *)&v100 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v100 - v23;
  uint64_t v25 = __chkstk_darwin(v22);
  uint64_t v27 = (char *)&v100 - v26;
  __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v100 - v28;
  uint64_t v30 = sub_100032E20((uint64_t *)&unk_1001042F0);
  uint64_t v31 = __chkstk_darwin(v30 - 8);
  unint64_t v33 = (char *)&v100 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __chkstk_darwin(v31);
  uint64_t v36 = (void (*)(char *, char *, uint64_t))((char *)&v100 - v35);
  uint64_t v37 = __chkstk_darwin(v34);
  uint64_t v39 = (char *)&v100 - v38;
  __chkstk_darwin(v37);
  unint64_t v41 = (char *)&v100 - v40;
  uint64_t v128 = a2;
  uint64_t v42 = v130;
  uint64_t result = sub_10007E884(a3, (uint64_t)&v100 - v40);
  if (!v42)
  {
    uint64_t v107 = v36;
    uint64_t v106 = v33;
    uint64_t v109 = a3;
    char v105 = v24;
    id v108 = v27;
    uint64_t v130 = 0;
    id v110 = v29;
    long long v44 = (void (**)(void, void))sub_1000B6F10();
    uint64_t v45 = (uint64_t)*(v44 - 1);
    (*(void (**)(char *, void, uint64_t, void (**)(void, void)))(v45 + 56))(v41, 0, 1, v44);
    uint64_t v46 = v129;
    sub_10005613C((uint64_t)v41, v129, (uint64_t *)&unk_1001042F0);
    sub_100032FC8(v46, (uint64_t)v39, (uint64_t *)&unk_1001042F0);
    uint64_t v47 = v45 + 48;
    uint64_t v48 = *(char **)(v45 + 48);
    uint64_t result = ((uint64_t (*)(char *, uint64_t, void (**)(void, void)))v48)(v39, 1, v44);
    if (result == 1)
    {
      __break(1u);
LABEL_40:
      __break(1u);
    }
    else
    {
      swift_getObjectType();
      uint64_t v49 = v130;
      sub_1000B7090();
      uint64_t v50 = v49;
      if (v49) {
        return (*(uint64_t (**)(char *, void))(v45 + 8))(v39, v44);
      }
      uint64_t v52 = *(void (**)(void *, void))(v45 + 8);
      uint64_t v51 = (char *)(v45 + 8);
      char v104 = (void (*)(void (*)(char *, char *, uint64_t), void))v52;
      v52(v39, v44);
      if (qword_1001036C0 != -1) {
        goto LABEL_38;
      }
      while (1)
      {
        uint64_t v130 = v50;
        uint64_t v53 = v124;
        uint64_t v54 = sub_100038E8C(v124, (uint64_t)qword_100104898);
        uint64_t v55 = v122;
        uint64_t v56 = v123;
        uint64_t v57 = *(void (**)(char *))(v123 + 16);
        uint64_t v103 = v54;
        v57(v122);
        uint64_t v58 = v107;
        sub_100032FC8(v129, (uint64_t)v107, (uint64_t *)&unk_1001042F0);
        long long v101 = (uint64_t (*)(void *, uint64_t, void (**)(void, void)))v48;
        uint64_t result = ((uint64_t (*)(void, uint64_t, void (**)(void, void)))v48)(v58, 1, v44);
        if (result == 1) {
          goto LABEL_40;
        }
        sub_1000B6E80(v59);
        sub_1000B7400();
        sub_1000B73C0();
        (*(void (**)(char *, uint64_t))(v56 + 8))(v55, v53);
        uint64_t v122 = v51;
        v104(v58, v44);
        unint64_t v60 = sub_1000B7400();
        os_signpost_type_t v61 = sub_1000B7910();
        char v62 = sub_1000B79D0();
        long long v102 = v44;
        if (v62)
        {
          uint64_t v63 = v126;
          uint64_t v64 = v127;
          uint64_t v65 = *(void (**)(char *, char *, uint64_t))(v127 + 16);
          unint64_t v66 = (v127 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
          uint64_t v67 = v108;
          v65(v108, v110, v126);
          uint64_t v68 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v68 = 0;
          os_signpost_id_t v69 = sub_1000B73D0();
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v60, v61, v69, "Create Archive", "", v68, 2u);
          swift_slowDealloc();

          uint64_t v70 = v67;
          (*(void (**)(char *, uint64_t))(v64 + 8))(v67, v63);
        }
        else
        {

          uint64_t v63 = v126;
          uint64_t v65 = *(void (**)(char *, char *, uint64_t))(v127 + 16);
          unint64_t v66 = (v127 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
          uint64_t v70 = v108;
        }
        uint64_t v123 = v47;
        unint64_t v100 = v66;
        v65(v70, v110, v63);
        sub_1000B7450();
        swift_allocObject();
        uint64_t v124 = sub_1000B7440();
        uint64_t v48 = *(char **)(v109 + 16);
        uint64_t v107 = v65;
        if (!v48) {
          break;
        }
        uint64_t v71 = *(void (**)(char *, uint64_t, uint64_t))(v118 + 16);
        uint64_t v72 = v109 + ((*(unsigned __int8 *)(v118 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v118 + 80));
        uint64_t v73 = *(void *)(v118 + 72);
        long long v44 = (void (**)(void, void))(v118 + 8);
        swift_bridgeObjectRetain();
        uint64_t v51 = 0;
        uint64_t v47 = v119;
        uint64_t v50 = v117;
        while (1)
        {
          v71(v50, v72, v47);
          uint64_t v74 = sub_1000B7160();
          BOOL v75 = __OFADD__(v51, v74);
          v51 += v74;
          if (v75) {
            break;
          }
          (*v44)(v50, v47);
          v72 += v73;
          if (!--v48)
          {
            swift_bridgeObjectRelease();
            uint64_t v76 = v126;
            goto LABEL_16;
          }
        }
        __break(1u);
LABEL_38:
        swift_once();
      }
      uint64_t v76 = v63;
      uint64_t v51 = 0;
LABEL_16:
      uint64_t v77 = v125;
      long long v78 = v121;
      uint64_t v79 = (void (*)(void *, void))v104;
      if (qword_1001036B8 != -1) {
        swift_once();
      }
      uint64_t v80 = sub_1000B7490();
      sub_100038E8C(v80, (uint64_t)qword_100104880);
      uint64_t v81 = sub_1000B7480();
      os_log_type_t v82 = sub_1000B7840();
      if (os_log_type_enabled(v81, v82))
      {
        unint64_t v83 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)unint64_t v83 = 134217984;
        uint64_t v79 = (void (*)(void *, void))v104;
        uint64_t v131 = v51;
        sub_1000B79F0();
        _os_log_impl((void *)&_mh_execute_header, v81, v82, "Exporting notesâ€¦ {noteCount: %ld}", v83, 0xCu);
        uint64_t v77 = v125;
        swift_slowDealloc();
      }

      [v78 setTotalUnitCount:v51];
      uint64_t v84 = v106;
      sub_100032FC8(v129, (uint64_t)v106, (uint64_t *)&unk_1001042F0);
      uint64_t result = v101(v84, 1, v102);
      if (result != 1)
      {
        uint64_t v85 = v130;
        sub_10007EF50(v84, v109, v78);
        uint64_t v86 = v120;
        if (v85)
        {
          uint64_t v130 = v85;
          v79(v84, v102);
          long long v87 = sub_1000B7400();
          uint64_t v88 = v105;
          sub_1000B7430();
          os_signpost_type_t v89 = sub_1000B7900();
          if (sub_1000B79D0())
          {
            swift_retain();
            uint64_t v90 = v114;
            sub_1000B7460();
            swift_release();
            uint64_t v91 = v116;
            if ((*(unsigned int (**)(char *, uint64_t))(v77 + 88))(v90, v116) == enum case for OSSignpostError.doubleEnd(_:))
            {
              uint64_t v92 = "[Error] Interval already ended";
            }
            else
            {
              (*(void (**)(char *, uint64_t))(v77 + 8))(v90, v91);
              uint64_t v92 = "";
            }
            long long v93 = v105;
LABEL_34:
            long long v97 = v108;
            v107(v108, v93, v76);
            id v98 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)id v98 = 0;
            os_signpost_id_t v99 = sub_1000B73D0();
            _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v87, v89, v99, "Create Archive", v92, v98, 2u);
            swift_slowDealloc();

            long long v96 = *(void (**)(char *, uint64_t))(v127 + 8);
            v96(v93, v76);
            v96(v97, v76);
            goto LABEL_35;
          }
        }
        else
        {
          v79(v84, v102);
          sub_1000B7830();
          uint64_t v130 = 0;
          *uint64_t v86 = 1;
          long long v87 = sub_1000B7400();
          uint64_t v88 = v113;
          sub_1000B7430();
          os_signpost_type_t v89 = sub_1000B7900();
          if (sub_1000B79D0())
          {
            swift_retain();
            long long v94 = v111;
            sub_1000B7460();
            swift_release();
            uint64_t v95 = v116;
            if ((*(unsigned int (**)(char *, uint64_t))(v77 + 88))(v94, v116) == enum case for OSSignpostError.doubleEnd(_:))
            {
              uint64_t v92 = "[Error] Interval already ended";
            }
            else
            {
              (*(void (**)(char *, uint64_t))(v77 + 8))(v94, v95);
              uint64_t v92 = "";
            }
            long long v93 = v113;
            goto LABEL_34;
          }
        }

        long long v96 = *(void (**)(char *, uint64_t))(v127 + 8);
        v96(v88, v76);
LABEL_35:
        swift_release();
        return ((uint64_t (*)(char *, uint64_t))v96)(v110, v76);
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10007D9CC(uint64_t a1, uint64_t *a2, uint64_t a3, void *a4, unsigned char *a5)
{
  uint64_t v138 = a1;
  id v131 = a4;
  uint64_t v7 = *a2;
  uint64_t v129 = a5;
  uint64_t v130 = v7;
  uint64_t v8 = sub_1000B7420();
  uint64_t v126 = *(void *)(v8 - 8);
  uint64_t v127 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v122 = (char *)v112 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v124 = (char *)v112 - v12;
  __chkstk_darwin(v11);
  uint64_t v121 = (char *)v112 - v13;
  uint64_t v14 = (void (*)(char *, char *, uint64_t))sub_1000B7410();
  uint64_t v133 = *((void *)v14 - 1);
  uint64_t v134 = v14;
  __chkstk_darwin(v14);
  uint64_t v132 = (char *)v112 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000B73E0();
  uint64_t v135 = *(void *)(v16 - 8);
  uint64_t v136 = v16;
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v125 = (char *)v112 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v128 = (char *)v112 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)v112 - v22;
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v26 = (char *)v112 - v25;
  __chkstk_darwin(v24);
  uint64_t v28 = (char *)v112 - v27;
  uint64_t v29 = sub_100032E20((uint64_t *)&unk_1001042F0);
  uint64_t v30 = __chkstk_darwin(v29 - 8);
  uint64_t v32 = (char *)v112 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __chkstk_darwin(v30);
  uint64_t v35 = (char *)v112 - v34;
  uint64_t v36 = __chkstk_darwin(v33);
  uint64_t v137 = (void (*)(void, void))((char *)v112 - v37);
  __chkstk_darwin(v36);
  uint64_t v39 = (char *)v112 - v38;
  uint64_t v40 = v139;
  uint64_t result = sub_10007EB34(a3, (uint64_t)v112 - v38);
  if (v40) {
    return result;
  }
  unint64_t v115 = v35;
  id v114 = v32;
  uint64_t v117 = a3;
  uint64_t v113 = v23;
  uint64_t v139 = 0;
  uint64_t v116 = v26;
  uint64_t v120 = v28;
  uint64_t v42 = sub_1000B6F10();
  uint64_t v43 = *(void *)(v42 - 8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(v39, 0, 1, v42);
  uint64_t v44 = v138;
  sub_10005613C((uint64_t)v39, v138, (uint64_t *)&unk_1001042F0);
  uint64_t v45 = v137;
  sub_100032FC8(v44, (uint64_t)v137, (uint64_t *)&unk_1001042F0);
  uint64_t v46 = v43;
  uint64_t v47 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v43 + 48);
  uint64_t v123 = v42;
  uint64_t v119 = v43 + 48;
  uint64_t v118 = v47;
  uint64_t result = v47((uint64_t)v45, 1, v42);
  if (result == 1)
  {
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    return result;
  }
  uint64_t v48 = v44;
  swift_getObjectType();
  uint64_t v49 = v139;
  sub_1000B7090();
  if (v49) {
    return (*(uint64_t (**)(void, uint64_t))(v46 + 8))(v45, v123);
  }
  uint64_t v50 = (char *)(v46 + 8);
  uint64_t v51 = v123;
  uint64_t v137 = *(void (**)(void, void))(v46 + 8);
  v137(v45, v123);
  if (qword_1001036C0 != -1) {
    swift_once();
  }
  uint64_t v139 = 0;
  uint64_t v52 = v134;
  uint64_t v53 = sub_100038E8C((uint64_t)v134, (uint64_t)qword_100104898);
  uint64_t v54 = v132;
  uint64_t v55 = v133;
  (*(void (**)(char *, uint64_t, void))(v133 + 16))(v132, v53, v52);
  uint64_t v56 = (uint64_t)v115;
  sub_100032FC8(v48, (uint64_t)v115, (uint64_t *)&unk_1001042F0);
  uint64_t result = v118(v56, 1, v51);
  if (result == 1) {
    goto LABEL_35;
  }
  v112[1] = a2;
  sub_1000B6E80(&v142);
  sub_1000B7400();
  sub_1000B73C0();
  (*(void (**)(char *, void (*)(char *, char *, uint64_t)))(v55 + 8))(v54, v52);
  uint64_t v132 = v50;
  v137(v56, v51);
  unint64_t v115 = (char *)v53;
  uint64_t v57 = sub_1000B7400();
  os_signpost_type_t v58 = sub_1000B7910();
  if (sub_1000B79D0())
  {
    uint64_t v60 = v135;
    uint64_t v59 = v136;
    uint64_t v134 = *(void (**)(char *, char *, uint64_t))(v135 + 16);
    os_signpost_type_t v61 = v116;
    char v62 = v120;
    v134(v116, v120, v136);
    uint64_t v63 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v63 = 0;
    os_signpost_id_t v64 = sub_1000B73D0();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v57, v58, v64, "Create Archive", "", v63, 2u);
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v59);
    uint64_t v65 = v62;
    unint64_t v66 = v134;
  }
  else
  {

    uint64_t v59 = v136;
    unint64_t v66 = *(void (**)(char *, char *, uint64_t))(v135 + 16);
    uint64_t v65 = v120;
    os_signpost_type_t v61 = v116;
  }
  uint64_t v67 = v117;
  v66(v61, v65, v59);
  sub_1000B7450();
  swift_allocObject();
  uint64_t v133 = sub_1000B7440();
  uint64_t v140 = 0;
  uint64_t v141 = v67;
  __chkstk_darwin(v133);
  uint64_t v68 = *(void *)(v130 + 88);
  v112[-2] = *(void *)(v130 + 80);
  v112[-1] = v68;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1000B71E0();
  sub_1000B7760();
  swift_getWitnessTable();
  uint64_t v69 = v139;
  sub_1000B7680();
  Class isa = v142.super.isa;
  if (qword_1001036B8 != -1) {
    swift_once();
  }
  uint64_t v71 = sub_1000B7490();
  sub_100038E8C(v71, (uint64_t)qword_100104880);
  uint64_t v72 = sub_1000B7480();
  os_log_type_t v73 = sub_1000B7840();
  if (os_log_type_enabled(v72, v73))
  {
    uint64_t v74 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v74 = 134217984;
    v142.super.Class isa = isa;
    sub_1000B79F0();
    _os_log_impl((void *)&_mh_execute_header, v72, v73, "Exporting notesâ€¦ {noteCount: %ld}", v74, 0xCu);
    swift_slowDealloc();
  }
  uint64_t v134 = v66;

  uint64_t v75 = (uint64_t)v131;
  [v131 setTotalUnitCount:isa];
  uint64_t v76 = (uint64_t)v114;
  sub_100032FC8(v138, (uint64_t)v114, (uint64_t *)&unk_1001042F0);
  uint64_t result = v118(v76, 1, v123);
  uint64_t v77 = v120;
  if (result == 1) {
    goto LABEL_36;
  }
  sub_1000801A8(v76, v117, v75);
  long long v78 = v129;
  if (v69)
  {
    uint64_t v79 = v136;
    uint64_t v139 = v69;
    v137(v76, v123);
    uint64_t v80 = sub_1000B7400();
    uint64_t v81 = v128;
    sub_1000B7430();
    int v82 = sub_1000B7900();
    if (sub_1000B79D0())
    {
      swift_retain();
      unint64_t v83 = v124;
      sub_1000B7460();
      swift_release();
      uint64_t v85 = v126;
      uint64_t v84 = v127;
      int v86 = (*(uint64_t (**)(char *, uint64_t))(v126 + 88))(v83, v127);
      LODWORD(v138) = v82;
      if (v86 == enum case for OSSignpostError.doubleEnd(_:))
      {
        os_signpost_type_t v89 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v85 + 8))(v83, v84);
        os_signpost_type_t v89 = "";
      }
      uint64_t v90 = v116;
      uint64_t v91 = v128;
      v134(v116, v128, v79);
      uint64_t v92 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v92 = 0;
      os_signpost_id_t v93 = sub_1000B73D0();
      uint64_t v88 = v79;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v80, (os_signpost_type_t)v138, v93, "Create Archive", v89, v92, 2u);
      swift_slowDealloc();

      long long v87 = *(void (**)(char *, uint64_t))(v135 + 8);
      v87(v91, v79);
      v87(v90, v79);
      uint64_t v77 = v120;
    }
    else
    {

      long long v87 = *(void (**)(char *, uint64_t))(v135 + 8);
      uint64_t v88 = v79;
      v87(v81, v79);
    }
    swift_release();
    long long v94 = v77;
    uint64_t v95 = v88;
  }
  else
  {
    v137(v76, v123);
    sub_1000B7830();
    uint64_t v139 = 0;
    *long long v78 = 1;
    long long v96 = sub_1000B7400();
    long long v97 = v113;
    sub_1000B7430();
    int v98 = sub_1000B7900();
    char v99 = sub_1000B79D0();
    unint64_t v100 = v134;
    if (v99)
    {
      swift_retain();
      long long v101 = v121;
      sub_1000B7460();
      swift_release();
      uint64_t v103 = v126;
      uint64_t v102 = v127;
      int v104 = (*(uint64_t (**)(char *, uint64_t))(v126 + 88))(v101, v127);
      LODWORD(v138) = v98;
      if (v104 == enum case for OSSignpostError.doubleEnd(_:))
      {
        uint64_t v107 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v103 + 8))(v101, v102);
        uint64_t v107 = "";
      }
      id v108 = v116;
      uint64_t v109 = v113;
      uint64_t v106 = v136;
      v100(v116, v113, v136);
      id v110 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v110 = 0;
      os_signpost_id_t v111 = sub_1000B73D0();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v96, (os_signpost_type_t)v138, v111, "Create Archive", v107, v110, 2u);
      swift_slowDealloc();

      long long v87 = *(void (**)(char *, uint64_t))(v135 + 8);
      v87(v109, v106);
      v87(v108, v106);
      uint64_t v77 = v120;
    }
    else
    {

      long long v87 = *(void (**)(char *, uint64_t))(v135 + 8);
      char v105 = v97;
      uint64_t v106 = v136;
      v87(v105, v136);
    }
    swift_release();
    long long v94 = v77;
    uint64_t v95 = v106;
  }
  return ((uint64_t (*)(char *, uint64_t))v87)(v94, v95);
}

uint64_t sub_10007E884@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a1;
  uint64_t v22 = a2;
  uint64_t v3 = sub_1000B7030();
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000B6F10();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v18 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v18 - v14;
  swift_getObjectType();
  uint64_t result = sub_1000B70C0();
  if (!v2)
  {
    sub_1000B6EA0();
    uint64_t v18 = *(void (**)(char *, uint64_t))(v7 + 8);
    v18(v10, v6);
    sub_1000B7020();
    sub_1000B6FF0();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v5, v20);
    sub_1000B6EA0();
    swift_bridgeObjectRelease();
    uint64_t v17 = (uint64_t (*)(char *, uint64_t))v18;
    v18(v13, v6);
    sub_10007A2E0(v21);
    _sSo9ICArchiveC38com_apple_mobilenotes_SharingExtensionE15archiveFilename8forTitleS2S_tFZ_0();
    swift_bridgeObjectRelease();
    sub_1000B6EA0();
    swift_bridgeObjectRelease();
    return v17(v15, v6);
  }
  return result;
}

uint64_t sub_10007EB34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v24 = a2;
  void v20[2] = *v2;
  uint64_t v4 = sub_1000B7030();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1000B6F10();
  uint64_t v21 = *(void *)(v23 - 8);
  uint64_t v8 = __chkstk_darwin(v23);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)v20 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v20 - v14;
  swift_getObjectType();
  uint64_t result = sub_1000B70C0();
  if (!v3)
  {
    v20[1] = 0;
    sub_1000B6EA0();
    uint64_t v21 = *(void *)(v21 + 8);
    uint64_t v17 = v4;
    uint64_t v18 = v23;
    ((void (*)(char *))v21)(v10);
    sub_1000B7020();
    sub_1000B6FF0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v17);
    sub_1000B6EA0();
    swift_bridgeObjectRelease();
    uint64_t v19 = (uint64_t (*)(char *, uint64_t))v21;
    ((void (*)(char *, uint64_t))v21)(v13, v18);
    sub_100038DC8(0, &qword_1001049A0);
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    static ICArchive.archiveTitle<A>(for:)(v22);
    _sSo9ICArchiveC38com_apple_mobilenotes_SharingExtensionE15archiveFilename8forTitleS2S_tFZ_0();
    swift_bridgeObjectRelease();
    sub_1000B6EA0();
    swift_bridgeObjectRelease();
    return v19(v15, v18);
  }
  return result;
}

uint64_t sub_10007EE98@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1000B71E0();
  uint64_t result = sub_1000B7160();
  if (__OFADD__(v3, result)) {
    __break(1u);
  }
  else {
    *a2 = v3 + result;
  }
  return result;
}

uint64_t sub_10007EF50(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = v4;
  uint64_t v120 = a3;
  uint64_t v116 = sub_1000B6F10();
  uint64_t v115 = *(void *)(v116 - 8);
  __chkstk_darwin(v116);
  uint64_t v9 = (char *)&v115 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = type metadata accessor for ICArchiveModel();
  __chkstk_darwin(v118);
  uint64_t v11 = (char *)&v115 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100032E20(&qword_100104970);
  uint64_t v123 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  unsigned int v143 = (char *)&v115 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v142 = (uint64_t)&v115 - v15;
  uint64_t v144 = sub_100032E20(&qword_100103908);
  uint64_t v125 = *(void *)(v144 - 8);
  uint64_t v16 = __chkstk_darwin(v144);
  uint64_t v130 = (char *)&v115 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v127 = (char *)&v115 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v139 = (char *)&v115 - v21;
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v115 - v22;
  if (*(unsigned char *)(v3 + 96))
  {
    __break(1u);
LABEL_98:
    swift_once();
    goto LABEL_85;
  }
  uint64_t v119 = v11;
  *(unsigned char *)(v3 + 96) = 1;
  uint64_t v141 = v12;
  *(void *)&long long v148 = _swiftEmptyArrayStorage;
  uint64_t v24 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  uint64_t v126 = v3;
  uint64_t v124 = a2;
  uint64_t v122 = a1;
  uint64_t v117 = v9;
  uint64_t v121 = v24;
  if (v24)
  {
    uint64_t v137 = *(void (**)(char *, char *, uint64_t))(v125 + 16);
    uint64_t v25 = *(char **)(v125 + 72);
    uint64_t v129 = (void (**)(char *, uint64_t))((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80));
    uint64_t v26 = (char *)v129 + a2;
    unsigned int v135 = enum case for ICObjectReferences.Types.account<A>(_:);
    uint64_t v134 = (void (**)(char *, void, uint64_t))(v123 + 104);
    uint64_t v133 = (void (**)(char *, uint64_t))(v123 + 8);
    uint64_t v132 = (void (**)(char *, char *, uint64_t))(v125 + 32);
    uint64_t v138 = (void *)(v125 + 16);
    uint64_t v128 = (void (**)(char *, uint64_t))(v125 + 8);
    id v131 = _swiftEmptyArrayStorage;
    uint64_t v27 = v24;
    uint64_t v28 = v23;
    uint64_t v140 = v5;
    uint64_t v136 = v25;
    v137(v23, v26, v144);
    while (1)
    {
      uint64_t v31 = v142;
      sub_1000B7180();
      uint64_t v32 = v143;
      uint64_t v33 = v141;
      (*v134)(v143, v135, v141);
      sub_10008DE70();
      uint64_t v34 = v28;
      char v35 = sub_1000B7570();
      uint64_t v36 = *v133;
      (*v133)(v32, v33);
      v36((char *)v31, v33);
      if (v35)
      {
        uint64_t v29 = v144;
        (*v128)(v34, v144);
        uint64_t v5 = v140;
        uint64_t v28 = v34;
        uint64_t v30 = v136;
      }
      else
      {
        uint64_t v37 = *v132;
        uint64_t v29 = v144;
        (*v132)(v139, v34, v144);
        uint64_t v38 = v131;
        uint64_t v28 = v34;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100043974(0, v38[2] + 1, 1);
          uint64_t v29 = v144;
        }
        uint64_t v39 = (void *)v148;
        unint64_t v41 = *(void *)(v148 + 16);
        unint64_t v40 = *(void *)(v148 + 24);
        uint64_t v30 = v136;
        if (v41 >= v40 >> 1)
        {
          sub_100043974(v40 > 1, v41 + 1, 1);
          uint64_t v29 = v144;
          uint64_t v39 = (void *)v148;
        }
        v39[2] = v41 + 1;
        id v131 = v39;
        v37((char *)v129 + (void)v39 + v41 * (void)v30, v139, v29);
        uint64_t v5 = v140;
      }
      uint64_t v26 = &v30[(void)v26];
      if (!--v27) {
        break;
      }
      v137(v28, v26, v29);
    }
    uint64_t v42 = (void *)v148;
    uint64_t v3 = v126;
  }
  else
  {
    uint64_t v42 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  int64_t v43 = v42[2];
  uint64_t v139 = *(char **)(v3 + 16);
  if (v43)
  {
    *(void *)&long long v145 = _swiftEmptyArrayStorage;
    swift_retain();
    sub_100043954(0, v43, 0);
    uint64_t v44 = (void *)v145;
    unint64_t v45 = (*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80);
    uint64_t v138 = v42;
    uint64_t v46 = (char *)v42 + v45;
    uint64_t v47 = *(void *)(v125 + 72);
    while (1)
    {
      sub_10008DECC();
      if (v5) {
        break;
      }
      *(void *)&long long v145 = v44;
      unint64_t v49 = v44[2];
      unint64_t v48 = v44[3];
      if (v49 >= v48 >> 1)
      {
        sub_100043954(v48 > 1, v49 + 1, 1);
        uint64_t v44 = (void *)v145;
      }
      void v44[2] = v49 + 1;
      sub_10008DEE4((uint64_t)&v148, (uint64_t)&v44[4 * v49 + 4]);
      v46 += v47;
      if (!--v43)
      {
        swift_release();
        swift_release();
        goto LABEL_24;
      }
    }
    swift_release();
    swift_release();
    uint64_t result = swift_release();
    goto LABEL_90;
  }
  swift_release();
  uint64_t v44 = _swiftEmptyArrayStorage;
LABEL_24:
  uint64_t v51 = v44[2];
  if (v51)
  {
    uint64_t v52 = (uint64_t)(v44 + 4);
    swift_bridgeObjectRetain();
    uint64_t v53 = _swiftEmptyArrayStorage;
    uint64_t v140 = (char *)&type metadata for Any + 8;
    do
    {
      sub_100032FC8(v52, (uint64_t)v150, &qword_1001036F8);
      sub_100032FC8((uint64_t)v150, (uint64_t)&v148, &qword_1001036F8);
      if (v149)
      {
        sub_100032E20(&qword_1001038F0);
        if ((swift_dynamicCast() & 1) == 0)
        {
          uint64_t v147 = 0;
          long long v145 = 0u;
          long long v146 = 0u;
        }
      }
      else
      {
        sub_100038E30((uint64_t)&v148, &qword_1001036F8);
        long long v145 = 0u;
        long long v146 = 0u;
        uint64_t v147 = 0;
      }
      sub_100038E30((uint64_t)v150, &qword_1001036F8);
      if (*((void *)&v146 + 1))
      {
        sub_10008E058(&v145, (uint64_t)&v148);
        sub_10008E058(&v148, (uint64_t)&v145);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v53 = sub_100035EEC(0, v53[2] + 1, 1, v53);
        }
        unint64_t v55 = v53[2];
        unint64_t v54 = v53[3];
        if (v55 >= v54 >> 1) {
          uint64_t v53 = sub_100035EEC((void *)(v54 > 1), v55 + 1, 1, v53);
        }
        v53[2] = v55 + 1;
        sub_10008E058(&v145, (uint64_t)&v53[5 * v55 + 4]);
      }
      else
      {
        sub_100038E30((uint64_t)&v145, &qword_100104980);
      }
      v52 += 32;
      --v51;
    }
    while (v51);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v53 = _swiftEmptyArrayStorage;
  }
  *(void *)&long long v148 = _swiftEmptyArrayStorage;
  uint64_t v56 = v53[2];
  if (v56)
  {
    uint64_t v57 = v53 + 4;
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v58 = v57[3];
      uint64_t v59 = v57[4];
      sub_100047028(v57, v58);
      uint64_t v60 = (*(uint64_t (**)(uint64_t, uint64_t))(v59 + 24))(v58, v59);
      sub_10006A5D8(v60);
      v57 += 5;
      --v56;
    }
    while (v56);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v128 = (void (**)(char *, uint64_t))v148;
  *(void *)&long long v148 = _swiftEmptyArrayStorage;
  uint64_t v61 = swift_bridgeObjectRetain();
  uint64_t v62 = v121;
  uint64_t v63 = v127;
  if (v121)
  {
    uint64_t v140 = v5;
    uint64_t v137 = *(void (**)(char *, char *, uint64_t))(v125 + 16);
    os_signpost_id_t v64 = *(void (***)(char *, uint64_t))(v125 + 72);
    id v131 = (void *)((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80));
    uint64_t v65 = (char *)v131 + v61;
    uint64_t v136 = (char *)(v123 + 104);
    unsigned int v135 = enum case for ICObjectReferences.Types.folder<A>(_:);
    uint64_t v134 = (void (**)(char *, void, uint64_t))(v123 + 8);
    uint64_t v129 = (void (**)(char *, uint64_t))(v125 + 8);
    uint64_t v138 = (void *)(v125 + 16);
    uint64_t v132 = (void (**)(char *, char *, uint64_t))(v125 + 32);
    uint64_t v133 = v64;
    uint64_t v66 = v141;
    uint64_t v67 = (void (**)(char *, uint64_t))(v123 + 8);
    v137(v127, (char *)v131 + v61, v144);
    while (1)
    {
      uint64_t v70 = v142;
      sub_1000B7180();
      uint64_t v71 = v63;
      uint64_t v72 = v143;
      (*(void (**)(char *, void, uint64_t))v136)(v143, v135, v66);
      sub_100038DC8(0, &qword_100104988);
      sub_10008DF4C();
      char v73 = sub_1000B7190();
      uint64_t v74 = *v67;
      (*v67)(v72, v66);
      v74((char *)v70, v66);
      if (v73)
      {
        uint64_t v75 = *v132;
        (*v132)(v130, v71, v144);
        uint64_t v76 = v148;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100043974(0, *(void *)(v76 + 16) + 1, 1);
          uint64_t v76 = v148;
        }
        unint64_t v78 = *(void *)(v76 + 16);
        unint64_t v77 = *(void *)(v76 + 24);
        if (v78 >= v77 >> 1)
        {
          sub_100043974(v77 > 1, v78 + 1, 1);
          uint64_t v76 = v148;
        }
        *(void *)(v76 + 16) = v78 + 1;
        uint64_t v69 = v133;
        uint64_t v79 = (char *)v131 + v76 + v78 * (void)v133;
        uint64_t v68 = v144;
        v75(v79, v130, v144);
        uint64_t v63 = v127;
      }
      else
      {
        uint64_t v68 = v144;
        (*v129)(v71, v144);
        uint64_t v63 = v71;
        uint64_t v69 = v133;
      }
      uint64_t v65 = (char *)v69 + (void)v65;
      if (!--v62) {
        break;
      }
      v137(v63, v65, v68);
    }
    uint64_t v80 = (void *)v148;
    uint64_t v5 = v140;
  }
  else
  {
    uint64_t v80 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  int64_t v81 = v80[2];
  if (v81)
  {
    *(void *)&long long v145 = _swiftEmptyArrayStorage;
    swift_retain();
    sub_100043954(0, v81, 0);
    int v82 = (void *)v145;
    unint64_t v83 = (char *)v80 + ((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80));
    uint64_t v84 = *(void *)(v125 + 72);
    while (1)
    {
      sub_10008DECC();
      if (v5) {
        break;
      }
      *(void *)&long long v145 = v82;
      unint64_t v86 = v82[2];
      unint64_t v85 = v82[3];
      if (v86 >= v85 >> 1)
      {
        sub_100043954(v85 > 1, v86 + 1, 1);
        int v82 = (void *)v145;
      }
      v82[2] = v86 + 1;
      sub_10008DEE4((uint64_t)&v148, (uint64_t)&v82[4 * v86 + 4]);
      v83 += v84;
      if (!--v81)
      {
        uint64_t v140 = 0;
        swift_release();
        swift_release();
        goto LABEL_66;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    uint64_t result = swift_release();
LABEL_90:
    uint64_t v107 = v126;
    goto LABEL_91;
  }
  uint64_t v140 = v5;
  swift_release();
  int v82 = _swiftEmptyArrayStorage;
LABEL_66:
  uint64_t v87 = v82[2];
  if (v87)
  {
    uint64_t v88 = (uint64_t)(v82 + 4);
    swift_bridgeObjectRetain();
    os_signpost_type_t v89 = _swiftEmptyArrayStorage;
    do
    {
      sub_100032FC8(v88, (uint64_t)v150, &qword_1001036F8);
      sub_100032FC8((uint64_t)v150, (uint64_t)&v148, &qword_1001036F8);
      if (v149)
      {
        sub_100032E20(&qword_1001038F0);
        if ((swift_dynamicCast() & 1) == 0)
        {
          uint64_t v147 = 0;
          long long v145 = 0u;
          long long v146 = 0u;
        }
      }
      else
      {
        sub_100038E30((uint64_t)&v148, &qword_1001036F8);
        long long v145 = 0u;
        long long v146 = 0u;
        uint64_t v147 = 0;
      }
      sub_100038E30((uint64_t)v150, &qword_1001036F8);
      if (*((void *)&v146 + 1))
      {
        sub_10008E058(&v145, (uint64_t)&v148);
        sub_10008E058(&v148, (uint64_t)&v145);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          os_signpost_type_t v89 = sub_100035EEC(0, v89[2] + 1, 1, v89);
        }
        unint64_t v91 = v89[2];
        unint64_t v90 = v89[3];
        if (v91 >= v90 >> 1) {
          os_signpost_type_t v89 = sub_100035EEC((void *)(v90 > 1), v91 + 1, 1, v89);
        }
        v89[2] = v91 + 1;
        sub_10008E058(&v145, (uint64_t)&v89[5 * v91 + 4]);
      }
      else
      {
        sub_100038E30((uint64_t)&v145, &qword_100104980);
      }
      v88 += 32;
      --v87;
    }
    while (v87);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    os_signpost_type_t v89 = _swiftEmptyArrayStorage;
  }
  uint64_t v92 = v140;
  os_signpost_id_t v93 = sub_10007A45C((uint64_t)v89);
  uint64_t v144 = (uint64_t)v92;
  swift_bridgeObjectRelease();
  uint64_t v94 = *(void *)(v126 + 24);
  uint64_t v95 = *(char **)(v126 + 40);
  long long v96 = *(char **)(v126 + 48);
  long long v97 = *(char **)(v126 + 56);
  int v98 = *(char **)(v126 + 64);
  uint64_t v142 = *(void *)(v126 + 32);
  unsigned int v143 = (char *)v94;
  sub_10004E834(v94, v142);
  uint64_t v141 = sub_10008D724((uint64_t)v128);
  swift_bridgeObjectRelease();
  if (!v93[2])
  {
    swift_bridgeObjectRelease();
    os_signpost_id_t v93 = 0;
  }
  char v99 = (int *)v118;
  a2 = (uint64_t)v119;
  unint64_t v100 = &v119[*(int *)(v118 + 24)];
  sub_1000B6FC0();
  uint64_t v101 = sub_1000B6FD0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v101 - 8) + 56))(v100, 0, 1, v101);
  *(unsigned char *)a2 = 0;
  *(void *)(a2 + 8) = 1;
  uint64_t v102 = (char **)(a2 + v99[7]);
  uint64_t v103 = v142;
  char *v102 = v143;
  v102[1] = (char *)v103;
  v102[2] = v95;
  v102[3] = v96;
  v102[4] = v97;
  v102[5] = v98;
  *(void *)(a2 + v99[8]) = v141;
  *(void *)(a2 + v99[9]) = v93;
  if (qword_100103660 != -1) {
    goto LABEL_98;
  }
LABEL_85:
  sub_10008DE28(&qword_100104998, (void (*)(uint64_t))type metadata accessor for ICArchiveModel);
  uint64_t v104 = v144;
  uint64_t v105 = sub_1000B6D50();
  uint64_t v107 = v126;
  id v108 = v117;
  if (v104)
  {
    uint64_t result = sub_10008E1E0(a2, (uint64_t (*)(void))type metadata accessor for ICArchiveModel);
LABEL_91:
    *(unsigned char *)(v107 + 96) = 0;
    return result;
  }
  uint64_t v109 = v105;
  unint64_t v110 = v106;
  swift_getObjectType();
  if (qword_100103648 != -1) {
    swift_once();
  }
  sub_1000B6EA0();
  sub_1000B7070();
  (*(void (**)(char *, uint64_t))(v115 + 8))(v108, v116);
  uint64_t v111 = v121;
  if (v121)
  {
    id v112 = (void (*)(char *, char *, uint64_t))(v124
                                                        + ((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80)));
    uint64_t v113 = *(void *)(v125 + 72);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v114 = v111;
      sub_1000811F0(v112, v122, v120);
      id v112 = (void (*)(char *, char *, uint64_t))((char *)v112 + v113);
      --v111;
    }
    while (v114 != 1);
    swift_bridgeObjectRelease();
  }
  sub_10008E1E0((uint64_t)v119, (uint64_t (*)(void))type metadata accessor for ICArchiveModel);
  uint64_t result = sub_1000452E0(v109, v110);
  *(unsigned char *)(v126 + 96) = 0;
  return result;
}

uint64_t sub_1000801A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *v3;
  uint64_t v9 = sub_1000B6F10();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = type metadata accessor for ICArchiveModel();
  uint64_t v13 = __chkstk_darwin(v87);
  if (v3[12])
  {
    __break(1u);
LABEL_52:
    swift_once();
    goto LABEL_45;
  }
  unint64_t v85 = v12;
  uint64_t v83 = v10;
  uint64_t v84 = v9;
  uint64_t v82 = a1;
  uint64_t v81 = a3;
  unint64_t v86 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = &v73;
  *((unsigned char *)v3 + 96) = 1;
  *(void *)&long long v96 = a2;
  __chkstk_darwin(v13);
  uint64_t v15 = a2;
  uint64_t v16 = *(void *)(v8 + 80);
  uint64_t v17 = *(void *)(v8 + 88);
  *(&v73 - 2) = v16;
  *(&v73 - 1) = v17;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1000B71E0();
  uint64_t v18 = sub_1000B7760();
  uint64_t v89 = v15;
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  *(void *)&long long v96 = sub_1000B7AE0();
  uint64_t v91 = v4;
  uint64_t v92 = v3;
  uint64_t v19 = v3[2];
  uint64_t v20 = (void *)swift_allocObject();
  void v20[2] = v16;
  void v20[3] = v17;
  v20[4] = v19;
  uint64_t v21 = swift_unknownObjectRetain();
  unint64_t v90 = &v73;
  __chkstk_darwin(v21);
  *(&v73 - 4) = v16;
  *(&v73 - 3) = v17;
  *(&v73 - 2) = (uint64_t)sub_10008E334;
  *(&v73 - 1) = (uint64_t)v20;
  uint64_t v22 = sub_100032E20(&qword_1001036F8);
  uint64_t v23 = sub_100032E20(&qword_100103AB0);
  uint64_t v24 = swift_getWitnessTable();
  uint64_t v25 = v91;
  uint64_t v26 = sub_10007A588((void (*)(char *, char *))sub_10008E260, (uint64_t)(&v73 - 6), v18, v22, v23, v24, (uint64_t)&protocol self-conformance witness table for Error, (uint64_t)&v93);
  if (v25)
  {
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
LABEL_50:
    *((unsigned char *)v92 + 96) = 0;
    return result;
  }
  uint64_t v79 = v19;
  uint64_t v74 = 0;
  uint64_t v75 = v24;
  uint64_t v76 = v23;
  uint64_t v77 = v22;
  uint64_t v78 = v16;
  uint64_t v80 = v18;
  uint64_t v91 = v26;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v28 = *(void *)(v91 + 16);
  if (v28)
  {
    uint64_t v29 = v91 + 32;
    swift_bridgeObjectRetain();
    uint64_t v30 = _swiftEmptyArrayStorage;
    do
    {
      sub_100032FC8(v29, (uint64_t)v98, &qword_1001036F8);
      sub_100032FC8((uint64_t)v98, (uint64_t)&v96, &qword_1001036F8);
      if (v97)
      {
        sub_100032E20(&qword_1001038F0);
        if ((swift_dynamicCast() & 1) == 0)
        {
          uint64_t v95 = 0;
          long long v93 = 0u;
          long long v94 = 0u;
        }
      }
      else
      {
        sub_100038E30((uint64_t)&v96, &qword_1001036F8);
        long long v93 = 0u;
        long long v94 = 0u;
        uint64_t v95 = 0;
      }
      sub_100038E30((uint64_t)v98, &qword_1001036F8);
      if (*((void *)&v94 + 1))
      {
        sub_10008E058(&v93, (uint64_t)&v96);
        sub_10008E058(&v96, (uint64_t)&v93);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v30 = sub_100035EEC(0, v30[2] + 1, 1, v30);
        }
        unint64_t v32 = v30[2];
        unint64_t v31 = v30[3];
        if (v32 >= v31 >> 1) {
          uint64_t v30 = sub_100035EEC((void *)(v31 > 1), v32 + 1, 1, v30);
        }
        void v30[2] = v32 + 1;
        sub_10008E058(&v93, (uint64_t)&v30[5 * v32 + 4]);
      }
      else
      {
        sub_100038E30((uint64_t)&v93, &qword_100104980);
      }
      v29 += 32;
      --v28;
    }
    while (v28);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v30 = _swiftEmptyArrayStorage;
  }
  *(void *)&long long v96 = _swiftEmptyArrayStorage;
  uint64_t v33 = v30[2];
  if (v33)
  {
    uint64_t v34 = v30 + 4;
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v35 = v34[3];
      uint64_t v36 = v34[4];
      sub_100047028(v34, v35);
      uint64_t v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 24))(v35, v36);
      sub_10006A5D8(v37);
      v34 += 5;
      --v33;
    }
    while (v33);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v38 = v96;
  *(void *)&long long v96 = v89;
  __chkstk_darwin(v89);
  uint64_t v39 = v78;
  *(&v73 - 2) = v78;
  *(&v73 - 1) = v17;
  swift_bridgeObjectRetain();
  uint64_t v40 = v80;
  uint64_t v41 = v74;
  *(void *)&long long v96 = sub_1000B7AE0();
  uint64_t v42 = (void *)swift_allocObject();
  v42[2] = v39;
  v42[3] = v17;
  v42[4] = v79;
  uint64_t v43 = swift_unknownObjectRetain();
  __chkstk_darwin(v43);
  *(&v73 - 4) = v39;
  *(&v73 - 3) = v17;
  *(&v73 - 2) = (uint64_t)sub_10008E334;
  *(&v73 - 1) = (uint64_t)v42;
  uint64_t v44 = sub_10007A588((void (*)(char *, char *))sub_10008E260, (uint64_t)(&v73 - 6), v40, v77, v76, v75, (uint64_t)&protocol self-conformance witness table for Error, (uint64_t)&v93);
  uint64_t v91 = v41;
  if (v41)
  {
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_50;
  }
  uint64_t v45 = v44;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v46 = *(void *)(v45 + 16);
  if (v46)
  {
    uint64_t v47 = v45 + 32;
    unint64_t v90 = (uint64_t *)v45;
    swift_bridgeObjectRetain();
    unint64_t v48 = _swiftEmptyArrayStorage;
    uint64_t v49 = v38;
    do
    {
      sub_100032FC8(v47, (uint64_t)v98, &qword_1001036F8);
      sub_100032FC8((uint64_t)v98, (uint64_t)&v96, &qword_1001036F8);
      if (v97)
      {
        sub_100032E20(&qword_1001038F0);
        if ((swift_dynamicCast() & 1) == 0)
        {
          uint64_t v95 = 0;
          long long v93 = 0u;
          long long v94 = 0u;
        }
      }
      else
      {
        sub_100038E30((uint64_t)&v96, &qword_1001036F8);
        long long v93 = 0u;
        long long v94 = 0u;
        uint64_t v95 = 0;
      }
      sub_100038E30((uint64_t)v98, &qword_1001036F8);
      if (*((void *)&v94 + 1))
      {
        sub_10008E058(&v93, (uint64_t)&v96);
        sub_10008E058(&v96, (uint64_t)&v93);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v48 = sub_100035EEC(0, v48[2] + 1, 1, v48);
        }
        unint64_t v51 = v48[2];
        unint64_t v50 = v48[3];
        if (v51 >= v50 >> 1) {
          unint64_t v48 = sub_100035EEC((void *)(v50 > 1), v51 + 1, 1, v48);
        }
        v48[2] = v51 + 1;
        sub_10008E058(&v93, (uint64_t)&v48[5 * v51 + 4]);
        uint64_t v38 = v49;
      }
      else
      {
        sub_100038E30((uint64_t)&v93, &qword_100104980);
      }
      v47 += 32;
      --v46;
    }
    while (v46);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v48 = _swiftEmptyArrayStorage;
  }
  uint64_t v52 = v91;
  uint64_t v53 = sub_10007A45C((uint64_t)v48);
  uint64_t v91 = v52;
  swift_bridgeObjectRelease();
  uint64_t v54 = v92[4];
  unint64_t v55 = (uint64_t *)v92[5];
  uint64_t v56 = (uint64_t *)v92[6];
  uint64_t v58 = (uint64_t *)v92[7];
  uint64_t v57 = (uint64_t *)v92[8];
  unint64_t v90 = (uint64_t *)v92[3];
  uint64_t WitnessTable = v54;
  sub_10004E834((uint64_t)v90, v54);
  uint64_t v79 = sub_10008D724(v38);
  swift_bridgeObjectRelease();
  if (!v53[2])
  {
    swift_bridgeObjectRelease();
    uint64_t v53 = 0;
  }
  uint64_t v59 = (int *)v87;
  uint64_t v10 = (uint64_t)v86;
  uint64_t v60 = &v86[*(int *)(v87 + 24)];
  sub_1000B6FC0();
  uint64_t v61 = sub_1000B6FD0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v60, 0, 1, v61);
  *(unsigned char *)uint64_t v10 = 0;
  *(void *)(v10 + 8) = 1;
  uint64_t v62 = (uint64_t **)(v10 + v59[7]);
  uint64_t v63 = WitnessTable;
  *uint64_t v62 = v90;
  v62[1] = (uint64_t *)v63;
  void v62[2] = v55;
  v62[3] = v56;
  v62[4] = v58;
  v62[5] = v57;
  *(void *)(v10 + v59[8]) = v79;
  *(void *)(v10 + v59[9]) = v53;
  if (qword_100103660 != -1) {
    goto LABEL_52;
  }
LABEL_45:
  sub_10008DE28(&qword_100104998, (void (*)(uint64_t))type metadata accessor for ICArchiveModel);
  uint64_t v64 = v91;
  uint64_t v65 = sub_1000B6D50();
  uint64_t v67 = v85;
  if (v64)
  {
    uint64_t result = sub_10008E1E0(v10, (uint64_t (*)(void))type metadata accessor for ICArchiveModel);
    goto LABEL_50;
  }
  uint64_t v68 = v65;
  unint64_t v69 = v66;
  uint64_t v91 = v92[11];
  swift_getObjectType();
  if (qword_100103648 != -1) {
    swift_once();
  }
  uint64_t v70 = v82;
  sub_1000B6EA0();
  sub_1000B7070();
  uint64_t v71 = (*(uint64_t (**)(char *, uint64_t))(v83 + 8))(v67, v84);
  *(void *)&long long v96 = v89;
  __chkstk_darwin(v71);
  uint64_t v72 = v92;
  *(&v73 - 4) = (uint64_t)v92;
  *(&v73 - 3) = v70;
  *(&v73 - 2) = v81;
  swift_getWitnessTable();
  sub_1000B7690();
  sub_10008E1E0(v10, (uint64_t (*)(void))type metadata accessor for ICArchiveModel);
  uint64_t result = sub_1000452E0(v68, v69);
  *((unsigned char *)v72 + 96) = 0;
  return result;
}

BOOL sub_100080E54()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v0 = sub_1000B71A0();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v10 - v5;
  sub_1000B71E0();
  sub_1000B7180();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for ICObjectReferences.Types.account<A>(_:), v0);
  swift_getWitnessTable();
  char v7 = sub_1000B7570();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v4, v0);
  v8(v6, v0);
  return (v7 & 1) == 0;
}

uint64_t sub_100081034()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v0 = sub_1000B71A0();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v10 - v5;
  sub_1000B71E0();
  sub_1000B7180();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for ICObjectReferences.Types.folder<A>(_:), v0);
  char v7 = sub_1000B7190();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v4, v0);
  v8(v6, v0);
  return v7 & 1;
}

uint64_t sub_1000811F0(void (*a1)(char *, char *, uint64_t), void *a2, void *a3)
{
  os_signpost_type_t v218 = a3;
  uint64_t v217 = a2;
  uint64_t v229 = sub_1000B7420();
  uint64_t v230 = *(void *)(v229 - 8);
  uint64_t v4 = __chkstk_darwin(v229);
  uint64_t v211 = (char *)&v199 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v202 = (char *)&v199 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v213 = (char *)&v199 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  os_signpost_type_t v210 = (char *)&v199 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v201 = (char *)&v199 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v212 = (char *)&v199 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v219 = (char *)&v199 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  id v203 = (char *)&v199 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v220 = (char *)&v199 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v224 = (char *)&v199 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v207 = (char *)&v199 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v206 = (char *)&v199 - v27;
  __chkstk_darwin(v26);
  uint64_t v225 = (char *)&v199 - v28;
  uint64_t v29 = sub_100032E20(&qword_100103908);
  uint64_t v231 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  long long v237 = (char *)&v199 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1000B7410();
  uint64_t v32 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v34 = (char *)&v199 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v248 = sub_1000B73E0();
  uint64_t v239 = *(void *)(v248 - 8);
  uint64_t v35 = __chkstk_darwin(v248);
  v216 = (char *)&v199 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v205 = (char *)&v199 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  v223 = (char *)&v199 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v215 = (char *)&v199 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  os_signpost_id_t v204 = (char *)&v199 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  uint64_t v222 = (char *)&v199 - v46;
  uint64_t v47 = __chkstk_darwin(v45);
  uint64_t v221 = (char *)&v199 - v48;
  uint64_t v49 = __chkstk_darwin(v47);
  v208 = (char *)&v199 - v50;
  uint64_t v51 = __chkstk_darwin(v49);
  uint64_t v227 = (char *)&v199 - v52;
  uint64_t v53 = __chkstk_darwin(v51);
  v226 = (char *)&v199 - v54;
  uint64_t v55 = __chkstk_darwin(v53);
  uint64_t v214 = (char *)&v199 - v56;
  uint64_t v57 = __chkstk_darwin(v55);
  v209 = (char *)&v199 - v58;
  uint64_t v59 = __chkstk_darwin(v57);
  uint64_t v228 = (char *)&v199 - v60;
  uint64_t v61 = __chkstk_darwin(v59);
  long long v238 = (char *)&v199 - v62;
  __chkstk_darwin(v61);
  uint64_t v64 = (char *)&v199 - v63;
  if (qword_1001036C0 != -1) {
    swift_once();
  }
  uint64_t v65 = sub_100038E8C(v31, (uint64_t)qword_100104898);
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v34, v65, v31);
  uint64_t v234 = v29;
  long long v236 = a1;
  sub_1000B7140();
  id v66 = v245;
  id v67 = [v245 description];
  sub_1000B75B0();

  sub_1000B7580();
  swift_bridgeObjectRelease();
  sub_1000B7400();
  sub_1000B73C0();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
  uint64_t v233 = v65;
  uint64_t v68 = sub_1000B7400();
  os_signpost_type_t v69 = sub_1000B7910();
  if (sub_1000B79D0())
  {
    uint64_t v70 = v238;
    uint64_t v71 = v239;
    uint64_t v72 = *(void (**)(char *, char *, uint64_t))(v239 + 16);
    unint64_t v73 = (v239 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v74 = v248;
    v72(v238, v64, v248);
    uint64_t v75 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v75 = 0;
    os_signpost_id_t v76 = sub_1000B73D0();
    os_signpost_type_t v77 = v69;
    uint64_t v78 = v74;
    unint64_t v79 = v73;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v68, v77, v76, "Export Object", "", v75, 2u);
    swift_slowDealloc();

    uint64_t v80 = v70;
    (*(void (**)(char *, uint64_t))(v71 + 8))(v70, v78);
  }
  else
  {

    uint64_t v80 = v238;
    uint64_t v72 = *(void (**)(char *, char *, uint64_t))(v239 + 16);
    unint64_t v79 = (v239 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v78 = v248;
  }
  uint64_t v81 = v237;
  v72(v80, v64, v78);
  sub_1000B7450();
  swift_allocObject();
  uint64_t v248 = sub_1000B7440();
  uint64_t v82 = v231;
  uint64_t v83 = v234;
  (*(void (**)(char *, void, uint64_t))(v231 + 16))(v81, v236, v234);
  int v84 = (*(uint64_t (**)(char *, uint64_t))(v82 + 88))(v81, v83);
  long long v235 = v64;
  if (v84 == enum case for ICObjectReferences.account<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v82 + 96))(v81, v83);
    swift_release();
    sub_1000B72C0();
    sub_10008DE28(&qword_100104968, (void (*)(uint64_t))&type metadata accessor for ICModernObjectProvider);
    unint64_t v85 = v232;
    sub_1000B7130();
    long long v237 = v85;
    if (v85)
    {
      unint64_t v86 = sub_1000B7400();
      uint64_t v87 = v228;
      sub_1000B7430();
      os_signpost_type_t v88 = sub_1000B7900();
      if (sub_1000B79D0())
      {
        uint64_t v89 = v72;
        swift_retain();
        unint64_t v90 = v225;
        sub_1000B7460();
        swift_release();
        uint64_t v91 = v230;
        uint64_t v92 = v229;
        if ((*(unsigned int (**)(char *, uint64_t))(v230 + 88))(v90, v229) == enum case for OSSignpostError.doubleEnd(_:))
        {
          long long v93 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v91 + 8))(v90, v92);
          long long v93 = "";
        }
        uint64_t v123 = v238;
        uint64_t v124 = v228;
        v89(v238, v228, v78);
        goto LABEL_91;
      }

      unint64_t v110 = *(void (**)(char *, uint64_t))(v239 + 8);
      v110(v87, v78);
LABEL_94:
      uint64_t v169 = v235;
      swift_release();
      int v170 = v169;
      return ((uint64_t (*)(char *, uint64_t))v110)(v170, v78);
    }
    unint64_t v200 = v79;
    if (v241)
    {
      sub_100032E20(&qword_1001038F0);
      if (swift_dynamicCast())
      {
        if (*((void *)&v243 + 1))
        {
          sub_10008E058(&v242, (uint64_t)&v245);
          uint64_t v103 = sub_1000B71C0();
          uint64_t v104 = v237;
          sub_100085EC0(&v245, v103, (uint64_t)v217, (uint64_t)v218);
          long long v237 = v104;
          if (v104)
          {
            sub_100037F98((uint64_t)&v245);
            swift_bridgeObjectRelease();
            unint64_t v86 = sub_1000B7400();
            uint64_t v105 = v209;
            sub_1000B7430();
            os_signpost_type_t v106 = sub_1000B7900();
            if (sub_1000B79D0())
            {
              long long v236 = v72;
              swift_retain();
              uint64_t v107 = v206;
              sub_1000B7460();
              swift_release();
              uint64_t v108 = v230;
              uint64_t v109 = v229;
              if ((*(unsigned int (**)(char *, uint64_t))(v230 + 88))(v107, v229) == enum case for OSSignpostError.doubleEnd(_:))
              {
                long long v93 = "[Error] Interval already ended";
              }
              else
              {
                (*(void (**)(char *, uint64_t))(v108 + 8))(v107, v109);
                long long v93 = "";
              }
              uint64_t v124 = v209;
              uint64_t v123 = v238;
              v236(v238, v209, v78);
              id v166 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)id v166 = 0;
              os_signpost_id_t v167 = sub_1000B73D0();
              os_signpost_type_t v168 = v106;
              goto LABEL_92;
            }
            goto LABEL_68;
          }
          goto LABEL_82;
        }
      }
      else
      {
        uint64_t v244 = 0;
        long long v242 = 0u;
        long long v243 = 0u;
      }
    }
    else
    {
      sub_100038E30((uint64_t)v240, &qword_1001036F8);
      long long v242 = 0u;
      long long v243 = 0u;
      uint64_t v244 = 0;
    }
    long long v236 = v72;
    sub_100038E30((uint64_t)&v242, &qword_100104980);
    if (qword_1001036B8 != -1) {
      swift_once();
    }
    uint64_t v125 = v235;
    uint64_t v126 = sub_1000B7490();
    sub_100038E8C(v126, (uint64_t)qword_100104880);
    uint64_t v127 = sub_1000B7480();
    os_log_type_t v128 = sub_1000B7860();
    BOOL v129 = os_log_type_enabled(v127, v128);
    uint64_t v130 = v224;
    if (v129)
    {
      id v131 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v131 = 0;
      _os_log_impl((void *)&_mh_execute_header, v127, v128, "Account to be exported does not exist anymore â€” skipping", v131, 2u);
      swift_slowDealloc();
    }

    uint64_t v132 = sub_1000B7400();
    uint64_t v133 = v226;
    sub_1000B7430();
    os_signpost_type_t v134 = sub_1000B7900();
    if ((sub_1000B79D0() & 1) == 0)
    {

      unint64_t v110 = *(void (**)(char *, uint64_t))(v239 + 8);
      v110(v133, v78);
LABEL_122:
      swift_release();
      int v170 = v125;
      return ((uint64_t (*)(char *, uint64_t))v110)(v170, v78);
    }
    swift_retain();
    sub_1000B7460();
    swift_release();
    uint64_t v135 = v230;
    uint64_t v136 = v229;
    if ((*(unsigned int (**)(char *, uint64_t))(v230 + 88))(v130, v229) == enum case for OSSignpostError.doubleEnd(_:))
    {
      uint64_t v137 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v135 + 8))(v130, v136);
      uint64_t v137 = "";
    }
    uint64_t v150 = v226;
    uint64_t v151 = v238;
    v236(v238, v226, v78);
    goto LABEL_99;
  }
  if (v84 == enum case for ICObjectReferences.folder<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v82 + 96))(v237, v83);
    swift_release();
    sub_1000B72C0();
    sub_10008DE28(&qword_100104968, (void (*)(uint64_t))&type metadata accessor for ICModernObjectProvider);
    long long v94 = v232;
    sub_1000B7130();
    long long v237 = v94;
    if (v94)
    {
      unint64_t v86 = sub_1000B7400();
      uint64_t v95 = v227;
      sub_1000B7430();
      os_signpost_type_t v88 = sub_1000B7900();
      if (sub_1000B79D0())
      {
        long long v236 = v72;
        swift_retain();
        long long v96 = v220;
        sub_1000B7460();
        swift_release();
        uint64_t v97 = v230;
        uint64_t v98 = v229;
        if ((*(unsigned int (**)(char *, uint64_t))(v230 + 88))(v96, v229) == enum case for OSSignpostError.doubleEnd(_:))
        {
          long long v93 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v97 + 8))(v96, v98);
          long long v93 = "";
        }
        uint64_t v123 = v238;
        long long v148 = v238;
        uint64_t v149 = &v249;
LABEL_87:
        uint64_t v124 = (char *)*(v149 - 32);
LABEL_90:
        v236(v148, v124, v78);
LABEL_91:
        id v166 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v166 = 0;
        os_signpost_id_t v167 = sub_1000B73D0();
        os_signpost_type_t v168 = v88;
LABEL_92:
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v86, v168, v167, "Export Object", v93, v166, 2u);
        swift_slowDealloc();

        unint64_t v110 = *(void (**)(char *, uint64_t))(v239 + 8);
        v110(v124, v78);
LABEL_93:
        v110(v123, v78);
        goto LABEL_94;
      }
      goto LABEL_34;
    }
    unint64_t v200 = v79;
    if (v241)
    {
      sub_100032E20(&qword_1001038F0);
      if (swift_dynamicCast())
      {
        if (*((void *)&v243 + 1))
        {
          sub_10008E058(&v242, (uint64_t)&v245);
          uint64_t v116 = sub_1000B71C0();
          uint64_t v117 = v237;
          sub_10008686C(&v245, v116, (uint64_t)v217, (uint64_t)v218);
          long long v237 = v117;
          if (v117)
          {
            sub_100037F98((uint64_t)&v245);
            swift_bridgeObjectRelease();
            unint64_t v86 = sub_1000B7400();
            uint64_t v105 = v208;
            sub_1000B7430();
            os_signpost_type_t v118 = sub_1000B7900();
            if (sub_1000B79D0())
            {
              swift_retain();
              uint64_t v119 = v203;
              sub_1000B7460();
              swift_release();
              uint64_t v120 = v230;
              uint64_t v121 = v229;
              if ((*(unsigned int (**)(char *, uint64_t))(v230 + 88))(v119, v229) == enum case for OSSignpostError.doubleEnd(_:))
              {
                uint64_t v122 = "[Error] Interval already ended";
              }
              else
              {
                (*(void (**)(char *, uint64_t))(v120 + 8))(v119, v121);
                uint64_t v122 = "";
              }
              uint64_t v123 = v238;
              long long v194 = v238;
              long long v195 = (char **)&v239;
LABEL_137:
              uint64_t v196 = *(v195 - 32);
              v72(v194, v196, v78);
              char v197 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)char v197 = 0;
              os_signpost_id_t v198 = sub_1000B73D0();
              _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v86, v118, v198, "Export Object", v122, v197, 2u);
              swift_slowDealloc();

              unint64_t v110 = *(void (**)(char *, uint64_t))(v239 + 8);
              v110(v196, v78);
              goto LABEL_93;
            }
            goto LABEL_68;
          }
          goto LABEL_82;
        }
      }
      else
      {
        uint64_t v244 = 0;
        long long v242 = 0u;
        long long v243 = 0u;
      }
    }
    else
    {
      sub_100038E30((uint64_t)v240, &qword_1001036F8);
      long long v242 = 0u;
      long long v243 = 0u;
      uint64_t v244 = 0;
    }
    sub_100038E30((uint64_t)&v242, &qword_100104980);
    if (qword_1001036B8 != -1) {
      swift_once();
    }
    uint64_t v152 = sub_1000B7490();
    sub_100038E8C(v152, (uint64_t)qword_100104880);
    id v153 = sub_1000B7480();
    os_log_type_t v154 = sub_1000B7860();
    BOOL v155 = os_log_type_enabled(v153, v154);
    CGRect v156 = v219;
    if (v155)
    {
      unint64_t v157 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v157 = 0;
      _os_log_impl((void *)&_mh_execute_header, v153, v154, "Folder to be exported does not exist anymore â€” skipping", v157, 2u);
      swift_slowDealloc();
    }

    uint64_t v132 = sub_1000B7400();
    unint64_t v158 = v221;
    sub_1000B7430();
    os_signpost_type_t v159 = sub_1000B7900();
    if (sub_1000B79D0())
    {
      os_signpost_type_t v134 = v159;
      swift_retain();
      sub_1000B7460();
      swift_release();
      uint64_t v160 = v230;
      uint64_t v161 = v229;
      if ((*(unsigned int (**)(char *, uint64_t))(v230 + 88))(v156, v229) == enum case for OSSignpostError.doubleEnd(_:))
      {
        uint64_t v137 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v160 + 8))(v156, v161);
        uint64_t v137 = "";
      }
      uint64_t v171 = &v246;
LABEL_97:
      uint64_t v150 = (char *)*((void *)v171 - 32);
      uint64_t v151 = v238;
      uint64_t v172 = v238;
LABEL_98:
      v72(v172, v150, v78);
LABEL_99:
      uint64_t v173 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v173 = 0;
      os_signpost_id_t v174 = sub_1000B73D0();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v132, v134, v174, "Export Object", v137, v173, 2u);
      swift_slowDealloc();

      unint64_t v110 = *(void (**)(char *, uint64_t))(v239 + 8);
      v110(v150, v78);
      v110(v151, v78);
LABEL_121:
      uint64_t v125 = v235;
      goto LABEL_122;
    }
    goto LABEL_120;
  }
  if (v84 == enum case for ICObjectReferences.note<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v82 + 96))(v237, v83);
    swift_release();
    sub_1000B72C0();
    sub_10008DE28(&qword_100104968, (void (*)(uint64_t))&type metadata accessor for ICModernObjectProvider);
    char v99 = v232;
    sub_1000B7130();
    long long v237 = v99;
    if (v99)
    {
      unint64_t v86 = sub_1000B7400();
      uint64_t v95 = v222;
      sub_1000B7430();
      os_signpost_type_t v88 = sub_1000B7900();
      if (sub_1000B79D0())
      {
        long long v236 = v72;
        swift_retain();
        unint64_t v100 = v212;
        sub_1000B7460();
        swift_release();
        uint64_t v101 = v230;
        uint64_t v102 = v229;
        if ((*(unsigned int (**)(char *, uint64_t))(v230 + 88))(v100, v229) == enum case for OSSignpostError.doubleEnd(_:))
        {
          long long v93 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v101 + 8))(v100, v102);
          long long v93 = "";
        }
        uint64_t v123 = v238;
        long long v148 = v238;
        uint64_t v149 = (uint64_t *)&v247;
        goto LABEL_87;
      }
LABEL_34:

      unint64_t v110 = *(void (**)(char *, uint64_t))(v239 + 8);
      v110(v95, v78);
      goto LABEL_94;
    }
    unint64_t v200 = v79;
    if (v241)
    {
      sub_100032E20(&qword_1001038F0);
      if (swift_dynamicCast())
      {
        if (*((void *)&v243 + 1))
        {
          sub_10008E058(&v242, (uint64_t)&v245);
          uint64_t v138 = sub_1000B71C0();
          uint64_t v139 = v237;
          sub_100087208(&v245, v138, v217, v218);
          long long v237 = v139;
          if (v139)
          {
            sub_100037F98((uint64_t)&v245);
            swift_bridgeObjectRelease();
            unint64_t v86 = sub_1000B7400();
            uint64_t v105 = v204;
            sub_1000B7430();
            os_signpost_type_t v118 = sub_1000B7900();
            if (sub_1000B79D0())
            {
              swift_retain();
              uint64_t v140 = v201;
              sub_1000B7460();
              swift_release();
              uint64_t v141 = v230;
              uint64_t v142 = v229;
              if ((*(unsigned int (**)(char *, uint64_t))(v230 + 88))(v140, v229) == enum case for OSSignpostError.doubleEnd(_:))
              {
                uint64_t v122 = "[Error] Interval already ended";
              }
              else
              {
                (*(void (**)(char *, uint64_t))(v141 + 8))(v140, v142);
                uint64_t v122 = "";
              }
              uint64_t v123 = v238;
              long long v194 = v238;
              long long v195 = &v235;
              goto LABEL_137;
            }
LABEL_68:

            unint64_t v110 = *(void (**)(char *, uint64_t))(v239 + 8);
            v110(v105, v78);
            goto LABEL_94;
          }
LABEL_82:
          sub_100037F98((uint64_t)&v245);
          swift_bridgeObjectRelease();
          uint64_t v132 = sub_1000B7400();
          id v162 = v214;
          sub_1000B7430();
          os_signpost_type_t v134 = sub_1000B7900();
          if ((sub_1000B79D0() & 1) == 0)
          {

            unint64_t v110 = *(void (**)(char *, uint64_t))(v239 + 8);
            v110(v162, v78);
            goto LABEL_121;
          }
          swift_retain();
          v163 = v207;
          sub_1000B7460();
          swift_release();
          uint64_t v164 = v230;
          uint64_t v165 = v229;
          if ((*(unsigned int (**)(char *, uint64_t))(v230 + 88))(v163, v229) == enum case for OSSignpostError.doubleEnd(_:))
          {
            uint64_t v137 = "[Error] Interval already ended";
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v164 + 8))(v163, v165);
            uint64_t v137 = "";
          }
          uint64_t v151 = v238;
          uint64_t v172 = v238;
          uint64_t v150 = v214;
          goto LABEL_98;
        }
      }
      else
      {
        uint64_t v244 = 0;
        long long v242 = 0u;
        long long v243 = 0u;
      }
    }
    else
    {
      sub_100038E30((uint64_t)v240, &qword_1001036F8);
      long long v242 = 0u;
      long long v243 = 0u;
      uint64_t v244 = 0;
    }
    sub_100038E30((uint64_t)&v242, &qword_100104980);
    if (qword_1001036B8 != -1) {
      swift_once();
    }
    uint64_t v175 = sub_1000B7490();
    sub_100038E8C(v175, (uint64_t)qword_100104880);
    id v176 = sub_1000B7480();
    os_log_type_t v177 = sub_1000B7860();
    BOOL v178 = os_log_type_enabled(v176, v177);
    unint64_t v179 = v210;
    if (v178)
    {
      uint64_t v180 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v180 = 0;
      _os_log_impl((void *)&_mh_execute_header, v176, v177, "Note to be exported does not exist anymore â€” skipping", v180, 2u);
      swift_slowDealloc();
    }

    uint64_t v132 = sub_1000B7400();
    unint64_t v158 = v215;
    sub_1000B7430();
    os_signpost_type_t v181 = sub_1000B7900();
    if (sub_1000B79D0())
    {
      os_signpost_type_t v134 = v181;
      swift_retain();
      sub_1000B7460();
      swift_release();
      uint64_t v182 = v230;
      uint64_t v183 = v229;
      if ((*(unsigned int (**)(char *, uint64_t))(v230 + 88))(v179, v229) == enum case for OSSignpostError.doubleEnd(_:))
      {
        uint64_t v137 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v182 + 8))(v179, v183);
        uint64_t v137 = "";
      }
      uint64_t v171 = (char *)&v243;
      goto LABEL_97;
    }
LABEL_120:

    unint64_t v110 = *(void (**)(char *, uint64_t))(v239 + 8);
    v110(v158, v78);
    goto LABEL_121;
  }
  if (v84 == enum case for ICObjectReferences.attachment<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v82 + 96))(v237, v83);
    swift_release();
    sub_1000B72C0();
    sub_10008DE28(&qword_100104968, (void (*)(uint64_t))&type metadata accessor for ICModernObjectProvider);
    uint64_t v111 = v232;
    sub_1000B7130();
    long long v237 = v111;
    if (v111)
    {
      unint64_t v86 = sub_1000B7400();
      uint64_t v105 = v223;
      sub_1000B7430();
      os_signpost_type_t v112 = sub_1000B7900();
      if (sub_1000B79D0())
      {
        long long v236 = v72;
        swift_retain();
        uint64_t v113 = v213;
        sub_1000B7460();
        swift_release();
        uint64_t v114 = v230;
        uint64_t v115 = v229;
        os_signpost_type_t v88 = v112;
        if ((*(unsigned int (**)(char *, uint64_t))(v230 + 88))(v113, v229) == enum case for OSSignpostError.doubleEnd(_:))
        {
          long long v93 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v114 + 8))(v113, v115);
          long long v93 = "";
        }
        uint64_t v124 = v223;
        uint64_t v123 = v238;
        long long v148 = v238;
        goto LABEL_90;
      }
      goto LABEL_68;
    }
    unint64_t v200 = v79;
    if (v241)
    {
      sub_100032E20(&qword_1001038F0);
      if (swift_dynamicCast())
      {
        if (*((void *)&v243 + 1))
        {
          sub_10008E058(&v242, (uint64_t)&v245);
          uint64_t v143 = sub_1000B71C0();
          uint64_t v144 = v237;
          sub_100087FB8(&v245, v143, v217, (uint8_t *)v218);
          long long v237 = v144;
          if (v144)
          {
            sub_100037F98((uint64_t)&v245);
            swift_bridgeObjectRelease();
            unint64_t v86 = sub_1000B7400();
            uint64_t v105 = v205;
            sub_1000B7430();
            os_signpost_type_t v118 = sub_1000B7900();
            if (sub_1000B79D0())
            {
              swift_retain();
              long long v145 = v202;
              sub_1000B7460();
              swift_release();
              uint64_t v146 = v230;
              uint64_t v147 = v229;
              if ((*(unsigned int (**)(char *, uint64_t))(v230 + 88))(v145, v229) == enum case for OSSignpostError.doubleEnd(_:))
              {
                uint64_t v122 = "[Error] Interval already ended";
              }
              else
              {
                (*(void (**)(char *, uint64_t))(v146 + 8))(v145, v147);
                uint64_t v122 = "";
              }
              uint64_t v123 = v238;
              long long v194 = v238;
              long long v195 = (char **)&v236;
              goto LABEL_137;
            }
            goto LABEL_68;
          }
          goto LABEL_82;
        }
      }
      else
      {
        uint64_t v244 = 0;
        long long v242 = 0u;
        long long v243 = 0u;
      }
    }
    else
    {
      sub_100038E30((uint64_t)v240, &qword_1001036F8);
      long long v242 = 0u;
      long long v243 = 0u;
      uint64_t v244 = 0;
    }
    sub_100038E30((uint64_t)&v242, &qword_100104980);
    if (qword_1001036B8 != -1) {
      swift_once();
    }
    uint64_t v184 = sub_1000B7490();
    sub_100038E8C(v184, (uint64_t)qword_100104880);
    uint64_t v185 = sub_1000B7480();
    os_log_type_t v186 = sub_1000B7860();
    BOOL v187 = os_log_type_enabled(v185, v186);
    uint64_t v188 = v211;
    if (v187)
    {
      uint64_t v189 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v189 = 0;
      _os_log_impl((void *)&_mh_execute_header, v185, v186, "Object to be exported does not exist anymore â€” skipping", v189, 2u);
      swift_slowDealloc();
    }

    uint64_t v132 = sub_1000B7400();
    unint64_t v158 = v216;
    sub_1000B7430();
    os_signpost_type_t v190 = sub_1000B7900();
    if (sub_1000B79D0())
    {
      os_signpost_type_t v134 = v190;
      swift_retain();
      sub_1000B7460();
      swift_release();
      uint64_t v191 = v230;
      uint64_t v192 = v229;
      if ((*(unsigned int (**)(char *, uint64_t))(v230 + 88))(v188, v229) == enum case for OSSignpostError.doubleEnd(_:))
      {
        uint64_t v137 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v191 + 8))(v188, v192);
        uint64_t v137 = "";
      }
      uint64_t v171 = (char *)&v243 + 8;
      goto LABEL_97;
    }
    goto LABEL_120;
  }
  uint64_t result = sub_1000B7DB0();
  __break(1u);
  return result;
}

uint64_t sub_100083230(char *a1, void (*a2)(char *, uint64_t), void *a3)
{
  os_signpost_type_t v190 = a3;
  uint64_t v189 = a2;
  uint64_t v215 = a1;
  uint64_t v4 = *v3;
  uint64_t v203 = sub_1000B7420();
  uint64_t v204 = *(void *)(v203 - 8);
  uint64_t v5 = __chkstk_darwin(v203);
  v180[2] = (char *)v180 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  BOOL v187 = (char *)v180 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  v180[1] = (char *)v180 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  os_log_type_t v186 = (char *)v180 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  v180[3] = (char *)v180 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  long long v194 = (char *)v180 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  v180[6] = (char *)v180 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v199 = (char *)v180 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  os_signpost_type_t v181 = (char *)v180 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v185 = (char *)v180 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v184 = (char *)v180 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v193 = (char *)v180 - v28;
  __chkstk_darwin(v27);
  os_signpost_id_t v198 = (char *)v180 - v29;
  uint64_t v30 = *(void *)(v4 + 88);
  uint64_t v207 = v3;
  uint64_t v31 = *(void *)(v4 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v214 = v30;
  swift_getAssociatedConformanceWitness();
  uint64_t v33 = sub_1000B71E0();
  uint64_t v212 = *(void *)(v33 - 8);
  uint64_t v34 = __chkstk_darwin(v33);
  uint64_t v211 = (char *)v180 - v35;
  uint64_t v208 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v34);
  uint64_t v37 = (char *)v180 - v36;
  uint64_t v38 = sub_1000B7410();
  uint64_t v39 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v41 = (char *)v180 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v209 = (void *)sub_1000B73E0();
  uint64_t v224 = *(v209 - 1);
  uint64_t v42 = __chkstk_darwin(v209);
  v180[5] = (char *)v180 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __chkstk_darwin(v42);
  uint64_t v196 = (char *)v180 - v45;
  uint64_t v46 = __chkstk_darwin(v44);
  v180[4] = (char *)v180 - v47;
  uint64_t v48 = __chkstk_darwin(v46);
  long long v195 = (char *)v180 - v49;
  uint64_t v50 = __chkstk_darwin(v48);
  uint64_t v182 = (char *)v180 - v51;
  uint64_t v52 = __chkstk_darwin(v50);
  uint64_t v201 = (char *)v180 - v53;
  uint64_t v54 = __chkstk_darwin(v52);
  uint64_t v183 = (char *)v180 - v55;
  uint64_t v56 = __chkstk_darwin(v54);
  uint64_t v202 = (char *)v180 - v57;
  uint64_t v58 = __chkstk_darwin(v56);
  uint64_t v188 = (char *)v180 - v59;
  uint64_t v60 = __chkstk_darwin(v58);
  uint64_t v192 = (char *)v180 - v61;
  uint64_t v62 = __chkstk_darwin(v60);
  uint64_t v191 = (char *)v180 - v63;
  uint64_t v64 = __chkstk_darwin(v62);
  char v197 = (char *)v180 - v65;
  uint64_t v66 = __chkstk_darwin(v64);
  unint64_t v200 = (char *)v180 - v67;
  uint64_t v68 = __chkstk_darwin(v66);
  uint64_t v213 = (char *)v180 - v69;
  __chkstk_darwin(v68);
  uint64_t v71 = (char *)v180 - v70;
  if (qword_1001036C0 != -1) {
    swift_once();
  }
  uint64_t v72 = sub_100038E8C(v38, (uint64_t)qword_100104898);
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v41, v72, v38);
  uint64_t v210 = v33;
  sub_1000B7140();
  uint64_t v205 = v31;
  swift_getAssociatedConformanceWitness();
  sub_1000B7D80();
  (*(void (**)(char *, uint64_t))(v208 + 8))(v37, AssociatedTypeWitness);
  sub_1000B7580();
  swift_bridgeObjectRelease();
  sub_1000B7400();
  sub_1000B73C0();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v41, v38);
  uint64_t v208 = v72;
  unint64_t v73 = sub_1000B7400();
  os_signpost_type_t v74 = sub_1000B7910();
  if (sub_1000B79D0())
  {
    uint64_t v75 = v224;
    os_signpost_id_t v76 = *(void **)(v224 + 16);
    os_signpost_type_t v77 = v213;
    uint64_t v78 = v209;
    ((void (*)(char *, char *, void *))v76)(v213, v71, v209);
    unint64_t v79 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v79 = 0;
    os_signpost_id_t v80 = sub_1000B73D0();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v73, v74, v80, "Export Object", "", v79, 2u);
    swift_slowDealloc();

    uint64_t v81 = v77;
    (*(void (**)(char *, void *))(v75 + 8))(v77, v78);
  }
  else
  {

    os_signpost_id_t v76 = *(void **)(v224 + 16);
    uint64_t v78 = v209;
    uint64_t v81 = v213;
  }
  uint64_t v82 = v212;
  ((void (*)(char *, char *, void *))v76)(v81, v71, v78);
  sub_1000B7450();
  swift_allocObject();
  uint64_t v83 = sub_1000B7440();
  uint64_t v84 = v210;
  unint64_t v85 = v211;
  (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v211, v215, v210);
  int v86 = (*(uint64_t (**)(char *, uint64_t))(v82 + 88))(v85, v84);
  v209 = v76;
  if (v86 == enum case for ICObjectReferences.account<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v82 + 96))(v85, v84);
    swift_release();
    uint64_t v87 = v206;
    sub_1000B7130();
    if (v87)
    {
      os_signpost_type_t v88 = sub_1000B7400();
      uint64_t v89 = v202;
      sub_1000B7430();
      os_signpost_type_t v90 = sub_1000B7900();
      if (sub_1000B79D0())
      {
        uint64_t v214 = v87;
        uint64_t v215 = v71;
        swift_retain();
        uint64_t v91 = v199;
        sub_1000B7460();
        swift_release();
        uint64_t v92 = v204;
        uint64_t v93 = v203;
        int v94 = (*(uint64_t (**)(char *, uint64_t))(v204 + 88))(v91, v203);
        v180[0] = v83;
        if (v94 == enum case for OSSignpostError.doubleEnd(_:))
        {
          os_signpost_type_t v112 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v92 + 8))(v91, v93);
          os_signpost_type_t v112 = "";
        }
        uint64_t v113 = v213;
        uint64_t v114 = v213;
        uint64_t v115 = &v225;
LABEL_103:
        BOOL v129 = (char *)*(v115 - 32);
LABEL_104:
        ((void (*)(char *, char *, void *))v209)(v114, v129, v78);
        os_log_type_t v177 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v177 = 0;
        os_signpost_id_t v178 = sub_1000B73D0();
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v88, v90, v178, "Export Object", v112, v177, 2u);
        swift_slowDealloc();

        uint64_t v126 = *(void (**)(char *, void *))(v224 + 8);
        v126(v129, v78);
        v126(v113, v78);
        uint64_t v71 = v215;
        goto LABEL_105;
      }
      goto LABEL_58;
    }
    if (v217)
    {
      sub_100032E20(&qword_1001038F0);
      if (swift_dynamicCast())
      {
        if (*((void *)&v219 + 1))
        {
          sub_10008E058(&v218, (uint64_t)&v221);
          uint64_t v105 = sub_1000B71C0();
          sub_10008635C(&v221, v105, v189, (uint64_t)v190);
          goto LABEL_71;
        }
      }
      else
      {
        uint64_t v220 = 0;
        long long v218 = 0u;
        long long v219 = 0u;
      }
    }
    else
    {
      sub_100038E30((uint64_t)v216, &qword_1001036F8);
      long long v218 = 0u;
      long long v219 = 0u;
      uint64_t v220 = 0;
    }
    sub_100038E30((uint64_t)&v218, &qword_100104980);
    if (qword_1001036B8 != -1) {
      swift_once();
    }
    uint64_t v214 = 0;
    uint64_t v116 = sub_1000B7490();
    sub_100038E8C(v116, (uint64_t)qword_100104880);
    uint64_t v117 = sub_1000B7480();
    os_log_type_t v118 = sub_1000B7860();
    BOOL v119 = os_log_type_enabled(v117, v118);
    uint64_t v120 = v198;
    if (v119)
    {
      uint64_t v121 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v121 = 0;
      _os_log_impl((void *)&_mh_execute_header, v117, v118, "Account to be exported does not exist anymore â€” skipping", v121, 2u);
      swift_slowDealloc();
    }

    os_signpost_type_t v88 = sub_1000B7400();
    uint64_t v122 = v200;
    sub_1000B7430();
    os_signpost_type_t v90 = sub_1000B7900();
    if (sub_1000B79D0())
    {
      uint64_t v215 = v71;
      swift_retain();
      sub_1000B7460();
      swift_release();
      uint64_t v123 = v204;
      uint64_t v124 = v203;
      int v125 = (*(uint64_t (**)(char *, uint64_t))(v204 + 88))(v120, v203);
      v180[0] = v83;
      if (v125 == enum case for OSSignpostError.doubleEnd(_:))
      {
        os_signpost_type_t v112 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v123 + 8))(v120, v124);
        os_signpost_type_t v112 = "";
      }
      BOOL v129 = v200;
      uint64_t v113 = v213;
      uint64_t v114 = v213;
      goto LABEL_104;
    }

    uint64_t v126 = *(void (**)(char *, void *))(v224 + 8);
    v126(v122, v78);
LABEL_105:
    swift_release();
    return ((uint64_t (*)(char *, void *))v126)(v71, v78);
  }
  if (v86 == enum case for ICObjectReferences.folder<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v212 + 96))(v211, v84);
    swift_release();
    uint64_t v95 = v206;
    sub_1000B7130();
    if (v95)
    {
      os_signpost_type_t v88 = sub_1000B7400();
      uint64_t v89 = v201;
      sub_1000B7430();
      os_signpost_type_t v90 = sub_1000B7900();
      if (sub_1000B79D0())
      {
        uint64_t v214 = v95;
        uint64_t v215 = v71;
        swift_retain();
        long long v96 = v194;
        sub_1000B7460();
        swift_release();
        uint64_t v97 = v204;
        uint64_t v98 = v203;
        int v99 = (*(uint64_t (**)(char *, uint64_t))(v204 + 88))(v96, v203);
        v180[0] = v83;
        if (v99 == enum case for OSSignpostError.doubleEnd(_:))
        {
          os_signpost_type_t v112 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v97 + 8))(v96, v98);
          os_signpost_type_t v112 = "";
        }
        uint64_t v113 = v213;
        uint64_t v114 = v213;
        uint64_t v115 = &v224;
        goto LABEL_103;
      }
      goto LABEL_58;
    }
    if (v217)
    {
      sub_100032E20(&qword_1001038F0);
      if (swift_dynamicCast())
      {
        if (*((void *)&v219 + 1))
        {
          sub_10008E058(&v218, (uint64_t)&v221);
          uint64_t v111 = sub_1000B71C0();
          sub_100086D00(&v221, v111, v189, (uint64_t)v190);
          goto LABEL_71;
        }
      }
      else
      {
        uint64_t v220 = 0;
        long long v218 = 0u;
        long long v219 = 0u;
      }
    }
    else
    {
      sub_100038E30((uint64_t)v216, &qword_1001036F8);
      long long v218 = 0u;
      long long v219 = 0u;
      uint64_t v220 = 0;
    }
    sub_100038E30((uint64_t)&v218, &qword_100104980);
    if (qword_1001036B8 != -1) {
      swift_once();
    }
    uint64_t v130 = sub_1000B7490();
    sub_100038E8C(v130, (uint64_t)qword_100104880);
    id v131 = sub_1000B7480();
    os_log_type_t v132 = sub_1000B7860();
    BOOL v133 = os_log_type_enabled(v131, v132);
    os_signpost_type_t v134 = v193;
    if (v133)
    {
      uint64_t v135 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v135 = 0;
      _os_log_impl((void *)&_mh_execute_header, v131, v132, "Folder to be exported does not exist anymore â€” skipping", v135, 2u);
      swift_slowDealloc();
    }

    uint64_t v136 = sub_1000B7400();
    uint64_t v137 = v197;
    sub_1000B7430();
    LODWORD(v214) = sub_1000B7900();
    if (sub_1000B79D0())
    {
      uint64_t v215 = v71;
      swift_retain();
      sub_1000B7460();
      swift_release();
      uint64_t v138 = v204;
      uint64_t v139 = v203;
      int v140 = (*(uint64_t (**)(char *, uint64_t))(v204 + 88))(v134, v203);
      v180[0] = v83;
      if (v140 == enum case for OSSignpostError.doubleEnd(_:))
      {
        uint64_t v146 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v138 + 8))(v134, v139);
        uint64_t v146 = "";
      }
      uint64_t v147 = v213;
      ((void (*)(char *, char *, void *))v209)(v213, v197, v78);
      long long v148 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v148 = 0;
      os_signpost_id_t v149 = sub_1000B73D0();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v136, (os_signpost_type_t)v214, v149, "Export Object", v146, v148, 2u);
      swift_slowDealloc();

      uint64_t v126 = *(void (**)(char *, void *))(v224 + 8);
      v126(v197, v78);
      goto LABEL_102;
    }
LABEL_98:

    uint64_t v126 = *(void (**)(char *, void *))(v224 + 8);
    v126(v137, v78);
    goto LABEL_105;
  }
  if (v86 == enum case for ICObjectReferences.note<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v212 + 96))(v211, v84);
    swift_release();
    uint64_t v100 = v206;
    sub_1000B7130();
    if (v100)
    {
      os_signpost_type_t v88 = sub_1000B7400();
      uint64_t v89 = v195;
      sub_1000B7430();
      os_signpost_type_t v90 = sub_1000B7900();
      if (sub_1000B79D0())
      {
        uint64_t v214 = v100;
        uint64_t v215 = v71;
        swift_retain();
        uint64_t v101 = v186;
        sub_1000B7460();
        swift_release();
        uint64_t v102 = v204;
        uint64_t v103 = v203;
        int v104 = (*(uint64_t (**)(char *, uint64_t))(v204 + 88))(v101, v203);
        v180[0] = v83;
        if (v104 == enum case for OSSignpostError.doubleEnd(_:))
        {
          os_signpost_type_t v112 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v102 + 8))(v101, v103);
          os_signpost_type_t v112 = "";
        }
        uint64_t v113 = v213;
        uint64_t v114 = v213;
        uint64_t v115 = (uint64_t *)&v222;
        goto LABEL_103;
      }
      goto LABEL_58;
    }
    if (v217)
    {
      sub_100032E20(&qword_1001038F0);
      if (swift_dynamicCast())
      {
        if (*((void *)&v219 + 1))
        {
          sub_10008E058(&v218, (uint64_t)&v221);
          uint64_t v127 = sub_1000B71C0();
          sub_1000878AC(&v221, v127, (uint64_t)v189, v190);
          goto LABEL_71;
        }
      }
      else
      {
        uint64_t v220 = 0;
        long long v218 = 0u;
        long long v219 = 0u;
      }
    }
    else
    {
      sub_100038E30((uint64_t)v216, &qword_1001036F8);
      long long v218 = 0u;
      long long v219 = 0u;
      uint64_t v220 = 0;
    }
    sub_100038E30((uint64_t)&v218, &qword_100104980);
    if (qword_1001036B8 != -1) {
      swift_once();
    }
    uint64_t v150 = sub_1000B7490();
    sub_100038E8C(v150, (uint64_t)qword_100104880);
    uint64_t v151 = sub_1000B7480();
    os_log_type_t v152 = sub_1000B7860();
    BOOL v153 = os_log_type_enabled(v151, v152);
    os_log_type_t v154 = v184;
    if (v153)
    {
      BOOL v155 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)BOOL v155 = 0;
      _os_log_impl((void *)&_mh_execute_header, v151, v152, "Note to be exported does not exist anymore â€” skipping", v155, 2u);
      swift_slowDealloc();
    }

    uint64_t v136 = sub_1000B7400();
    uint64_t v137 = v191;
    sub_1000B7430();
    LODWORD(v214) = sub_1000B7900();
    if (sub_1000B79D0())
    {
      uint64_t v215 = v71;
      swift_retain();
      sub_1000B7460();
      swift_release();
      uint64_t v156 = v204;
      uint64_t v157 = v203;
      int v158 = (*(uint64_t (**)(char *, uint64_t))(v204 + 88))(v154, v203);
      v180[0] = v83;
      if (v158 == enum case for OSSignpostError.doubleEnd(_:))
      {
        os_signpost_type_t v168 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v156 + 8))(v154, v157);
        os_signpost_type_t v168 = "";
      }
      uint64_t v147 = v213;
      ((void (*)(char *, char *, void *))v209)(v213, v191, v78);
      uint64_t v169 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v169 = 0;
      os_signpost_id_t v170 = sub_1000B73D0();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v136, (os_signpost_type_t)v214, v170, "Export Object", v168, v169, 2u);
      swift_slowDealloc();

      uint64_t v126 = *(void (**)(char *, void *))(v224 + 8);
      v126(v191, v78);
      goto LABEL_102;
    }
    goto LABEL_98;
  }
  if (v86 == enum case for ICObjectReferences.attachment<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v212 + 96))(v211, v84);
    swift_release();
    uint64_t v106 = v206;
    sub_1000B7130();
    if (v106)
    {
      os_signpost_type_t v88 = sub_1000B7400();
      uint64_t v89 = v196;
      sub_1000B7430();
      os_signpost_type_t v90 = sub_1000B7900();
      if (sub_1000B79D0())
      {
        uint64_t v214 = v106;
        uint64_t v215 = v71;
        swift_retain();
        uint64_t v107 = v187;
        sub_1000B7460();
        swift_release();
        uint64_t v108 = v204;
        uint64_t v109 = v203;
        int v110 = (*(uint64_t (**)(char *, uint64_t))(v204 + 88))(v107, v203);
        v180[0] = v83;
        if (v110 == enum case for OSSignpostError.doubleEnd(_:))
        {
          os_signpost_type_t v112 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v108 + 8))(v107, v109);
          os_signpost_type_t v112 = "";
        }
        uint64_t v113 = v213;
        uint64_t v114 = v213;
        uint64_t v115 = (uint64_t *)&v223;
        goto LABEL_103;
      }
LABEL_58:

      uint64_t v126 = *(void (**)(char *, void *))(v224 + 8);
      v126(v89, v78);
      goto LABEL_105;
    }
    if (v217)
    {
      sub_100032E20(&qword_1001038F0);
      if (swift_dynamicCast())
      {
        if (*((void *)&v219 + 1))
        {
          sub_10008E058(&v218, (uint64_t)&v221);
          int64_t v128 = sub_1000B71C0();
          sub_1000897A4(&v221, v128, (uint64_t)v189, v190);
LABEL_71:
          sub_100037F98((uint64_t)&v221);
          swift_bridgeObjectRelease();
          uint64_t v136 = sub_1000B7400();
          uint64_t v137 = v188;
          sub_1000B7430();
          int v141 = sub_1000B7900();
          if (sub_1000B79D0())
          {
            uint64_t v215 = v71;
            swift_retain();
            uint64_t v142 = v181;
            sub_1000B7460();
            swift_release();
            uint64_t v143 = v204;
            uint64_t v144 = v203;
            int v145 = (*(uint64_t (**)(char *, uint64_t))(v204 + 88))(v142, v203);
            v180[0] = v83;
            LODWORD(v214) = v141;
            if (v145 == enum case for OSSignpostError.doubleEnd(_:))
            {
              os_signpost_id_t v174 = "[Error] Interval already ended";
            }
            else
            {
              (*(void (**)(char *, uint64_t))(v143 + 8))(v142, v144);
              os_signpost_id_t v174 = "";
            }
            uint64_t v147 = v213;
            ((void (*)(char *, char *, void *))v209)(v213, v188, v78);
            uint64_t v175 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v175 = 0;
            os_signpost_id_t v176 = sub_1000B73D0();
            _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v136, (os_signpost_type_t)v214, v176, "Export Object", v174, v175, 2u);
            swift_slowDealloc();

            uint64_t v126 = *(void (**)(char *, void *))(v224 + 8);
            v126(v188, v78);
LABEL_102:
            v126(v147, v78);
            uint64_t v71 = v215;
            goto LABEL_105;
          }
          goto LABEL_98;
        }
      }
      else
      {
        uint64_t v220 = 0;
        long long v218 = 0u;
        long long v219 = 0u;
      }
    }
    else
    {
      sub_100038E30((uint64_t)v216, &qword_1001036F8);
      long long v218 = 0u;
      long long v219 = 0u;
      uint64_t v220 = 0;
    }
    sub_100038E30((uint64_t)&v218, &qword_100104980);
    if (qword_1001036B8 != -1) {
      swift_once();
    }
    uint64_t v159 = sub_1000B7490();
    sub_100038E8C(v159, (uint64_t)qword_100104880);
    uint64_t v160 = sub_1000B7480();
    os_log_type_t v161 = sub_1000B7860();
    BOOL v162 = os_log_type_enabled(v160, v161);
    v163 = v185;
    if (v162)
    {
      uint64_t v164 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v164 = 0;
      _os_log_impl((void *)&_mh_execute_header, v160, v161, "Object to be exported does not exist anymore â€” skipping", v164, 2u);
      swift_slowDealloc();
    }

    uint64_t v136 = sub_1000B7400();
    uint64_t v137 = v192;
    sub_1000B7430();
    LODWORD(v214) = sub_1000B7900();
    if (sub_1000B79D0())
    {
      uint64_t v215 = v71;
      swift_retain();
      sub_1000B7460();
      swift_release();
      uint64_t v165 = v204;
      uint64_t v166 = v203;
      int v167 = (*(uint64_t (**)(char *, uint64_t))(v204 + 88))(v163, v203);
      v180[0] = v83;
      if (v167 == enum case for OSSignpostError.doubleEnd(_:))
      {
        uint64_t v171 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v165 + 8))(v163, v166);
        uint64_t v171 = "";
      }
      uint64_t v147 = v213;
      ((void (*)(char *, char *, void *))v209)(v213, v192, v78);
      uint64_t v172 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v172 = 0;
      os_signpost_id_t v173 = sub_1000B73D0();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v136, (os_signpost_type_t)v214, v173, "Export Object", v171, v172, 2u);
      swift_slowDealloc();

      uint64_t v126 = *(void (**)(char *, void *))(v224 + 8);
      v126(v192, v78);
      goto LABEL_102;
    }
    goto LABEL_98;
  }
  uint64_t result = sub_1000B7DB0();
  __break(1u);
  return result;
}

uint64_t sub_100085308@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v77 = a5;
  uint64_t v58 = a6;
  uint64_t v10 = sub_1000B6F10();
  uint64_t v65 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v70 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v57 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v57 - v16;
  uint64_t v73 = a1;
  uint64_t v74 = a2;
  NSString v18 = sub_1000B7580();
  id v19 = [v18 ic_sanitizedFilenameString];

  sub_1000B75B0();
  uint64_t v71 = a3;
  sub_1000B6EA0();
  swift_bridgeObjectRelease();
  uint64_t v72 = a4;
  NSString v20 = sub_1000B7580();
  id v21 = [v20 ic_sanitizedFilenameString];

  sub_1000B75B0();
  sub_1000B6EB0();
  uint64_t v22 = v65;
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v22 + 8);
  uint64_t v69 = v15;
  v23(v15, v10);
  uint64_t v24 = *(void *)(v75 + 80);
  uint64_t v25 = *(void *)(v75 + 88);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v67 = v25;
  uint64_t v68 = v24;
  uint64_t v27 = v76;
  uint64_t v66 = ObjectType;
  sub_1000B7090();
  if (!v27) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v22 + 32))(v58, v17, v10);
  }
  v23(v17, v10);
  uint64_t v82 = v27;
  swift_errorRetain();
  uint64_t v28 = sub_100032E20(&qword_100103AB0);
  uint64_t v29 = sub_100038DC8(0, &qword_100104320);
  if ((swift_dynamicCast() & 1) == 0) {
    return swift_errorRelease();
  }
  id v30 = v81;
  if ([v81 code] != (id)516)
  {

    return swift_errorRelease();
  }
  id v61 = v30;
  uint64_t v59 = v29;
  uint64_t v60 = v28;
  uint64_t v62 = v23;
  uint64_t v63 = v22 + 8;
  swift_errorRelease();
  uint64_t v64 = ICAttachmentNameMaxLength;
  for (uint64_t i = 2; ; uint64_t i = v56 + 1)
  {
    id v78 = (id)i;
    uint64_t v79 = 32;
    unint64_t v80 = 0xE100000000000000;
    v83._countAndFlagsBits = sub_1000B7D80();
    sub_1000B7650(v83);
    swift_bridgeObjectRelease();
    uint64_t v32 = v79;
    uint64_t v33 = (void *)v80;
    NSString v34 = sub_1000B7580();
    id v35 = [v34 ic_sanitizedFilenameString];

    uint64_t v36 = sub_1000B75B0();
    unint64_t v38 = v37;

    uint64_t v39 = sub_1000B7630();
    BOOL v41 = __OFSUB__(v64, v39);
    uint64_t result = v64 - v39;
    if (v41) {
      break;
    }
    uint64_t v75 = i;
    sub_10008E088(result, v36, v38, v40);
    uint64_t v76 = 0;
    swift_bridgeObjectRelease();
    uint64_t v43 = sub_1000B7610();
    unint64_t v45 = v44;
    swift_bridgeObjectRelease();
    uint64_t v79 = v43;
    unint64_t v80 = v45;
    swift_bridgeObjectRetain();
    v84._countAndFlagsBits = v32;
    v84._object = v33;
    sub_1000B7650(v84);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v46 = v69;
    sub_1000B6EA0();
    swift_bridgeObjectRelease();
    NSString v47 = sub_1000B7580();
    id v48 = [v47 ic_sanitizedFilenameString];

    sub_1000B75B0();
    uint64_t v49 = v70;
    sub_1000B6EB0();
    swift_bridgeObjectRelease();
    uint64_t v50 = v62;
    v62(v46, v10);
    uint64_t v51 = v76;
    sub_1000B7090();
    if (!v51)
    {

      (*(void (**)(uint64_t, char *, uint64_t))(v65 + 32))(v58, v49, v10);
      return swift_errorRelease();
    }
    v50(v49, v10);
    uint64_t v79 = v51;
    swift_errorRetain();
    int v52 = swift_dynamicCast();
    id v53 = v61;
    if (!v52 || (id v54 = v78, v55 = [v78 code], v54, v55 != (id)516))
    {

      swift_errorRelease();
      return swift_errorRelease();
    }
    uint64_t result = swift_errorRelease();
    uint64_t v56 = v75;
    if (__OFADD__(v75, 1)) {
      goto LABEL_18;
    }
    swift_errorRelease();
  }
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1000858E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v77 = a5;
  uint64_t v58 = a6;
  uint64_t v10 = sub_1000B6F10();
  uint64_t v65 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v70 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v57 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v57 - v16;
  uint64_t v73 = a1;
  uint64_t v74 = a2;
  NSString v18 = sub_1000B7580();
  id v19 = [v18 ic_sanitizedFilenameString];

  sub_1000B75B0();
  uint64_t v71 = a3;
  sub_1000B6EA0();
  swift_bridgeObjectRelease();
  uint64_t v72 = a4;
  NSString v20 = sub_1000B7580();
  id v21 = [v20 ic_sanitizedFilenameString];

  sub_1000B75B0();
  sub_1000B6EB0();
  uint64_t v22 = v65;
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v22 + 8);
  uint64_t v69 = v15;
  v23(v15, v10);
  uint64_t v24 = *(void *)(v75 + 80);
  uint64_t v25 = *(void *)(v75 + 88);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v67 = v25;
  uint64_t v68 = v24;
  uint64_t v27 = v76;
  uint64_t v66 = ObjectType;
  sub_1000B7090();
  if (!v27) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v22 + 32))(v58, v17, v10);
  }
  v23(v17, v10);
  uint64_t v82 = v27;
  swift_errorRetain();
  uint64_t v28 = sub_100032E20(&qword_100103AB0);
  uint64_t v29 = sub_100038DC8(0, &qword_100104320);
  if (!swift_dynamicCast()) {
    return swift_errorRelease();
  }
  id v30 = v81;
  if ([v81 code] != (id)516)
  {

    return swift_errorRelease();
  }
  id v61 = v30;
  uint64_t v59 = v29;
  uint64_t v60 = v28;
  uint64_t v62 = v23;
  uint64_t v63 = v22 + 8;
  swift_errorRelease();
  uint64_t v64 = ICAttachmentNameMaxLength;
  for (uint64_t i = 2; ; uint64_t i = v56 + 1)
  {
    id v78 = (id)i;
    uint64_t v79 = 32;
    unint64_t v80 = 0xE100000000000000;
    v83._countAndFlagsBits = sub_1000B7D80();
    sub_1000B7650(v83);
    swift_bridgeObjectRelease();
    uint64_t v32 = v79;
    uint64_t v33 = (void *)v80;
    NSString v34 = sub_1000B7580();
    id v35 = [v34 ic_sanitizedFilenameString];

    uint64_t v36 = sub_1000B75B0();
    unint64_t v38 = v37;

    uint64_t v39 = sub_1000B7630();
    BOOL v41 = __OFSUB__(v64, v39);
    uint64_t result = v64 - v39;
    if (v41) {
      break;
    }
    uint64_t v75 = i;
    sub_10008E088(result, v36, v38, v40);
    uint64_t v76 = 0;
    swift_bridgeObjectRelease();
    uint64_t v43 = sub_1000B7610();
    unint64_t v45 = v44;
    swift_bridgeObjectRelease();
    uint64_t v79 = v43;
    unint64_t v80 = v45;
    swift_bridgeObjectRetain();
    v84._countAndFlagsBits = v32;
    v84._object = v33;
    sub_1000B7650(v84);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v46 = v69;
    sub_1000B6EA0();
    swift_bridgeObjectRelease();
    NSString v47 = sub_1000B7580();
    id v48 = [v47 ic_sanitizedFilenameString];

    sub_1000B75B0();
    uint64_t v49 = v70;
    sub_1000B6EB0();
    swift_bridgeObjectRelease();
    uint64_t v50 = v62;
    v62(v46, v10);
    uint64_t v51 = v76;
    sub_1000B7090();
    if (!v51)
    {

      (*(void (**)(uint64_t, char *, uint64_t))(v65 + 32))(v58, v49, v10);
      return swift_errorRelease();
    }
    v50(v49, v10);
    uint64_t v79 = v51;
    swift_errorRetain();
    int v52 = swift_dynamicCast();
    id v53 = v61;
    if (!v52 || (id v54 = v78, v55 = [v78 code], v54, v55 != (id)516))
    {

      swift_errorRelease();
      return swift_errorRelease();
    }
    uint64_t result = swift_errorRelease();
    uint64_t v56 = v75;
    if (__OFADD__(v75, 1)) {
      goto LABEL_18;
    }
    swift_errorRelease();
  }
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

void sub_100085EC0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1000B6F10();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v45 - v14;
  sub_1000B7830();
  if (!v4)
  {
    uint64_t v48 = a3;
    uint64_t v49 = 0;
    uint64_t v50 = v13;
    uint64_t v51 = v15;
    uint64_t v46 = v10;
    uint64_t v47 = a4;
    uint64_t v16 = v55;
    uint64_t v45 = a2;
    uint64_t v52 = v9;
    uint64_t v17 = a1[3];
    uint64_t v18 = a1[4];
    sub_100047028(a1, v17);
    uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 16))(v17, v18);
    if (v20)
    {
      uint64_t v21 = v19;
      uint64_t v22 = v20;
    }
    else
    {
      id v23 = [self mainBundle];
      NSString v24 = sub_1000B7580();
      id v25 = [v23 localizedStringForKey:v24 value:0 table:0];

      uint64_t v21 = sub_1000B75B0();
      uint64_t v22 = v26;
    }
    uint64_t v27 = (uint64_t)v51;
    uint64_t v28 = v16;
    uint64_t v29 = v49;
    sub_100085308(v21, v22, v48, 0x746E756F636361, 0xE700000000000000, (uint64_t)v51);
    uint64_t v30 = v52;
    uint64_t v31 = v50;
    if (v29)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v51 = *(char **)(v28 + 80);
      uint64_t v55 = *(void *)(v28 + 88);
      if (qword_100103648 != -1) {
        swift_once();
      }
      sub_1000B6EA0();
      uint64_t v32 = a1[3];
      uint64_t v33 = a1[4];
      sub_100047028(a1, v32);
      long long v34 = *(_OWORD *)(v28 + 40);
      v53[0] = *(_OWORD *)(v28 + 24);
      v53[1] = v34;
      v54[0] = *(_OWORD *)(v28 + 56);
      *(void *)((char *)v54 + 13) = *(void *)(v28 + 69);
      uint64_t v35 = (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v33 + 80))(v53, v32, v33);
      unint64_t v37 = v36;
      swift_getObjectType();
      sub_1000B7070();
      uint64_t v38 = v30;
      uint64_t v39 = *(void (**)(char *, uint64_t))(v46 + 8);
      v39(v31, v38);
      sub_1000452E0(v35, v37);
      uint64_t v40 = v45;
      uint64_t v41 = *(void *)(v45 + 16);
      if (v41)
      {
        uint64_t v42 = *(void *)(sub_100032E20(&qword_100103908) - 8);
        uint64_t v43 = v40 + ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80));
        uint64_t v44 = *(void *)(v42 + 72);
        swift_bridgeObjectRetain();
        do
        {
          sub_1000811F0(v43, v27, v47);
          v43 += v44;
          --v41;
        }
        while (v41);
        swift_bridgeObjectRelease();
      }
      v39((char *)v27, v52);
    }
  }
}

void sub_10008635C(void *a1, uint64_t a2, void (*a3)(char *, uint64_t), uint64_t a4)
{
  uint64_t v6 = v4;
  uint64_t v47 = a2;
  uint64_t v48 = a3;
  uint64_t v9 = *v6;
  uint64_t v10 = sub_1000B6F10();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)v40 - v15;
  sub_1000B7830();
  if (!v5)
  {
    uint64_t v44 = 0;
    uint64_t v45 = v14;
    v40[1] = v9;
    uint64_t v41 = a4;
    uint64_t v46 = v16;
    uint64_t v42 = v11;
    uint64_t v43 = v10;
    uint64_t v17 = a1[3];
    uint64_t v18 = a1[4];
    sub_100047028(a1, v17);
    uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 16))(v17, v18);
    uint64_t v21 = a1;
    if (v20)
    {
      uint64_t v22 = v19;
      uint64_t v23 = v20;
    }
    else
    {
      id v24 = [self mainBundle];
      NSString v25 = sub_1000B7580();
      id v26 = [v24 localizedStringForKey:v25 value:0 table:0];

      uint64_t v22 = sub_1000B75B0();
      uint64_t v23 = v27;
    }
    uint64_t v28 = (uint64_t)v46;
    uint64_t v29 = v6;
    uint64_t v30 = v44;
    sub_1000858E4(v22, v23, (uint64_t)v48, 0x746E756F636361, 0xE700000000000000, (uint64_t)v46);
    uint64_t v31 = v45;
    if (v30)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v48 = (void (*)(char *, uint64_t))v29[11];
      if (qword_100103648 != -1) {
        swift_once();
      }
      sub_1000B6EA0();
      uint64_t v32 = v21[3];
      uint64_t v33 = v21[4];
      sub_100047028(v21, v32);
      long long v34 = *(_OWORD *)(v29 + 5);
      v49[0] = *(_OWORD *)(v29 + 3);
      v49[1] = v34;
      v50[0] = *(_OWORD *)(v29 + 7);
      *(void *)((char *)v50 + 13) = *(void *)((char *)v29 + 69);
      uint64_t v35 = (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v33 + 80))(v49, v32, v33);
      unint64_t v37 = v36;
      swift_getObjectType();
      sub_1000B7070();
      uint64_t v38 = v43;
      uint64_t v48 = *(void (**)(char *, uint64_t))(v42 + 8);
      v48(v31, v43);
      uint64_t v39 = sub_1000452E0(v35, v37);
      uint64_t v46 = v40;
      uint64_t v51 = v47;
      __chkstk_darwin(v39);
      v40[-4] = v29;
      v40[-3] = v28;
      v40[-2] = v41;
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      sub_1000B71E0();
      sub_1000B7760();
      swift_getWitnessTable();
      sub_1000B7690();
      v48((char *)v28, v38);
    }
  }
}

void sub_10008686C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1000B6F10();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v45 - v14;
  sub_1000B7830();
  if (!v4)
  {
    uint64_t v48 = a3;
    uint64_t v49 = 0;
    uint64_t v50 = v13;
    uint64_t v51 = v15;
    uint64_t v46 = v10;
    uint64_t v47 = a4;
    uint64_t v16 = v55;
    uint64_t v45 = a2;
    uint64_t v52 = v9;
    uint64_t v17 = a1[3];
    uint64_t v18 = a1[4];
    sub_100047028(a1, v17);
    uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 16))(v17, v18);
    if (v20)
    {
      uint64_t v21 = v19;
      uint64_t v22 = v20;
    }
    else
    {
      id v23 = [self mainBundle];
      NSString v24 = sub_1000B7580();
      id v25 = [v23 localizedStringForKey:v24 value:0 table:0];

      uint64_t v21 = sub_1000B75B0();
      uint64_t v22 = v26;
    }
    uint64_t v27 = (uint64_t)v51;
    uint64_t v28 = v16;
    uint64_t v29 = v49;
    sub_100085308(v21, v22, v48, 0x7265646C6F66, 0xE600000000000000, (uint64_t)v51);
    uint64_t v30 = v52;
    uint64_t v31 = v50;
    if (v29)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v51 = *(char **)(v28 + 80);
      uint64_t v55 = *(void *)(v28 + 88);
      if (qword_100103648 != -1) {
        swift_once();
      }
      sub_1000B6EA0();
      uint64_t v32 = a1[3];
      uint64_t v33 = a1[4];
      sub_100047028(a1, v32);
      long long v34 = *(_OWORD *)(v28 + 40);
      v53[0] = *(_OWORD *)(v28 + 24);
      v53[1] = v34;
      v54[0] = *(_OWORD *)(v28 + 56);
      *(void *)((char *)v54 + 13) = *(void *)(v28 + 69);
      uint64_t v35 = (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v33 + 80))(v53, v32, v33);
      unint64_t v37 = v36;
      swift_getObjectType();
      sub_1000B7070();
      uint64_t v38 = v30;
      uint64_t v39 = *(void (**)(char *, uint64_t))(v46 + 8);
      v39(v31, v38);
      sub_1000452E0(v35, v37);
      uint64_t v40 = v45;
      uint64_t v41 = *(void *)(v45 + 16);
      if (v41)
      {
        uint64_t v42 = *(void *)(sub_100032E20(&qword_100103908) - 8);
        uint64_t v43 = v40 + ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80));
        uint64_t v44 = *(void *)(v42 + 72);
        swift_bridgeObjectRetain();
        do
        {
          sub_1000811F0(v43, v27, v47);
          v43 += v44;
          --v41;
        }
        while (v41);
        swift_bridgeObjectRelease();
      }
      v39((char *)v27, v52);
    }
  }
}

void sub_100086D00(void *a1, uint64_t a2, void (*a3)(char *, uint64_t), uint64_t a4)
{
  uint64_t v6 = v4;
  uint64_t v47 = a2;
  uint64_t v48 = a3;
  uint64_t v9 = *v6;
  uint64_t v10 = sub_1000B6F10();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)v40 - v15;
  sub_1000B7830();
  if (!v5)
  {
    uint64_t v44 = 0;
    uint64_t v45 = v14;
    v40[1] = v9;
    uint64_t v41 = a4;
    uint64_t v46 = v16;
    uint64_t v42 = v11;
    uint64_t v43 = v10;
    uint64_t v17 = a1[3];
    uint64_t v18 = a1[4];
    sub_100047028(a1, v17);
    uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 16))(v17, v18);
    uint64_t v21 = a1;
    if (v20)
    {
      uint64_t v22 = v19;
      uint64_t v23 = v20;
    }
    else
    {
      id v24 = [self mainBundle];
      NSString v25 = sub_1000B7580();
      id v26 = [v24 localizedStringForKey:v25 value:0 table:0];

      uint64_t v22 = sub_1000B75B0();
      uint64_t v23 = v27;
    }
    uint64_t v28 = (uint64_t)v46;
    uint64_t v29 = v6;
    uint64_t v30 = v44;
    sub_1000858E4(v22, v23, (uint64_t)v48, 0x7265646C6F66, 0xE600000000000000, (uint64_t)v46);
    uint64_t v31 = v45;
    if (v30)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v48 = (void (*)(char *, uint64_t))v29[11];
      if (qword_100103648 != -1) {
        swift_once();
      }
      sub_1000B6EA0();
      uint64_t v32 = v21[3];
      uint64_t v33 = v21[4];
      sub_100047028(v21, v32);
      long long v34 = *(_OWORD *)(v29 + 5);
      v49[0] = *(_OWORD *)(v29 + 3);
      v49[1] = v34;
      v50[0] = *(_OWORD *)(v29 + 7);
      *(void *)((char *)v50 + 13) = *(void *)((char *)v29 + 69);
      uint64_t v35 = (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v33 + 80))(v49, v32, v33);
      unint64_t v37 = v36;
      swift_getObjectType();
      sub_1000B7070();
      uint64_t v38 = v43;
      uint64_t v48 = *(void (**)(char *, uint64_t))(v42 + 8);
      v48(v31, v43);
      uint64_t v39 = sub_1000452E0(v35, v37);
      uint64_t v46 = v40;
      uint64_t v51 = v47;
      __chkstk_darwin(v39);
      v40[-4] = v29;
      v40[-3] = v28;
      v40[-2] = v41;
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      sub_1000B71E0();
      sub_1000B7760();
      swift_getWitnessTable();
      sub_1000B7690();
      v48((char *)v28, v38);
    }
  }
}

void sub_100087208(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v9 = sub_1000B6F10();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v64 - v14;
  sub_1000B7830();
  if (v4) {
    return;
  }
  id v69 = a3;
  uint64_t v70 = v15;
  uint64_t v17 = a4;
  Class v18 = isa;
  uint64_t v66 = v10;
  uint64_t v67 = v9;
  __chkstk_darwin(v16);
  *(&v64 - 2) = sub_1000B72C0();
  *(&v64 - 1) = sub_10008DE28(&qword_100104968, (void (*)(uint64_t))&type metadata accessor for ICModernObjectProvider);
  swift_getKeyPath();
  swift_retain();
  uint64_t v65 = a2;
  uint64_t v19 = sub_10008D5E0(a2);
  uint64_t v68 = 0;
  swift_release_n();
  uint64_t v20 = v19[2];
  if (!v20)
  {
    uint64_t v21 = 0;
    uint64_t v23 = v13;
    Class v24 = v18;
    uint64_t v25 = (uint64_t)v70;
    id v26 = a1;
LABEL_8:
    swift_bridgeObjectRelease();
    if (__OFADD__(v21, 1)) {
      goto LABEL_28;
    }
    v29.super.Class isa = sub_1000B7820(v21 + 1, 1).super.isa;
    uint64_t v30 = v26[3];
    uint64_t v31 = v26[4];
    sub_100047028(v26, v30);
    (*(void (**)(uint64_t, uint64_t))(v31 + 16))(v30, v31);
    if (v32)
    {
      NSString v33 = sub_1000B7580();
      swift_bridgeObjectRelease();
      id v34 = [v33 ic_sanitizedFilenameString];

      uint64_t v35 = sub_1000B75B0();
      unint64_t v37 = v36;

      uint64_t v38 = HIBYTE(v37) & 0xF;
      if ((v37 & 0x2000000000000000) == 0) {
        uint64_t v38 = v35 & 0xFFFFFFFFFFFFLL;
      }
      if (v38)
      {
LABEL_15:
        uint64_t v43 = v68;
        sub_100085308(v35, v37, (uint64_t)v69, 1702129518, 0xE400000000000000, v25);
        a1 = v43;
        if (v43)
        {
          swift_bridgeObjectRelease();

          return;
        }
        id v69 = v17;
        Class isa = v29.super.isa;
        swift_bridgeObjectRelease();
        if (qword_100103648 == -1) {
          goto LABEL_18;
        }
        goto LABEL_29;
      }
      swift_bridgeObjectRelease();
    }
    id v39 = [self mainBundle];
    NSString v40 = sub_1000B7580();
    id v41 = [v39 localizedStringForKey:v40 value:0 table:0];

    uint64_t v35 = sub_1000B75B0();
    unint64_t v37 = v42;
    swift_bridgeObjectRelease();

    goto LABEL_15;
  }
  uint64_t v21 = 0;
  uint64_t v22 = v19 + 4;
  uint64_t v23 = v13;
  Class v24 = v18;
  uint64_t v25 = (uint64_t)v70;
  id v26 = a1;
  while (1)
  {
    uint64_t v27 = *v22++;
    BOOL v28 = __OFADD__(v21, v27);
    v21 += v27;
    if (v28) {
      break;
    }
    if (!--v20) {
      goto LABEL_8;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  swift_once();
LABEL_18:
  sub_1000B6EA0();
  uint64_t v70 = (char *)*((void *)v24 + 11);
  uint64_t v44 = v26[3];
  uint64_t v45 = v26;
  uint64_t v46 = v23;
  uint64_t v47 = v45[4];
  sub_100047028(v45, v44);
  long long v48 = *(_OWORD *)((char *)v24 + 40);
  v72[0] = *(_OWORD *)((char *)v24 + 24);
  v72[1] = v48;
  v73[0] = *(_OWORD *)((char *)v24 + 56);
  *(void *)((char *)v73 + 13) = *(void *)((char *)v24 + 69);
  uint64_t v49 = (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v47 + 80))(v72, v44, v47);
  if (a1)
  {
    uint64_t v51 = v67;
    uint64_t v52 = *(void (**)(char *, uint64_t))(v66 + 8);
    v52(v46, v67);

    v52((char *)v25, v51);
  }
  else
  {
    uint64_t v53 = v49;
    unint64_t v54 = v50;
    swift_getObjectType();
    sub_1000B7070();
    uint64_t v55 = v67;
    uint64_t v70 = v46;
    sub_1000452E0(v53, v54);
    Class v56 = isa;
    uint64_t v57 = (char *)[(objc_class *)isa completedUnitCount];
    if (__OFADD__(v57, 1))
    {
      __break(1u);
    }
    else
    {
      [(objc_class *)v56 setCompletedUnitCount:v57 + 1];
      uint64_t v58 = v65;
      uint64_t v59 = *(void *)(v65 + 16);
      if (v59)
      {
        uint64_t v60 = *(void *)(sub_100032E20(&qword_100103908) - 8);
        unint64_t v61 = v58 + ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80));
        uint64_t v62 = *(void *)(v60 + 72);
        swift_bridgeObjectRetain();
        do
        {
          sub_1000811F0(v61, v25, isa);
          v61 += v62;
          --v59;
        }
        while (v59);
        swift_bridgeObjectRelease();
        uint64_t v55 = v67;
      }
      sub_10008B134((char)[v69 completedUnitCount]);

      uint64_t v63 = *(void (**)(char *, uint64_t))(v66 + 8);
      v63(v70, v55);
      v63((char *)v25, v55);
    }
  }
}

void sub_1000878AC(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = v4;
  uint64_t v68 = a3;
  id v69 = a1;
  uint64_t v9 = *v6;
  uint64_t v10 = sub_1000B6F10();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (objc_class *)((char *)v61 - v15);
  sub_1000B7830();
  if (!v5)
  {
    id v66 = a4;
    uint64_t v67 = v14;
    uint64_t v64 = v10;
    Class isa = v16;
    uint64_t v62 = a2;
    uint64_t v63 = v11;
    uint64_t v72 = a2;
    __chkstk_darwin(v17);
    uint64_t v18 = *(void *)(v9 + 80);
    uint64_t v19 = *(void *)(v9 + 88);
    v61[-2] = v18;
    v61[-1] = v19;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v21 = __chkstk_darwin(KeyPath);
    v61[-4] = v18;
    v61[-3] = v19;
    v61[-2] = v21;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    sub_1000B71E0();
    uint64_t v22 = sub_1000B7760();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v25 = sub_10007A588((void (*)(char *, char *))sub_10008E1B4, (uint64_t)&v61[-6], v22, (uint64_t)&type metadata for Int, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v24);
    swift_release();
    uint64_t v26 = *(void *)(v25 + 16);
    if (v26)
    {
      uint64_t v27 = 0;
      BOOL v28 = (uint64_t *)(v25 + 32);
      Class v29 = isa;
      uint64_t v30 = v6;
      uint64_t v31 = v69;
      while (1)
      {
        uint64_t v32 = *v28++;
        BOOL v33 = __OFADD__(v27, v32);
        v27 += v32;
        if (v33) {
          break;
        }
        if (!--v26) {
          goto LABEL_8;
        }
      }
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      swift_once();
LABEL_16:
      sub_1000B6EA0();
      uint64_t v68 = v30[11];
      uint64_t v48 = v69[3];
      uint64_t v49 = v69[4];
      sub_100047028(v69, v48);
      long long v50 = *(_OWORD *)(v30 + 5);
      v70[0] = *(_OWORD *)(v30 + 3);
      v70[1] = v50;
      v71[0] = *(_OWORD *)(v30 + 7);
      *(void *)((char *)v71 + 13) = *(void *)((char *)v30 + 69);
      uint64_t v51 = (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v49 + 80))(v70, v48, v49);
      unint64_t v53 = v52;
      swift_getObjectType();
      sub_1000B7070();
      sub_1000452E0(v51, v53);
      Class v54 = isa;
      uint64_t v55 = (char *)[(objc_class *)isa completedUnitCount];
      if (__OFADD__(v55, 1))
      {
        __break(1u);
      }
      else
      {
        id v56 = [(objc_class *)v54 setCompletedUnitCount:v55 + 1];
        uint64_t v72 = v62;
        __chkstk_darwin(v56);
        v61[-4] = v30;
        v61[-3] = v29;
        v61[-2] = v54;
        swift_getWitnessTable();
        sub_1000B7690();
        Class v57 = v29;
        uint64_t v59 = v63;
        uint64_t v58 = v64;
        sub_10008B25C((char)[v66 completedUnitCount]);

        uint64_t v60 = *(void (**)(char *, uint64_t))(v59 + 8);
        v60(v67, v58);
        v60((char *)v57, v58);
      }
      return;
    }
    uint64_t v27 = 0;
    Class v29 = isa;
    uint64_t v30 = v6;
    uint64_t v31 = v69;
LABEL_8:
    swift_bridgeObjectRelease();
    if (__OFADD__(v27, 1)) {
      goto LABEL_20;
    }
    v61[1] = v22;
    Class isa = sub_1000B7820(v27 + 1, 1).super.isa;
    uint64_t v34 = v31[3];
    uint64_t v35 = v31[4];
    sub_100047028(v31, v34);
    (*(void (**)(uint64_t, uint64_t))(v35 + 16))(v34, v35);
    uint64_t v36 = v68;
    if (v37)
    {
      NSString v38 = sub_1000B7580();
      swift_bridgeObjectRelease();
      id v39 = [v38 ic_sanitizedFilenameString];

      uint64_t v40 = sub_1000B75B0();
      unint64_t v42 = v41;

      uint64_t v43 = HIBYTE(v42) & 0xF;
      if ((v42 & 0x2000000000000000) == 0) {
        uint64_t v43 = v40 & 0xFFFFFFFFFFFFLL;
      }
      if (v43)
      {
LABEL_15:
        sub_1000858E4(v40, v42, v36, 1702129518, 0xE400000000000000, (uint64_t)v29);
        swift_bridgeObjectRelease();
        if (qword_100103648 == -1) {
          goto LABEL_16;
        }
        goto LABEL_21;
      }
      swift_bridgeObjectRelease();
    }
    id v44 = [self mainBundle];
    NSString v45 = sub_1000B7580();
    id v46 = [v44 localizedStringForKey:v45 value:0 table:0];

    uint64_t v40 = sub_1000B75B0();
    unint64_t v42 = v47;
    swift_bridgeObjectRelease();

    goto LABEL_15;
  }
}

void sub_100087FB8(void *a1, uint64_t a2, void *a3, uint8_t *a4)
{
  os_signpost_id_t v178 = a3;
  uint64_t v174 = a2;
  uint64_t v180 = a1;
  uint64_t v5 = sub_100032E20((uint64_t *)&unk_1001042F0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  os_signpost_id_t v176 = (char *)v158 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  os_signpost_id_t v173 = (char *)v158 - v8;
  uint64_t v177 = sub_1000B6F10();
  uint64_t v181 = *(void *)(v177 - 8);
  uint64_t v9 = __chkstk_darwin(v177);
  uint64_t v172 = (char *)v158 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)v158 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)v158 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (uint8_t *)v158 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)v158 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v25 = (char *)v158 - v24;
  uint64_t v26 = __chkstk_darwin(v23);
  BOOL v28 = (char *)v158 - v27;
  uint64_t v29 = __chkstk_darwin(v26);
  uint64_t v31 = (char *)v158 - v30;
  __chkstk_darwin(v29);
  BOOL v33 = (uint8_t *)v158 - v32;
  uint64_t v34 = v182;
  sub_1000B7830();
  uint64_t v182 = v34;
  if (v34) {
    return;
  }
  int64_t v161 = (int64_t)v25;
  BOOL v162 = (void (**)(char *, unint64_t, void *))v28;
  uint64_t v164 = v22;
  uint64_t v165 = v19;
  os_signpost_id_t v170 = v16;
  uint64_t v171 = v13;
  os_signpost_type_t v168 = v31;
  uint64_t v175 = v33;
  v163 = a4;
  uint64_t v35 = v180[3];
  uint64_t v36 = v180[4];
  sub_100047028(v180, v35);
  uint64_t v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 16))(v35, v36);
  if (v38)
  {
    uint64_t v39 = v37;
    uint64_t v40 = v38;
  }
  else
  {
    id v41 = [self mainBundle];
    NSString v42 = sub_1000B7580();
    id v43 = [v41 localizedStringForKey:v42 value:0 table:0];

    uint64_t v39 = sub_1000B75B0();
    uint64_t v40 = v44;
  }
  uint64_t v45 = v181;
  uint64_t v46 = (uint64_t)v182;
  unint64_t v47 = v179;
  sub_100085308(v39, v40, (uint64_t)v178, 0x656D686361747461, 0xEA0000000000746ELL, (uint64_t)v175);
  uint64_t v48 = v46;
  if (v46)
  {
    uint64_t v182 = (uint8_t *)v46;
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRelease();
  if (qword_100103648 != -1) {
    goto LABEL_93;
  }
LABEL_8:
  uint64_t v49 = v168;
  uint64_t v50 = (uint64_t)v175;
  sub_1000B6EA0();
  uint64_t v51 = *(void *)(v47 + 80);
  uint64_t v169 = *(void *)(v47 + 88);
  uint64_t v52 = v180[3];
  uint64_t v53 = v180[4];
  sub_100047028(v180, v52);
  long long v54 = *(_OWORD *)(v47 + 40);
  v184[0] = *(_OWORD *)(v47 + 24);
  v184[1] = v54;
  *(_OWORD *)uint64_t v185 = *(_OWORD *)(v47 + 56);
  *(void *)&v185[13] = *(void *)(v47 + 69);
  uint64_t v55 = (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v53 + 80))(v184, v52, v53);
  if (v48)
  {
    uint64_t v182 = (uint8_t *)v48;
    Class v57 = *(void (**)(char *, uint64_t))(v45 + 8);
    uint64_t v58 = v177;
    v57(v49, v177);
    v57((char *)v50, v58);
    return;
  }
  uint64_t v59 = v55;
  unint64_t v60 = v56;
  uint64_t ObjectType = swift_getObjectType();
  sub_1000B7070();
  uint64_t v182 = 0;
  uint64_t v62 = v51;
  uint64_t v167 = ObjectType;
  sub_1000452E0(v59, v60);
  uint64_t v63 = sub_100038DC8(0, &qword_1001049A0);
  uint64_t v64 = v180;
  uint64_t v65 = v180[3];
  uint64_t v66 = v180[4];
  uint64_t v67 = sub_100047028(v180, v65);
  sub_100032A80((uint64_t)v67, v63, v65, v66);
  uint64_t v166 = v62;
  if (!v68) {
    goto LABEL_16;
  }
  NSString v69 = sub_1000B7580();
  swift_bridgeObjectRelease();
  id v70 = [v69 ic_sanitizedFilenameString];

  sub_1000B75B0();
  uint64_t v71 = v64[3];
  uint64_t v72 = v64[4];
  sub_100047028(v64, v71);
  uint64_t v73 = (uint64_t)v173;
  (*(void (**)(uint64_t, uint64_t))(v72 + 40))(v71, v72);
  uint64_t v74 = v177;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v73, 1, v177) != 1)
  {
    unint64_t v80 = (void (**)(void, unint64_t, void *))v162;
    (*(void (**)(void))(v45 + 32))();
    int64_t v81 = v161;
    sub_1000B6EA0();
    swift_bridgeObjectRelease();
    uint64_t v82 = v182;
    sub_1000B70E0();
    uint64_t v79 = v82;
    if (!v82)
    {
      long long v96 = *(void (**)(int64_t, uint64_t))(v45 + 8);
      v96(v81, v74);
      v96((int64_t)v80, v74);
      goto LABEL_29;
    }
    Swift::String v83 = *(void (**)(int64_t, uint64_t))(v45 + 8);
    v83(v81, v74);
    v83((int64_t)v80, v74);
LABEL_21:
    if (qword_1001036B8 != -1) {
      swift_once();
    }
    uint64_t v90 = sub_1000B7490();
    sub_100038E8C(v90, (uint64_t)qword_100104880);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v91 = sub_1000B7480();
    os_log_type_t v92 = sub_1000B7850();
    if (os_log_type_enabled(v91, v92))
    {
      uint64_t v93 = (uint8_t *)swift_slowAlloc();
      uint64_t v186 = swift_slowAlloc();
      *(_DWORD *)uint64_t v93 = 136315138;
      swift_getErrorValue();
      uint64_t v94 = sub_1000B7E00();
      uint64_t v183 = sub_100069A50(v94, v95, &v186);
      sub_1000B79F0();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v91, v92, "Cannot export attachment media file â€” skipping {error: %s}", v93, 0xCu);
      swift_arrayDestroy();
      uint64_t v64 = v180;
      swift_slowDealloc();
      uint64_t v45 = v181;
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v79 = 0;
    goto LABEL_29;
  }
  sub_100038E30(v73, (uint64_t *)&unk_1001042F0);
  uint64_t v75 = v64[3];
  uint64_t v76 = v64[4];
  sub_100047028(v64, v75);
  uint64_t v77 = (*(uint64_t (**)(uint64_t, uint64_t))(v76 + 48))(v75, v76);
  if (v78 >> 60 != 15)
  {
    uint64_t v84 = v77;
    unint64_t v85 = v78;
    int v86 = v172;
    sub_1000B6EA0();
    swift_bridgeObjectRelease();
    uint64_t v87 = v182;
    sub_1000B7070();
    uint64_t v79 = v87;
    if (!v87)
    {
      uint64_t v97 = v181;
      (*(void (**)(char *, uint64_t))(v181 + 8))(v86, v177);
      uint64_t v98 = v84;
      uint64_t v45 = v97;
      sub_10004E77C(v98, v85);
      goto LABEL_29;
    }
    uint64_t v88 = v181;
    (*(void (**)(char *, uint64_t))(v181 + 8))(v86, v177);
    uint64_t v89 = v84;
    uint64_t v45 = v88;
    sub_10004E77C(v89, v85);
    goto LABEL_21;
  }
  swift_bridgeObjectRelease();
  uint64_t v45 = v181;
LABEL_16:
  uint64_t v79 = v182;
LABEL_29:
  uint64_t v99 = v64[3];
  uint64_t v100 = v64[4];
  sub_100047028(v64, v99);
  uint64_t v101 = (*(uint64_t (**)(uint64_t, uint64_t))(v100 + 64))(v99, v100);
  uint64_t v103 = v175;
  uint64_t v48 = (uint64_t)v164;
  if (v102 >> 60 != 15)
  {
    uint64_t v104 = v101;
    unint64_t v47 = v102;
    if (qword_100103650 != -1) {
      goto LABEL_96;
    }
    goto LABEL_31;
  }
LABEL_37:
  uint64_t v48 = (uint64_t)v103;
  uint64_t v103 = v165;
  while (1)
  {
    uint64_t v112 = v64[3];
    uint64_t v113 = v64[4];
    sub_100047028(v64, v112);
    uint64_t v114 = (*(uint64_t (**)(uint64_t, uint64_t))(v113 + 72))(v112, v113);
    if (v115 >> 60 != 15)
    {
      uint64_t v116 = v114;
      unint64_t v117 = v115;
      if (qword_100103658 != -1) {
        swift_once();
      }
      sub_1000B6EA0();
      sub_1000B7070();
      if (v79)
      {
        (*(void (**)(uint8_t *, uint64_t))(v45 + 8))(v103, v177);
        if (qword_1001036B8 != -1) {
          swift_once();
        }
        uint64_t v118 = sub_1000B7490();
        sub_100038E8C(v118, (uint64_t)qword_100104880);
        swift_errorRetain();
        swift_errorRetain();
        BOOL v119 = sub_1000B7480();
        os_log_type_t v120 = sub_1000B7850();
        if (os_log_type_enabled(v119, v120))
        {
          uint64_t v103 = (uint8_t *)swift_slowAlloc();
          uint64_t v186 = swift_slowAlloc();
          *(_DWORD *)uint64_t v103 = 136315138;
          uint64_t v182 = v103 + 4;
          swift_getErrorValue();
          uint64_t v121 = sub_1000B7E00();
          uint64_t v183 = sub_100069A50(v121, v122, &v186);
          sub_1000B79F0();
          swift_bridgeObjectRelease();
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v119, v120, "Cannot export attachment fallback PDF file â€” skipping {error: %s}", v103, 0xCu);
          swift_arrayDestroy();
          uint64_t v64 = v180;
          swift_slowDealloc();
          swift_slowDealloc();
          sub_10004E77C(v116, v117);

          swift_errorRelease();
        }
        else
        {
          sub_10004E77C(v116, v117);
          swift_errorRelease();
          swift_errorRelease();
          swift_errorRelease();
        }
        uint64_t v79 = 0;
        uint64_t v48 = (uint64_t)v175;
        uint64_t v45 = v181;
      }
      else
      {
        (*(void (**)(uint8_t *, uint64_t))(v45 + 8))(v103, v177);
        sub_10004E77C(v116, v117);
      }
    }
    uint64_t v123 = v64[3];
    uint64_t v124 = v64[4];
    sub_100047028(v64, v123);
    uint64_t v125 = (*(uint64_t (**)(uint64_t, uint64_t))(v124 + 56))(v123, v124);
    int64_t v127 = 0;
    uint64_t v128 = *(void *)(v125 + 56);
    uint64_t v160 = v125 + 56;
    os_signpost_id_t v173 = (char *)v125;
    uint64_t v129 = 1 << *(unsigned char *)(v125 + 32);
    uint64_t v130 = -1;
    if (v129 < 64) {
      uint64_t v130 = ~(-1 << v129);
    }
    uint64_t v104 = v130 & v128;
    int64_t v161 = (unint64_t)(v129 + 63) >> 6;
    uint64_t v165 = (uint8_t *)(v45 + 16);
    uint64_t v172 = (char *)(v45 + 56);
    uint64_t v164 = (char *)(v45 + 48);
    BOOL v162 = (void (**)(char *, unint64_t, void *))(v45 + 32);
    os_signpost_id_t v178 = (void *)(v45 + 8);
    *(void *)&long long v126 = 136315138;
    long long v159 = v126;
    v158[1] = (char *)&type metadata for Any + 8;
    unint64_t v47 = (unint64_t)v176;
    id v131 = v170;
    uint64_t v64 = (void *)v177;
    if ((v130 & v128) != 0) {
      break;
    }
LABEL_57:
    if (__OFADD__(v127++, 1))
    {
      __break(1u);
LABEL_93:
      swift_once();
      goto LABEL_8;
    }
    if (v127 >= v161) {
      goto LABEL_83;
    }
    unint64_t v137 = *(void *)(v160 + 8 * v127);
    if (v137) {
      goto LABEL_69;
    }
    int64_t v138 = v127 + 1;
    if (v127 + 1 >= v161) {
      goto LABEL_83;
    }
    unint64_t v137 = *(void *)(v160 + 8 * v138);
    if (v137) {
      goto LABEL_68;
    }
    int64_t v138 = v127 + 2;
    if (v127 + 2 >= v161) {
      goto LABEL_83;
    }
    unint64_t v137 = *(void *)(v160 + 8 * v138);
    if (v137) {
      goto LABEL_68;
    }
    int64_t v138 = v127 + 3;
    if (v127 + 3 >= v161) {
      goto LABEL_83;
    }
    unint64_t v137 = *(void *)(v160 + 8 * v138);
    if (v137) {
      goto LABEL_68;
    }
    int64_t v138 = v127 + 4;
    if (v127 + 4 >= v161)
    {
LABEL_83:
      (*(void (**)(unint64_t, uint64_t, uint64_t, void *))v172)(v47, 1, 1, v64);
      goto LABEL_84;
    }
    unint64_t v137 = *(void *)(v160 + 8 * v138);
    if (v137)
    {
LABEL_68:
      int64_t v127 = v138;
LABEL_69:
      uint64_t v104 = (v137 - 1) & v137;
      unint64_t v135 = __clz(__rbit64(v137)) + (v127 << 6);
      goto LABEL_70;
    }
    while (1)
    {
      int64_t v127 = v138 + 1;
      if (__OFADD__(v138, 1)) {
        break;
      }
      if (v127 >= v161) {
        goto LABEL_83;
      }
      unint64_t v137 = *(void *)(v160 + 8 * v127);
      ++v138;
      if (v137) {
        goto LABEL_69;
      }
    }
LABEL_95:
    __break(1u);
LABEL_96:
    swift_once();
LABEL_31:
    sub_1000B6EA0();
    sub_1000B7070();
    if (!v79)
    {
      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v48, v177);
      sub_10004E77C(v104, v47);
      goto LABEL_37;
    }
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v48, v177);
    if (qword_1001036B8 != -1) {
      swift_once();
    }
    uint64_t v105 = sub_1000B7490();
    sub_100038E8C(v105, (uint64_t)qword_100104880);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v106 = sub_1000B7480();
    os_log_type_t v107 = sub_1000B7850();
    BOOL v108 = os_log_type_enabled(v106, v107);
    uint64_t v103 = v165;
    if (v108)
    {
      uint64_t v109 = (uint8_t *)swift_slowAlloc();
      uint64_t v186 = swift_slowAlloc();
      *(_DWORD *)uint64_t v109 = 136315138;
      uint64_t v182 = v109 + 4;
      swift_getErrorValue();
      uint64_t v110 = sub_1000B7E00();
      uint64_t v183 = sub_100069A50(v110, v111, &v186);
      sub_1000B79F0();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v106, v107, "Cannot export attachment preview image file â€” skipping {error: %s}", v109, 0xCu);
      swift_arrayDestroy();
      uint64_t v64 = v180;
      swift_slowDealloc();
      uint64_t v103 = v165;
      swift_slowDealloc();
      sub_10004E77C(v104, v47);

      swift_errorRelease();
    }
    else
    {
      sub_10004E77C(v104, v47);
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v79 = 0;
    uint64_t v48 = (uint64_t)v175;
    uint64_t v45 = v181;
  }
  while (1)
  {
    unint64_t v134 = __clz(__rbit64(v104));
    v104 &= v104 - 1;
    unint64_t v135 = v134 | (v127 << 6);
LABEL_70:
    (*(void (**)(unint64_t, unint64_t, void *))(v45 + 16))(v47, *((void *)v173 + 6) + *(void *)(v45 + 72) * v135, v64);
    (*(void (**)(unint64_t, void, uint64_t, void *))(v45 + 56))(v47, 0, 1, v64);
    if ((*(unsigned int (**)(unint64_t, uint64_t, void *))(v45 + 48))(v47, 1, v64) == 1) {
      break;
    }
    uint64_t v180 = (void *)v104;
    uint64_t v182 = (uint8_t *)v127;
    uint64_t v139 = v45;
    (*v162)(v131, v47, v64);
    int v140 = v64;
    int v141 = v131;
    sub_1000B6E70();
    uint64_t v103 = v79;
    uint64_t v142 = v171;
    sub_1000B6EA0();
    swift_bridgeObjectRelease();
    sub_1000B70E0();
    if (v79)
    {
      uint64_t v143 = (void (*)(char *, void *))*v178;
      ((void (*)(char *, void *))*v178)(v142, v140);
      uint64_t v64 = v140;
      if (qword_1001036B8 != -1) {
        swift_once();
      }
      uint64_t v144 = sub_1000B7490();
      sub_100038E8C(v144, (uint64_t)qword_100104880);
      swift_errorRetain();
      swift_errorRetain();
      int v145 = sub_1000B7480();
      os_log_type_t v146 = sub_1000B7850();
      BOOL v147 = os_log_type_enabled(v145, v146);
      uint64_t v104 = (uint64_t)v180;
      if (v147)
      {
        uint64_t v148 = swift_slowAlloc();
        uint64_t v186 = swift_slowAlloc();
        *(_DWORD *)uint64_t v148 = v159;
        swift_getErrorValue();
        uint64_t v149 = sub_1000B7E00();
        *(void *)(v148 + 4) = sub_100069A50(v149, v150, &v186);
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v145, v146, "Cannot export attachment asset file â€” skipping {error: %s}", (uint8_t *)v148, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v64 = (void *)v177;
        swift_slowDealloc();
      }
      else
      {

        swift_errorRelease();
        swift_errorRelease();
      }
      swift_errorRelease();
      id v131 = v170;
      v143(v170, v64);
      uint64_t v79 = 0;
      uint64_t v48 = (uint64_t)v175;
      unint64_t v47 = (unint64_t)v176;
      uint64_t v45 = v181;
      int64_t v127 = (int64_t)v182;
      if (!v104) {
        goto LABEL_57;
      }
    }
    else
    {
      os_log_type_t v132 = v142;
      BOOL v133 = (void (*)(char *, void *))*v178;
      ((void (*)(char *, void *))*v178)(v132, v140);
      v133(v141, v140);
      id v131 = v141;
      uint64_t v64 = v140;
      uint64_t v45 = v139;
      int64_t v127 = (int64_t)v182;
      uint64_t v104 = (uint64_t)v180;
      if (!v180) {
        goto LABEL_57;
      }
    }
  }
LABEL_84:
  swift_release();
  uint64_t v45 = v174;
  uint64_t v103 = v163;
  uint64_t v151 = (char *)[(uint8_t *)v163 completedUnitCount];
  if (__OFADD__(v151, 1))
  {
    __break(1u);
    goto LABEL_95;
  }
  [(uint8_t *)v103 setCompletedUnitCount:v151 + 1];
  uint64_t v152 = *(void *)(v45 + 16);
  if (v152)
  {
    uint64_t v153 = *(void *)(sub_100032E20(&qword_100103908) - 8);
    uint64_t v154 = v45 + ((*(unsigned __int8 *)(v153 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v153 + 80));
    uint64_t v155 = *(void *)(v153 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1000811F0(v154, v48, v103);
      if (v79) {
        break;
      }
      v154 += v155;
      if (!--v152)
      {
        swift_bridgeObjectRelease();
        goto LABEL_90;
      }
    }
    uint64_t v182 = v79;
    swift_bridgeObjectRelease();
    uint64_t v157 = (void (*)(char *, void *))*v178;
    ((void (*)(char *, void *))*v178)(v168, v64);
    v157((char *)v48, v64);
  }
  else
  {
LABEL_90:
    uint64_t v156 = (void (*)(char *, void *))*v178;
    ((void (*)(char *, void *))*v178)(v168, v64);
    v156((char *)v48, v64);
  }
}

void sub_1000897A4(void *a1, int64_t a2, uint64_t a3, void *a4)
{
  uint64_t v176 = a3;
  int64_t v171 = a2;
  unint64_t v179 = a1;
  uint64_t v172 = *v4;
  uint64_t v6 = sub_100032E20((uint64_t *)&unk_1001042F0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  os_signpost_id_t v178 = (char *)v158 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  os_signpost_id_t v170 = (char *)v158 - v9;
  uint64_t v173 = sub_1000B6F10();
  uint64_t v177 = *(void *)(v173 - 8);
  uint64_t v10 = __chkstk_darwin(v173);
  uint64_t v175 = (char *)v158 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v181 = (char *)v158 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (void (**)(char *, uint64_t, uint64_t, uint64_t))((char *)v158 - v15);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)v158 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)v158 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v25 = (void (**)(char *, char *, uint64_t))((char *)v158 - v24);
  uint64_t v26 = __chkstk_darwin(v23);
  BOOL v28 = (char *)v158 - v27;
  uint64_t v29 = __chkstk_darwin(v26);
  uint64_t v31 = (char *)v158 - v30;
  __chkstk_darwin(v29);
  BOOL v33 = (char *)v158 - v32;
  uint64_t v34 = v182;
  sub_1000B7830();
  uint64_t v182 = v34;
  if (v34) {
    return;
  }
  BOOL v162 = v25;
  v163 = v28;
  int64_t v161 = (int64_t)v22;
  uint64_t v164 = v19;
  uint64_t v166 = v16;
  uint64_t v169 = v31;
  uint64_t v174 = v33;
  id v165 = a4;
  uint64_t v35 = v179;
  uint64_t v36 = v179[3];
  uint64_t v37 = v179[4];
  sub_100047028(v179, v36);
  uint64_t v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 16))(v36, v37);
  if (v39)
  {
    uint64_t v40 = v38;
    uint64_t v41 = v39;
  }
  else
  {
    id v42 = [self mainBundle];
    NSString v43 = sub_1000B7580();
    id v44 = [v42 localizedStringForKey:v43 value:0 table:0];

    uint64_t v40 = sub_1000B75B0();
    uint64_t v41 = v45;
  }
  int64_t v46 = (int64_t)v169;
  unint64_t v47 = v182;
  sub_1000858E4(v40, v41, v176, 0x656D686361747461, 0xEA0000000000746ELL, (uint64_t)v174);
  uint64_t v182 = v47;
  if (v47)
  {
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRelease();
  if (qword_100103648 != -1) {
    goto LABEL_85;
  }
LABEL_8:
  uint64_t v48 = (uint64_t)v174;
  sub_1000B6EA0();
  uint64_t v49 = v180;
  uint64_t v50 = *(void *)(v180 + 80);
  uint64_t v176 = *(void *)(v180 + 88);
  uint64_t v51 = v35[3];
  uint64_t v52 = v35[4];
  sub_100047028(v35, v51);
  long long v53 = *(_OWORD *)(v49 + 40);
  v184[0] = *(_OWORD *)(v49 + 24);
  v184[1] = v53;
  *(_OWORD *)uint64_t v185 = *(_OWORD *)(v49 + 56);
  *(void *)&v185[13] = *(void *)(v49 + 69);
  long long v54 = v182;
  uint64_t v55 = (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v52 + 80))(v184, v51, v52);
  if (v54)
  {
    uint64_t v182 = v54;
    Class v57 = *(void (**)(int64_t, uint64_t))(v177 + 8);
    int64_t v58 = v46;
    uint64_t v59 = v173;
    v57(v58, v173);
    v57(v48, v59);
    return;
  }
  uint64_t v60 = v55;
  unint64_t v61 = v56;
  uint64_t ObjectType = swift_getObjectType();
  sub_1000B7070();
  uint64_t v182 = 0;
  uint64_t v63 = v50;
  uint64_t v167 = ObjectType;
  sub_1000452E0(v60, v61);
  uint64_t v64 = sub_100038DC8(0, &qword_1001049A0);
  uint64_t v65 = v179;
  uint64_t v66 = v179[3];
  uint64_t v67 = v179[4];
  uint64_t v68 = sub_100047028(v179, v66);
  sub_100032A80((uint64_t)v68, v64, v66, v67);
  uint64_t v168 = v63;
  if (!v69)
  {
    uint64_t v81 = (uint64_t)v178;
    goto LABEL_15;
  }
  NSString v70 = sub_1000B7580();
  swift_bridgeObjectRelease();
  id v71 = [v70 ic_sanitizedFilenameString];

  sub_1000B75B0();
  uint64_t v72 = v65[3];
  uint64_t v73 = v65[4];
  sub_100047028(v65, v72);
  uint64_t v74 = (uint64_t)v170;
  uint64_t v75 = v173;
  (*(void (**)(uint64_t, uint64_t))(v73 + 40))(v72, v73);
  uint64_t v76 = v177;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v177 + 48))(v74, 1, v75) != 1)
  {
    Swift::String v83 = v163;
    (*(void (**)(char *, uint64_t, uint64_t))(v76 + 32))(v163, v74, v75);
    uint64_t v84 = v162;
    sub_1000B6EA0();
    swift_bridgeObjectRelease();
    unint64_t v85 = v182;
    sub_1000B70E0();
    uint64_t v81 = (uint64_t)v178;
    if (!v85)
    {
      uint64_t v182 = 0;
      uint64_t v97 = *(void (**)(void (**)(char *, char *, uint64_t), uint64_t))(v76 + 8);
      v97(v84, v75);
      v97((void (**)(char *, char *, uint64_t))v83, v75);
      uint64_t v82 = v76;
      goto LABEL_27;
    }
    int v86 = *(void (**)(void (**)(char *, char *, uint64_t), uint64_t))(v76 + 8);
    v86(v84, v75);
    v86((void (**)(char *, char *, uint64_t))v83, v75);
    uint64_t v182 = 0;
    uint64_t v82 = v76;
LABEL_20:
    if (qword_1001036B8 != -1) {
      swift_once();
    }
    uint64_t v91 = sub_1000B7490();
    sub_100038E8C(v91, (uint64_t)qword_100104880);
    swift_errorRetain();
    swift_errorRetain();
    os_log_type_t v92 = sub_1000B7480();
    os_log_type_t v93 = sub_1000B7850();
    if (os_log_type_enabled(v92, v93))
    {
      uint64_t v94 = (uint8_t *)swift_slowAlloc();
      uint64_t v186 = swift_slowAlloc();
      *(_DWORD *)uint64_t v94 = 136315138;
      swift_getErrorValue();
      uint64_t v95 = sub_1000B7E00();
      uint64_t v183 = sub_100069A50(v95, v96, &v186);
      uint64_t v81 = (uint64_t)v178;
      sub_1000B79F0();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v92, v93, "Cannot export attachment media file â€” skipping {error: %s}", v94, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v82 = v177;
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    goto LABEL_27;
  }
  sub_100038E30(v74, (uint64_t *)&unk_1001042F0);
  uint64_t v77 = v65[3];
  uint64_t v78 = v65[4];
  sub_100047028(v65, v77);
  uint64_t v79 = (*(uint64_t (**)(uint64_t, uint64_t))(v78 + 48))(v77, v78);
  uint64_t v81 = (uint64_t)v178;
  if (v80 >> 60 != 15)
  {
    uint64_t v87 = v79;
    unint64_t v88 = v80;
    int64_t v89 = v161;
    sub_1000B6EA0();
    swift_bridgeObjectRelease();
    uint64_t v90 = v182;
    sub_1000B7070();
    if (!v90)
    {
      uint64_t v182 = 0;
      uint64_t v82 = v177;
      (*(void (**)(int64_t, uint64_t))(v177 + 8))(v89, v173);
      sub_10004E77C(v87, v88);
      goto LABEL_27;
    }
    uint64_t v82 = v177;
    (*(void (**)(int64_t, uint64_t))(v177 + 8))(v89, v173);
    sub_10004E77C(v87, v88);
    uint64_t v182 = 0;
    goto LABEL_20;
  }
  swift_bridgeObjectRelease();
LABEL_15:
  uint64_t v82 = v177;
LABEL_27:
  uint64_t v98 = v179[3];
  uint64_t v99 = v179[4];
  sub_100047028(v179, v98);
  uint64_t v100 = (*(uint64_t (**)(uint64_t, uint64_t))(v99 + 64))(v98, v99);
  if (v101 >> 60 != 15)
  {
    uint64_t v102 = v100;
    int64_t v46 = v101;
    uint64_t v103 = v173;
    if (qword_100103650 != -1) {
      goto LABEL_88;
    }
    goto LABEL_29;
  }
LABEL_36:
  uint64_t v103 = v173;
  while (1)
  {
    uint64_t v112 = v179[3];
    uint64_t v113 = v179[4];
    sub_100047028(v179, v112);
    uint64_t v114 = (*(uint64_t (**)(uint64_t, uint64_t))(v113 + 72))(v112, v113);
    if (v115 >> 60 != 15)
    {
      uint64_t v116 = v114;
      unint64_t v117 = v115;
      if (qword_100103658 != -1) {
        swift_once();
      }
      uint64_t v118 = v166;
      sub_1000B6EA0();
      BOOL v119 = v182;
      sub_1000B7070();
      uint64_t v182 = v119;
      if (v119)
      {
        os_log_type_t v120 = v118;
        uint64_t v121 = v103;
        (*(void (**)(void (**)(char *, uint64_t, uint64_t, uint64_t), uint64_t))(v82 + 8))(v120, v103);
        if (qword_1001036B8 != -1) {
          swift_once();
        }
        uint64_t v122 = sub_1000B7490();
        sub_100038E8C(v122, (uint64_t)qword_100104880);
        swift_errorRetain();
        swift_errorRetain();
        uint64_t v123 = sub_1000B7480();
        os_log_type_t v124 = sub_1000B7850();
        if (os_log_type_enabled(v123, v124))
        {
          uint64_t v125 = (uint8_t *)swift_slowAlloc();
          uint64_t v186 = swift_slowAlloc();
          *(_DWORD *)uint64_t v125 = 136315138;
          os_signpost_id_t v170 = (char *)(v125 + 4);
          swift_getErrorValue();
          uint64_t v126 = sub_1000B7E00();
          uint64_t v183 = sub_100069A50(v126, v127, &v186);
          sub_1000B79F0();
          swift_bridgeObjectRelease();
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v123, v124, "Cannot export attachment fallback PDF file â€” skipping {error: %s}", v125, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          uint64_t v81 = (uint64_t)v178;
          uint64_t v103 = v173;
          swift_slowDealloc();
          sub_10004E77C(v116, v117);

          swift_errorRelease();
          uint64_t v182 = 0;
          uint64_t v82 = v177;
        }
        else
        {
          sub_10004E77C(v116, v117);
          swift_errorRelease();
          swift_errorRelease();
          swift_errorRelease();

          uint64_t v182 = 0;
          uint64_t v82 = v177;
          uint64_t v103 = v121;
        }
      }
      else
      {
        (*(void (**)(void (**)(char *, uint64_t, uint64_t, uint64_t), uint64_t))(v82 + 8))(v118, v103);
        sub_10004E77C(v116, v117);
      }
    }
    uint64_t v128 = v179[3];
    uint64_t v129 = v179[4];
    sub_100047028(v179, v128);
    uint64_t v130 = (*(uint64_t (**)(uint64_t, uint64_t))(v129 + 56))(v128, v129);
    int64_t v46 = 0;
    uint64_t v132 = *(void *)(v130 + 56);
    uint64_t v160 = v130 + 56;
    os_signpost_id_t v170 = (char *)v130;
    uint64_t v133 = 1 << *(unsigned char *)(v130 + 32);
    uint64_t v134 = -1;
    if (v133 < 64) {
      uint64_t v134 = ~(-1 << v133);
    }
    uint64_t v102 = v134 & v132;
    int64_t v161 = (unint64_t)(v133 + 63) >> 6;
    uint64_t v164 = (char *)(v82 + 16);
    uint64_t v166 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v82 + 56);
    v163 = (char *)(v82 + 48);
    BOOL v162 = (void (**)(char *, char *, uint64_t))(v82 + 32);
    unint64_t v179 = (void *)(v82 + 8);
    *(void *)&long long v131 = 136315138;
    long long v159 = v131;
    v158[1] = (char *)&type metadata for Any + 8;
    uint64_t v35 = v182;
    unint64_t v135 = (char *)v81;
    if ((v134 & v132) != 0)
    {
      while (1)
      {
        unint64_t v138 = __clz(__rbit64(v102));
        v102 &= v102 - 1;
        unint64_t v139 = v138 | (v46 << 6);
        int v140 = v181;
LABEL_64:
        (*(void (**)(char *, unint64_t, uint64_t))(v82 + 16))(v135, *((void *)v170 + 6) + *(void *)(v82 + 72) * v139, v103);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v82 + 56))(v135, 0, 1, v103);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v135, 1, v103) == 1)
        {
          swift_release();
          int64_t v46 = v171;
          goto LABEL_79;
        }
        (*v162)(v140, v135, v103);
        sub_1000B6E70();
        uint64_t v81 = (uint64_t)v175;
        sub_1000B6EA0();
        swift_bridgeObjectRelease();
        sub_1000B70E0();
        if (!v35) {
          break;
        }
        uint64_t v144 = (void (*)(char *, uint64_t))*v179;
        uint64_t v145 = v103;
        ((void (*)(uint64_t, uint64_t))*v179)(v81, v103);
        if (qword_1001036B8 != -1) {
          swift_once();
        }
        uint64_t v146 = sub_1000B7490();
        sub_100038E8C(v146, (uint64_t)qword_100104880);
        swift_errorRetain();
        swift_errorRetain();
        BOOL v147 = sub_1000B7480();
        os_log_type_t v148 = sub_1000B7850();
        if (os_log_type_enabled(v147, v148))
        {
          uint64_t v81 = swift_slowAlloc();
          uint64_t v186 = swift_slowAlloc();
          *(_DWORD *)uint64_t v81 = v159;
          swift_getErrorValue();
          uint64_t v136 = sub_1000B7E00();
          *(void *)(v81 + 4) = sub_100069A50(v136, v137, &v186);
          swift_bridgeObjectRelease();
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v147, v148, "Cannot export attachment asset file â€” skipping {error: %s}", (uint8_t *)v81, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          unint64_t v135 = v178;
          uint64_t v103 = v173;
          swift_slowDealloc();

          swift_errorRelease();
          v144(v181, v103);
          uint64_t v35 = 0;
          uint64_t v82 = v177;
          if (!v102) {
            goto LABEL_53;
          }
        }
        else
        {

          swift_errorRelease();
          swift_errorRelease();
          swift_errorRelease();
          uint64_t v103 = v145;
          v144(v181, v145);
          uint64_t v35 = 0;
          uint64_t v82 = v177;
LABEL_71:
          unint64_t v135 = v178;
          if (!v102) {
            goto LABEL_53;
          }
        }
      }
      uint64_t v149 = (void (*)(char *, uint64_t))*v179;
      ((void (*)(uint64_t, uint64_t))*v179)(v81, v103);
      v149(v140, v103);
      goto LABEL_71;
    }
LABEL_53:
    BOOL v141 = __OFADD__(v46++, 1);
    int v140 = v181;
    if (v141)
    {
      __break(1u);
LABEL_85:
      swift_once();
      goto LABEL_8;
    }
    if (v46 >= v161) {
      break;
    }
    unint64_t v142 = *(void *)(v160 + 8 * v46);
    if (v142) {
      goto LABEL_63;
    }
    int64_t v143 = v46 + 1;
    if (v46 + 1 >= v161) {
      break;
    }
    unint64_t v142 = *(void *)(v160 + 8 * v143);
    if (v142) {
      goto LABEL_62;
    }
    int64_t v143 = v46 + 2;
    if (v46 + 2 >= v161) {
      break;
    }
    unint64_t v142 = *(void *)(v160 + 8 * v143);
    if (v142) {
      goto LABEL_62;
    }
    int64_t v143 = v46 + 3;
    if (v46 + 3 >= v161) {
      break;
    }
    unint64_t v142 = *(void *)(v160 + 8 * v143);
    if (v142)
    {
LABEL_62:
      int64_t v46 = v143;
LABEL_63:
      uint64_t v102 = (v142 - 1) & v142;
      unint64_t v139 = __clz(__rbit64(v142)) + (v46 << 6);
      goto LABEL_64;
    }
    while (1)
    {
      int64_t v46 = v143 + 1;
      if (__OFADD__(v143, 1)) {
        break;
      }
      if (v46 >= v161) {
        goto LABEL_78;
      }
      unint64_t v142 = *(void *)(v160 + 8 * v46);
      ++v143;
      if (v142) {
        goto LABEL_63;
      }
    }
    __break(1u);
LABEL_87:
    __break(1u);
LABEL_88:
    swift_once();
LABEL_29:
    uint64_t v104 = v164;
    sub_1000B6EA0();
    uint64_t v105 = v182;
    sub_1000B7070();
    uint64_t v182 = v105;
    if (v105)
    {
      (*(void (**)(char *, uint64_t))(v82 + 8))(v104, v103);
      if (qword_1001036B8 != -1) {
        swift_once();
      }
      uint64_t v106 = sub_1000B7490();
      sub_100038E8C(v106, (uint64_t)qword_100104880);
      swift_errorRetain();
      swift_errorRetain();
      os_log_type_t v107 = sub_1000B7480();
      os_log_type_t v108 = sub_1000B7850();
      if (!os_log_type_enabled(v107, v108))
      {
        sub_10004E77C(v102, v46);
        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();

        uint64_t v182 = 0;
        uint64_t v82 = v177;
        goto LABEL_36;
      }
      uint64_t v109 = (uint8_t *)swift_slowAlloc();
      uint64_t v186 = swift_slowAlloc();
      *(_DWORD *)uint64_t v109 = 136315138;
      os_signpost_id_t v170 = (char *)(v109 + 4);
      swift_getErrorValue();
      uint64_t v110 = sub_1000B7E00();
      uint64_t v183 = sub_100069A50(v110, v111, &v186);
      sub_1000B79F0();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v107, v108, "Cannot export attachment preview image file â€” skipping {error: %s}", v109, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v81 = (uint64_t)v178;
      uint64_t v103 = v173;
      swift_slowDealloc();
      sub_10004E77C(v102, v46);

      swift_errorRelease();
      uint64_t v182 = 0;
      uint64_t v82 = v177;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v82 + 8))(v104, v103);
      sub_10004E77C(v102, v46);
    }
  }
LABEL_78:
  int64_t v46 = v171;
  (*v166)(v135, 1, 1, v103);
  swift_release();
LABEL_79:
  id v150 = v165;
  uint64_t v151 = (char *)[v165 completedUnitCount];
  if (__OFADD__(v151, 1)) {
    goto LABEL_87;
  }
  id v152 = [v150 setCompletedUnitCount:v151 + 1];
  uint64_t v186 = v46;
  __chkstk_darwin(v152);
  uint64_t v153 = (uint64_t)v174;
  v158[-4] = v180;
  v158[-3] = v153;
  v158[-2] = v150;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1000B71E0();
  sub_1000B7760();
  swift_getWitnessTable();
  sub_1000B7690();
  if (v35)
  {
    uint64_t v182 = v35;
    uint64_t v154 = (void (*)(uint64_t, uint64_t))*v179;
    uint64_t v155 = v173;
    ((void (*)(char *, uint64_t))*v179)(v169, v173);
    v154(v153, v155);
  }
  else
  {
    uint64_t v156 = (void (*)(uint64_t, uint64_t))*v179;
    uint64_t v157 = v173;
    ((void (*)(char *, uint64_t))*v179)(v169, v173);
    v156(v153, v157);
  }
}

uint64_t sub_10008B09C@<X0>(uint64_t *a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1000B71E0();
  uint64_t result = sub_1000B7170();
  *a1 = result;
  return result;
}

void sub_10008B134(char a1)
{
  uint64_t v2 = v1;
  if ((*(unsigned char *)(v1 + 112) & 1) != 0 || (a1 & 0x1F) == 0)
  {
    uint64_t v3 = qword_1001036B8;
    swift_retain();
    if (v3 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1000B7490();
    sub_100038E8C(v4, (uint64_t)qword_100104880);
    uint64_t v5 = sub_1000B7480();
    os_log_type_t v6 = sub_1000B7840();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Resetting contextâ€¦", v7, 2u);
      swift_slowDealloc();
    }

    uint64_t v8 = (void *)sub_1000B72B0();
    [v8 reset];
    swift_release();

    *(unsigned char *)(v2 + 112) = 0;
  }
}

void sub_10008B25C(char a1)
{
  uint64_t v2 = v1;
  if ((*(unsigned char *)(v1 + 112) & 1) != 0 || (a1 & 0x1F) == 0)
  {
    sub_1000B72C0();
    if (swift_dynamicCastClass())
    {
      uint64_t v3 = qword_1001036B8;
      swift_unknownObjectRetain();
      if (v3 != -1) {
        swift_once();
      }
      uint64_t v4 = sub_1000B7490();
      sub_100038E8C(v4, (uint64_t)qword_100104880);
      uint64_t v5 = sub_1000B7480();
      os_log_type_t v6 = sub_1000B7840();
      if (os_log_type_enabled(v5, v6))
      {
        uint64_t v7 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v7 = 0;
        _os_log_impl((void *)&_mh_execute_header, v5, v6, "Resetting contextâ€¦", v7, 2u);
        swift_slowDealloc();
      }

      uint64_t v8 = (void *)sub_1000B72B0();
      [v8 reset];
      swift_unknownObjectRelease();
    }
    *(unsigned char *)(v2 + 112) = 0;
  }
}

uint64_t sub_10008B3A0()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    *(unsigned char *)(result + 112) = 1;
    return swift_release();
  }
  return result;
}

uint64_t ICArchiveExporterConfiguration.creator.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100032FC8(v1, a1, qword_1001048B0);
}

uint64_t ICArchiveExporterConfiguration.creator.setter(uint64_t a1)
{
  return sub_10005613C(a1, v1, qword_1001048B0);
}

uint64_t ICArchiveExporterConfiguration.exportsActivities.getter()
{
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t ICArchiveExporterConfiguration.exportsActivities.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 48) = result;
  return result;
}

uint64_t (*ICArchiveExporterConfiguration.exportsActivities.modify())()
{
  return ICCloudSyncingObject.MoveAction.Types.rawValue.getter;
}

uint64_t ICArchiveExporterConfiguration.exportsAttributions.getter()
{
  return *(unsigned __int8 *)(v0 + 49);
}

uint64_t ICArchiveExporterConfiguration.exportsAttributions.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 49) = result;
  return result;
}

uint64_t (*ICArchiveExporterConfiguration.exportsAttributions.modify())()
{
  return ICCloudSyncingObject.MoveAction.Types.rawValue.getter;
}

uint64_t ICArchiveExporterConfiguration.exportsViewDates.getter()
{
  return *(unsigned __int8 *)(v0 + 50);
}

uint64_t ICArchiveExporterConfiguration.exportsViewDates.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 50) = result;
  return result;
}

uint64_t (*ICArchiveExporterConfiguration.exportsViewDates.modify())()
{
  return ICCloudSyncingObject.MoveAction.Types.rawValue.getter;
}

uint64_t ICArchiveExporterConfiguration.exportsInternalProperties.getter()
{
  return *(unsigned __int8 *)(v0 + 51);
}

uint64_t ICArchiveExporterConfiguration.exportsInternalProperties.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 51) = result;
  return result;
}

uint64_t (*ICArchiveExporterConfiguration.exportsInternalProperties.modify())()
{
  return ICCloudSyncingObject.MoveAction.Types.rawValue.getter;
}

uint64_t ICArchiveExporterConfiguration.forPagesHandoff.getter()
{
  return *(unsigned __int8 *)(v0 + 52);
}

uint64_t ICArchiveExporterConfiguration.forPagesHandoff.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 52) = result;
  return result;
}

uint64_t (*ICArchiveExporterConfiguration.forPagesHandoff.modify())()
{
  return ICCloudSyncingObject.MoveAction.Types.rawValue.getter;
}

void sub_10008B530()
{
  uint64_t v1 = self;
  id v2 = v0;
  id v3 = [v1 sharedContext];
  if (v3
    && (uint64_t v4 = v3,
        id v5 = [v3 snapshotManagedObjectContext],
        v4,
        v5))
  {
    swift_getObjectType();

    if (qword_1001036C8 != -1) {
      swift_once();
    }
    long long v6 = static ICArchiveCreator.default;
    uint64_t v8 = qword_10010E990;
    uint64_t v7 = unk_10010E998;
    long long v9 = xmmword_10010E9A0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    long long v10 = v6;
    uint64_t v11 = v8;
    uint64_t v12 = v7;
    long long v13 = v9;
    char IsAlexandriaDemoModeEnabled = ICInternalSettingsIsAlexandriaDemoModeEnabled();
    char v15 = ICInternalSettingsIsAlexandriaDemoModeEnabled();
    char v16 = ICInternalSettingsIsAlexandriaDemoModeEnabled();
    __int16 v17 = 0;
    sub_10008E3CC(v5, (uint64_t)&v10);

    swift_deallocPartialClassInstance();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10008BA14(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10008BA4C(uint64_t a1, uint64_t a2)
{
  uint64_t v46 = a1;
  uint64_t v60 = sub_100032E20(&qword_1001049B0);
  __chkstk_darwin(v60);
  id v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = _s3TagVMa();
  uint64_t v54 = *(void *)(v51 - 8);
  uint64_t v6 = __chkstk_darwin(v51);
  uint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v44 = (uint64_t)&v43 - v9;
  uint64_t v10 = sub_1000B6FD0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  long long v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100032E20(&qword_100103A20);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v58 = (uint64_t)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v62 = (uint64_t)&v43 - v18;
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v43 - v19;
  uint64_t v45 = v2;
  uint64_t v21 = *v2;
  sub_1000B7E40();
  uint64_t v61 = a2;
  sub_100032FC8(a2, (uint64_t)v20, &qword_100103A20);
  uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  unsigned int v23 = v22(v20, 1, v10);
  uint64_t v59 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v22;
  if (v23 == 1)
  {
    sub_1000B7E60(0);
    swift_bridgeObjectRetain();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v20, v10);
    sub_1000B7E60(1u);
    sub_10008DE28(&qword_1001049B8, (void (*)(uint64_t))&type metadata accessor for Date);
    swift_bridgeObjectRetain();
    sub_1000B7530();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  uint64_t v50 = (void *)(v61 + *(int *)(v51 + 20));
  swift_bridgeObjectRetain();
  sub_1000B7620();
  swift_bridgeObjectRelease();
  Swift::Int v24 = sub_1000B7E70();
  uint64_t v25 = -1 << *(unsigned char *)(v21 + 32);
  unint64_t v26 = v24 & ~v25;
  uint64_t v57 = v21 + 56;
  uint64_t v27 = v21;
  if ((*(void *)(v21 + 56 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v26))
  {
    uint64_t v55 = v11 + 48;
    uint64_t v49 = v13;
    uint64_t v53 = ~v25;
    uint64_t v54 = *(void *)(v54 + 72);
    unint64_t v47 = (void (**)(char *, uint64_t, uint64_t))(v11 + 32);
    uint64_t v52 = (void (**)(uint64_t, uint64_t))(v11 + 8);
    uint64_t v48 = v8;
    uint64_t v56 = v21;
    do
    {
      unint64_t v28 = v54 * v26;
      sub_100046CD4(*(void *)(v27 + 48) + v54 * v26, (uint64_t)v8);
      uint64_t v29 = v62;
      sub_100032FC8(v61, v62, &qword_100103A20);
      uint64_t v30 = (uint64_t)&v5[*(int *)(v60 + 48)];
      sub_100032FC8((uint64_t)v8, (uint64_t)v5, &qword_100103A20);
      sub_100032FC8(v29, v30, &qword_100103A20);
      uint64_t v31 = v59;
      if (v59((uint64_t)v5, 1, v10) == 1)
      {
        sub_100038E30(v29, &qword_100103A20);
        if (v31(v30, 1, v10) != 1) {
          goto LABEL_13;
        }
        sub_100038E30((uint64_t)v5, &qword_100103A20);
      }
      else
      {
        sub_100032FC8((uint64_t)v5, v58, &qword_100103A20);
        if (v31(v30, 1, v10) == 1)
        {
          sub_100038E30(v62, &qword_100103A20);
          (*v52)(v58, v10);
LABEL_13:
          sub_100038E30((uint64_t)v5, &qword_1001049B0);
          goto LABEL_7;
        }
        uint64_t v32 = v58;
        BOOL v33 = v49;
        (*v47)(v49, v30, v10);
        sub_10008DE28(&qword_1001049C0, (void (*)(uint64_t))&type metadata accessor for Date);
        char v34 = sub_1000B7570();
        uint64_t v35 = *v52;
        uint64_t v36 = (uint64_t)v33;
        uint64_t v8 = v48;
        (*v52)(v36, v10);
        sub_100038E30(v62, &qword_100103A20);
        v35(v32, v10);
        sub_100038E30((uint64_t)v5, &qword_100103A20);
        if ((v34 & 1) == 0) {
          goto LABEL_7;
        }
      }
      uint64_t v37 = &v8[*(int *)(v51 + 20)];
      if (*(void *)v37 == *v50 && *((void *)v37 + 1) == v50[1] || (sub_1000B7DC0() & 1) != 0)
      {
        sub_10008E1E0((uint64_t)v8, (uint64_t (*)(void))_s3TagVMa);
        swift_bridgeObjectRelease();
        sub_10008E1E0(v61, (uint64_t (*)(void))_s3TagVMa);
        sub_100046CD4(*(void *)(*v45 + 48) + v28, v46);
        return 0;
      }
LABEL_7:
      sub_10008E1E0((uint64_t)v8, (uint64_t (*)(void))_s3TagVMa);
      unint64_t v26 = (v26 + 1) & v53;
      uint64_t v27 = v56;
    }
    while (((*(void *)(v57 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v26) & 1) != 0);
  }
  swift_bridgeObjectRelease();
  uint64_t v39 = v45;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v41 = v61;
  uint64_t v42 = v44;
  sub_100046CD4(v61, v44);
  uint64_t v63 = *v39;
  uint64_t *v39 = 0x8000000000000000;
  sub_10008C698(v42, v26, isUniquelyReferenced_nonNull_native);
  uint64_t *v39 = v63;
  swift_bridgeObjectRelease();
  sub_100046D38(v41, v46);
  return 1;
}

uint64_t sub_10008C1A8()
{
  uint64_t v1 = v0;
  uint64_t v2 = _s3TagVMa();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  id v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_100032E20(&qword_1001049C8);
  uint64_t v7 = sub_1000B7A80();
  if (*(void *)(v6 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v6 + 32);
    uint64_t v9 = (void *)(v6 + 56);
    uint64_t v10 = -1;
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    unint64_t v11 = v10 & *(void *)(v6 + 56);
    int64_t v12 = (unint64_t)(v8 + 63) >> 6;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v14 << 6);
      }
      else
      {
        int64_t v17 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
          __break(1u);
LABEL_28:
          __break(1u);
          return result;
        }
        if (v17 >= v12) {
          goto LABEL_22;
        }
        unint64_t v18 = v9[v17];
        ++v14;
        if (!v18)
        {
          int64_t v14 = v17 + 1;
          if (v17 + 1 >= v12) {
            goto LABEL_22;
          }
          unint64_t v18 = v9[v14];
          if (!v18)
          {
            int64_t v14 = v17 + 2;
            if (v17 + 2 >= v12) {
              goto LABEL_22;
            }
            unint64_t v18 = v9[v14];
            if (!v18)
            {
              int64_t v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_22:
                swift_release();
                uint64_t v20 = 1 << *(unsigned char *)(v6 + 32);
                if (v20 > 63) {
                  bzero((void *)(v6 + 56), ((unint64_t)(v20 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v9 = -1 << v20;
                }
                *(void *)(v6 + 16) = 0;
                break;
              }
              unint64_t v18 = v9[v19];
              if (!v18)
              {
                while (1)
                {
                  int64_t v14 = v19 + 1;
                  if (__OFADD__(v19, 1)) {
                    goto LABEL_28;
                  }
                  if (v14 >= v12) {
                    goto LABEL_22;
                  }
                  unint64_t v18 = v9[v14];
                  ++v19;
                  if (v18) {
                    goto LABEL_21;
                  }
                }
              }
              int64_t v14 = v19;
            }
          }
        }
LABEL_21:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v14 << 6);
      }
      sub_100046D38(*(void *)(v6 + 48) + *(void *)(v3 + 72) * v16, (uint64_t)v5);
      uint64_t result = sub_10008C404((uint64_t)v5, v7);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v7;
  return result;
}

uint64_t sub_10008C404(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000B6FD0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100032E20(&qword_100103A20);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000B7E40();
  sub_100032FC8(a1, (uint64_t)v10, &qword_100103A20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    sub_1000B7E60(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_1000B7E60(1u);
    sub_10008DE28(&qword_1001049B8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_1000B7530();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v11 = _s3TagVMa();
  swift_bridgeObjectRetain();
  sub_1000B7620();
  swift_bridgeObjectRelease();
  sub_1000B7E70();
  unint64_t v12 = sub_1000B7A40();
  *(void *)(a2 + 56 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
  uint64_t result = sub_100046D38(a1, *(void *)(a2 + 48) + *(void *)(*(void *)(v11 - 8) + 72) * v12);
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_10008C698(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v56 = a1;
  uint64_t v55 = sub_100032E20(&qword_1001049B0);
  __chkstk_darwin(v55);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = _s3TagVMa();
  uint64_t v43 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000B6FD0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v44 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100032E20(&qword_100103A20);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  unint64_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v48 = (uint64_t)&v39 - v18;
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v39 - v19;
  unint64_t v21 = *(void *)(*v3 + 16);
  unint64_t v22 = *(void *)(*v3 + 24);
  uint64_t v40 = v3;
  if (v22 > v21 && (a3 & 1) != 0) {
    goto LABEL_25;
  }
  if (a3)
  {
    sub_10008C1A8();
  }
  else
  {
    if (v22 > v21)
    {
      sub_10008CD98();
      goto LABEL_25;
    }
    sub_10008CFD4();
  }
  uint64_t v54 = *v3;
  sub_1000B7E40();
  sub_100032FC8(v56, (uint64_t)v20, &qword_100103A20);
  uint64_t v52 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v53 = v11 + 48;
  if (v52(v20, 1, v10) == 1)
  {
    sub_1000B7E60(0);
  }
  else
  {
    unsigned int v23 = v44;
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v44, v20, v10);
    sub_1000B7E60(1u);
    sub_10008DE28(&qword_1001049B8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_1000B7530();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v23, v10);
  }
  uint64_t v24 = v48;
  uint64_t v45 = (void *)(v56 + *(int *)(v47 + 20));
  swift_bridgeObjectRetain();
  sub_1000B7620();
  swift_bridgeObjectRelease();
  Swift::Int v25 = sub_1000B7E70();
  uint64_t v26 = -1 << *(unsigned char *)(v54 + 32);
  a2 = v25 & ~v26;
  uint64_t v51 = v54 + 56;
  if ((*(void *)(v54 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v50 = ~v26;
    uint64_t v49 = *(void *)(v43 + 72);
    uint64_t v41 = (void (**)(char *, uint64_t, uint64_t))(v11 + 32);
    uint64_t v46 = (void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v42 = v9;
    uint64_t v27 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v52;
    do
    {
      sub_100046CD4(*(void *)(v54 + 48) + v49 * a2, (uint64_t)v9);
      sub_100032FC8(v56, v24, &qword_100103A20);
      uint64_t v28 = (uint64_t)&v7[*(int *)(v55 + 48)];
      sub_100032FC8((uint64_t)v9, (uint64_t)v7, &qword_100103A20);
      sub_100032FC8(v24, v28, &qword_100103A20);
      if (v27((uint64_t)v7, 1, v10) == 1)
      {
        sub_100038E30(v24, &qword_100103A20);
        if (v27(v28, 1, v10) != 1) {
          goto LABEL_20;
        }
        sub_100038E30((uint64_t)v7, &qword_100103A20);
      }
      else
      {
        sub_100032FC8((uint64_t)v7, (uint64_t)v16, &qword_100103A20);
        if (v27(v28, 1, v10) == 1)
        {
          sub_100038E30(v24, &qword_100103A20);
          (*v46)(v16, v10);
LABEL_20:
          sub_100038E30((uint64_t)v7, &qword_1001049B0);
          goto LABEL_14;
        }
        uint64_t v29 = v44;
        (*v41)(v44, v28, v10);
        sub_10008DE28(&qword_1001049C0, (void (*)(uint64_t))&type metadata accessor for Date);
        char v30 = sub_1000B7570();
        uint64_t v31 = *v46;
        uint64_t v32 = v29;
        uint64_t v9 = v42;
        (*v46)(v32, v10);
        sub_100038E30(v48, &qword_100103A20);
        v31(v16, v10);
        uint64_t v24 = v48;
        sub_100038E30((uint64_t)v7, &qword_100103A20);
        if ((v30 & 1) == 0) {
          goto LABEL_14;
        }
      }
      BOOL v33 = &v9[*(int *)(v47 + 20)];
      if (*(void *)v33 == *v45 && *((void *)v33 + 1) == v45[1] || (sub_1000B7DC0() & 1) != 0)
      {
        sub_10008E1E0((uint64_t)v9, (uint64_t (*)(void))_s3TagVMa);
        sub_1000B7DE0();
        __break(1u);
        break;
      }
LABEL_14:
      sub_10008E1E0((uint64_t)v9, (uint64_t (*)(void))_s3TagVMa);
      a2 = (a2 + 1) & v50;
    }
    while (((*(void *)(v51 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_25:
  uint64_t v34 = *v40;
  *(void *)(*v40 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_100046D38(v56, *(void *)(v34 + 48) + *(void *)(v43 + 72) * a2);
  uint64_t v36 = *(void *)(v34 + 16);
  BOOL v37 = __OFADD__(v36, 1);
  uint64_t v38 = v36 + 1;
  if (v37) {
    __break(1u);
  }
  else {
    *(void *)(v34 + 16) = v38;
  }
  return result;
}

void *sub_10008CD98()
{
  uint64_t v1 = v0;
  uint64_t v2 = _s3TagVMa();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100032E20(&qword_1001049C8);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_1000B7A70();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
LABEL_25:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t result = (void *)(v7 + 56);
  uint64_t v10 = v6 + 56;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v10 + 8 * v11) {
    uint64_t result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  }
  int64_t v12 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v6 + 56);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_9;
    }
    int64_t v20 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v16) {
      goto LABEL_25;
    }
    unint64_t v21 = *(void *)(v10 + 8 * v20);
    ++v12;
    if (!v21)
    {
      int64_t v12 = v20 + 1;
      if (v20 + 1 >= v16) {
        goto LABEL_25;
      }
      unint64_t v21 = *(void *)(v10 + 8 * v12);
      if (!v21)
      {
        int64_t v12 = v20 + 2;
        if (v20 + 2 >= v16) {
          goto LABEL_25;
        }
        unint64_t v21 = *(void *)(v10 + 8 * v12);
        if (!v21) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v15 = (v21 - 1) & v21;
    unint64_t v18 = __clz(__rbit64(v21)) + (v12 << 6);
LABEL_9:
    unint64_t v19 = *(void *)(v3 + 72) * v18;
    sub_100046CD4(*(void *)(v6 + 48) + v19, (uint64_t)v5);
    uint64_t result = (void *)sub_100046D38((uint64_t)v5, *(void *)(v8 + 48) + v19);
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v16) {
    goto LABEL_25;
  }
  unint64_t v21 = *(void *)(v10 + 8 * v22);
  if (v21)
  {
    int64_t v12 = v22;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v12 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v12 >= v16) {
      goto LABEL_25;
    }
    unint64_t v21 = *(void *)(v10 + 8 * v12);
    ++v22;
    if (v21) {
      goto LABEL_24;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_10008CFD4()
{
  uint64_t v1 = v0;
  uint64_t v2 = _s3TagVMa();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_100032E20(&qword_1001049C8);
  uint64_t v7 = sub_1000B7A80();
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_24:
    *uint64_t v1 = v7;
    return result;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v9 = v6 + 56;
  uint64_t v10 = -1;
  if (v8 < 64) {
    uint64_t v10 = ~(-1 << v8);
  }
  unint64_t v11 = v10 & *(void *)(v6 + 56);
  int64_t v12 = (unint64_t)(v8 + 63) >> 6;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v16 = v15 | (v14 << 6);
      goto LABEL_6;
    }
    int64_t v17 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v17 >= v12) {
      goto LABEL_22;
    }
    unint64_t v18 = *(void *)(v9 + 8 * v17);
    ++v14;
    if (!v18)
    {
      int64_t v14 = v17 + 1;
      if (v17 + 1 >= v12) {
        goto LABEL_22;
      }
      unint64_t v18 = *(void *)(v9 + 8 * v14);
      if (!v18)
      {
        int64_t v14 = v17 + 2;
        if (v17 + 2 >= v12) {
          goto LABEL_22;
        }
        unint64_t v18 = *(void *)(v9 + 8 * v14);
        if (!v18) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v11 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v14 << 6);
LABEL_6:
    sub_100046CD4(*(void *)(v6 + 48) + *(void *)(v3 + 72) * v16, (uint64_t)v5);
    uint64_t result = sub_10008C404((uint64_t)v5, v7);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_22:
    uint64_t result = swift_release_n();
    goto LABEL_24;
  }
  unint64_t v18 = *(void *)(v9 + 8 * v19);
  if (v18)
  {
    int64_t v14 = v19;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v14 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v14 >= v12) {
      goto LABEL_22;
    }
    unint64_t v18 = *(void *)(v9 + 8 * v14);
    ++v19;
    if (v18) {
      goto LABEL_21;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

char *sub_10008D1FC(unint64_t a1, void (**a2)(char *, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = v2;
  char v30 = a2;
  uint64_t v29 = sub_100032E20(&qword_1001049D0);
  __chkstk_darwin(v29);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100032E20(&qword_100103908);
  uint64_t v28 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v35 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v27 = (char *)&v26 - v10;
  if (a1 >> 62) {
    goto LABEL_21;
  }
  uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v11; uint64_t v11 = sub_1000B7BA0())
  {
    uint64_t v36 = v3;
    unint64_t v34 = a1 & 0xC000000000000001;
    uint64_t v26 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
    uint64_t v31 = (void (**)(char *, char *, uint64_t))(v28 + 32);
    uint64_t v32 = (unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
    int64_t v12 = (char *)_swiftEmptyArrayStorage;
    uint64_t v13 = 4;
    unint64_t v33 = a1;
    while (1)
    {
      uint64_t v3 = v11;
      unint64_t v15 = v34
          ? (void (**)(char *, uint64_t, uint64_t, uint64_t))sub_1000B7AC0()
          : (void (**)(char *, uint64_t, uint64_t, uint64_t))*(id *)(a1 + 8 * v13);
      unint64_t v16 = v15;
      a1 = v13 - 3;
      if (__OFADD__(v13 - 4, 1)) {
        break;
      }
      id v17 = [v15 managedObjectContext];
      if (v17)
      {
        unint64_t v18 = v17;
        __chkstk_darwin(v17);
        int64_t v19 = v30;
        *(&v26 - 2) = v16;
        *(&v26 - 1) = v19;
        uint64_t v20 = v36;
        sub_1000B7990();
        uint64_t v36 = v20;
      }
      else
      {
        (*v26)(v6, 1, 1, v7);
      }
      if ((*v32)(v6, 1, v7) == 1)
      {
        sub_100038E30((uint64_t)v6, &qword_1001049D0);
      }
      else
      {
        unint64_t v21 = *v31;
        int64_t v22 = v27;
        (*v31)(v27, v6, v7);
        v21(v35, v22, v7);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          int64_t v12 = (char *)sub_100036010(0, *((void *)v12 + 2) + 1, 1, (unint64_t)v12);
        }
        unint64_t v24 = *((void *)v12 + 2);
        unint64_t v23 = *((void *)v12 + 3);
        if (v24 >= v23 >> 1) {
          int64_t v12 = (char *)sub_100036010(v23 > 1, v24 + 1, 1, (unint64_t)v12);
        }
        *((void *)v12 + 2) = v24 + 1;
        v21(&v12[((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v28 + 72) * v24], v35, v7);
      }
      ++v13;
      uint64_t v11 = v3;
      BOOL v14 = a1 == v3;
      a1 = v33;
      if (v14)
      {
        swift_bridgeObjectRelease();
        return v12;
      }
    }
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return (char *)_swiftEmptyArrayStorage;
}

void *sub_10008D5E0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_100043860(0, v1, 0);
    uint64_t v3 = *(void *)(sub_100032E20(&qword_100103908) - 8);
    uint64_t v4 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v5 = *(void *)(v3 + 72);
    do
    {
      swift_getAtKeyPath();
      unint64_t v7 = _swiftEmptyArrayStorage[2];
      unint64_t v6 = _swiftEmptyArrayStorage[3];
      if (v7 >= v6 >> 1) {
        sub_100043860(v6 > 1, v7 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v7 + 1;
      _swiftEmptyArrayStorage[v7 + 4] = v9;
      v4 += v5;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10008D724(uint64_t a1)
{
  uint64_t v2 = _s3TagVMa();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  unint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v13 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_10008DE28(&qword_1001049A8, (void (*)(uint64_t))_s3TagVMa);
  uint64_t result = sub_1000B7790();
  uint64_t v14 = result;
  if (v9)
  {
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v12 = *(void *)(v3 + 72);
    do
    {
      sub_100046CD4(v11, (uint64_t)v6);
      sub_10008BA4C((uint64_t)v8, (uint64_t)v6);
      sub_10008E1E0((uint64_t)v8, (uint64_t (*)(void))_s3TagVMa);
      v11 += v12;
      --v9;
    }
    while (v9);
    return v14;
  }
  return result;
}

uint64_t sub_10008D8A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(_OWORD *)(v4 + 120) = 0u;
  *(_OWORD *)(v4 + 136) = 0u;
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)a2;
  *(unsigned char *)(v4 + 96) = 0;
  *(void *)(v4 + 104) = 32;
  *(unsigned char *)(v4 + 112) = 0;
  *(void *)(v4 + 16) = a1;
  *(_OWORD *)(v4 + 40) = v5;
  *(_OWORD *)(v4 + 56) = *(_OWORD *)(a2 + 32);
  *(void *)(v4 + 69) = *(void *)(a2 + 45);
  *(void *)(v4 + 80) = a3;
  *(void *)(v4 + 88) = a4;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  sub_10007AF38();
  return v4;
}

uint64_t sub_10008D914()
{
  return sub_10008DDFC((uint64_t (*)(void, void, void, void, void))sub_10007D9CC);
}

uint64_t sub_10008D944()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for ICArchiveExporter()
{
  return sub_10008E6D4();
}

uint64_t destroy for ICArchiveExporterConfiguration(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 8);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for ICArchiveExporterConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4 == 1)
  {
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    uint64_t v6 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v6;
    uint64_t v7 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  return a1;
}

uint64_t assignWithCopy for ICArchiveExporterConfiguration(uint64_t a1, long long *a2)
{
  uint64_t v4 = *((void *)a2 + 1);
  if (*(void *)(a1 + 8) == 1)
  {
    if (v4 == 1)
    {
      long long v5 = *a2;
      long long v6 = a2[2];
      *(_OWORD *)(a1 + 16) = a2[1];
      *(_OWORD *)(a1 + 32) = v6;
      *(_OWORD *)a1 = v5;
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      *(void *)(a1 + 24) = *((void *)a2 + 3);
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      *(void *)(a1 + 40) = *((void *)a2 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v4 == 1)
  {
    sub_10005AF4C(a1);
    long long v8 = a2[1];
    long long v7 = a2[2];
    *(_OWORD *)a1 = *a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(_OWORD *)(a1 + 32) = v7;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *((void *)a2 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 16) = *((void *)a2 + 2);
    *(void *)(a1 + 24) = *((void *)a2 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(void *)(a1 + 40) = *((void *)a2 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  *(unsigned char *)(a1 + 49) = *((unsigned char *)a2 + 49);
  *(unsigned char *)(a1 + 50) = *((unsigned char *)a2 + 50);
  *(unsigned char *)(a1 + 51) = *((unsigned char *)a2 + 51);
  *(unsigned char *)(a1 + 52) = *((unsigned char *)a2 + 52);
  return a1;
}

__n128 initializeWithTake for ICArchiveExporterConfiguration(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 45) = *(void *)(a2 + 45);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ICArchiveExporterConfiguration(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) != 1)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    if (v4 != 1)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v4;
      swift_bridgeObjectRelease();
      uint64_t v6 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v6;
      swift_bridgeObjectRelease();
      uint64_t v7 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v7;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_10005AF4C(a1);
  }
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
LABEL_6:
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  *(unsigned char *)(a1 + 51) = *(unsigned char *)(a2 + 51);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  return a1;
}

uint64_t getEnumTagSinglePayload for ICArchiveExporterConfiguration(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFFD && *(unsigned char *)(a1 + 53)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  BOOL v5 = __OFSUB__(v4, 1);
  int v6 = v4 - 1;
  if (v6 < 0 != v5) {
    int v6 = -1;
  }
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for ICArchiveExporterConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 52) = 0;
    *(_DWORD *)(result + 48) = 0;
    *(void *)__n128 result = a2 - 2147483646;
    if (a3 > 0x7FFFFFFD) {
      *(unsigned char *)(result + 53) = 1;
    }
  }
  else
  {
    if (a3 > 0x7FFFFFFD) {
      *(unsigned char *)(result + 53) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICArchiveExporterConfiguration()
{
  return &type metadata for ICArchiveExporterConfiguration;
}

uint64_t type metadata accessor for ICArchiveExporterObjCBridge()
{
  return self;
}

uint64_t sub_10008DDD0()
{
  return sub_10008DDFC((uint64_t (*)(void, void, void, void, void))sub_10007CC78);
}

uint64_t sub_10008DDFC(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_10008DE28(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10008DE70()
{
  unint64_t result = qword_100104978;
  if (!qword_100104978)
  {
    sub_100032F70(&qword_100104970);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104978);
  }
  return result;
}

uint64_t sub_10008DECC()
{
  return sub_10008DFB4();
}

uint64_t sub_10008DEE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100032E20(&qword_1001036F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10008DF4C()
{
  unint64_t result = qword_100104990;
  if (!qword_100104990)
  {
    sub_100038DC8(255, &qword_100104988);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104990);
  }
  return result;
}

uint64_t sub_10008DFB4()
{
  return sub_1000B7130();
}

uint64_t sub_10008E058(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_10008E070(char *a1)
{
  return sub_10008E2D0(a1);
}

uint64_t sub_10008E088(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v4 = a3;
    uint64_t v5 = a2;
    uint64_t v6 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0) {
      uint64_t v6 = a2;
    }
    uint64_t v7 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
      uint64_t v7 = 11;
    }
    uint64_t v8 = v7 | (v6 << 16);
    uint64_t v9 = sub_1000B7640();
    if (v10) {
      a2 = v8;
    }
    else {
      a2 = v9;
    }
    a1 = 15;
    a3 = v5;
    a4 = v4;
  }
  return String.subscript.getter(a1, a2, a3, a4);
}

uint64_t sub_10008E124()
{
  swift_getAssociatedTypeWitness();

  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_10008E19C()
{
  return 16;
}

__n128 sub_10008E1A8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_10008E1B4()
{
  return swift_getAtKeyPath();
}

uint64_t sub_10008E1E0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

BOOL sub_10008E240()
{
  return sub_100080E54();
}

uint64_t sub_10008E260(uint64_t a1, void *a2)
{
  return sub_10008E298(a1, a2);
}

uint64_t sub_10008E278()
{
  return sub_100081034() & 1;
}

uint64_t sub_10008E298(uint64_t a1, void *a2)
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 32))();
  if (v3) {
    *a2 = v3;
  }
  return result;
}

uint64_t sub_10008E2D0(char *a1)
{
  return sub_100083230(a1, *(void (**)(char *, uint64_t))(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_10008E2FC()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10008E334()
{
  return sub_10008E34C();
}

uint64_t sub_10008E34C()
{
  return sub_1000B7130();
}

uint64_t sub_10008E374()
{
  id v1 = *(id *)(v0 + 16);
  return sub_1000B71D0();
}

id sub_10008E3CC(void *a1, uint64_t a2)
{
  sub_1000B72C0();
  swift_allocObject();
  id v4 = a1;
  uint64_t v5 = sub_1000B72A0();
  id v6 = [self defaultManager];
  sub_100032E20(&qword_1001049D8);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 120) = 0u;
  *(_OWORD *)(v7 + 136) = 0u;
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v7 + 24) = *(_OWORD *)a2;
  *(unsigned char *)(v7 + 96) = 0;
  *(void *)(v7 + 104) = 32;
  *(unsigned char *)(v7 + 112) = 0;
  *(void *)(v7 + 16) = v5;
  *(_OWORD *)(v7 + 40) = v8;
  *(_OWORD *)(v7 + 56) = *(_OWORD *)(a2 + 32);
  *(void *)(v7 + 69) = *(void *)(a2 + 45);
  *(void *)(v7 + 80) = v6;
  *(void *)(v7 + 88) = &protocol witness table for NSFileManager;
  sub_10007ADD0();
  uint64_t v9 = (objc_class *)type metadata accessor for ICArchiveExporterObjCBridge();
  char v10 = (char *)objc_allocWithZone(v9);
  *(void *)&v10[OBJC_IVAR___ICArchiveExporter_exporter] = v7;
  v12.receiver = v10;
  v12.super_class = v9;
  return [super init];
}

uint64_t sub_10008E4E4()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10008E51C()
{
  return sub_10008B3A0();
}

uint64_t sub_10008E524(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10008E534()
{
  return swift_release();
}

uint64_t sub_10008E53C()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10008E574()
{
  return sub_10008B3A0();
}

void sub_10008E580()
{
  id v0 = [self sharedContext];
  if (v0
    && (id v1 = v0,
        id v2 = [v0 snapshotManagedObjectContext],
        v1,
        v2))
  {
    if (qword_1001036C8 != -1) {
      swift_once();
    }
    long long v3 = static ICArchiveCreator.default;
    uint64_t v5 = qword_10010E990;
    uint64_t v4 = unk_10010E998;
    long long v6 = xmmword_10010E9A0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    long long v7 = v3;
    uint64_t v8 = v5;
    uint64_t v9 = v4;
    long long v10 = v6;
    char IsAlexandriaDemoModeEnabled = ICInternalSettingsIsAlexandriaDemoModeEnabled();
    char v12 = ICInternalSettingsIsAlexandriaDemoModeEnabled();
    char v13 = ICInternalSettingsIsAlexandriaDemoModeEnabled();
    __int16 v14 = 256;
    sub_10008E3CC(v2, (uint64_t)&v7);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10008E6B8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_10007EE98(a1, a2);
}

uint64_t sub_10008E6D4()
{
  return swift_getGenericMetadata();
}

long long *ICArchiveCreator.default.unsafeMutableAddressor()
{
  if (qword_1001036C8 != -1) {
    swift_once();
  }
  return &static ICArchiveCreator.default;
}

uint64_t ICArchiveCreator.softwareIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ICArchiveCreator.softwareIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *id v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t ICArchiveCreator.softwareVersionName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ICArchiveCreator.softwareVersionName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ICArchiveCreator.softwareVersionName.modify())()
{
  return ICCloudSyncingObject.MoveAction.Types.rawValue.getter;
}

uint64_t ICArchiveCreator.softwareVersion.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ICArchiveCreator.softwareVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*ICArchiveCreator.softwareVersion.modify())()
{
  return ICCloudSyncingObject.MoveAction.Types.rawValue.getter;
}

double sub_10008E8D8()
{
  sub_10008ED10((uint64_t *)v1);
  static ICArchiveCreator.default = v1[0];
  *(_OWORD *)&qword_10010E990 = v1[1];
  double result = *(double *)&v2;
  xmmword_10010E9A0 = v2;
  return result;
}

uint64_t static ICArchiveCreator.default.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1001036C8 != -1) {
    swift_once();
  }
  uint64_t v2 = *((void *)&xmmword_10010E9A0 + 1);
  *(void *)a1 = static ICArchiveCreator.default;
  *(_OWORD *)(a1 + 8) = *(long long *)((char *)&static ICArchiveCreator.default + 8);
  *(_OWORD *)(a1 + 24) = unk_10010E998;
  *(void *)(a1 + 40) = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_10008E9BC(char a1)
{
  uint64_t result = 0xD000000000000012;
  if (a1)
  {
    if (a1 == 1) {
      return 0xD000000000000013;
    }
    else {
      return 0x6572617774666F73;
    }
  }
  return result;
}

uint64_t sub_10008EA24()
{
  return sub_10008E9BC(*v0);
}

uint64_t sub_10008EA2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10008EFE8(a1, a2);
  *a3 = result;
  return result;
}

void sub_10008EA54(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_10008EA60(uint64_t a1)
{
  unint64_t v2 = sub_10008EC60();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10008EA9C(uint64_t a1)
{
  unint64_t v2 = sub_10008EC60();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ICArchiveCreator.encode(to:)(void *a1)
{
  uint64_t v3 = sub_100032E20(&qword_1001049E0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  long long v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100047028(a1, a1[3]);
  sub_10008EC60();
  sub_1000B7EB0();
  v8[15] = 0;
  sub_1000B7CC0();
  if (!v1)
  {
    v8[14] = 1;
    sub_1000B7CC0();
    v8[13] = 2;
    sub_1000B7CC0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_10008EC60()
{
  unint64_t result = qword_1001049E8;
  if (!qword_1001049E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001049E8);
  }
  return result;
}

double ICArchiveCreator.init(from:)@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_10008F150(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_10008ECF8(void *a1)
{
  return ICArchiveCreator.encode(to:)(a1);
}

uint64_t sub_10008ED10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = self;
  id v3 = [v2 mainBundle];
  id v4 = [v3 bundleIdentifier];

  if (v4)
  {
    uint64_t v5 = sub_1000B75B0();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  id v8 = [v2 mainBundle];
  id v9 = [v8 infoDictionary];

  if (!v9)
  {
    long long v28 = 0u;
    long long v29 = 0u;
    goto LABEL_16;
  }
  uint64_t v10 = sub_1000B7510();

  if (!*(void *)(v10 + 16) || (unint64_t v11 = sub_10006A250(0xD00000000000001ALL, 0x80000001000C8000), (v12 & 1) == 0))
  {
    long long v28 = 0u;
    long long v29 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  sub_100032E64(*(void *)(v10 + 56) + 32 * v11, (uint64_t)&v28);
  swift_bridgeObjectRelease();
  if (!*((void *)&v29 + 1))
  {
LABEL_16:
    sub_100032DC0((uint64_t)&v28);
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    goto LABEL_17;
  }
  int v13 = swift_dynamicCast();
  if (v13) {
    uint64_t v14 = v26;
  }
  else {
    uint64_t v14 = 0;
  }
  if (v13) {
    uint64_t v15 = v27;
  }
  else {
    uint64_t v15 = 0;
  }
LABEL_17:
  id v16 = [v2 mainBundle];
  id v17 = [v16 infoDictionary];

  if (!v17)
  {
    long long v28 = 0u;
    long long v29 = 0u;
    goto LABEL_27;
  }
  uint64_t v18 = sub_1000B7510();

  if (kCFBundleVersionKey)
  {
    uint64_t v19 = sub_1000B75B0();
    if (*(void *)(v18 + 16) && (unint64_t v21 = sub_10006A250(v19, v20), (v22 & 1) != 0))
    {
      sub_100032E64(*(void *)(v18 + 56) + 32 * v21, (uint64_t)&v28);
    }
    else
    {
      long long v28 = 0u;
      long long v29 = 0u;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*((void *)&v29 + 1))
    {
      uint64_t result = swift_dynamicCast();
      uint64_t v24 = v26;
      uint64_t v25 = v27;
      if (!result)
      {
        uint64_t v24 = 0;
        uint64_t v25 = 0;
      }
      goto LABEL_28;
    }
LABEL_27:
    uint64_t result = sub_100032DC0((uint64_t)&v28);
    uint64_t v24 = 0;
    uint64_t v25 = 0;
LABEL_28:
    *a1 = v5;
    a1[1] = v7;
    a1[2] = v14;
    a1[3] = v15;
    a1[4] = v24;
    a1[5] = v25;
    return result;
  }
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_10008EFE8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x80000001000C9100 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001000C9120 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6572617774666F73 && a2 == 0xEF6E6F6973726556)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_1000B7DC0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_10008F150@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_100032E20(&qword_100104A08);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = self;
  id v9 = [v8 mainBundle];
  id v10 = [v9 bundleIdentifier];

  uint64_t v38 = v5;
  if (v10)
  {
    sub_1000B75B0();
    uint64_t v43 = v11;
  }
  else
  {
    uint64_t v43 = 0;
  }
  uint64_t v39 = v4;
  id v12 = [v8 mainBundle];
  id v13 = [v12 infoDictionary];

  BOOL v37 = a2;
  if (v13)
  {
    uint64_t v14 = sub_1000B7510();

    if (*(void *)(v14 + 16) && (unint64_t v15 = sub_10006A250(0xD00000000000001ALL, 0x80000001000C8000), (v16 & 1) != 0))
    {
      sub_100032E64(*(void *)(v14 + 56) + 32 * v15, (uint64_t)&v41);
      swift_bridgeObjectRelease();
      if (*((void *)&v42 + 1))
      {
        swift_dynamicCast();
        goto LABEL_12;
      }
    }
    else
    {
      long long v41 = 0u;
      long long v42 = 0u;
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    long long v41 = 0u;
    long long v42 = 0u;
  }
  sub_100032DC0((uint64_t)&v41);
LABEL_12:
  id v17 = [v8 mainBundle];
  id v18 = [v17 infoDictionary];

  if (v18)
  {
    uint64_t v19 = sub_1000B7510();

    if (!kCFBundleVersionKey)
    {
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      __break(1u);
      return result;
    }
    uint64_t v20 = sub_1000B75B0();
    if (*(void *)(v19 + 16) && (unint64_t v22 = sub_10006A250(v20, v21), (v23 & 1) != 0))
    {
      sub_100032E64(*(void *)(v19 + 56) + 32 * v22, (uint64_t)&v41);
    }
    else
    {
      long long v41 = 0u;
      long long v42 = 0u;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*((void *)&v42 + 1))
    {
      swift_dynamicCast();
      goto LABEL_22;
    }
  }
  else
  {
    long long v41 = 0u;
    long long v42 = 0u;
  }
  sub_100032DC0((uint64_t)&v41);
LABEL_22:
  uint64_t v24 = v39;
  sub_100047028(a1, a1[3]);
  sub_10008EC60();
  uint64_t v25 = v40;
  sub_1000B7EA0();
  if (v25)
  {
    sub_100037F98((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    LOBYTE(v41) = 0;
    uint64_t v26 = sub_1000B7C10();
    uint64_t v28 = v27;
    uint64_t v40 = v26;
    swift_bridgeObjectRelease();
    LOBYTE(v41) = 1;
    uint64_t v29 = sub_1000B7C10();
    uint64_t v31 = v30;
    uint64_t v43 = v29;
    swift_bridgeObjectRelease();
    LOBYTE(v41) = 2;
    uint64_t v32 = sub_1000B7C10();
    uint64_t v34 = v33;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v7, v24);
    uint64_t result = sub_100037F98((uint64_t)a1);
    uint64_t v36 = v37;
    uint64_t *v37 = v40;
    v36[1] = v28;
    _OWORD v36[2] = v43;
    v36[3] = v31;
    v36[4] = v32;
    v36[5] = v34;
  }
  return result;
}

uint64_t destroy for ICArchiveCreator()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ICArchiveCreator(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ICArchiveCreator(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for ICArchiveCreator(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

void *assignWithTake for ICArchiveCreator(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ICArchiveCreator(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ICArchiveCreator(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICArchiveCreator()
{
  return &type metadata for ICArchiveCreator;
}

unsigned char *storeEnumTagSinglePayload for ICArchiveCreator.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10008F97CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICArchiveCreator.CodingKeys()
{
  return &type metadata for ICArchiveCreator.CodingKeys;
}

unint64_t sub_10008F9B8()
{
  unint64_t result = qword_1001049F0;
  if (!qword_1001049F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001049F0);
  }
  return result;
}

unint64_t sub_10008FA10()
{
  unint64_t result = qword_1001049F8;
  if (!qword_1001049F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001049F8);
  }
  return result;
}

unint64_t sub_10008FA68()
{
  unint64_t result = qword_100104A00;
  if (!qword_100104A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104A00);
  }
  return result;
}

void sub_10008FABC(void *a1)
{
  [a1 setIsPasswordProtected:1];
  [a1 setCryptoIterationCount:*v1];
  Class isa = sub_1000B6F20().super.isa;
  [a1 setCryptoSalt:isa];

  Class v4 = sub_1000B6F20().super.isa;
  [a1 setCryptoInitializationVector:v4];

  Class v5 = sub_1000B6F20().super.isa;
  [a1 setCryptoTag:v5];

  Class v6 = sub_1000B6F20().super.isa;
  [a1 setCryptoWrappedKey:v6];

  id v7 = sub_1000B7580();
  [a1 setPasswordHint:v7];
}

unint64_t sub_10008FBD4(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
      unint64_t result = 1953259891;
      break;
    case 2:
      return result;
    case 3:
      unint64_t result = 6775156;
      break;
    case 4:
      unint64_t result = 0x4B64657070617277;
      break;
    case 5:
      unint64_t result = 0x64726F7773736170;
      break;
    case 6:
      unint64_t result = 1635017060;
      break;
    default:
      unint64_t result = 0x6F69746172657469;
      break;
  }
  return result;
}

uint64_t sub_10008FCC0(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100032E20(&qword_100104A20);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100047028(a1, a1[3]);
  sub_100090EAC();
  sub_1000B7EB0();
  LOBYTE(v12) = 0;
  sub_1000B7D60();
  if (!v2)
  {
    long long v12 = *(_OWORD *)(v3 + 8);
    char v11 = 1;
    sub_10005A1A8();
    sub_1000B7D50();
    long long v12 = *(_OWORD *)(v3 + 24);
    char v11 = 2;
    sub_1000B7D50();
    long long v12 = *(_OWORD *)(v3 + 40);
    char v11 = 3;
    sub_1000B7D50();
    long long v12 = *(_OWORD *)(v3 + 56);
    char v11 = 4;
    sub_1000B7D50();
    LOBYTE(v12) = 5;
    sub_1000B7D10();
    long long v12 = *(_OWORD *)(v3 + 88);
    char v11 = 6;
    sub_1000B7D50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_10008FF54()
{
  return sub_10008FBD4(*v0);
}

uint64_t sub_10008FF5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000905B8(a1, a2);
  *a3 = result;
  return result;
}

void sub_10008FF84(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_10008FF90(uint64_t a1)
{
  unint64_t v2 = sub_100090EAC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10008FFCC(uint64_t a1)
{
  unint64_t v2 = sub_100090EAC();

  return CodingKey.debugDescription.getter(a1, v2);
}

__n128 sub_100090008@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100090870(a1, (uint64_t *)v7);
  if (!v2)
  {
    long long v5 = v7[5];
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_OWORD *)(a2 + 80) = v5;
    *(void *)(a2 + 96) = v8;
    long long v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
    __n128 result = (__n128)v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t sub_100090068(void *a1)
{
  return sub_10008FCC0(a1);
}

void sub_100090080(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  if ([a1 isPasswordProtected])
  {
    uint64_t v36 = a3;
    id v34 = [a1 cryptoIterationCount];
    id v8 = [a1 cryptoSalt];
    if (v8)
    {
      id v9 = v8;
      uint64_t v10 = sub_1000B6F30();
      unint64_t v32 = v11;
      uint64_t v33 = v10;
    }
    else
    {
      unint64_t v32 = 0xC000000000000000;
      uint64_t v33 = 0;
    }
    id v12 = [a1 cryptoInitializationVector];
    uint64_t v35 = a2;
    if (v12)
    {
      id v13 = v12;
      uint64_t v14 = sub_1000B6F30();
      unint64_t v16 = v15;
    }
    else
    {
      uint64_t v14 = 0;
      unint64_t v16 = 0xC000000000000000;
    }
    id v17 = [a1 cryptoTag];
    if (v17)
    {
      id v18 = v17;
      uint64_t v19 = sub_1000B6F30();
      unint64_t v21 = v20;
    }
    else
    {
      uint64_t v19 = 0;
      unint64_t v21 = 0xC000000000000000;
    }
    id v22 = [a1 cryptoWrappedKey];
    if (v22)
    {
      char v23 = v22;
      uint64_t v24 = sub_1000B6F30();
      unint64_t v26 = v25;
    }
    else
    {
      uint64_t v24 = 0;
      unint64_t v26 = 0xC000000000000000;
    }
    id v27 = [a1 passwordHint];
    if (v27)
    {
      uint64_t v28 = v27;
      uint64_t v29 = sub_1000B75B0();
      unint64_t v31 = v30;
    }
    else
    {
      uint64_t v29 = 0;
      unint64_t v31 = 0xE000000000000000;
    }
    *a4 = v34;
    a4[1] = v33;
    a4[2] = v32;
    a4[3] = v14;
    a4[4] = v16;
    a4[5] = v19;
    a4[6] = v21;
    a4[7] = v24;
    a4[8] = v26;
    a4[9] = v29;
    a4[10] = v31;
    a4[11] = v35;
    a4[12] = v36;
  }
  else
  {
    __break(1u);
  }
}

uint64_t _s13EncryptedDataVwxx(void *a1)
{
  sub_1000452E0(a1[1], a1[2]);
  sub_1000452E0(a1[3], a1[4]);
  sub_1000452E0(a1[5], a1[6]);
  sub_1000452E0(a1[7], a1[8]);
  swift_bridgeObjectRelease();
  uint64_t v2 = a1[11];
  unint64_t v3 = a1[12];

  return sub_1000452E0(v2, v3);
}

void *_s13EncryptedDataVwcp(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  unint64_t v5 = a2[2];
  sub_10004E998(v4, v5);
  a1[1] = v4;
  a1[2] = v5;
  uint64_t v6 = a2[3];
  unint64_t v7 = a2[4];
  sub_10004E998(v6, v7);
  a1[3] = v6;
  a1[4] = v7;
  uint64_t v8 = a2[5];
  unint64_t v9 = a2[6];
  sub_10004E998(v8, v9);
  a1[5] = v8;
  a1[6] = v9;
  uint64_t v10 = a2[7];
  unint64_t v11 = a2[8];
  sub_10004E998(v10, v11);
  a1[7] = v10;
  a1[8] = v11;
  uint64_t v12 = a2[10];
  a1[9] = a2[9];
  a1[10] = v12;
  uint64_t v14 = a2[11];
  unint64_t v13 = a2[12];
  swift_bridgeObjectRetain();
  sub_10004E998(v14, v13);
  a1[11] = v14;
  a1[12] = v13;
  return a1;
}

void *_s13EncryptedDataVwca(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = a2[1];
  unint64_t v5 = a2[2];
  sub_10004E998(v4, v5);
  uint64_t v6 = a1[1];
  unint64_t v7 = a1[2];
  a1[1] = v4;
  a1[2] = v5;
  sub_1000452E0(v6, v7);
  uint64_t v8 = a2[3];
  unint64_t v9 = a2[4];
  sub_10004E998(v8, v9);
  uint64_t v10 = a1[3];
  unint64_t v11 = a1[4];
  a1[3] = v8;
  a1[4] = v9;
  sub_1000452E0(v10, v11);
  uint64_t v12 = a2[5];
  unint64_t v13 = a2[6];
  sub_10004E998(v12, v13);
  uint64_t v14 = a1[5];
  unint64_t v15 = a1[6];
  a1[5] = v12;
  a1[6] = v13;
  sub_1000452E0(v14, v15);
  uint64_t v16 = a2[7];
  unint64_t v17 = a2[8];
  sub_10004E998(v16, v17);
  uint64_t v18 = a1[7];
  unint64_t v19 = a1[8];
  a1[7] = v16;
  a1[8] = v17;
  sub_1000452E0(v18, v19);
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = a2[11];
  unint64_t v20 = a2[12];
  sub_10004E998(v21, v20);
  uint64_t v22 = a1[11];
  unint64_t v23 = a1[12];
  a1[11] = v21;
  a1[12] = v20;
  sub_1000452E0(v22, v23);
  return a1;
}

__n128 _s13EncryptedDataVwtk(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t _s13EncryptedDataVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  unint64_t v5 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1000452E0(v4, v5);
  uint64_t v6 = *(void *)(a1 + 24);
  unint64_t v7 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  sub_1000452E0(v6, v7);
  uint64_t v8 = *(void *)(a1 + 40);
  unint64_t v9 = *(void *)(a1 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  sub_1000452E0(v8, v9);
  uint64_t v10 = *(void *)(a1 + 56);
  unint64_t v11 = *(void *)(a1 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  sub_1000452E0(v10, v11);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a1 + 88);
  unint64_t v13 = *(void *)(a1 + 96);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  sub_1000452E0(v12, v13);
  return a1;
}

uint64_t _s13EncryptedDataVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 104)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 80);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s13EncryptedDataVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 80) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s13EncryptedDataVMa()
{
  return &_s13EncryptedDataVN;
}

uint64_t sub_1000905B8(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6F69746172657469 && a2 == 0xEE00746E756F436ELL;
  if (v3 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1953259891 && a2 == 0xE400000000000000 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001000C9140 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 6775156 && a2 == 0xE300000000000000 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4B64657070617277 && a2 == 0xEA00000000007965 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x64726F7773736170 && a2 == 0xEC000000746E6948 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_1000B7DC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_100090870@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_100032E20(&qword_100104A10);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100047028(a1, a1[3]);
  sub_100090EAC();
  sub_1000B7EA0();
  if (v2) {
    return sub_100037F98((uint64_t)a1);
  }
  LOBYTE(v50) = 0;
  uint64_t v9 = sub_1000B7CB0();
  char v52 = 1;
  sub_10005A04C();
  sub_1000B7CA0();
  char v52 = 2;
  unint64_t v45 = v51;
  uint64_t v46 = v50;
  sub_10004E998(v50, v51);
  sub_1000B7CA0();
  char v52 = 3;
  unint64_t v48 = v51;
  uint64_t v49 = v50;
  sub_10004E998(v50, v51);
  sub_1000B7CA0();
  uint64_t v43 = v9;
  uint64_t v10 = v50;
  char v52 = 4;
  unint64_t v44 = v51;
  sub_10004E998(v50, v51);
  sub_1000B7CA0();
  uint64_t v47 = v10;
  unint64_t v11 = v44;
  uint64_t v12 = v50;
  LOBYTE(v50) = 5;
  unint64_t v41 = v51;
  uint64_t v42 = v12;
  sub_10004E998(v12, v51);
  uint64_t v39 = sub_1000B7C60();
  uint64_t v40 = v13;
  char v52 = 6;
  swift_bridgeObjectRetain();
  sub_1000B7CA0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v15 = v50;
  unint64_t v14 = v51;
  unint64_t v37 = v51;
  uint64_t v38 = v50;
  sub_10004E998(v46, v45);
  sub_10004E998(v49, v48);
  sub_10004E998(v47, v11);
  unint64_t v16 = v41;
  uint64_t v17 = v42;
  sub_10004E998(v42, v41);
  swift_bridgeObjectRetain();
  sub_10004E998(v15, v14);
  swift_bridgeObjectRelease();
  uint64_t v18 = v17;
  unint64_t v19 = v16;
  sub_1000452E0(v18, v16);
  uint64_t v20 = v47;
  sub_1000452E0(v47, v11);
  unint64_t v21 = v48;
  uint64_t v22 = v49;
  sub_1000452E0(v49, v48);
  unint64_t v23 = v45;
  uint64_t v24 = v46;
  sub_1000452E0(v46, v45);
  sub_100037F98((uint64_t)a1);
  sub_1000452E0(v24, v23);
  sub_1000452E0(v22, v21);
  uint64_t v25 = v20;
  unint64_t v26 = v44;
  sub_1000452E0(v20, v44);
  uint64_t v27 = v42;
  unint64_t v28 = v19;
  sub_1000452E0(v42, v19);
  uint64_t v29 = v40;
  swift_bridgeObjectRelease();
  unint64_t v31 = v37;
  uint64_t v30 = v38;
  uint64_t result = sub_1000452E0(v38, v37);
  uint64_t v33 = v46;
  *a2 = v43;
  a2[1] = v33;
  uint64_t v34 = v49;
  a2[2] = v45;
  a2[3] = v34;
  a2[4] = v48;
  a2[5] = v25;
  a2[6] = v26;
  a2[7] = v27;
  uint64_t v35 = v39;
  a2[8] = v28;
  a2[9] = v35;
  a2[10] = v29;
  a2[11] = v30;
  a2[12] = v31;
  return result;
}

unint64_t sub_100090EAC()
{
  unint64_t result = qword_100104A18;
  if (!qword_100104A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104A18);
  }
  return result;
}

unsigned char *_s13EncryptedDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100090FCCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *_s13EncryptedDataV10CodingKeysOMa()
{
  return &_s13EncryptedDataV10CodingKeysON;
}

unint64_t sub_100091008()
{
  unint64_t result = qword_100104A28;
  if (!qword_100104A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104A28);
  }
  return result;
}

unint64_t sub_100091060()
{
  unint64_t result = qword_100104A30;
  if (!qword_100104A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104A30);
  }
  return result;
}

unint64_t sub_1000910B8()
{
  unint64_t result = qword_100104A38;
  if (!qword_100104A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104A38);
  }
  return result;
}

void *sub_10009110C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, char *a7, double a8)
{
  unint64_t v101 = a7;
  uint64_t v100 = a6;
  int v97 = a5;
  uint64_t v94 = a4;
  uint64_t v99 = a3;
  uint64_t v98 = a2;
  uint64_t v10 = _s14descr1000EDEE9C14AudioRecordingV8FragmentVMa(0);
  uint64_t v92 = *(void *)(v10 - 8);
  __chkstk_darwin(v10 - 8);
  uint64_t v109 = (uint64_t)&v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100032E20(&qword_100103BB0);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v91 = (char *)&v91 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v95 = (char *)&v91 - v16;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v91 - v17;
  uint64_t v19 = sub_1000B7030();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  os_log_type_t v107 = (char *)&v91 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v91 - v23;
  id v25 = [a1 document];
  sub_1000B7020();
  id v26 = objc_allocWithZone((Class)ICTTAudioRecording);
  Class isa = sub_1000B7000().super.isa;
  unint64_t v28 = v26;
  uint64_t v29 = v19;
  id v104 = [v28 initWithDocument:v25 identity:isa];

  uint64_t v102 = *(void (**)(char *, uint64_t))(v20 + 8);
  uint64_t v103 = v20 + 8;
  v102(v24, v19);
  os_log_type_t v93 = (uint64_t *)a1;
  id v30 = [a1 document];
  id v31 = [v30 replica];

  uint64_t v105 = v19;
  if (v31)
  {
    sub_1000B7010();

    unint64_t v32 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
    v32(v18, v24, v19);
    unint64_t v96 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
    v96(v18, 0, 1, v19);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) != 1)
    {
      uint64_t v33 = v107;
      v32(v107, v18, v29);
      uint64_t v34 = v108;
      uint64_t v35 = v106;
      uint64_t v36 = v100;
      goto LABEL_6;
    }
  }
  else
  {
    unint64_t v96 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
    v96(v18, 1, 1, v19);
  }
  uint64_t v33 = v107;
  uint64_t v34 = v108;
  uint64_t v36 = v100;
  sub_1000B7020();
  sub_100094428((uint64_t)v18);
  uint64_t v35 = v106;
LABEL_6:
  sub_10004EA80(v34, (uint64_t)v111, &qword_100104A40);
  sub_10004EA80((uint64_t)v111, (uint64_t)&v112, &qword_100104A40);
  uint64_t v37 = v113;
  if (v113)
  {
    uint64_t v38 = v112;
    uint64_t v39 = v114;
    unint64_t v40 = sub_100031F70((uint64_t)_swiftEmptyArrayStorage);
    uint64_t v41 = sub_10004CDDC(v40);
    uint64_t v90 = v39;
    uint64_t v42 = v101;
    uint64_t v43 = (objc_class *)sub_100098CCC(v41, v98, v99, v97 & 0x101, v36, v101, a8, v38, v37, v90);
    if (v35)
    {
      unint64_t v45 = v104;
      uint64_t v44 = v105;
LABEL_19:
      swift_release();
      v102(v33, v44);

      swift_bridgeObjectRelease();
      return v45;
    }
    uint64_t v46 = v43;
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v47 = v95;
    uint64_t v48 = v105;
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v95, v33, v105);
    v96(v47, 0, 1, v48);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v47, 1, v48) == 1)
    {
      Class v49 = 0;
    }
    else
    {
      uint64_t v50 = v47;
      Class v49 = sub_1000B7000().super.isa;
      v102(v50, v48);
    }
    unint64_t v51 = v104;
    id v52 = [objc_allocWithZone((Class)ICTTMergeableAttributedString) initWithReplicaID:v49];

    [v51 setTopLineSummary:v52];
    id v53 = [v51 topLineSummary];
    if (v53)
    {
      uint64_t v54 = v53;
      v55.super.Class isa = v46;
      sub_1000B79A0(v55, 0);
    }
    uint64_t v34 = v108;
  }
  else
  {
    uint64_t v42 = v101;
  }
  sub_10004EA80(v34 + 24, (uint64_t)v110, &qword_100104A40);
  sub_10004EA80((uint64_t)v110, (uint64_t)&v115, &qword_100104A40);
  uint64_t v56 = v116;
  if (v116)
  {
    uint64_t v57 = v115;
    uint64_t v58 = v42;
    uint64_t v59 = v117;
    unint64_t v60 = sub_100031F70((uint64_t)_swiftEmptyArrayStorage);
    uint64_t v61 = sub_10004CDDC(v60);
    uint64_t v62 = (objc_class *)sub_100098CCC(v61, v98, v99, v97 & 0x101, v36, v58, a8, v57, v56, v59);
    if (v35)
    {
      unint64_t v45 = v104;
      uint64_t v44 = v105;
      uint64_t v33 = v107;
      goto LABEL_19;
    }
    uint64_t v64 = v62;
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v65 = v91;
    uint64_t v33 = v107;
    uint64_t v66 = v105;
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v91, v107, v105);
    v96(v65, 0, 1, v66);
    int v67 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v65, 1, v66);
    uint64_t v63 = v109;
    uint64_t v68 = v104;
    if (v67 == 1)
    {
      Class v69 = 0;
    }
    else
    {
      NSString v70 = v65;
      Class v69 = sub_1000B7000().super.isa;
      v102(v70, v66);
    }
    id v71 = [objc_allocWithZone((Class)ICTTMergeableAttributedString) initWithReplicaID:v69];

    [v68 setSummary:v71];
    id v72 = [v68 summary];
    if (v72)
    {
      uint64_t v73 = v72;
      v74.super.Class isa = v64;
      sub_1000B79A0(v74, 0);
    }
    uint64_t v34 = v108;
    if (*(unsigned char *)(v108 + 56)) {
      id v75 = 0;
    }
    else {
      id v75 = [objc_allocWithZone((Class)NSNumber) initWithInteger:*(void *)(v108 + 48)];
    }
    [v68 setSummaryVersion:v75];
  }
  else
  {
    uint64_t v63 = v109;
  }
  if (*(void *)(v34 + 64)) {
    uint64_t v76 = *(char **)(v34 + 64);
  }
  else {
    uint64_t v76 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v77 = *((void *)v76 + 2);
  if (v77)
  {
    uint64_t v106 = v35;
    unint64_t v78 = (*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80);
    unint64_t v101 = v76;
    uint64_t v79 = (uint64_t)&v76[v78];
    uint64_t v80 = *(void *)(v92 + 72);
    swift_bridgeObjectRetain();
    uint64_t v81 = v93;
    uint64_t v82 = v94;
    Swift::String v83 = v104;
    do
    {
      sub_100094488(v79, v63, _s14descr1000EDEE9C14AudioRecordingV8FragmentVMa);
      uint64_t v84 = sub_1000937C0(v81, v82);
      id v85 = [v83 fragments];
      [v85 addObject:v84];

      uint64_t v63 = v109;
      sub_1000944F0(v109, _s14descr1000EDEE9C14AudioRecordingV8FragmentVMa);
      v79 += v80;
      --v77;
    }
    while (v77);
    swift_bridgeObjectRelease();
    uint64_t v33 = v107;
    uint64_t v34 = v108;
    unint64_t v45 = v83;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    unint64_t v45 = v104;
  }
  int v86 = *(unsigned __int8 *)(v34 + 72);
  if (v86 == 2) {
    id v87 = 0;
  }
  else {
    id v87 = [objc_allocWithZone((Class)NSNumber) initWithBool:v86 & 1];
  }
  uint64_t v88 = v105;
  [v45 setCallRecording:v87];

  v102(v33, v88);
  return v45;
}

uint64_t sub_100091AD4(char a1)
{
  return *(void *)&aToplinessummar[8 * a1];
}

uint64_t sub_100091AF4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100032E20(&qword_100104BF8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100047028(a1, a1[3]);
  sub_1000966DC();
  sub_1000B7EB0();
  sub_10004EA80(v3, (uint64_t)v15, &qword_100104A40);
  sub_10004EA80((uint64_t)v15, (uint64_t)v12, &qword_100104A40);
  char v11 = 0;
  sub_100051BB0();
  sub_1000B7D00();
  if (!v2)
  {
    sub_10004EA80(v3 + 24, (uint64_t)v14, &qword_100104A40);
    sub_10004EA80((uint64_t)v14, (uint64_t)v12, &qword_100104A40);
    char v11 = 1;
    sub_1000B7D00();
    v12[0] = 2;
    sub_1000B7CF0();
    sub_10004EA80(v3 + 64, (uint64_t)v13, &qword_100104C00);
    sub_10004EA80((uint64_t)v13, (uint64_t)v12, &qword_100104C00);
    char v11 = 3;
    sub_100032E20(&qword_100104BE0);
    sub_100096730(&qword_100104C08, &qword_100104C10);
    sub_1000B7D00();
    v12[0] = 4;
    sub_1000B7CD0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100091DBC()
{
  return sub_100091AD4(*v0);
}

uint64_t sub_100091DC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100095FD0(a1, a2);
  *a3 = result;
  return result;
}

void sub_100091DEC(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_100091DF8(uint64_t a1)
{
  unint64_t v2 = sub_1000966DC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100091E34(uint64_t a1)
{
  unint64_t v2 = sub_1000966DC();

  return CodingKey.debugDescription.getter(a1, v2);
}

__n128 sub_100091E70@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100096220(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v7[0];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 57) = *(_OWORD *)((char *)v7 + 9);
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_100091EBC(void *a1)
{
  return sub_100091AF4(a1);
}

void sub_100091F00(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = _s14descr1000EDEE9C14AudioRecordingV17TranscriptSegmentVMa(0);
  uint64_t v75 = *(void *)(v4 - 8);
  uint64_t v76 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (uint64_t *)((char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_100032E20(&qword_100103A20);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  NSAttributedString v74 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  char v11 = (char *)&v67 - v10;
  uint64_t v12 = sub_1000B7030();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (int *)_s14descr1000EDEE9C14AudioRecordingV8FragmentVMa(0);
  *a2 = 0;
  a2[1] = 0;
  uint64_t v17 = (uint64_t)a2 + v16[5];
  uint64_t v18 = sub_1000B6FD0();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
  uint64_t v21 = 1;
  unint64_t v73 = v17;
  unint64_t v78 = v20;
  uint64_t v79 = v18;
  uint64_t v77 = v19 + 56;
  ((void (*)(uint64_t, uint64_t, uint64_t))v20)(v17, 1, 1);
  uint64_t v67 = v16[6];
  *(uint64_t *)((char *)a2 + v67) = 0;
  uint64_t v22 = (char *)a2 + v16[7];
  *(void *)uint64_t v22 = 0;
  uint64_t v68 = v22;
  v22[8] = 1;
  id v23 = [a1 identity];
  sub_1000B7010();

  uint64_t v24 = sub_1000B6FF0();
  uint64_t v26 = v25;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  swift_bridgeObjectRelease();
  *a2 = v24;
  a2[1] = v26;
  id v27 = [a1 createdDate];
  if (v27)
  {
    unint64_t v28 = v27;
    sub_1000B6FA0();

    uint64_t v21 = 0;
  }
  v78(v11, v21, 1, v79);
  sub_10004E390((uint64_t)v11, v73);
  id v29 = [a1 transcript];
  id v30 = [v29 allObjects];

  sub_1000B7290();
  unint64_t v31 = sub_1000B76E0();

  if (v31 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_1000B7BA0();
    swift_bridgeObjectRelease();
    Class v69 = a2;
    id v70 = a1;
    if (v32) {
      goto LABEL_5;
    }
LABEL_27:
    swift_bridgeObjectRelease();
    uint64_t v34 = _swiftEmptyArrayStorage;
    goto LABEL_28;
  }
  uint64_t v32 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
  Class v69 = a2;
  id v70 = a1;
  if (!v32) {
    goto LABEL_27;
  }
LABEL_5:
  uint64_t v80 = _swiftEmptyArrayStorage;
  sub_1000439A4(0, v32 & ~(v32 >> 63), 0);
  if (v32 < 0)
  {
    __break(1u);
    return;
  }
  uint64_t v33 = 0;
  uint64_t v34 = v80;
  unint64_t v71 = v31 & 0xC000000000000001;
  uint64_t v72 = v32;
  unint64_t v73 = v31;
  do
  {
    if (v71) {
      id v35 = (id)sub_1000B7AC0();
    }
    else {
      id v35 = *(id *)(v31 + 8 * v33 + 32);
    }
    uint64_t v36 = v35;
    uint64_t v37 = v76;
    uint64_t v38 = (uint64_t)v6 + *(int *)(v76 + 20);
    v78((char *)v38, 1, 1, v79);
    uint64_t v39 = (char *)v6 + *(int *)(v37 + 24);
    *(void *)uint64_t v39 = 0;
    v39[8] = 1;
    unint64_t v40 = (uint64_t *)((char *)v6 + *(int *)(v37 + 28));
    *unint64_t v40 = 0;
    v40[1] = 0;
    id v41 = [v36 text];
    if (v41)
    {
      uint64_t v42 = v41;
      uint64_t v43 = sub_1000B75B0();
      uint64_t v45 = v44;
    }
    else
    {
      uint64_t v43 = 0;
      uint64_t v45 = 0;
    }
    uint64_t *v6 = v43;
    v6[1] = v45;
    id v46 = [v36 timestamp];
    if (v46)
    {
      uint64_t v47 = v46;
      [v46 doubleValue];
      uint64_t v48 = (uint64_t)v74;
      sub_1000B6F80();
      v78((char *)v48, 0, 1, v79);
    }
    else
    {
      uint64_t v48 = (uint64_t)v74;
      v78(v74, 1, 1, v79);
    }
    sub_10004E390(v48, v38);
    id v49 = [v36 duration];
    uint64_t v50 = v49;
    if (v49)
    {
      [v49 doubleValue];
      uint64_t v52 = v51;
    }
    else
    {
      uint64_t v52 = 0;
    }
    *(void *)uint64_t v39 = v52;
    v39[8] = v50 == 0;
    id v53 = [v36 speaker];
    if (v53)
    {
      uint64_t v54 = v53;
      uint64_t v55 = sub_1000B75B0();
      uint64_t v57 = v56;
    }
    else
    {

      uint64_t v55 = 0;
      uint64_t v57 = 0;
    }
    swift_bridgeObjectRelease();
    *unint64_t v40 = v55;
    v40[1] = v57;
    uint64_t v80 = v34;
    unint64_t v59 = v34[2];
    unint64_t v58 = v34[3];
    if (v59 >= v58 >> 1)
    {
      sub_1000439A4(v58 > 1, v59 + 1, 1);
      uint64_t v34 = v80;
    }
    ++v33;
    void v34[2] = v59 + 1;
    sub_1000943C0((uint64_t)v6, (uint64_t)v34+ ((*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80))+ *(void *)(v75 + 72) * v59, _s14descr1000EDEE9C14AudioRecordingV17TranscriptSegmentVMa);
    unint64_t v31 = v73;
  }
  while (v72 != v33);
  swift_bridgeObjectRelease();
LABEL_28:
  unint64_t v60 = v69;
  uint64_t v61 = v67;
  swift_bridgeObjectRelease();
  *(uint64_t *)((char *)v60 + v61) = (uint64_t)v34;
  id v62 = v70;
  id v63 = [v70 transcriptVersion];
  uint64_t v64 = v63;
  if (v63)
  {
    id v65 = [v63 integerValue];
  }
  else
  {
    id v65 = 0;
  }

  uint64_t v66 = v68;
  *uint64_t v68 = v65;
  *((unsigned char *)v66 + 8) = v64 == 0;
}

unint64_t sub_1000925B0(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x4164657461657263;
      break;
    case 2:
      unint64_t result = 0x697263736E617274;
      break;
    case 3:
      return result;
    default:
      unint64_t result = 0x696669746E656469;
      break;
  }
  return result;
}

uint64_t sub_100092658(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100032E20(&qword_100104BB8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100047028(a1, a1[3]);
  sub_100095EE8();
  sub_1000B7EB0();
  char v14 = 0;
  sub_1000B7CC0();
  if (!v2)
  {
    uint64_t v9 = _s14descr1000EDEE9C14AudioRecordingV8FragmentVMa(0);
    char v13 = 1;
    sub_1000B6FD0();
    sub_100095EA0(&qword_100103D40, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_1000B7D00();
    uint64_t v12 = *(void *)(v3 + *(int *)(v9 + 24));
    unsigned char v11[15] = 2;
    sub_100032E20(&qword_100104BA0);
    sub_100095F3C(&qword_100104BC0, &qword_100104BC8);
    sub_1000B7D00();
    v11[14] = 3;
    sub_1000B7CF0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1000928D0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v3 = sub_100032E20(&qword_100103A20);
  __chkstk_darwin(v3 - 8);
  uint64_t v37 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_100032E20(&qword_100104B90);
  uint64_t v36 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = _s14descr1000EDEE9C14AudioRecordingV8FragmentVMa(0);
  uint64_t v8 = (int *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)((char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t *v10 = 0;
  v10[1] = 0;
  char v11 = (char *)v10 + v8[7];
  uint64_t v12 = sub_1000B6FD0();
  char v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
  uint64_t v35 = (uint64_t)v11;
  v13(v11, 1, 1, v12);
  uint64_t v14 = v8[8];
  *(uint64_t *)((char *)v10 + v14) = 0;
  uint64_t v15 = (char *)v10 + v8[9];
  *(void *)uint64_t v15 = 0;
  _WORD v15[8] = 1;
  sub_100047028(a1, a1[3]);
  sub_100095EE8();
  uint64_t v38 = v6;
  uint64_t v16 = v40;
  uint64_t v17 = (uint64_t)a1;
  sub_1000B7EA0();
  if (!v16)
  {
    uint64_t v33 = (uint64_t *)v15;
    uint64_t v40 = v14;
    uint64_t v19 = (uint64_t)v37;
    uint64_t v18 = v38;
    uint64_t v21 = v35;
    uint64_t v20 = v36;
    char v45 = 0;
    uint64_t v22 = sub_1000B7C10();
    uint64_t v32 = a1;
    uint64_t *v10 = v22;
    v10[1] = v23;
    char v44 = 1;
    sub_100095EA0(&qword_100103DB8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_1000B7C50();
    sub_10004E390(v19, v21);
    sub_100032E20(&qword_100104BA0);
    char v43 = 2;
    sub_100095F3C(&qword_100104BA8, &qword_100104BB0);
    sub_1000B7C50();
    uint64_t v25 = v40;
    uint64_t v26 = v41;
    swift_bridgeObjectRelease();
    *(uint64_t *)((char *)v10 + v25) = v26;
    char v42 = 3;
    uint64_t v27 = sub_1000B7C40();
    uint64_t v17 = (uint64_t)v32;
    uint64_t v28 = v27;
    LOBYTE(v26) = v29;
    (*(void (**)(char *, uint64_t))(v20 + 8))(v18, v39);
    unint64_t v31 = v33;
    uint64_t v30 = v34;
    uint64_t *v33 = v28;
    *((unsigned char *)v31 + 8) = v26 & 1;
    sub_100094488((uint64_t)v10, v30, _s14descr1000EDEE9C14AudioRecordingV8FragmentVMa);
  }
  sub_100037F98(v17);
  return sub_1000944F0((uint64_t)v10, _s14descr1000EDEE9C14AudioRecordingV8FragmentVMa);
}

unint64_t sub_100092D14()
{
  return sub_1000925B0(*v0);
}

uint64_t sub_100092D1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100096CF8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100092D44(uint64_t a1)
{
  unint64_t v2 = sub_100095EE8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100092D80(uint64_t a1)
{
  unint64_t v2 = sub_100095EE8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100092DBC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000928D0(a1, a2);
}

uint64_t sub_100092DD4(void *a1)
{
  return sub_100092658(a1);
}

void *sub_100092DEC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000B6FD0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100032E20(&qword_100103A20);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000B7030();
  __chkstk_darwin(v11 - 8);
  sub_1000B7290();
  id v12 = a1;
  sub_1000B7020();
  char v13 = (void *)sub_1000B7280();
  if (*(void *)(v2 + 8)) {
    NSString v14 = sub_1000B7580();
  }
  else {
    NSString v14 = 0;
  }
  [v13 setText:v14];

  uint64_t v15 = (int *)_s14descr1000EDEE9C14AudioRecordingV17TranscriptSegmentVMa(0);
  sub_100032FC8(v2 + v15[5], (uint64_t)v10, &qword_100103A20);
  id v16 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_1000B6F90();
    id v16 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v17];
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  [v13 setTimestamp:v16];

  uint64_t v18 = v2 + v15[6];
  if (*(unsigned char *)(v18 + 8)) {
    id v19 = 0;
  }
  else {
    id v19 = [objc_allocWithZone((Class)NSNumber) initWithDouble:*(double *)v18];
  }
  [v13 setDuration:v19];

  if (*(void *)(v2 + v15[7] + 8)) {
    NSString v20 = sub_1000B7580();
  }
  else {
    NSString v20 = 0;
  }
  [v13 setSpeaker:v20];

  return v13;
}

uint64_t sub_1000930FC(char a1)
{
  return *(void *)&aText_2[8 * a1];
}

uint64_t sub_10009311C(void *a1)
{
  uint64_t v3 = sub_100032E20(&qword_100104B88);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100047028(a1, a1[3]);
  sub_100095E4C();
  sub_1000B7EB0();
  v8[15] = 0;
  sub_1000B7CC0();
  if (!v1)
  {
    _s14descr1000EDEE9C14AudioRecordingV17TranscriptSegmentVMa(0);
    v8[14] = 1;
    sub_1000B6FD0();
    sub_100095EA0(&qword_100103D40, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_1000B7D00();
    v8[13] = 2;
    sub_1000B7CE0();
    v8[12] = 3;
    sub_1000B7CC0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_10009333C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v3 = sub_100032E20(&qword_100103A20);
  __chkstk_darwin(v3 - 8);
  unint64_t v31 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_100032E20(&qword_100104B78);
  uint64_t v29 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = _s14descr1000EDEE9C14AudioRecordingV17TranscriptSegmentVMa(0);
  uint64_t v8 = (int *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)((char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t *v10 = 0;
  v10[1] = 0;
  uint64_t v11 = (char *)v10 + v8[7];
  uint64_t v12 = sub_1000B6FD0();
  char v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
  uint64_t v30 = (uint64_t)v11;
  v13(v11, 1, 1, v12);
  NSString v14 = (uint64_t *)((char *)v10 + v8[8]);
  uint64_t *v14 = 0;
  *((unsigned char *)v14 + 8) = 1;
  uint64_t v15 = (uint64_t *)((char *)v10 + v8[9]);
  uint64_t *v15 = 0;
  v15[1] = 0;
  sub_100047028(a1, a1[3]);
  sub_100095E4C();
  uint64_t v32 = v6;
  id v16 = v34;
  sub_1000B7EA0();
  if (v16)
  {
    sub_100037F98((uint64_t)a1);
  }
  else
  {
    uint64_t v34 = v14;
    uint64_t v17 = v30;
    uint64_t v18 = (uint64_t)v31;
    char v38 = 0;
    uint64_t *v10 = sub_1000B7C10();
    v10[1] = v19;
    char v37 = 1;
    sub_100095EA0(&qword_100103DB8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_1000B7C50();
    sub_10004E390(v18, v17);
    char v36 = 2;
    uint64_t v20 = sub_1000B7C30();
    uint64_t v21 = v34;
    uint64_t *v34 = v20;
    *((unsigned char *)v21 + 8) = v22 & 1;
    char v35 = 3;
    uint64_t v24 = sub_1000B7C10();
    uint64_t v26 = v25;
    (*(void (**)(char *, uint64_t))(v29 + 8))(v32, v33);
    swift_bridgeObjectRelease();
    uint64_t *v15 = v24;
    v15[1] = v26;
    sub_100094488((uint64_t)v10, v28, _s14descr1000EDEE9C14AudioRecordingV17TranscriptSegmentVMa);
    sub_100037F98(0);
  }
  return sub_1000944F0((uint64_t)v10, _s14descr1000EDEE9C14AudioRecordingV17TranscriptSegmentVMa);
}

uint64_t sub_1000936E8()
{
  return sub_1000930FC(*v0);
}

uint64_t sub_1000936F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100096EAC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100093718(uint64_t a1)
{
  unint64_t v2 = sub_100095E4C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100093754(uint64_t a1)
{
  unint64_t v2 = sub_100095E4C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100093790@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10009333C(a1, a2);
}

uint64_t sub_1000937A8(void *a1)
{
  return sub_10009311C(a1);
}

void *sub_1000937C0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v50 = a1;
  uint64_t v5 = _s14descr1000EDEE9C14AudioRecordingV17TranscriptSegmentVMa(0);
  uint64_t v49 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100032E20(&qword_100103A20);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000B7030();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  NSString v14 = (char *)v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100032E20(&qword_100103BB0);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v18 = (char *)v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)v47 - v19;
  uint64_t v21 = v3[1];
  uint64_t v51 = (char *)v47 - v19;
  if (v21 && *(void *)(a2 + 16))
  {
    uint64_t v22 = *v3;
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_10006A250(v22, v21);
    if (v24)
    {
      id v25 = [*(id *)(*(void *)(a2 + 56) + 8 * v23) identifier];
      if (v25)
      {
        uint64_t v26 = v25;
        uint64_t v48 = sub_1000B75B0();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRetain();
        uint64_t v20 = v51;
        sub_1000B6FE0();
        swift_bridgeObjectRelease();
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v20 = v51;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v20, 1, 1, v11);
LABEL_8:
  swift_bridgeObjectRelease();
  sub_100032FC8((uint64_t)v20, (uint64_t)v18, &qword_100103BB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v18, 1, v11) == 1)
  {
    sub_1000B7020();
    sub_100094428((uint64_t)v18);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v18, v11);
  }
  uint64_t v27 = v50;
  sub_1000B78F0();
  uint64_t v28 = v27;
  uint64_t v29 = (void *)sub_1000B78E0();
  uint64_t v30 = (int *)_s14descr1000EDEE9C14AudioRecordingV8FragmentVMa(0);
  sub_100032FC8((uint64_t)v3 + v30[5], (uint64_t)v10, &qword_100103A20);
  uint64_t v31 = sub_1000B6FD0();
  uint64_t v32 = *(void *)(v31 - 8);
  Class isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v10, 1, v31) != 1)
  {
    Class isa = sub_1000B6F60().super.isa;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v10, v31);
  }
  [v29 setCreatedDate:isa];

  uint64_t v34 = v30[6];
  uint64_t v50 = v3;
  if (*(uint64_t *)((char *)v3 + v34)) {
    char v35 = *(void **)((char *)v3 + v34);
  }
  else {
    char v35 = _swiftEmptyArrayStorage;
  }
  uint64_t v36 = v35[2];
  if (v36)
  {
    v47[1] = v35;
    uint64_t v48 = (uint64_t)v30;
    char v37 = v28;
    uint64_t v38 = (uint64_t)v35 + ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80));
    uint64_t v39 = v29;
    uint64_t v40 = *(void *)(v49 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_100094488(v38, (uint64_t)v7, _s14descr1000EDEE9C14AudioRecordingV17TranscriptSegmentVMa);
      uint64_t v41 = sub_100092DEC(v37);
      id v42 = [v39 transcript];
      [v42 addObject:v41];

      sub_1000944F0((uint64_t)v7, _s14descr1000EDEE9C14AudioRecordingV17TranscriptSegmentVMa);
      v38 += v40;
      --v36;
    }
    while (v36);
    swift_bridgeObjectRelease();
    char v43 = v50;
    uint64_t v20 = v51;
    uint64_t v29 = v39;
    uint64_t v30 = (int *)v48;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    char v43 = v50;
  }
  uint64_t v44 = (uint64_t)v43 + v30[7];
  if (*(unsigned char *)(v44 + 8)) {
    id v45 = 0;
  }
  else {
    id v45 = [objc_allocWithZone((Class)NSNumber) initWithInteger:*(void *)v44];
  }
  [v29 setTranscriptVersion:v45];

  sub_100094428((uint64_t)v20);
  return v29;
}

uint64_t sub_100093D20@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = _s14descr1000EDEE9C14AudioRecordingV8FragmentVMa(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8 - 8);
  uint64_t v11 = (uint64_t *)((char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v12 = [a1 fragments];
  uint64_t v13 = (uint64_t)[v12 count];

  if (v13 < 1)
  {

    uint64_t result = (uint64_t)sub_10004E7F4(a3, (void (*)(void, void, void, void, void, void))sub_10004E3F8);
    uint64_t v23 = 0;
    uint64_t v21 = 0;
    uint64_t v24 = 0;
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    id v27 = 0;
    BOOL v28 = 0;
    uint64_t v29 = 0;
    unsigned __int8 v30 = 0;
    uint64_t v19 = 1;
LABEL_29:
    *(void *)a4 = v23;
    *(void *)(a4 + 8) = v19;
    *(void *)(a4 + 16) = v21;
    *(void *)(a4 + 24) = v24;
    *(void *)(a4 + 32) = v25;
    *(void *)(a4 + 40) = v26;
    *(void *)(a4 + 48) = v27;
    *(void *)(a4 + 56) = v28;
    *(void *)(a4 + 64) = v29;
    *(unsigned char *)(a4 + 72) = v30;
    return result;
  }
  id v14 = [a1 topLineSummary];
  uint64_t v15 = a1;
  id v58 = a2;
  if (v14)
  {
    id v16 = a2;
    sub_10004E7F4(a3, (void (*)(void, void, void, void, void, void))sub_10004E834);
    uint64_t v17 = v16;
    uint64_t v15 = a1;
    id v14 = sub_10009F3C4(v14, v17, (uint64_t)a3);
    uint64_t v19 = v18;
    uint64_t v21 = v20;
    sub_10004E7F4(a3, (void (*)(void, void, void, void, void, void))sub_10004E3F8);
  }
  else
  {
    uint64_t v19 = 0;
    uint64_t v21 = 0;
  }
  uint64_t v59 = (uint64_t)v14;
  sub_100094324((uint64_t)v14, v19);
  id v31 = [v15 summary];
  if (v31)
  {
    id v31 = sub_10009F3C4(v31, v58, (uint64_t)a3);
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    sub_10004E7F4(a3, (void (*)(void, void, void, void, void, void))sub_10004E3F8);
  }
  else
  {
    sub_10004E7F4(a3, (void (*)(void, void, void, void, void, void))sub_10004E3F8);
    uint64_t v33 = 0;
    uint64_t v35 = 0;
  }
  uint64_t v55 = v33;
  sub_100094324((uint64_t)v31, v33);
  id v36 = [v15 summaryVersion];
  BOOL v54 = v36 == 0;
  uint64_t v26 = v35;
  uint64_t v56 = (uint64_t)v31;
  if (v36)
  {
    char v37 = v36;
    id v53 = [v36 integerValue];
  }
  else
  {
    id v53 = 0;
  }
  uint64_t v23 = v59;
  id v57 = v15;
  id v38 = [v15 fragments];
  id v39 = [v38 allObjects];

  sub_1000B78F0();
  unint64_t v40 = sub_1000B76E0();

  if (!(v40 >> 62))
  {
    uint64_t v41 = *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v41) {
      goto LABEL_14;
    }
LABEL_24:
    swift_bridgeObjectRelease();
    uint64_t v29 = _swiftEmptyArrayStorage;
LABEL_25:
    swift_bridgeObjectRetain();
    id v46 = v57;
    id v47 = [v57 callRecording];
    if (v47)
    {
      uint64_t v48 = v47;
      unsigned __int8 v30 = [v47 BOOLValue];

      sub_100094324(v23, v19);
      uint64_t v25 = v55;
      uint64_t v24 = v56;
      sub_100094324(v56, v55);
      sub_10004E888(v24, v25);
      sub_10004E888(v23, v19);
      sub_10004E888(v23, v19);
      sub_10004E888(v24, v25);
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {

      sub_100094324(v23, v19);
      uint64_t v25 = v55;
      uint64_t v24 = v56;
      sub_100094324(v56, v55);
      sub_10004E888(v24, v25);
      sub_10004E888(v23, v19);
      sub_10004E888(v23, v19);
      sub_10004E888(v24, v25);
      uint64_t result = swift_bridgeObjectRelease();
      unsigned __int8 v30 = 2;
    }
    BOOL v28 = v54;
    id v27 = v53;
    goto LABEL_29;
  }
  swift_bridgeObjectRetain();
  uint64_t v41 = sub_1000B7BA0();
  swift_bridgeObjectRelease();
  if (!v41) {
    goto LABEL_24;
  }
LABEL_14:
  unint64_t v60 = _swiftEmptyArrayStorage;
  uint64_t result = sub_100043918(0, v41 & ~(v41 >> 63), 0);
  if ((v41 & 0x8000000000000000) == 0)
  {
    uint64_t v50 = v26;
    uint64_t v51 = v19;
    uint64_t v52 = v21;
    uint64_t v42 = 0;
    uint64_t v29 = v60;
    do
    {
      if ((v40 & 0xC000000000000001) != 0) {
        id v43 = (id)sub_1000B7AC0();
      }
      else {
        id v43 = *(id *)(v40 + 8 * v42 + 32);
      }
      sub_100091F00(v43, v11);
      unint64_t v60 = v29;
      unint64_t v45 = v29[2];
      unint64_t v44 = v29[3];
      if (v45 >= v44 >> 1)
      {
        sub_100043918(v44 > 1, v45 + 1, 1);
        uint64_t v29 = v60;
      }
      ++v42;
      v29[2] = v45 + 1;
      sub_1000943C0((uint64_t)v11, (uint64_t)v29+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v45, _s14descr1000EDEE9C14AudioRecordingV8FragmentVMa);
    }
    while (v41 != v42);
    swift_bridgeObjectRelease();
    uint64_t v23 = v59;
    uint64_t v19 = v51;
    uint64_t v21 = v52;
    uint64_t v26 = v50;
    goto LABEL_25;
  }
  __break(1u);
  return result;
}

uint64_t _s14descr1000EDEE9C14AudioRecordingV8FragmentVMa(uint64_t a1)
{
  return sub_100094388(a1, qword_100104B38);
}

uint64_t sub_100094324(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t _s14descr1000EDEE9C14AudioRecordingV17TranscriptSegmentVMa(uint64_t a1)
{
  return sub_100094388(a1, qword_100104AA0);
}

uint64_t sub_100094388(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000943C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100094428(uint64_t a1)
{
  uint64_t v2 = sub_100032E20(&qword_100103BB0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100094488(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000944F0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t *sub_100094550(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1000B6FD0();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_100032E20(&qword_100103A20);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[6];
    uint64_t v17 = a3[7];
    uint64_t v18 = (char *)v4 + v16;
    uint64_t v19 = (char *)a2 + v16;
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = (uint64_t *)((char *)v4 + v17);
    uint64_t v21 = (uint64_t *)((char *)a2 + v17);
    uint64_t v22 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v22;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_100094704(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1000B6FD0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }

  return swift_bridgeObjectRelease();
}

void *sub_1000947D8(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1000B6FD0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_100032E20(&qword_100103A20);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = a3[7];
  uint64_t v16 = (char *)a1 + v14;
  uint64_t v17 = (char *)a2 + v14;
  *(void *)uint64_t v16 = *(void *)v17;
  unsigned char v16[8] = v17[8];
  uint64_t v18 = (void *)((char *)a1 + v15);
  uint64_t v19 = (void *)((char *)a2 + v15);
  uint64_t v20 = v19[1];
  void *v18 = *v19;
  v18[1] = v20;
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_10009493C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000B6FD0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_100032E20(&qword_100103A20);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = *(void *)v17;
  unsigned char v16[8] = v17[8];
  *(void *)uint64_t v16 = v18;
  uint64_t v19 = a3[7];
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_100094B24(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000B6FD0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_100032E20(&qword_100103A20);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v12;
  uint64_t v15 = (char *)a2 + v12;
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  *(_OWORD *)((char *)a1 + v13) = *(_OWORD *)((char *)a2 + v13);
  return a1;
}

void *sub_100094C6C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1000B6FD0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_100032E20(&qword_100103A20);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = a3[6];
  uint64_t v17 = a3[7];
  uint64_t v18 = (char *)a1 + v16;
  uint64_t v19 = (char *)a2 + v16;
  *(void *)uint64_t v18 = *(void *)v19;
  v18[8] = v19[8];
  uint64_t v20 = (void *)((char *)a1 + v17);
  uint64_t v21 = (void *)((char *)a2 + v17);
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  *uint64_t v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100094E30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100094E44);
}

uint64_t sub_100094E48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100094E5C);
}

void sub_100094E60()
{
}

uint64_t *sub_100094E74(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1000B6FD0();
    uint64_t v12 = *(void *)(v11 - 8);
    int v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_100032E20(&qword_100103A20);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    uint64_t v17 = (char *)v4 + v16;
    uint64_t v18 = (char *)a2 + v16;
    *(void *)uint64_t v17 = *(void *)v18;
    v17[8] = v18[8];
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_100095020(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1000B6FD0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }

  return swift_bridgeObjectRelease();
}

void *sub_1000950F0(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1000B6FD0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_100032E20(&qword_100103A20);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  *(void *)uint64_t v15 = *(void *)v16;
  _WORD v15[8] = v16[8];
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_10009524C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000B6FD0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_100032E20(&qword_100103A20);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[7];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = *(void *)v17;
  unsigned char v16[8] = v17[8];
  *(void *)uint64_t v16 = v18;
  return a1;
}

_OWORD *sub_100095424(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000B6FD0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_100032E20(&qword_100103A20);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  int v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  *(void *)int v13 = *(void *)v14;
  unsigned char v13[8] = v14[8];
  return a1;
}

void *sub_10009556C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1000B6FD0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_100032E20(&qword_100103A20);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[7];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  *(void *)uint64_t v17 = *(void *)v18;
  v17[8] = v18[8];
  return a1;
}

uint64_t sub_10009572C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100095740);
}

uint64_t sub_100095744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_100032E20(&qword_100103A20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_100095804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100095818);
}

uint64_t sub_10009581C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_100032E20(&qword_100103A20);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1000958C8()
{
}

void sub_1000958DC()
{
  sub_1000518DC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t _s14descr1000EDEE9C14AudioRecordingVwxx(uint64_t a1)
{
  if (*(void *)(a1 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t _s14descr1000EDEE9C14AudioRecordingVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  if (!v4)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    uint64_t v5 = *(void *)(a2 + 32);
    if (v5) {
      goto LABEL_3;
    }
LABEL_5:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    goto LABEL_6;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v5 = *(void *)(a2 + 32);
  if (!v5) {
    goto LABEL_5;
  }
LABEL_3:
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_6:
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s14descr1000EDEE9C14AudioRecordingVwca(uint64_t a1, long long *a2)
{
  uint64_t v4 = *((void *)a2 + 1);
  if (*(void *)(a1 + 8))
  {
    if (v4)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100050708(a1);
      uint64_t v5 = *((void *)a2 + 2);
      *(_OWORD *)a1 = *a2;
      *(void *)(a1 + 16) = v5;
    }
  }
  else if (v4)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *((void *)a2 + 1);
    *(void *)(a1 + 16) = *((void *)a2 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v6 = *a2;
    *(void *)(a1 + 16) = *((void *)a2 + 2);
    *(_OWORD *)a1 = v6;
  }
  uint64_t v7 = (_OWORD *)(a1 + 24);
  uint64_t v8 = (long long *)((char *)a2 + 24);
  uint64_t v9 = *((void *)a2 + 4);
  if (*(void *)(a1 + 32))
  {
    if (v9)
    {
      *(void *)(a1 + 24) = *((void *)a2 + 3);
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 40) = *((void *)a2 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100050708(a1 + 24);
      uint64_t v10 = *((void *)a2 + 5);
      _OWORD *v7 = *v8;
      *(void *)(a1 + 40) = v10;
    }
  }
  else if (v9)
  {
    *(void *)(a1 + 24) = *((void *)a2 + 3);
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(void *)(a1 + 40) = *((void *)a2 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v11 = *v8;
    *(void *)(a1 + 40) = *((void *)a2 + 5);
    _OWORD *v7 = v11;
  }
  uint64_t v12 = *((void *)a2 + 6);
  *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
  *(void *)(a1 + 48) = v12;
  *(void *)(a1 + 64) = *((void *)a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
  return a1;
}

__n128 _s14descr1000EDEE9C14AudioRecordingVwtk(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t _s14descr1000EDEE9C14AudioRecordingVwta(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8))
  {
    uint64_t v4 = *(void *)(a2 + 8);
    if (v4)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v4;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_100050708(a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
LABEL_6:
  if (!*(void *)(a1 + 32))
  {
LABEL_10:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    goto LABEL_11;
  }
  uint64_t v5 = *(void *)(a2 + 32);
  if (!v5)
  {
    sub_100050708(a1 + 24);
    goto LABEL_10;
  }
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
LABEL_11:
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

uint64_t _s14descr1000EDEE9C14AudioRecordingVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 73)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s14descr1000EDEE9C14AudioRecordingVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 72) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 73) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 73) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *_s14descr1000EDEE9C14AudioRecordingVMa()
{
  return &_s14descr1000EDEE9C14AudioRecordingVN;
}

unint64_t sub_100095E4C()
{
  unint64_t result = qword_100104B80;
  if (!qword_100104B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104B80);
  }
  return result;
}

uint64_t sub_100095EA0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100095EE8()
{
  unint64_t result = qword_100104B98;
  if (!qword_100104B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104B98);
  }
  return result;
}

uint64_t sub_100095F3C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100032F70(&qword_100104BA0);
    sub_100095EA0(a2, (void (*)(uint64_t))_s14descr1000EDEE9C14AudioRecordingV17TranscriptSegmentVMa);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100095FD0(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x53656E694C706F74 && a2 == 0xEE007972616D6D75;
  if (v3 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7972616D6D7573 && a2 == 0xE700000000000000 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x567972616D6D7573 && a2 == 0xEE006E6F69737265 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746E656D67617266 && a2 == 0xE900000000000073 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65526C6C61437369 && a2 == 0xEF676E6964726F63)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1000B7DC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_100096220@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_100032E20(&qword_100104BD0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100047028(a1, a1[3]);
  sub_1000966DC();
  sub_1000B7EA0();
  if (v2)
  {
    sub_100037F98((uint64_t)a1);
    sub_10004E888(0, 0);
    sub_10004E888(0, 0);
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v33 = 0;
    sub_100051E00();
    sub_1000B7C50();
    uint64_t v9 = v29;
    char v33 = 1;
    uint64_t v27 = v30;
    uint64_t v28 = v31;
    sub_100094324(v29, v30);
    sub_1000B7C50();
    uint64_t v25 = a2;
    uint64_t v26 = v9;
    uint64_t v11 = v29;
    uint64_t v10 = v30;
    LOBYTE(v29) = 2;
    uint64_t v12 = v31;
    sub_100094324(v11, v30);
    uint64_t v23 = sub_1000B7C40();
    uint64_t v24 = v12;
    int v32 = v13;
    sub_100032E20(&qword_100104BE0);
    char v33 = 3;
    sub_100096730(&qword_100104BE8, &qword_100104BF0);
    sub_1000B7C50();
    uint64_t v14 = v29;
    LOBYTE(v29) = 4;
    swift_bridgeObjectRetain();
    int v15 = sub_1000B7C20();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v17 = v26;
    uint64_t v16 = v27;
    uint64_t v18 = v28;
    sub_100094324(v26, v27);
    HIDWORD(v22) = v15;
    uint64_t v19 = v24;
    sub_100094324(v11, v10);
    sub_10004E888(v11, v10);
    sub_10004E888(v17, v16);
    sub_100037F98((uint64_t)a1);
    sub_10004E888(v17, v16);
    sub_10004E888(v11, v10);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v21 = v25;
    *uint64_t v25 = v17;
    v21[1] = v16;
    void v21[2] = v18;
    v21[3] = v11;
    void v21[4] = v10;
    v21[5] = v19;
    v21[6] = v23;
    *((unsigned char *)v21 + 56) = v32 & 1;
    v21[8] = v14;
    *((unsigned char *)v21 + 72) = BYTE4(v22);
  }
  return result;
}

unint64_t sub_1000966DC()
{
  unint64_t result = qword_100104BD8;
  if (!qword_100104BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104BD8);
  }
  return result;
}

uint64_t sub_100096730(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100032F70(&qword_100104BE0);
    sub_100095EA0(a2, (void (*)(uint64_t))_s14descr1000EDEE9C14AudioRecordingV8FragmentVMa);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *_s14descr1000EDEE9C14AudioRecordingV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100096890);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14descr1000EDEE9C14AudioRecordingV10CodingKeysOMa()
{
  return &_s14descr1000EDEE9C14AudioRecordingV10CodingKeysON;
}

ValueMetadata *_s14descr1000EDEE9C14AudioRecordingV8FragmentV10CodingKeysOMa()
{
  return &_s14descr1000EDEE9C14AudioRecordingV8FragmentV10CodingKeysON;
}

unsigned char *_s14descr1000EDEE9C14AudioRecordingV8FragmentV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000969A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14descr1000EDEE9C14AudioRecordingV17TranscriptSegmentV10CodingKeysOMa()
{
  return &_s14descr1000EDEE9C14AudioRecordingV17TranscriptSegmentV10CodingKeysON;
}

unint64_t sub_1000969E4()
{
  unint64_t result = qword_100104C18;
  if (!qword_100104C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104C18);
  }
  return result;
}

unint64_t sub_100096A3C()
{
  unint64_t result = qword_100104C20;
  if (!qword_100104C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104C20);
  }
  return result;
}

unint64_t sub_100096A94()
{
  unint64_t result = qword_100104C28;
  if (!qword_100104C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104C28);
  }
  return result;
}

unint64_t sub_100096AEC()
{
  unint64_t result = qword_100104C30;
  if (!qword_100104C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104C30);
  }
  return result;
}

unint64_t sub_100096B44()
{
  unint64_t result = qword_100104C38;
  if (!qword_100104C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104C38);
  }
  return result;
}

unint64_t sub_100096B9C()
{
  unint64_t result = qword_100104C40;
  if (!qword_100104C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104C40);
  }
  return result;
}

unint64_t sub_100096BF4()
{
  unint64_t result = qword_100104C48;
  if (!qword_100104C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104C48);
  }
  return result;
}

unint64_t sub_100096C4C()
{
  unint64_t result = qword_100104C50;
  if (!qword_100104C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104C50);
  }
  return result;
}

unint64_t sub_100096CA4()
{
  unint64_t result = qword_100104C58;
  if (!qword_100104C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104C58);
  }
  return result;
}

uint64_t sub_100096CF8(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v3 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4164657461657263 && a2 == 0xE900000000000074 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x697263736E617274 && a2 == 0xEA00000000007470 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001000C9160)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1000B7DC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_100096EAC(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 1954047348 && a2 == 0xE400000000000000;
  if (v3 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x72656B61657073 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1000B7DC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_100097048()
{
  uint64_t v0 = sub_1000B7490();
  sub_100038F18(v0, qword_100104C60);
  sub_100038E8C(v0, (uint64_t)qword_100104C60);
  return sub_1000B7470();
}

uint64_t sub_100097094(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, int a7)
{
  uint64_t v12 = _s16AttributedStringV9AttributeVMa(0);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12 - 8);
  int v15 = (uint64_t *)((char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v16 = a6;
  uint64_t v17 = swift_bridgeObjectRetain();
  sub_10009721C(v17, a2, a3, a6, a7, v15);
  unint64_t v18 = *(void *)(a5 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a5 + 16) = v18;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v18 = sub_100036024(0, *(void *)(v18 + 16) + 1, 1, v18);
    *(void *)(a5 + 16) = v18;
  }
  unint64_t v21 = *(void *)(v18 + 16);
  unint64_t v20 = *(void *)(v18 + 24);
  if (v21 >= v20 >> 1)
  {
    unint64_t v18 = sub_100036024(v20 > 1, v21 + 1, 1, v18);
    *(void *)(a5 + 16) = v18;
  }
  *(void *)(v18 + 16) = v21 + 1;
  return sub_1000A0038((uint64_t)v15, v18+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(void *)(v13 + 72) * v21, _s16AttributedStringV9AttributeVMa);
}

void sub_10009721C(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, int a5@<W4>, void *a6@<X8>)
{
  int v249 = a5;
  v271 = a4;
  unint64_t v272 = a2;
  uint64_t v273 = a3;
  uint64_t v8 = sub_100032E20(&qword_100104C78);
  __chkstk_darwin(v8 - 8);
  uint64_t v248 = (uint64_t *)((char *)&v241 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_100032E20((uint64_t *)&unk_1001042F0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  long long v243 = (char *)&v241 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v275 = (uint64_t)&v241 - v13;
  uint64_t v14 = sub_1000B6F10();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  long long v242 = (char *)&v241 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v241 = (char *)&v241 - v19;
  __chkstk_darwin(v18);
  v264 = (char *)&v241 - v20;
  uint64_t v21 = sub_100032E20(&qword_100104C80);
  __chkstk_darwin(v21 - 8);
  uint64_t v263 = (uint64_t)&v241 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100032E20(&qword_100103A20);
  __chkstk_darwin(v23 - 8);
  uint64_t v258 = (char *)&v241 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100032E20(&qword_100103BB0);
  __chkstk_darwin(v25 - 8);
  uint64_t v27 = (char *)&v241 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1000B7030();
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  v251 = (char *)&v241 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = (int *)_s16AttributedStringV9AttributeVMa(0);
  uint64_t v32 = (uint64_t)a6 + v31[5];
  uint64_t v253 = v29;
  char v33 = *(void (**)(void))(v29 + 56);
  uint64_t v250 = v32;
  uint64_t v269 = v33;
  v33();
  uint64_t v34 = (uint64_t)a6 + v31[6];
  uint64_t v35 = sub_1000B6FD0();
  uint64_t v36 = *(void *)(v35 - 8);
  char v37 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v36 + 56);
  uint64_t v257 = v34;
  uint64_t v256 = v35;
  v255 = v37;
  uint64_t v254 = v36 + 56;
  ((void (*)(uint64_t, uint64_t, uint64_t))v37)(v34, 1, 1);
  id v38 = (char *)a6 + v31[7];
  *(_OWORD *)id v38 = xmmword_1000CCA80;
  *((_OWORD *)v38 + 1) = 0u;
  *((_OWORD *)v38 + 2) = 0u;
  *((_OWORD *)v38 + 3) = 0u;
  *((void *)v38 + 8) = 0;
  uint64_t v39 = (uint64_t)a6 + v31[8];
  uint64_t v40 = _s16AttributedStringV14ParagraphStyleVMa(0);
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t v42 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 56);
  uint64_t v262 = v39;
  uint64_t v261 = v40;
  v260 = v42;
  uint64_t v259 = v41 + 56;
  ((void (*)(uint64_t, uint64_t, uint64_t))v42)(v39, 1, 1);
  uint64_t v265 = v31[9];
  *((unsigned char *)a6 + v265) = 5;
  uint64_t v43 = (uint64_t)a6 + v31[10];
  uint64_t v268 = v15;
  unint64_t v44 = *(void (**)(void))(v15 + 56);
  uint64_t v266 = v43;
  uint64_t v270 = v14;
  uint64_t v274 = v44;
  v44();
  uint64_t v267 = v31[11];
  *((unsigned char *)a6 + v267) = 5;
  unint64_t v45 = (void *)((char *)a6 + v31[12]);
  *unint64_t v45 = 0;
  v45[1] = 0;
  uint64_t v46 = (uint64_t)a6 + v31[13];
  uint64_t v47 = _s16AttributedStringV16InlineAttachmentVMa(0);
  uint64_t v48 = *(void *)(v47 - 8);
  uint64_t v49 = *(void (**)(uint64_t *, void, uint64_t, uint64_t))(v48 + 56);
  uint64_t v247 = v46;
  uint64_t v246 = v47;
  id v245 = v49;
  uint64_t v244 = v48 + 56;
  ((void (*)(uint64_t, uint64_t, uint64_t))v49)(v46, 1, 1);
  uint64_t v50 = v272;
  unint64_t v272 = a6;
  uint64_t v51 = v273;
  *a6 = v50;
  a6[1] = v51;
  uint64_t v52 = *(void *)(a1 + 16);
  v252 = v45;
  if (!v52)
  {
    long long v279 = 0u;
    long long v280 = 0u;
    goto LABEL_8;
  }
  id v53 = ICTTAttributeNameReplicaID;
  unint64_t v54 = sub_10006A39C((uint64_t)v53);
  if ((v55 & 1) == 0)
  {
    long long v279 = 0u;
    long long v280 = 0u;

    goto LABEL_8;
  }
  sub_100032E64(*(void *)(a1 + 56) + 32 * v54, (uint64_t)&v279);

  if (!*((void *)&v280 + 1))
  {
LABEL_8:
    sub_100038E30((uint64_t)&v279, &qword_1001036F8);
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v269)(v27, 1, 1, v28);
    goto LABEL_9;
  }
  int v56 = swift_dynamicCast();
  id v57 = v269;
  ((void (*)(char *, void, uint64_t, uint64_t))v269)(v27, v56 ^ 1u, 1, v28);
  uint64_t v58 = v253;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v253 + 48))(v27, 1, v28) != 1)
  {
    uint64_t v59 = *(void (**)(char *, char *, uint64_t))(v58 + 32);
    unint64_t v60 = v251;
    v59(v251, v27, v28);
    uint64_t v61 = v250;
    sub_100038E30(v250, &qword_100103BB0);
    v59((char *)v61, v60, v28);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v57)(v61, 0, 1, v28);
    goto LABEL_10;
  }
LABEL_9:
  sub_100038E30((uint64_t)v27, &qword_100103BB0);
LABEL_10:
  uint64_t v62 = v270;
  id v63 = v271;
  if (!*(void *)(a1 + 16))
  {
    long long v279 = 0u;
    long long v280 = 0u;
    goto LABEL_21;
  }
  id v64 = ICTTAttributeNameTimestamp;
  unint64_t v65 = sub_10006A39C((uint64_t)v64);
  if (v66)
  {
    sub_100032E64(*(void *)(a1 + 56) + 32 * v65, (uint64_t)&v279);
  }
  else
  {
    long long v279 = 0u;
    long long v280 = 0u;
  }

  if (!*((void *)&v280 + 1))
  {
LABEL_21:
    sub_100038E30((uint64_t)&v279, &qword_1001036F8);
    if (*(void *)(a1 + 16)) {
      goto LABEL_19;
    }
LABEL_22:
    long long v279 = 0u;
    long long v280 = 0u;
LABEL_28:
    sub_100038E30((uint64_t)&v279, &qword_1001036F8);
    goto LABEL_29;
  }
  if (swift_dynamicCast())
  {
    uint64_t v67 = (uint64_t)v258;
    sub_1000B6F80();
    v255(v67, 0, 1, v256);
    sub_10005613C(v67, v257, &qword_100103A20);
  }
  if (!*(void *)(a1 + 16)) {
    goto LABEL_22;
  }
LABEL_19:
  id v68 = ICTTAttributeNameFont;
  unint64_t v69 = sub_10006A39C((uint64_t)v68);
  if (v70)
  {
    sub_100032E64(*(void *)(a1 + 56) + 32 * v69, (uint64_t)&v279);
  }
  else
  {
    long long v279 = 0u;
    long long v280 = 0u;
  }

  if (!*((void *)&v280 + 1)) {
    goto LABEL_28;
  }
  sub_100038DC8(0, &qword_100104C98);
  if (swift_dynamicCast())
  {
    unint64_t v71 = (void *)v277;
    uint64_t v72 = *((void *)v38 + 1);
    if (v72 == 1)
    {
      uint64_t v73 = 0;
      uint64_t v72 = 0;
      uint64_t v74 = 0;
      uint64_t v75 = 0;
      uint64_t v76 = 0;
      long long v77 = 0uLL;
      unint64_t v78 = 0x200000000;
      unsigned int v79 = 1;
      int v80 = 0x2000000;
      int v81 = 0x20000;
      __int16 v82 = 512;
      unsigned int v83 = 1;
    }
    else
    {
      uint64_t v76 = *((void *)v38 + 8);
      long long v77 = *((_OWORD *)v38 + 3);
      uint64_t v100 = *((void *)v38 + 3);
      uint64_t v75 = *((void *)v38 + 4);
      uint64_t v74 = *((void *)v38 + 2);
      uint64_t v73 = *(void *)v38;
      __int16 v82 = v100 & 0xFF00;
      int v81 = v100 & 0xFFFF0000;
      int v80 = v100 & 0xFF000000;
      unint64_t v78 = v100 & 0xFFFFFFFF00000000;
      unsigned int v79 = v100 & 1;
      unsigned int v83 = v38[40] & 1;
    }
    *(void *)id v38 = v73;
    *((void *)v38 + 1) = v72;
    *((void *)v38 + 2) = v74;
    *((void *)v38 + 3) = (unsigned __int16)v82 & 0xFF00 | *(void *)&v81 & 0xFF0000 | v79 | v80 & 0xFF000000 | v78 & 0xFF00000000;
    *((void *)v38 + 4) = v75;
    *((void *)v38 + 5) = v83;
    *((_OWORD *)v38 + 3) = v77;
    *((void *)v38 + 8) = v76;
    id v101 = [v71 fontName];
    if (v101)
    {
      uint64_t v102 = v101;
      uint64_t v103 = sub_1000B75B0();
      uint64_t v105 = v104;
    }
    else
    {
      uint64_t v103 = 0;
      uint64_t v105 = 0;
    }
    swift_bridgeObjectRelease();
    *(void *)id v38 = v103;
    *((void *)v38 + 1) = v105;
    if (v105 == 1
      || ([v71 pointSize], *((void *)v38 + 2) = v178, v38[24] = 0, *((void *)v38 + 1) == 1)
      || (v38[25] = [v71 fontHints] & 1, *((void *)v38 + 1) == 1))
    {
    }
    else
    {
      unsigned __int8 v240 = [v71 fontHints];

      v38[26] = (v240 & 2) != 0;
    }
    if (!*(void *)(a1 + 16)) {
      goto LABEL_87;
    }
    goto LABEL_30;
  }
LABEL_29:
  if (!*(void *)(a1 + 16))
  {
LABEL_87:
    long long v279 = 0u;
    long long v280 = 0u;
    goto LABEL_88;
  }
LABEL_30:
  id v84 = ICTTAttributeNameFontHints;
  unint64_t v85 = sub_10006A39C((uint64_t)v84);
  if (v86)
  {
    sub_100032E64(*(void *)(a1 + 56) + 32 * v85, (uint64_t)&v279);
  }
  else
  {
    long long v279 = 0u;
    long long v280 = 0u;
  }

  if (*((void *)&v280 + 1))
  {
    if (swift_dynamicCast())
    {
      char v87 = v277;
      uint64_t v88 = *((void *)v38 + 1);
      if (v88 == 1)
      {
        uint64_t v89 = 0;
        uint64_t v88 = 0;
        uint64_t v90 = 0;
        uint64_t v91 = 0;
        uint64_t v92 = 0;
        long long v93 = 0uLL;
        unint64_t v94 = 0x200000000;
        unsigned int v95 = 1;
        int v96 = 0x2000000;
        int v97 = 0x20000;
        __int16 v98 = 512;
        unsigned int v99 = 1;
      }
      else
      {
        uint64_t v92 = *((void *)v38 + 8);
        long long v93 = *((_OWORD *)v38 + 3);
        uint64_t v106 = *((void *)v38 + 3);
        uint64_t v91 = *((void *)v38 + 4);
        uint64_t v90 = *((void *)v38 + 2);
        uint64_t v89 = *(void *)v38;
        __int16 v98 = v106 & 0xFF00;
        int v97 = v106 & 0xFFFF0000;
        int v96 = v106 & 0xFF000000;
        unint64_t v94 = v106 & 0xFFFFFFFF00000000;
        unsigned int v95 = v106 & 1;
        unsigned int v99 = v38[40] & 1;
      }
      *(void *)id v38 = v89;
      *((void *)v38 + 1) = v88;
      *((void *)v38 + 2) = v90;
      *((void *)v38 + 3) = (unsigned __int16)v98 & 0xFF00 | *(void *)&v97 & 0xFF0000 | v95 | v96 & 0xFF000000 | v94 & 0xFF00000000;
      *((void *)v38 + 4) = v91;
      *((void *)v38 + 5) = v99;
      *((_OWORD *)v38 + 3) = v93;
      *((void *)v38 + 8) = v92;
      v38[25] = v87 & 1;
      v38[26] = (v87 & 2) != 0;
    }
    if (!*(void *)(a1 + 16)) {
      goto LABEL_89;
    }
    goto LABEL_43;
  }
LABEL_88:
  sub_100038E30((uint64_t)&v279, &qword_1001036F8);
  if (!*(void *)(a1 + 16))
  {
LABEL_89:
    long long v279 = 0u;
    long long v280 = 0u;
    goto LABEL_90;
  }
LABEL_43:
  id v107 = ICTTAttributeNameUnderline;
  unint64_t v108 = sub_10006A39C((uint64_t)v107);
  if (v109)
  {
    sub_100032E64(*(void *)(a1 + 56) + 32 * v108, (uint64_t)&v279);
  }
  else
  {
    long long v279 = 0u;
    long long v280 = 0u;
  }

  if (*((void *)&v280 + 1))
  {
    if (swift_dynamicCast())
    {
      char v110 = v277;
      uint64_t v111 = *((void *)v38 + 1);
      if (v111 == 1)
      {
        uint64_t v112 = 0;
        uint64_t v111 = 0;
        uint64_t v113 = 0;
        uint64_t v114 = 0;
        uint64_t v115 = 0;
        long long v116 = 0uLL;
        unint64_t v117 = 0x200000000;
        unsigned int v118 = 1;
        int v119 = 0x2000000;
        int v120 = 0x20000;
        __int16 v121 = 512;
        unsigned int v122 = 1;
      }
      else
      {
        uint64_t v115 = *((void *)v38 + 8);
        long long v116 = *((_OWORD *)v38 + 3);
        uint64_t v123 = *((void *)v38 + 3);
        uint64_t v114 = *((void *)v38 + 4);
        uint64_t v113 = *((void *)v38 + 2);
        uint64_t v112 = *(void *)v38;
        __int16 v121 = v123 & 0xFF00;
        int v120 = v123 & 0xFFFF0000;
        int v119 = v123 & 0xFF000000;
        unint64_t v117 = v123 & 0xFFFFFFFF00000000;
        unsigned int v118 = v123 & 1;
        unsigned int v122 = v38[40] & 1;
      }
      *(void *)id v38 = v112;
      *((void *)v38 + 1) = v111;
      *((void *)v38 + 2) = v113;
      *((void *)v38 + 3) = (unsigned __int16)v121 & 0xFF00 | *(void *)&v120 & 0xFF0000 | v118 | v119 & 0xFF000000 | v117 & 0xFF00000000;
      *((void *)v38 + 4) = v114;
      *((void *)v38 + 5) = v122;
      *((_OWORD *)v38 + 3) = v116;
      *((void *)v38 + 8) = v115;
      v38[27] = v110;
    }
    if (!*(void *)(a1 + 16)) {
      goto LABEL_91;
    }
    goto LABEL_53;
  }
LABEL_90:
  sub_100038E30((uint64_t)&v279, &qword_1001036F8);
  if (!*(void *)(a1 + 16))
  {
LABEL_91:
    long long v279 = 0u;
    long long v280 = 0u;
    goto LABEL_92;
  }
LABEL_53:
  id v124 = ICTTAttributeNameStrikethrough;
  unint64_t v125 = sub_10006A39C((uint64_t)v124);
  if (v126)
  {
    sub_100032E64(*(void *)(a1 + 56) + 32 * v125, (uint64_t)&v279);
  }
  else
  {
    long long v279 = 0u;
    long long v280 = 0u;
  }

  if (*((void *)&v280 + 1))
  {
    if (swift_dynamicCast())
    {
      char v127 = v277;
      uint64_t v128 = *((void *)v38 + 1);
      if (v128 == 1)
      {
        uint64_t v129 = 0;
        uint64_t v128 = 0;
        uint64_t v130 = 0;
        uint64_t v131 = 0;
        uint64_t v132 = 0;
        long long v133 = 0uLL;
        unint64_t v134 = 0x200000000;
        unsigned int v135 = 1;
        int v136 = 0x2000000;
        int v137 = 0x20000;
        __int16 v138 = 512;
        unsigned int v139 = 1;
      }
      else
      {
        uint64_t v132 = *((void *)v38 + 8);
        long long v133 = *((_OWORD *)v38 + 3);
        uint64_t v140 = *((void *)v38 + 3);
        uint64_t v131 = *((void *)v38 + 4);
        uint64_t v130 = *((void *)v38 + 2);
        uint64_t v129 = *(void *)v38;
        __int16 v138 = v140 & 0xFF00;
        int v137 = v140 & 0xFFFF0000;
        int v136 = v140 & 0xFF000000;
        unint64_t v134 = v140 & 0xFFFFFFFF00000000;
        unsigned int v135 = v140 & 1;
        unsigned int v139 = v38[40] & 1;
      }
      *(void *)id v38 = v129;
      *((void *)v38 + 1) = v128;
      *((void *)v38 + 2) = v130;
      *((void *)v38 + 3) = (unsigned __int16)v138 & 0xFF00 | *(void *)&v137 & 0xFF0000 | v135 | v136 & 0xFF000000 | v134 & 0xFF00000000;
      *((void *)v38 + 4) = v131;
      *((void *)v38 + 5) = v139;
      *((_OWORD *)v38 + 3) = v133;
      *((void *)v38 + 8) = v132;
      v38[28] = v127;
    }
    if (!*(void *)(a1 + 16)) {
      goto LABEL_93;
    }
    goto LABEL_63;
  }
LABEL_92:
  sub_100038E30((uint64_t)&v279, &qword_1001036F8);
  if (!*(void *)(a1 + 16))
  {
LABEL_93:
    long long v279 = 0u;
    long long v280 = 0u;
    goto LABEL_94;
  }
LABEL_63:
  id v141 = ICTTAttributeNameSuperscript;
  unint64_t v142 = sub_10006A39C((uint64_t)v141);
  if (v143)
  {
    sub_100032E64(*(void *)(a1 + 56) + 32 * v142, (uint64_t)&v279);
  }
  else
  {
    long long v279 = 0u;
    long long v280 = 0u;
  }

  if (*((void *)&v280 + 1))
  {
    if (swift_dynamicCast())
    {
      uint64_t v144 = v277;
      uint64_t v145 = *((void *)v38 + 1);
      if (v145 == 1)
      {
        uint64_t v146 = 0;
        uint64_t v145 = 0;
        uint64_t v147 = 0;
        uint64_t v148 = 0;
        long long v149 = 0uLL;
        unint64_t v150 = 0x200000000;
        unsigned int v151 = 1;
        int v152 = 0x2000000;
        int v153 = 0x20000;
        __int16 v154 = 512;
        unsigned int v155 = 1;
      }
      else
      {
        uint64_t v148 = *((void *)v38 + 8);
        long long v149 = *((_OWORD *)v38 + 3);
        uint64_t v147 = *((void *)v38 + 2);
        uint64_t v156 = *((void *)v38 + 3);
        uint64_t v146 = *(void *)v38;
        __int16 v154 = v156 & 0xFF00;
        int v153 = v156 & 0xFFFF0000;
        int v152 = v156 & 0xFF000000;
        unint64_t v150 = v156 & 0xFFFFFFFF00000000;
        unsigned int v151 = v156 & 1;
        unsigned int v155 = v38[40] & 1;
      }
      *(void *)id v38 = v146;
      *((void *)v38 + 1) = v145;
      *((void *)v38 + 2) = v147;
      *((void *)v38 + 3) = (unsigned __int16)v154 & 0xFF00 | *(void *)&v153 & 0xFF0000 | v151 | v152 & 0xFF000000 | v150 & 0xFF00000000;
      *((_OWORD *)v38 + 3) = v149;
      *((void *)v38 + 8) = v148;
      *((void *)v38 + 4) = v144;
      *((void *)v38 + 5) = v155;
      v38[40] = 0;
    }
    if (!*(void *)(a1 + 16)) {
      goto LABEL_95;
    }
    goto LABEL_73;
  }
LABEL_94:
  sub_100038E30((uint64_t)&v279, &qword_1001036F8);
  if (!*(void *)(a1 + 16))
  {
LABEL_95:
    long long v277 = 0u;
    long long v278 = 0u;
LABEL_96:
    sub_100038E30((uint64_t)&v277, &qword_1001036F8);
    goto LABEL_97;
  }
LABEL_73:
  id v157 = ICTTAttributeNameForegroundColor;
  unint64_t v158 = sub_10006A39C((uint64_t)v157);
  if (v159)
  {
    sub_100032E64(*(void *)(a1 + 56) + 32 * v158, (uint64_t)&v277);
  }
  else
  {
    long long v277 = 0u;
    long long v278 = 0u;
  }

  if (!*((void *)&v278 + 1)) {
    goto LABEL_96;
  }
  sub_100032FB8(&v277, &v279);
  uint64_t v160 = *((void *)v38 + 1);
  if (v160 == 1)
  {
    uint64_t v161 = 0;
    uint64_t v160 = 0;
    uint64_t v162 = 0;
    uint64_t v163 = 0;
    uint64_t v164 = 0;
    long long v165 = 0uLL;
    unint64_t v166 = 0x200000000;
    unsigned int v167 = 1;
    int v168 = 0x2000000;
    int v169 = 0x20000;
    __int16 v170 = 512;
    unsigned int v171 = 1;
  }
  else
  {
    uint64_t v164 = *((void *)v38 + 8);
    long long v165 = *((_OWORD *)v38 + 3);
    uint64_t v172 = *((void *)v38 + 3);
    uint64_t v163 = *((void *)v38 + 4);
    uint64_t v162 = *((void *)v38 + 2);
    uint64_t v161 = *(void *)v38;
    __int16 v170 = v172 & 0xFF00;
    int v169 = v172 & 0xFFFF0000;
    int v168 = v172 & 0xFF000000;
    unint64_t v166 = v172 & 0xFFFFFFFF00000000;
    unsigned int v167 = v172 & 1;
    unsigned int v171 = v38[40] & 1;
  }
  *(void *)id v38 = v161;
  *((void *)v38 + 1) = v160;
  *((void *)v38 + 2) = v162;
  *((void *)v38 + 3) = (unsigned __int16)v170 & 0xFF00 | *(void *)&v169 & 0xFF0000 | v167 | v168 & 0xFF000000 | v166 & 0xFF00000000;
  *((void *)v38 + 4) = v163;
  *((void *)v38 + 5) = v171;
  *((_OWORD *)v38 + 3) = v165;
  *((void *)v38 + 8) = v164;
  sub_100032E64((uint64_t)&v279, (uint64_t)&v277);
  type metadata accessor for CGColor(0);
  swift_dynamicCast();
  uint64_t v173 = sub_10009F9A0(v276);
  uint64_t v175 = v174;
  uint64_t v177 = v176;
  sub_100037F98((uint64_t)&v279);
  sub_10004E888(*((void *)v38 + 6), *((void *)v38 + 7));
  *((void *)v38 + 6) = v173;
  *((void *)v38 + 7) = v175;
  *((void *)v38 + 8) = v177;
LABEL_97:
  unint64_t v179 = v274;
  if (!*(void *)(a1 + 16))
  {
    long long v279 = 0u;
    long long v280 = 0u;
    goto LABEL_114;
  }
  id v180 = ICTTAttributeNameParagraphStyle;
  unint64_t v181 = sub_10006A39C((uint64_t)v180);
  if (v182)
  {
    sub_100032E64(*(void *)(a1 + 56) + 32 * v181, (uint64_t)&v279);
  }
  else
  {
    long long v279 = 0u;
    long long v280 = 0u;
  }

  if (!*((void *)&v280 + 1))
  {
LABEL_114:
    sub_100038E30((uint64_t)&v279, &qword_1001036F8);
    if (*(void *)(a1 + 16)) {
      goto LABEL_112;
    }
LABEL_115:
    long long v279 = 0u;
    long long v280 = 0u;
LABEL_121:
    sub_100038E30((uint64_t)&v279, &qword_1001036F8);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v179)(v275, 1, 1, v62);
LABEL_122:
    sub_100038E30(v275, (uint64_t *)&unk_1001042F0);
    if (!*(void *)(a1 + 16)) {
      goto LABEL_120;
    }
    goto LABEL_123;
  }
  sub_100038DC8(0, &qword_100104C90);
  if (swift_dynamicCast())
  {
    id v183 = (id)v277;
    uint64_t v184 = v263;
    sub_10009BD48(v183, v263);
    v260(v184, 0, 1, v261);
    sub_10005613C(v184, v262, &qword_100104C80);
    id v185 = [v183 writingDirection];

    unint64_t v186 = (unint64_t)v185 + 1;
    if (v185 == (id)3) {
      char v187 = 4;
    }
    else {
      char v187 = 5;
    }
    if (v186 >= 4) {
      char v188 = v187;
    }
    else {
      char v188 = 0x2030100u >> (8 * v186);
    }
    *((unsigned char *)v272 + v267) = v188;
  }
  if (!*(void *)(a1 + 16)) {
    goto LABEL_115;
  }
LABEL_112:
  id v189 = ICTTNSLinkAttributeName;
  unint64_t v190 = sub_10006A39C((uint64_t)v189);
  if (v191)
  {
    sub_100032E64(*(void *)(a1 + 56) + 32 * v190, (uint64_t)&v279);
  }
  else
  {
    long long v279 = 0u;
    long long v280 = 0u;
  }

  if (!*((void *)&v280 + 1)) {
    goto LABEL_121;
  }
  uint64_t v192 = v275;
  int v193 = swift_dynamicCast();
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v179)(v192, v193 ^ 1u, 1, v62);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v268 + 48))(v192, 1, v62) == 1) {
    goto LABEL_122;
  }
  long long v194 = *(void (**)(char *, uint64_t, uint64_t))(v268 + 32);
  long long v195 = v264;
  v194(v264, v275, v62);
  uint64_t v196 = v266;
  sub_100038E30(v266, (uint64_t *)&unk_1001042F0);
  v194((char *)v196, (uint64_t)v195, v62);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v179)(v196, 0, 1, v62);
  if (!*(void *)(a1 + 16))
  {
LABEL_120:
    long long v279 = 0u;
    long long v280 = 0u;
    goto LABEL_137;
  }
LABEL_123:
  id v197 = ICTTNSWritingDirectionAttributeName;
  unint64_t v198 = sub_10006A39C((uint64_t)v197);
  if (v199)
  {
    sub_100032E64(*(void *)(a1 + 56) + 32 * v198, (uint64_t)&v279);
  }
  else
  {
    long long v279 = 0u;
    long long v280 = 0u;
  }

  if (*((void *)&v280 + 1))
  {
    if (swift_dynamicCast())
    {
      unint64_t v200 = v277 + 1;
      if ((void)v277 == 3) {
        char v201 = 4;
      }
      else {
        char v201 = 5;
      }
      if (v200 < 4) {
        char v201 = 0x2030100u >> (8 * v200);
      }
      *((unsigned char *)v272 + v267) = v201;
    }
    if (!*(void *)(a1 + 16)) {
      goto LABEL_138;
    }
    goto LABEL_135;
  }
LABEL_137:
  sub_100038E30((uint64_t)&v279, &qword_1001036F8);
  if (!*(void *)(a1 + 16))
  {
LABEL_138:
    long long v279 = 0u;
    long long v280 = 0u;
    goto LABEL_146;
  }
LABEL_135:
  id v202 = ICTTAttributeNameEmphasis;
  unint64_t v203 = sub_10006A39C((uint64_t)v202);
  if (v204)
  {
    sub_100032E64(*(void *)(a1 + 56) + 32 * v203, (uint64_t)&v279);
  }
  else
  {
    long long v279 = 0u;
    long long v280 = 0u;
  }

  if (*((void *)&v280 + 1))
  {
    if (swift_dynamicCast())
    {
      unint64_t v205 = ICEmphasisColorTypeForTag();
      char v206 = sub_10009FF18(v205);
      *((unsigned char *)v272 + v265) = v206;
    }
    if (!*(void *)(a1 + 16)) {
      goto LABEL_147;
    }
    goto LABEL_144;
  }
LABEL_146:
  sub_100038E30((uint64_t)&v279, &qword_1001036F8);
  if (!*(void *)(a1 + 16))
  {
LABEL_147:
    long long v279 = 0u;
    long long v280 = 0u;
    goto LABEL_150;
  }
LABEL_144:
  id v207 = ICTTNSAttachmentAttributeName;
  unint64_t v208 = sub_10006A39C((uint64_t)v207);
  if (v209)
  {
    sub_100032E64(*(void *)(a1 + 56) + 32 * v208, (uint64_t)&v279);
  }
  else
  {
    long long v279 = 0u;
    long long v280 = 0u;
  }

LABEL_150:
  swift_bridgeObjectRelease();
  if (!*((void *)&v280 + 1))
  {

    uint64_t v225 = &qword_1001036F8;
    v226 = &v279;
LABEL_161:
    sub_100038E30((uint64_t)v226, v225);
    return;
  }
  sub_100038DC8(0, (unint64_t *)&qword_100103BD8);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_174;
  }
  uint64_t v210 = (void *)v277;
  if (![self isInlineAttachment:(void)v277])
  {
    id v227 = [v210 attachmentIdentifier];
    if (v227)
    {
      uint64_t v228 = v227;
      uint64_t v229 = sub_1000B75B0();
      uint64_t v231 = v230;
    }
    else
    {

      uint64_t v229 = 0;
      uint64_t v231 = 0;
    }
    uint64_t v232 = v252;
    swift_bridgeObjectRelease();
    uint64_t *v232 = v229;
    v232[1] = v231;
    return;
  }
  if (!v63)
  {
LABEL_169:
    if (qword_1001036D0 != -1) {
      swift_once();
    }
    uint64_t v233 = sub_1000B7490();
    sub_100038E8C(v233, (uint64_t)qword_100104C60);
    id v234 = v210;
    long long v235 = sub_1000B7480();
    os_log_type_t v236 = sub_1000B7840();
    if (os_log_type_enabled(v235, v236))
    {
      long long v237 = (uint8_t *)swift_slowAlloc();
      long long v238 = (void *)swift_slowAlloc();
      *(_DWORD *)long long v237 = 138412290;
      *(void *)&long long v279 = v234;
      id v239 = v234;
      sub_1000B79F0();
      *long long v238 = v234;

      _os_log_impl((void *)&_mh_execute_header, v235, v236, "Cannot resolve inline attachment â€” skipping {attachment: %@}", v237, 0xCu);
      sub_100032E20(&qword_100104C88);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
LABEL_174:

    return;
  }
  id v211 = v63;
  id v212 = [v210 inlineAttachmentInContext:v211];
  if (!v212)
  {

    goto LABEL_169;
  }
  id v213 = v212;
  uint64_t v214 = v248;
  sub_10009D0E8(v213, v248);
  v245(v214, 0, 1, v246);
  sub_10005613C((uint64_t)v214, v247, &qword_100104C78);
  if (v249)
  {
    id v215 = [v213 tokenContentIdentifier];
    if (v215)
    {
      v216 = v215;
      id v217 = (id)NotesAppURLForNoteIdentifierOrTokenContentIdentifier();

      if (v217)
      {
        long long v218 = v242;
        sub_1000B6EE0();

        uint64_t v219 = v268;
        uint64_t v220 = *(void (**)(char *, char *, uint64_t))(v268 + 32);
        uint64_t v221 = (long long *)v243;
        char v222 = v274;
        v220(v243, v218, v62);
        ((void (*)(long long *, void, uint64_t, uint64_t))v222)(v221, 0, 1, v62);
        if ((*(unsigned int (**)(long long *, uint64_t, uint64_t))(v219 + 48))(v221, 1, v62) != 1)
        {
          char v223 = v241;
          v220(v241, (char *)v221, v62);
          uint64_t v224 = v266;
          sub_100038E30(v266, (uint64_t *)&unk_1001042F0);
          v220((char *)v224, v223, v62);
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v222)(v224, 0, 1, v62);
          return;
        }
      }
      else
      {

        uint64_t v221 = (long long *)v243;
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v179)(v243, 1, 1, v62);
      }
      uint64_t v225 = (uint64_t *)&unk_1001042F0;
      v226 = v221;
      goto LABEL_161;
    }
  }
}

uint64_t sub_100098BFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  type metadata accessor for Key(0);
  sub_1000A7464(&qword_100103798, type metadata accessor for Key);
  uint64_t v9 = sub_1000B7510();
  v8(v9, a3, a4, a5);

  return swift_bridgeObjectRelease();
}

id sub_100098CCC(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4, uint64_t a5, char *a6, double a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v35 = a5;
  uint64_t v36 = a6;
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  uint64_t v32 = a1;
  uint64_t v13 = _s16AttributedStringV9AttributeVMa(0);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13 - 8);
  uint64_t v16 = (NSUInteger *)((char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v17 = objc_allocWithZone((Class)NSMutableAttributedString);
  swift_bridgeObjectRetain();
  NSString v18 = sub_1000B7580();
  swift_bridgeObjectRelease();
  id v19 = [v17 initWithString:v18];

  uint64_t v20 = *(void *)(a10 + 16);
  if (v20)
  {
    uint64_t v21 = a10 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    int v31 = a4 & 0x101;
    uint64_t v22 = *(void *)(v14 + 72);
    uint64_t v29 = a10;
    uint64_t v30 = v22;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1000A74AC(v21, (uint64_t)v16, _s16AttributedStringV9AttributeVMa);
      sub_100098F88(v32, v33, v34, v31, v35, v36, a7);
      if (v10) {
        break;
      }
      type metadata accessor for Key(0);
      sub_1000A7464(&qword_100103798, type metadata accessor for Key);
      Class isa = sub_1000B7500().super.isa;
      swift_bridgeObjectRelease();
      NSUInteger v24 = *v16;
      NSUInteger v25 = v16[1];
      v38.id location = [v19 ic_range];
      v38.length = v26;
      v37.id location = v24;
      v37.length = v25;
      NSRange v27 = NSIntersectionRange(v37, v38);
      [v19 addAttributes:isa range:v27.location, v27.length];

      sub_1000A00A0((uint64_t)v16, _s16AttributedStringV9AttributeVMa);
      v21 += v30;
      if (!--v20) {
        goto LABEL_7;
      }
    }

    sub_1000A00A0((uint64_t)v16, _s16AttributedStringV9AttributeVMa);
LABEL_7:
    swift_bridgeObjectRelease();
  }
  return v19;
}

unint64_t sub_100098F88(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, char *a6, double a7)
{
  uint64_t v114 = a6;
  int v110 = a4;
  uint64_t v112 = a3;
  uint64_t v111 = a2;
  uint64_t v117 = a1;
  uint64_t v10 = sub_100032E20(&qword_100104C78);
  __chkstk_darwin(v10 - 8);
  uint64_t v119 = (uint64_t)&v108 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = _s16AttributedStringV16InlineAttachmentVMa(0);
  uint64_t v124 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v120 = (uint64_t)&v108 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100032E20((uint64_t *)&unk_1001042F0);
  __chkstk_darwin(v13 - 8);
  long long v116 = (char *)&v108 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = sub_1000B6F10();
  uint64_t v123 = *(void *)(v125 - 8);
  __chkstk_darwin(v125);
  char v109 = (char *)&v108 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100032E20(&qword_100104C80);
  __chkstk_darwin(v16 - 8);
  NSString v18 = (char *)&v108 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100032E20(&qword_100103A20);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v108 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = sub_1000B6FD0();
  uint64_t v122 = *(void *)(v115 - 8);
  __chkstk_darwin(v115);
  unint64_t v108 = (char *)&v108 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100032E20(&qword_100103BB0);
  __chkstk_darwin(v23 - 8);
  NSUInteger v25 = (char *)&v108 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1000B7030();
  uint64_t v27 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v108 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v126 = (int *)_s16AttributedStringV9AttributeVMa(0);
  uint64_t v30 = v7;
  int v31 = (uint64_t *)(v7 + v126[7]);
  uint64_t v32 = v31[1];
  uint64_t v113 = a5;
  if (v32 == 1)
  {
    unint64_t v33 = sub_100031E40((uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    uint64_t v34 = v31[8];
    int v35 = *((_DWORD *)v31 + 10);
    uint64_t v37 = v31[3];
    uint64_t v36 = v31[4];
    uint64_t v38 = v31[2];
    uint64_t v131 = *v31;
    uint64_t v132 = v32;
    uint64_t v133 = v38;
    __int16 v134 = v37 & 0xFF01;
    char v135 = BYTE2(v37);
    char v136 = BYTE3(v37);
    char v137 = BYTE4(v37);
    uint64_t v138 = v36;
    char v139 = v35 & 1;
    long long v140 = *((_OWORD *)v31 + 3);
    uint64_t v141 = v34;
    unint64_t v33 = (unint64_t)sub_10009A828();
  }
  unint64_t v39 = v33;
  sub_100032FC8(v7 + v126[5], (uint64_t)v25, &qword_100103BB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) == 1)
  {
    sub_100038E30((uint64_t)v25, &qword_100103BB0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v29, v25, v26);
    uint64_t v40 = (void *)ICTTAttributeNameReplicaID;
    uint64_t v130 = (void *)v26;
    uint64_t v41 = sub_1000A0100((uint64_t *)&v129);
    (*(void (**)(uint64_t *, char *, uint64_t))(v27 + 16))(v41, v29, v26);
    sub_100032FB8(&v129, v128);
    id v42 = v40;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v127 = v39;
    sub_10006B09C(v128, v42, isUniquelyReferenced_nonNull_native);
    unint64_t v39 = v127;

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
  }
  uint64_t v44 = v30;
  uint64_t v45 = v125;
  uint64_t v46 = v126;
  uint64_t v47 = v123;
  uint64_t v48 = v115;
  sub_100032FC8(v44 + v126[6], (uint64_t)v21, &qword_100103A20);
  uint64_t v49 = v122;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v122 + 48))(v21, 1, v48) == 1)
  {
    sub_100038E30((uint64_t)v21, &qword_100103A20);
  }
  else
  {
    uint64_t v50 = v108;
    (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v108, v21, v48);
    id v51 = ICTTAttributeNameTimestamp;
    sub_1000B6F90();
    uint64_t v130 = &type metadata for Double;
    *(double *)&long long v129 = v52 + a7;
    sub_100032FB8(&v129, v128);
    char v53 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v127 = v39;
    sub_10006B09C(v128, v51, v53);
    unint64_t v39 = v127;

    uint64_t v46 = v126;
    swift_bridgeObjectRelease();
    unint64_t v54 = v50;
    uint64_t v47 = v123;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v54, v48);
  }
  uint64_t v55 = v124;
  sub_100032FC8(v44 + v46[8], (uint64_t)v18, &qword_100104C80);
  uint64_t v56 = _s16AttributedStringV14ParagraphStyleVMa(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v56 - 8) + 48))(v18, 1, v56) == 1)
  {
    sub_100038E30((uint64_t)v18, &qword_100104C80);
    uint64_t v57 = -1;
    uint64_t v58 = (uint64_t)v116;
    switch(*(unsigned char *)(v44 + v46[11]))
    {
      case 1:
        uint64_t v57 = 0;
        goto LABEL_18;
      case 2:
        uint64_t v57 = 2;
        goto LABEL_18;
      case 3:
        uint64_t v57 = 1;
        goto LABEL_18;
      case 4:
        uint64_t v57 = 3;
        goto LABEL_18;
      case 5:
        break;
      default:
LABEL_18:
        uint64_t v61 = (void *)ICTTNSWritingDirectionAttributeName;
        uint64_t v130 = &type metadata for Int;
        *(void *)&long long v129 = v57;
        sub_100032FB8(&v129, v128);
        id v62 = v61;
        char v63 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v127 = v39;
        sub_10006B09C(v128, v62, v63);
        unint64_t v39 = v127;

        uint64_t v45 = v125;
        swift_bridgeObjectRelease();
        break;
    }
  }
  else
  {
    id v59 = sub_10009C140();
    sub_1000A00A0((uint64_t)v18, _s16AttributedStringV14ParagraphStyleVMa);
    uint64_t v60 = -1;
    uint64_t v58 = (uint64_t)v116;
    switch(*(unsigned char *)(v44 + v46[11]))
    {
      case 1:
        uint64_t v60 = 0;
        break;
      case 2:
        uint64_t v60 = 2;
        break;
      case 3:
        uint64_t v60 = 1;
        break;
      case 4:
        uint64_t v60 = 3;
        break;
      case 5:
        uint64_t v60 = [v59 writingDirection];
        break;
      default:
        break;
    }
    [v59 setWritingDirection:v60];
    id v64 = (void *)ICTTAttributeNameParagraphStyle;
    uint64_t v130 = (void *)sub_100038DC8(0, &qword_100104CB0);
    *(void *)&long long v129 = v59;
    sub_100032FB8(&v129, v128);
    id v65 = v64;
    id v66 = v59;
    char v67 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v127 = v39;
    sub_10006B09C(v128, v65, v67);
    unint64_t v39 = v127;

    swift_bridgeObjectRelease();
    uint64_t v45 = v125;
    uint64_t v46 = v126;
  }
  sub_100032FC8(v44 + v46[10], v58, (uint64_t *)&unk_1001042F0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v58, 1, v45) == 1)
  {
    sub_100038E30(v58, (uint64_t *)&unk_1001042F0);
  }
  else
  {
    id v68 = v109;
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 32))(v109, v58, v45);
    uint64_t v69 = v45;
    id v70 = ICTTNSLinkAttributeName;
    sub_1000B6E80(v71);
    uint64_t v73 = v72;
    uint64_t v130 = (void *)sub_100038DC8(0, &qword_100104CA8);
    *(void *)&long long v129 = v73;
    sub_100032FB8(&v129, v128);
    char v74 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v127 = v39;
    sub_10006B09C(v128, v70, v74);
    unint64_t v39 = v127;

    swift_bridgeObjectRelease();
    uint64_t v75 = v68;
    uint64_t v55 = v124;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v75, v69);
  }
  uint64_t v76 = v117;
  uint64_t v77 = *(char *)(v44 + v46[9]);
  if (v77 != 5)
  {
    unint64_t v78 = (void *)ICTTAttributeNameEmphasis;
    uint64_t v79 = qword_1000CF848[v77];
    uint64_t v130 = &type metadata for Int;
    *(void *)&long long v129 = v79;
    sub_100032FB8(&v129, v128);
    id v80 = v78;
    char v81 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v127 = v39;
    sub_10006B09C(v128, v80, v81);
    unint64_t v39 = v127;

    swift_bridgeObjectRelease();
  }
  __int16 v82 = (uint64_t *)(v44 + v46[12]);
  uint64_t v83 = v82[1];
  if (v83 && *(void *)(v76 + 16))
  {
    uint64_t v84 = *v82;
    swift_bridgeObjectRetain();
    unint64_t v85 = sub_10006A250(v84, v83);
    if (v86)
    {
      id v87 = *(id *)(*(void *)(v76 + 56) + 8 * v85);
      swift_bridgeObjectRelease();
      uint64_t v88 = (void *)ICTTNSAttachmentAttributeName;
      uint64_t v130 = (void *)sub_100038DC8(0, (unint64_t *)&qword_100103BD8);
      *(void *)&long long v129 = v87;
      sub_100032FB8(&v129, v128);
      id v89 = v87;
      id v90 = v88;
      char v91 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v127 = v39;
      sub_10006B09C(v128, v90, v91);
      unint64_t v39 = v127;

      uint64_t v46 = v126;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v92 = v119;
  uint64_t v93 = v118;
  sub_100032FC8(v44 + v46[13], v119, &qword_100104C78);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v92, 1, v93) == 1)
  {
    sub_100038E30(v92, &qword_100104C78);
  }
  else
  {
    sub_1000A0038(v92, v120, _s16AttributedStringV16InlineAttachmentVMa);
    uint64_t v94 = v121;
    unsigned int v95 = sub_10009D370(a7, v111, v112, v110 & 0x101, v113, v114);
    if (v94)
    {
      sub_1000A00A0(v120, _s16AttributedStringV16InlineAttachmentVMa);
      swift_bridgeObjectRelease();
    }
    else
    {
      int v96 = v95;
      id v97 = [v95 identifier];
      if (v97)
      {
        __int16 v98 = v97;
        sub_1000B75B0();
      }
      id v99 = [v96 typeUTI];
      if (v99)
      {
        uint64_t v100 = v99;
        sub_1000B75B0();
      }
      uint64_t v101 = sub_100038DC8(0, (unint64_t *)&qword_100103BD8);
      uint64_t v102 = (void *)sub_1000B7870();
      uint64_t v103 = (void *)ICTTNSAttachmentAttributeName;
      uint64_t v130 = (void *)v101;
      *(void *)&long long v129 = v102;
      sub_100032FB8(&v129, v128);
      id v104 = v103;
      id v105 = v102;
      char v106 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v127 = v39;
      sub_10006B09C(v128, v104, v106);
      unint64_t v39 = v127;

      swift_bridgeObjectRelease();
      sub_1000A00A0(v120, _s16AttributedStringV16InlineAttachmentVMa);
    }
  }
  return v39;
}

uint64_t sub_100099D98(char a1)
{
  if (a1) {
    return 0x7475626972747461;
  }
  else {
    return 1954047348;
  }
}

uint64_t sub_100099DCC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v11[0] = a4;
  uint64_t v6 = sub_100032E20(&qword_1001050F0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100047028(a1, a1[3]);
  sub_1000A8258();
  sub_1000B7EB0();
  char v13 = 0;
  sub_1000B7D10();
  if (!v4)
  {
    v11[1] = v11[0];
    char v12 = 1;
    sub_100032E20(&qword_1001050D8);
    sub_1000A82AC(&qword_1001050F8, &qword_100105100);
    sub_1000B7D50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_100099F9C()
{
  return sub_100099D98(*v0);
}

uint64_t sub_100099FA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000A6CE4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100099FCC(uint64_t a1)
{
  unint64_t v2 = sub_1000A8258();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10009A008(uint64_t a1)
{
  unint64_t v2 = sub_1000A8258();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10009A044@<X0>(uint64_t *a1@<X8>)
{
  return sub_10009A7D4((uint64_t (*)(void))sub_1000A6DC8, a1);
}

uint64_t sub_10009A070(void *a1)
{
  return sub_100099DCC(a1, *v1, v1[1], v1[2]);
}

CGColorRef sub_10009A090(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6 = (__CFString *)sub_1000B7580();
  uint64_t v7 = CGColorSpaceCreateWithName(v6);

  if (!v7)
  {
    if (qword_1001036D0 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_1000B7490();
    sub_100038E8C(v15, (uint64_t)qword_100104C60);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v16 = sub_1000B7480();
    os_log_type_t v17 = sub_1000B7850();
    if (os_log_type_enabled(v16, v17))
    {
      NSString v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = (void *)swift_slowAlloc();
      *(_DWORD *)NSString v18 = 136315138;
      swift_bridgeObjectRetain();
      sub_100069A50(a1, a2, (uint64_t *)&v27);
      sub_1000B79F0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Cannot create color space with name â€” returning nil {name: %s}", v18, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    return 0;
  }
  int64_t v8 = *(void *)(a3 + 16);
  uint64_t v9 = _swiftEmptyArrayStorage;
  if (v8)
  {
    uint64_t v27 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_100043880(0, v8, 0);
    uint64_t v10 = 0;
    uint64_t v9 = _swiftEmptyArrayStorage;
    unint64_t v11 = _swiftEmptyArrayStorage[2];
    do
    {
      uint64_t v12 = *(void *)(a3 + 8 * v10 + 32);
      uint64_t v27 = v9;
      unint64_t v13 = v9[3];
      if (v11 >= v13 >> 1)
      {
        sub_100043880(v13 > 1, v11 + 1, 1);
        uint64_t v9 = v27;
      }
      ++v10;
      v9[2] = v11 + 1;
      v9[v11++ + 4] = v12;
    }
    while (v8 != v10);
    swift_bridgeObjectRelease();
  }
  CGColorRef v14 = CGColorCreate(v7, (const CGFloat *)v9 + 4);
  swift_bridgeObjectRelease();
  if (!v14)
  {
    if (qword_1001036D0 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_1000B7490();
    sub_100038E8C(v19, (uint64_t)qword_100104C60);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v20 = sub_1000B7480();
    os_log_type_t v21 = sub_1000B7850();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v23 = sub_1000B76F0();
      unint64_t v25 = v24;
      swift_bridgeObjectRelease();
      sub_100069A50(v23, v25, (uint64_t *)&v27);
      sub_1000B79F0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Cannot create color with components â€” returning nil {components: %s}", v22, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    return 0;
  }

  return v14;
}

uint64_t sub_10009A50C(char a1)
{
  if (a1) {
    return 0x6E656E6F706D6F63;
  }
  else {
    return 0x6563617073;
  }
}

uint64_t sub_10009A544(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v11[0] = a4;
  uint64_t v6 = sub_100032E20(&qword_100104FA0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100047028(a1, a1[3]);
  sub_1000A7358();
  sub_1000B7EB0();
  char v13 = 0;
  sub_1000B7D10();
  if (!v4)
  {
    v11[1] = v11[0];
    char v12 = 1;
    sub_100032E20(&qword_100104F90);
    sub_1000A73AC(&qword_100104FA8);
    sub_1000B7D50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_10009A700()
{
  return sub_10009A50C(*v0);
}

uint64_t sub_10009A708@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000A7024(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10009A730(uint64_t a1)
{
  unint64_t v2 = sub_1000A7358();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10009A76C(uint64_t a1)
{
  unint64_t v2 = sub_1000A7358();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10009A7A8@<X0>(uint64_t *a1@<X8>)
{
  return sub_10009A7D4((uint64_t (*)(void))sub_1000A7110, a1);
}

uint64_t sub_10009A7D4@<X0>(uint64_t (*a1)(void)@<X3>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_10009A808(void *a1)
{
  return sub_10009A544(a1, *v1, v1[1], v1[2]);
}

void *sub_10009A828()
{
  uint64_t v1 = v0;
  uint64_t v43 = &_swiftEmptyDictionarySingleton;
  sub_10004EA80(v0 + 25, (uint64_t)&v50, &qword_100104CB8);
  sub_10004EA80((uint64_t)&v50, (uint64_t)&v51, &qword_100104CB8);
  int v2 = v51 & 1;
  sub_10004EA80(v0 + 26, (uint64_t)&v49, &qword_100104CB8);
  sub_10004EA80((uint64_t)&v49, (uint64_t)&v52, &qword_100104CB8);
  uint64_t v3 = v2 & 0xFFFFFFFD | (2 * (v52 & 1));
  if (*(void *)(v0 + 8))
  {
    sub_10004EA80(v0 + 16, (uint64_t)v48, &qword_100104CC0);
    sub_10004EA80((uint64_t)v48, (uint64_t)&v53, &qword_100104CC0);
    if (v54)
    {
      id v4 = objc_allocWithZone((Class)ICTTFont);
      swift_bridgeObjectRetain();
      NSString v5 = sub_1000B7580();
      swift_bridgeObjectRelease();
      id v6 = [v4 initWithName:v5 size:v3 hints:0.0];
    }
    else
    {
      double v10 = v53;
      id v11 = objc_allocWithZone((Class)ICTTFont);
      swift_bridgeObjectRetain();
      NSString v5 = sub_1000B7580();
      swift_bridgeObjectRelease();
      id v6 = [v11 initWithName:v5 size:v3 hints:v10];
    }
    char v12 = v6;

    char v13 = (void *)ICTTAttributeNameFont;
    if (!v12) {
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  sub_10004EA80(v0 + 16, (uint64_t)v48, &qword_100104CC0);
  sub_10004EA80((uint64_t)v48, (uint64_t)&v53, &qword_100104CC0);
  if (v54)
  {
    if (!v3) {
      goto LABEL_15;
    }
    uint64_t v7 = (void *)ICTTAttributeNameFontHints;
    id v42 = &type metadata for UInt32;
    LODWORD(v41) = v3;
    sub_100032FB8(&v41, v40);
    id v8 = v7;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    id v59 = &_swiftEmptyDictionarySingleton;
    sub_10006B09C(v40, v8, isUniquelyReferenced_nonNull_native);
    uint64_t v43 = v59;

    goto LABEL_13;
  }
  id v14 = [objc_allocWithZone((Class)ICTTFont) initWithName:0 size:v3 hints:v53];
  char v13 = (void *)ICTTAttributeNameFont;
  if (v14)
  {
    char v12 = v14;
LABEL_12:
    id v42 = (void *)sub_100038DC8(0, &qword_100104C98);
    *(void *)&long long v41 = v12;
    sub_100032FB8(&v41, v40);
    id v15 = v13;
    id v16 = v12;
    char v17 = swift_isUniquelyReferenced_nonNull_native();
    id v59 = &_swiftEmptyDictionarySingleton;
    sub_10006B09C(v40, v15, v17);
    uint64_t v43 = v59;

LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
LABEL_14:
  id v18 = v13;
  sub_100062BA8((uint64_t)v18, v40);

  sub_100038E30((uint64_t)v40, &qword_1001036F8);
LABEL_15:
  sub_10004EA80(v0 + 27, (uint64_t)&v47, &qword_100104CB8);
  sub_10004EA80((uint64_t)&v47, (uint64_t)&v55, &qword_100104CB8);
  if (v55)
  {
    uint64_t v19 = (void *)ICTTAttributeNameUnderline;
    id v42 = &type metadata for Bool;
    LOBYTE(v41) = 1;
    sub_100032FB8(&v41, v40);
    id v20 = v19;
    os_log_type_t v21 = v43;
    char v22 = swift_isUniquelyReferenced_nonNull_native();
    id v59 = v21;
    sub_10006B09C(v40, v20, v22);
    uint64_t v43 = v59;

    swift_bridgeObjectRelease();
  }
  sub_10004EA80(v1 + 28, (uint64_t)&v46, &qword_100104CB8);
  sub_10004EA80((uint64_t)&v46, (uint64_t)&v56, &qword_100104CB8);
  if (v56)
  {
    uint64_t v23 = (void *)ICTTAttributeNameStrikethrough;
    id v42 = &type metadata for Bool;
    LOBYTE(v41) = 1;
    sub_100032FB8(&v41, v40);
    id v24 = v23;
    unint64_t v25 = v43;
    char v26 = swift_isUniquelyReferenced_nonNull_native();
    id v59 = v25;
    sub_10006B09C(v40, v24, v26);
    uint64_t v43 = v59;

    swift_bridgeObjectRelease();
  }
  sub_10004EA80(v1 + 32, (uint64_t)v45, &qword_100104CC8);
  sub_10004EA80((uint64_t)v45, (uint64_t)&v57, &qword_100104CC8);
  if ((v58 & 1) == 0)
  {
    uint64_t v27 = (void *)ICTTAttributeNameSuperscript;
    id v42 = &type metadata for Int;
    *(void *)&long long v41 = v57;
    sub_100032FB8(&v41, v40);
    id v28 = v27;
    uint64_t v29 = v43;
    char v30 = swift_isUniquelyReferenced_nonNull_native();
    id v59 = v29;
    sub_10006B09C(v40, v28, v30);
    uint64_t v43 = v59;

    swift_bridgeObjectRelease();
  }
  sub_10004EA80(v1 + 48, (uint64_t)v44, &qword_100104CD0);
  sub_10004EA80((uint64_t)v44, (uint64_t)&v59, &qword_100104CD0);
  if (v60)
  {
    CGColorRef v31 = sub_10009A090((uint64_t)v59, v60, v61);
    if (v31)
    {
      CGColorRef v32 = v31;
      unint64_t v33 = (void *)ICTTAttributeNameForegroundColor;
      type metadata accessor for CGColor(0);
      id v42 = v34;
      *(void *)&long long v41 = v32;
      sub_100032FB8(&v41, v40);
      id v35 = v33;
      uint64_t v36 = v32;
      uint64_t v37 = v43;
      char v38 = swift_isUniquelyReferenced_nonNull_native();
      sub_10006B09C(v40, v35, v38);
      uint64_t v43 = v37;

      swift_bridgeObjectRelease();
    }
  }
  return v43;
}

uint64_t sub_10009ADC4(char a1)
{
  return *(void *)&aName_0[8 * a1];
}

uint64_t sub_10009ADE4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100032E20(&qword_1001050B8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100047028(a1, a1[3]);
  sub_1000A815C();
  sub_1000B7EB0();
  v11[0] = 0;
  sub_1000B7CC0();
  if (!v2)
  {
    v11[0] = 1;
    sub_1000B7CE0();
    v11[0] = 2;
    sub_1000B7CD0();
    v11[0] = 3;
    sub_1000B7CD0();
    v11[0] = 4;
    sub_1000B7CD0();
    v11[0] = 5;
    sub_1000B7CD0();
    v11[0] = 6;
    sub_1000B7CF0();
    sub_10004EA80(v3 + 48, (uint64_t)v12, &qword_100104CD0);
    sub_10004EA80((uint64_t)v12, (uint64_t)v11, &qword_100104CD0);
    v10[15] = 7;
    sub_1000A8204();
    sub_1000B7D00();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10009B074()
{
  return sub_10009ADC4(*v0);
}

uint64_t sub_10009B07C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000A7A60(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10009B0A4(uint64_t a1)
{
  unint64_t v2 = sub_1000A815C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10009B0E0(uint64_t a1)
{
  unint64_t v2 = sub_1000A815C();

  return CodingKey.debugDescription.getter(a1, v2);
}

__n128 sub_10009B11C@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1000A7D94(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(void *)(a2 + 64) = v7;
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_10009B170(void *a1)
{
  return sub_10009ADE4(a1);
}

uint64_t sub_10009B1B4(char a1)
{
  return *(void *)&aPurple_3[8 * a1];
}

uint64_t sub_10009B1D4(char *a1, char *a2)
{
  return sub_100039824(*a1, *a2);
}

Swift::Int sub_10009B1E0()
{
  return sub_10005CB38();
}

uint64_t sub_10009B1E8()
{
  return sub_10005D37C();
}

Swift::Int sub_10009B1F0()
{
  return sub_10005D48C();
}

uint64_t sub_10009B1F8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_1000EF3E8;
  uint64_t result = sub_1000A95B8(*(void *)a1, *(void **)(a1 + 8), v3);
  *a2 = result;
  return result;
}

uint64_t sub_10009B230@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10009B1B4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10009B25C()
{
  return sub_1000B76B0();
}

uint64_t sub_10009B2BC()
{
  return sub_1000B76A0();
}

uint64_t sub_10009B30C(char a1)
{
  return *(void *)&aTitle_7[8 * a1];
}

uint64_t sub_10009B32C(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_10009B30C(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_10009B30C(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1000B7DC0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_10009B3B8()
{
  char v1 = *v0;
  sub_1000B7E40();
  sub_10009B30C(v1);
  sub_1000B7620();
  swift_bridgeObjectRelease();
  return sub_1000B7E70();
}

uint64_t sub_10009B41C()
{
  sub_10009B30C(*v0);
  sub_1000B7620();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10009B470()
{
  char v1 = *v0;
  sub_1000B7E40();
  sub_10009B30C(v1);
  sub_1000B7620();
  swift_bridgeObjectRelease();
  return sub_1000B7E70();
}

uint64_t sub_10009B4D0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000A9110(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_10009B500@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10009B30C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10009B52C()
{
  return sub_1000B76B0();
}

uint64_t sub_10009B58C()
{
  return sub_1000B76A0();
}

uint64_t sub_10009B5DC(char a1)
{
  return *(void *)&aLeft_4[8 * a1];
}

uint64_t sub_10009B5FC(char *a1, char *a2)
{
  return sub_1000398AC(*a1, *a2);
}

Swift::Int sub_10009B608()
{
  return sub_10005CBA4();
}

uint64_t sub_10009B610()
{
  return sub_10005D3D0();
}

Swift::Int sub_10009B618()
{
  return sub_10005D424();
}

uint64_t sub_10009B620@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_1000EF590;
  uint64_t result = sub_1000A95B8(*(void *)a1, *(void **)(a1 + 8), v3);
  *a2 = result;
  return result;
}

uint64_t sub_10009B658@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10009B5DC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10009B684()
{
  return sub_1000B76B0();
}

uint64_t sub_10009B6E4()
{
  return sub_1000B76A0();
}

uint64_t sub_10009B734(char a1)
{
  if (a1) {
    return 0x656E6F447369;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_10009B76C(void *a1)
{
  uint64_t v3 = sub_100032E20(&qword_100104FC0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100047028(a1, a1[3]);
  sub_1000A7410();
  sub_1000B7EB0();
  v8[15] = 0;
  sub_1000B7030();
  sub_1000A7464(&qword_100103D80, (void (*)(uint64_t))&type metadata accessor for UUID);
  sub_1000B7D50();
  if (!v1)
  {
    _s16AttributedStringV13ChecklistItemVMa(0);
    v8[14] = 1;
    sub_1000B7D20();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_10009B920@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v4 = sub_1000B7030();
  uint64_t v23 = *(void *)(v4 - 8);
  uint64_t v24 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100032E20(&qword_100104FB0);
  uint64_t v22 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  char v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = _s16AttributedStringV13ChecklistItemVMa(0);
  __chkstk_darwin(v9);
  id v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100047028(a1, a1[3]);
  sub_1000A7410();
  sub_1000B7EA0();
  if (v2) {
    return sub_100037F98((uint64_t)a1);
  }
  id v20 = v11;
  uint64_t v12 = v22;
  uint64_t v13 = v23;
  char v27 = 0;
  sub_1000A7464(&qword_100103DF0, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v14 = v24;
  sub_1000B7CA0();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v20, v6, v14);
  char v26 = 1;
  char v15 = sub_1000B7C70();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v25);
  char v16 = v15 & 1;
  uint64_t v18 = (uint64_t)v20;
  uint64_t v17 = v21;
  v20[*(int *)(v9 + 20)] = v16;
  sub_1000A74AC(v18, v17, _s16AttributedStringV13ChecklistItemVMa);
  sub_100037F98((uint64_t)a1);
  return sub_1000A00A0(v18, _s16AttributedStringV13ChecklistItemVMa);
}

uint64_t sub_10009BC70()
{
  return sub_10009B734(*v0);
}

uint64_t sub_10009BC78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000A915C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10009BCA0(uint64_t a1)
{
  unint64_t v2 = sub_1000A7410();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10009BCDC(uint64_t a1)
{
  unint64_t v2 = sub_1000A7410();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10009BD18@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10009B920(a1, a2);
}

uint64_t sub_10009BD30(void *a1)
{
  return sub_10009B76C(a1);
}

uint64_t sub_10009BD48@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100032E20(&qword_100103BB0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100032E20(&qword_100104CA0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)_s16AttributedStringV14ParagraphStyleVMa(0);
  uint64_t v11 = a2 + v10[8];
  uint64_t v12 = _s16AttributedStringV13ChecklistItemVMa(0);
  uint64_t v13 = *(void *)(v12 - 8);
  id v35 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
  uint64_t v36 = v11;
  v34[1] = v13 + 56;
  v35(v11, 1, 1, v12);
  uint64_t v14 = a2 + v10[9];
  *(void *)uint64_t v14 = 0;
  *(unsigned char *)(v14 + 8) = 1;
  uint64_t v15 = a2 + v10[10];
  uint64_t v16 = sub_1000B7030();
  uint64_t v37 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v38 = v15;
  v37(v15, 1, 1, v16);
  char v17 = sub_10009FC84((int)[a1 style]);
  if (v17 == 10) {
    char v18 = 3;
  }
  else {
    char v18 = v17;
  }
  *(unsigned char *)a2 = v18;
  char v19 = sub_10009FE30((unint64_t)[a1 alignment]);
  if (v19 == 5) {
    char v20 = 4;
  }
  else {
    char v20 = v19;
  }
  *(unsigned char *)(a2 + 1) = v20;
  *(void *)(a2 + 8) = [a1 indent];
  if (sub_10009B30C(v18) == 0x44455245424D554ELL && v21 == 0xED00005453494C5FLL)
  {
    swift_bridgeObjectRelease();
LABEL_11:
    id v23 = [a1 startingItemNumber];
    char v24 = 0;
    goto LABEL_13;
  }
  char v22 = sub_1000B7DC0();
  swift_bridgeObjectRelease();
  if (v22) {
    goto LABEL_11;
  }
  id v23 = 0;
  char v24 = 1;
LABEL_13:
  *(void *)(a2 + 16) = v23;
  *(unsigned char *)(a2 + 24) = v24;
  id v25 = [a1 todo];
  if (v25)
  {
    id v26 = v25;
    id v27 = [v26 uuid];
    sub_1000B7010();

    LOBYTE(v27) = [v26 done];
    v9[*(int *)(v12 + 20)] = (char)v27;
    v35((uint64_t)v9, 0, 1, v12);
  }
  else
  {
    v35((uint64_t)v9, 1, 1, v12);
  }
  id v28 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v37;
  sub_10005613C((uint64_t)v9, v36, &qword_100104CA0);
  *(void *)uint64_t v14 = [a1 blockQuoteLevel];
  *(unsigned char *)(v14 + 8) = 0;
  id v29 = [a1 uuid];
  if (v29)
  {
    char v30 = v29;
    sub_1000B7010();

    uint64_t v31 = 0;
  }
  else
  {
    uint64_t v31 = 1;
  }
  uint64_t v32 = v38;

  v28(v6, v31, 1, v16);
  return sub_10005613C((uint64_t)v6, v32, &qword_100103BB0);
}

id sub_10009C140()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100032E20(&qword_100103BB0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100032E20(&qword_100104CA0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [self paragraphStyleNamed:dword_1000CFA30[*v1]];
  [v8 setAlignment:v1[1]];
  [v8 setIndent:*((void *)v1 + 1)];
  if (v1[24] == 1) {
    id v9 = [v8 startingItemNumber];
  }
  else {
    id v9 = (id)*((void *)v1 + 2);
  }
  [v8 setStartingItemNumber:v9];
  uint64_t v10 = (int *)_s16AttributedStringV14ParagraphStyleVMa(0);
  sub_100032FC8((uint64_t)&v1[v10[8]], (uint64_t)v7, &qword_100104CA0);
  uint64_t v11 = _s16AttributedStringV13ChecklistItemVMa(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v7, 1, v11) == 1)
  {
    sub_100038E30((uint64_t)v7, &qword_100104CA0);
    id v12 = 0;
  }
  else
  {
    uint64_t v13 = v7[*(int *)(v11 + 20)];
    id v14 = objc_allocWithZone((Class)ICTTTodo);
    Class isa = sub_1000B7000().super.isa;
    id v12 = [v14 initWithIdentifier:isa done:v13];

    sub_1000A00A0((uint64_t)v7, _s16AttributedStringV13ChecklistItemVMa);
  }
  [v8 setTodo:v12];

  uint64_t v16 = &v1[v10[9]];
  if (v16[8]) {
    uint64_t v17 = 0;
  }
  else {
    uint64_t v17 = *(void *)v16;
  }
  [v8 setBlockQuoteLevel:v17];
  sub_100032FC8((uint64_t)&v1[v10[10]], (uint64_t)v4, &qword_100103BB0);
  uint64_t v18 = sub_1000B7030();
  uint64_t v19 = *(void *)(v18 - 8);
  Class v20 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v4, 1, v18) != 1)
  {
    Class v20 = sub_1000B7000().super.isa;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v4, v18);
  }
  [v8 setUuid:v20];

  return v8;
}

unint64_t sub_10009C47C(char a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E656D6E67696C61;
      break;
    case 2:
      unint64_t result = 0x746E65646E69;
      break;
    case 3:
      return result;
    case 4:
      unint64_t result = 0x73696C6B63656863;
      break;
    case 5:
      unint64_t result = 0x6F75516B636F6C62;
      break;
    case 6:
      unint64_t result = 1684632949;
      break;
    default:
      unint64_t result = 1701667182;
      break;
  }
  return result;
}

uint64_t sub_10009C570(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100032E20(&qword_100104FF0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100047028(a1, a1[3]);
  sub_1000A7514();
  sub_1000B7EB0();
  v10[15] = *v3;
  v10[14] = 0;
  sub_1000A7610();
  sub_1000B7D50();
  if (!v2)
  {
    v10[13] = v3[1];
    v10[12] = 1;
    sub_1000A7664();
    sub_1000B7D50();
    v10[11] = 2;
    sub_1000B7D40();
    v10[10] = 3;
    sub_1000B7CF0();
    _s16AttributedStringV14ParagraphStyleVMa(0);
    v10[9] = 4;
    _s16AttributedStringV13ChecklistItemVMa(0);
    sub_1000A7464(&qword_100105008, (void (*)(uint64_t))_s16AttributedStringV13ChecklistItemVMa);
    sub_1000B7D00();
    _WORD v10[8] = 5;
    sub_1000B7CF0();
    v10[7] = 6;
    sub_1000B7030();
    sub_1000A7464(&qword_100103D80, (void (*)(uint64_t))&type metadata accessor for UUID);
    sub_1000B7D00();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10009C884@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v3 = sub_100032E20(&qword_100103BB0);
  __chkstk_darwin(v3 - 8);
  id v35 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100032E20(&qword_100104CA0);
  __chkstk_darwin(v5 - 8);
  uint64_t v37 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_100032E20(&qword_100104FC8);
  uint64_t v36 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  id v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = _s16AttributedStringV14ParagraphStyleVMa(0);
  uint64_t v10 = (int *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)v12 + 2) = 0;
  unsigned char v12[24] = 1;
  uint64_t v13 = (uint64_t)&v12[v10[10]];
  uint64_t v14 = _s16AttributedStringV13ChecklistItemVMa(0);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v40 = v13;
  v15(v13, 1, 1, v14);
  uint64_t v16 = &v12[v10[11]];
  *(void *)uint64_t v16 = 0;
  unsigned char v16[8] = 1;
  uint64_t v17 = (uint64_t)&v12[v10[12]];
  uint64_t v18 = sub_1000B7030();
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v39 = v17;
  v19(v17, 1, 1, v18);
  uint64_t v20 = a1[3];
  long long v41 = a1;
  sub_100047028(a1, v20);
  sub_1000A7514();
  uint64_t v21 = v42;
  sub_1000B7EA0();
  if (v21)
  {
    uint64_t v26 = v40;
    uint64_t v27 = v39;
    sub_100037F98((uint64_t)v41);
    sub_100038E30(v26, &qword_100104CA0);
    return sub_100038E30(v27, &qword_100103BB0);
  }
  else
  {
    id v42 = (uint64_t *)v16;
    uint64_t v23 = v36;
    uint64_t v22 = (uint64_t)v37;
    char v50 = 0;
    sub_1000A7568();
    uint64_t v24 = v38;
    sub_1000B7CA0();
    *id v12 = v51;
    char v48 = 1;
    sub_1000A75BC();
    sub_1000B7CA0();
    v12[1] = v49;
    char v47 = 2;
    *((void *)v12 + 1) = sub_1000B7C90();
    char v46 = 3;
    *((void *)v12 + 2) = sub_1000B7C40();
    unsigned char v12[24] = v25 & 1;
    char v45 = 4;
    sub_1000A7464(&qword_100104FE8, (void (*)(uint64_t))_s16AttributedStringV13ChecklistItemVMa);
    sub_1000B7C50();
    sub_10005613C(v22, v40, &qword_100104CA0);
    char v44 = 5;
    uint64_t v28 = sub_1000B7C40();
    id v29 = v42;
    *id v42 = v28;
    *((unsigned char *)v29 + 8) = v30 & 1;
    char v43 = 6;
    sub_1000A7464(&qword_100103DF0, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v31 = (uint64_t)v35;
    sub_1000B7C50();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v24);
    uint64_t v32 = (uint64_t)v41;
    sub_10005613C(v31, v39, &qword_100103BB0);
    sub_1000A74AC((uint64_t)v12, v34, _s16AttributedStringV14ParagraphStyleVMa);
    sub_100037F98(v32);
    return sub_1000A00A0((uint64_t)v12, _s16AttributedStringV14ParagraphStyleVMa);
  }
}

unint64_t sub_10009CE10()
{
  return sub_10009C47C(*v0);
}

uint64_t sub_10009CE18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000A9248(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10009CE40(uint64_t a1)
{
  unint64_t v2 = sub_1000A7514();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10009CE7C(uint64_t a1)
{
  unint64_t v2 = sub_1000A7514();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10009CEB8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10009C884(a1, a2);
}

uint64_t sub_10009CED0(void *a1)
{
  return sub_10009C570(a1);
}

unint64_t sub_10009CEE8(char a1)
{
  unint64_t result = 0xD000000000000016;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x5F4F545F5446454CLL;
      break;
    case 2:
    case 4:
      return result;
    case 3:
      unint64_t result = 0x4F545F5448474952;
      break;
    default:
      unint64_t result = 0x4C41525554414ELL;
      break;
  }
  return result;
}

uint64_t sub_10009CFB0(unsigned __int8 *a1, char *a2)
{
  return sub_10003963C(*a1, *a2);
}

Swift::Int sub_10009CFBC()
{
  return sub_10005CC10();
}

uint64_t sub_10009CFC4()
{
  return sub_10005D280();
}

Swift::Int sub_10009CFCC()
{
  return sub_10005D4F4();
}

uint64_t sub_10009CFD4()
{
  return sub_1000B76B0();
}

uint64_t sub_10009D034()
{
  return sub_1000B76A0();
}

uint64_t sub_10009D084@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_1000EF628;
  uint64_t result = sub_1000A95B8(*(void *)a1, *(void **)(a1 + 8), v3);
  *a2 = result;
  return result;
}

unint64_t sub_10009D0BC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_10009CEE8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10009D0E8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_100032E20(&qword_100103A20);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (int *)_s16AttributedStringV16InlineAttachmentVMa(0);
  uint64_t v8 = (uint64_t)a2 + v7[6];
  uint64_t v9 = sub_1000B6FD0();
  uint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
  uint64_t v37 = v8;
  v36(v8, 1, 1, v9);
  uint64_t v10 = (uint64_t *)((char *)a2 + v7[7]);
  uint64_t *v10 = 0;
  v10[1] = 0;
  uint64_t v11 = (uint64_t *)((char *)a2 + v7[8]);
  uint64_t *v11 = 0;
  v11[1] = 0;
  id v12 = [a1 typeUTI];
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = sub_1000B75B0();
    uint64_t v16 = v15;
  }
  else
  {
    uint64_t v14 = 0;
    uint64_t v16 = 0;
  }
  *a2 = v14;
  a2[1] = v16;
  id v17 = [a1 identifier];
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v19 = sub_1000B75B0();
    unint64_t v21 = v20;
  }
  else
  {
    uint64_t v19 = 0;
    unint64_t v21 = 0xE000000000000000;
  }
  a2[2] = v19;
  a2[3] = v21;
  id v22 = [a1 creationDate];
  if (v22)
  {
    uint64_t v23 = v22;
    sub_1000B6FA0();

    uint64_t v24 = 0;
  }
  else
  {
    uint64_t v24 = 1;
  }
  v36((uint64_t)v6, v24, 1, v9);
  sub_10005613C((uint64_t)v6, v37, &qword_100103A20);
  id v25 = [a1 tokenContentIdentifier];
  if (v25)
  {
    uint64_t v26 = v25;
    uint64_t v27 = sub_1000B75B0();
    uint64_t v29 = v28;
  }
  else
  {
    uint64_t v27 = 0;
    uint64_t v29 = 0;
  }
  swift_bridgeObjectRelease();
  uint64_t *v10 = v27;
  v10[1] = v29;
  id v30 = [a1 altText];
  if (v30)
  {
    uint64_t v31 = v30;
    uint64_t v32 = sub_1000B75B0();
    uint64_t v34 = v33;
  }
  else
  {

    uint64_t v32 = 0;
    uint64_t v34 = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t *v11 = v32;
  v11[1] = v34;
  return result;
}

void *sub_10009D370(double a1, uint64_t a2, uint64_t a3, __int16 a4, uint64_t a5, char *a6)
{
  uint64_t v40 = a6;
  uint64_t v11 = sub_100032E20(&qword_100103A20);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000B6FD0();
  uint64_t v39 = *(void *)(v14 - 8);
  uint64_t v15 = __chkstk_darwin(v14);
  id v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v38 - v18;
  uint64_t ObjectType = swift_getObjectType();
  unint64_t v21 = v41;
  id v22 = (void *)(*(uint64_t (**)(void, void, void, uint64_t, char *, uint64_t, uint64_t, double))(a3 + 48))(v6[2], v6[3], a4 & 0x101, a5, v40, ObjectType, a3, a1);
  uint64_t v23 = v22;
  if (!v21)
  {
    uint64_t v40 = v17;
    long long v41 = v19;
    uint64_t v24 = v39;
    NSString v25 = (NSString)v6[1];
    id v26 = v22;
    if (v25) {
      NSString v25 = sub_1000B7580();
    }
    [v23 setTypeUTI:v25];

    uint64_t v27 = (int *)_s16AttributedStringV16InlineAttachmentVMa(0);
    sub_100032FC8((uint64_t)v6 + v27[6], (uint64_t)v13, &qword_100103A20);
    uint64_t v28 = v14;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v13, 1, v14) == 1)
    {
      uint64_t v29 = v40;
      sub_1000B6FC0();
      sub_100038E30((uint64_t)v13, &qword_100103A20);
    }
    else
    {
      uint64_t v29 = v40;
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v40, v13, v28);
    }
    id v30 = v41;
    sub_1000B6F70();
    uint64_t v31 = *(void (**)(char *, uint64_t))(v24 + 8);
    v31(v29, v28);
    v32.super.Class isa = sub_1000B6F60().super.isa;
    uint64_t v33 = v28;
    Class isa = v32.super.isa;
    v31(v30, v33);
    [v23 setCreationDate:isa];

    if (*(void *)((char *)v6 + v27[7] + 8)) {
      NSString v35 = sub_1000B7580();
    }
    else {
      NSString v35 = 0;
    }
    [v23 setTokenContentIdentifier:v35];

    if (*(void *)((char *)v6 + v27[8] + 8)) {
      NSString v36 = sub_1000B7580();
    }
    else {
      NSString v36 = 0;
    }
    [v23 setAltText:v36];
  }
  return v23;
}

unint64_t sub_10009D6CC(char a1)
{
  unint64_t result = 0xD000000000000018;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x696669746E656469;
      break;
    case 2:
      unint64_t result = 0x4164657461657263;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0x74786554746C61;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10009D790(void *a1)
{
  uint64_t v3 = sub_100032E20(&qword_100105020);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100047028(a1, a1[3]);
  sub_1000A76B8();
  sub_1000B7EB0();
  v8[15] = 0;
  sub_1000B7CC0();
  if (!v1)
  {
    v8[14] = 1;
    sub_1000B7D10();
    _s16AttributedStringV16InlineAttachmentVMa(0);
    v8[13] = 2;
    sub_1000B6FD0();
    sub_1000A7464(&qword_100103D40, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_1000B7D00();
    v8[12] = 3;
    sub_1000B7CC0();
    v8[11] = 4;
    sub_1000B7CC0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_10009D9D4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v3 = sub_100032E20(&qword_100103A20);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_100032E20(&qword_100105010);
  uint64_t v35 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = _s16AttributedStringV16InlineAttachmentVMa(0);
  uint64_t v9 = (int *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (uint64_t *)((char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t *v11 = 0;
  v11[1] = 0;
  uint64_t v12 = (char *)v11 + v9[8];
  uint64_t v13 = sub_1000B6FD0();
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
  uint64_t v40 = (uint64_t)v12;
  v14(v12, 1, 1, v13);
  uint64_t v15 = (uint64_t *)((char *)v11 + v9[9]);
  uint64_t *v15 = 0;
  v15[1] = 0;
  uint64_t v16 = v15;
  id v17 = (uint64_t *)((char *)v11 + v9[10]);
  *id v17 = 0;
  v17[1] = 0;
  uint64_t v38 = v17;
  uint64_t v39 = a1;
  sub_100047028(a1, a1[3]);
  sub_1000A76B8();
  NSString v36 = v7;
  uint64_t v18 = v41;
  sub_1000B7EA0();
  if (v18)
  {
    uint64_t v20 = v40;
    sub_100037F98((uint64_t)v39);
    swift_bridgeObjectRelease();
    sub_100038E30(v20, &qword_100103A20);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = v35;
    char v46 = 0;
    uint64_t *v11 = sub_1000B7C10();
    v11[1] = v21;
    char v45 = 1;
    uint64_t v22 = sub_1000B7C60();
    uint64_t v23 = v40;
    void v11[2] = v22;
    v11[3] = v24;
    char v44 = 2;
    sub_1000A7464(&qword_100103DB8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_1000B7C50();
    sub_10005613C((uint64_t)v5, v23, &qword_100103A20);
    char v43 = 3;
    uint64_t v25 = sub_1000B7C10();
    uint64_t v27 = v26;
    swift_bridgeObjectRelease();
    uint64_t *v16 = v25;
    v16[1] = v27;
    char v42 = 4;
    uint64_t v28 = sub_1000B7C10();
    uint64_t v29 = v38;
    uint64_t v30 = v28;
    uint64_t v32 = v31;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v36, v37);
    swift_bridgeObjectRelease();
    uint64_t *v29 = v30;
    v29[1] = v32;
    sub_1000A74AC((uint64_t)v11, v34, _s16AttributedStringV16InlineAttachmentVMa);
    sub_100037F98((uint64_t)v39);
    return sub_1000A00A0((uint64_t)v11, _s16AttributedStringV16InlineAttachmentVMa);
  }
}

unint64_t sub_10009DE34()
{
  return sub_10009D6CC(*v0);
}

uint64_t sub_10009DE3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000A9600(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10009DE64(uint64_t a1)
{
  unint64_t v2 = sub_1000A76B8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10009DEA0(uint64_t a1)
{
  unint64_t v2 = sub_1000A76B8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10009DEDC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10009D9D4(a1, a2);
}

uint64_t sub_10009DEF4(void *a1)
{
  return sub_10009D790(a1);
}

uint64_t sub_10009DF0C(char a1)
{
  if (a1) {
    return 0x6874676E656CLL;
  }
  else {
    return 0x7441737472617473;
  }
}

uint64_t sub_10009DF40(void *a1)
{
  uint64_t v3 = sub_100032E20(&qword_100105200);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100047028(a1, a1[3]);
  sub_1000A9E6C();
  sub_1000B7EB0();
  char v10 = 0;
  sub_1000B7D40();
  if (!v1)
  {
    char v9 = 1;
    sub_1000B7D40();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_10009E0A8()
{
  return sub_10009DF0C(*v0);
}

uint64_t sub_10009E0B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000A9818(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10009E0D8(uint64_t a1)
{
  unint64_t v2 = sub_1000A9E6C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10009E114(uint64_t a1)
{
  unint64_t v2 = sub_1000A9E6C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10009E150@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1000A98FC(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_10009E17C(void *a1)
{
  return sub_10009DF40(a1);
}

unint64_t sub_10009E198(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
    case 7:
    case 9:
      return result;
    case 2:
      unint64_t result = 0x6D617473656D6974;
      break;
    case 3:
      unint64_t result = 1953394534;
      break;
    case 4:
      unint64_t result = 0x7061726761726170;
      break;
    case 5:
      unint64_t result = 0x7369736168706D65;
      break;
    case 6:
      unint64_t result = 1802398060;
      break;
    case 8:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      unint64_t result = 0x65676E6172;
      break;
  }
  return result;
}

uint64_t sub_10009E2C8(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100032E20(&qword_100105068);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100047028(a1, a1[3]);
  sub_1000A770C();
  sub_1000B7EB0();
  v15[0] = *v3;
  char v17 = 0;
  sub_1000A7910();
  sub_1000B7D50();
  if (!v2)
  {
    char v9 = (int *)_s16AttributedStringV9AttributeVMa(0);
    LOBYTE(v15[0]) = 1;
    sub_1000B7030();
    sub_1000A7464(&qword_100103D80, (void (*)(uint64_t))&type metadata accessor for UUID);
    sub_1000B7D00();
    LOBYTE(v15[0]) = 2;
    sub_1000B6FD0();
    sub_1000A7464(&qword_100103D40, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_1000B7D00();
    char v10 = (char *)v3 + v9[7];
    uint64_t v11 = *((void *)v10 + 8);
    long long v12 = *((_OWORD *)v10 + 1);
    v15[0] = *(_OWORD *)v10;
    v15[1] = v12;
    long long v13 = *((_OWORD *)v10 + 3);
    v15[2] = *((_OWORD *)v10 + 2);
    v15[3] = v13;
    uint64_t v16 = v11;
    char v17 = 3;
    sub_1000A7964();
    sub_1000B7D00();
    LOBYTE(v15[0]) = 4;
    _s16AttributedStringV14ParagraphStyleVMa(0);
    sub_1000A7464(&qword_100105080, (void (*)(uint64_t))_s16AttributedStringV14ParagraphStyleVMa);
    sub_1000B7D00();
    LOBYTE(v15[0]) = *((unsigned char *)v3 + v9[9]);
    char v17 = 5;
    sub_1000A79B8();
    sub_1000B7D00();
    LOBYTE(v15[0]) = 6;
    sub_1000B6F10();
    sub_1000A7464(&qword_1001046A8, (void (*)(uint64_t))&type metadata accessor for URL);
    sub_1000B7D00();
    LOBYTE(v15[0]) = *((unsigned char *)v3 + v9[11]);
    char v17 = 7;
    sub_1000A7A0C();
    sub_1000B7D00();
    LOBYTE(v15[0]) = 8;
    sub_1000B7CC0();
    LOBYTE(v15[0]) = 9;
    _s16AttributedStringV16InlineAttachmentVMa(0);
    sub_1000A7464(&qword_100105098, (void (*)(uint64_t))_s16AttributedStringV16InlineAttachmentVMa);
    sub_1000B7D00();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10009E78C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v78 = a1;
  uint64_t v59 = a2;
  uint64_t v2 = sub_100032E20(&qword_100104C78);
  __chkstk_darwin(v2 - 8);
  uint64_t v60 = (uint64_t)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100032E20((uint64_t *)&unk_1001042F0);
  __chkstk_darwin(v4 - 8);
  id v62 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100032E20(&qword_100104C80);
  __chkstk_darwin(v6 - 8);
  id v68 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100032E20(&qword_100103A20);
  __chkstk_darwin(v8 - 8);
  *(void *)&long long v67 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100032E20(&qword_100103BB0);
  __chkstk_darwin(v10 - 8);
  *(void *)&long long v66 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_100032E20(&qword_100105028);
  uint64_t v65 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v77 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = _s16AttributedStringV9AttributeVMa(0);
  uint64_t v14 = (int *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (uint64_t)&v16[v14[7]];
  uint64_t v18 = sub_1000B7030();
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v70 = v17;
  *(void *)&long long v64 = v18;
  v19(v17, 1, 1);
  uint64_t v20 = (uint64_t)&v16[v14[8]];
  uint64_t v21 = sub_1000B6FD0();
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
  uint64_t v76 = v20;
  *(void *)&long long v63 = v21;
  v22(v20, 1, 1);
  uint64_t v23 = (uint64_t *)&v16[v14[9]];
  *(_OWORD *)uint64_t v23 = xmmword_1000CCA80;
  *((_OWORD *)v23 + 1) = 0u;
  *((_OWORD *)v23 + 2) = 0u;
  *((_OWORD *)v23 + 3) = 0u;
  v23[8] = 0;
  uint64_t v24 = (uint64_t)&v16[v14[10]];
  uint64_t v25 = _s16AttributedStringV14ParagraphStyleVMa(0);
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
  uint64_t v75 = v24;
  v26(v24, 1, 1, v25);
  uint64_t v61 = v14[11];
  v16[v61] = 5;
  uint64_t v27 = (uint64_t)&v16[v14[12]];
  uint64_t v28 = sub_1000B6F10();
  uint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56);
  uint64_t v74 = v27;
  v29(v27, 1, 1, v28);
  uint64_t v30 = v14[13];
  v16[v30] = 5;
  uint64_t v31 = &v16[v14[14]];
  *(void *)uint64_t v31 = 0;
  *((void *)v31 + 1) = 0;
  uint64_t v73 = v31;
  uint64_t v32 = (uint64_t)&v16[v14[15]];
  uint64_t v33 = _s16AttributedStringV16InlineAttachmentVMa(0);
  uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56);
  uint64_t v71 = v32;
  v34(v32, 1, 1, v33);
  sub_100047028(v78, v78[3]);
  sub_1000A770C();
  uint64_t v35 = v72;
  sub_1000B7EA0();
  if (v35)
  {
    uint64_t v40 = v70;
    uint64_t v41 = v76;
    sub_100037F98((uint64_t)v78);
    sub_100038E30(v40, &qword_100103BB0);
    sub_100038E30(v41, &qword_100103A20);
    sub_1000A7760(*v23, v23[1], v23[2], v23[3], v23[4], v23[5], v23[6], v23[7]);
    sub_100038E30(v75, &qword_100104C80);
    sub_100038E30(v74, (uint64_t *)&unk_1001042F0);
    swift_bridgeObjectRelease();
    return sub_100038E30(v71, &qword_100104C78);
  }
  else
  {
    uint64_t v36 = v66;
    uint64_t v72 = v25;
    char v58 = v16;
    uint64_t v37 = v67;
    uint64_t v57 = v28;
    uint64_t v56 = v30;
    uint64_t v55 = v33;
    uint64_t v38 = (uint64_t)v68;
    uint64_t v39 = v65;
    char v84 = 0;
    sub_1000A77C0();
    sub_1000B7CA0();
    _OWORD *v58 = v79;
    LOBYTE(v79) = 1;
    sub_1000A7464(&qword_100103DF0, (void (*)(uint64_t))&type metadata accessor for UUID);
    sub_1000B7C50();
    sub_10005613C(v36, v70, &qword_100103BB0);
    LOBYTE(v79) = 2;
    sub_1000A7464(&qword_100103DB8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_1000B7C50();
    sub_10005613C(v37, v76, &qword_100103A20);
    char v84 = 3;
    sub_1000A7814();
    sub_1000B7C50();
    long long v67 = v79;
    long long v66 = v80;
    long long v64 = v81;
    long long v63 = v82;
    uint64_t v42 = v83;
    sub_1000A7760(*v23, v23[1], v23[2], v23[3], v23[4], v23[5], v23[6], v23[7]);
    long long v43 = v66;
    *(_OWORD *)uint64_t v23 = v67;
    *((_OWORD *)v23 + 1) = v43;
    long long v44 = v63;
    *((_OWORD *)v23 + 2) = v64;
    *((_OWORD *)v23 + 3) = v44;
    v23[8] = v42;
    LOBYTE(v79) = 4;
    sub_1000A7464(&qword_100105048, (void (*)(uint64_t))_s16AttributedStringV14ParagraphStyleVMa);
    sub_1000B7C50();
    sub_10005613C(v38, v75, &qword_100104C80);
    char v84 = 5;
    sub_1000A7868();
    sub_1000B7C50();
    *((unsigned char *)v58 + v61) = v79;
    LOBYTE(v79) = 6;
    sub_1000A7464(&qword_100104700, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v45 = (uint64_t)v62;
    sub_1000B7C50();
    sub_10005613C(v45, v74, (uint64_t *)&unk_1001042F0);
    char v84 = 7;
    sub_1000A78BC();
    sub_1000B7C50();
    char v46 = v78;
    *((unsigned char *)v58 + v56) = v79;
    LOBYTE(v79) = 8;
    uint64_t v47 = sub_1000B7C10();
    uint64_t v49 = v48;
    char v50 = (uint64_t *)v73;
    swift_bridgeObjectRelease();
    uint64_t *v50 = v47;
    v50[1] = v49;
    LOBYTE(v79) = 9;
    sub_1000A7464(&qword_100105060, (void (*)(uint64_t))_s16AttributedStringV16InlineAttachmentVMa);
    uint64_t v51 = v69;
    char v52 = v77;
    sub_1000B7C50();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v52, v51);
    sub_10005613C(v60, v71, &qword_100104C78);
    double v53 = v58;
    sub_1000A74AC((uint64_t)v58, v59, _s16AttributedStringV9AttributeVMa);
    sub_100037F98((uint64_t)v46);
    return sub_1000A00A0((uint64_t)v53, _s16AttributedStringV9AttributeVMa);
  }
}

unint64_t sub_10009F2E0()
{
  return sub_10009E198(*v0);
}

uint64_t sub_10009F2E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000A9AA0(a1, a2);
  *a3 = result;
  return result;
}

void sub_10009F310(unsigned char *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_10009F31C(uint64_t a1)
{
  unint64_t v2 = sub_1000A770C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10009F358(uint64_t a1)
{
  unint64_t v2 = sub_1000A770C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10009F394@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10009E78C(a1, a2);
}

uint64_t sub_10009F3AC(void *a1)
{
  return sub_10009E2C8(a1);
}

id sub_10009F3C4(void *a1, void *a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a3 + 49);
  id result = [a1 attributedString];
  uint64_t v8 = result;
  if ((v6 & 1) == 0)
  {
    if (!result)
    {
LABEL_11:
      __break(1u);
      goto LABEL_12;
    }
    id v9 = [objc_allocWithZone((Class)NSMutableAttributedString) initWithAttributedString:result];

    id v10 = ICTTAttributeNameReplicaID;
    id v11 = [v9 ic_range];
    [v9 removeAttribute:v10 range:v11 v12];

    id v13 = ICTTAttributeNameTimestamp;
    id v14 = [v9 ic_range];
    [v9 removeAttribute:v13 range:v14 v15];

    id v16 = v9;
    id v17 = [a2 managedObjectContext];
    char v18 = *(unsigned char *)(a3 + 52);
    double v53 = _swiftEmptyArrayStorage;
    id v19 = [v16 string];
    uint64_t v20 = sub_1000B75B0();
    uint64_t v22 = v21;

    uint64_t v51 = v20;
    uint64_t v52 = v22;
    id v23 = [v16 ic_range];
    uint64_t v25 = v24;
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = &v51;
    *(void *)(v26 + 24) = v17;
    *(unsigned char *)(v26 + 32) = v18;
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = sub_10009F8D4;
    *(void *)(v27 + 24) = v26;
    uint64_t v49 = sub_10009F8F0;
    uint64_t v50 = v27;
    aBlocid k = _NSConcreteStackBlock;
    uint64_t v46 = 1107296256;
    uint64_t v47 = sub_100098BFC;
    uint64_t v48 = &unk_1000F1558;
    uint64_t v28 = _Block_copy(&aBlock);
    id v29 = v17;
    swift_retain();
    swift_release();
    [v16 enumerateAttributesInRange:v23 options:v25 usingBlock:v28];

    _Block_release(v28);
    LOBYTE(v29) = swift_isEscapingClosureAtFileLocation();
    id result = (id)swift_release();
    if ((v29 & 1) == 0)
    {
      uint64_t v30 = v51;

LABEL_8:
      swift_release();
      return (id)v30;
    }
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (result)
  {
    [result ic_range];

    uint64_t v31 = sub_1000B79B0();
    id v32 = [a2 managedObjectContext];
    char v33 = *(unsigned char *)(a3 + 52);
    double v53 = _swiftEmptyArrayStorage;
    id v34 = [(id)v31 string];
    uint64_t v35 = sub_1000B75B0();
    uint64_t v37 = v36;

    uint64_t v51 = v35;
    uint64_t v52 = v37;
    id v38 = [v31 ic_range];
    uint64_t v40 = v39;
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 16) = &v51;
    *(void *)(v41 + 24) = v32;
    *(unsigned char *)(v41 + 32) = v33;
    uint64_t v42 = swift_allocObject();
    *(void *)(v42 + 16) = sub_1000AA174;
    *(void *)(v42 + 24) = v41;
    uint64_t v49 = sub_1000AA178;
    uint64_t v50 = v42;
    aBlocid k = _NSConcreteStackBlock;
    uint64_t v46 = 1107296256;
    uint64_t v47 = sub_100098BFC;
    uint64_t v48 = &unk_1000F15D0;
    long long v43 = _Block_copy(&aBlock);
    id v44 = v32;
    swift_retain();
    swift_release();
    [v31 enumerateAttributesInRange:v38 options:v40 usingBlock:v43];

    _Block_release(v43);
    LOBYTE(v31) = swift_isEscapingClosureAtFileLocation();
    id result = (id)swift_release();
    if ((v31 & 1) == 0)
    {
      uint64_t v30 = v51;
      goto LABEL_8;
    }
    goto LABEL_10;
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_10009F89C()
{
  return _swift_deallocObject(v0, 33, 7);
}

uint64_t sub_10009F8D4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_100097094(a1, a2, a3, a4, *(void *)(v4 + 16), *(void **)(v4 + 24), *(unsigned __int8 *)(v4 + 32));
}

uint64_t sub_10009F8E0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10009F8F0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10009F918(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10009F928()
{
  return swift_release();
}

uint64_t sub_10009F930()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t _s16AttributedStringV9AttributeVMa(uint64_t a1)
{
  return sub_100094388(a1, (uint64_t *)&unk_100104F18);
}

uint64_t _s16AttributedStringV14ParagraphStyleVMa(uint64_t a1)
{
  return sub_100094388(a1, (uint64_t *)&unk_100104DC0);
}

uint64_t _s16AttributedStringV16InlineAttachmentVMa(uint64_t a1)
{
  return sub_100094388(a1, qword_100104E78);
}

uint64_t sub_10009F9A0(CGColor *a1)
{
  uint64_t v2 = CGColorGetColorSpace(a1);
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = (__CFString *)CGColorSpaceCopyName(v2);

    if (v4)
    {
      uint64_t v5 = sub_1000B7810();
      if (v5)
      {
        uint64_t v6 = v5;
        int64_t v7 = *(void *)(v5 + 16);
        if (v7)
        {
          uint64_t v22 = _swiftEmptyArrayStorage;
          sub_1000439E0(0, v7, 0);
          uint64_t v8 = 0;
          id v9 = _swiftEmptyArrayStorage;
          unint64_t v10 = _swiftEmptyArrayStorage[2];
          do
          {
            uint64_t v11 = *(void *)(v6 + 8 * v8 + 32);
            uint64_t v22 = v9;
            unint64_t v12 = v9[3];
            if (v10 >= v12 >> 1)
            {
              sub_1000439E0(v12 > 1, v10 + 1, 1);
              id v9 = v22;
            }
            ++v8;
            v9[2] = v10 + 1;
            v9[v10++ + 4] = v11;
          }
          while (v7 != v8);
        }
        swift_bridgeObjectRelease();
        uint64_t v20 = sub_1000B75B0();

        return v20;
      }
    }
  }
  if (qword_1001036D0 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_1000B7490();
  sub_100038E8C(v13, (uint64_t)qword_100104C60);
  id v14 = a1;
  uint64_t v15 = sub_1000B7480();
  os_log_type_t v16 = sub_1000B7850();
  if (os_log_type_enabled(v15, v16))
  {
    id v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = (void *)swift_slowAlloc();
    *(_DWORD *)id v17 = 136315138;
    type metadata accessor for CGColor(0);
    id v14 = v14;
    uint64_t v18 = sub_1000B75F0();
    sub_100069A50(v18, v19, (uint64_t *)&v22);
    sub_1000B79F0();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Cannot create color from CGColor â€” returning nil {cgColor: %s}", v17, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  return 0;
}

uint64_t sub_10009FC84(int a1)
{
  uint64_t result = 0;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      uint64_t result = 1;
      break;
    case 2:
      uint64_t result = 2;
      break;
    case 3:
      uint64_t result = 3;
      break;
    case 4:
      uint64_t result = 5;
      break;
    case 5:
      uint64_t result = 4;
      break;
    default:
      switch(a1)
      {
        case 'd':
          uint64_t result = 6;
          break;
        case 'e':
          uint64_t result = 7;
          break;
        case 'f':
          uint64_t result = 8;
          break;
        case 'g':
          uint64_t result = 9;
          break;
        default:
          if (qword_1001036D0 != -1) {
            swift_once();
          }
          uint64_t v4 = sub_1000B7490();
          sub_100038E8C(v4, (uint64_t)qword_100104C60);
          uint64_t v5 = sub_1000B7480();
          os_log_type_t v6 = sub_1000B7860();
          if (os_log_type_enabled(v5, v6))
          {
            int64_t v7 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)int64_t v7 = 0;
            _os_log_impl((void *)&_mh_execute_header, v5, v6, "Unknown named paragraph style â€” returning nil", v7, 2u);
            swift_slowDealloc();
          }

          uint64_t result = 10;
          break;
      }
      break;
  }
  return result;
}

unint64_t sub_10009FE30(unint64_t result)
{
  if (result >= 5)
  {
    if (qword_1001036D0 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_1000B7490();
    sub_100038E8C(v1, (uint64_t)qword_100104C60);
    uint64_t v2 = sub_1000B7480();
    os_log_type_t v3 = sub_1000B7860();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "Unknown text alignment â€” returning nil", v4, 2u);
      swift_slowDealloc();
    }

    return 5;
  }
  return result;
}

unint64_t sub_10009FF18(unint64_t a1)
{
  if (a1 < 6) {
    return 0x40302010005uLL >> (8 * a1);
  }
  if (qword_1001036D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000B7490();
  sub_100038E8C(v2, (uint64_t)qword_100104C60);
  os_log_type_t v3 = sub_1000B7480();
  os_log_type_t v4 = sub_1000B7860();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Unknown emphasis color type â€” returning nil", v5, 2u);
    swift_slowDealloc();
  }

  return 5;
}

uint64_t _s16AttributedStringV13ChecklistItemVMa(uint64_t a1)
{
  return sub_100094388(a1, qword_100104D30);
}

uint64_t sub_1000A0038(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000A00A0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t *sub_1000A0100(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

__n128 _s16AttributedStringV5ColorVwtk(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

ValueMetadata *_s16AttributedStringV5ColorVMa()
{
  return &_s16AttributedStringV5ColorVN;
}

void *sub_1000A01A0(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1000B7030();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_1000A026C(uint64_t a1)
{
  uint64_t v2 = sub_1000B7030();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_1000A02D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B7030();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1000A034C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B7030();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1000A03C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B7030();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1000A0444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B7030();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1000A04C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000A04D4);
}

uint64_t sub_1000A04D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B7030();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_1000A05A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000A05B8);
}

uint64_t sub_1000A05B8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000B7030();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  return result;
}

uint64_t sub_1000A0674()
{
  uint64_t result = sub_1000B7030();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1000A0708(uint64_t a1, uint64_t *a2, int *a3)
{
  os_log_type_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    void *v4 = *a2;
    os_log_type_t v4 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    uint64_t v7 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v7;
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v8 = a3[8];
    uint64_t v9 = (void *)(a1 + v8);
    unsigned int v10 = (char *)a2 + v8;
    uint64_t v11 = _s16AttributedStringV13ChecklistItemVMa(0);
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      uint64_t v13 = sub_100032E20(&qword_100104CA0);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      uint64_t v15 = sub_1000B7030();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v9, v10, v15);
      *((unsigned char *)v9 + *(int *)(v11 + 20)) = v10[*(int *)(v11 + 20)];
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[9];
    uint64_t v17 = a3[10];
    uint64_t v18 = (char *)v4 + v16;
    uint64_t v19 = (uint64_t)a2 + v16;
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = *(unsigned char *)(v19 + 8);
    uint64_t v20 = (char *)v4 + v17;
    uint64_t v21 = (char *)a2 + v17;
    uint64_t v22 = sub_1000B7030();
    uint64_t v23 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      uint64_t v24 = sub_100032E20(&qword_100103BB0);
      memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
  }
  return v4;
}

uint64_t sub_1000A09A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = _s16AttributedStringV13ChecklistItemVMa(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    uint64_t v6 = sub_1000B7030();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 40);
  uint64_t v8 = sub_1000B7030();
  uint64_t v11 = *(void *)(v8 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v7, 1, v8);
  if (!result)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    return v10(v7, v8);
  }
  return result;
}

uint64_t sub_1000A0B0C(uint64_t a1, uint64_t a2, int *a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v7 = a3[8];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = _s16AttributedStringV13ChecklistItemVMa(0);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_100032E20(&qword_100104CA0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v13 = sub_1000B7030();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 16))(v8, v9, v13);
    *((unsigned char *)v8 + *(int *)(v10 + 20)) = *((unsigned char *)v9 + *(int *)(v10 + 20));
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[9];
  uint64_t v15 = a3[10];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = a2 + v14;
  *(void *)uint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
  uint64_t v18 = (void *)(a1 + v15);
  uint64_t v19 = (const void *)(a2 + v15);
  uint64_t v20 = sub_1000B7030();
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    uint64_t v22 = sub_100032E20(&qword_100103BB0);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 16))(v18, v19, v20);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  return a1;
}

uint64_t sub_1000A0D58(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v6;
  uint64_t v7 = a3[8];
  uint64_t v8 = (unsigned char *)(a1 + v7);
  uint64_t v9 = (unsigned char *)(a2 + v7);
  uint64_t v10 = _s16AttributedStringV13ChecklistItemVMa(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      uint64_t v15 = sub_1000B7030();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 16))(v8, v9, v15);
      v8[*(int *)(v10 + 20)] = v9[*(int *)(v10 + 20)];
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    sub_1000A00A0((uint64_t)v8, _s16AttributedStringV13ChecklistItemVMa);
LABEL_6:
    uint64_t v16 = sub_100032E20(&qword_100104CA0);
    memcpy(v8, v9, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v31 = sub_1000B7030();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v31 - 8) + 24))(v8, v9, v31);
  v8[*(int *)(v10 + 20)] = v9[*(int *)(v10 + 20)];
LABEL_7:
  uint64_t v17 = a3[9];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v20 = *v19;
  *(unsigned char *)(v18 + 8) = *((unsigned char *)v19 + 8);
  *(void *)uint64_t v18 = v20;
  uint64_t v21 = a3[10];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  uint64_t v24 = sub_1000B7030();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v25 + 48);
  int v27 = v26(v22, 1, v24);
  int v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (!v28)
    {
      (*(void (**)(void *, void *, uint64_t))(v25 + 24))(v22, v23, v24);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v25 + 8))(v22, v24);
    goto LABEL_12;
  }
  if (v28)
  {
LABEL_12:
    uint64_t v29 = sub_100032E20(&qword_100103BB0);
    memcpy(v22, v23, *(void *)(*(void *)(v29 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v25 + 16))(v22, v23, v24);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  return a1;
}

uint64_t sub_1000A10A8(uint64_t a1, uint64_t a2, int *a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v7 = a3[8];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = _s16AttributedStringV13ChecklistItemVMa(0);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_100032E20(&qword_100104CA0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v13 = sub_1000B7030();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v8, v9, v13);
    *((unsigned char *)v8 + *(int *)(v10 + 20)) = *((unsigned char *)v9 + *(int *)(v10 + 20));
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[9];
  uint64_t v15 = a3[10];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = a2 + v14;
  *(void *)uint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
  uint64_t v18 = (void *)(a1 + v15);
  uint64_t v19 = (const void *)(a2 + v15);
  uint64_t v20 = sub_1000B7030();
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    uint64_t v22 = sub_100032E20(&qword_100103BB0);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 32))(v18, v19, v20);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  return a1;
}

uint64_t sub_1000A12F4(uint64_t a1, uint64_t a2, int *a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v7 = a3[8];
  uint64_t v8 = (unsigned char *)(a1 + v7);
  uint64_t v9 = (unsigned char *)(a2 + v7);
  uint64_t v10 = _s16AttributedStringV13ChecklistItemVMa(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      uint64_t v15 = sub_1000B7030();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 32))(v8, v9, v15);
      v8[*(int *)(v10 + 20)] = v9[*(int *)(v10 + 20)];
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    sub_1000A00A0((uint64_t)v8, _s16AttributedStringV13ChecklistItemVMa);
LABEL_6:
    uint64_t v16 = sub_100032E20(&qword_100104CA0);
    memcpy(v8, v9, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v30 = sub_1000B7030();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v30 - 8) + 40))(v8, v9, v30);
  v8[*(int *)(v10 + 20)] = v9[*(int *)(v10 + 20)];
LABEL_7:
  uint64_t v17 = a3[9];
  uint64_t v18 = a3[10];
  uint64_t v19 = a1 + v17;
  uint64_t v20 = a2 + v17;
  *(void *)uint64_t v19 = *(void *)v20;
  *(unsigned char *)(v19 + 8) = *(unsigned char *)(v20 + 8);
  uint64_t v21 = (void *)(a1 + v18);
  uint64_t v22 = (void *)(a2 + v18);
  uint64_t v23 = sub_1000B7030();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v24 + 48);
  int v26 = v25(v21, 1, v23);
  int v27 = v25(v22, 1, v23);
  if (!v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, void *, uint64_t))(v24 + 40))(v21, v22, v23);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v24 + 8))(v21, v23);
    goto LABEL_12;
  }
  if (v27)
  {
LABEL_12:
    uint64_t v28 = sub_100032E20(&qword_100103BB0);
    memcpy(v21, v22, *(void *)(*(void *)(v28 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v24 + 32))(v21, v22, v23);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  return a1;
}

uint64_t sub_1000A1630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000A1644);
}

uint64_t sub_1000A1644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 251)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 1);
    if (v4 >= 5) {
      return v4 - 4;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_100032E20(&qword_100104CA0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 32);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100032E20(&qword_100103BB0);
      int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 40);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1000A1770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000A1784);
}

uint64_t sub_1000A1784(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 251)
  {
    *(unsigned char *)(result + 1) = a2 + 4;
  }
  else
  {
    uint64_t v8 = sub_100032E20(&qword_100104CA0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 32);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100032E20(&qword_100103BB0);
      int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 40);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1000A18B4()
{
  sub_1000A19E0(319, &qword_100104DD0, (void (*)(uint64_t))_s16AttributedStringV13ChecklistItemVMa);
  if (v0 <= 0x3F)
  {
    sub_1000A19E0(319, (unint64_t *)&unk_100104DD8, (void (*)(uint64_t))&type metadata accessor for UUID);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1000A19E0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1000B79E0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t *sub_1000A1A34(uint64_t *a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    uint64_t *v4 = *a2;
    unint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a3[6];
    __dst = (char *)a1 + v9;
    uint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = sub_1000B6FD0();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_100032E20(&qword_100103A20);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v16 = a3[7];
    uint64_t v17 = a3[8];
    uint64_t v18 = (uint64_t *)((char *)v4 + v16);
    uint64_t v19 = (uint64_t *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    void *v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = (uint64_t *)((char *)v4 + v17);
    uint64_t v22 = (uint64_t *)((char *)a2 + v17);
    uint64_t v23 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1000A1C08(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1000B6FD0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_1000A1CF4(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a3[6];
  __dst = (char *)a1 + v8;
  uint64_t v9 = (char *)a2 + v8;
  uint64_t v10 = sub_1000B6FD0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_100032E20(&qword_100103A20);
    memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  uint64_t v16 = (void *)((char *)a1 + v14);
  uint64_t v17 = (void *)((char *)a2 + v14);
  uint64_t v18 = v17[1];
  void *v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = (void *)((char *)a1 + v15);
  uint64_t v20 = (void *)((char *)a2 + v15);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1000A1E78(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000B6FD0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_100032E20(&qword_100103A20);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  void *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[8];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1000A2090(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1000B6FD0();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_100032E20(&qword_100103A20);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v13) = *(_OWORD *)((char *)a2 + v13);
  return a1;
}

void *sub_1000A21C8(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1000B6FD0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = sub_100032E20(&qword_100103A20);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  void *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[8];
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  void *v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000A23A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000A23B4);
}

uint64_t sub_1000A23B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100032E20(&qword_100103A20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1000A2468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000A247C);
}

uint64_t sub_1000A247C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100032E20(&qword_100103A20);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1000A2528()
{
  sub_1000A19E0(319, (unint64_t *)&qword_100103C58, (void (*)(uint64_t))&type metadata accessor for Date);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void *sub_1000A25E8(_OWORD *a1, void *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    void *v4 = *a2;
    unint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_OWORD *)a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1000B7030();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v88 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    uint64_t v89 = v10;
    uint64_t v87 = v11;
    if (v88(v9, 1, v10))
    {
      uint64_t v12 = sub_100032E20(&qword_100103BB0);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v14 = a3[6];
    int v15 = (char *)v4 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = sub_1000B6FD0();
    uint64_t v18 = *(void *)(v17 - 8);
    uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
    if (v19(v16, 1, v17))
    {
      uint64_t v20 = sub_100032E20(&qword_100103A20);
      memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    uint64_t v21 = a3[7];
    uint64_t v22 = (char *)v4 + v21;
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = *(void *)((char *)a2 + v21 + 8);
    id v90 = v19;
    if (v24 == 1)
    {
      long long v25 = *((_OWORD *)v23 + 3);
      *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
      *((_OWORD *)v22 + 3) = v25;
      *((void *)v22 + 8) = *((void *)v23 + 8);
      long long v26 = *((_OWORD *)v23 + 1);
      *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
      *((_OWORD *)v22 + 1) = v26;
    }
    else
    {
      *(void *)uint64_t v22 = *(void *)v23;
      *((void *)v22 + 1) = v24;
      *((void *)v22 + 2) = *((void *)v23 + 2);
      v22[24] = v23[24];
      *(_DWORD *)(v22 + 25) = *(_DWORD *)(v23 + 25);
      *((void *)v22 + 4) = *((void *)v23 + 4);
      v22[40] = v23[40];
      uint64_t v27 = *((void *)v23 + 7);
      swift_bridgeObjectRetain();
      if (v27)
      {
        *((void *)v22 + 6) = *((void *)v23 + 6);
        *((void *)v22 + 7) = v27;
        *((void *)v22 + 8) = *((void *)v23 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *((_OWORD *)v22 + 3) = *((_OWORD *)v23 + 3);
        *((void *)v22 + 8) = *((void *)v23 + 8);
      }
    }
    uint64_t v28 = a3[8];
    uint64_t v29 = (_WORD *)((char *)v4 + v28);
    uint64_t v30 = (_WORD *)((char *)a2 + v28);
    uint64_t v31 = (int *)_s16AttributedStringV14ParagraphStyleVMa(0);
    uint64_t v32 = *((void *)v31 - 1);
    if ((*(unsigned int (**)(_WORD *, uint64_t, int *))(v32 + 48))(v30, 1, v31))
    {
      uint64_t v33 = sub_100032E20(&qword_100104C80);
      memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      uint64_t v84 = v32;
      uint64_t v85 = v18;
      uint64_t v86 = v17;
      _WORD *v29 = *v30;
      uint64_t v34 = *((void *)v30 + 2);
      *((void *)v29 + 1) = *((void *)v30 + 1);
      *((void *)v29 + 2) = v34;
      *((unsigned char *)v29 + 24) = *((unsigned char *)v30 + 24);
      uint64_t v35 = v31[8];
      uint64_t v36 = (char *)v29 + v35;
      uint64_t v37 = (char *)v30 + v35;
      uint64_t v38 = _s16AttributedStringV13ChecklistItemVMa(0);
      uint64_t v39 = *(void *)(v38 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
      {
        uint64_t v40 = sub_100032E20(&qword_100104CA0);
        memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64));
        uint64_t v41 = v89;
      }
      else
      {
        uint64_t v42 = v36;
        uint64_t v83 = v36;
        uint64_t v41 = v89;
        (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v42, v37, v89);
        v83[*(int *)(v38 + 20)] = v37[*(int *)(v38 + 20)];
        (*(void (**)(void))(v39 + 56))();
      }
      uint64_t v43 = v31[9];
      id v44 = (char *)v29 + v43;
      uint64_t v45 = (char *)v30 + v43;
      *(void *)id v44 = *(void *)v45;
      v44[8] = v45[8];
      uint64_t v46 = v31[10];
      uint64_t v47 = (char *)v29 + v46;
      uint64_t v48 = (char *)v30 + v46;
      uint64_t v18 = v85;
      if (v88((char *)v30 + v46, 1, v41))
      {
        uint64_t v49 = sub_100032E20(&qword_100103BB0);
        memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v47, v48, v41);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v87 + 56))(v47, 0, 1, v41);
      }
      (*(void (**)(_WORD *, void, uint64_t, int *))(v84 + 56))(v29, 0, 1, v31);
      uint64_t v17 = v86;
    }
    uint64_t v50 = a3[10];
    *((unsigned char *)v4 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    uint64_t v51 = (char *)v4 + v50;
    uint64_t v52 = (char *)a2 + v50;
    uint64_t v53 = sub_1000B6F10();
    uint64_t v54 = *(void *)(v53 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
    {
      uint64_t v55 = sub_100032E20((uint64_t *)&unk_1001042F0);
      memcpy(v51, v52, *(void *)(*(void *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v51, v52, v53);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
    }
    uint64_t v56 = a3[12];
    *((unsigned char *)v4 + a3[11]) = *((unsigned char *)a2 + a3[11]);
    uint64_t v57 = (void *)((char *)v4 + v56);
    char v58 = (void *)((char *)a2 + v56);
    uint64_t v59 = v58[1];
    *uint64_t v57 = *v58;
    v57[1] = v59;
    uint64_t v60 = a3[13];
    uint64_t v61 = (void *)((char *)v4 + v60);
    id v62 = (void *)((char *)a2 + v60);
    long long v63 = (int *)_s16AttributedStringV16InlineAttachmentVMa(0);
    uint64_t v64 = *((void *)v63 - 1);
    uint64_t v65 = *(unsigned int (**)(void *, uint64_t, int *))(v64 + 48);
    swift_bridgeObjectRetain();
    if (v65(v62, 1, v63))
    {
      uint64_t v66 = sub_100032E20(&qword_100104C78);
      memcpy(v61, v62, *(void *)(*(void *)(v66 - 8) + 64));
    }
    else
    {
      uint64_t v67 = v62[1];
      void *v61 = *v62;
      v61[1] = v67;
      uint64_t v68 = v62[3];
      void v61[2] = v62[2];
      v61[3] = v68;
      uint64_t v69 = v63[6];
      uint64_t v70 = (char *)v61 + v69;
      uint64_t v71 = (char *)v62 + v69;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v90(v71, 1, v17))
      {
        uint64_t v72 = sub_100032E20(&qword_100103A20);
        memcpy(v70, v71, *(void *)(*(void *)(v72 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v70, v71, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v70, 0, 1, v17);
      }
      uint64_t v73 = v63[7];
      uint64_t v74 = (void *)((char *)v61 + v73);
      uint64_t v75 = (void *)((char *)v62 + v73);
      uint64_t v76 = v75[1];
      void *v74 = *v75;
      v74[1] = v76;
      uint64_t v77 = v63[8];
      unint64_t v78 = (void *)((char *)v61 + v77);
      long long v79 = (void *)((char *)v62 + v77);
      uint64_t v80 = v79[1];
      *unint64_t v78 = *v79;
      v78[1] = v80;
      long long v81 = *(void (**)(void *, void, uint64_t, int *))(v64 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v81(v61, 0, 1, v63);
    }
  }
  return v4;
}

uint64_t sub_1000A2E6C(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_1000B7030();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v27 = v6;
  uint64_t v8 = a1 + a2[6];
  uint64_t v9 = sub_1000B6FD0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v11(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  uint64_t v12 = a1 + a2[7];
  if (*(void *)(v12 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(v12 + 56))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v13 = a1 + a2[8];
  uint64_t v14 = _s16AttributedStringV14ParagraphStyleVMa(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14))
  {
    long long v26 = v11;
    uint64_t v15 = v10;
    uint64_t v16 = v13 + *(int *)(v14 + 32);
    uint64_t v17 = _s16AttributedStringV13ChecklistItemVMa(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17)) {
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v16, v5);
    }
    uint64_t v18 = v13 + *(int *)(v14 + 40);
    uint64_t v10 = v15;
    uint64_t v11 = v26;
    if (!v7(v18, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v18, v5);
    }
  }
  uint64_t v19 = a1 + a2[10];
  uint64_t v20 = sub_1000B6F10();
  uint64_t v21 = *(void *)(v20 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20)) {
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
  }
  swift_bridgeObjectRelease();
  uint64_t v22 = a1 + a2[13];
  uint64_t v23 = _s16AttributedStringV16InlineAttachmentVMa(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v22, 1, v23);
  if (!result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v25 = v22 + *(int *)(v23 + 24);
    if (!v11(v25, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v25, v9);
    }
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_OWORD *sub_1000A329C(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000B7030();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v86 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v87 = v9;
  uint64_t v85 = v10;
  if (v86(v8, 1, v9))
  {
    uint64_t v11 = sub_100032E20(&qword_100103BB0);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_1000B6FD0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v17(v14, 1, v15))
  {
    uint64_t v18 = sub_100032E20(&qword_100103A20);
    memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v19 = a3[7];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = *(void *)((char *)a2 + v19 + 8);
  uint64_t v88 = v17;
  if (v22 == 1)
  {
    long long v23 = *((_OWORD *)v21 + 3);
    *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
    *((_OWORD *)v20 + 3) = v23;
    *((void *)v20 + 8) = *((void *)v21 + 8);
    long long v24 = *((_OWORD *)v21 + 1);
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    *((_OWORD *)v20 + 1) = v24;
  }
  else
  {
    *(void *)uint64_t v20 = *(void *)v21;
    *((void *)v20 + 1) = v22;
    *((void *)v20 + 2) = *((void *)v21 + 2);
    v20[24] = v21[24];
    *(_DWORD *)(v20 + 25) = *(_DWORD *)(v21 + 25);
    *((void *)v20 + 4) = *((void *)v21 + 4);
    v20[40] = v21[40];
    uint64_t v25 = *((void *)v21 + 7);
    swift_bridgeObjectRetain();
    if (v25)
    {
      *((void *)v20 + 6) = *((void *)v21 + 6);
      *((void *)v20 + 7) = v25;
      *((void *)v20 + 8) = *((void *)v21 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *((_OWORD *)v20 + 3) = *((_OWORD *)v21 + 3);
      *((void *)v20 + 8) = *((void *)v21 + 8);
    }
  }
  uint64_t v26 = a3[8];
  uint64_t v27 = (_WORD *)((char *)a1 + v26);
  uint64_t v28 = (_WORD *)((char *)a2 + v26);
  uint64_t v29 = (int *)_s16AttributedStringV14ParagraphStyleVMa(0);
  uint64_t v30 = *((void *)v29 - 1);
  if ((*(unsigned int (**)(_WORD *, uint64_t, int *))(v30 + 48))(v28, 1, v29))
  {
    uint64_t v31 = sub_100032E20(&qword_100104C80);
    memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    uint64_t v82 = v30;
    uint64_t v83 = v16;
    uint64_t v84 = v15;
    _WORD *v27 = *v28;
    uint64_t v32 = *((void *)v28 + 2);
    *((void *)v27 + 1) = *((void *)v28 + 1);
    *((void *)v27 + 2) = v32;
    *((unsigned char *)v27 + 24) = *((unsigned char *)v28 + 24);
    uint64_t v33 = v29[8];
    uint64_t v34 = (char *)v27 + v33;
    uint64_t v35 = (char *)v28 + v33;
    uint64_t v36 = _s16AttributedStringV13ChecklistItemVMa(0);
    uint64_t v37 = *(void *)(v36 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
    {
      uint64_t v38 = sub_100032E20(&qword_100104CA0);
      memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
      uint64_t v39 = v87;
    }
    else
    {
      uint64_t v40 = v34;
      long long v81 = v34;
      uint64_t v39 = v87;
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v40, v35, v87);
      v81[*(int *)(v36 + 20)] = v35[*(int *)(v36 + 20)];
      (*(void (**)(void))(v37 + 56))();
    }
    uint64_t v41 = v29[9];
    uint64_t v42 = (char *)v27 + v41;
    uint64_t v43 = (char *)v28 + v41;
    *(void *)uint64_t v42 = *(void *)v43;
    v42[8] = v43[8];
    uint64_t v44 = v29[10];
    uint64_t v45 = (char *)v27 + v44;
    uint64_t v46 = (char *)v28 + v44;
    uint64_t v16 = v83;
    if (v86((char *)v28 + v44, 1, v39))
    {
      uint64_t v47 = sub_100032E20(&qword_100103BB0);
      memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v45, v46, v39);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v45, 0, 1, v39);
    }
    (*(void (**)(_WORD *, void, uint64_t, int *))(v82 + 56))(v27, 0, 1, v29);
    uint64_t v15 = v84;
  }
  uint64_t v48 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v49 = (char *)a1 + v48;
  uint64_t v50 = (char *)a2 + v48;
  uint64_t v51 = sub_1000B6F10();
  uint64_t v52 = *(void *)(v51 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
  {
    uint64_t v53 = sub_100032E20((uint64_t *)&unk_1001042F0);
    memcpy(v49, v50, *(void *)(*(void *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v49, v50, v51);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
  }
  uint64_t v54 = a3[12];
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  uint64_t v55 = (void *)((char *)a1 + v54);
  uint64_t v56 = (void *)((char *)a2 + v54);
  uint64_t v57 = v56[1];
  *uint64_t v55 = *v56;
  v55[1] = v57;
  uint64_t v58 = a3[13];
  uint64_t v59 = (void *)((char *)a1 + v58);
  uint64_t v60 = (void *)((char *)a2 + v58);
  uint64_t v61 = (int *)_s16AttributedStringV16InlineAttachmentVMa(0);
  uint64_t v62 = *((void *)v61 - 1);
  long long v63 = *(unsigned int (**)(void *, uint64_t, int *))(v62 + 48);
  swift_bridgeObjectRetain();
  if (v63(v60, 1, v61))
  {
    uint64_t v64 = sub_100032E20(&qword_100104C78);
    memcpy(v59, v60, *(void *)(*(void *)(v64 - 8) + 64));
  }
  else
  {
    uint64_t v65 = v60[1];
    void *v59 = *v60;
    v59[1] = v65;
    uint64_t v66 = v60[3];
    v59[2] = v60[2];
    v59[3] = v66;
    uint64_t v67 = v61[6];
    uint64_t v68 = (char *)v59 + v67;
    uint64_t v69 = (char *)v60 + v67;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v88(v69, 1, v15))
    {
      uint64_t v70 = sub_100032E20(&qword_100103A20);
      memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v68, v69, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v68, 0, 1, v15);
    }
    uint64_t v71 = v61[7];
    uint64_t v72 = (void *)((char *)v59 + v71);
    uint64_t v73 = (void *)((char *)v60 + v71);
    uint64_t v74 = v73[1];
    void *v72 = *v73;
    v72[1] = v74;
    uint64_t v75 = v61[8];
    uint64_t v76 = (void *)((char *)v59 + v75);
    uint64_t v77 = (void *)((char *)v60 + v75);
    uint64_t v78 = v77[1];
    void *v76 = *v77;
    v76[1] = v78;
    long long v79 = *(void (**)(void *, void, uint64_t, int *))(v62 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v79(v59, 0, 1, v61);
  }
  return a1;
}

void *sub_1000A3AD0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000B7030();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  uint64_t v144 = v10;
  uint64_t v145 = v9;
  uint64_t v146 = (uint64_t (*)(void *, uint64_t, uint64_t))v11;
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_100032E20(&qword_100103BB0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_1000B6FD0();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  uint64_t v147 = v20;
  int v22 = v20(v17, 1, v18);
  uint64_t v143 = v19;
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
LABEL_12:
    uint64_t v23 = sub_100032E20(&qword_100103A20);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v16, v17, v18);
LABEL_13:
  uint64_t v24 = a3[7];
  uint64_t v25 = (uint64_t)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = *(void *)((char *)a1 + v24 + 8);
  uint64_t v28 = *(void *)((char *)a2 + v24 + 8);
  uint64_t v148 = v18;
  if (v27 == 1)
  {
    if (v28 == 1)
    {
      *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
      long long v29 = *((_OWORD *)v26 + 1);
      long long v30 = *((_OWORD *)v26 + 2);
      long long v31 = *((_OWORD *)v26 + 3);
      *(void *)(v25 + 64) = *((void *)v26 + 8);
      *(_OWORD *)(v25 + 32) = v30;
      *(_OWORD *)(v25 + 48) = v31;
      *(_OWORD *)(v25 + 16) = v29;
      goto LABEL_29;
    }
    *(void *)uint64_t v25 = *(void *)v26;
    *(void *)(v25 + 8) = *((void *)v26 + 1);
    uint64_t v35 = *((void *)v26 + 2);
    *(unsigned char *)(v25 + 24) = v26[24];
    *(void *)(v25 + 16) = v35;
    *(unsigned char *)(v25 + 25) = v26[25];
    *(unsigned char *)(v25 + 26) = v26[26];
    *(unsigned char *)(v25 + 27) = v26[27];
    *(unsigned char *)(v25 + 28) = v26[28];
    uint64_t v36 = *((void *)v26 + 4);
    *(unsigned char *)(v25 + 40) = v26[40];
    *(void *)(v25 + 32) = v36;
    uint64_t v37 = *((void *)v26 + 7);
    swift_bridgeObjectRetain();
    if (!v37)
    {
      long long v38 = *((_OWORD *)v26 + 3);
      *(void *)(v25 + 64) = *((void *)v26 + 8);
      *(_OWORD *)(v25 + 48) = v38;
      goto LABEL_29;
    }
    goto LABEL_26;
  }
  if (v28 == 1)
  {
    sub_1000A4AFC(v25);
    *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
    long long v33 = *((_OWORD *)v26 + 2);
    long long v32 = *((_OWORD *)v26 + 3);
    long long v34 = *((_OWORD *)v26 + 1);
    *(void *)(v25 + 64) = *((void *)v26 + 8);
    *(_OWORD *)(v25 + 32) = v33;
    *(_OWORD *)(v25 + 48) = v32;
    *(_OWORD *)(v25 + 16) = v34;
    goto LABEL_29;
  }
  *(void *)uint64_t v25 = *(void *)v26;
  *(void *)(v25 + 8) = *((void *)v26 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v39 = *((void *)v26 + 2);
  *(unsigned char *)(v25 + 24) = v26[24];
  *(void *)(v25 + 16) = v39;
  *(unsigned char *)(v25 + 25) = v26[25];
  *(unsigned char *)(v25 + 26) = v26[26];
  *(unsigned char *)(v25 + 27) = v26[27];
  *(unsigned char *)(v25 + 28) = v26[28];
  uint64_t v40 = *((void *)v26 + 4);
  *(unsigned char *)(v25 + 40) = v26[40];
  *(void *)(v25 + 32) = v40;
  uint64_t v41 = (_OWORD *)(v25 + 48);
  uint64_t v42 = v26 + 48;
  uint64_t v43 = *((void *)v26 + 7);
  if (*(void *)(v25 + 56))
  {
    if (v43)
    {
      *(void *)(v25 + 48) = *((void *)v26 + 6);
      *(void *)(v25 + 56) = *((void *)v26 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v25 + 64) = *((void *)v26 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1000A4AC8(v25 + 48);
      uint64_t v44 = *((void *)v26 + 8);
      *uint64_t v41 = *v42;
      *(void *)(v25 + 64) = v44;
    }
  }
  else
  {
    if (v43)
    {
LABEL_26:
      *(void *)(v25 + 48) = *((void *)v26 + 6);
      *(void *)(v25 + 56) = *((void *)v26 + 7);
      *(void *)(v25 + 64) = *((void *)v26 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_29;
    }
    long long v45 = *v42;
    *(void *)(v25 + 64) = *((void *)v26 + 8);
    *uint64_t v41 = v45;
  }
LABEL_29:
  uint64_t v46 = a3[8];
  uint64_t v47 = (uint64_t)a1 + v46;
  uint64_t v48 = (char *)a2 + v46;
  uint64_t v49 = (int *)_s16AttributedStringV14ParagraphStyleVMa(0);
  uint64_t v50 = (void *)*((void *)v49 - 1);
  uint64_t v51 = (uint64_t (*)(uint64_t, uint64_t, int *))v50[6];
  int v52 = v51(v47, 1, v49);
  int v53 = v51((uint64_t)v48, 1, v49);
  if (!v52)
  {
    if (v53)
    {
      sub_1000A00A0(v47, _s16AttributedStringV14ParagraphStyleVMa);
      goto LABEL_35;
    }
    *(unsigned char *)uint64_t v47 = *v48;
    *(unsigned char *)(v47 + 1) = v48[1];
    *(void *)(v47 + 8) = *((void *)v48 + 1);
    uint64_t v65 = *((void *)v48 + 2);
    *(unsigned char *)(v47 + 24) = v48[24];
    *(void *)(v47 + 16) = v65;
    uint64_t v66 = v49[8];
    uint64_t v67 = v47 + v66;
    __srca = &v48[v66];
    uint64_t v68 = _s16AttributedStringV13ChecklistItemVMa(0);
    uint64_t v138 = *(void *)(v68 - 8);
    uint64_t v69 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v138 + 48);
    uint64_t v139 = v67;
    LODWORD(v67) = v69(v67, 1, v68);
    int v70 = v69((uint64_t)__srca, 1, v68);
    if (v67)
    {
      uint64_t v71 = v144;
      if (!v70)
      {
        uint64_t v120 = v145;
        (*(void (**)(uint64_t, char *, uint64_t))(v144 + 16))(v139, __srca, v145);
        *(unsigned char *)(v139 + *(int *)(v68 + 20)) = __srca[*(int *)(v68 + 20)];
        (*(void (**)(uint64_t, void, uint64_t))(v138 + 56))(v139, 0, 1);
        goto LABEL_74;
      }
      size_t v72 = *(void *)(*(void *)(sub_100032E20(&qword_100104CA0) - 8) + 64);
      uint64_t v73 = (void *)v139;
    }
    else
    {
      uint64_t v71 = v144;
      if (!v70)
      {
        uint64_t v120 = v145;
        (*(void (**)(uint64_t, char *, uint64_t))(v144 + 24))(v139, __srca, v145);
        *(unsigned char *)(v139 + *(int *)(v68 + 20)) = __srca[*(int *)(v68 + 20)];
        goto LABEL_74;
      }
      sub_1000A00A0(v139, _s16AttributedStringV13ChecklistItemVMa);
      size_t v72 = *(void *)(*(void *)(sub_100032E20(&qword_100104CA0) - 8) + 64);
      uint64_t v73 = (void *)v139;
    }
    memcpy(v73, __srca, v72);
    uint64_t v120 = v145;
LABEL_74:
    uint64_t v129 = v49[9];
    uint64_t v130 = v47 + v129;
    uint64_t v131 = &v48[v129];
    uint64_t v132 = *(void *)v131;
    *(unsigned char *)(v130 + 8) = v131[8];
    *(void *)uint64_t v130 = v132;
    uint64_t v133 = v49[10];
    __int16 v134 = (void *)(v47 + v133);
    char v135 = &v48[v133];
    int v136 = v146(v134, 1, v120);
    int v137 = v146(v135, 1, v120);
    if (v136)
    {
      if (!v137)
      {
        (*(void (**)(void *, char *, uint64_t))(v71 + 16))(v134, v135, v120);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v71 + 56))(v134, 0, 1, v120);
        goto LABEL_45;
      }
    }
    else
    {
      if (!v137)
      {
        (*(void (**)(void *, char *, uint64_t))(v71 + 24))(v134, v135, v120);
        goto LABEL_45;
      }
      (*(void (**)(void *, uint64_t))(v71 + 8))(v134, v120);
    }
    size_t v62 = *(void *)(*(void *)(sub_100032E20(&qword_100103BB0) - 8) + 64);
    long long v63 = v134;
    uint64_t v64 = v135;
LABEL_36:
    memcpy(v63, v64, v62);
    goto LABEL_45;
  }
  if (v53)
  {
LABEL_35:
    size_t v62 = *(void *)(*(void *)(sub_100032E20(&qword_100104C80) - 8) + 64);
    long long v63 = (void *)v47;
    uint64_t v64 = v48;
    goto LABEL_36;
  }
  __src = (void (**)(uint64_t, void, uint64_t, int *))v50;
  *(unsigned char *)uint64_t v47 = *v48;
  *(unsigned char *)(v47 + 1) = v48[1];
  *(void *)(v47 + 8) = *((void *)v48 + 1);
  uint64_t v54 = *((void *)v48 + 2);
  *(unsigned char *)(v47 + 24) = v48[24];
  *(void *)(v47 + 16) = v54;
  uint64_t v55 = v49[8];
  uint64_t v56 = (void *)(v47 + v55);
  uint64_t v57 = &v48[v55];
  uint64_t v58 = _s16AttributedStringV13ChecklistItemVMa(0);
  uint64_t v59 = *(void *)(v58 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
  {
    uint64_t v60 = sub_100032E20(&qword_100104CA0);
    memcpy(v56, v57, *(void *)(*(void *)(v60 - 8) + 64));
    uint64_t v61 = v145;
  }
  else
  {
    uint64_t v74 = v56;
    long long v140 = v56;
    uint64_t v61 = v145;
    (*(void (**)(void *, char *, uint64_t))(v144 + 16))(v74, v57, v145);
    v140[*(int *)(v58 + 20)] = v57[*(int *)(v58 + 20)];
    (*(void (**)(void))(v59 + 56))();
  }
  uint64_t v75 = v49[9];
  uint64_t v76 = v47 + v75;
  uint64_t v77 = &v48[v75];
  uint64_t v78 = *(void *)v77;
  *(unsigned char *)(v76 + 8) = v77[8];
  *(void *)uint64_t v76 = v78;
  uint64_t v79 = v49[10];
  uint64_t v80 = (void *)(v47 + v79);
  long long v81 = &v48[v79];
  if (v146(&v48[v79], 1, v61))
  {
    uint64_t v82 = sub_100032E20(&qword_100103BB0);
    memcpy(v80, v81, *(void *)(*(void *)(v82 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v144 + 16))(v80, v81, v61);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v144 + 56))(v80, 0, 1, v61);
  }
  __src[7](v47, 0, 1, v49);
LABEL_45:
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v83 = a3[10];
  uint64_t v84 = (char *)a1 + v83;
  uint64_t v85 = (char *)a2 + v83;
  uint64_t v86 = sub_1000B6F10();
  uint64_t v87 = *(void *)(v86 - 8);
  uint64_t v88 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v87 + 48);
  int v89 = v88(v84, 1, v86);
  int v90 = v88(v85, 1, v86);
  if (v89)
  {
    if (!v90)
    {
      (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v84, v85, v86);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v87 + 56))(v84, 0, 1, v86);
      goto LABEL_51;
    }
    goto LABEL_50;
  }
  if (v90)
  {
    (*(void (**)(char *, uint64_t))(v87 + 8))(v84, v86);
LABEL_50:
    uint64_t v91 = sub_100032E20((uint64_t *)&unk_1001042F0);
    memcpy(v84, v85, *(void *)(*(void *)(v91 - 8) + 64));
    goto LABEL_51;
  }
  (*(void (**)(char *, char *, uint64_t))(v87 + 24))(v84, v85, v86);
LABEL_51:
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  uint64_t v92 = a3[12];
  uint64_t v93 = (void *)((char *)a1 + v92);
  uint64_t v94 = (void *)((char *)a2 + v92);
  *uint64_t v93 = *v94;
  v93[1] = v94[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v95 = a3[13];
  int v96 = (char *)a1 + v95;
  id v97 = (char *)a2 + v95;
  __int16 v98 = (int *)_s16AttributedStringV16InlineAttachmentVMa(0);
  uint64_t v99 = *((void *)v98 - 1);
  uint64_t v100 = *(uint64_t (**)(char *, uint64_t, int *))(v99 + 48);
  int v101 = v100(v96, 1, v98);
  int v102 = v100(v97, 1, v98);
  if (!v101)
  {
    if (v102)
    {
      sub_1000A00A0((uint64_t)v96, _s16AttributedStringV16InlineAttachmentVMa);
      goto LABEL_57;
    }
    *(void *)int v96 = *(void *)v97;
    *((void *)v96 + 1) = *((void *)v97 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((void *)v96 + 2) = *((void *)v97 + 2);
    *((void *)v96 + 3) = *((void *)v97 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v108 = v98[6];
    char v109 = &v96[v108];
    int v110 = &v97[v108];
    int v111 = v147(&v96[v108], 1, v148);
    int v112 = v147(v110, 1, v148);
    if (v111)
    {
      if (!v112)
      {
        (*(void (**)(char *, char *, uint64_t))(v143 + 16))(v109, v110, v148);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v143 + 56))(v109, 0, 1, v148);
LABEL_70:
        uint64_t v122 = v98[7];
        uint64_t v123 = &v96[v122];
        uint64_t v124 = &v97[v122];
        *(void *)uint64_t v123 = *v124;
        *((void *)v123 + 1) = v124[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v125 = v98[8];
        char v126 = &v96[v125];
        unint64_t v127 = &v97[v125];
        *(void *)char v126 = *v127;
        *((void *)v126 + 1) = v127[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    else
    {
      if (!v112)
      {
        (*(void (**)(char *, char *, uint64_t))(v143 + 24))(v109, v110, v148);
        goto LABEL_70;
      }
      (*(void (**)(char *, uint64_t))(v143 + 8))(v109, v148);
    }
    uint64_t v121 = sub_100032E20(&qword_100103A20);
    memcpy(v109, v110, *(void *)(*(void *)(v121 - 8) + 64));
    goto LABEL_70;
  }
  if (v102)
  {
LABEL_57:
    uint64_t v107 = sub_100032E20(&qword_100104C78);
    memcpy(v96, v97, *(void *)(*(void *)(v107 - 8) + 64));
    return a1;
  }
  *(void *)int v96 = *(void *)v97;
  *((void *)v96 + 1) = *((void *)v97 + 1);
  *((void *)v96 + 2) = *((void *)v97 + 2);
  *((void *)v96 + 3) = *((void *)v97 + 3);
  uint64_t v103 = v98[6];
  id v104 = &v96[v103];
  id v105 = &v97[v103];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v147(v105, 1, v148))
  {
    uint64_t v106 = sub_100032E20(&qword_100103A20);
    memcpy(v104, v105, *(void *)(*(void *)(v106 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v143 + 16))(v104, v105, v148);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v143 + 56))(v104, 0, 1, v148);
  }
  uint64_t v113 = v98[7];
  uint64_t v114 = &v96[v113];
  uint64_t v115 = &v97[v113];
  *(void *)uint64_t v114 = *v115;
  *((void *)v114 + 1) = v115[1];
  uint64_t v116 = v98[8];
  uint64_t v117 = &v96[v116];
  uint64_t v118 = &v97[v116];
  *(void *)uint64_t v117 = *v118;
  *((void *)v117 + 1) = v118[1];
  uint64_t v119 = *(void (**)(char *, void, uint64_t, int *))(v99 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v119(v96, 0, 1, v98);
  return a1;
}

uint64_t sub_1000A4AC8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000A4AFC(uint64_t a1)
{
  return a1;
}

_OWORD *sub_1000A4B2C(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000B7030();
  uint64_t v10 = *(void *)(v9 - 8);
  int v70 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v68 = v10;
  if (v70(v8, 1, v9))
  {
    uint64_t v11 = sub_100032E20(&qword_100103BB0);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[6];
  int v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_1000B6FD0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v71 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  uint64_t v69 = v9;
  if (v71(v14, 1, v15))
  {
    uint64_t v17 = sub_100032E20(&qword_100103A20);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = a3[8];
  uint64_t v20 = (char *)a1 + v18;
  int v21 = (char *)a2 + v18;
  *((void *)v20 + 8) = *((void *)v21 + 8);
  long long v22 = *((_OWORD *)v21 + 3);
  *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
  *((_OWORD *)v20 + 3) = v22;
  long long v23 = *((_OWORD *)v21 + 1);
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *((_OWORD *)v20 + 1) = v23;
  uint64_t v24 = (_WORD *)((char *)a1 + v19);
  uint64_t v25 = (_WORD *)((char *)a2 + v19);
  uint64_t v26 = (int *)_s16AttributedStringV14ParagraphStyleVMa(0);
  uint64_t v27 = *((void *)v26 - 1);
  if ((*(unsigned int (**)(_WORD *, uint64_t, int *))(v27 + 48))(v25, 1, v26))
  {
    uint64_t v28 = sub_100032E20(&qword_100104C80);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    uint64_t v65 = v27;
    uint64_t v66 = v16;
    uint64_t v67 = v15;
    *uint64_t v24 = *v25;
    uint64_t v29 = *((void *)v25 + 2);
    *((void *)v24 + 1) = *((void *)v25 + 1);
    *((void *)v24 + 2) = v29;
    *((unsigned char *)v24 + 24) = *((unsigned char *)v25 + 24);
    uint64_t v30 = v26[8];
    long long v31 = (char *)v24 + v30;
    long long v32 = (char *)v25 + v30;
    uint64_t v33 = _s16AttributedStringV13ChecklistItemVMa(0);
    uint64_t v34 = *(void *)(v33 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
    {
      uint64_t v35 = sub_100032E20(&qword_100104CA0);
      memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
      uint64_t v36 = v69;
    }
    else
    {
      uint64_t v64 = v31;
      uint64_t v37 = v31;
      uint64_t v36 = v69;
      (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v37, v32, v69);
      v64[*(int *)(v33 + 20)] = v32[*(int *)(v33 + 20)];
      (*(void (**)(void))(v34 + 56))();
    }
    uint64_t v38 = v26[9];
    uint64_t v39 = (char *)v24 + v38;
    uint64_t v40 = (char *)v25 + v38;
    *(void *)uint64_t v39 = *(void *)v40;
    v39[8] = v40[8];
    uint64_t v41 = v26[10];
    uint64_t v42 = (char *)v24 + v41;
    uint64_t v43 = (char *)v25 + v41;
    uint64_t v15 = v67;
    if (v70((char *)v25 + v41, 1, v36))
    {
      uint64_t v44 = sub_100032E20(&qword_100103BB0);
      memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v42, v43, v36);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v68 + 56))(v42, 0, 1, v36);
    }
    (*(void (**)(_WORD *, void, uint64_t, int *))(v65 + 56))(v24, 0, 1, v26);
    uint64_t v16 = v66;
  }
  uint64_t v45 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v46 = (char *)a1 + v45;
  uint64_t v47 = (char *)a2 + v45;
  uint64_t v48 = sub_1000B6F10();
  uint64_t v49 = *(void *)(v48 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
  {
    uint64_t v50 = sub_100032E20((uint64_t *)&unk_1001042F0);
    memcpy(v46, v47, *(void *)(*(void *)(v50 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v46, v47, v48);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
  }
  uint64_t v51 = a3[12];
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  *(_OWORD *)((char *)a1 + v51) = *(_OWORD *)((char *)a2 + v51);
  uint64_t v52 = a3[13];
  int v53 = (_OWORD *)((char *)a1 + v52);
  uint64_t v54 = (_OWORD *)((char *)a2 + v52);
  uint64_t v55 = (int *)_s16AttributedStringV16InlineAttachmentVMa(0);
  uint64_t v56 = *((void *)v55 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v56 + 48))(v54, 1, v55))
  {
    uint64_t v57 = sub_100032E20(&qword_100104C78);
    memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
  }
  else
  {
    long long v58 = v54[1];
    *int v53 = *v54;
    v53[1] = v58;
    uint64_t v59 = v55[6];
    uint64_t v60 = (char *)v53 + v59;
    uint64_t v61 = (char *)v54 + v59;
    if (v71((char *)v54 + v59, 1, v15))
    {
      uint64_t v62 = sub_100032E20(&qword_100103A20);
      memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v60, v61, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v60, 0, 1, v15);
    }
    *(_OWORD *)((char *)v53 + v55[7]) = *(_OWORD *)((char *)v54 + v55[7]);
    *(_OWORD *)((char *)v53 + v55[8]) = *(_OWORD *)((char *)v54 + v55[8]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v56 + 56))(v53, 0, 1, v55);
  }
  return a1;
}

_OWORD *sub_1000A527C(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000B7030();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  unsigned int v12 = v11(v7, 1, v9);
  unsigned int v13 = v11(v8, 1, v9);
  uint64_t v129 = v10;
  uint64_t v132 = v9;
  uint64_t v133 = (uint64_t (*)(void *, uint64_t, uint64_t))v11;
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_100032E20(&qword_100103BB0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_1000B6FD0();
  uint64_t v134 = *(void *)(v18 - 8);
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v134 + 48);
  int v20 = v19(v16, 1, v18);
  uint64_t v130 = v19;
  int v21 = v19(v17, 1, v18);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v134 + 32))(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v134 + 56))(v16, 0, 1, v18);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v134 + 8))(v16, v18);
LABEL_12:
    uint64_t v22 = sub_100032E20(&qword_100103A20);
    memcpy(v16, v17, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v134 + 40))(v16, v17, v18);
LABEL_13:
  uint64_t v23 = a3[7];
  uint64_t v24 = (uint64_t)a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  uint64_t v131 = v18;
  if (*(void *)((char *)a1 + v23 + 8) == 1)
  {
LABEL_16:
    long long v27 = *((_OWORD *)v25 + 3);
    *(_OWORD *)(v24 + 32) = *((_OWORD *)v25 + 2);
    *(_OWORD *)(v24 + 48) = v27;
    *(void *)(v24 + 64) = *((void *)v25 + 8);
    long long v28 = *((_OWORD *)v25 + 1);
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    *(_OWORD *)(v24 + 16) = v28;
    goto LABEL_17;
  }
  uint64_t v26 = *((void *)v25 + 1);
  if (v26 == 1)
  {
    sub_1000A4AFC(v24);
    goto LABEL_16;
  }
  *(void *)uint64_t v24 = *(void *)v25;
  *(void *)(v24 + 8) = v26;
  swift_bridgeObjectRelease();
  *(void *)(v24 + 16) = *((void *)v25 + 2);
  *(unsigned char *)(v24 + 24) = v25[24];
  *(_DWORD *)(v24 + 25) = *(_DWORD *)(v25 + 25);
  *(void *)(v24 + 32) = *((void *)v25 + 4);
  *(unsigned char *)(v24 + 40) = v25[40];
  if (*(void *)(v24 + 56))
  {
    uint64_t v47 = *((void *)v25 + 7);
    if (v47)
    {
      *(void *)(v24 + 48) = *((void *)v25 + 6);
      *(void *)(v24 + 56) = v47;
      swift_bridgeObjectRelease();
      *(void *)(v24 + 64) = *((void *)v25 + 8);
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
    sub_1000A4AC8(v24 + 48);
  }
  *(_OWORD *)(v24 + 48) = *((_OWORD *)v25 + 3);
  *(void *)(v24 + 64) = *((void *)v25 + 8);
LABEL_17:
  uint64_t v29 = a3[8];
  uint64_t v30 = (uint64_t)a1 + v29;
  long long v31 = (char *)a2 + v29;
  long long v32 = (int *)_s16AttributedStringV14ParagraphStyleVMa(0);
  __src = (void *)*((void *)v32 - 1);
  uint64_t v33 = (uint64_t (*)(uint64_t, uint64_t, int *))__src[6];
  int v34 = v33(v30, 1, v32);
  int v35 = v33((uint64_t)v31, 1, v32);
  if (!v34)
  {
    if (v35)
    {
      sub_1000A00A0(v30, _s16AttributedStringV14ParagraphStyleVMa);
      goto LABEL_23;
    }
    *(_WORD *)uint64_t v30 = *(_WORD *)v31;
    uint64_t v48 = *((void *)v31 + 2);
    *(void *)(v30 + 8) = *((void *)v31 + 1);
    *(void *)(v30 + 16) = v48;
    *(unsigned char *)(v30 + 24) = v31[24];
    uint64_t v49 = v32[8];
    uint64_t v50 = v30 + v49;
    __srca = &v31[v49];
    uint64_t v51 = _s16AttributedStringV13ChecklistItemVMa(0);
    uint64_t v124 = *(void *)(v51 - 8);
    uint64_t v52 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v124 + 48);
    uint64_t v125 = v50;
    LODWORD(v50) = v52(v50, 1, v51);
    int v53 = v52((uint64_t)__srca, 1, v51);
    if (v50)
    {
      uint64_t v55 = v132;
      uint64_t v54 = v133;
      if (!v53)
      {
        uint64_t v101 = v129;
        (*(void (**)(uint64_t, char *, uint64_t))(v129 + 32))(v125, __srca, v132);
        *(unsigned char *)(v125 + *(int *)(v51 + 20)) = __srca[*(int *)(v51 + 20)];
        (*(void (**)(uint64_t, void, uint64_t))(v124 + 56))(v125, 0, 1);
        goto LABEL_69;
      }
      size_t v56 = *(void *)(*(void *)(sub_100032E20(&qword_100104CA0) - 8) + 64);
      uint64_t v57 = (void *)v125;
    }
    else
    {
      uint64_t v55 = v132;
      uint64_t v54 = v133;
      if (!v53)
      {
        uint64_t v101 = v129;
        (*(void (**)(uint64_t, char *, uint64_t))(v129 + 40))(v125, __srca, v132);
        *(unsigned char *)(v125 + *(int *)(v51 + 20)) = __srca[*(int *)(v51 + 20)];
        goto LABEL_69;
      }
      sub_1000A00A0(v125, _s16AttributedStringV13ChecklistItemVMa);
      size_t v56 = *(void *)(*(void *)(sub_100032E20(&qword_100104CA0) - 8) + 64);
      uint64_t v57 = (void *)v125;
    }
    memcpy(v57, __srca, v56);
    uint64_t v101 = v129;
LABEL_69:
    uint64_t v114 = v32[9];
    uint64_t v115 = v30 + v114;
    uint64_t v116 = &v31[v114];
    *(void *)uint64_t v115 = *(void *)v116;
    *(unsigned char *)(v115 + 8) = v116[8];
    uint64_t v117 = v32[10];
    uint64_t v118 = (void *)(v30 + v117);
    uint64_t v119 = &v31[v117];
    int v120 = v54(v118, 1, v55);
    uint64_t v121 = (uint64_t (*)(char *, uint64_t, uint64_t))v54;
    int v122 = v120;
    int v123 = v121(v119, 1, v55);
    if (v122)
    {
      if (!v123)
      {
        (*(void (**)(void *, char *, uint64_t))(v101 + 32))(v118, v119, v55);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v101 + 56))(v118, 0, 1, v55);
        goto LABEL_38;
      }
    }
    else
    {
      if (!v123)
      {
        (*(void (**)(void *, char *, uint64_t))(v101 + 40))(v118, v119, v55);
        goto LABEL_38;
      }
      (*(void (**)(void *, uint64_t))(v101 + 8))(v118, v55);
    }
    size_t v44 = *(void *)(*(void *)(sub_100032E20(&qword_100103BB0) - 8) + 64);
    uint64_t v45 = v118;
    uint64_t v46 = v119;
LABEL_24:
    memcpy(v45, v46, v44);
    goto LABEL_38;
  }
  if (v35)
  {
LABEL_23:
    size_t v44 = *(void *)(*(void *)(sub_100032E20(&qword_100104C80) - 8) + 64);
    uint64_t v45 = (void *)v30;
    uint64_t v46 = v31;
    goto LABEL_24;
  }
  *(_WORD *)uint64_t v30 = *(_WORD *)v31;
  uint64_t v36 = *((void *)v31 + 2);
  *(void *)(v30 + 8) = *((void *)v31 + 1);
  *(void *)(v30 + 16) = v36;
  *(unsigned char *)(v30 + 24) = v31[24];
  uint64_t v37 = v32[8];
  uint64_t v38 = (void *)(v30 + v37);
  uint64_t v39 = &v31[v37];
  uint64_t v40 = _s16AttributedStringV13ChecklistItemVMa(0);
  uint64_t v41 = *(void *)(v40 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
  {
    uint64_t v42 = sub_100032E20(&qword_100104CA0);
    memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64));
    uint64_t v43 = v132;
  }
  else
  {
    long long v58 = v38;
    char v126 = v38;
    uint64_t v43 = v132;
    (*(void (**)(void *, char *, uint64_t))(v129 + 32))(v58, v39, v132);
    v126[*(int *)(v40 + 20)] = v39[*(int *)(v40 + 20)];
    (*(void (**)(void))(v41 + 56))();
  }
  uint64_t v59 = v32[9];
  uint64_t v60 = v30 + v59;
  uint64_t v61 = &v31[v59];
  *(void *)uint64_t v60 = *(void *)v61;
  *(unsigned char *)(v60 + 8) = v61[8];
  uint64_t v62 = v32[10];
  long long v63 = (void *)(v30 + v62);
  uint64_t v64 = &v31[v62];
  if (v133(&v31[v62], 1, v43))
  {
    uint64_t v65 = sub_100032E20(&qword_100103BB0);
    memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v129 + 32))(v63, v64, v43);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v129 + 56))(v63, 0, 1, v43);
  }
  ((void (*)(uint64_t, void, uint64_t, int *))__src[7])(v30, 0, 1, v32);
LABEL_38:
  uint64_t v66 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v67 = (char *)a1 + v66;
  uint64_t v68 = (char *)a2 + v66;
  uint64_t v69 = sub_1000B6F10();
  uint64_t v70 = *(void *)(v69 - 8);
  uint64_t v71 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v70 + 48);
  int v72 = v71(v67, 1, v69);
  int v73 = v71(v68, 1, v69);
  if (v72)
  {
    if (!v73)
    {
      (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v67, v68, v69);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
      goto LABEL_44;
    }
    goto LABEL_43;
  }
  if (v73)
  {
    (*(void (**)(char *, uint64_t))(v70 + 8))(v67, v69);
LABEL_43:
    uint64_t v74 = sub_100032E20((uint64_t *)&unk_1001042F0);
    memcpy(v67, v68, *(void *)(*(void *)(v74 - 8) + 64));
    goto LABEL_44;
  }
  (*(void (**)(char *, char *, uint64_t))(v70 + 40))(v67, v68, v69);
LABEL_44:
  uint64_t v75 = a3[12];
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  uint64_t v76 = (void *)((char *)a1 + v75);
  uint64_t v77 = (uint64_t *)((char *)a2 + v75);
  uint64_t v79 = *v77;
  uint64_t v78 = v77[1];
  void *v76 = v79;
  v76[1] = v78;
  swift_bridgeObjectRelease();
  uint64_t v80 = a3[13];
  long long v81 = (char *)a1 + v80;
  uint64_t v82 = (void *)((char *)a2 + v80);
  uint64_t v83 = (int *)_s16AttributedStringV16InlineAttachmentVMa(0);
  uint64_t v84 = *((void *)v83 - 1);
  uint64_t v85 = *(uint64_t (**)(char *, uint64_t, int *))(v84 + 48);
  int v86 = v85(v81, 1, v83);
  int v87 = v85((char *)v82, 1, v83);
  if (!v86)
  {
    if (v87)
    {
      sub_1000A00A0((uint64_t)v81, _s16AttributedStringV16InlineAttachmentVMa);
      goto LABEL_50;
    }
    uint64_t v94 = v82[1];
    *(void *)long long v81 = *v82;
    *((void *)v81 + 1) = v94;
    swift_bridgeObjectRelease();
    uint64_t v95 = v82[3];
    *((void *)v81 + 2) = v82[2];
    *((void *)v81 + 3) = v95;
    swift_bridgeObjectRelease();
    uint64_t v96 = v83[6];
    id v97 = &v81[v96];
    __int16 v98 = (char *)v82 + v96;
    int v99 = v130(&v81[v96], 1, v131);
    int v100 = v130(v98, 1, v131);
    if (v99)
    {
      if (!v100)
      {
        (*(void (**)(char *, char *, uint64_t))(v134 + 32))(v97, v98, v131);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v134 + 56))(v97, 0, 1, v131);
LABEL_65:
        uint64_t v103 = v83[7];
        id v104 = &v81[v103];
        id v105 = (void *)((char *)v82 + v103);
        uint64_t v107 = *v105;
        uint64_t v106 = v105[1];
        *(void *)id v104 = v107;
        *((void *)v104 + 1) = v106;
        swift_bridgeObjectRelease();
        uint64_t v108 = v83[8];
        char v109 = &v81[v108];
        int v110 = (void *)((char *)v82 + v108);
        uint64_t v112 = *v110;
        uint64_t v111 = v110[1];
        *(void *)char v109 = v112;
        *((void *)v109 + 1) = v111;
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    else
    {
      if (!v100)
      {
        (*(void (**)(char *, char *, uint64_t))(v134 + 40))(v97, v98, v131);
        goto LABEL_65;
      }
      (*(void (**)(char *, uint64_t))(v134 + 8))(v97, v131);
    }
    uint64_t v102 = sub_100032E20(&qword_100103A20);
    memcpy(v97, v98, *(void *)(*(void *)(v102 - 8) + 64));
    goto LABEL_65;
  }
  if (v87)
  {
LABEL_50:
    uint64_t v93 = sub_100032E20(&qword_100104C78);
    memcpy(v81, v82, *(void *)(*(void *)(v93 - 8) + 64));
    return a1;
  }
  long long v88 = *((_OWORD *)v82 + 1);
  *(_OWORD *)long long v81 = *(_OWORD *)v82;
  *((_OWORD *)v81 + 1) = v88;
  uint64_t v89 = v83[6];
  int v90 = &v81[v89];
  uint64_t v91 = (char *)v82 + v89;
  if (v130((char *)v82 + v89, 1, v131))
  {
    uint64_t v92 = sub_100032E20(&qword_100103A20);
    memcpy(v90, v91, *(void *)(*(void *)(v92 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v134 + 32))(v90, v91, v131);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v134 + 56))(v90, 0, 1, v131);
  }
  *(_OWORD *)&v81[v83[7]] = *(_OWORD *)((char *)v82 + v83[7]);
  *(_OWORD *)&v81[v83[8]] = *(_OWORD *)((char *)v82 + v83[8]);
  (*(void (**)(char *, void, uint64_t, int *))(v84 + 56))(v81, 0, 1, v83);
  return a1;
}

uint64_t sub_1000A607C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000A6090);
}

uint64_t sub_1000A6090(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100032E20(&qword_100103BB0);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[5];
LABEL_9:
    unsigned int v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v13(a1 + v9, a2, v7);
  }
  uint64_t v10 = sub_100032E20(&qword_100103A20);
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[6];
    goto LABEL_9;
  }
  uint64_t v11 = sub_100032E20(&qword_100104C80);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v7 = v11;
    uint64_t v8 = *(void *)(v11 - 8);
    uint64_t v9 = a3[8];
    goto LABEL_9;
  }
  uint64_t v12 = sub_100032E20((uint64_t *)&unk_1001042F0);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v7 = v12;
    uint64_t v8 = *(void *)(v12 - 8);
    uint64_t v9 = a3[10];
    goto LABEL_9;
  }
  if (a2 == 2147483646)
  {
    unint64_t v15 = *(void *)(a1 + a3[12] + 8);
    if (v15 >= 0xFFFFFFFF) {
      LODWORD(v15) = -1;
    }
    int v16 = v15 - 1;
    if (v16 < 0) {
      int v16 = -1;
    }
    return (v16 + 1);
  }
  else
  {
    uint64_t v17 = sub_100032E20(&qword_100104C78);
    uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
    uint64_t v19 = v17;
    uint64_t v20 = a1 + a3[13];
    return v18(v20, a2, v19);
  }
}

uint64_t sub_1000A62C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000A62DC);
}

uint64_t sub_1000A62DC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_100032E20(&qword_100103BB0);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_9:
    unint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v15(a1 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_100032E20(&qword_100103A20);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[6];
    goto LABEL_9;
  }
  uint64_t v13 = sub_100032E20(&qword_100104C80);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a4[8];
    goto LABEL_9;
  }
  uint64_t result = sub_100032E20((uint64_t *)&unk_1001042F0);
  if (*(_DWORD *)(*(void *)(result - 8) + 84) == a3)
  {
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[10];
    goto LABEL_9;
  }
  if (a3 == 2147483646)
  {
    *(void *)(a1 + a4[12] + 8) = a2;
  }
  else
  {
    uint64_t v16 = sub_100032E20(&qword_100104C78);
    uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    uint64_t v18 = v16;
    uint64_t v19 = a1 + a4[13];
    return v17(v19, a2, a2, v18);
  }
  return result;
}

void sub_1000A6508()
{
  sub_1000A19E0(319, (unint64_t *)&unk_100104DD8, (void (*)(uint64_t))&type metadata accessor for UUID);
  if (v0 <= 0x3F)
  {
    sub_1000A19E0(319, (unint64_t *)&qword_100103C58, (void (*)(uint64_t))&type metadata accessor for Date);
    if (v1 <= 0x3F)
    {
      sub_1000A19E0(319, &qword_100104F28, (void (*)(uint64_t))_s16AttributedStringV14ParagraphStyleVMa);
      if (v2 <= 0x3F)
      {
        sub_1000A19E0(319, (unint64_t *)&unk_1001045B0, (void (*)(uint64_t))&type metadata accessor for URL);
        if (v3 <= 0x3F)
        {
          sub_1000A19E0(319, (unint64_t *)&unk_100104F30, (void (*)(uint64_t))_s16AttributedStringV16InlineAttachmentVMa);
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

uint64_t _s16AttributedStringV4FontVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 56);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s16AttributedStringV4FontVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_DWORD *)(a1 + 25) = *(_DWORD *)(a2 + 25);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  if (v5)
  {
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v5;
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
  }
  return a1;
}

uint64_t _s16AttributedStringV4FontVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(unsigned char *)(a1 + 27) = *(unsigned char *)(a2 + 27);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  uint64_t v5 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v5;
  uint64_t v6 = (_OWORD *)(a1 + 48);
  uint64_t v7 = (_OWORD *)(a2 + 48);
  uint64_t v8 = *(void *)(a2 + 56);
  if (*(void *)(a1 + 56))
  {
    if (v8)
    {
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1000A4AC8(a1 + 48);
      uint64_t v9 = *(void *)(a2 + 64);
      _OWORD *v6 = *v7;
      *(void *)(a1 + 64) = v9;
    }
  }
  else if (v8)
  {
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v10 = *v7;
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    _OWORD *v6 = v10;
  }
  return a1;
}

__n128 _s16AttributedStringV4FontVwtk(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t _s16AttributedStringV4FontVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_DWORD *)(a1 + 25) = *(_DWORD *)(a2 + 25);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  if (!*(void *)(a1 + 56)) {
    goto LABEL_5;
  }
  uint64_t v5 = *(void *)(a2 + 56);
  if (!v5)
  {
    sub_1000A4AC8(a1 + 48);
LABEL_5:
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    return a1;
  }
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s16AttributedStringV4FontVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 72)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s16AttributedStringV4FontVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 72) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *_s16AttributedStringV4FontVMa()
{
  return &_s16AttributedStringV4FontVN;
}

uint64_t _s16AttributedStringV5ColorVwxx_0()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s16AttributedStringV5ColorVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s16AttributedStringV5ColorVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s16AttributedStringV5ColorVwta_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s16AttributedStringV5ColorVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1000A6C94(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s16AttributedStringVMa()
{
  return &_s16AttributedStringVN;
}

uint64_t sub_1000A6CE4(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 1954047348 && a2 == 0xE400000000000000;
  if (v3 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1000B7DC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1000A6DC8(void *a1)
{
  uint64_t v3 = sub_100032E20(&qword_1001050C8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[4];
  sub_100047028(a1, a1[3]);
  sub_1000A8258();
  sub_1000B7EA0();
  if (v1)
  {
    sub_100037F98((uint64_t)a1);
  }
  else
  {
    v9[31] = 0;
    uint64_t v7 = sub_1000B7C60();
    sub_100032E20(&qword_1001050D8);
    v9[15] = 1;
    sub_1000A82AC(&qword_1001050E0, &qword_1001050E8);
    swift_bridgeObjectRetain();
    sub_1000B7CA0();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    sub_100037F98((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_1000A7024(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6563617073 && a2 == 0xE500000000000000;
  if (v3 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656E6F706D6F63 && a2 == 0xEA00000000007374)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1000B7DC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1000A7110(void *a1)
{
  uint64_t v3 = sub_100032E20(&qword_100104F80);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[4];
  sub_100047028(a1, a1[3]);
  sub_1000A7358();
  sub_1000B7EA0();
  if (v1)
  {
    sub_100037F98((uint64_t)a1);
  }
  else
  {
    v9[31] = 0;
    uint64_t v7 = sub_1000B7C60();
    sub_100032E20(&qword_100104F90);
    v9[15] = 1;
    sub_1000A73AC(&qword_100104F98);
    swift_bridgeObjectRetain();
    sub_1000B7CA0();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    sub_100037F98((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_1000A7358()
{
  unint64_t result = qword_100104F88;
  if (!qword_100104F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104F88);
  }
  return result;
}

uint64_t sub_1000A73AC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100032F70(&qword_100104F90);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000A7410()
{
  unint64_t result = qword_100104FB8;
  if (!qword_100104FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104FB8);
  }
  return result;
}

uint64_t sub_1000A7464(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000A74AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_1000A7514()
{
  unint64_t result = qword_100104FD0;
  if (!qword_100104FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104FD0);
  }
  return result;
}

unint64_t sub_1000A7568()
{
  unint64_t result = qword_100104FD8;
  if (!qword_100104FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104FD8);
  }
  return result;
}

unint64_t sub_1000A75BC()
{
  unint64_t result = qword_100104FE0;
  if (!qword_100104FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104FE0);
  }
  return result;
}

unint64_t sub_1000A7610()
{
  unint64_t result = qword_100104FF8;
  if (!qword_100104FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100104FF8);
  }
  return result;
}

unint64_t sub_1000A7664()
{
  unint64_t result = qword_100105000;
  if (!qword_100105000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105000);
  }
  return result;
}

unint64_t sub_1000A76B8()
{
  unint64_t result = qword_100105018;
  if (!qword_100105018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105018);
  }
  return result;
}

unint64_t sub_1000A770C()
{
  unint64_t result = qword_100105030;
  if (!qword_100105030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105030);
  }
  return result;
}

void sub_1000A7760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    sub_10004E888(a7, a8);
  }
}

unint64_t sub_1000A77C0()
{
  unint64_t result = qword_100105038;
  if (!qword_100105038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105038);
  }
  return result;
}

unint64_t sub_1000A7814()
{
  unint64_t result = qword_100105040;
  if (!qword_100105040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105040);
  }
  return result;
}

unint64_t sub_1000A7868()
{
  unint64_t result = qword_100105050;
  if (!qword_100105050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105050);
  }
  return result;
}

unint64_t sub_1000A78BC()
{
  unint64_t result = qword_100105058;
  if (!qword_100105058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105058);
  }
  return result;
}

unint64_t sub_1000A7910()
{
  unint64_t result = qword_100105070;
  if (!qword_100105070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105070);
  }
  return result;
}

unint64_t sub_1000A7964()
{
  unint64_t result = qword_100105078;
  if (!qword_100105078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105078);
  }
  return result;
}

unint64_t sub_1000A79B8()
{
  unint64_t result = qword_100105088;
  if (!qword_100105088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105088);
  }
  return result;
}

unint64_t sub_1000A7A0C()
{
  unint64_t result = qword_100105090;
  if (!qword_100105090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105090);
  }
  return result;
}

uint64_t sub_1000A7A60(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v3 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7A6953746E696F70 && a2 == 0xE900000000000065 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x646C6F427369 && a2 == 0xE600000000000000 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x63696C6174497369 && a2 == 0xE800000000000000 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6C7265646E557369 && a2 == 0xEB00000000656E69 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656B697274537369 && a2 == 0xEF6867756F726874 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7263737265707573 && a2 == 0xEB00000000747069 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x726F6C6F63 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_1000B7DC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_1000A7D94@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_100032E20(&qword_1001050A0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100047028(a1, a1[3]);
  sub_1000A815C();
  sub_1000B7EA0();
  if (v2)
  {
    sub_100037F98((uint64_t)a1);
    swift_bridgeObjectRelease();
    return sub_10004E888(0, 0);
  }
  else
  {
    LOBYTE(v27) = 0;
    uint64_t v9 = sub_1000B7C10();
    uint64_t v11 = v10;
    LOBYTE(v27) = 1;
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1000B7C30();
    int v30 = v13;
    uint64_t v26 = v12;
    LOBYTE(v27) = 2;
    int v25 = sub_1000B7C20();
    LOBYTE(v27) = 3;
    int v24 = sub_1000B7C20();
    LOBYTE(v27) = 4;
    int v23 = sub_1000B7C20();
    LOBYTE(v27) = 5;
    int v22 = sub_1000B7C20();
    LOBYTE(v27) = 6;
    uint64_t v14 = sub_1000B7C40();
    HIDWORD(v20) = v15;
    uint64_t v21 = v14;
    char v31 = 7;
    sub_1000A81B0();
    sub_1000B7C50();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v16 = v27;
    uint64_t v17 = v28;
    uint64_t v18 = v29;
    sub_100094324(v27, v28);
    sub_10004E888(0, 0);
    swift_bridgeObjectRetain();
    sub_100094324(v16, v17);
    sub_10004E888(v16, v17);
    swift_bridgeObjectRelease();
    sub_100037F98((uint64_t)a1);
    swift_bridgeObjectRelease();
    uint64_t result = sub_10004E888(v16, v17);
    *(void *)a2 = v9;
    *(void *)(a2 + 8) = v11;
    *(void *)(a2 + 16) = v26;
    *(unsigned char *)(a2 + 24) = v30 & 1;
    *(unsigned char *)(a2 + 25) = v25;
    *(unsigned char *)(a2 + 26) = v24;
    *(unsigned char *)(a2 + 27) = v23;
    *(unsigned char *)(a2 + 28) = v22;
    *(void *)(a2 + 32) = v21;
    *(unsigned char *)(a2 + 40) = BYTE4(v20) & 1;
    *(void *)(a2 + 48) = v16;
    *(void *)(a2 + 56) = v17;
    *(void *)(a2 + 64) = v18;
  }
  return result;
}

unint64_t sub_1000A815C()
{
  unint64_t result = qword_1001050A8;
  if (!qword_1001050A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001050A8);
  }
  return result;
}

unint64_t sub_1000A81B0()
{
  unint64_t result = qword_1001050B0;
  if (!qword_1001050B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001050B0);
  }
  return result;
}

unint64_t sub_1000A8204()
{
  unint64_t result = qword_1001050C0;
  if (!qword_1001050C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001050C0);
  }
  return result;
}

unint64_t sub_1000A8258()
{
  unint64_t result = qword_1001050D0;
  if (!qword_1001050D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001050D0);
  }
  return result;
}

uint64_t sub_1000A82AC(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100032F70(&qword_1001050D8);
    sub_1000A7464(a2, (void (*)(uint64_t))_s16AttributedStringV9AttributeVMa);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *_s16AttributedStringV10CodingKeysOMa()
{
  return &_s16AttributedStringV10CodingKeysON;
}

unsigned char *_s16AttributedStringV4FontV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000A8424);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *_s16AttributedStringV4FontV10CodingKeysOMa()
{
  return &_s16AttributedStringV4FontV10CodingKeysON;
}

ValueMetadata *_s16AttributedStringV9AttributeV10CodingKeysOMa()
{
  return &_s16AttributedStringV9AttributeV10CodingKeysON;
}

ValueMetadata *_s16AttributedStringV16InlineAttachmentV10CodingKeysOMa()
{
  return &_s16AttributedStringV16InlineAttachmentV10CodingKeysON;
}

unsigned char *_s16AttributedStringV14ParagraphStyleV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000A8558);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *_s16AttributedStringV14ParagraphStyleV10CodingKeysOMa()
{
  return &_s16AttributedStringV14ParagraphStyleV10CodingKeysON;
}

ValueMetadata *_s16AttributedStringV13ChecklistItemV10CodingKeysOMa()
{
  return &_s16AttributedStringV13ChecklistItemV10CodingKeysON;
}

ValueMetadata *_s16AttributedStringV5ColorV10CodingKeysOMa()
{
  return &_s16AttributedStringV5ColorV10CodingKeysON;
}

ValueMetadata *_s16AttributedStringV10AlignmentsOMa()
{
  return &_s16AttributedStringV10AlignmentsON;
}

uint64_t _s16AttributedStringV19ParagraphStyleNamesOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s16AttributedStringV19ParagraphStyleNamesOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000A871CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *_s16AttributedStringV19ParagraphStyleNamesOMa()
{
  return &_s16AttributedStringV19ParagraphStyleNamesON;
}

ValueMetadata *_s16AttributedStringV17WritingDirectionsOMa()
{
  return &_s16AttributedStringV17WritingDirectionsON;
}

unsigned char *_s16AttributedStringV10AlignmentsOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000A8830);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s16AttributedStringV13EmphasisStyleOMa()
{
  return &_s16AttributedStringV13EmphasisStyleON;
}

ValueMetadata *_s16AttributedStringV14AttributeRangeVMa()
{
  return &_s16AttributedStringV14AttributeRangeVN;
}

unint64_t sub_1000A887C()
{
  unint64_t result = qword_100105108;
  if (!qword_100105108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105108);
  }
  return result;
}

unint64_t sub_1000A88D4()
{
  unint64_t result = qword_100105110;
  if (!qword_100105110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105110);
  }
  return result;
}

unint64_t sub_1000A892C()
{
  unint64_t result = qword_100105118;
  if (!qword_100105118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105118);
  }
  return result;
}

unint64_t sub_1000A8984()
{
  unint64_t result = qword_100105120;
  if (!qword_100105120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105120);
  }
  return result;
}

unint64_t sub_1000A89DC()
{
  unint64_t result = qword_100105128;
  if (!qword_100105128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105128);
  }
  return result;
}

unint64_t sub_1000A8A34()
{
  unint64_t result = qword_100105130;
  if (!qword_100105130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105130);
  }
  return result;
}

unint64_t sub_1000A8A8C()
{
  unint64_t result = qword_100105138;
  if (!qword_100105138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105138);
  }
  return result;
}

unint64_t sub_1000A8AE4()
{
  unint64_t result = qword_100105140;
  if (!qword_100105140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105140);
  }
  return result;
}

unint64_t sub_1000A8B3C()
{
  unint64_t result = qword_100105148;
  if (!qword_100105148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105148);
  }
  return result;
}

unint64_t sub_1000A8B94()
{
  unint64_t result = qword_100105150;
  if (!qword_100105150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105150);
  }
  return result;
}

unint64_t sub_1000A8BEC()
{
  unint64_t result = qword_100105158;
  if (!qword_100105158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105158);
  }
  return result;
}

unint64_t sub_1000A8C44()
{
  unint64_t result = qword_100105160;
  if (!qword_100105160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105160);
  }
  return result;
}

unint64_t sub_1000A8C9C()
{
  unint64_t result = qword_100105168;
  if (!qword_100105168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105168);
  }
  return result;
}

unint64_t sub_1000A8CF4()
{
  unint64_t result = qword_100105170;
  if (!qword_100105170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105170);
  }
  return result;
}

unint64_t sub_1000A8D4C()
{
  unint64_t result = qword_100105178;
  if (!qword_100105178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105178);
  }
  return result;
}

unint64_t sub_1000A8DA4()
{
  unint64_t result = qword_100105180;
  if (!qword_100105180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105180);
  }
  return result;
}

unint64_t sub_1000A8DFC()
{
  unint64_t result = qword_100105188;
  if (!qword_100105188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105188);
  }
  return result;
}

unint64_t sub_1000A8E54()
{
  unint64_t result = qword_100105190;
  if (!qword_100105190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105190);
  }
  return result;
}

unint64_t sub_1000A8EAC()
{
  unint64_t result = qword_100105198;
  if (!qword_100105198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105198);
  }
  return result;
}

unint64_t sub_1000A8F04()
{
  unint64_t result = qword_1001051A0;
  if (!qword_1001051A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001051A0);
  }
  return result;
}

unint64_t sub_1000A8F5C()
{
  unint64_t result = qword_1001051A8;
  if (!qword_1001051A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001051A8);
  }
  return result;
}

unint64_t sub_1000A8FB4()
{
  unint64_t result = qword_1001051B0;
  if (!qword_1001051B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001051B0);
  }
  return result;
}

unint64_t sub_1000A900C()
{
  unint64_t result = qword_1001051B8;
  if (!qword_1001051B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001051B8);
  }
  return result;
}

unint64_t sub_1000A9064()
{
  unint64_t result = qword_1001051C0;
  if (!qword_1001051C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001051C0);
  }
  return result;
}

unint64_t sub_1000A90BC()
{
  unint64_t result = qword_1001051C8;
  if (!qword_1001051C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001051C8);
  }
  return result;
}

uint64_t sub_1000A9110(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1000EF480;
  v6._object = a2;
  unint64_t v4 = sub_1000B7C00(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 0xA) {
    return 10;
  }
  else {
    return v4;
  }
}

uint64_t sub_1000A915C(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v3 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656E6F447369 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1000B7DC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1000A9248(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v3 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656D6E67696C61 && a2 == 0xE900000000000074 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746E65646E69 && a2 == 0xE600000000000000 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001000C91B0 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x73696C6B63656863 && a2 == 0xED00006D65744974 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6F75516B636F6C62 && a2 == 0xEF6C6576654C6574 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 1684632949 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_1000B7DC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

unint64_t sub_1000A9510()
{
  unint64_t result = qword_1001051D0;
  if (!qword_1001051D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001051D0);
  }
  return result;
}

unint64_t sub_1000A9564()
{
  unint64_t result = qword_1001051D8;
  if (!qword_1001051D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001051D8);
  }
  return result;
}

uint64_t sub_1000A95B8(uint64_t a1, void *a2, Swift::OpaquePointer a3)
{
  v7._countAndFlagsBits = a1;
  v7._object = a2;
  unint64_t v5 = sub_1000B7C00(a3, v7);
  swift_bridgeObjectRelease();
  if (v5 >= 5) {
    return 5;
  }
  else {
    return v5;
  }
}

uint64_t sub_1000A9600(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000018 && a2 == 0x80000001000C8DB0 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4164657461657263 && a2 == 0xE900000000000074 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001000C91D0 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x74786554746C61 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v5 = sub_1000B7DC0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1000A9818(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x7441737472617473 && a2 == 0xE800000000000000;
  if (v3 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6874676E656CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1000B7DC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1000A98FC(void *a1)
{
  uint64_t v3 = sub_100032E20(&qword_1001051E0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[3];
  sub_100047028(a1, v7);
  sub_1000A9E6C();
  sub_1000B7EA0();
  if (!v1)
  {
    v9[15] = 0;
    uint64_t v7 = sub_1000B7C90();
    v9[14] = 1;
    sub_1000B7C90();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  }
  sub_100037F98((uint64_t)a1);
  return v7;
}

uint64_t sub_1000A9AA0(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x65676E6172 && a2 == 0xE500000000000000;
  if (v3 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001000C91F0 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1953394534 && a2 == 0xE400000000000000 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7061726761726170 && a2 == 0xEE00656C79745368 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7369736168706D65 && a2 == 0xED0000656C797453 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 1802398060 && a2 == 0xE400000000000000 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001000C9210 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001000C9230 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001000C9250)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v6 = sub_1000B7DC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

unint64_t sub_1000A9E6C()
{
  unint64_t result = qword_1001051E8;
  if (!qword_1001051E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001051E8);
  }
  return result;
}

unint64_t sub_1000A9EC0()
{
  unint64_t result = qword_1001051F0;
  if (!qword_1001051F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001051F0);
  }
  return result;
}

unint64_t sub_1000A9F14()
{
  unint64_t result = qword_1001051F8;
  if (!qword_1001051F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001051F8);
  }
  return result;
}

unsigned char *_s16AttributedStringV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000AA034);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s16AttributedStringV14AttributeRangeV10CodingKeysOMa()
{
  return &_s16AttributedStringV14AttributeRangeV10CodingKeysON;
}

unint64_t sub_1000AA070()
{
  unint64_t result = qword_100105208;
  if (!qword_100105208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105208);
  }
  return result;
}

unint64_t sub_1000AA0C8()
{
  unint64_t result = qword_100105210;
  if (!qword_100105210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105210);
  }
  return result;
}

unint64_t sub_1000AA120()
{
  unint64_t result = qword_100105218;
  if (!qword_100105218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105218);
  }
  return result;
}

uint64_t sub_1000AA190(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1000AB26C(a1, a2, a3 & 1);
}

id sub_1000AA1AC(uint64_t a1, uint64_t a2, char a3)
{
  id result = [v3 managedObjectContext];
  if (result)
  {
    int v8 = result;
    if ((a3 & 1) == 0
      || (sub_100038DC8(0, &qword_100105230),
          ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(),
          NSString v10 = sub_1000B7580(),
          id v11 = [ObjCClassFromMetadata cloudObjectWithIdentifier:v10 context:v8],
          v10,
          !v11))
    {
      id v11 = sub_1000AAB2C(a1, a2, a3 & 1);
    }

    return v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1000AA29C(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1000AAB2C(a1, a2, a3 & 1);
}

id sub_1000AA2B8()
{
  uint64_t v1 = self;
  id v2 = [v0 defaultFolder];
  id v3 = [v1 newEmptyNoteInFolder:v2];

  return v3;
}

uint64_t sub_1000AA330()
{
  return sub_1000AAAA4();
}

id sub_1000AA348(uint64_t a1, uint64_t a2, id a3, void *a4)
{
  unsigned int v6 = v4;
  id result = [v6 managedObjectContext];
  if (result)
  {
    uint64_t v12 = result;
    unsigned int v13 = [v6 canAddSubfolder];
    if ((a3 & 1) == 0)
    {
      if (v13)
      {
        id v14 = [self newFolderInParentFolder:v6];
LABEL_18:
        id v26 = v14;

        return v26;
      }
      id v23 = [v6 account];
      id v24 = sub_1000AAB2C(a1, a2, 0);
      if (v5)
      {

        uint64_t v12 = v23;
LABEL_29:

        return a3;
      }
      a3 = v24;

LABEL_21:
      NSString v29 = sub_1000B7580();
      [a3 updateChangeCountWithReason:v29];

      return a3;
    }
    if (!v13)
    {
      sub_100038EC4();
      swift_allocError();
      *int v25 = 2;
      swift_willThrow();
      goto LABEL_29;
    }
    if (![v6 canAddSubfolder])
    {
      id v14 = v6;
      goto LABEL_18;
    }
    sub_100038DC8(0, &qword_100105228);
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    NSString v16 = sub_1000B7580();
    a3 = [ObjCClassFromMetadata cloudObjectWithIdentifier:v16 context:v12];

    if (!a3)
    {
      uint64_t v27 = self;
      NSString v28 = sub_1000B7580();
      a3 = [v27 newFolderWithIdentifier:v28 parentFolder:v6];

      goto LABEL_21;
    }
    if (sub_1000B79C0())
    {
LABEL_28:
      [a3 unmarkForDeletion];
      goto LABEL_29;
    }
    id v17 = [v6 objectID];
    uint64_t v18 = v17;
    if (a4)
    {
      id v19 = [a4 objectID];
      uint64_t v20 = v19;
      if (v18)
      {
        if (v19)
        {
          sub_100038DC8(0, &qword_100104988);
          id v21 = v18;
          char v22 = sub_1000B79C0();

          if (v22) {
            goto LABEL_28;
          }
          goto LABEL_26;
        }
      }
      else
      {
        uint64_t v18 = v19;
        if (!v19) {
          goto LABEL_28;
        }
      }
    }
    else if (!v17)
    {
      goto LABEL_28;
    }

LABEL_26:
    if ([a3 isMovable])
    {
      [a3 unmarkForDeletion];
      [a3 setParent:v6];
      goto LABEL_29;
    }
    goto LABEL_28;
  }
  __break(1u);
  return result;
}

id sub_1000AA694(uint64_t a1, uint64_t a2, __int16 a3, void *a4, id a5, double a6)
{
  uint64_t v7 = v6;
  id result = [v7 managedObjectContext];
  if (result)
  {
    int v15 = result;
    unsigned int v16 = [v7 canMoveAddOrDeleteContents];
    if ((a3 & 1) == 0)
    {
      if (v16)
      {
        a5 = [self newEmptyNoteInFolder:v7];
LABEL_21:
        NSString v30 = sub_1000B7580();
        [a5 updateChangeCountWithReason:v30];

        return a5;
      }
      id v25 = [v7 account];
      id v26 = [v25 defaultFolder];

      a5 = (id)sub_1000AA694(a1, a2, a3 & 0x100, a4, a5, a6);
      return a5;
    }
    if (!v16)
    {
      sub_100038EC4();
      swift_allocError();
      void *v27 = 2;
      swift_willThrow();

      return a5;
    }
    sub_100038DC8(0, &qword_100103980);
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    NSString v18 = sub_1000B7580();
    a5 = [ObjCClassFromMetadata cloudObjectWithIdentifier:v18 context:v15];

    if (!a5)
    {
      NSString v28 = self;
      NSString v29 = sub_1000B7580();
      a5 = [v28 newEmptyNoteWithIdentifier:v29 folder:v7];

      goto LABEL_21;
    }
    id v19 = [v7 objectID];
    uint64_t v20 = v19;
    if (a4)
    {
      id v21 = [a4 objectID];
      char v22 = v21;
      if (v20)
      {
        if (v21)
        {
          sub_100038DC8(0, &qword_100104988);
          id v23 = v20;
          char v24 = sub_1000B79C0();

          if (v24) {
            goto LABEL_22;
          }
          goto LABEL_19;
        }
      }
      else
      {
        uint64_t v20 = v21;
        if (!v21) {
          goto LABEL_22;
        }
      }
    }
    else if (!v19)
    {
      goto LABEL_22;
    }

LABEL_19:
    if ([a5 isMovable])
    {
      [a5 unmarkForDeletion];
      [a5 setFolder:v7];
      goto LABEL_21;
    }
LABEL_22:
    [a5 unmarkForDeletion];

    return a5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000AA9D8(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1000AB0C8(a1, a2, a3 & 1);
}

id sub_1000AA9F4(uint64_t a1, uint64_t a2, __int16 a3, void *a4)
{
  return sub_1000AA348(a1, a2, (id)(a3 & 0x101), a4);
}

id sub_1000AAA14(uint64_t a1, uint64_t a2, __int16 a3, void *a4, void *a5, double a6)
{
  return sub_1000AA694(a1, a2, a3 & 0x101, a4, a5, a6);
}

uint64_t sub_1000AAA34(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1000AAEE8(a1, a2, a3 & 1);
}

id sub_1000AAA50(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1000ABBBC(a1, a2, a3 & 1);
}

id sub_1000AAA6C(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1000AB688(a1, a2, a3 & 1);
}

uint64_t sub_1000AAA88(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1000AACE4(a1, a2, a3 & 1);
}

uint64_t sub_1000AAAA4()
{
  sub_100038EC4();
  swift_allocError();
  *unint64_t v0 = 1;
  return swift_willThrow();
}

id sub_1000AAAF4(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1000AB8F8(a1, a2, a3 & 1);
}

id sub_1000AAB10(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1000AB3EC(a1, a2, a3 & 1);
}

id sub_1000AAB2C(uint64_t a1, uint64_t a2, char a3)
{
  unsigned int v4 = v3;
  id result = [v3 managedObjectContext];
  if (result)
  {
    uint64_t v7 = result;
    if (a3)
    {
      sub_100038DC8(0, &qword_100105228);
      ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
      NSString v9 = sub_1000B7580();
      id v10 = [ObjCClassFromMetadata cloudObjectWithIdentifier:v9 context:v7];

      if (v10)
      {
        if ([v10 isMovable]) {
          [v10 setParent:0];
        }
        else {
          [v10 unmarkForDeletion];
        }
        goto LABEL_9;
      }
      id v11 = self;
      NSString v12 = sub_1000B7580();
      id v10 = [v11 newFolderWithIdentifier:v12 account:v4];
    }
    else
    {
      id v10 = [self newFolderInAccount:v4];
    }
    NSString v13 = sub_1000B7580();
    [v10 updateChangeCountWithReason:v13];

    uint64_t v7 = v13;
LABEL_9:

    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000AACE4(uint64_t a1, uint64_t a2, char a3)
{
  id v6 = [v3 note];
  if (!v6 || (uint64_t v7 = v6, v4 = [v6 account], v7, !v4))
  {
    sub_100038EC4();
    swift_allocError();
    *NSString v12 = 1;
    swift_willThrow();
    return (uint64_t)v4;
  }
  swift_bridgeObjectRetain();
  id v8 = v4;
  NSString v9 = sub_1000B7580();
  swift_bridgeObjectRelease();
  id v4 = [self hashtagWithDisplayText:v9 account:v8 createIfNecessary:1];

  if (v4)
  {
    if (a3)
    {
      NSString v10 = sub_1000B7580();
      [v4 setDisplayText:v10];

      [v4 unmarkForDeletion];
      NSString v11 = sub_1000B7580();
      [v4 updateChangeCountWithReason:v11];
    }
    else
    {
    }
    return (uint64_t)v4;
  }
  uint64_t result = sub_1000B7B90();
  __break(1u);
  return result;
}

uint64_t sub_1000AAEE8(uint64_t a1, uint64_t a2, char a3)
{
  id v6 = [v3 account];
  if (!v6)
  {
    sub_100038EC4();
    swift_allocError();
    *NSString v12 = 1;
    swift_willThrow();
    return (uint64_t)v4;
  }
  uint64_t v7 = v6;
  swift_bridgeObjectRetain();
  id v8 = v7;
  NSString v9 = sub_1000B7580();
  swift_bridgeObjectRelease();
  id v4 = [self hashtagWithDisplayText:v9 account:v8 createIfNecessary:1];

  if (v4)
  {
    if (a3)
    {
      NSString v10 = sub_1000B7580();
      [v4 setDisplayText:v10];

      [v4 unmarkForDeletion];
      NSString v11 = sub_1000B7580();
      [v4 updateChangeCountWithReason:v11];
    }
    else
    {
    }
    return (uint64_t)v4;
  }
  uint64_t result = sub_1000B7B90();
  __break(1u);
  return result;
}

uint64_t sub_1000AB0C8(uint64_t a1, uint64_t a2, char a3)
{
  id v5 = [v3 account];
  swift_bridgeObjectRetain();
  id v6 = v5;
  NSString v7 = sub_1000B7580();
  swift_bridgeObjectRelease();
  id v8 = [self hashtagWithDisplayText:v7 account:v6 createIfNecessary:1];

  if (v8)
  {
    if (a3)
    {
      NSString v9 = sub_1000B7580();
      [v8 setDisplayText:v9];

      [v8 unmarkForDeletion];
      NSString v10 = sub_1000B7580();
      [v8 updateChangeCountWithReason:v10];

      id v6 = v10;
    }

    return (uint64_t)v8;
  }
  else
  {
    uint64_t result = sub_1000B7B90();
    __break(1u);
  }
  return result;
}

uint64_t sub_1000AB26C(uint64_t a1, uint64_t a2, char a3)
{
  swift_bridgeObjectRetain();
  id v5 = v3;
  NSString v6 = sub_1000B7580();
  swift_bridgeObjectRelease();
  id v7 = [self hashtagWithDisplayText:v6 account:v5 createIfNecessary:1];

  if (v7)
  {
    if (a3)
    {
      NSString v8 = sub_1000B7580();
      [v7 setDisplayText:v8];

      [v7 unmarkForDeletion];
      NSString v9 = sub_1000B7580();
      [v7 updateChangeCountWithReason:v9];
    }
    return (uint64_t)v7;
  }
  else
  {
    uint64_t result = sub_1000B7B90();
    __break(1u);
  }
  return result;
}

id sub_1000AB3EC(uint64_t a1, uint64_t a2, char a3)
{
  id v4 = v3;
  uint64_t v6 = sub_1000B7030();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  NSString v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = [v4 managedObjectContext];
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  NSString v11 = result;
  id result = [v4 note];
  if (!result)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  NSString v12 = result;
  if (a3)
  {
    sub_100038DC8(0, &qword_100103EC0);
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    NSString v14 = sub_1000B7580();
    id v15 = [ObjCClassFromMetadata cloudObjectWithIdentifier:v14 context:v11];

    if (v15)
    {
      [v15 setNote:v12];
      [v15 setParentAttachment:v4];
      [v15 unmarkForDeletion];
    }
    else
    {
      NSString v17 = sub_1000B7580();
      id v15 = [v4 addInlineAttachmentWithIdentifier:v17];
    }
  }
  else
  {
    sub_1000B7020();
    sub_1000B6FF0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    NSString v16 = sub_1000B7580();
    swift_bridgeObjectRelease();
    id v15 = [v4 addInlineAttachmentWithIdentifier:v16];
  }
  NSString v18 = sub_1000B7580();
  [v15 updateChangeCountWithReason:v18];

  return v15;
}

id sub_1000AB688(uint64_t a1, uint64_t a2, char a3)
{
  id v4 = v3;
  uint64_t v6 = sub_1000B7030();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  NSString v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = [v3 managedObjectContext];
  if (result)
  {
    NSString v11 = result;
    if (a3)
    {
      sub_100038DC8(0, &qword_100103EC0);
      ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
      NSString v13 = sub_1000B7580();
      id v14 = [ObjCClassFromMetadata cloudObjectWithIdentifier:v13 context:v11];

      if (v14)
      {
        [v14 setNote:v3];
        [v14 setParentAttachment:0];
        [v14 unmarkForDeletion];
        NSString v15 = sub_1000B7580();
        [v14 updateChangeCountWithReason:v15];

        return v14;
      }
      NSString v16 = sub_1000B7580();
      id v17 = [v4 addInlineAttachmentWithIdentifier:v16];
    }
    else
    {
      sub_1000B7020();
      sub_1000B6FF0();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      NSString v16 = sub_1000B7580();
      swift_bridgeObjectRelease();
      id v17 = [v4 addInlineAttachmentWithIdentifier:v16];
    }
    id v18 = v17;

    return v18;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1000AB8F8(uint64_t a1, uint64_t a2, char a3)
{
  id v4 = v3;
  uint64_t v6 = sub_1000B7030();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  NSString v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = [v4 managedObjectContext];
  if (result)
  {
    NSString v11 = result;
    id result = [v4 note];
    if (result)
    {
      NSString v12 = result;
      if (a3)
      {
        sub_100038DC8(0, &qword_100105220);
        ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
        NSString v14 = sub_1000B7580();
        id v15 = [ObjCClassFromMetadata cloudObjectWithIdentifier:v14 context:v11];

        if (v15)
        {
          [v15 setNote:v12];
          [v15 setParentAttachment:v4];
          [v15 unmarkForDeletion];
LABEL_9:
          NSString v20 = sub_1000B7580();
          [v15 updateChangeCountWithReason:v20];

          return v15;
        }
        id v18 = self;
        NSString v19 = sub_1000B7580();
        id v15 = [v18 newAttachmentWithIdentifier:v19 note:v12];
      }
      else
      {
        NSString v16 = self;
        sub_1000B7020();
        sub_1000B6FF0();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        NSString v17 = sub_1000B7580();
        swift_bridgeObjectRelease();
        id v15 = [v16 newAttachmentWithIdentifier:v17 note:v12];
      }
      [v15 setParentAttachment:v4];
      goto LABEL_9;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_1000ABBBC(uint64_t a1, uint64_t a2, char a3)
{
  id v4 = v3;
  uint64_t v6 = sub_1000B7030();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  NSString v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = [v3 managedObjectContext];
  if (result)
  {
    NSString v11 = result;
    if (a3)
    {
      sub_100038DC8(0, &qword_100105220);
      ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
      NSString v13 = sub_1000B7580();
      id v14 = [ObjCClassFromMetadata cloudObjectWithIdentifier:v13 context:v11];

      if (!v14)
      {
        NSString v17 = self;
        NSString v18 = sub_1000B7580();
        id v19 = [v17 newAttachmentWithIdentifier:v18 note:v4];

        return v19;
      }
      [v14 setNote:v3];
      [v14 setParentAttachment:0];
      [v14 unmarkForDeletion];
      NSString v15 = sub_1000B7580();
      [v14 updateChangeCountWithReason:v15];
    }
    else
    {
      NSString v16 = self;
      sub_1000B7020();
      sub_1000B6FF0();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      NSString v15 = sub_1000B7580();
      swift_bridgeObjectRelease();
      id v14 = [v16 newAttachmentWithIdentifier:v15 note:v4];
    }

    return v14;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000ABE4C()
{
  return sub_1000ADEC0(&qword_100104100, (void (*)(uint64_t))_s3TagVMa);
}

uint64_t _s3TagVMa()
{
  uint64_t result = qword_1001052A0;
  if (!qword_1001052A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000ABEE0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000B6FD0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100032E20(&qword_100103A20);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000AD0E0(v1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_1000B7E60(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_1000B7E60(1u);
    sub_1000ADEC0(&qword_1001049B8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_1000B7530();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  _s3TagVMa();
  swift_bridgeObjectRetain();
  sub_1000B7620();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000AC0DC(char a1)
{
  if (a1) {
    return 1954047348;
  }
  else {
    return 0x4164657461657263;
  }
}

uint64_t sub_1000AC110(void *a1)
{
  uint64_t v3 = sub_100032E20(&qword_1001052F8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100047028(a1, a1[3]);
  sub_1000ACCA8();
  sub_1000B7EB0();
  v8[15] = 0;
  sub_1000B6FD0();
  sub_1000ADEC0(&qword_100103D40, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1000B7D00();
  if (!v1)
  {
    _s3TagVMa();
    v8[14] = 1;
    sub_1000B7D10();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

Swift::Int sub_1000AC2C8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000B6FD0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100032E20(&qword_100103A20);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000B7E40();
  sub_1000AD0E0(v1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_1000B7E60(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_1000B7E60(1u);
    sub_1000ADEC0(&qword_1001049B8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_1000B7530();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  _s3TagVMa();
  swift_bridgeObjectRetain();
  sub_1000B7620();
  swift_bridgeObjectRelease();
  return sub_1000B7E70();
}

uint64_t sub_1000AC4D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v4 = sub_100032E20(&qword_100103A20);
  __chkstk_darwin(v4 - 8);
  uint64_t v23 = (uint64_t)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100032E20(&qword_100105238);
  uint64_t v21 = *(void *)(v6 - 8);
  uint64_t v22 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = _s3TagVMa();
  __chkstk_darwin(v9);
  NSString v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000B6FD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  sub_100047028(a1, a1[3]);
  sub_1000ACCA8();
  sub_1000B7EA0();
  if (v2)
  {
    sub_100037F98((uint64_t)a1);
    return sub_100038E30((uint64_t)v11, &qword_100103A20);
  }
  else
  {
    uint64_t v13 = v21;
    char v25 = 0;
    sub_1000ADEC0(&qword_100103DB8, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v14 = v22;
    sub_1000B7C50();
    sub_10004E390(v23, (uint64_t)v11);
    char v24 = 1;
    uint64_t v15 = sub_1000B7C60();
    uint64_t v17 = v16;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v14);
    NSString v18 = (uint64_t *)&v11[*(int *)(v9 + 20)];
    uint64_t *v18 = v15;
    v18[1] = v17;
    sub_100046CD4((uint64_t)v11, v20);
    sub_100037F98((uint64_t)a1);
    return sub_10006CB4C((uint64_t)v11);
  }
}

uint64_t sub_1000AC7D8()
{
  return sub_1000AC0DC(*v0);
}

uint64_t sub_1000AC7E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000ADDDC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000AC808(uint64_t a1)
{
  unint64_t v2 = sub_1000ACCA8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000AC844(uint64_t a1)
{
  unint64_t v2 = sub_1000ACCA8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000AC880@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000AC4D8(a1, a2);
}

uint64_t sub_1000AC898(void *a1)
{
  return sub_1000AC110(a1);
}

Swift::Int sub_1000AC8B8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000B6FD0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100032E20(&qword_100103A20);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000B7E40();
  sub_1000AD0E0(v1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_1000B7E60(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_1000B7E60(1u);
    sub_1000ADEC0(&qword_1001049B8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_1000B7530();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  swift_bridgeObjectRetain();
  sub_1000B7620();
  swift_bridgeObjectRelease();
  return sub_1000B7E70();
}

uint64_t sub_1000ACAD4()
{
  uint64_t v0 = _s3TagVMa();
  sub_100038F18(v0, qword_10010E9B0);
  uint64_t v1 = sub_100038E8C(v0, (uint64_t)qword_10010E9B0);
  uint64_t v2 = sub_1000B6FD0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v4 = (void *)(v1 + *(int *)(v0 + 20));
  void *v4 = 0;
  v4[1] = 0xE000000000000000;
  return result;
}

uint64_t sub_1000ACB6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (qword_1001036D8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_100038E8C(a1, (uint64_t)qword_10010E9B0);

  return sub_100046CD4(v4, a2);
}

uint64_t sub_1000ACBE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1000B6FD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a4, 1, 1, v8);
  uint64_t v9 = (void *)(a4 + *(int *)(a3 + 20));
  void *v9 = a1;
  v9[1] = a2;
  uint64_t v10 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56);

  return v10(a4, 0, 1, a3);
}

unint64_t sub_1000ACCA8()
{
  unint64_t result = qword_100105240;
  if (!qword_100105240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105240);
  }
  return result;
}

uint64_t sub_1000ACCFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000B6FD0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100032E20(&qword_1001049B0);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  NSString v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100032E20(&qword_100103A20);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13);
  NSString v18 = (char *)&v31 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v31 - v19;
  uint64_t v31 = a1;
  sub_1000AD0E0(a1, (uint64_t)&v31 - v19);
  uint64_t v32 = a2;
  sub_1000AD0E0(a2, (uint64_t)v18);
  uint64_t v21 = (uint64_t)&v11[*(int *)(v9 + 56)];
  sub_1000AD0E0((uint64_t)v20, (uint64_t)v11);
  sub_1000AD0E0((uint64_t)v18, v21);
  uint64_t v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v22((uint64_t)v11, 1, v4) != 1)
  {
    sub_1000AD0E0((uint64_t)v11, (uint64_t)v15);
    if (v22(v21, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v21, v4);
      sub_1000ADEC0(&qword_1001049C0, (void (*)(uint64_t))&type metadata accessor for Date);
      char v23 = sub_1000B7570();
      char v24 = *(void (**)(char *, uint64_t))(v5 + 8);
      v24(v7, v4);
      sub_100038E30((uint64_t)v18, &qword_100103A20);
      sub_100038E30((uint64_t)v20, &qword_100103A20);
      v24(v15, v4);
      sub_100038E30((uint64_t)v11, &qword_100103A20);
      if (v23) {
        goto LABEL_8;
      }
LABEL_11:
      char v29 = 0;
      return v29 & 1;
    }
    sub_100038E30((uint64_t)v18, &qword_100103A20);
    sub_100038E30((uint64_t)v20, &qword_100103A20);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v15, v4);
LABEL_6:
    sub_100038E30((uint64_t)v11, &qword_1001049B0);
    goto LABEL_11;
  }
  sub_100038E30((uint64_t)v18, &qword_100103A20);
  sub_100038E30((uint64_t)v20, &qword_100103A20);
  if (v22(v21, 1, v4) != 1) {
    goto LABEL_6;
  }
  sub_100038E30((uint64_t)v11, &qword_100103A20);
LABEL_8:
  uint64_t v25 = *(int *)(_s3TagVMa() + 20);
  id v26 = (void *)(v31 + v25);
  uint64_t v27 = *(void *)(v31 + v25 + 8);
  NSString v28 = (void *)(v32 + v25);
  if (*v26 == *v28 && v27 == v28[1]) {
    char v29 = 1;
  }
  else {
    char v29 = sub_1000B7DC0();
  }
  return v29 & 1;
}

uint64_t sub_1000AD0E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100032E20(&qword_100103A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unsigned char *_s3TagV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000AD214);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s3TagV10CodingKeysOMa()
{
  return &_s3TagV10CodingKeysON;
}

uint64_t *sub_1000AD24C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1000B6FD0();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_100032E20(&qword_100103A20);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = (uint64_t *)((char *)a1 + v11);
    uint64_t v13 = (uint64_t *)((char *)a2 + v11);
    uint64_t v14 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v14;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1000AD3D0(uint64_t a1)
{
  uint64_t v2 = sub_1000B6FD0();
  uint64_t v3 = *(void *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2)) {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }

  return swift_bridgeObjectRelease();
}

char *sub_1000AD4A0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B6FD0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100032E20(&qword_100103A20);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = *((void *)v11 + 1);
  *(void *)uint64_t v10 = *(void *)v11;
  *((void *)v10 + 1) = v12;
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_1000AD5D4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B6FD0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_100032E20(&qword_100103A20);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_1000AD780(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B6FD0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100032E20(&qword_100103A20);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_1000AD8A8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B6FD0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_100032E20(&qword_100103A20);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v16 = *(void *)v14;
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = v16;
  *((void *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000ADA44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000ADA58);
}

uint64_t sub_1000ADA58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100032E20(&qword_100103A20);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1000ADB20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000ADB34);
}

uint64_t sub_1000ADB34(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100032E20(&qword_100103A20);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

void sub_1000ADBF8()
{
  sub_1000518DC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_1000ADC90()
{
  unint64_t result = qword_1001052D8;
  if (!qword_1001052D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001052D8);
  }
  return result;
}

uint64_t sub_1000ADCE4()
{
  return sub_1000ADEC0(&qword_1001052E0, (void (*)(uint64_t))_s3TagVMa);
}

unint64_t sub_1000ADD30()
{
  unint64_t result = qword_1001052E8;
  if (!qword_1001052E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001052E8);
  }
  return result;
}

unint64_t sub_1000ADD88()
{
  unint64_t result = qword_1001052F0;
  if (!qword_1001052F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001052F0);
  }
  return result;
}

uint64_t sub_1000ADDDC(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x4164657461657263 && a2 == 0xE900000000000074;
  if (v3 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1954047348 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1000B7DC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1000ADEC0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000ADF0C()
{
  unint64_t result = qword_100105318;
  if (!qword_100105318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105318);
  }
  return result;
}

void *sub_1000ADF60(double a1, uint64_t a2, uint64_t a3, __int16 a4, uint64_t a5, uint64_t a6)
{
  uint64_t v35 = a6;
  uint64_t v7 = v6;
  uint64_t v34 = a5;
  uint64_t v11 = sub_1000B7040();
  uint64_t v32 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000B7060();
  uint64_t v33 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100032E20(&qword_1001053A8);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v21 = v36;
  uint64_t v22 = (void *)(*(uint64_t (**)(void, void, void, uint64_t, uint64_t, uint64_t, uint64_t, double))(a3 + 24))(*(void *)(v7 + 8), *(void *)(v7 + 16), a4 & 0x101, v34, v35, ObjectType, a3, a1);
  if (!v21)
  {
    uint64_t v23 = v33;
    uint64_t v35 = v14;
    uint64_t v36 = type metadata accessor for ICFolderArchiveModel(0);
    sub_1000B2D78(v7 + *(int *)(v36 + 44), (uint64_t)v19);
    uint64_t v24 = type metadata accessor for ICFolderArchiveModel.Query(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v19, 1, v24) == 1)
    {
      sub_100038E30((uint64_t)v19, &qword_1001053A8);
      uint64_t v25 = 0;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v16, v19, v35);
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v13, &v19[*(int *)(v24 + 20)], v11);
      id v26 = objc_allocWithZone((Class)sub_1000B7390());
      uint64_t v25 = (void *)sub_1000B7370();
      sub_1000B2D18((uint64_t)v19, type metadata accessor for ICFolderArchiveModel.Query);
    }
    [v22 setSmartFolderQueryObjC:v25];

    if ([v22 isRenamable])
    {
      swift_bridgeObjectRetain();
      NSString v27 = sub_1000B7580();
      swift_bridgeObjectRelease();
      [v22 setTitle:v27];
    }
    if ([v22 supportsCustomNoteSortType])
    {
      unint64_t v28 = *(unsigned __int16 *)(v7 + *(int *)(v36 + 48));
      if ((v28 & 0xFF00) == 0x200) {
        id v29 = 0;
      }
      else {
        id v29 = [self folderNoteSortTypeWithOrder:qword_1000D0718[(char)v28] direction:(v28 >> 8) & 1];
      }
      [v22 setCustomNoteSortType:v29];
    }
  }
  return v22;
}

id sub_1000AE358(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + *(int *)(type metadata accessor for ICFolderArchiveModel(0) + 52));
  if (!v5) {
    return 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = (unint64_t)sub_100045148(v5, a2);
  swift_bridgeObjectRelease();
  id v7 = [a1 subFolderIdentifiersOrderedSet];
  [v7 removeAllObjects];

  id v8 = [a1 subFolderIdentifiersOrderedSet];
  uint64_t v9 = v8;
  if (!(v6 >> 62))
  {
    uint64_t v10 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v11 = v8;
    id result = (id)swift_bridgeObjectRetain();
    if (v10) {
      goto LABEL_4;
    }
LABEL_12:

    swift_bridgeObjectRelease_n();
    [a1 setSubFolderOrderMergeableDataDirty:1];
    [a1 saveSubFolderMergeableDataIfNeeded];
    return [a1 subFolderIdentifiersOrderedSetDocument];
  }
  id v16 = v8;
  swift_bridgeObjectRetain();
  id result = (id)sub_1000B7BA0();
  uint64_t v10 = (uint64_t)result;
  if (!result) {
    goto LABEL_12;
  }
LABEL_4:
  if (v10 >= 1)
  {
    for (uint64_t i = 0; i != v10; ++i)
    {
      if ((v6 & 0xC000000000000001) != 0) {
        id v14 = (id)sub_1000B7AC0();
      }
      else {
        id v14 = *(id *)(v6 + 8 * i + 32);
      }
      uint64_t v15 = v14;
      [v9 addObject:v14];
    }
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000AE524(uint64_t a1)
{
  uint64_t v4 = sub_100032E20(&qword_100103BC0);
  __chkstk_darwin(v4 - 8);
  uint64_t v35 = (uint64_t)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100032E20(&qword_100103BC8);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000B7330();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v31 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = _s8ActivityVMa();
  uint64_t v12 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  id v14 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(v1 + *(int *)(type metadata accessor for ICFolderArchiveModel(0) + 56));
  if (!v15) {
    return 0;
  }
  v27[2] = a1;
  unint64_t v37 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v16 = *(void *)(v15 + 16);
  if (!v16) {
    goto LABEL_13;
  }
  v27[0] = v15;
  v27[1] = v2;
  uint64_t v17 = v15 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v18 = *(void *)(v12 + 72);
  uint64_t v33 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v34 = v18;
  unint64_t v28 = (void (**)(char *, uint64_t))(v10 + 8);
  id v29 = (void (**)(char *, char *, uint64_t))(v10 + 32);
  swift_bridgeObjectRetain();
  uint64_t v36 = v14;
  do
  {
    sub_1000B2CB0(v17, (uint64_t)v14, (uint64_t (*)(void))_s8ActivityVMa);
    ICInternalSettingsIsAlexandriaDemoModeEnabled();
    ICInternalSettingsIsAlexandriaDemoModeEnabled();
    sub_1000561A0((uint64_t)v8);
    if ((*v33)(v8, 1, v9) == 1)
    {
      sub_100038E30((uint64_t)v8, &qword_100103BC8);
      uint64_t v32 = sub_100038DC8(0, (unint64_t *)&qword_100103820);
      uint64_t v19 = v8;
      uint64_t v20 = v35;
      sub_100056974(v35);
      id v14 = v36;
      sub_1000B7930();
      uint64_t v21 = v20;
      id v8 = v19;
      sub_100038E30(v21, &qword_100103BC0);
      sub_1000B2D18((uint64_t)v14, (uint64_t (*)(void))_s8ActivityVMa);
    }
    else
    {
      uint64_t v22 = v31;
      (*v29)(v31, v8, v9);
      sub_100038DC8(0, (unint64_t *)&qword_100103820);
      uint64_t v23 = v35;
      sub_100056974(v35);
      uint64_t v24 = sub_1000B7920();
      uint64_t v25 = v23;
      id v14 = v36;
      sub_100038E30(v25, &qword_100103BC0);
      (*v28)(v22, v9);
      sub_1000B2D18((uint64_t)v14, (uint64_t (*)(void))_s8ActivityVMa);
      if (!v24) {
        goto LABEL_8;
      }
    }
    sub_1000B76C0();
    if (*(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1000B7710();
    }
    sub_1000B7740();
    sub_1000B7700();
LABEL_8:
    v17 += v34;
    --v16;
  }
  while (v16);
  swift_bridgeObjectRelease();
LABEL_13:
  sub_1000B7950();
  return sub_1000B7940();
}

void sub_1000AE9D0(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v85 = a2;
  uint64_t v5 = _s8ActivityVMa();
  uint64_t v88 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100032E20(&qword_1001053A8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(unsigned char *)a3 = 2;
  *(_OWORD *)(a3 + 24) = 0u;
  *(_OWORD *)(a3 + 40) = 0u;
  *(unsigned char *)(a3 + 56) = 2;
  *(unsigned char *)(a3 + 80) = 3;
  uint64_t v11 = (int *)type metadata accessor for ICFolderArchiveModel(0);
  uint64_t v12 = a3 + v11[11];
  uint64_t v13 = type metadata accessor for ICFolderArchiveModel.Query(0);
  id v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
  uint64_t v84 = v12;
  v14(v12, 1, 1, v13);
  uint64_t v15 = v11[12];
  *(_WORD *)(a3 + v15) = 512;
  uint64_t v82 = v11[13];
  uint64_t v83 = v15;
  *(void *)(a3 + v82) = 0;
  uint64_t v16 = v11[14];
  id v86 = a1;
  int v87 = (void *)a3;
  uint64_t v81 = v16;
  *(void *)(a3 + v16) = 0;
  id v17 = [a1 identifier];
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v19 = sub_1000B75B0();
    unint64_t v21 = v20;
  }
  else
  {
    uint64_t v19 = 0;
    unint64_t v21 = 0xE000000000000000;
  }
  id v22 = v86;
  uint64_t v23 = v87;
  v87[1] = v19;
  v23[2] = v21;
  id v24 = [v22 title];
  uint64_t v25 = sub_1000B75B0();
  uint64_t v27 = v26;

  v23[8] = v25;
  v23[9] = v27;
  id v28 = [v22 smartFolderQueryObjC];
  if (v28)
  {
    id v29 = v28;
    sub_1000B7380();
    sub_1000B7360();

    v14((uint64_t)v10, 0, 1, v13);
  }
  else
  {
    v14((uint64_t)v10, 1, 1, v13);
  }
  sub_1000B2C48((uint64_t)v10, v84);
  id v30 = v86;
  id v31 = [v86 customNoteSortType];
  if (!v31) {
    goto LABEL_11;
  }
  uint64_t v32 = v31;
  if ([v31 isDefault]
    || (unsigned __int8 v33 = sub_1000B184C((uint64_t)[v32 order]), v33 == 3))
  {

LABEL_11:
    __int16 v34 = 512;
    goto LABEL_12;
  }
  unsigned __int8 v49 = v33;
  char v50 = sub_1000B1A08((uint64_t)[v32 direction]);

  if (v50 == 2) {
    goto LABEL_11;
  }
  __int16 v34 = v49 | ((v50 & 1) << 8);
LABEL_12:
  *(_WORD *)((char *)v87 + v83) = v34;
  id v35 = [v30 subFolderIdentifiersOrderedSet];
  id v36 = [v35 allObjects];

  sub_100038DC8(0, (unint64_t *)&qword_100103BA8);
  unint64_t v37 = sub_1000B76E0();

  if (v37 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v38 = sub_1000B7BA0();
    swift_bridgeObjectRelease();
    if (v38) {
      goto LABEL_14;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    uint64_t v40 = _swiftEmptyArrayStorage;
    goto LABEL_27;
  }
  uint64_t v38 = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v38) {
    goto LABEL_26;
  }
LABEL_14:
  uint64_t v89 = _swiftEmptyArrayStorage;
  sub_100043800(0, v38 & ~(v38 >> 63), 0);
  if (v38 < 0)
  {
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v39 = 0;
  uint64_t v40 = v89;
  do
  {
    if ((v37 & 0xC000000000000001) != 0) {
      id v41 = (id)sub_1000B7AC0();
    }
    else {
      id v41 = *(id *)(v37 + 8 * v39 + 32);
    }
    uint64_t v42 = v41;
    uint64_t v43 = sub_1000B75B0();
    uint64_t v45 = v44;

    uint64_t v89 = v40;
    unint64_t v47 = v40[2];
    unint64_t v46 = v40[3];
    if (v47 >= v46 >> 1)
    {
      sub_100043800(v46 > 1, v47 + 1, 1);
      uint64_t v40 = v89;
    }
    ++v39;
    _OWORD v40[2] = v47 + 1;
    uint64_t v48 = &v40[2 * v47];
    v48[4] = v43;
    v48[5] = v45;
  }
  while (v38 != v39);
  swift_bridgeObjectRelease();
  id v30 = v86;
LABEL_27:
  uint64_t v51 = v87;
  uint64_t v52 = v82;
  swift_bridgeObjectRelease();
  *(void *)((char *)v51 + v52) = v40;
  int v53 = v85;
  if ((v85[6] & 1) == 0)
  {
    sub_10005EA8C(v85);
    if ((*((unsigned char *)v53 + 51) & 1) == 0)
    {
LABEL_29:

      return;
    }
    goto LABEL_45;
  }
  id v54 = v30;
  unint64_t v37 = sub_1000B7940();

  if (v37 >> 62)
  {
LABEL_42:
    swift_bridgeObjectRetain();
    uint64_t v55 = sub_1000B7BA0();
    swift_bridgeObjectRelease();
    if (v55) {
      goto LABEL_32;
    }
    goto LABEL_43;
  }
  uint64_t v55 = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v55)
  {
LABEL_32:
    uint64_t v89 = _swiftEmptyArrayStorage;
    sub_1000438A0(0, v55 & ~(v55 >> 63), 0);
    if (v55 < 0)
    {
      __break(1u);
      return;
    }
    uint64_t v56 = 0;
    uint64_t v57 = v89;
    do
    {
      if ((v37 & 0xC000000000000001) != 0) {
        id v58 = (id)sub_1000B7AC0();
      }
      else {
        id v58 = *(id *)(v37 + 8 * v56 + 32);
      }
      sub_100054E98(v58, (uint64_t)v7);
      uint64_t v89 = v57;
      unint64_t v60 = v57[2];
      unint64_t v59 = v57[3];
      if (v60 >= v59 >> 1)
      {
        sub_1000438A0(v59 > 1, v60 + 1, 1);
        uint64_t v57 = v89;
      }
      ++v56;
      v57[2] = v60 + 1;
      sub_10004E790((uint64_t)v7, (uint64_t)v57+ ((*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80))+ *(void *)(v88 + 72) * v60);
    }
    while (v55 != v56);
    swift_bridgeObjectRelease();
    id v30 = v86;
    goto LABEL_44;
  }
LABEL_43:
  swift_bridgeObjectRelease();
  uint64_t v57 = _swiftEmptyArrayStorage;
LABEL_44:
  uint64_t v61 = v87;
  uint64_t v62 = v81;
  swift_bridgeObjectRelease();
  long long v63 = v85;
  sub_10005EA8C(v85);
  *(void *)((char *)v61 + v62) = v57;
  if ((*((unsigned char *)v63 + 51) & 1) == 0) {
    goto LABEL_29;
  }
LABEL_45:
  id v64 = [v30 parent];
  if (v64
    && (uint64_t v65 = v64, v66 = [v64 identifier], v65, v66)
    || (id v67 = [v30 account],
        id v66 = [v67 identifier],
        v67,
        v66))
  {
    uint64_t v68 = sub_1000B75B0();
    uint64_t v70 = v69;
  }
  else
  {
    uint64_t v68 = 0;
    uint64_t v70 = 0;
  }
  uint64_t v71 = v87;
  swift_bridgeObjectRelease();
  v71[3] = v68;
  v71[4] = v70;
  id v72 = [v30 parent];
  if (v72)
  {
    id v73 = v72;
    id v74 = [v72 title];
  }
  else
  {
    id v73 = [v30 account];
    id v74 = [v73 localizedName];
  }
  id v75 = v74;

  uint64_t v76 = sub_1000B75B0();
  uint64_t v78 = v77;

  uint64_t v79 = v87;
  swift_bridgeObjectRelease();
  v79[5] = v76;
  v79[6] = v78;
  *((unsigned char *)v79 + 56) = [v30 markedForDeletion];
  LOBYTE(v75) = sub_1000B1B10((unsigned __int16)[v30 folderType]);

  *((unsigned char *)v79 + 80) = (_BYTE)v75;
}

uint64_t sub_1000AF198()
{
  uint64_t v0 = sub_1000B7490();
  sub_100038F18(v0, qword_100105300);
  sub_100038E8C(v0, (uint64_t)qword_100105300);
  return sub_1000B7470();
}

unint64_t sub_1000AF1E4(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x696669746E656469;
      break;
    case 2:
      return result;
    case 3:
      unint64_t result = 0x6954746E65726170;
      break;
    case 4:
      unint64_t result = 0xD000000000000013;
      break;
    case 5:
      unint64_t result = 0x656C746974;
      break;
    case 6:
      unint64_t result = 1701869940;
      break;
    case 7:
      unint64_t result = 0x7972657571;
      break;
    case 8:
      unint64_t result = 0x74726F5365746F6ELL;
      break;
    case 9:
      unint64_t result = 0xD000000000000014;
      break;
    case 10:
      unint64_t result = 0x6974697669746361;
      break;
    default:
      unint64_t result = 0x6E65644965707974;
      break;
  }
  return result;
}

uint64_t sub_1000AF350(void *a1)
{
  BOOL v3 = v1;
  uint64_t v5 = sub_100032E20(&qword_100105598);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100047028(a1, a1[3]);
  sub_1000B4C38();
  sub_1000B7EB0();
  LOBYTE(v11) = *v3;
  char v12 = 0;
  sub_100051A0C();
  sub_1000B7D50();
  if (!v2)
  {
    LOBYTE(v11) = 1;
    sub_1000B7D10();
    LOBYTE(v11) = 2;
    sub_1000B7CC0();
    LOBYTE(v11) = 3;
    sub_1000B7CC0();
    LOBYTE(v11) = 4;
    sub_1000B7CD0();
    LOBYTE(v11) = 5;
    sub_1000B7CC0();
    LOBYTE(v11) = v3[80];
    char v12 = 6;
    sub_1000B4C8C();
    sub_1000B7D00();
    uint64_t v9 = (int *)type metadata accessor for ICFolderArchiveModel(0);
    LOBYTE(v11) = 7;
    type metadata accessor for ICFolderArchiveModel.Query(0);
    sub_1000B1804(&qword_1001055B0, (void (*)(uint64_t))type metadata accessor for ICFolderArchiveModel.Query);
    sub_1000B7D00();
    LOWORD(v11) = *(_WORD *)&v3[v9[12]];
    char v12 = 8;
    sub_1000B4CE0();
    sub_1000B7D00();
    uint64_t v11 = *(void *)&v3[v9[13]];
    char v12 = 9;
    sub_100032E20(&qword_100104108);
    sub_10005C2AC(&qword_100104138);
    sub_1000B7D00();
    uint64_t v11 = *(void *)&v3[v9[14]];
    char v12 = 10;
    sub_100032E20(&qword_100103D88);
    sub_1000B4D88(&qword_100103D90, &qword_100103D98);
    sub_1000B7D00();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1000AF76C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v3 = sub_100032E20(&qword_1001053A8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100032E20(&qword_1001055C0);
  uint64_t v33 = *(void *)(v6 - 8);
  uint64_t v34 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ICFolderArchiveModel(0);
  uint64_t v10 = (int *)(v9 - 8);
  __chkstk_darwin(v9);
  char v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *char v12 = 2;
  *(_OWORD *)(v12 + 40) = 0u;
  *(_OWORD *)(v12 + 24) = 0u;
  v12[56] = 2;
  *((void *)v12 + 8) = 0;
  *((void *)v12 + 9) = 0;
  v12[80] = 3;
  uint64_t v13 = (uint64_t)&v12[v10[13]];
  uint64_t v14 = type metadata accessor for ICFolderArchiveModel.Query(0);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v39 = v13;
  v15(v13, 1, 1, v14);
  uint64_t v16 = v10[14];
  *(_WORD *)&v12[v16] = 512;
  uint64_t v38 = v10[15];
  *(void *)&v12[v38] = 0;
  uint64_t v17 = v10[16];
  id v35 = a1;
  uint64_t v36 = v17;
  *(void *)&v12[v17] = 0;
  sub_100047028(a1, a1[3]);
  sub_1000B4C38();
  uint64_t v18 = v37;
  sub_1000B7EA0();
  if (v18)
  {
    sub_100037F98((uint64_t)v35);
    uint64_t v20 = v39;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100038E30(v20, &qword_1001053A8);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v37 = v16;
    uint64_t v19 = v33;
    char v41 = 0;
    sub_1000332D0();
    sub_1000B7CA0();
    *char v12 = v40;
    LOBYTE(v40) = 1;
    *((void *)v12 + 1) = sub_1000B7C60();
    *((void *)v12 + 2) = v21;
    LOBYTE(v40) = 2;
    *((void *)v12 + 3) = sub_1000B7C10();
    *((void *)v12 + 4) = v22;
    LOBYTE(v40) = 3;
    *((void *)v12 + 5) = sub_1000B7C10();
    *((void *)v12 + 6) = v23;
    LOBYTE(v40) = 4;
    v12[56] = sub_1000B7C20();
    LOBYTE(v40) = 5;
    *((void *)v12 + 8) = sub_1000B7C10();
    *((void *)v12 + 9) = v24;
    char v41 = 6;
    sub_1000B4D34();
    sub_1000B7C50();
    v12[80] = v40;
    LOBYTE(v40) = 7;
    sub_1000B1804(&qword_100105320, (void (*)(uint64_t))type metadata accessor for ICFolderArchiveModel.Query);
    sub_1000B7C50();
    sub_1000B2C48((uint64_t)v5, v39);
    char v41 = 8;
    sub_1000ADF0C();
    sub_1000B7C50();
    *(_WORD *)&v12[v37] = v40;
    sub_100032E20(&qword_100104108);
    char v41 = 9;
    sub_10005C2AC(&qword_100104110);
    sub_1000B7C50();
    uint64_t v25 = v40;
    uint64_t v26 = v38;
    swift_bridgeObjectRelease();
    *(void *)&v12[v26] = v25;
    sub_100032E20(&qword_100103D88);
    char v41 = 10;
    sub_1000B4D88(&qword_100103DF8, &qword_100103E00);
    uint64_t v27 = v34;
    sub_1000B7C50();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v27);
    uint64_t v28 = v40;
    uint64_t v29 = v36;
    swift_bridgeObjectRelease();
    *(void *)&v12[v29] = v28;
    sub_1000B2CB0((uint64_t)v12, v32, type metadata accessor for ICFolderArchiveModel);
    sub_100037F98((uint64_t)v35);
    return sub_1000B2D18((uint64_t)v12, type metadata accessor for ICFolderArchiveModel);
  }
}

unint64_t sub_1000AFE20()
{
  return sub_1000AF1E4(*v0);
}

uint64_t sub_1000AFE28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000B1CD4(a1, a2);
  *a3 = result;
  return result;
}

void sub_1000AFE50(unsigned char *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_1000AFE5C(uint64_t a1)
{
  unint64_t v2 = sub_1000B4C38();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000AFE98(uint64_t a1)
{
  unint64_t v2 = sub_1000B4C38();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000AFED4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000AF76C(a1, a2);
}

uint64_t sub_1000AFEEC(void *a1)
{
  return sub_1000AF350(a1);
}

uint64_t sub_1000AFF04(char a1)
{
  return *(void *)&aNormal_3[8 * a1];
}

uint64_t sub_1000AFF24(char *a1, char *a2)
{
  return sub_100039154(*a1, *a2);
}

Swift::Int sub_1000AFF30()
{
  return sub_10005CD2C();
}

uint64_t sub_1000AFF38()
{
  return sub_10005CF88();
}

Swift::Int sub_1000AFF40()
{
  return sub_10005D930();
}

uint64_t sub_1000AFF48@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_1000EF6C0;
  uint64_t result = sub_1000B242C(*(void *)a1, *(void **)(a1 + 8), v3);
  *a2 = result;
  return result;
}

uint64_t sub_1000AFF80@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000AFF04(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_1000AFFAC(void *a1@<X8>)
{
  *a1 = &off_1000EF728;
}

uint64_t sub_1000AFFBC()
{
  return sub_1000B76B0();
}

uint64_t sub_1000B001C()
{
  return sub_1000B76A0();
}

uint64_t sub_1000B006C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000B13A0(a1, a2, a3, a4, (void (*)(void))sub_1000B533C, (void (*)(void))sub_1000B52E8);
}

uint64_t sub_1000B0098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000B1460(a1, a2, a3, a4, (void (*)(void))sub_1000B533C, (void (*)(void))sub_1000B52E8);
}

uint64_t sub_1000B00C4(char a1)
{
  if (a1) {
    return 1701869940;
  }
  else {
    return 0x797469746E65;
  }
}

uint64_t sub_1000B00F0(void *a1)
{
  uint64_t v3 = sub_100032E20(&qword_1001055D0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100047028(a1, a1[3]);
  sub_1000B17B0();
  sub_1000B7EB0();
  v8[15] = 0;
  sub_1000B7060();
  sub_1000B1804(&qword_1001055D8, (void (*)(uint64_t))&type metadata accessor for ICQueryEntity);
  sub_1000B7D50();
  if (!v1)
  {
    type metadata accessor for ICFolderArchiveModel.Query(0);
    v8[14] = 1;
    sub_1000B7040();
    sub_1000B1804(&qword_1001055E0, (void (*)(uint64_t))&type metadata accessor for ICQueryType);
    sub_1000B7D50();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1000B02F0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v24 = sub_1000B7040();
  uint64_t v21 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1000B7060();
  uint64_t v23 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v25 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_100032E20(&qword_100105328);
  uint64_t v26 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ICFolderArchiveModel.Query(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100047028(a1, a1[3]);
  sub_1000B17B0();
  sub_1000B7EA0();
  if (v2) {
    return sub_100037F98((uint64_t)a1);
  }
  uint64_t v20 = v9;
  char v12 = v11;
  uint64_t v14 = v23;
  uint64_t v13 = v24;
  char v30 = 0;
  sub_1000B1804(&qword_100105338, (void (*)(uint64_t))&type metadata accessor for ICQueryEntity);
  uint64_t v15 = v25;
  sub_1000B7CA0();
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  uint64_t v19 = (uint64_t)v12;
  v16(v12, v15, v27);
  char v29 = 1;
  sub_1000B1804(&qword_100105340, (void (*)(uint64_t))&type metadata accessor for ICQueryType);
  sub_1000B7CA0();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v28);
  uint64_t v17 = v19;
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v19 + *(int *)(v20 + 20), v5, v13);
  sub_1000B2CB0(v17, v22, type metadata accessor for ICFolderArchiveModel.Query);
  sub_100037F98((uint64_t)a1);
  return sub_1000B2D18(v17, type metadata accessor for ICFolderArchiveModel.Query);
}

uint64_t sub_1000B0728()
{
  return sub_1000B00C4(*v0);
}

uint64_t sub_1000B0730@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000B2118(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000B0758(uint64_t a1)
{
  unint64_t v2 = sub_1000B17B0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000B0794(uint64_t a1)
{
  unint64_t v2 = sub_1000B17B0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000B07D0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000B02F0(a1, a2);
}

uint64_t sub_1000B07E8(void *a1)
{
  return sub_1000B00F0(a1);
}

void sub_1000B0800()
{
  uint64_t v0 = sub_1000B7040();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = v1;
  __chkstk_darwin(v0);
  uint64_t v4 = (void *)((char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_1000B7060();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[1] = v8;
  uint64_t v9 = type metadata accessor for ICFolderArchiveModel.Query(0);
  v22[3] = v9;
  sub_100038F18(v9, qword_10010E9C8);
  _OWORD v22[2] = sub_100038E8C(v9, (uint64_t)qword_10010E9C8);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for ICQueryEntity.note(_:), v5);
  uint64_t v10 = swift_allocObject();
  sub_100032E20(&qword_100105380);
  uint64_t v11 = *(void *)(v1 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1000CB7A0;
  uint64_t v14 = (uint64_t *)(v13 + v12);
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 16) = 1;
  uint64_t *v14 = v15;
  uint64_t v16 = enum case for ICQueryType.deleted(_:);
  uint64_t v17 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v2 + 104);
  v17(v14, enum case for ICQueryType.deleted(_:), v0);
  uint64_t v18 = (uint64_t *)((char *)v14 + v11);
  uint64_t v19 = swift_allocObject();
  *(unsigned char *)(v19 + 16) = 0;
  uint64_t *v18 = v19;
  v17(v18, v16, v0);
  *(void *)(v10 + 16) = v13;
  uint64_t *v4 = v10;
  v17(v4, enum case for ICQueryType.or(_:), v0);
  id v20 = objc_allocWithZone((Class)sub_1000B7390());
  uint64_t v21 = (void *)sub_1000B7370();
  sub_1000B7380();
  sub_1000B7360();
}

uint64_t sub_1000B0AD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000B75E0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000B75D0();
  uint64_t v6 = sub_1000B75C0();
  unint64_t v8 = v7;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v8 >> 60 == 15)
  {
    uint64_t v9 = type metadata accessor for ICFolderArchiveModel.Query(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a1, 1, 1, v9);
  }
  else
  {
    sub_1000B6D20();
    swift_allocObject();
    sub_1000B6D10();
    sub_1000B7390();
    sub_1000B1804(&qword_100105378, (void (*)(uint64_t))&type metadata accessor for ICQuery);
    sub_1000B6D00();
    swift_release();
    uint64_t v10 = (void *)v13[1];
    sub_1000B7380();
    uint64_t v11 = type metadata accessor for ICFolderArchiveModel.Query(0);
    sub_1000B7360();

    sub_10004E77C(v6, v8);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a1, 0, 1, v11);
  }
}

uint64_t sub_1000B0D34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (qword_1001036E8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_100038E8C(a1, (uint64_t)qword_10010E9C8);
  return sub_1000B2CB0(v4, a2, type metadata accessor for ICFolderArchiveModel.Query);
}

uint64_t sub_1000B0DB8(uint64_t a1)
{
  return sub_1000B29A8(a1);
}

uint64_t sub_1000B0DD0(char a1)
{
  return *(void *)&aCreatedModifie_1[8 * a1];
}

uint64_t sub_1000B0DF0(char *a1, char *a2)
{
  return sub_100039288(*a1, *a2);
}

Swift::Int sub_1000B0DFC()
{
  return sub_10005CD98();
}

uint64_t sub_1000B0E04()
{
  return sub_10005D050();
}

Swift::Int sub_1000B0E0C()
{
  return sub_10005D840();
}

uint64_t sub_1000B0E14@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_1000EF750;
  uint64_t result = sub_1000B242C(*(void *)a1, *(void **)(a1 + 8), v3);
  *a2 = result;
  return result;
}

uint64_t sub_1000B0E4C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000B0DD0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_1000B0E78(void *a1@<X8>)
{
  *a1 = &off_1000EF7B8;
}

uint64_t sub_1000B0E88()
{
  return sub_1000B76B0();
}

uint64_t sub_1000B0EE8()
{
  return sub_1000B76A0();
}

uint64_t sub_1000B0F38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000B13A0(a1, a2, a3, a4, (void (*)(void))sub_1000B2240, (void (*)(void))sub_1000B2294);
}

uint64_t sub_1000B0F64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000B1460(a1, a2, a3, a4, (void (*)(void))sub_1000B2240, (void (*)(void))sub_1000B2294);
}

uint64_t sub_1000B0F90(char a1)
{
  if (a1) {
    return 0x49444E4543534544;
  }
  else {
    return 0x4E49444E45435341;
  }
}

uint64_t sub_1000B0FD0(char *a1, char *a2)
{
  return sub_1000391DC(*a1, *a2);
}

Swift::Int sub_1000B0FDC()
{
  return sub_10005CE04();
}

uint64_t sub_1000B0FE4()
{
  return sub_10005CFDC();
}

Swift::Int sub_1000B0FEC()
{
  return sub_10005D8A8();
}

uint64_t sub_1000B0FF4@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  v8._countAndFlagsBits = *a1;
  Swift::OpaquePointer v3 = (void *)a1[1];
  v4._rawValue = &off_1000EF7E0;
  v8._object = v3;
  Swift::Int v5 = sub_1000B7C00(v4, v8);
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *a2 = v7;
  return result;
}

uint64_t sub_1000B1054@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000B0F90(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_1000B1080(void *a1@<X8>)
{
  *a1 = &off_1000EF830;
}

uint64_t sub_1000B1090()
{
  return sub_1000B76B0();
}

uint64_t sub_1000B10F0()
{
  return sub_1000B76A0();
}

uint64_t sub_1000B1140(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1000B233C();
  unint64_t v5 = sub_1000B2390();

  return static ArgumentDecodable<>.defaultArgument.getter(a1, a2, v4, v5, &protocol witness table for String);
}

uint64_t sub_1000B11B0(char a1)
{
  if (a1) {
    return 0x6F69746365726964;
  }
  else {
    return 0x726564726FLL;
  }
}

uint64_t sub_1000B11E8(void *a1, __int16 a2)
{
  uint64_t v5 = sub_100032E20(&qword_1001055E8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::String v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100047028(a1, a1[3]);
  sub_1000B273C();
  sub_1000B7EB0();
  v10[15] = a2;
  v10[14] = 0;
  sub_1000B4E1C();
  sub_1000B7D50();
  if (!v2)
  {
    v10[13] = HIBYTE(a2) & 1;
    v10[12] = 1;
    sub_1000B4E70();
    sub_1000B7D50();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1000B1374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000B13A0(a1, a2, a3, a4, (void (*)(void))sub_1000B233C, (void (*)(void))sub_1000B2390);
}

uint64_t sub_1000B13A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), void (*a6)(void))
{
  a5();
  a6();

  return sub_1000B70F0();
}

uint64_t sub_1000B1434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000B1460(a1, a2, a3, a4, (void (*)(void))sub_1000B233C, (void (*)(void))sub_1000B2390);
}

uint64_t sub_1000B1460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), void (*a6)(void))
{
  a5();
  a6();

  return sub_1000B7110();
}

uint64_t sub_1000B14EC()
{
  return sub_1000B11B0(*v0);
}

uint64_t sub_1000B14F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000B2474(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000B151C(uint64_t a1)
{
  unint64_t v2 = sub_1000B273C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000B1558(uint64_t a1)
{
  unint64_t v2 = sub_1000B273C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000B1594@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000B2560(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = BYTE1(result) & 1;
  }
  return result;
}

uint64_t sub_1000B15C8(void *a1)
{
  if (v1[1]) {
    __int16 v2 = 256;
  }
  else {
    __int16 v2 = 0;
  }
  return sub_1000B11E8(a1, v2 | *v1);
}

void sub_1000B15F8()
{
  id v0 = [objc_allocWithZone((Class)ICFolderCustomNoteSortType) init];
  if ([v0 isDefault] || (char v1 = sub_1000B184C((uint64_t)objc_msgSend(v0, "order")), v1 == 3))
  {
  }
  else
  {
    char v2 = v1;
    char v4 = sub_1000B1A08((uint64_t)[v0 direction]);

    if (v4 != 2)
    {
      char v3 = v4 & 1;
      goto LABEL_5;
    }
  }
  char v2 = 0;
  char v3 = 0;
LABEL_5:
  byte_10010E9E0 = v2;
  byte_10010E9E1 = v3;
}

uint64_t sub_1000B16B8@<X0>(unsigned char *a1@<X8>)
{
  if (qword_1001036F0 != -1) {
    uint64_t result = swift_once();
  }
  char v2 = byte_10010E9E1;
  *a1 = byte_10010E9E0;
  a1[1] = v2;
  return result;
}

uint64_t sub_1000B1720@<X0>(unsigned __int8 a1@<W0>, _WORD *a2@<X8>)
{
  uint64_t result = sub_1000B2838(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1000B1748()
{
  return sub_1000B1804(&qword_100105320, (void (*)(uint64_t))type metadata accessor for ICFolderArchiveModel.Query);
}

uint64_t type metadata accessor for ICFolderArchiveModel.Query(uint64_t a1)
{
  return sub_100094388(a1, qword_1001054C8);
}

unint64_t sub_1000B17B0()
{
  unint64_t result = qword_100105330;
  if (!qword_100105330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105330);
  }
  return result;
}

uint64_t sub_1000B1804(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000B184C(uint64_t a1)
{
  uint64_t result = 1;
  switch(a1)
  {
    case 0:
      if (qword_1001036E0 != -1) {
        swift_once();
      }
      uint64_t v3 = sub_1000B7490();
      sub_100038E8C(v3, (uint64_t)qword_100105300);
      char v4 = sub_1000B7480();
      os_log_type_t v5 = sub_1000B7850();
      if (!os_log_type_enabled(v4, v5)) {
        goto LABEL_11;
      }
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      uint64_t v7 = "Cannot serialize default note sort order â€” returning nil";
      goto LABEL_10;
    case 1:
      return result;
    case 2:
      uint64_t result = 0;
      break;
    case 3:
      uint64_t result = 2;
      break;
    default:
      if (qword_1001036E0 != -1) {
        swift_once();
      }
      uint64_t v8 = sub_1000B7490();
      sub_100038E8C(v8, (uint64_t)qword_100105300);
      char v4 = sub_1000B7480();
      os_log_type_t v5 = sub_1000B7860();
      if (os_log_type_enabled(v4, v5))
      {
        uint64_t v6 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v6 = 0;
        uint64_t v7 = "Unknown note sort order â€” returning nil";
LABEL_10:
        _os_log_impl((void *)&_mh_execute_header, v4, v5, v7, v6, 2u);
        swift_slowDealloc();
      }
LABEL_11:

      uint64_t result = 3;
      break;
  }
  return result;
}

uint64_t sub_1000B1A08(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  if (a1 == 1) {
    return 1;
  }
  if (qword_1001036E0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000B7490();
  sub_100038E8C(v2, (uint64_t)qword_100105300);
  uint64_t v3 = sub_1000B7480();
  os_log_type_t v4 = sub_1000B7860();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v1 = 2;
    os_log_type_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Unknown note sort direction â€” returning nil", v5, 2u);
    swift_slowDealloc();
  }
  else
  {

    return 2;
  }
  return v1;
}

uint64_t sub_1000B1B10(unsigned __int16 a1)
{
  int v1 = a1;
  uint64_t result = 0;
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      uint64_t result = 1;
      break;
    case 2:
      uint64_t result = 2;
      break;
    case 3:
      if (qword_1001036E0 != -1) {
        swift_once();
      }
      uint64_t v8 = sub_1000B7490();
      sub_100038E8C(v8, (uint64_t)qword_100105300);
      os_log_type_t v4 = sub_1000B7480();
      os_log_type_t v5 = sub_1000B7860();
      if (!os_log_type_enabled(v4, v5)) {
        goto LABEL_13;
      }
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      uint64_t v7 = "Deprecated folder type â€” returning nil";
      goto LABEL_12;
    default:
      if (qword_1001036E0 != -1) {
        swift_once();
      }
      uint64_t v3 = sub_1000B7490();
      sub_100038E8C(v3, (uint64_t)qword_100105300);
      os_log_type_t v4 = sub_1000B7480();
      os_log_type_t v5 = sub_1000B7860();
      if (os_log_type_enabled(v4, v5))
      {
        uint64_t v6 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v6 = 0;
        uint64_t v7 = "Unknown folder type â€” returning nil";
LABEL_12:
        _os_log_impl((void *)&_mh_execute_header, v4, v5, v7, v6, 2u);
        swift_slowDealloc();
      }
LABEL_13:

      uint64_t result = 3;
      break;
  }
  return result;
}

uint64_t sub_1000B1CD4(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6E65644965707974 && a2 == 0xEE00726569666974;
  if (v3 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001000C86D0 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6954746E65726170 && a2 == 0xEB00000000656C74 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001000C86F0 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x7972657571 && a2 == 0xE500000000000000 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x74726F5365746F6ELL && a2 == 0xEB00000000676E69 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001000C9270 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6974697669746361 && a2 == 0xEA00000000007365)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    char v6 = sub_1000B7DC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 10;
    }
    else {
      return 11;
    }
  }
}

uint64_t sub_1000B2118(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x797469746E65 && a2 == 0xE600000000000000;
  if (v3 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1000B7DC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1000B21EC()
{
  unint64_t result = qword_100105348;
  if (!qword_100105348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105348);
  }
  return result;
}

unint64_t sub_1000B2240()
{
  unint64_t result = qword_100105350;
  if (!qword_100105350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105350);
  }
  return result;
}

unint64_t sub_1000B2294()
{
  unint64_t result = qword_100105358;
  if (!qword_100105358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105358);
  }
  return result;
}

unint64_t sub_1000B22E8()
{
  unint64_t result = qword_100105360;
  if (!qword_100105360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105360);
  }
  return result;
}

unint64_t sub_1000B233C()
{
  unint64_t result = qword_100105368;
  if (!qword_100105368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105368);
  }
  return result;
}

unint64_t sub_1000B2390()
{
  unint64_t result = qword_100105370;
  if (!qword_100105370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105370);
  }
  return result;
}

uint64_t sub_1000B23E4()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000B241C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1000B242C(uint64_t a1, void *a2, Swift::OpaquePointer a3)
{
  v7._countAndFlagsBits = a1;
  v7._object = a2;
  unint64_t v5 = sub_1000B7C00(a3, v7);
  swift_bridgeObjectRelease();
  if (v5 >= 3) {
    return 3;
  }
  else {
    return v5;
  }
}

uint64_t sub_1000B2474(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x726564726FLL && a2 == 0xE500000000000000;
  if (v3 || (sub_1000B7DC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F69746365726964 && a2 == 0xE90000000000006ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1000B7DC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1000B2560(void *a1)
{
  uint64_t v3 = sub_100032E20(&qword_100105388);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100047028(a1, a1[3]);
  sub_1000B273C();
  sub_1000B7EA0();
  if (v1) {
    return sub_100037F98((uint64_t)a1);
  }
  v11[14] = 0;
  sub_1000B2790();
  sub_1000B7CA0();
  unsigned int v7 = v11[15];
  v11[12] = 1;
  sub_1000B27E4();
  sub_1000B7CA0();
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  int v9 = v11[13];
  sub_100037F98((uint64_t)a1);
  if (v9) {
    int v10 = 256;
  }
  else {
    int v10 = 0;
  }
  return v10 | v7;
}

unint64_t sub_1000B273C()
{
  unint64_t result = qword_100105390;
  if (!qword_100105390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105390);
  }
  return result;
}

unint64_t sub_1000B2790()
{
  unint64_t result = qword_100105398;
  if (!qword_100105398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105398);
  }
  return result;
}

unint64_t sub_1000B27E4()
{
  unint64_t result = qword_1001053A0;
  if (!qword_1001053A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001053A0);
  }
  return result;
}

uint64_t sub_1000B2838(unsigned __int8 a1)
{
  sub_100032EC0();
  uint64_t v1 = sub_1000B7A10();
  swift_bridgeObjectRelease();
  if (*(void *)(v1 + 16) != 2
    || (sub_1000B21EC(), sub_1000B2240(), sub_1000B2294(), swift_bridgeObjectRetain(), uint64_t result = sub_1000B70F0(), a1 == 3))
  {
    swift_bridgeObjectRelease();
    return 512;
  }
  if (*(void *)(v1 + 16) >= 2uLL)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1000B22E8();
    sub_1000B233C();
    sub_1000B2390();
    sub_1000B70F0();
    if (a1 != 2) {
      return a1 | ((a1 & 1) << 8);
    }
    return 512;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000B29A8(uint64_t a1)
{
  uint64_t v9 = a1;
  uint64_t v1 = sub_1000B7050();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = 0;
  unint64_t v12 = 0xE000000000000000;
  unsigned int v10 = enum case for AnsiStylings.cyan(_:);
  uint64_t v5 = *(void (**)(char *))(v2 + 104);
  v5(v4);
  sub_1000B7D90();
  char v6 = *(void (**)(char *, uint64_t))(v2 + 8);
  v6(v4, v1);
  sub_1000B21EC();
  sub_1000B2240();
  sub_1000B2294();
  v13._countAndFlagsBits = sub_1000B7110();
  sub_1000B7650(v13);
  swift_bridgeObjectRelease();
  uint64_t v7 = enum case for AnsiStylings.reset(_:);
  ((void (*)(char *, void, uint64_t))v5)(v4, enum case for AnsiStylings.reset(_:), v1);
  sub_1000B7D90();
  v6(v4, v1);
  v14._countAndFlagsBits = 44;
  v14._object = (void *)0xE100000000000000;
  sub_1000B7650(v14);
  ((void (*)(char *, void, uint64_t))v5)(v4, v10, v1);
  sub_1000B7D90();
  v6(v4, v1);
  sub_1000B22E8();
  sub_1000B233C();
  sub_1000B2390();
  v15._countAndFlagsBits = sub_1000B7110();
  sub_1000B7650(v15);
  swift_bridgeObjectRelease();
  ((void (*)(char *, uint64_t, uint64_t))v5)(v4, v7, v1);
  sub_1000B7D90();
  v6(v4, v1);
  return v11;
}

uint64_t type metadata accessor for ICFolderArchiveModel(uint64_t a1)
{
  return sub_100094388(a1, (uint64_t *)&unk_100105408);
}

uint64_t sub_1000B2C48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100032E20(&qword_1001053A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000B2CB0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000B2D18(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000B2D78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100032E20(&qword_1001053A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for ICFolderArchiveModel.Sorting.CodingKeys()
{
  return &type metadata for ICFolderArchiveModel.Sorting.CodingKeys;
}

ValueMetadata *type metadata accessor for ICFolderArchiveModel.SortingDirections()
{
  return &type metadata for ICFolderArchiveModel.SortingDirections;
}

ValueMetadata *type metadata accessor for ICFolderArchiveModel.SortingOrders()
{
  return &type metadata for ICFolderArchiveModel.SortingOrders;
}

void *sub_1000B2E1C(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v7;
    uint64_t v8 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v8;
    uint64_t v9 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v9;
    *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
    uint64_t v10 = a2[8];
    uint64_t v11 = a2[9];
    *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
    uint64_t v12 = a3[11];
    __dst = (char *)(a1 + v12);
    Swift::String v13 = (char *)a2 + v12;
    *(void *)(a1 + 64) = v10;
    *(void *)(a1 + 72) = v11;
    uint64_t v14 = type metadata accessor for ICFolderArchiveModel.Query(0);
    uint64_t v24 = *(void *)(v14 - 8);
    uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v25(v13, 1, v14))
    {
      uint64_t v15 = sub_100032E20(&qword_1001053A8);
      memcpy(__dst, v13, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      uint64_t v17 = sub_1000B7060();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(__dst, v13, v17);
      uint64_t v18 = *(int *)(v14 + 20);
      uint64_t v19 = &__dst[v18];
      id v20 = &v13[v18];
      uint64_t v21 = sub_1000B7040();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v14);
    }
    uint64_t v22 = a3[13];
    *(_WORD *)((char *)v4 + a3[12]) = *(_WORD *)((char *)a2 + a3[12]);
    *(void *)((char *)v4 + v22) = *(uint64_t *)((char *)a2 + v22);
    *(void *)((char *)v4 + a3[14]) = *(uint64_t *)((char *)a2 + a3[14]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1000B3090(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 44);
  uint64_t v5 = type metadata accessor for ICFolderArchiveModel.Query(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    uint64_t v6 = sub_1000B7060();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
    uint64_t v7 = v4 + *(int *)(v5 + 20);
    uint64_t v8 = sub_1000B7040();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000B31C4(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v8 = *(void *)(a2 + 64);
  uint64_t v9 = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v10 = a3[11];
  __dst = (char *)(a1 + v10);
  uint64_t v11 = (char *)(a2 + v10);
  *(void *)(a1 + 64) = v8;
  *(void *)(a1 + 72) = v9;
  uint64_t v12 = type metadata accessor for ICFolderArchiveModel.Query(0);
  uint64_t v22 = *(void *)(v12 - 8);
  Swift::String v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v11, 1, v12))
  {
    uint64_t v14 = sub_100032E20(&qword_1001053A8);
    memcpy(__dst, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    uint64_t v15 = sub_1000B7060();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(__dst, v11, v15);
    uint64_t v16 = *(int *)(v12 + 20);
    uint64_t v17 = &__dst[v16];
    uint64_t v18 = &v11[v16];
    uint64_t v19 = sub_1000B7040();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v12);
  }
  uint64_t v20 = a3[13];
  *(_WORD *)(a1 + a3[12]) = *(_WORD *)(a2 + a3[12]);
  *(void *)(a1 + v20) = *(void *)(a2 + v20);
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1000B33E4(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v6 = a3[11];
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = type metadata accessor for ICFolderArchiveModel.Query(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      uint64_t v21 = sub_1000B7060();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 24))(v7, v8, v21);
      uint64_t v22 = *(int *)(v9 + 20);
      uint64_t v23 = &v7[v22];
      uint64_t v24 = &v8[v22];
      uint64_t v25 = sub_1000B7040();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 24))(v23, v24, v25);
      goto LABEL_7;
    }
    sub_1000B2D18((uint64_t)v7, type metadata accessor for ICFolderArchiveModel.Query);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v19 = sub_100032E20(&qword_1001053A8);
    memcpy(v7, v8, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v14 = sub_1000B7060();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v7, v8, v14);
  uint64_t v15 = *(int *)(v9 + 20);
  uint64_t v16 = &v7[v15];
  uint64_t v17 = &v8[v15];
  uint64_t v18 = sub_1000B7040();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(_WORD *)(a1 + a3[12]) = *(_WORD *)(a2 + a3[12]);
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000B3710(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  long long v6 = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v7 = a3[11];
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  *(_OWORD *)(a1 + 64) = v6;
  uint64_t v10 = type metadata accessor for ICFolderArchiveModel.Query(0);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_100032E20(&qword_1001053A8);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v13 = sub_1000B7060();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v8, v9, v13);
    uint64_t v14 = *(int *)(v10 + 20);
    uint64_t v15 = &v8[v14];
    uint64_t v16 = &v9[v14];
    uint64_t v17 = sub_1000B7040();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v18 = a3[13];
  *(_WORD *)(a1 + a3[12]) = *(_WORD *)(a2 + a3[12]);
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  return a1;
}

uint64_t sub_1000B38E8(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v10 = a3[11];
  uint64_t v11 = (char *)(a1 + v10);
  uint64_t v12 = (char *)(a2 + v10);
  uint64_t v13 = type metadata accessor for ICFolderArchiveModel.Query(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      uint64_t v26 = sub_1000B7060();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 40))(v11, v12, v26);
      uint64_t v27 = *(int *)(v13 + 20);
      uint64_t v28 = &v11[v27];
      char v29 = &v12[v27];
      uint64_t v30 = sub_1000B7040();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
      goto LABEL_7;
    }
    sub_1000B2D18((uint64_t)v11, type metadata accessor for ICFolderArchiveModel.Query);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v23 = sub_100032E20(&qword_1001053A8);
    memcpy(v11, v12, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v18 = sub_1000B7060();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v11, v12, v18);
  uint64_t v19 = *(int *)(v13 + 20);
  uint64_t v20 = &v11[v19];
  uint64_t v21 = &v12[v19];
  uint64_t v22 = sub_1000B7040();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_7:
  uint64_t v24 = a3[13];
  *(_WORD *)(a1 + a3[12]) = *(_WORD *)(a2 + a3[12]);
  *(void *)(a1 + v24) = *(void *)(a2 + v24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000B3BC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000B3BD4);
}

uint64_t sub_1000B3BD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100032E20(&qword_1001053A8);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 44);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1000B3C88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000B3C9C);
}

uint64_t sub_1000B3C9C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100032E20(&qword_1001053A8);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 44);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1000B3D48()
{
  sub_1000B3E20();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1000B3E20()
{
  if (!qword_100105418)
  {
    type metadata accessor for ICFolderArchiveModel.Query(255);
    unint64_t v0 = sub_1000B79E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100105418);
    }
  }
}

unsigned char *_s38com_apple_mobilenotes_SharingExtension20ICFolderArchiveModelV17SortingDirectionsOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000B3F44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICFolderArchiveModel.Query.CodingKeys()
{
  return &type metadata for ICFolderArchiveModel.Query.CodingKeys;
}

uint64_t *sub_1000B3F7C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1000B7060();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1000B7040();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_1000B4084(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000B7060();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_1000B7040();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t sub_1000B412C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B7060();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1000B7040();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_1000B41E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B7060();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1000B7040();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_1000B429C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B7060();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1000B7040();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_1000B4354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B7060();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1000B7040();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1000B440C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000B4420);
}

uint64_t sub_1000B4420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B7060();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_1000B7040();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1000B4518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000B452C);
}

uint64_t sub_1000B452C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1000B7060();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_1000B7040();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_1000B4630()
{
  uint64_t result = sub_1000B7060();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1000B7040();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

_WORD *initializeBufferWithCopyOfBuffer for ICFolderArchiveModel.Sorting(_WORD *result, _WORD *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ICFolderArchiveModel.Sorting(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 65281 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65281 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65281;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
LABEL_17:
  unsigned int v6 = *((unsigned __int8 *)a1 + 1);
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ICFolderArchiveModel.Sorting(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)uint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000B4864);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)(result + 1) = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICFolderArchiveModel.Sorting()
{
  return &type metadata for ICFolderArchiveModel.Sorting;
}

unint64_t sub_1000B48A0()
{
  unint64_t result = qword_100105500;
  if (!qword_100105500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105500);
  }
  return result;
}

uint64_t sub_1000B48F4(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1000B1804(&qword_100103B38, (void (*)(uint64_t))type metadata accessor for ICFolderArchiveModel);
  uint64_t result = sub_1000B1804(&qword_100103ED0, (void (*)(uint64_t))type metadata accessor for ICFolderArchiveModel);
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1000B497C()
{
  unint64_t result = qword_100105540;
  if (!qword_100105540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105540);
  }
  return result;
}

unint64_t sub_1000B49D4()
{
  unint64_t result = qword_100105548;
  if (!qword_100105548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105548);
  }
  return result;
}

unint64_t sub_1000B4A2C()
{
  unint64_t result = qword_100105550;
  if (!qword_100105550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105550);
  }
  return result;
}

unint64_t sub_1000B4A84()
{
  unint64_t result = qword_100105558;
  if (!qword_100105558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105558);
  }
  return result;
}

unint64_t sub_1000B4ADC()
{
  unint64_t result = qword_100105560;
  if (!qword_100105560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105560);
  }
  return result;
}

uint64_t sub_1000B4B30()
{
  return sub_1000528C8(&qword_100105568, &qword_100105570);
}

uint64_t sub_1000B4B5C()
{
  return sub_1000528C8(&qword_100105578, &qword_100105580);
}

unint64_t sub_1000B4B8C()
{
  unint64_t result = qword_100105588;
  if (!qword_100105588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105588);
  }
  return result;
}

unint64_t sub_1000B4BE4()
{
  unint64_t result = qword_100105590;
  if (!qword_100105590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105590);
  }
  return result;
}

unint64_t sub_1000B4C38()
{
  unint64_t result = qword_1001055A0;
  if (!qword_1001055A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001055A0);
  }
  return result;
}

unint64_t sub_1000B4C8C()
{
  unint64_t result = qword_1001055A8;
  if (!qword_1001055A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001055A8);
  }
  return result;
}

unint64_t sub_1000B4CE0()
{
  unint64_t result = qword_1001055B8;
  if (!qword_1001055B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001055B8);
  }
  return result;
}

unint64_t sub_1000B4D34()
{
  unint64_t result = qword_1001055C8;
  if (!qword_1001055C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001055C8);
  }
  return result;
}

uint64_t sub_1000B4D88(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100032F70(&qword_100103D88);
    sub_1000B1804(a2, (void (*)(uint64_t))_s8ActivityVMa);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000B4E1C()
{
  unint64_t result = qword_1001055F0;
  if (!qword_1001055F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001055F0);
  }
  return result;
}

unint64_t sub_1000B4E70()
{
  unint64_t result = qword_1001055F8;
  if (!qword_1001055F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001055F8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ICFolderArchiveModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ICFolderArchiveModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000B5020);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICFolderArchiveModel.CodingKeys()
{
  return &type metadata for ICFolderArchiveModel.CodingKeys;
}

unsigned char *_s38com_apple_mobilenotes_SharingExtension20ICFolderArchiveModelV5TypesOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000B5124);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICFolderArchiveModel.Types()
{
  return &type metadata for ICFolderArchiveModel.Types;
}

uint64_t sub_1000B5160()
{
  return sub_1000528C8(&qword_100105600, &qword_100105608);
}

unint64_t sub_1000B518C()
{
  unint64_t result = qword_100105610;
  if (!qword_100105610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105610);
  }
  return result;
}

unint64_t sub_1000B51E4()
{
  unint64_t result = qword_100105618;
  if (!qword_100105618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105618);
  }
  return result;
}

unint64_t sub_1000B523C()
{
  unint64_t result = qword_100105620;
  if (!qword_100105620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105620);
  }
  return result;
}

unint64_t sub_1000B5294()
{
  unint64_t result = qword_100105628;
  if (!qword_100105628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105628);
  }
  return result;
}

unint64_t sub_1000B52E8()
{
  unint64_t result = qword_100105630;
  if (!qword_100105630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105630);
  }
  return result;
}

unint64_t sub_1000B533C()
{
  unint64_t result = qword_100105638;
  if (!qword_100105638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100105638);
  }
  return result;
}

uint64_t sub_1000B5390()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

void sub_1000B53C4(char a1, uint64_t a2, os_log_t log)
{
  CFStringRef v3 = @"YES";
  if ((a1 & 1) == 0) {
    CFStringRef v3 = @"NO";
  }
  int v4 = 138412546;
  CFStringRef v5 = v3;
  __int16 v6 = 2112;
  uint64_t v7 = a2;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "Background sync task scheduled {success: %@, error: %@}", (uint8_t *)&v4, 0x16u);
}

void sub_1000B5464(void *a1, NSObject *a2)
{
  CFStringRef v3 = [a1 localizedDescription];
  int v4 = 138412290;
  CFStringRef v5 = v3;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error loading item: %@", (uint8_t *)&v4, 0xCu);
}

void sub_1000B54FC(void *a1, NSObject *a2)
{
  CFStringRef v3 = [a1 shortLoggingDescription];
  int v4 = 138412290;
  CFStringRef v5 = v3;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Attempting to move notes into a folder that doesn't allow moving contents in or out: %@", (uint8_t *)&v4, 0xCu);
}

void sub_1000B5594(void *a1, void *a2, NSObject *a3)
{
  __int16 v6 = [a1 account];
  uint64_t v7 = [v6 identifier];
  int v8 = [a2 shortLoggingDescription];
  int v9 = 138412802;
  uint64_t v10 = a1;
  __int16 v11 = 2112;
  uint64_t v12 = v7;
  __int16 v13 = 2112;
  uint64_t v14 = v8;
  _os_log_debug_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_DEBUG, "Moving note from unowned, shared folder to folder %@ in account %@ for note %@", (uint8_t *)&v9, 0x20u);
}

void sub_1000B567C(os_log_t log)
{
  *(_WORD *)unint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Couldn't get image source reference to generate a preview", v1, 2u);
}

void sub_1000B56C0(uint64_t a1, uint64_t a2, os_log_t log)
{
  uint64_t v3 = *(void *)(a1 + 32);
  int v4 = 138412546;
  uint64_t v5 = v3;
  __int16 v6 = 2112;
  uint64_t v7 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Extracting media file: Error loading file representation for content type %@ - error: %@", (uint8_t *)&v4, 0x16u);
}

void sub_1000B574C(uint64_t a1, NSObject *a2)
{
  int v4 = [UTTypeFileURL identifier];
  uint64_t v5 = *(void *)(a1 + 40);
  int v6 = 138412546;
  uint64_t v7 = v4;
  __int16 v8 = 2112;
  uint64_t v9 = v5;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Extracting URL: Error loading item for type identifier %@ - error: %@", (uint8_t *)&v6, 0x16u);
}

void sub_1000B580C(os_log_t log)
{
  *(_WORD *)unint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Provided item is nil.", v1, 2u);
}

void sub_1000B5850(id *a1, NSObject *a2)
{
  uint64_t v3 = [*a1 registeredTypeIdentifiers];
  int v4 = 138412290;
  uint64_t v5 = v3;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error: could not find extension in %@", (uint8_t *)&v4, 0xCu);
}

void sub_1000B58EC(uint64_t *a1, NSObject *a2)
{
  uint64_t v2 = *a1;
  int v3 = 138412290;
  uint64_t v4 = v2;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error loading item: %@", (uint8_t *)&v3, 0xCu);
}

void sub_1000B5968(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Cannot save temporary file to disk: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1000B59E0(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Invalid account type for account: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1000B5A58(void *a1, uint64_t a2, NSObject *a3)
{
  uint64_t v5 = [a1 localizedDescription];
  int v6 = 138412546;
  uint64_t v7 = v5;
  __int16 v8 = 2112;
  uint64_t v9 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Error %@ at URL (getting type identifier) during import notes process: %@", (uint8_t *)&v6, 0x16u);
}

void sub_1000B5B08(os_log_t log)
{
  *(_WORD *)unint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Must have an account to import notes.", v1, 2u);
}

void sub_1000B5B4C(os_log_t log)
{
  *(_WORD *)unint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Cannot import with nil account even though we have an account.objectID.", v1, 2u);
}

void sub_1000B5B90(void *a1)
{
  unint64_t v1 = [a1 localizedDescription];
  sub_100012270((void *)&_mh_execute_header, v2, v3, "Error on saving imported notes: %@", v4, v5, v6, v7, 2u);
}

void sub_1000B5C18(os_log_t log)
{
  *(_WORD *)unint64_t v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "Cannot cancel import process because it is not in progress.", v1, 2u);
}

void sub_1000B5C5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = [sub_10001223C(a1, a2) localizedDescription];
  _DWORD *v3 = 138412290;
  *uint64_t v2 = v4;
  sub_100012250((void *)&_mh_execute_header, v5, v6, "Error removing file from temporary directory: %@");
}

void sub_1000B5CB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = [sub_10001223C(a1, a2) localizedDescription];
  _DWORD *v3 = 138412290;
  *uint64_t v2 = v4;
  sub_100012250((void *)&_mh_execute_header, v5, v6, "Error copying file to temporary directory: %@");
}

void sub_1000B5D14(os_log_t log)
{
  *(_WORD *)unint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Unexpected search result type for determining share extension cell identifier", v1, 2u);
}

void sub_1000B5D58(void *a1, NSObject *a2)
{
  uint64_t v3 = [a1 representedItem];
  int v4 = 138412290;
  uint64_t v5 = v3;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error selecting Create New Note - unknown folder %@", (uint8_t *)&v4, 0xCu);
}

void sub_1000B5DF0(os_log_t log)
{
  *(_WORD *)unint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Unexpected sharing extension search result type in cellForRowAtIndexPath", v1, 2u);
}

void sub_1000B5E34()
{
  sub_10001CCD0();
  sub_10001CCB4((void *)&_mh_execute_header, v0, v1, "Can't start parsing since parsing is currently in progress.", v2, v3, v4, v5, v6);
}

void sub_1000B5E68()
{
  sub_10001CCD0();
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "New note is nil.", v1, 2u);
}

void sub_1000B5EA8()
{
  sub_10001CCD0();
  sub_10001CCB4((void *)&_mh_execute_header, v0, v1, "Can't cancel process since parsing isn't running.", v2, v3, v4, v5, v6);
}

void sub_1000B5EDC(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error creating bookmark data from url: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1000B5F54(uint8_t *buf, unsigned char *a2, os_log_t log)
{
  *buf = 0;
  *a2 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Couldn't build a text attachment.", buf, 2u);
}

void sub_1000B5F94(void *a1, void *a2, NSObject *a3)
{
  uint64_t v5 = [a1 identifier];
  uint8_t v6 = [a2 identifier];
  int v7 = 138412546;
  __int16 v8 = v5;
  __int16 v9 = 2112;
  uint64_t v10 = v6;
  _os_log_debug_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_DEBUG, "Undoably setting folder %@ to note %@.", (uint8_t *)&v7, 0x16u);
}

void sub_1000B6058(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "Tried to set the folder to be a smart folder, which really shouldn't contain notes per se. Reverted to the owning account's default folder.", v1, 2u);
}

void sub_1000B609C(void *a1, NSObject *a2)
{
  uint64_t v4 = [a1 shortLoggingDescription];
  uint64_t v5 = [a1 account];
  uint8_t v6 = [v5 trashFolder];
  int v7 = [v6 identifier];
  __int16 v8 = [a1 account];
  __int16 v9 = [v8 identifier];
  int v10 = 138412802;
  __int16 v11 = v4;
  __int16 v12 = 2112;
  __int16 v13 = v7;
  __int16 v14 = 2112;
  uint64_t v15 = v9;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "Undoably moving note %@ to the recently deleted folder %@ in account %@", (uint8_t *)&v10, 0x20u);
}

void sub_1000B61BC(void *a1, NSObject *a2)
{
  uint64_t v4 = [a1 account];
  uint64_t v5 = [v4 trashFolder];
  uint8_t v6 = [v5 identifier];
  int v7 = [a1 account];
  __int16 v8 = [v7 identifier];
  __int16 v9 = [a1 shortLoggingDescription];
  int v10 = 138412802;
  __int16 v11 = v6;
  __int16 v12 = 2112;
  __int16 v13 = v8;
  __int16 v14 = 2112;
  uint64_t v15 = v9;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "Moving shared note as a participant to recently deleted folder %@ in account %@ for note %@", (uint8_t *)&v10, 0x20u);
}

void sub_1000B62DC(void *a1)
{
  uint64_t v1 = [a1 shortLoggingDescription];
  sub_1000221A8();
  sub_1000221B4((void *)&_mh_execute_header, v2, v3, "Undoably deleting note %@", v4, v5, v6, v7, v8);
}

void sub_1000B6360()
{
  sub_10001CCD0();
  sub_10002218C((void *)&_mh_execute_header, v0, v1, "Attempting to delete undeletable notes", v2, v3, v4, v5, v6);
}

void sub_1000B6394()
{
  sub_1000221A8();
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "attempting to delete an undeletable folder %@", v1, 0xCu);
}

void sub_1000B6408(void *a1)
{
  uint64_t v1 = [a1 identifier];
  sub_1000221A8();
  sub_1000221B4((void *)&_mh_execute_header, v2, v3, "Not authenticated to copy note %@ across accounts", v4, v5, v6, v7, v8);
}

void sub_1000B648C()
{
  sub_10001CCD0();
  sub_10002218C((void *)&_mh_execute_header, v0, v1, "Error while saving after processing notes.", v2, v3, v4, v5, v6);
}

void sub_1000B64C0(void *a1)
{
  uint64_t v1 = [a1 objectID];
  sub_1000221A8();
  sub_100012270((void *)&_mh_execute_header, v2, v3, "Unable to find destination folder when moving note: %@", v4, v5, v6, v7, v8);
}

void sub_1000B6544()
{
  sub_10001CCD0();
  sub_10002218C((void *)&_mh_execute_header, v0, v1, "Unable to find copied note to delete", v2, v3, v4, v5, v6);
}

void sub_1000B6578()
{
  sub_10001CCD0();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "Tried to set the folder to be a smart folder, which really shouldn't contain notes per se. Reverted to the owning account's default folder.", v1, 2u);
}

void sub_1000B65B8(void *a1)
{
  uint64_t v1 = [a1 objectID];
  sub_1000221A8();
  sub_100012270((void *)&_mh_execute_header, v2, v3, "Unable to find folder to move note to: %@", v4, v5, v6, v7, v8);
}

void sub_1000B663C(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Attempting to add contents to non-editable folder through Push UI", v1, 2u);
}

void sub_1000B6680(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Attempting to add contents to non-editable note through Push UI", v1, 2u);
}

void sub_1000B66C4()
{
  sub_1000221A8();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "Extracting attachments from input items: %@", v1, 0xCu);
}

void sub_1000B6738()
{
  os_log_t v0 = [UTTypeURL identifier];
  sub_10002DE88();
  sub_10002DEB4((void *)&_mh_execute_header, v1, v2, "Can't load item for type identifier %@: %@", v3, v4, v5, v6, v7);
}

void sub_1000B67D4()
{
  os_log_t v0 = [UTTypeRTF identifier];
  sub_10002DE88();
  sub_10002DEB4((void *)&_mh_execute_header, v1, v2, "Can't load item for type identifier %@: %@", v3, v4, v5, v6, v7);
}

void sub_1000B6870()
{
  os_log_t v0 = [UTTypePlainText identifier];
  sub_10002DE88();
  sub_10002DEB4((void *)&_mh_execute_header, v1, v2, "Can't load item for type identifier %@: %@", v3, v4, v5, v6, v7);
}

void sub_1000B690C()
{
  sub_1000221A8();
  sub_10002DED4((void *)&_mh_execute_header, v0, v1, "Error unarchiving data: %@", v2, v3, v4, v5, v6);
}

void sub_1000B6974()
{
  sub_10002DEA0();
  sub_10002DEF0((void *)&_mh_execute_header, v0, v1, "Can't load item for type identifier %@: %@", v2, v3, v4, v5, 2u);
}

void sub_1000B69E8()
{
  sub_1000221A8();
  sub_10002DED4((void *)&_mh_execute_header, v0, v1, "Can't determine how to handle url that is not a string or a URL %@", v2, v3, v4, v5, v6);
}

void sub_1000B6A50()
{
  sub_10002DEA0();
  sub_10002DEF0((void *)&_mh_execute_header, v0, v1, "Can't load item for type identifier %@: %@", v2, v3, v4, v5, 2u);
}

void sub_1000B6AC4(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Couldn't get modification date from file url: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1000B6B3C(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Couldn't get creation date from file url: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1000B6BB4(void *a1)
{
  uint64_t v1 = [a1 localizedDescription];
  sub_1000304B4();
  sub_10002DEB4((void *)&_mh_execute_header, v2, v3, "Error: %@ while getting contents of URL: %@", v4, v5, v6, v7, v8);
}

void sub_1000B6C4C(void *a1)
{
  uint64_t v1 = [a1 localizedDescription];
  sub_1000304B4();
  sub_10002DEB4((void *)&_mh_execute_header, v2, v3, "Error %@ at URL (getting type identifier) during import notes process: %@", v4, v5, v6, v7, v8);
}

uint64_t sub_1000B6CE0()
{
  return type metadata accessor for JSONDecoder.DateDecodingStrategy();
}

uint64_t sub_1000B6CF0()
{
  return dispatch thunk of JSONDecoder.dateDecodingStrategy.setter();
}

uint64_t sub_1000B6D00()
{
  return dispatch thunk of JSONDecoder.decode<A>(_:from:)();
}

uint64_t sub_1000B6D10()
{
  return JSONDecoder.init()();
}

uint64_t sub_1000B6D20()
{
  return type metadata accessor for JSONDecoder();
}

uint64_t sub_1000B6D30()
{
  return type metadata accessor for JSONEncoder.DateEncodingStrategy();
}

uint64_t sub_1000B6D40()
{
  return dispatch thunk of JSONEncoder.dateEncodingStrategy.setter();
}

uint64_t sub_1000B6D50()
{
  return dispatch thunk of JSONEncoder.encode<A>(_:)();
}

uint64_t sub_1000B6D60()
{
  return JSONEncoder.init()();
}

uint64_t sub_1000B6D70()
{
  return type metadata accessor for JSONEncoder();
}

uint64_t sub_1000B6D80()
{
  return static Notification._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1000B6D90()
{
  return type metadata accessor for Notification();
}

uint64_t sub_1000B6DA0()
{
  return LocalizedError.helpAnchor.getter();
}

uint64_t sub_1000B6DB0()
{
  return LocalizedError.failureReason.getter();
}

uint64_t sub_1000B6DC0()
{
  return LocalizedError.recoverySuggestion.getter();
}

uint64_t sub_1000B6E10()
{
  return dispatch thunk of NSKeyValueObservation.invalidate()();
}

uint64_t sub_1000B6E20()
{
  return _convertErrorToNSError(_:)();
}

uint64_t sub_1000B6E30()
{
  return _convertNSErrorToError(_:)();
}

uint64_t sub_1000B6E40()
{
  return _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
}

uint64_t sub_1000B6E50()
{
  return URL.pathExtension.getter();
}

uint64_t sub_1000B6E60()
{
  return URL.absoluteString.getter();
}

uint64_t sub_1000B6E70()
{
  return URL.lastPathComponent.getter();
}

void sub_1000B6E80(NSURL *retstr@<X8>)
{
}

uint64_t sub_1000B6E90()
{
  return URL.deletingPathExtension()();
}

uint64_t sub_1000B6EA0()
{
  return URL.appendingPathComponent(_:isDirectory:)();
}

uint64_t sub_1000B6EB0()
{
  return URL.appendingPathExtension(_:)();
}

uint64_t sub_1000B6EC0()
{
  return URL.deletingLastPathComponent()();
}

uint64_t sub_1000B6ED0()
{
  return static URL.== infix(_:_:)();
}

uint64_t sub_1000B6EE0()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t _s38com_apple_mobilenotes_SharingExtension23ICArchiveNotesPreviewerC4NoteV4hash4intoys6HasherVz_tF_0()
{
  return URL.hash(into:)();
}

uint64_t sub_1000B6F00()
{
  return URL.init(string:)();
}

uint64_t sub_1000B6F10()
{
  return type metadata accessor for URL();
}

NSData sub_1000B6F20()
{
  return Data._bridgeToObjectiveC()();
}

uint64_t sub_1000B6F30()
{
  return static Data._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1000B6F40()
{
  return Date.timeIntervalSince(_:)();
}

uint64_t sub_1000B6F50()
{
  return Date.addingTimeInterval(_:)();
}

NSDate sub_1000B6F60()
{
  return Date._bridgeToObjectiveC()();
}

uint64_t sub_1000B6F70()
{
  return static Date.+ infix(_:_:)();
}

uint64_t sub_1000B6F80()
{
  return Date.init(timeIntervalSince1970:)();
}

uint64_t sub_1000B6F90()
{
  return Date.timeIntervalSince1970.getter();
}

uint64_t sub_1000B6FA0()
{
  return static Date._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1000B6FB0()
{
  return static Date.now.getter();
}

uint64_t sub_1000B6FC0()
{
  return Date.init()();
}

uint64_t sub_1000B6FD0()
{
  return type metadata accessor for Date();
}

uint64_t sub_1000B6FE0()
{
  return UUID.init(uuidString:)();
}

uint64_t sub_1000B6FF0()
{
  return UUID.uuidString.getter();
}

NSUUID sub_1000B7000()
{
  return UUID._bridgeToObjectiveC()();
}

uint64_t sub_1000B7010()
{
  return static UUID._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1000B7020()
{
  return UUID.init()();
}

uint64_t sub_1000B7030()
{
  return type metadata accessor for UUID();
}

uint64_t sub_1000B7040()
{
  return type metadata accessor for ICQueryType();
}

uint64_t sub_1000B7050()
{
  return type metadata accessor for AnsiStylings();
}

uint64_t sub_1000B7060()
{
  return type metadata accessor for ICQueryEntity();
}

uint64_t sub_1000B7070()
{
  return dispatch thunk of ICFileManaging.createFile(at:contents:)();
}

uint64_t sub_1000B7080()
{
  return dispatch thunk of ICFileManaging.removeItem(at:)();
}

uint64_t sub_1000B7090()
{
  return dispatch thunk of ICFileManaging.createDirectory(at:withIntermediateDirectories:)();
}

uint64_t sub_1000B70A0()
{
  return dispatch thunk of ICFileManaging.contentsOfDirectory(at:)();
}

uint64_t sub_1000B70B0()
{
  return dispatch thunk of ICFileManaging.subdirectoriesOfDirectory(at:)();
}

uint64_t sub_1000B70C0()
{
  return dispatch thunk of ICFileManaging.url(for:)();
}

uint64_t sub_1000B70D0()
{
  return dispatch thunk of ICFileManaging.contents(of:)();
}

uint64_t sub_1000B70E0()
{
  return dispatch thunk of ICFileManaging.copyItem(at:to:)();
}

uint64_t sub_1000B70F0()
{
  return ArgumentDecodable<>.init(fromArgument:)();
}

uint64_t sub_1000B7110()
{
  return static ArgumentDecodable<>.typeSummary(forName:)();
}

uint64_t sub_1000B7120()
{
  return dispatch thunk of ICObjectProviding.performAndWait(task:)();
}

uint64_t sub_1000B7130()
{
  return dispatch thunk of ICObjectProviding.object(for:)();
}

uint64_t sub_1000B7140()
{
  return ICObjectReferences.identifier.getter();
}

uint64_t sub_1000B7150()
{
  return ICObjectReferences.recursiveChildren.getter();
}

uint64_t sub_1000B7160()
{
  return ICObjectReferences.recursiveNoteCount.getter();
}

uint64_t sub_1000B7170()
{
  return ICObjectReferences.recursiveAttachmentCount.getter();
}

uint64_t sub_1000B7180()
{
  return ICObjectReferences.type.getter();
}

uint64_t sub_1000B7190()
{
  return static ICObjectReferences.Types.== infix(_:_:)();
}

uint64_t sub_1000B71A0()
{
  return type metadata accessor for ICObjectReferences.Types();
}

uint64_t sub_1000B71B0()
{
  return ICObjectReferences.title.getter();
}

uint64_t sub_1000B71C0()
{
  return ICObjectReferences.children.getter();
}

uint64_t sub_1000B71D0()
{
  return ICObjectReferences<>.init(object:recursivelyIncludeChildren:forPagesHandoff:)();
}

uint64_t sub_1000B71E0()
{
  return type metadata accessor for ICObjectReferences();
}

uint64_t sub_1000B71F0()
{
  return type metadata accessor for ActivityEventObject();
}

uint64_t sub_1000B7200()
{
  return FallbackActivityEvent.minimumSupportedNotesVersion.getter();
}

uint64_t sub_1000B7210()
{
  return FallbackActivityEvent.localizedFallbackTitle.getter();
}

uint64_t sub_1000B7220()
{
  return FallbackActivityEvent.participant.getter();
}

uint64_t sub_1000B7230()
{
  return FallbackActivityEvent.object.getter();
}

uint64_t sub_1000B7240()
{
  return FallbackActivityEvent.typeName.getter();
}

uint64_t sub_1000B7250()
{
  return FallbackActivityEvent.timestamp.getter();
}

uint64_t sub_1000B7260()
{
  return FallbackActivityEvent.init(timestamp:object:participant:minimumSupportedNotesVersion:typeName:localizedFallbackTitle:)();
}

uint64_t sub_1000B7270()
{
  return type metadata accessor for FallbackActivityEvent();
}

uint64_t sub_1000B7280()
{
  return ICTTTranscriptSegment.__allocating_init(document:identity:)();
}

uint64_t sub_1000B7290()
{
  return type metadata accessor for ICTTTranscriptSegment();
}

uint64_t sub_1000B72A0()
{
  return ICModernObjectProvider.init(context:)();
}

uint64_t sub_1000B72B0()
{
  return ICModernObjectProvider.context.getter();
}

uint64_t sub_1000B72C0()
{
  return type metadata accessor for ICModernObjectProvider();
}

uint64_t sub_1000B72D0()
{
  return type metadata accessor for PersistedActivityEvent.Activities();
}

uint64_t sub_1000B72E0()
{
  return PersistedActivityEvent.participant.getter();
}

uint64_t sub_1000B72F0()
{
  return PersistedActivityEvent.object.getter();
}

uint64_t sub_1000B7300()
{
  return PersistedActivityEvent.activity.getter();
}

uint64_t sub_1000B7310()
{
  return PersistedActivityEvent.timestamp.getter();
}

uint64_t sub_1000B7320()
{
  return PersistedActivityEvent.init(timestamp:object:participant:activity:)();
}

uint64_t sub_1000B7330()
{
  return type metadata accessor for PersistedActivityEvent();
}

uint64_t sub_1000B7340()
{
  return ActivityEventParticipant.init(cloudSyncingObject:)();
}

uint64_t sub_1000B7350()
{
  return type metadata accessor for ActivityEventParticipant();
}

uint64_t sub_1000B7360()
{
  return dispatch thunk of ICQuery.type.getter();
}

uint64_t sub_1000B7370()
{
  return ICQuery.init(entity:type:)();
}

uint64_t sub_1000B7380()
{
  return dispatch thunk of ICQuery.entity.getter();
}

uint64_t sub_1000B7390()
{
  return type metadata accessor for ICQuery();
}

uint64_t sub_1000B73A0()
{
  return static UTType._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1000B73B0()
{
  return type metadata accessor for UTType();
}

uint64_t sub_1000B73C0()
{
  return OSSignpostID.init(log:object:)();
}

uint64_t sub_1000B73D0()
{
  return OSSignpostID.rawValue.getter();
}

uint64_t sub_1000B73E0()
{
  return type metadata accessor for OSSignpostID();
}

uint64_t sub_1000B73F0()
{
  return OSSignposter.init(logger:)();
}

uint64_t sub_1000B7400()
{
  return OSSignposter.logHandle.getter();
}

uint64_t sub_1000B7410()
{
  return type metadata accessor for OSSignposter();
}

uint64_t sub_1000B7420()
{
  return type metadata accessor for OSSignpostError();
}

uint64_t sub_1000B7430()
{
  return OSSignpostIntervalState.signpostID.getter();
}

uint64_t sub_1000B7440()
{
  return OSSignpostIntervalState.init(id:isOpen:)();
}

uint64_t sub_1000B7450()
{
  return type metadata accessor for OSSignpostIntervalState();
}

uint64_t sub_1000B7460()
{
  return checkForErrorAndConsumeState(state:)();
}

uint64_t sub_1000B7470()
{
  return static Logger.archiving.getter();
}

uint64_t sub_1000B7480()
{
  return Logger.logObject.getter();
}

uint64_t sub_1000B7490()
{
  return type metadata accessor for Logger();
}

uint64_t sub_1000B74A0()
{
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t sub_1000B74B0()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t sub_1000B74C0()
{
  return type metadata accessor for DispatchQoS();
}

PKDrawing sub_1000B74D0()
{
  return PKDrawing._bridgeToObjectiveC()();
}

uint64_t sub_1000B74E0()
{
  return static PKDrawing._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1000B74F0()
{
  return type metadata accessor for PKDrawing();
}

NSDictionary sub_1000B7500()
{
  return Dictionary._bridgeToObjectiveC()();
}

uint64_t sub_1000B7510()
{
  return static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1000B7520()
{
  return dispatch thunk of Hashable._rawHashValue(seed:)();
}

uint64_t sub_1000B7530()
{
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t sub_1000B7540()
{
  return BidirectionalCollection<>.difference<A>(from:)();
}

uint64_t sub_1000B7550()
{
  return BidirectionalCollection<>.joined(separator:)();
}

uint64_t sub_1000B7560()
{
  return dispatch thunk of static Comparable.< infix(_:_:)();
}

uint64_t sub_1000B7570()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

NSString sub_1000B7580()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_1000B7590()
{
  return static String._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_1000B75A0()
{
  return static String._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_1000B75B0()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1000B75C0()
{
  return String.data(using:allowLossyConversion:)();
}

uint64_t sub_1000B75D0()
{
  return static String.Encoding.utf8.getter();
}

uint64_t sub_1000B75E0()
{
  return type metadata accessor for String.Encoding();
}

uint64_t sub_1000B75F0()
{
  return String.init<A>(describing:)();
}

uint64_t sub_1000B7600()
{
  return static String.typeSummary(forName:)();
}

uint64_t sub_1000B7610()
{
  return static String._fromSubstring(_:)();
}

uint64_t sub_1000B7620()
{
  return String.hash(into:)();
}

uint64_t sub_1000B7630()
{
  return String.count.getter();
}

uint64_t sub_1000B7640()
{
  return String.index(_:offsetBy:limitedBy:)();
}

void sub_1000B7650(Swift::String a1)
{
}

Swift::Int sub_1000B7660()
{
  return String.UTF8View._foreignCount()();
}

uint64_t sub_1000B7680()
{
  return Sequence.reduce<A>(_:_:)();
}

uint64_t sub_1000B7690()
{
  return Sequence.forEach(_:)();
}

uint64_t sub_1000B76A0()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_1000B76B0()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1000B76C0()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray sub_1000B76D0()
{
  return Array._bridgeToObjectiveC()();
}

uint64_t sub_1000B76E0()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1000B76F0()
{
  return Array.description.getter();
}

uint64_t sub_1000B7700()
{
  return specialized Array._endMutation()();
}

uint64_t sub_1000B7710()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_1000B7720()
{
  return static Array._allocateUninitialized(_:)();
}

uint64_t sub_1000B7730()
{
  return static Array._allocateBufferUninitialized(minimumCapacity:)();
}

uint64_t sub_1000B7740()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_1000B7750()
{
  return Array.count.getter();
}

uint64_t sub_1000B7760()
{
  return type metadata accessor for Array();
}

NSSet sub_1000B7770()
{
  return Set._bridgeToObjectiveC()();
}

uint64_t sub_1000B7780()
{
  return static Set._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1000B7790()
{
  return Set.init(minimumCapacity:)();
}

uint64_t sub_1000B77A0()
{
  return Set.Iterator.init(_cocoa:)();
}

uint64_t sub_1000B77B0()
{
  return dispatch thunk of Collection.startIndex.getter();
}

uint64_t sub_1000B77C0()
{
  return dispatch thunk of Collection.count.getter();
}

uint64_t sub_1000B77D0()
{
  return dispatch thunk of Collection.endIndex.getter();
}

uint64_t sub_1000B77E0()
{
  return dispatch thunk of Collection.formIndex(after:)();
}

uint64_t sub_1000B77F0()
{
  return Collection.first.getter();
}

uint64_t sub_1000B7800()
{
  return dispatch thunk of Collection.subscript.read();
}

uint64_t sub_1000B7810()
{
  return CGColorRef.components.getter();
}

NSProgress sub_1000B7820(Swift::Int64 totalUnitCount, Swift::Int64 pendingUnitCount)
{
  return NSProgress.addingChild(totalUnitCount:pendingUnitCount:)(totalUnitCount, pendingUnitCount);
}

void sub_1000B7830()
{
}

uint64_t sub_1000B7840()
{
  return static os_log_type_t.debug.getter();
}

uint64_t sub_1000B7850()
{
  return static os_log_type_t.error.getter();
}

uint64_t sub_1000B7860()
{
  return static os_log_type_t.fault.getter();
}

uint64_t sub_1000B7870()
{
  return ICTTAttachment.init(identifier:universalTypeIdentifier:)();
}

uint64_t sub_1000B7880()
{
  return ICTTAudioDocument.root.getter();
}

uint64_t sub_1000B7890()
{
  return type metadata accessor for OS_dispatch_queue.Attributes();
}

uint64_t sub_1000B78A0()
{
  return type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
}

uint64_t sub_1000B78B0()
{
  return static OS_dispatch_queue.main.getter();
}

uint64_t sub_1000B78C0()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

uint64_t sub_1000B78D0()
{
  return OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
}

uint64_t sub_1000B78E0()
{
  return ICTTAudioRecording.Fragment.__allocating_init(document:identity:)();
}

uint64_t sub_1000B78F0()
{
  return type metadata accessor for ICTTAudioRecording.Fragment();
}

uint64_t sub_1000B7900()
{
  return static os_signpost_type_t.end.getter();
}

uint64_t sub_1000B7910()
{
  return static os_signpost_type_t.begin.getter();
}

uint64_t sub_1000B7920()
{
  return static ICCloudSyncingObject.cloudSyncingObjectActivityEvent(for:fallback:)();
}

uint64_t sub_1000B7930()
{
  return static ICCloudSyncingObject.cloudSyncingObjectActivityEvent(forData:fallback:)();
}

uint64_t sub_1000B7940()
{
  return ICCloudSyncingObject.cloudSyncingObjectActivityEvents.getter();
}

uint64_t sub_1000B7950()
{
  return ICCloudSyncingObject.cloudSyncingObjectActivityEvents.setter();
}

uint64_t sub_1000B7960()
{
  return static ICCloudSyncingObject.fallbackActivityEvent(for:)();
}

uint64_t sub_1000B7970()
{
  return static ICCloudSyncingObject.persistedActivityEvent(for:)();
}

uint64_t sub_1000B7980()
{
  return ICCloudSyncingObject.persist(activity:for:timestamp:)();
}

uint64_t sub_1000B7990()
{
  return NSManagedObjectContext.performAndWait<A>(_:)();
}

void sub_1000B79A0(NSAttributedString _, Swift::Int at)
{
}

uint64_t sub_1000B79B0()
{
  return ICTTMergeableAttributedString.authorAttributedString(for:object:)();
}

uint64_t sub_1000B79C0()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t sub_1000B79D0()
{
  return OS_os_log.signpostsEnabled.getter();
}

uint64_t sub_1000B79E0()
{
  return type metadata accessor for Optional();
}

uint64_t sub_1000B79F0()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_1000B7A00()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t sub_1000B7A10()
{
  return StringProtocol.components<A>(separatedBy:)();
}

uint64_t sub_1000B7A20()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t sub_1000B7A30()
{
  return _HashTable.previousHole(before:)();
}

uint64_t sub_1000B7A40()
{
  return _HashTable.nextHole(atOrAfter:)();
}

uint64_t sub_1000B7A50()
{
  return __CocoaSet.makeIterator()();
}

uint64_t sub_1000B7A60()
{
  return __CocoaSet.Iterator.next()();
}

uint64_t sub_1000B7A70()
{
  return static _SetStorage.copy(original:)();
}

uint64_t sub_1000B7A80()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

uint64_t sub_1000B7A90()
{
  return static _SetStorage.allocate(capacity:)();
}

void sub_1000B7AA0(Swift::Int a1)
{
}

uint64_t sub_1000B7AB0()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t sub_1000B7AC0()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t sub_1000B7AD0()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t sub_1000B7AE0()
{
  return _ArrayProtocol.filter(_:)();
}

uint64_t sub_1000B7AF0()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t sub_1000B7B00()
{
  return specialized ContiguousArray._endMutation()();
}

void sub_1000B7B10(Swift::Int a1)
{
}

uint64_t sub_1000B7B20()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t sub_1000B7B30()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_1000B7B40()
{
  return ContiguousArray.append(_:)();
}

uint64_t sub_1000B7B50()
{
  return ContiguousArray.init()();
}

uint64_t sub_1000B7B60()
{
  return type metadata accessor for ContiguousArray();
}

uint64_t sub_1000B7B70()
{
  return _print_unlocked<A, B>(_:_:)();
}

uint64_t sub_1000B7B80()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_1000B7B90()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_1000B7BA0()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t sub_1000B7BB0()
{
  return static _DictionaryStorage.copy(original:)();
}

uint64_t sub_1000B7BC0()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t sub_1000B7BD0()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t sub_1000B7BE0()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

Swift::Int sub_1000B7C00(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases, string);
}

uint64_t sub_1000B7C10()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_1000B7C20()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_1000B7C30()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_1000B7C40()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_1000B7C50()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t sub_1000B7C60()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_1000B7C70()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_1000B7C80()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_1000B7C90()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_1000B7CA0()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_1000B7CB0()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_1000B7CC0()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_1000B7CD0()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_1000B7CE0()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_1000B7CF0()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_1000B7D00()
{
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
}

uint64_t sub_1000B7D10()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_1000B7D20()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_1000B7D30()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_1000B7D40()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_1000B7D50()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_1000B7D60()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

Swift::Int sub_1000B7D70(Swift::Int a1)
{
  return _minimumMergeRunLength(_:)(a1);
}

uint64_t sub_1000B7D80()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t sub_1000B7D90()
{
  return DefaultStringInterpolation.appendInterpolation(ansi:)();
}

uint64_t sub_1000B7DA0()
{
  return _bridgeAnythingToObjectiveC<A>(_:)();
}

uint64_t sub_1000B7DB0()
{
  return _diagnoseUnexpectedEnumCase<A>(type:)();
}

uint64_t sub_1000B7DC0()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_1000B7DD0()
{
  return _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
}

uint64_t sub_1000B7DE0()
{
  return ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_1000B7DF0()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_1000B7E00()
{
  return Error.localizedDescription.getter();
}

uint64_t sub_1000B7E10()
{
  return Error._getEmbeddedNSError()();
}

uint64_t sub_1000B7E20()
{
  return Error._userInfo.getter();
}

NSNumber sub_1000B7E30()
{
  return Int64._bridgeToObjectiveC()();
}

uint64_t sub_1000B7E40()
{
  return Hasher.init(_seed:)();
}

void sub_1000B7E50(Swift::UInt a1)
{
}

void sub_1000B7E60(Swift::UInt8 a1)
{
}

Swift::Int sub_1000B7E70()
{
  return Hasher._finalize()();
}

uint64_t sub_1000B7E80()
{
  return Mirror.init(reflecting:)();
}

uint64_t sub_1000B7E90()
{
  return type metadata accessor for Mirror();
}

uint64_t sub_1000B7EA0()
{
  return dispatch thunk of Decoder.container<A>(keyedBy:)();
}

uint64_t sub_1000B7EB0()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

void CFRelease(CFTypeRef cf)
{
}

CGAffineTransform *__cdecl CGAffineTransformMakeRotation(CGAffineTransform *__return_ptr retstr, CGFloat angle)
{
  return _CGAffineTransformMakeRotation(retstr, angle);
}

CGColorRef CGColorCreate(CGColorSpaceRef space, const CGFloat *components)
{
  return _CGColorCreate(space, components);
}

CGColorSpaceRef CGColorGetColorSpace(CGColorRef color)
{
  return _CGColorGetColorSpace(color);
}

CFStringRef CGColorSpaceCopyName(CGColorSpaceRef space)
{
  return _CGColorSpaceCopyName(space);
}

CGColorSpaceRef CGColorSpaceCreateWithName(CFStringRef name)
{
  return _CGColorSpaceCreateWithName(name);
}

void CGImageDestinationAddImage(CGImageDestinationRef idst, CGImageRef image, CFDictionaryRef properties)
{
}

CGImageDestinationRef CGImageDestinationCreateWithData(CFMutableDataRef data, CFStringRef type, size_t count, CFDictionaryRef options)
{
  return _CGImageDestinationCreateWithData(data, type, count, options);
}

BOOL CGImageDestinationFinalize(CGImageDestinationRef idst)
{
  return _CGImageDestinationFinalize(idst);
}

size_t CGImageGetHeight(CGImageRef image)
{
  return _CGImageGetHeight(image);
}

size_t CGImageGetWidth(CGImageRef image)
{
  return _CGImageGetWidth(image);
}

void CGImageRelease(CGImageRef image)
{
}

CFDictionaryRef CGImageSourceCopyPropertiesAtIndex(CGImageSourceRef isrc, size_t index, CFDictionaryRef options)
{
  return _CGImageSourceCopyPropertiesAtIndex(isrc, index, options);
}

CGImageRef CGImageSourceCreateImageAtIndex(CGImageSourceRef isrc, size_t index, CFDictionaryRef options)
{
  return _CGImageSourceCreateImageAtIndex(isrc, index, options);
}

CGImageSourceRef CGImageSourceCreateWithData(CFDataRef data, CFDictionaryRef options)
{
  return _CGImageSourceCreateWithData(data, options);
}

CGImageSourceRef CGImageSourceCreateWithURL(CFURLRef url, CFDictionaryRef options)
{
  return _CGImageSourceCreateWithURL(url, options);
}

BOOL CGRectContainsRect(CGRect rect1, CGRect rect2)
{
  return _CGRectContainsRect(rect1, rect2);
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return _CGRectEqualToRect(rect1, rect2);
}

CGFloat CGRectGetMaxY(CGRect rect)
{
  return _CGRectGetMaxY(rect);
}

CGFloat CGRectGetMinY(CGRect rect)
{
  return _CGRectGetMinY(rect);
}

CGRect CGRectInset(CGRect rect, CGFloat dx, CGFloat dy)
{
  return _CGRectInset(rect, dx, dy);
}

BOOL CGRectIsEmpty(CGRect rect)
{
  return _CGRectIsEmpty(rect);
}

BOOL CGRectIsInfinite(CGRect rect)
{
  return _CGRectIsInfinite(rect);
}

BOOL CGRectIsNull(CGRect rect)
{
  return _CGRectIsNull(rect);
}

uint64_t ICAccessibilityAccessibilityLargerTextSizesEnabled()
{
  return _ICAccessibilityAccessibilityLargerTextSizesEnabled();
}

uint64_t ICAccessibilityLinearInterpolatedValueForAccessibilityContentSizeCategory()
{
  return _ICAccessibilityLinearInterpolatedValueForAccessibilityContentSizeCategory();
}

uint64_t ICAccessibilityPostHighPriorityAnnouncementNotification()
{
  return _ICAccessibilityPostHighPriorityAnnouncementNotification();
}

uint64_t ICCheckedDynamicCast()
{
  return _ICCheckedDynamicCast();
}

uint64_t ICCheckedProtocolCast()
{
  return _ICCheckedProtocolCast();
}

uint64_t ICDynamicCast()
{
  return _ICDynamicCast();
}

uint64_t ICEmphasisColorTypeForTag()
{
  return _ICEmphasisColorTypeForTag();
}

uint64_t ICInternalSettingsIsAlexandriaDemoModeEnabled()
{
  return _ICInternalSettingsIsAlexandriaDemoModeEnabled();
}

uint64_t ICInternalSettingsIsAppleAccountBrandingEnabled()
{
  return _ICInternalSettingsIsAppleAccountBrandingEnabled();
}

uint64_t ICNotesAppURLScheme()
{
  return _ICNotesAppURLScheme();
}

uint64_t ICUseCoreDataCoreSpotlightIntegration()
{
  return _ICUseCoreDataCoreSpotlightIntegration();
}

uint64_t NSExtensionMain()
{
  return _NSExtensionMain();
}

NSRange NSIntersectionRange(NSRange range1, NSRange range2)
{
  NSRange v4 = _NSIntersectionRange(range1, range2);
  NSUInteger length = v4.length;
  NSUInteger location = v4.location;
  result.NSUInteger length = length;
  result.NSUInteger location = location;
  return result;
}

void NSLog(NSString *format, ...)
{
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return _NSStringFromClass(aClass);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return _NSStringFromSelector(aSelector);
}

uint64_t NotesAppURLForNoteIdentifierOrTokenContentIdentifier()
{
  return _NotesAppURLForNoteIdentifierOrTokenContentIdentifier();
}

uint64_t TSDCenterOfRect()
{
  return _TSDCenterOfRect();
}

uint64_t TSDClipRectToMinY()
{
  return _TSDClipRectToMinY();
}

uint64_t TSDRectWithCenterAndSize()
{
  return _TSDRectWithCenterAndSize();
}

uint64_t TSDSizeWithMaxSize()
{
  return _TSDSizeWithMaxSize();
}

BOOL UIAccessibilityDarkerSystemColorsEnabled(void)
{
  return _UIAccessibilityDarkerSystemColorsEnabled();
}

void UIAccessibilityPostNotification(UIAccessibilityNotifications notification, id argument)
{
}

BOOL UIAccessibilityShouldDifferentiateWithoutColor(void)
{
  return _UIAccessibilityShouldDifferentiateWithoutColor();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

NSDictionary *_NSDictionaryOfVariableBindings(NSString *commaSeparatedKeysString, id firstValue, ...)
{
  return __NSDictionaryOfVariableBindings(commaSeparatedKeysString, firstValue);
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

uint64_t __ICAccessibilityStringForVariables()
{
  return ___ICAccessibilityStringForVariables();
}

int *__error(void)
{
  return ___error();
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

void bzero(void *a1, size_t a2)
{
}

int close(int a1)
{
  return _close(a1);
}

uint64_t dispatchMainAfterDelay()
{
  return _dispatchMainAfterDelay();
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return _dispatch_get_global_queue(identifier, flags);
}

dispatch_group_t dispatch_group_create(void)
{
  return _dispatch_group_create();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

void dispatch_group_notify(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
}

intptr_t dispatch_group_wait(dispatch_group_t group, dispatch_time_t timeout)
{
  return _dispatch_group_wait(group, timeout);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return _dispatch_queue_attr_make_with_autorelease_frequency(attr, frequency);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return _dispatch_queue_create(label, attr);
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return _dispatch_semaphore_create(value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return _dispatch_semaphore_signal(dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return _dispatch_semaphore_wait(dsema, timeout);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return _dispatch_time(when, delta);
}

int flock(int a1, int a2)
{
  return _flock(a1, a2);
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

id objc_autorelease(id a1)
{
  return _objc_autorelease(a1);
}

{
}

{
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_enumerationMutation(id obj)
{
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return _objc_getProperty(self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return _objc_initWeak(location, val);
}

id objc_loadWeakRetained(id *location)
{
  return _objc_loadWeakRetained(location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return [super a2];
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t objc_opt_isKindOfClass()
{
  return _objc_opt_isKindOfClass();
}

uint64_t objc_opt_new()
{
  return _objc_opt_new();
}

uint64_t objc_opt_respondsToSelector()
{
  return _objc_opt_respondsToSelector();
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutorelease(id a1)
{
  return _a1;
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

id objc_retainBlock(id a1)
{
  return _objc_retainBlock(a1);
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return _objc_storeWeak(location, obj);
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return _objc_unsafeClaimAutoreleasedReturnValue(a1);
}

int open(const char *a1, int a2, ...)
{
  return _open(a1, a2);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return _os_log_create(subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

uint64_t performBlockOnMainThread()
{
  return _performBlockOnMainThread();
}

uint64_t performBlockOnMainThreadAndWait()
{
  return _performBlockOnMainThreadAndWait();
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return _swift_allocateGenericClassMetadata();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_deallocClassInstance()
{
  return _swift_deallocClassInstance();
}

uint64_t swift_deallocPartialClassInstance()
{
  return _swift_deallocPartialClassInstance();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastClass()
{
  return _swift_dynamicCastClass();
}

uint64_t swift_dynamicCastObjCClass()
{
  return _swift_dynamicCastObjCClass();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return _swift_getAssociatedConformanceWitness();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return _swift_getAssociatedTypeWitness();
}

uint64_t swift_getAtKeyPath()
{
  return _swift_getAtKeyPath();
}

uint64_t swift_getErrorValue()
{
  return _swift_getErrorValue();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getGenericMetadata()
{
  return _swift_getGenericMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initClassMetadata2()
{
  return _swift_initClassMetadata2();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return _swift_isEscapingClosureAtFileLocation();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_projectBox()
{
  return _swift_projectBox();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_setDeallocating()
{
  return _swift_setDeallocating();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_unexpectedError()
{
  return _swift_unexpectedError();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return _swift_unknownObjectWeakDestroy();
}

uint64_t swift_unknownObjectWeakInit()
{
  return _swift_unknownObjectWeakInit();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return _swift_unknownObjectWeakLoadStrong();
}

uint64_t swift_weakDestroy()
{
  return _swift_weakDestroy();
}

uint64_t swift_weakInit()
{
  return _swift_weakInit();
}

uint64_t swift_weakLoadStrong()
{
  return _swift_weakLoadStrong();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}

uint64_t swift_willThrowTypedImpl()
{
  return _swift_willThrowTypedImpl();
}

id objc_msgSend_ICBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 ICBackgroundColor];
}

id objc_msgSend_ICDarkenedTintColor(void *a1, const char *a2, ...)
{
  return _[a1 ICDarkenedTintColor];
}

id objc_msgSend_ICTintColor(void *a1, const char *a2, ...)
{
  return _[a1 ICTintColor];
}

id objc_msgSend_ICTintedSelectionColor(void *a1, const char *a2, ...)
{
  return _[a1 ICTintedSelectionColor];
}

id objc_msgSend_URL(void *a1, const char *a2, ...)
{
  return _[a1 URL];
}

id objc_msgSend_URLByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return [a1 URLByAppendingPathComponent:];
}

id objc_msgSend_URLByAppendingPathComponent_isDirectory_(void *a1, const char *a2, ...)
{
  return [a1 URLByAppendingPathComponent:isDirectory:];
}

id objc_msgSend_URLByDeletingLastPathComponent(void *a1, const char *a2, ...)
{
  return _[a1 URLByDeletingLastPathComponent];
}

id objc_msgSend_URLWithString_(void *a1, const char *a2, ...)
{
  return [a1 URLWithString:];
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return _[a1 UUID];
}

id objc_msgSend_UUIDString(void *a1, const char *a2, ...)
{
  return _[a1 UUIDString];
}

id objc_msgSend__scaledValueForValue_(void *a1, const char *a2, ...)
{
  return [a1 _scaledValueForValue:];
}

id objc_msgSend__setHidesShadow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setHidesShadow:");
}

id objc_msgSend__setShowsBackButtonIndicator_(void *a1, const char *a2, ...)
{
  return [a1 _setShowsBackButtonIndicator:];
}

id objc_msgSend__shouldReverseLayoutDirection(void *a1, const char *a2, ...)
{
  return _[a1 _shouldReverseLayoutDirection];
}

id objc_msgSend_absoluteString(void *a1, const char *a2, ...)
{
  return _[a1 absoluteString];
}

id objc_msgSend_accessibilityCellForRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 accessibilityCellForRowAtIndexPath:];
}

id objc_msgSend_accessibilityExpansionAccessoryImageView(void *a1, const char *a2, ...)
{
  return _[a1 accessibilityExpansionAccessoryImageView];
}

id objc_msgSend_accessibilityLabel(void *a1, const char *a2, ...)
{
  return _[a1 accessibilityLabel];
}

id objc_msgSend_accessibilitySharedViaICloudStringForNote_(void *a1, const char *a2, ...)
{
  return [a1 accessibilitySharedViaICloudStringForNote:];
}

id objc_msgSend_accessibilityTraits(void *a1, const char *a2, ...)
{
  return _[a1 accessibilityTraits];
}

id objc_msgSend_accessoryView(void *a1, const char *a2, ...)
{
  return _[a1 accessoryView];
}

id objc_msgSend_account(void *a1, const char *a2, ...)
{
  return _[a1 account];
}

id objc_msgSend_accountAccessoryImageView(void *a1, const char *a2, ...)
{
  return _[a1 accountAccessoryImageView];
}

id objc_msgSend_accountId(void *a1, const char *a2, ...)
{
  return _[a1 accountId];
}

id objc_msgSend_accountItemAtIndex_(void *a1, const char *a2, ...)
{
  return [a1 accountItemAtIndex:];
}

id objc_msgSend_accountLabel(void *a1, const char *a2, ...)
{
  return _[a1 accountLabel];
}

id objc_msgSend_accountName(void *a1, const char *a2, ...)
{
  return _[a1 accountName];
}

id objc_msgSend_accountObjectID(void *a1, const char *a2, ...)
{
  return _[a1 accountObjectID];
}

id objc_msgSend_accountPickerBackButtonTitle(void *a1, const char *a2, ...)
{
  return _[a1 accountPickerBackButtonTitle];
}

id objc_msgSend_accountTitleLabel(void *a1, const char *a2, ...)
{
  return _[a1 accountTitleLabel];
}

id objc_msgSend_accountType(void *a1, const char *a2, ...)
{
  return _[a1 accountType];
}

id objc_msgSend_accountUtilities(void *a1, const char *a2, ...)
{
  return _[a1 accountUtilities];
}

id objc_msgSend_accounts(void *a1, const char *a2, ...)
{
  return _[a1 accounts];
}

id objc_msgSend_actionWithHandler_(void *a1, const char *a2, ...)
{
  return [a1 actionWithHandler:];
}

id objc_msgSend_actionWithTitle_style_handler_(void *a1, const char *a2, ...)
{
  return [a1 actionWithTitle:style:handler:];
}

id objc_msgSend_activateConstraints_(void *a1, const char *a2, ...)
{
  return [a1 activateConstraints:];
}

id objc_msgSend_activityIndicatorBarButtonItem(void *a1, const char *a2, ...)
{
  return _[a1 activityIndicatorBarButtonItem];
}

id objc_msgSend_activityIndicatorView(void *a1, const char *a2, ...)
{
  return _[a1 activityIndicatorView];
}

id objc_msgSend_addAccount_(void *a1, const char *a2, ...)
{
  return [a1 addAccount:];
}

id objc_msgSend_addAction_(void *a1, const char *a2, ...)
{
  return [a1 addAction:];
}

id objc_msgSend_addAttachmentWithUTI_data_filename_(void *a1, const char *a2, ...)
{
  return [a1 addAttachmentWithUTI:data:filename:];
}

id objc_msgSend_addAttachmentsInContent_forEvernoteResource_forNote_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAttachmentsInContent:forEvernoteResource:forNote:");
}

id objc_msgSend_addAttribute_value_range_(void *a1, const char *a2, ...)
{
  return [a1 addAttribute:value:range:];
}

id objc_msgSend_addChildItem_(void *a1, const char *a2, ...)
{
  return [a1 addChildItem:];
}

id objc_msgSend_addChildViewController_(void *a1, const char *a2, ...)
{
  return [a1 addChildViewController:];
}

id objc_msgSend_addConstraints_(void *a1, const char *a2, ...)
{
  return [a1 addConstraints:];
}

id objc_msgSend_addFolderListItem_(void *a1, const char *a2, ...)
{
  return [a1 addFolderListItem:];
}

id objc_msgSend_addGestureRecognizer_(void *a1, const char *a2, ...)
{
  return [a1 addGestureRecognizer:];
}

id objc_msgSend_addHashtagToNoteBodyIfMissing_(void *a1, const char *a2, ...)
{
  return [a1 addHashtagToNoteBodyIfMissing:];
}

id objc_msgSend_addKeyCommand_(void *a1, const char *a2, ...)
{
  return [a1 addKeyCommand:];
}

id objc_msgSend_addLegacyTombstoneForFolder_(void *a1, const char *a2, ...)
{
  return [a1 addLegacyTombstoneForFolder:];
}

id objc_msgSend_addLegacyTombstoneForNote_(void *a1, const char *a2, ...)
{
  return [a1 addLegacyTombstoneForNote:];
}

id objc_msgSend_addNewNoteByCopyingNote_toFolder_(void *a1, const char *a2, ...)
{
  return [a1 addNewNoteByCopyingNote:toFolder:];
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return [a1 addObject:];
}

id objc_msgSend_addObjectsFromArray_(void *a1, const char *a2, ...)
{
  return [a1 addObjectsFromArray:];
}

id objc_msgSend_addObserver_selector_name_object_(void *a1, const char *a2, ...)
{
  return [a1 addObserver:selector:name:object:];
}

id objc_msgSend_addOperation_(void *a1, const char *a2, ...)
{
  return [a1 addOperation:];
}

id objc_msgSend_addOrDeleteLocalAccountIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 addOrDeleteLocalAccountIfNecessary];
}

id objc_msgSend_addSizeConstraint(void *a1, const char *a2, ...)
{
  return _[a1 addSizeConstraint];
}

id objc_msgSend_addSubview_(void *a1, const char *a2, ...)
{
  return [a1 addSubview:];
}

id objc_msgSend_addTarget_action_forControlEvents_(void *a1, const char *a2, ...)
{
  return [a1 addTarget:action:forControlEvents:];
}

id objc_msgSend_addTitleInContent_forEvernoteNote_(void *a1, const char *a2, ...)
{
  return [a1 addTitleInContent:forEvernoteNote:];
}

id objc_msgSend_addTitleInContent_titleString_(void *a1, const char *a2, ...)
{
  return [a1 addTitleInContent:titleString:];
}

id objc_msgSend_addTodoListsIfNeededInContent_forEvernoteNote_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addTodoListsIfNeededInContent:forEvernoteNote:");
}

id objc_msgSend_addURLAttachmentWithURL_(void *a1, const char *a2, ...)
{
  return [a1 addURLAttachmentWithURL:];
}

id objc_msgSend_addURLs_toImportFolder_shouldPreserveFolders_(void *a1, const char *a2, ...)
{
  return [a1 addURLs:toImportFolder:shouldPreserveFolders:];
}

id objc_msgSend_adjustFrame_forKeyboardFrame_topLayoutGuideHeight_(void *a1, const char *a2, ...)
{
  return [a1 adjustFrame:forKeyboardFrame:topLayoutGuideHeight:];
}

id objc_msgSend_adjustedDestinationFolderForNoteContainer_sourceFolder_(void *a1, const char *a2, ...)
{
  return [a1 adjustedDestinationFolderForNoteContainer:sourceFolder:];
}

id objc_msgSend_alertControllerWithTitle_message_preferredStyle_(void *a1, const char *a2, ...)
{
  return [a1 alertControllerWithTitle:message:preferredStyle:];
}

id objc_msgSend_allActiveAccountsInContextSortedByAccountType_(void *a1, const char *a2, ...)
{
  return [a1 allActiveAccountsInContextSortedByAccountType:];
}

id objc_msgSend_allFolders(void *a1, const char *a2, ...)
{
  return _[a1 allFolders];
}

id objc_msgSend_allItemsFolderLocalizedTitle(void *a1, const char *a2, ...)
{
  return _[a1 allItemsFolderLocalizedTitle];
}

id objc_msgSend_allObjects(void *a1, const char *a2, ...)
{
  return _[a1 allObjects];
}

id objc_msgSend_allowedContentTypes(void *a1, const char *a2, ...)
{
  return _[a1 allowedContentTypes];
}

id objc_msgSend_allowsNewTextLength_(void *a1, const char *a2, ...)
{
  return [a1 allowsNewTextLength:];
}

id objc_msgSend_alternateConstraintsForAXLargerTextSizes(void *a1, const char *a2, ...)
{
  return _[a1 alternateConstraintsForAXLargerTextSizes];
}

id objc_msgSend_animateAlongsideTransition_completion_(void *a1, const char *a2, ...)
{
  return [a1 animateAlongsideTransition:];
}

id objc_msgSend_animateWithDuration_animations_(void *a1, const char *a2, ...)
{
  return [a1 animateWithDuration:];
}

id objc_msgSend_animateWithDuration_animations_completion_(void *a1, const char *a2, ...)
{
  return [a1 animateWithDuration:animations:completion:];
}

id objc_msgSend_animateWithDuration_delay_usingSpringWithDamping_initialSpringVelocity_options_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:");
}

id objc_msgSend_appSessionDidTerminate(void *a1, const char *a2, ...)
{
  return _[a1 appSessionDidTerminate];
}

id objc_msgSend_appendAttributedString_(void *a1, const char *a2, ...)
{
  return [a1 appendAttributedString:];
}

id objc_msgSend_appendAttributedString_error_(void *a1, const char *a2, ...)
{
  return [a1 appendAttributedString:error:];
}

id objc_msgSend_appendLock(void *a1, const char *a2, ...)
{
  return _[a1 appendLock];
}

id objc_msgSend_appendMediaItemWithItemProvider_attachments_(void *a1, const char *a2, ...)
{
  return [a1 appendMediaItemWithItemProvider:attachments:];
}

id objc_msgSend_appendString_(void *a1, const char *a2, ...)
{
  return [a1 appendString:];
}

id objc_msgSend_appendString_toNote_error_(void *a1, const char *a2, ...)
{
  return [a1 appendString:toNote:error:];
}

id objc_msgSend_applicationDocumentsURL(void *a1, const char *a2, ...)
{
  return _[a1 applicationDocumentsURL];
}

id objc_msgSend_archiveEvernoteNotesFromBookmarkData_completionBlock_(void *a1, const char *a2, ...)
{
  return [a1 archiveEvernoteNotesFromBookmarkData:completionBlock:];
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return _[a1 array];
}

id objc_msgSend_arrayWithCapacity_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithCapacity:];
}

id objc_msgSend_arrayWithObject_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithObject:];
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithObjects:count:];
}

id objc_msgSend_arrowImageView(void *a1, const char *a2, ...)
{
  return _[a1 arrowImageView];
}

id objc_msgSend_attachment(void *a1, const char *a2, ...)
{
  return _[a1 attachment];
}

id objc_msgSend_attachmentBrickView(void *a1, const char *a2, ...)
{
  return _[a1 attachmentBrickView];
}

id objc_msgSend_attachmentDidChange(void *a1, const char *a2, ...)
{
  return _[a1 attachmentDidChange];
}

id objc_msgSend_attachmentExceedsMaxSizeAllowed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attachmentExceedsMaxSizeAllowed:");
}

id objc_msgSend_attachmentModel(void *a1, const char *a2, ...)
{
  return _[a1 attachmentModel];
}

id objc_msgSend_attachments(void *a1, const char *a2, ...)
{
  return _[a1 attachments];
}

id objc_msgSend_attachmentsFromExtensionContext_note_(void *a1, const char *a2, ...)
{
  return [a1 attachmentsFromExtensionContext:note:];
}

id objc_msgSend_attribute_atIndex_effectiveRange_(void *a1, const char *a2, ...)
{
  return [a1 attribute:atIndex:effectiveRange:];
}

id objc_msgSend_attributeSet(void *a1, const char *a2, ...)
{
  return _[a1 attributeSet];
}

id objc_msgSend_attributedContentText(void *a1, const char *a2, ...)
{
  return _[a1 attributedContentText];
}

id objc_msgSend_attributedStringContentFromFileURL_error_(void *a1, const char *a2, ...)
{
  return [a1 attributedStringContentFromFileURL:error:];
}

id objc_msgSend_attributedStringFromHTMLString_(void *a1, const char *a2, ...)
{
  return [a1 attributedStringFromHTMLString:];
}

id objc_msgSend_attributedStringFromHTMLString_baseURL_readerDelegate_(void *a1, const char *a2, ...)
{
  return [a1 attributedStringFromHTMLString:baseURL:readerDelegate:];
}

id objc_msgSend_attributedStringWithAttachment_(void *a1, const char *a2, ...)
{
  return [a1 attributedStringWithAttachment:];
}

id objc_msgSend_attributedText(void *a1, const char *a2, ...)
{
  return _[a1 attributedText];
}

id objc_msgSend_attributedTitle(void *a1, const char *a2, ...)
{
  return _[a1 attributedTitle];
}

id objc_msgSend_backBarButtonItem(void *a1, const char *a2, ...)
{
  return _[a1 backBarButtonItem];
}

id objc_msgSend_backgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 backgroundColor];
}

id objc_msgSend_base64EncodedStringWithOptions_(void *a1, const char *a2, ...)
{
  return [a1 base64EncodedStringWithOptions:];
}

id objc_msgSend_becomeFirstResponder(void *a1, const char *a2, ...)
{
  return _[a1 becomeFirstResponder];
}

id objc_msgSend_beginUndoGrouping(void *a1, const char *a2, ...)
{
  return _[a1 beginUndoGrouping];
}

id objc_msgSend_beginUpdates(void *a1, const char *a2, ...)
{
  return _[a1 beginUpdates];
}

id objc_msgSend_blackColor(void *a1, const char *a2, ...)
{
  return _[a1 blackColor];
}

id objc_msgSend_boldSystemFontOfSize_(void *a1, const char *a2, ...)
{
  return [a1 boldSystemFontOfSize:];
}

id objc_msgSend_bookmarkDataFromFileURL_(void *a1, const char *a2, ...)
{
  return [a1 bookmarkDataFromFileURL:];
}

id objc_msgSend_bookmarkDataWithOptions_includingResourceValuesForKeys_relativeToURL_error_(void *a1, const char *a2, ...)
{
  return [a1 bookmarkDataWithOptions:includingResourceValuesForKeys:relativeToURL:error:];
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return _[a1 BOOLValue];
}

id objc_msgSend_bottomAnchor(void *a1, const char *a2, ...)
{
  return _[a1 bottomAnchor];
}

id objc_msgSend_bottomTextView(void *a1, const char *a2, ...)
{
  return _[a1 bottomTextView];
}

id objc_msgSend_bottomTextViewCollapsed(void *a1, const char *a2, ...)
{
  return _[a1 bottomTextViewCollapsed];
}

id objc_msgSend_bottomTextviewCollapsibleZeroHeightConstraint(void *a1, const char *a2, ...)
{
  return _[a1 bottomTextviewCollapsibleZeroHeightConstraint];
}

id objc_msgSend_bounds(void *a1, const char *a2, ...)
{
  return _[a1 bounds];
}

id objc_msgSend_brickCollapsibleZeroHeightConstraint(void *a1, const char *a2, ...)
{
  return _[a1 brickCollapsibleZeroHeightConstraint];
}

id objc_msgSend_brickContainer(void *a1, const char *a2, ...)
{
  return _[a1 brickContainer];
}

id objc_msgSend_brickContainerHeightConstraint(void *a1, const char *a2, ...)
{
  return _[a1 brickContainerHeightConstraint];
}

id objc_msgSend_bundleForClass_(void *a1, const char *a2, ...)
{
  return [a1 bundleForClass:];
}

id objc_msgSend_buttonWithConfiguration_primaryAction_(void *a1, const char *a2, ...)
{
  return [a1 buttonWithConfiguration:primaryAction:];
}

id objc_msgSend_canAddAttachments_(void *a1, const char *a2, ...)
{
  return [a1 canAddAttachments:];
}

id objc_msgSend_canHandleFileURL_(void *a1, const char *a2, ...)
{
  return [a1 canHandleFileURL:];
}

id objc_msgSend_canMoveAddOrDeleteContents(void *a1, const char *a2, ...)
{
  return _[a1 canMoveAddOrDeleteContents];
}

id objc_msgSend_canShareToFolder_(void *a1, const char *a2, ...)
{
  return [a1 canShareToFolder:];
}

id objc_msgSend_canShareToNote_(void *a1, const char *a2, ...)
{
  return [a1 canShareToNote:];
}

id objc_msgSend_cancelAllOperations(void *a1, const char *a2, ...)
{
  return _[a1 cancelAllOperations];
}

id objc_msgSend_cancelButton(void *a1, const char *a2, ...)
{
  return _[a1 cancelButton];
}

id objc_msgSend_cancelEverythingWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 cancelEverythingWithCompletionHandler:];
}

id objc_msgSend_cancelIndexingOperationsWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 cancelIndexingOperationsWithCompletionHandler:];
}

id objc_msgSend_cancelParsing(void *a1, const char *a2, ...)
{
  return _[a1 cancelParsing];
}

id objc_msgSend_cancelProcess(void *a1, const char *a2, ...)
{
  return _[a1 cancelProcess];
}

id objc_msgSend_cancelRequestWithError_(void *a1, const char *a2, ...)
{
  return [a1 cancelRequestWithError:];
}

id objc_msgSend_capsuleShape(void *a1, const char *a2, ...)
{
  return _[a1 capsuleShape];
}

id objc_msgSend_caretRectForPosition_(void *a1, const char *a2, ...)
{
  return [a1 caretRectForPosition:];
}

id objc_msgSend_cellHeight(void *a1, const char *a2, ...)
{
  return _[a1 cellHeight];
}

id objc_msgSend_cellIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 cellIdentifier];
}

id objc_msgSend_centerYAnchor(void *a1, const char *a2, ...)
{
  return _[a1 centerYAnchor];
}

id objc_msgSend_changeLinkDestinationFromNote_toNote_(void *a1, const char *a2, ...)
{
  return [a1 changeLinkDestinationFromNote:toNote:];
}

id objc_msgSend_children(void *a1, const char *a2, ...)
{
  return _[a1 children];
}

id objc_msgSend_cleanupArchiveId_completionBlock_(void *a1, const char *a2, ...)
{
  return [a1 cleanupArchiveId:completionBlock:];
}

id objc_msgSend_cleanupTemporaryImageFilesIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 cleanupTemporaryImageFilesIfNecessary];
}

id objc_msgSend_cleanupTemporaryNewNoteIfNecesary(void *a1, const char *a2, ...)
{
  return _[a1 cleanupTemporaryNewNoteIfNecesary];
}

id objc_msgSend_clearColor(void *a1, const char *a2, ...)
{
  return _[a1 clearColor];
}

id objc_msgSend_collapseFolderListItem_atIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 collapseFolderListItem:atIndexPath:];
}

id objc_msgSend_collapsedAccountIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 collapsedAccountIdentifiers];
}

id objc_msgSend_colorWithAlphaComponent_(void *a1, const char *a2, ...)
{
  return [a1 colorWithAlphaComponent:];
}

id objc_msgSend_commonInit(void *a1, const char *a2, ...)
{
  return _[a1 commonInit];
}

id objc_msgSend_completeExtensionRequest_(void *a1, const char *a2, ...)
{
  return [a1 completeExtensionRequest:];
}

id objc_msgSend_completeRequestReturningItems_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 completeRequestReturningItems:completionHandler:];
}

id objc_msgSend_computedSize(void *a1, const char *a2, ...)
{
  return _[a1 computedSize];
}

id objc_msgSend_configureTableViewNibs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureTableViewNibs:");
}

id objc_msgSend_configureUI(void *a1, const char *a2, ...)
{
  return _[a1 configureUI];
}

id objc_msgSend_conformsToType_(void *a1, const char *a2, ...)
{
  return [a1 conformsToType:];
}

id objc_msgSend_consolidateDuplicateAttachments_(void *a1, const char *a2, ...)
{
  return [a1 consolidateDuplicateAttachments:];
}

id objc_msgSend_constraintEqualToAnchor_(void *a1, const char *a2, ...)
{
  return [a1 constraintEqualToAnchor:];
}

id objc_msgSend_constraintEqualToAnchor_constant_(void *a1, const char *a2, ...)
{
  return [a1 constraintEqualToAnchor:];
}

id objc_msgSend_constraintGreaterThanOrEqualToAnchor_constant_(void *a1, const char *a2, ...)
{
  return [a1 constraintGreaterThanOrEqualToAnchor:constant:];
}

id objc_msgSend_constraintGreaterThanOrEqualToConstant_(void *a1, const char *a2, ...)
{
  return [a1 constraintGreaterThanOrEqualToConstant:];
}

id objc_msgSend_constraintLessThanOrEqualToAnchor_constant_(void *a1, const char *a2, ...)
{
  return [a1 constraintLessThanOrEqualToAnchor:constant:];
}

id objc_msgSend_constraintLessThanOrEqualToAnchor_multiplier_(void *a1, const char *a2, ...)
{
  return [a1 constraintLessThanOrEqualToAnchor:multiplier:];
}

id objc_msgSend_constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant_(void *a1, const char *a2, ...)
{
  return [a1 constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:];
}

id objc_msgSend_constraints(void *a1, const char *a2, ...)
{
  return _[a1 constraints];
}

id objc_msgSend_constraintsWithVisualFormat_options_metrics_views_(void *a1, const char *a2, ...)
{
  return [a1 constraintsWithVisualFormat:];
}

id objc_msgSend_containerView(void *a1, const char *a2, ...)
{
  return _[a1 containerView];
}

id objc_msgSend_containerViewController(void *a1, const char *a2, ...)
{
  return _[a1 containerViewController];
}

id objc_msgSend_containsObject_(void *a1, const char *a2, ...)
{
  return [a1 containsObject:];
}

id objc_msgSend_containsOnlyRawImageDataInProvider_(void *a1, const char *a2, ...)
{
  return [a1 containsOnlyRawImageDataInProvider:];
}

id objc_msgSend_containsOnlyRawImagesInExtensionContext_(void *a1, const char *a2, ...)
{
  return [a1 containsOnlyRawImagesInExtensionContext:];
}

id objc_msgSend_containsUndeletableNotes_(void *a1, const char *a2, ...)
{
  return [a1 containsUndeletableNotes];
}

id objc_msgSend_containsUnduplicatableNotes_(void *a1, const char *a2, ...)
{
  return [a1 containsUnduplicatableNotes:];
}

id objc_msgSend_content(void *a1, const char *a2, ...)
{
  return _[a1 content];
}

id objc_msgSend_contentParseQueue(void *a1, const char *a2, ...)
{
  return _[a1 contentParseQueue];
}

id objc_msgSend_contentScaleFactor(void *a1, const char *a2, ...)
{
  return _[a1 contentScaleFactor];
}

id objc_msgSend_contentSizeCategoryDidChange(void *a1, const char *a2, ...)
{
  return _[a1 contentSizeCategoryDidChange];
}

id objc_msgSend_contentViewContainer(void *a1, const char *a2, ...)
{
  return _[a1 contentViewContainer];
}

id objc_msgSend_contentViewTopSeparator(void *a1, const char *a2, ...)
{
  return _[a1 contentViewTopSeparator];
}

id objc_msgSend_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_(void *a1, const char *a2, ...)
{
  return [a1 contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:];
}

id objc_msgSend_contextContainsOnlyRawImages(void *a1, const char *a2, ...)
{
  return _[a1 contextContainsOnlyRawImages];
}

id objc_msgSend_convertRect_fromView_(void *a1, const char *a2, ...)
{
  return [a1 convertRect:fromView:];
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _[a1 copy];
}

id objc_msgSend_copyFolder_toFolder_(void *a1, const char *a2, ...)
{
  return [a1 copyFolder:toFolder:];
}

id objc_msgSend_copyItemAtURL_toURL_error_(void *a1, const char *a2, ...)
{
  return [a1 copyItemAtURL:toURL:error:];
}

id objc_msgSend_copyNotes_toFolder_(void *a1, const char *a2, ...)
{
  return [a1 copyNotes:toFolder:];
}

id objc_msgSend_copyValuesToNote_(void *a1, const char *a2, ...)
{
  return [a1 copyValuesToNote:];
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _[a1 count];
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return [a1 countByEnumeratingWithState:objects:count:];
}

id objc_msgSend_countEvernoteNotesFromBookmarkData_completionBlock_(void *a1, const char *a2, ...)
{
  return [a1 countEvernoteNotesFromBookmarkData:completionBlock:];
}

id objc_msgSend_countLabel(void *a1, const char *a2, ...)
{
  return _[a1 countLabel];
}

id objc_msgSend_countOfAccounts(void *a1, const char *a2, ...)
{
  return _[a1 countOfAccounts];
}

id objc_msgSend_countOfItemsInAccountAtIndex_(void *a1, const char *a2, ...)
{
  return [a1 countOfItemsInAccountAtIndex:];
}

id objc_msgSend_countOfNonTrashFolderVisibleInlineAttachmentsForHashtagStandardizedContent_account_(void *a1, const char *a2, ...)
{
  return [a1 countOfNonTrashFolderVisibleInlineAttachmentsForHashtagStandardizedContent:account:];
}

id objc_msgSend_countOfVisibleDescendants(void *a1, const char *a2, ...)
{
  return _[a1 countOfVisibleDescendants];
}

id objc_msgSend_createDirectoryAtURL_withIntermediateDirectories_attributes_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createDirectoryAtURL:withIntermediateDirectories:attributes:error:");
}

id objc_msgSend_createNewNoteToolbar(void *a1, const char *a2, ...)
{
  return _[a1 createNewNoteToolbar];
}

id objc_msgSend_createNewNoteToolbarBottomConstraint(void *a1, const char *a2, ...)
{
  return _[a1 createNewNoteToolbarBottomConstraint];
}

id objc_msgSend_createNewNoteToolbarHeightConstraint(void *a1, const char *a2, ...)
{
  return _[a1 createNewNoteToolbarHeightConstraint];
}

id objc_msgSend_createTempFileFromImage_populateAttachmentInfo_(void *a1, const char *a2, ...)
{
  return [a1 createTempFileFromImage:populateAttachmentInfo:];
}

id objc_msgSend_created(void *a1, const char *a2, ...)
{
  return _[a1 created];
}

id objc_msgSend_currentErrorFileURLs(void *a1, const char *a2, ...)
{
  return _[a1 currentErrorFileURLs];
}

id objc_msgSend_currentSelectedFolderForTableViewController_(void *a1, const char *a2, ...)
{
  return [a1 currentSelectedFolderForTableViewController:];
}

id objc_msgSend_currentSelectedNoteForTableViewController_(void *a1, const char *a2, ...)
{
  return [a1 currentSelectedNoteForTableViewController:];
}

id objc_msgSend_customNoteSortType(void *a1, const char *a2, ...)
{
  return _[a1 customNoteSortType];
}

id objc_msgSend_darkGrayColor(void *a1, const char *a2, ...)
{
  return _[a1 darkGrayColor];
}

id objc_msgSend_dashContainerZeroWidthConstraint(void *a1, const char *a2, ...)
{
  return _[a1 dashContainerZeroWidthConstraint];
}

id objc_msgSend_dashLabel(void *a1, const char *a2, ...)
{
  return _[a1 dashLabel];
}

id objc_msgSend_dashLabelZeroWidthConstraint(void *a1, const char *a2, ...)
{
  return _[a1 dashLabelZeroWidthConstraint];
}

id objc_msgSend_data(void *a1, const char *a2, ...)
{
  return _[a1 data];
}

id objc_msgSend_date(void *a1, const char *a2, ...)
{
  return _[a1 date];
}

id objc_msgSend_dateLabel(void *a1, const char *a2, ...)
{
  return _[a1 dateLabel];
}

id objc_msgSend_dbWriteLock(void *a1, const char *a2, ...)
{
  return _[a1 dbWriteLock];
}

id objc_msgSend_dbWriteLockfd(void *a1, const char *a2, ...)
{
  return _[a1 dbWriteLockfd];
}

id objc_msgSend_dbWriteUnlock(void *a1, const char *a2, ...)
{
  return _[a1 dbWriteUnlock];
}

id objc_msgSend_deactivateConstraints_(void *a1, const char *a2, ...)
{
  return [a1 deactivateConstraints:];
}

id objc_msgSend_debugDescription(void *a1, const char *a2, ...)
{
  return _[a1 debugDescription];
}

id objc_msgSend_deduplicatingTitle_forFolder_forNewFolderParent_ofAccount_(void *a1, const char *a2, ...)
{
  return [a1 deduplicatingTitle:forFolder:forNewFolderParent:ofAccount:];
}

id objc_msgSend_deduplicatingTitle_forFolder_ofAccount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deduplicatingTitle:forFolder:ofAccount:");
}

id objc_msgSend_defaultAccountInContext_(void *a1, const char *a2, ...)
{
  return [a1 defaultAccountInContext:];
}

id objc_msgSend_defaultBrickSize(void *a1, const char *a2, ...)
{
  return _[a1 defaultBrickSize];
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return _[a1 defaultCenter];
}

id objc_msgSend_defaultConstraints(void *a1, const char *a2, ...)
{
  return _[a1 defaultConstraints];
}

id objc_msgSend_defaultConstraintsForRegularTextSizes(void *a1, const char *a2, ...)
{
  return _[a1 defaultConstraintsForRegularTextSizes];
}

id objc_msgSend_defaultExpansionAccessoryImageView(void *a1, const char *a2, ...)
{
  return _[a1 defaultExpansionAccessoryImageView];
}

id objc_msgSend_defaultFolder(void *a1, const char *a2, ...)
{
  return _[a1 defaultFolder];
}

id objc_msgSend_defaultFolderInContext_(void *a1, const char *a2, ...)
{
  return [a1 defaultFolderInContext:];
}

id objc_msgSend_defaultManager(void *a1, const char *a2, ...)
{
  return _[a1 defaultManager];
}

id objc_msgSend_defaultMetrics(void *a1, const char *a2, ...)
{
  return _[a1 defaultMetrics];
}

id objc_msgSend_defaultSystemImageName(void *a1, const char *a2, ...)
{
  return _[a1 defaultSystemImageName];
}

id objc_msgSend_defaultTitleForEmptyNote(void *a1, const char *a2, ...)
{
  return _[a1 defaultTitleForEmptyNote];
}

id objc_msgSend_defaultWorkspace(void *a1, const char *a2, ...)
{
  return _[a1 defaultWorkspace];
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return _[a1 delegate];
}

id objc_msgSend_deleteAttachment_(void *a1, const char *a2, ...)
{
  return [a1 deleteAttachment:];
}

id objc_msgSend_deleteNote_(void *a1, const char *a2, ...)
{
  return [a1 deleteNote:];
}

id objc_msgSend_deleteRowsAtIndexPaths_withRowAnimation_(void *a1, const char *a2, ...)
{
  return [a1 deleteRowsAtIndexPaths:withRowAnimation:];
}

id objc_msgSend_deleteTemporaryImageFileIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 deleteTemporaryImageFileIfNecessary];
}

id objc_msgSend_deleteUnusedHashtagsWithStandardizedContent_(void *a1, const char *a2, ...)
{
  return [a1 deleteUnusedHashtagsWithStandardizedContent:];
}

id objc_msgSend_dequeueReusableCellWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 dequeueReusableCellWithIdentifier];
}

id objc_msgSend_dequeueReusableCellWithIdentifier_forIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 dequeueReusableCellWithIdentifier:forIndexPath:];
}

id objc_msgSend_dequeueReusableHeaderFooterViewWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 dequeueReusableHeaderFooterViewWithIdentifier];
}

id objc_msgSend_deselectRowAtIndexPath_animated_(void *a1, const char *a2, ...)
{
  return [a1 deselectRowAtIndexPath:animated:];
}

id objc_msgSend_destinationViewController(void *a1, const char *a2, ...)
{
  return _[a1 destinationViewController];
}

id objc_msgSend_deviceIsVision(void *a1, const char *a2, ...)
{
  return _[a1 deviceIsVision];
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return _[a1 dictionary];
}

id objc_msgSend_dictionaryWithCapacity_(void *a1, const char *a2, ...)
{
  return [a1 dictionaryWithCapacity:];
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return [a1 dictionaryWithObjects:forKeys:count:];
}

id objc_msgSend_didDisppearInContainer_(void *a1, const char *a2, ...)
{
  return [a1 didDisppearInContainer:];
}

id objc_msgSend_didMoveToParentViewController_(void *a1, const char *a2, ...)
{
  return [a1 didMoveToParentViewController:];
}

id objc_msgSend_dimmingView(void *a1, const char *a2, ...)
{
  return _[a1 dimmingView];
}

id objc_msgSend_disableConstraintsBySettingPriority_(void *a1, const char *a2, ...)
{
  return [a1 disableConstraintsBySettingPriority:];
}

id objc_msgSend_disclosureAccessoryImageView(void *a1, const char *a2, ...)
{
  return _[a1 disclosureAccessoryImageView];
}

id objc_msgSend_dismissRootViewController(void *a1, const char *a2, ...)
{
  return _[a1 dismissRootViewController];
}

id objc_msgSend_dismissViewControllerAnimated_completion_(void *a1, const char *a2, ...)
{
  return [a1 dismissViewControllerAnimated:YES completion:nil];
}

id objc_msgSend_dismissWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 dismissWithCompletion:];
}

id objc_msgSend_duplicateNote_intoFolder_isPasswordProtected_removeOriginalNote_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "duplicateNote:intoFolder:isPasswordProtected:removeOriginalNote:");
}

id objc_msgSend_duration(void *a1, const char *a2, ...)
{
  return _[a1 duration];
}

id objc_msgSend_enableConstraintsBySettingPriority_(void *a1, const char *a2, ...)
{
  return [a1 enableConstraintsBySettingPriority:];
}

id objc_msgSend_endSessionSynchronously_endReason_(void *a1, const char *a2, ...)
{
  return [a1 endSessionSynchronously:endReason:];
}

id objc_msgSend_endUndoGrouping(void *a1, const char *a2, ...)
{
  return _[a1 endUndoGrouping];
}

id objc_msgSend_endUpdates(void *a1, const char *a2, ...)
{
  return _[a1 endUpdates];
}

id objc_msgSend_enumerateAttribute_inRange_options_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateAttribute:inRange:options:usingBlock:");
}

id objc_msgSend_enumerateObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return [a1 enumerateObjectsUsingBlock:];
}

id objc_msgSend_enumeratorAtURL_includingPropertiesForKeys_options_errorHandler_(void *a1, const char *a2, ...)
{
  return [a1 enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:];
}

id objc_msgSend_errorFileURLs(void *a1, const char *a2, ...)
{
  return _[a1 errorFileURLs];
}

id objc_msgSend_errorWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return [a1 errorWithDomain:code:userInfo:];
}

id objc_msgSend_eventReporter(void *a1, const char *a2, ...)
{
  return _[a1 eventReporter];
}

id objc_msgSend_existingObjectWithID_error_(void *a1, const char *a2, ...)
{
  return [a1 existingObjectWithID:error:];
}

id objc_msgSend_expandCollapseHitView(void *a1, const char *a2, ...)
{
  return _[a1 expandCollapseHitView];
}

id objc_msgSend_expandFolderListItem_atIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 expandFolderListItem:atIndexPath:];
}

id objc_msgSend_expandedFolderIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 expandedFolderIdentifiers];
}

id objc_msgSend_expansionAccessoryImageView(void *a1, const char *a2, ...)
{
  return _[a1 expansionAccessoryImageView];
}

id objc_msgSend_extensionContext(void *a1, const char *a2, ...)
{
  return _[a1 extensionContext];
}

id objc_msgSend_extractAttachmentsFromInputItems_note_(void *a1, const char *a2, ...)
{
  return [a1 extractAttachmentsFromInputItems:note:];
}

id objc_msgSend_extractDataWithProvider_forUTI_useTempFile_withCompletion_(void *a1, const char *a2, ...)
{
  return [a1 extractDataWithProvider:forUTI:useTempFile:withCompletion:];
}

id objc_msgSend_extractMediaFileURLWithProvider_contentType_completion_(void *a1, const char *a2, ...)
{
  return [a1 extractMediaFileURLWithProvider:contentType:completion:];
}

id objc_msgSend_extractURLWithProvider_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "extractURLWithProvider:withCompletion:");
}

id objc_msgSend_fileName(void *a1, const char *a2, ...)
{
  return _[a1 fileName];
}

id objc_msgSend_fileSystemRepresentation(void *a1, const char *a2, ...)
{
  return _[a1 fileSystemRepresentation];
}

id objc_msgSend_fileURLs(void *a1, const char *a2, ...)
{
  return _[a1 fileURLs];
}

id objc_msgSend_fileWrapper(void *a1, const char *a2, ...)
{
  return _[a1 fileWrapper];
}

id objc_msgSend_filename(void *a1, const char *a2, ...)
{
  return _[a1 filename];
}

id objc_msgSend_filenameFromUTI_(void *a1, const char *a2, ...)
{
  return [a1 filenameFromUTI:];
}

id objc_msgSend_fillOutTitleAndSummaryForAttachments_(void *a1, const char *a2, ...)
{
  return [a1 fillOutTitleAndSummaryForAttachments:];
}

id objc_msgSend_findSizeLayoutConstraintIfExists(void *a1, const char *a2, ...)
{
  return _[a1 findSizeLayoutConstraintIfExists];
}

id objc_msgSend_finishRemainingOperationsWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 finishRemainingOperationsWithCompletionHandler:];
}

id objc_msgSend_firstAttribute(void *a1, const char *a2, ...)
{
  return _[a1 firstAttribute];
}

id objc_msgSend_firstItem(void *a1, const char *a2, ...)
{
  return _[a1 firstItem];
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return _[a1 firstObject];
}

id objc_msgSend_fixupAfterEditing(void *a1, const char *a2, ...)
{
  return _[a1 fixupAfterEditing];
}

id objc_msgSend_flattenedChildItems(void *a1, const char *a2, ...)
{
  return _[a1 flattenedChildItems];
}

id objc_msgSend_folder(void *a1, const char *a2, ...)
{
  return _[a1 folder];
}

id objc_msgSend_folderIcon(void *a1, const char *a2, ...)
{
  return _[a1 folderIcon];
}

id objc_msgSend_folderIconSpacingZeroWidthConstraint(void *a1, const char *a2, ...)
{
  return _[a1 folderIconSpacingZeroWidthConstraint];
}

id objc_msgSend_folderIconView(void *a1, const char *a2, ...)
{
  return _[a1 folderIconView];
}

id objc_msgSend_folderIconZeroHeightConstraint(void *a1, const char *a2, ...)
{
  return _[a1 folderIconZeroHeightConstraint];
}

id objc_msgSend_folderIconZeroWidthConstraint(void *a1, const char *a2, ...)
{
  return _[a1 folderIconZeroWidthConstraint];
}

id objc_msgSend_folderLabel(void *a1, const char *a2, ...)
{
  return _[a1 folderLabel];
}

id objc_msgSend_folderLabelZeroHeightConstraint(void *a1, const char *a2, ...)
{
  return _[a1 folderLabelZeroHeightConstraint];
}

id objc_msgSend_folderLabelZeroWidthConstraint(void *a1, const char *a2, ...)
{
  return _[a1 folderLabelZeroWidthConstraint];
}

id objc_msgSend_folderListItem(void *a1, const char *a2, ...)
{
  return _[a1 folderListItem];
}

id objc_msgSend_folderListItemAccountType(void *a1, const char *a2, ...)
{
  return _[a1 folderListItemAccountType];
}

id objc_msgSend_folderListViewState(void *a1, const char *a2, ...)
{
  return _[a1 folderListViewState];
}

id objc_msgSend_folderPickerBackButtonTitle(void *a1, const char *a2, ...)
{
  return _[a1 folderPickerBackButtonTitle];
}

id objc_msgSend_folderPickerTitle(void *a1, const char *a2, ...)
{
  return _[a1 folderPickerTitle];
}

id objc_msgSend_folderTableViewItems(void *a1, const char *a2, ...)
{
  return _[a1 folderTableViewItems];
}

id objc_msgSend_folderTitleLabel(void *a1, const char *a2, ...)
{
  return _[a1 folderTitleLabel];
}

id objc_msgSend_font(void *a1, const char *a2, ...)
{
  return _[a1 font];
}

id objc_msgSend_frame(void *a1, const char *a2, ...)
{
  return _[a1 frame];
}

id objc_msgSend_frameOfPresentedViewInContainerView(void *a1, const char *a2, ...)
{
  return _[a1 frameOfPresentedViewInContainerView];
}

id objc_msgSend_frameOfPresentedViewInContainerView_withKeyboardFrame_topLayoutGuideLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "frameOfPresentedViewInContainerView:withKeyboardFrame:topLayoutGuideLength:");
}

id objc_msgSend_functionWithControlPoints__::(void *a1, const char *a2, ...)
{
  return [a1 functionWithControlPoints:];
}

id objc_msgSend_generateImagePreviewUsingAttachment_(void *a1, const char *a2, ...)
{
  return [a1 generateImagePreviewUsingAttachment:];
}

id objc_msgSend_generatePreviewWithAttachments_(void *a1, const char *a2, ...)
{
  return [a1 generatePreviewWithAttachments:];
}

id objc_msgSend_generatePreviewsInOperation_(void *a1, const char *a2, ...)
{
  return [a1 generatePreviewsInOperation:];
}

id objc_msgSend_generateVideoPreviewUsingAttachment_(void *a1, const char *a2, ...)
{
  return [a1 generateVideoPreviewUsingAttachment:];
}

id objc_msgSend_getAttachmentInfoWithImage_useTempFile_(void *a1, const char *a2, ...)
{
  return [a1 getAttachmentInfoWithImage:useTempFile:];
}

id objc_msgSend_getModernAccountFolderListType_(void *a1, const char *a2, ...)
{
  return [a1 getModernAccountFolderListType:];
}

id objc_msgSend_getResourceValue_forKey_error_(void *a1, const char *a2, ...)
{
  return [a1 getResourceValue:forKey:error:];
}

id objc_msgSend_getTypeIdentifierForFileURL_(void *a1, const char *a2, ...)
{
  return [a1 getTypeIdentifierForFileURL:];
}

id objc_msgSend_getURLWithoutQueryAndFragmentFromURL_(void *a1, const char *a2, ...)
{
  return [a1 getURLWithoutQueryAndFragmentFromURL:];
}

id objc_msgSend_handleFailedAssertWithCondition_functionName_simulateCrash_showAlert_format_(void *a1, const char *a2, ...)
{
  return [a1 handleFailedAssertWithCondition:functionName:simulateCrash:showAlert:format:];
}

id objc_msgSend_hasAnyCustomFoldersIncludingSystem_(void *a1, const char *a2, ...)
{
  return [a1 hasAnyCustomFoldersIncludingSystem:];
}

id objc_msgSend_hasItemConformingToTypeIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 hasItemConformingToTypeIdentifier:];
}

id objc_msgSend_hasMultipleAccounts(void *a1, const char *a2, ...)
{
  return _[a1 hasMultipleAccounts];
}

id objc_msgSend_hasSetUpSizeConstraint(void *a1, const char *a2, ...)
{
  return _[a1 hasSetUpSizeConstraint];
}

id objc_msgSend_hasSuffix_(void *a1, const char *a2, ...)
{
  return [a1 hasSuffix:];
}

id objc_msgSend_hash(void *a1, const char *a2, ...)
{
  return _[a1 hash];
}

id objc_msgSend_hashtagWithDisplayText_account_createIfNecessary_(void *a1, const char *a2, ...)
{
  return [a1 hashtagWithDisplayText:account:createIfNecessary:];
}

id objc_msgSend_hashtagWithStandardizedContent_onlyVisible_account_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hashtagWithStandardizedContent:onlyVisible:account:");
}

id objc_msgSend_headerItemWithAccount_(void *a1, const char *a2, ...)
{
  return [a1 headerItemWithAccount:];
}

id objc_msgSend_headerType(void *a1, const char *a2, ...)
{
  return _[a1 headerType];
}

id objc_msgSend_heightAnchor(void *a1, const char *a2, ...)
{
  return _[a1 heightAnchor];
}

id objc_msgSend_hideUI(void *a1, const char *a2, ...)
{
  return _[a1 hideUI];
}

id objc_msgSend_horizontalMargin(void *a1, const char *a2, ...)
{
  return _[a1 horizontalMargin];
}

id objc_msgSend_ic_JPEGData(void *a1, const char *a2, ...)
{
  return [a1 ic_JPEGData];
}

id objc_msgSend_ic_PNGData(void *a1, const char *a2, ...)
{
  return [a1 ic_PNGData];
}

id objc_msgSend_ic_accessibilityListAccessoryViewImage(void *a1, const char *a2, ...)
{
  return [a1 ic_accessibilityListAccessoryViewImage];
}

id objc_msgSend_ic_addNonNilObject_(void *a1, const char *a2, ...)
{
  return [a1 ic_addNonNilObject];
}

id objc_msgSend_ic_animateWithDuration_timingFunction_animations_(void *a1, const char *a2, ...)
{
  return [a1 ic_animateWithDuration:timingFunction:animations:];
}

id objc_msgSend_ic_applyRoundedCorners(void *a1, const char *a2, ...)
{
  return [a1 ic_applyRoundedCorners];
}

id objc_msgSend_ic_arrayByAddingObjectsFromNonNilArray_(void *a1, const char *a2, ...)
{
  return [a1 ic_arrayByAddingObjectsFromNonNilArray:];
}

id objc_msgSend_ic_becomeFirstResponder(void *a1, const char *a2, ...)
{
  return [a1 ic_becomeFirstResponder];
}

id objc_msgSend_ic_briefFormattedDate(void *a1, const char *a2, ...)
{
  return [a1 ic_briefFormattedDate];
}

id objc_msgSend_ic_briefFormattedDateForAccessibility(void *a1, const char *a2, ...)
{
  return [a1 ic_briefFormattedDateForAccessibility];
}

id objc_msgSend_ic_colorWith256Red_green_blue_unitAlpha_(void *a1, const char *a2, ...)
{
  return [a1 ic_colorWith256Red:green:blue:unitAlpha:];
}

id objc_msgSend_ic_cropRectZeroAlpha(void *a1, const char *a2, ...)
{
  return [a1 ic_cropRectZeroAlpha];
}

id objc_msgSend_ic_defaultListAccessoryViewImage(void *a1, const char *a2, ...)
{
  return [a1 ic_defaultListAccessoryViewImage];
}

id objc_msgSend_ic_enumerateAttachmentsInContext_usingBlock_(void *a1, const char *a2, ...)
{
  return [a1 ic_enumerateAttachmentsInContext:usingBlock:];
}

id objc_msgSend_ic_existingObjectWithID_context_(void *a1, const char *a2, ...)
{
  return [a1 ic_existingObjectWithID:context:];
}

id objc_msgSend_ic_filledTintedButtonConfiguration(void *a1, const char *a2, ...)
{
  return [a1 ic_filledTintedButtonConfiguration];
}

id objc_msgSend_ic_fontWithSingleLineA(void *a1, const char *a2, ...)
{
  return [a1 ic_fontWithSingleLineA];
}

id objc_msgSend_ic_imageFromRect_(void *a1, const char *a2, ...)
{
  return [a1 ic_imageFromRect:];
}

id objc_msgSend_ic_isFirstResponder(void *a1, const char *a2, ...)
{
  return [a1 ic_isFirstResponder];
}

id objc_msgSend_ic_isMainThreadContext(void *a1, const char *a2, ...)
{
  return [a1 ic_isMainThreadContext];
}

id objc_msgSend_ic_isUndoingOrRedoing(void *a1, const char *a2, ...)
{
  return [a1 ic_isUndoingOrRedoing];
}

id objc_msgSend_ic_isVision(void *a1, const char *a2, ...)
{
  return [a1 ic_isVision];
}

id objc_msgSend_ic_isiPad(void *a1, const char *a2, ...)
{
  return [a1 ic_isiPad];
}

id objc_msgSend_ic_keyCommandWithInput_modifierFlags_action_discoverabilityTitle_(void *a1, const char *a2, ...)
{
  return [a1 ic_keyCommandWithInput:modifierFlags:action:discoverabilityTitle:];
}

id objc_msgSend_ic_largeSystemImageNamed_(void *a1, const char *a2, ...)
{
  return [a1 ic_largeSystemImageNamed:];
}

id objc_msgSend_ic_loggingDescription(void *a1, const char *a2, ...)
{
  return [a1 ic_loggingDescription];
}

id objc_msgSend_ic_managedObjectIDForURIString_(void *a1, const char *a2, ...)
{
  return [a1 ic_managedObjectIDForURIString:];
}

id objc_msgSend_ic_objectsFromObjectIDs_context_(void *a1, const char *a2, ...)
{
  return [a1 ic_objectsFromObjectIDs:context:];
}

id objc_msgSend_ic_objectsPassingTest_(void *a1, const char *a2, ...)
{
  return [a1 ic_objectsPassingTest:];
}

id objc_msgSend_ic_permanentObjectID(void *a1, const char *a2, ...)
{
  return [a1 ic_permanentObjectID];
}

id objc_msgSend_ic_permanentObjectIDsFromObjects_(void *a1, const char *a2, ...)
{
  return [a1 ic_permanentObjectIDsFromObjects:];
}

id objc_msgSend_ic_postNotificationOnMainThreadAfterSaveWithName_(void *a1, const char *a2, ...)
{
  return [a1 ic_postNotificationOnMainThreadAfterSaveWithName:];
}

id objc_msgSend_ic_postNotificationOnMainThreadWithName_(void *a1, const char *a2, ...)
{
  return [a1 ic_postNotificationOnMainThreadWithName:];
}

id objc_msgSend_ic_presentationController(void *a1, const char *a2, ...)
{
  return [a1 ic_presentationController];
}

id objc_msgSend_ic_previewImage(void *a1, const char *a2, ...)
{
  return [a1 ic_previewImage];
}

id objc_msgSend_ic_quotedString(void *a1, const char *a2, ...)
{
  return [a1 ic_quotedString];
}

id objc_msgSend_ic_refreshObject_mergeChanges_(void *a1, const char *a2, ...)
{
  return [a1 ic_refreshObject:mergeChanges:];
}

id objc_msgSend_ic_safeAreaLayoutGuide(void *a1, const char *a2, ...)
{
  return [a1 ic_safeAreaLayoutGuide];
}

id objc_msgSend_ic_safeURLAssetWithURL_(void *a1, const char *a2, ...)
{
  return [a1 ic_safeURLAssetWithURL:];
}

id objc_msgSend_ic_save(void *a1, const char *a2, ...)
{
  return [a1 ic_save];
}

id objc_msgSend_ic_saveWithLogDescription_(void *a1, const char *a2, ...)
{
  return [a1 ic_saveWithLogDescription];
}

id objc_msgSend_ic_scaledImageMinDimension_scale_(void *a1, const char *a2, ...)
{
  return [a1 ic_scaledImageMinDimension:scale:];
}

id objc_msgSend_ic_searchResultType(void *a1, const char *a2, ...)
{
  return [a1 ic_searchResultType];
}

id objc_msgSend_ic_smallSystemImageNamed_(void *a1, const char *a2, ...)
{
  return [a1 ic_smallSystemImageNamed:];
}

id objc_msgSend_ic_systemImageNamed_(void *a1, const char *a2, ...)
{
  return [a1 ic_systemImageNamed:];
}

id objc_msgSend_ic_trimmedString(void *a1, const char *a2, ...)
{
  return [a1 ic_trimmedString];
}

id objc_msgSend_ic_truncatedStringWithMaxLength_truncated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ic_truncatedStringWithMaxLength:truncated:");
}

id objc_msgSend_iconView(void *a1, const char *a2, ...)
{
  return _[a1 iconView];
}

id objc_msgSend_iconViewBaselineConstraint(void *a1, const char *a2, ...)
{
  return _[a1 iconViewBaselineConstraint];
}

id objc_msgSend_iconViewCenterYConstraintForAXLargerTextSizes(void *a1, const char *a2, ...)
{
  return _[a1 iconViewCenterYConstraintForAXLargerTextSizes];
}

id objc_msgSend_iconViewContainerMinHeightConstraint(void *a1, const char *a2, ...)
{
  return _[a1 iconViewContainerMinHeightConstraint];
}

id objc_msgSend_iconViewLeadingConstraint(void *a1, const char *a2, ...)
{
  return _[a1 iconViewLeadingConstraint];
}

id objc_msgSend_idealFrameForMainViewControllerWithoutKeyboardForContainerView_topLayoutGuideHeight_(void *a1, const char *a2, ...)
{
  return [a1 idealFrameForMainViewControllerWithoutKeyboardForContainerView:topLayoutGuideHeight:];
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return _[a1 identifier];
}

id objc_msgSend_image(void *a1, const char *a2, ...)
{
  return _[a1 image];
}

id objc_msgSend_imageCollapsibleZeroWidthConstraint(void *a1, const char *a2, ...)
{
  return _[a1 imageCollapsibleZeroWidthConstraint];
}

id objc_msgSend_imageFlippedForRightToLeftLayoutDirection(void *a1, const char *a2, ...)
{
  return _[a1 imageFlippedForRightToLeftLayoutDirection];
}

id objc_msgSend_imageView(void *a1, const char *a2, ...)
{
  return _[a1 imageView];
}

id objc_msgSend_imageViews(void *a1, const char *a2, ...)
{
  return _[a1 imageViews];
}

id objc_msgSend_imagesView(void *a1, const char *a2, ...)
{
  return _[a1 imagesView];
}

id objc_msgSend_importCompletedForNoteProcessor_destinationFolder_(void *a1, const char *a2, ...)
{
  return [a1 importCompletedForNoteProcessor:destinationFolder:];
}

id objc_msgSend_importDocumentsURL(void *a1, const char *a2, ...)
{
  return _[a1 importDocumentsURL];
}

id objc_msgSend_importNoteFileParsers(void *a1, const char *a2, ...)
{
  return _[a1 importNoteFileParsers];
}

id objc_msgSend_importNoteProcessor(void *a1, const char *a2, ...)
{
  return _[a1 importNoteProcessor];
}

id objc_msgSend_importNotes(void *a1, const char *a2, ...)
{
  return _[a1 importNotes];
}

id objc_msgSend_importRootViewController(void *a1, const char *a2, ...)
{
  return _[a1 importRootViewController];
}

id objc_msgSend_importStartedForNoteProcessor_(void *a1, const char *a2, ...)
{
  return [a1 importStartedForNoteProcessor:];
}

id objc_msgSend_importedFromLegacy(void *a1, const char *a2, ...)
{
  return _[a1 importedFromLegacy];
}

id objc_msgSend_importedTypeWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 importedTypeWithIdentifier:];
}

id objc_msgSend_indexOfObject_(void *a1, const char *a2, ...)
{
  return [a1 indexOfObject:];
}

id objc_msgSend_indexPathForCell_(void *a1, const char *a2, ...)
{
  return [a1 indexPathForCell:];
}

id objc_msgSend_indexPathForRow_inSection_(void *a1, const char *a2, ...)
{
  return [a1 indexPathForRow:inSection:];
}

id objc_msgSend_indexesOfObjectsPassingTest_(void *a1, const char *a2, ...)
{
  return [a1 indexesOfObjectsPassingTest:];
}

id objc_msgSend_inhibitSearchCancelAnimation(void *a1, const char *a2, ...)
{
  return _[a1 inhibitSearchCancelAnimation];
}

id objc_msgSend_initWithActivityIndicatorStyle_(void *a1, const char *a2, ...)
{
  return [a1 initWithActivityIndicatorStyle:];
}

id objc_msgSend_initWithArray_(void *a1, const char *a2, ...)
{
  return [a1 initWithArray:];
}

id objc_msgSend_initWithBarButtonSystemItem_menu_(void *a1, const char *a2, ...)
{
  return [a1 initWithBarButtonSystemItem:menu:];
}

id objc_msgSend_initWithCapacity_(void *a1, const char *a2, ...)
{
  return [a1 initWithCapacity:];
}

id objc_msgSend_initWithCustomView_(void *a1, const char *a2, ...)
{
  return [a1 initWithCustomView:];
}

id objc_msgSend_initWithData_encoding_(void *a1, const char *a2, ...)
{
  return [a1 initWithData:encoding:];
}

id objc_msgSend_initWithData_scale_(void *a1, const char *a2, ...)
{
  return [a1 initWithData:scale:];
}

id objc_msgSend_initWithDelegate_(void *a1, const char *a2, ...)
{
  return [a1 initWithDelegate:];
}

id objc_msgSend_initWithFileURL_(void *a1, const char *a2, ...)
{
  return [a1 initWithFileURL:];
}

id objc_msgSend_initWithFolder_toParentObject_isCopy_(void *a1, const char *a2, ...)
{
  return [a1 initWithFolder:toParentObject:isCopy:];
}

id objc_msgSend_initWithFrame_(void *a1, const char *a2, ...)
{
  return [a1 initWithFrame:];
}

id objc_msgSend_initWithFrame_showMovieDuration_(void *a1, const char *a2, ...)
{
  return [a1 initWithFrame:showMovieDuration:];
}

id objc_msgSend_initWithImage_(void *a1, const char *a2, ...)
{
  return [a1 initWithImage:];
}

id objc_msgSend_initWithName_target_selector_(void *a1, const char *a2, ...)
{
  return [a1 initWithName:target:selector:];
}

id objc_msgSend_initWithNote_toFolder_isCopy_(void *a1, const char *a2, ...)
{
  return [a1 initWithNote:toFolder:isCopy:];
}

id objc_msgSend_initWithObject_fromParentObject_toParentObject_isCopy_(void *a1, const char *a2, ...)
{
  return [a1 initWithObject:fromParentObject:toParentObject:isCopy:];
}

id objc_msgSend_initWithObjects_(void *a1, const char *a2, ...)
{
  return [a1 initWithObjects:];
}

id objc_msgSend_initWithPresentedViewController_presentingViewController_(void *a1, const char *a2, ...)
{
  return [a1 initWithPresentedViewController:presentingViewController:];
}

id objc_msgSend_initWithRootViewController_(void *a1, const char *a2, ...)
{
  return [a1 initWithRootViewController:];
}

id objc_msgSend_initWithScreenScale_(void *a1, const char *a2, ...)
{
  return [a1 initWithScreenScale:];
}

id objc_msgSend_initWithSearchSuggestionsResponder_searchString_performNLSearch_performTopHitSearch_tokens_modernResultsOnly_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSearchSuggestionsResponder:searchString:performNLSearch:performTopHitSearch:tokens:modernResultsOnly:");
}

id objc_msgSend_initWithString_(void *a1, const char *a2, ...)
{
  return [a1 initWithString:];
}

id objc_msgSend_initWithString_attributes_(void *a1, const char *a2, ...)
{
  return [a1 initWithString:attributes:];
}

id objc_msgSend_initWithStyle_reuseIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 initWithStyle:reuseIdentifier:];
}

id objc_msgSend_initWithSubTrackerName_(void *a1, const char *a2, ...)
{
  return [a1 initWithSubTrackerName:];
}

id objc_msgSend_initWithTarget_action_(void *a1, const char *a2, ...)
{
  return [a1 initWithTarget:action:];
}

id objc_msgSend_initWithType_(void *a1, const char *a2, ...)
{
  return [a1 initWithType:];
}

id objc_msgSend_initWithURL_options_documentAttributes_error_(void *a1, const char *a2, ...)
{
  return [a1 initWithURL:options:documentAttributes:error:];
}

id objc_msgSend_initWithURL_resolvingAgainstBaseURL_(void *a1, const char *a2, ...)
{
  return [a1 initWithURL:resolvingAgainstBaseURL:];
}

id objc_msgSend_initWithViewState_(void *a1, const char *a2, ...)
{
  return [a1 initWithViewState:];
}

id objc_msgSend_initWithWithImage_videoDuration_(void *a1, const char *a2, ...)
{
  return [a1 initWithWithImage:videoDuration:];
}

id objc_msgSend_inlineAttachments(void *a1, const char *a2, ...)
{
  return _[a1 inlineAttachments];
}

id objc_msgSend_inputItems(void *a1, const char *a2, ...)
{
  return _[a1 inputItems];
}

id objc_msgSend_insertAttributedString_atIndex_(void *a1, const char *a2, ...)
{
  return [a1 insertAttributedString:atIndex:];
}

id objc_msgSend_insertObject_atIndex_(void *a1, const char *a2, ...)
{
  return [a1 insertObject:atIndex:];
}

id objc_msgSend_insertRowsAtIndexPaths_withRowAnimation_(void *a1, const char *a2, ...)
{
  return [a1 insertRowsAtIndexPaths:withRowAnimation:];
}

id objc_msgSend_installBrickForAttachmentInfo_(void *a1, const char *a2, ...)
{
  return [a1 installBrickForAttachmentInfo:];
}

id objc_msgSend_installImagesViewForAttachments_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "installImagesViewForAttachments:");
}

id objc_msgSend_instantiateInitialViewController(void *a1, const char *a2, ...)
{
  return _[a1 instantiateInitialViewController];
}

id objc_msgSend_instantiateViewControllerWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 instantiateViewControllerWithIdentifier:];
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return _[a1 integerValue];
}

id objc_msgSend_isAccount(void *a1, const char *a2, ...)
{
  return _[a1 isAccount];
}

id objc_msgSend_isAccountFolder(void *a1, const char *a2, ...)
{
  return _[a1 isAccountFolder];
}

id objc_msgSend_isAccountHeader(void *a1, const char *a2, ...)
{
  return _[a1 isAccountHeader];
}

id objc_msgSend_isAccountPicker(void *a1, const char *a2, ...)
{
  return _[a1 isAccountPicker];
}

id objc_msgSend_isAccountPickerController(void *a1, const char *a2, ...)
{
  return _[a1 isAccountPickerController];
}

id objc_msgSend_isAppStore(void *a1, const char *a2, ...)
{
  return _[a1 isAppStore];
}

id objc_msgSend_isAuthenticated(void *a1, const char *a2, ...)
{
  return _[a1 isAuthenticated];
}

id objc_msgSend_isAutoResizing(void *a1, const char *a2, ...)
{
  return _[a1 isAutoResizing];
}

id objc_msgSend_isCancelled(void *a1, const char *a2, ...)
{
  return _[a1 isCancelled];
}

id objc_msgSend_isChecked(void *a1, const char *a2, ...)
{
  return _[a1 isChecked];
}

id objc_msgSend_isCollapsed(void *a1, const char *a2, ...)
{
  return _[a1 isCollapsed];
}

id objc_msgSend_isCollapsible(void *a1, const char *a2, ...)
{
  return _[a1 isCollapsible];
}

id objc_msgSend_isCopy(void *a1, const char *a2, ...)
{
  return _[a1 isCopy];
}

id objc_msgSend_isDefaultFolderForAccount(void *a1, const char *a2, ...)
{
  return _[a1 isDefaultFolderForAccount];
}

id objc_msgSend_isDeletable(void *a1, const char *a2, ...)
{
  return _[a1 isDeletable];
}

id objc_msgSend_isDeleted(void *a1, const char *a2, ...)
{
  return _[a1 isDeleted];
}

id objc_msgSend_isDeletedOrInTrash(void *a1, const char *a2, ...)
{
  return _[a1 isDeletedOrInTrash];
}

id objc_msgSend_isDirectory(void *a1, const char *a2, ...)
{
  return _[a1 isDirectory];
}

id objc_msgSend_isDuplicatable(void *a1, const char *a2, ...)
{
  return _[a1 isDuplicatable];
}

id objc_msgSend_isEditable(void *a1, const char *a2, ...)
{
  return _[a1 isEditable];
}

id objc_msgSend_isEmpty(void *a1, const char *a2, ...)
{
  return _[a1 isEmpty];
}

id objc_msgSend_isEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isEnabled];
}

id objc_msgSend_isEqual_(void *a1, const char *a2, ...)
{
  return [a1 isEqual:];
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToString:];
}

id objc_msgSend_isFileURL(void *a1, const char *a2, ...)
{
  return _[a1 isFileURL];
}

id objc_msgSend_isFirstResponder(void *a1, const char *a2, ...)
{
  return _[a1 isFirstResponder];
}

id objc_msgSend_isFolderPickerController(void *a1, const char *a2, ...)
{
  return _[a1 isFolderPickerController];
}

id objc_msgSend_isHashtagAttachment(void *a1, const char *a2, ...)
{
  return _[a1 isHashtagAttachment];
}

id objc_msgSend_isHeader(void *a1, const char *a2, ...)
{
  return _[a1 isHeader];
}

id objc_msgSend_isInFolderList(void *a1, const char *a2, ...)
{
  return _[a1 isInFolderList];
}

id objc_msgSend_isLandscape(void *a1, const char *a2, ...)
{
  return _[a1 isLandscape];
}

id objc_msgSend_isManaged(void *a1, const char *a2, ...)
{
  return _[a1 isManaged];
}

id objc_msgSend_isMap(void *a1, const char *a2, ...)
{
  return _[a1 isMap];
}

id objc_msgSend_isNews(void *a1, const char *a2, ...)
{
  return _[a1 isNews];
}

id objc_msgSend_isNonEmpty(void *a1, const char *a2, ...)
{
  return _[a1 isNonEmpty];
}

id objc_msgSend_isNotePickerController(void *a1, const char *a2, ...)
{
  return _[a1 isNotePickerController];
}

id objc_msgSend_isOptedInForAnalytics(void *a1, const char *a2, ...)
{
  return _[a1 isOptedInForAnalytics];
}

id objc_msgSend_isOwnedByCurrentUser(void *a1, const char *a2, ...)
{
  return _[a1 isOwnedByCurrentUser];
}

id objc_msgSend_isParsing(void *a1, const char *a2, ...)
{
  return _[a1 isParsing];
}

id objc_msgSend_isPasswordProtected(void *a1, const char *a2, ...)
{
  return _[a1 isPasswordProtected];
}

id objc_msgSend_isPinned(void *a1, const char *a2, ...)
{
  return _[a1 isPinned];
}

id objc_msgSend_isPodcasts(void *a1, const char *a2, ...)
{
  return _[a1 isPodcasts];
}

id objc_msgSend_isPortrait(void *a1, const char *a2, ...)
{
  return _[a1 isPortrait];
}

id objc_msgSend_isRegularFile(void *a1, const char *a2, ...)
{
  return _[a1 isRegularFile];
}

id objc_msgSend_isRootController(void *a1, const char *a2, ...)
{
  return _[a1 isRootController];
}

id objc_msgSend_isSaving(void *a1, const char *a2, ...)
{
  return _[a1 isSaving];
}

id objc_msgSend_isSearchResult(void *a1, const char *a2, ...)
{
  return _[a1 isSearchResult];
}

id objc_msgSend_isSelectable(void *a1, const char *a2, ...)
{
  return _[a1 isSelectable];
}

id objc_msgSend_isSharedRootObject(void *a1, const char *a2, ...)
{
  return _[a1 isSharedRootObject];
}

id objc_msgSend_isSharedViaICloud(void *a1, const char *a2, ...)
{
  return _[a1 isSharedViaICloud];
}

id objc_msgSend_isSharedViaICloudFolder(void *a1, const char *a2, ...)
{
  return _[a1 isSharedViaICloudFolder];
}

id objc_msgSend_isShowingPlaceholderText(void *a1, const char *a2, ...)
{
  return _[a1 isShowingPlaceholderText];
}

id objc_msgSend_isShowingSearchResults(void *a1, const char *a2, ...)
{
  return _[a1 isShowingSearchResults];
}

id objc_msgSend_isShowingTableContainer(void *a1, const char *a2, ...)
{
  return _[a1 isShowingTableContainer];
}

id objc_msgSend_isSmartFolder(void *a1, const char *a2, ...)
{
  return _[a1 isSmartFolder];
}

id objc_msgSend_isSystemFolder(void *a1, const char *a2, ...)
{
  return _[a1 isSystemFolder];
}

id objc_msgSend_isSystemPaper(void *a1, const char *a2, ...)
{
  return _[a1 isSystemPaper];
}

id objc_msgSend_isSystemPaperFolder(void *a1, const char *a2, ...)
{
  return _[a1 isSystemPaperFolder];
}

id objc_msgSend_isTrashFolder(void *a1, const char *a2, ...)
{
  return _[a1 isTrashFolder];
}

id objc_msgSend_isURL(void *a1, const char *a2, ...)
{
  return _[a1 isURL];
}

id objc_msgSend_isUndoing(void *a1, const char *a2, ...)
{
  return _[a1 isUndoing];
}

id objc_msgSend_isVideoPreview(void *a1, const char *a2, ...)
{
  return _[a1 isVideoPreview];
}

id objc_msgSend_isVisible(void *a1, const char *a2, ...)
{
  return _[a1 isVisible];
}

id objc_msgSend_isiTunes(void *a1, const char *a2, ...)
{
  return _[a1 isiTunes];
}

id objc_msgSend_item(void *a1, const char *a2, ...)
{
  return _[a1 item];
}

id objc_msgSend_itemAtIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 itemAtIndexPath:];
}

id objc_msgSend_itemForIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 itemForIndexPath:];
}

id objc_msgSend_itemsForSection_(void *a1, const char *a2, ...)
{
  return [a1 itemsForSection:];
}

id objc_msgSend_keyCommandWithInput_modifierFlags_action_(void *a1, const char *a2, ...)
{
  return [a1 keyCommandWithInput:modifierFlags:action:];
}

id objc_msgSend_keyboardFrame(void *a1, const char *a2, ...)
{
  return _[a1 keyboardFrame];
}

id objc_msgSend_keyboardMargin(void *a1, const char *a2, ...)
{
  return _[a1 keyboardMargin];
}

id objc_msgSend_labelColor(void *a1, const char *a2, ...)
{
  return _[a1 labelColor];
}

id objc_msgSend_largerTextSizeConstraints(void *a1, const char *a2, ...)
{
  return _[a1 largerTextSizeConstraints];
}

id objc_msgSend_lastAccessibilityAnnouncementDate(void *a1, const char *a2, ...)
{
  return _[a1 lastAccessibilityAnnouncementDate];
}

id objc_msgSend_lastNoteSavedTo(void *a1, const char *a2, ...)
{
  return _[a1 lastNoteSavedTo];
}

id objc_msgSend_lastPathComponent(void *a1, const char *a2, ...)
{
  return _[a1 lastPathComponent];
}

id objc_msgSend_layoutFrame(void *a1, const char *a2, ...)
{
  return _[a1 layoutFrame];
}

id objc_msgSend_layoutIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 layoutIfNeeded];
}

id objc_msgSend_layoutMargins(void *a1, const char *a2, ...)
{
  return _[a1 layoutMargins];
}

id objc_msgSend_layoutMarginsGuide(void *a1, const char *a2, ...)
{
  return _[a1 layoutMarginsGuide];
}

id objc_msgSend_layoutType(void *a1, const char *a2, ...)
{
  return _[a1 layoutType];
}

id objc_msgSend_leadingAnchor(void *a1, const char *a2, ...)
{
  return _[a1 leadingAnchor];
}

id objc_msgSend_legacyContentHashAtImport(void *a1, const char *a2, ...)
{
  return _[a1 legacyContentHashAtImport];
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _[a1 length];
}

id objc_msgSend_level(void *a1, const char *a2, ...)
{
  return _[a1 level];
}

id objc_msgSend_linkItemAtURL_toURL_error_(void *a1, const char *a2, ...)
{
  return [a1 linkItemAtURL:toURL:error:];
}

id objc_msgSend_loadAccountsAndAttachments(void *a1, const char *a2, ...)
{
  return _[a1 loadAccountsAndAttachments];
}

id objc_msgSend_loadFileRepresentationForContentType_openInPlace_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 loadFileRepresentationForContentType:openInPlace:completionHandler:];
}

id objc_msgSend_loadItemForTypeIdentifier_options_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 loadItemForTypeIdentifier:options:completionHandler:];
}

id objc_msgSend_loadNibNamed_owner_options_(void *a1, const char *a2, ...)
{
  return [a1 loadNibNamed:owner:options:];
}

id objc_msgSend_localizedCaseInsensitiveContainsString_(void *a1, const char *a2, ...)
{
  return [a1 localizedCaseInsensitiveContainsString:];
}

id objc_msgSend_localizedDescription(void *a1, const char *a2, ...)
{
  return _[a1 localizedDescription];
}

id objc_msgSend_localizedName(void *a1, const char *a2, ...)
{
  return _[a1 localizedName];
}

id objc_msgSend_localizedStringForKey_value_table_(void *a1, const char *a2, ...)
{
  return [a1 localizedStringForKey:value:table:];
}

id objc_msgSend_localizedStringWithFormat_(void *a1, const char *a2, ...)
{
  return [a1 localizedStringWithFormat:];
}

id objc_msgSend_localizedTitle(void *a1, const char *a2, ...)
{
  return _[a1 localizedTitle];
}

id objc_msgSend_localizedUppercaseString(void *a1, const char *a2, ...)
{
  return _[a1 localizedUppercaseString];
}

id objc_msgSend_mainBundle(void *a1, const char *a2, ...)
{
  return _[a1 mainBundle];
}

id objc_msgSend_mainContainerView(void *a1, const char *a2, ...)
{
  return _[a1 mainContainerView];
}

id objc_msgSend_mainScreen(void *a1, const char *a2, ...)
{
  return _[a1 mainScreen];
}

id objc_msgSend_mainViewController(void *a1, const char *a2, ...)
{
  return _[a1 mainViewController];
}

id objc_msgSend_makeObjectsPerformSelector_(void *a1, const char *a2, ...)
{
  return [a1 makeObjectsPerformSelector:];
}

id objc_msgSend_managedObjectContext(void *a1, const char *a2, ...)
{
  return _[a1 managedObjectContext];
}

id objc_msgSend_markAsCallNoteIfNeeded_(void *a1, const char *a2, ...)
{
  return [a1 markAsCallNoteIfNeeded:];
}

id objc_msgSend_markAsMathNoteIfNeeded_(void *a1, const char *a2, ...)
{
  return [a1 markAsMathNoteIfNeeded:];
}

id objc_msgSend_markAsSystemPaperIfNeeded_(void *a1, const char *a2, ...)
{
  return [a1 markAsSystemPaperIfNeeded:];
}

id objc_msgSend_markForDeletion(void *a1, const char *a2, ...)
{
  return _[a1 markForDeletion];
}

id objc_msgSend_markNoteAndAttachmentsForDeletion_(void *a1, const char *a2, ...)
{
  return [a1 markNoteAndAttachmentsForDeletion:];
}

id objc_msgSend_markShareDirtyIfNeededWithReason_(void *a1, const char *a2, ...)
{
  return [a1 markShareDirtyIfNeededWithReason:];
}

id objc_msgSend_markedForDeletion(void *a1, const char *a2, ...)
{
  return _[a1 markedForDeletion];
}

id objc_msgSend_matchingFoldersForString_(void *a1, const char *a2, ...)
{
  return [a1 matchingFoldersForString:];
}

id objc_msgSend_maxAttachmentsPerNote(void *a1, const char *a2, ...)
{
  return _[a1 maxAttachmentsPerNote];
}

id objc_msgSend_maxNoteAttachments(void *a1, const char *a2, ...)
{
  return _[a1 maxNoteAttachments];
}

id objc_msgSend_maxNoteTextLength(void *a1, const char *a2, ...)
{
  return _[a1 maxNoteTextLength];
}

id objc_msgSend_maxSize(void *a1, const char *a2, ...)
{
  return _[a1 maxSize];
}

id objc_msgSend_maximumAttachmentSizeMB(void *a1, const char *a2, ...)
{
  return _[a1 maximumAttachmentSizeMB];
}

id objc_msgSend_md5Hash(void *a1, const char *a2, ...)
{
  return _[a1 md5Hash];
}

id objc_msgSend_media(void *a1, const char *a2, ...)
{
  return _[a1 media];
}

id objc_msgSend_mediaData(void *a1, const char *a2, ...)
{
  return _[a1 mediaData];
}

id objc_msgSend_mediaURL(void *a1, const char *a2, ...)
{
  return _[a1 mediaURL];
}

id objc_msgSend_mediaUTI(void *a1, const char *a2, ...)
{
  return _[a1 mediaUTI];
}

id objc_msgSend_mediaUTIs(void *a1, const char *a2, ...)
{
  return _[a1 mediaUTIs];
}

id objc_msgSend_metadata(void *a1, const char *a2, ...)
{
  return _[a1 metadata];
}

id objc_msgSend_mime(void *a1, const char *a2, ...)
{
  return _[a1 mime];
}

id objc_msgSend_modificationDate(void *a1, const char *a2, ...)
{
  return _[a1 modificationDate];
}

id objc_msgSend_moveObject_toIndex_(void *a1, const char *a2, ...)
{
  return [a1 moveObject:toIndex:];
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return _[a1 mutableCopy];
}

id objc_msgSend_navigationBar(void *a1, const char *a2, ...)
{
  return _[a1 navigationBar];
}

id objc_msgSend_navigationController(void *a1, const char *a2, ...)
{
  return _[a1 navigationController];
}

id objc_msgSend_navigationItem(void *a1, const char *a2, ...)
{
  return _[a1 navigationItem];
}

id objc_msgSend_needToGeneratePreviews(void *a1, const char *a2, ...)
{
  return _[a1 needToGeneratePreviews];
}

id objc_msgSend_newEmptyNoteInFolder_(void *a1, const char *a2, ...)
{
  return [a1 newEmptyNoteInFolder:];
}

id objc_msgSend_newFolderInAccount_(void *a1, const char *a2, ...)
{
  return [a1 newFolderInAccount:];
}

id objc_msgSend_newFolderInParentFolder_(void *a1, const char *a2, ...)
{
  return [a1 newFolderInParentFolder:];
}

id objc_msgSend_newFolderWithTitle_parentFolder_forAccount_(void *a1, const char *a2, ...)
{
  return [a1 newFolderWithTitle:parentFolder:forAccount:];
}

id objc_msgSend_newNoteTitleView(void *a1, const char *a2, ...)
{
  return _[a1 newNoteTitleView];
}

id objc_msgSend_newNoteWithString_inFolder_error_(void *a1, const char *a2, ...)
{
  return [a1 newNoteWithString:inFolder:error:];
}

id objc_msgSend_newOperationQueueWithName_(void *a1, const char *a2, ...)
{
  return [a1 newOperationQueueWithName:];
}

id objc_msgSend_nibWithNibName_bundle_(void *a1, const char *a2, ...)
{
  return [a1 nibWithNibName:nil bundle:nil];
}

id objc_msgSend_nonPinnedNoteItems(void *a1, const char *a2, ...)
{
  return _[a1 nonPinnedNoteItems];
}

id objc_msgSend_note(void *a1, const char *a2, ...)
{
  return _[a1 note];
}

id objc_msgSend_noteContainer(void *a1, const char *a2, ...)
{
  return _[a1 noteContainer];
}

id objc_msgSend_noteContainerAccount(void *a1, const char *a2, ...)
{
  return _[a1 noteContainerAccount];
}

id objc_msgSend_noteItemsForContainer_hideNonSystemPaperNotes_(void *a1, const char *a2, ...)
{
  return [a1 noteItemsForContainer:hideNonSystemPaperNotes:];
}

id objc_msgSend_noteLabel(void *a1, const char *a2, ...)
{
  return _[a1 noteLabel];
}

id objc_msgSend_noteSortTypeDefaultAscending(void *a1, const char *a2, ...)
{
  return _[a1 noteSortTypeDefaultAscending];
}

id objc_msgSend_noteTitleLabel(void *a1, const char *a2, ...)
{
  return _[a1 noteTitleLabel];
}

id objc_msgSend_noteWithIdentifier_context_(void *a1, const char *a2, ...)
{
  return [a1 noteWithIdentifier:context:];
}

id objc_msgSend_notes(void *a1, const char *a2, ...)
{
  return _[a1 notes];
}

id objc_msgSend_notesForCopying(void *a1, const char *a2, ...)
{
  return _[a1 notesForCopying];
}

id objc_msgSend_notesImporterClient(void *a1, const char *a2, ...)
{
  return _[a1 notesImporterClient];
}

id objc_msgSend_notifyAttachmentsNoteWillMoveToRecentlyDeletedFolder(void *a1, const char *a2, ...)
{
  return _[a1 notifyAttachmentsNoteWillMoveToRecentlyDeletedFolder];
}