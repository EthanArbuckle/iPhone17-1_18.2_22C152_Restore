uint64_t VisibleNotesQuery.Comparator.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  uint64_t v21;
  Swift::String v22;
  uint64_t v23;
  uint64_t v24;
  Swift::String v25;
  Swift::String v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Swift::String v32;
  Swift::String v33;
  Swift::String v34;
  Swift::String v35;
  unint64_t v36;
  unint64_t v37;
  Swift::String v38;
  Swift::String v39;
  Swift::String v40;
  Swift::String v41;
  Swift::String v42;
  uint64_t v43;
  Swift::String v44;
  Swift::String v45;
  Swift::String v46;
  Swift::String v47;
  Swift::String v48;
  void *v50;
  Swift::String v51;
  Swift::String v52;
  uint64_t v53;
  uint64_t v54;
  _OWORD v55[2];
  long long v56;
  _OWORD v57[2];
  _OWORD v58[2];
  void v59[6];

  v1 = v0;
  v2 = type metadata accessor for ICQueryType();
  v54 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FolderEntity();
  v53 = *(void *)(v5 - 8);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v53 - v9;
  v11 = sub_10002F214(&qword_10069B260);
  v12 = __chkstk_darwin(v11 - 8);
  v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v53 - v15;
  v17 = type metadata accessor for VisibleNotesQuery.Comparator(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10023FD38(v1, (uint64_t)v19, type metadata accessor for VisibleNotesQuery.Comparator);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      v43 = v54;
      (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v4, v19, v2);
      v59[0] = 0;
      v59[1] = 0xE000000000000000;
      v44._countAndFlagsBits = 0x2879726575516369;
      v44._object = (void *)0xE800000000000000;
      String.append(_:)(v44);
      _print_unlocked<A, B>(_:_:)();
      v45._countAndFlagsBits = 41;
      v45._object = (void *)0xE100000000000000;
      String.append(_:)(v45);
      v27 = v59[0];
      (*(void (**)(char *, uint64_t))(v43 + 8))(v4, v2);
      return v27;
    case 2u:
      v59[0] = 0;
      v59[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(23);
      swift_bridgeObjectRelease();
      v59[0] = 0xD000000000000014;
      v59[1] = 0x8000000100554BD0;
      sub_100031418(0, (unint64_t *)&qword_10069E810);
      v22._countAndFlagsBits = Array.description.getter();
      String.append(_:)(v22);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 3u:
      v23 = *(void *)v19;
      v24 = *((void *)v19 + 1);
      strcpy((char *)v59, "textSearch(");
      HIDWORD(v59[1]) = -352321536;
      *(void *)&v58[0] = v23;
      *((void *)&v58[0] + 1) = v24;
      v25._countAndFlagsBits = String.init<A>(reflecting:)();
      String.append(_:)(v25);
LABEL_6:
      swift_bridgeObjectRelease();
      v26._countAndFlagsBits = 41;
      v26._object = (void *)0xE100000000000000;
      String.append(_:)(v26);
      return v59[0];
    case 4u:
      v28 = *(void *)v19;
      v29 = *((void *)v19 + 1);
      v30 = *((void *)v19 + 2);
      v31 = *((void *)v19 + 3);
      v59[0] = 0;
      v59[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(16);
      v32._countAndFlagsBits = 0x736E6961746E6F63;
      v32._object = (void *)0xE900000000000028;
      String.append(_:)(v32);
      *(void *)&v58[0] = v28;
      *((void *)&v58[0] + 1) = v29;
      sub_10002F214(&qword_10069FDA8);
      _print_unlocked<A, B>(_:_:)();
      v33._countAndFlagsBits = 8236;
      v33._object = (void *)0xE200000000000000;
      String.append(_:)(v33);
      *(void *)&v58[0] = v30;
      *((void *)&v58[0] + 1) = v31;
      v34._countAndFlagsBits = String.init<A>(reflecting:)();
      String.append(_:)(v34);
      swift_bridgeObjectRelease();
      v35._countAndFlagsBits = 41;
      v35._object = (void *)0xE100000000000000;
      String.append(_:)(v35);
      v27 = v59[0];
      swift_release();
      swift_release();
      return v27;
    case 5u:
      sub_10016EFCC((long long *)v19, (uint64_t)v59);
      sub_100032E84(v19 + 40, v58);
      *(void *)&v55[0] = 0;
      *((void *)&v55[0] + 1) = 0xE000000000000000;
      v36 = 0x286F546C61757165;
      v37 = 0xE800000000000000;
      goto LABEL_16;
    case 6u:
      sub_10016EFCC((long long *)v19, (uint64_t)v59);
      sub_100032E84(v19 + 40, v58);
      *(void *)&v57[0] = 0;
      *((void *)&v57[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(18);
      v55[0] = v57[0];
      v37 = 0xEB00000000286F54;
      v36 = 0x6C61757145746F6ELL;
      goto LABEL_16;
    case 7u:
      sub_10016EFCC((long long *)v19, (uint64_t)v59);
      sub_100032E84(v19 + 40, v58);
      *(void *)&v57[0] = 0;
      *((void *)&v57[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(16);
      v55[0] = v57[0];
      v36 = 0x6E6168547373656CLL;
      v37 = 0xE900000000000028;
      goto LABEL_16;
    case 8u:
      sub_10016EFCC((long long *)v19, (uint64_t)v59);
      sub_100032E84(v19 + 40, v58);
      *(void *)&v57[0] = 0;
      *((void *)&v57[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(25);
      v55[0] = v57[0];
      v37 = 0x8000000100554BB0;
      v36 = 0xD000000000000012;
      goto LABEL_16;
    case 9u:
      sub_10016EFCC((long long *)v19, (uint64_t)v59);
      sub_100032E84(v19 + 40, v58);
      *(void *)&v57[0] = 0;
      *((void *)&v57[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(19);
      v55[0] = v57[0];
      v36 = 0x5472657461657267;
      v37 = 0xEC000000286E6168;
      goto LABEL_16;
    case 0xAu:
      sub_10016EFCC((long long *)v19, (uint64_t)v59);
      sub_100032E84(v19 + 40, v58);
      *(void *)&v57[0] = 0;
      *((void *)&v57[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(28);
      v55[0] = v57[0];
      v36 = 0xD000000000000015;
      v37 = 0x8000000100554B90;
LABEL_16:
      String.append(_:)(*(Swift::String *)&v36);
      sub_10002F214(&qword_10069FDA0);
      _print_unlocked<A, B>(_:_:)();
      v46._countAndFlagsBits = 8236;
      v46._object = (void *)0xE200000000000000;
      String.append(_:)(v46);
      sub_100032E28((uint64_t)v58, (uint64_t)v57);
      v47._countAndFlagsBits = String.init<A>(reflecting:)();
      String.append(_:)(v47);
      swift_bridgeObjectRelease();
      v48._countAndFlagsBits = 41;
      v48._object = (void *)0xE100000000000000;
      String.append(_:)(v48);
      v27 = *(void *)&v55[0];
      goto LABEL_17;
    case 0xBu:
      sub_10016EFCC((long long *)v19, (uint64_t)v59);
      sub_100032E84(v19 + 40, v58);
      sub_100032E84(v19 + 72, v57);
      *(void *)&v55[0] = 0;
      *((void *)&v55[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(18);
      v56 = v55[0];
      v38._countAndFlagsBits = 0x286E656577746562;
      v38._object = (void *)0xE800000000000000;
      String.append(_:)(v38);
      sub_10002F214(&qword_10069FDA0);
      _print_unlocked<A, B>(_:_:)();
      v39._countAndFlagsBits = 8236;
      v39._object = (void *)0xE200000000000000;
      String.append(_:)(v39);
      sub_100032E28((uint64_t)v58, (uint64_t)v55);
      v40._countAndFlagsBits = String.init<A>(reflecting:)();
      String.append(_:)(v40);
      swift_bridgeObjectRelease();
      v41._countAndFlagsBits = 8236;
      v41._object = (void *)0xE200000000000000;
      String.append(_:)(v41);
      sub_100032E28((uint64_t)v57, (uint64_t)v55);
      v42._countAndFlagsBits = String.init<A>(reflecting:)();
      String.append(_:)(v42);
      swift_bridgeObjectRelease();
      v27 = v56;
      sub_100018FE8((uint64_t)v57);
LABEL_17:
      sub_100018FE8((uint64_t)v58);
      sub_100018FE8((uint64_t)v59);
      break;
    default:
      sub_10002F1B0((uint64_t)v19, (uint64_t)v16, &qword_10069B260);
      sub_10002F034((uint64_t)v16, (uint64_t)v14, &qword_10069B260);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v14, 1, v5) == 1)
      {
        v20 = (void *)0xE300000000000000;
        v21 = 7104878;
      }
      else
      {
        sub_100242F14((uint64_t)v14, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FolderEntity);
        sub_10023FD38((uint64_t)v10, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FolderEntity);
        v21 = String.init<A>(describing:)();
        v20 = v50;
        sub_100241CB0((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FolderEntity);
      }
      strcpy((char *)v59, "containedIn(");
      BYTE5(v59[1]) = 0;
      HIWORD(v59[1]) = -5120;
      v51._countAndFlagsBits = v21;
      v51._object = v20;
      String.append(_:)(v51);
      swift_bridgeObjectRelease();
      v52._countAndFlagsBits = 41;
      v52._object = (void *)0xE100000000000000;
      String.append(_:)(v52);
      v27 = v59[0];
      sub_10002B754((uint64_t)v16, &qword_10069B260);
      break;
  }
  return v27;
}

int64_t *sub_10023CC48(int64_t *result, int64_t *a2, int64_t a3, int64_t a4, int64_t a5)
{
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
LABEL_6:
    unint64_t v5 = a4;
LABEL_7:
    *result = a4;
    result[1] = a5;
    result[2] = v5;
    return (int64_t *)a3;
  }
  if (a3 < 0) {
    goto LABEL_31;
  }
  if (a5 == a4)
  {
LABEL_5:
    a3 = 0;
    goto LABEL_6;
  }
  if (a5 < a4) {
    goto LABEL_32;
  }
  if (a5 > a4)
  {
    unint64_t v5 = a4 + 1;
    *a2 = a4;
    unint64_t v6 = a3 - 1;
    if (a3 == 1) {
      goto LABEL_7;
    }
    unint64_t v7 = a3 - 2;
    if (a3 - 2 >= (unint64_t)(~a4 + a5)) {
      unint64_t v7 = ~a4 + a5;
    }
    if (v7 < v6) {
      unint64_t v6 = v7;
    }
    unint64_t v8 = v6 + 1;
    if (v8 > 4)
    {
      uint64_t v11 = v8 & 3;
      if ((v8 & 3) == 0) {
        uint64_t v11 = 4;
      }
      unint64_t v12 = v8 - v11;
      uint64_t v9 = v8 - v11 + 1;
      unint64_t v13 = v5 + v12;
      v10 = &a2[v12];
      int64x2_t v14 = vaddq_s64(vdupq_n_s64(v5), (int64x2_t)xmmword_10052CE20);
      v15 = (int64x2_t *)(a2 + 3);
      int64x2_t v16 = vdupq_n_s64(2uLL);
      do
      {
        v15[-1] = v14;
        int64x2_t *v15 = vaddq_s64(v14, v16);
        int64x2_t v14 = vaddq_s64(v14, vdupq_n_s64(4uLL));
        v15 += 2;
        v12 -= 4;
      }
      while (v12);
      unint64_t v5 = v13;
    }
    else
    {
      uint64_t v9 = 1;
      v10 = a2;
    }
    v17 = v10 + 1;
    int64_t v18 = v5;
    while (a3 != v9)
    {
      if (a5 == v18)
      {
        unint64_t v5 = a5;
        a3 = a5 - a4;
        goto LABEL_7;
      }
      if (v18 >= a5) {
        goto LABEL_30;
      }
      ++v9;
      unint64_t v5 = v18 + 1;
      *v17++ = v18++;
      if (a3 == v9) {
        goto LABEL_7;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10023CD78(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_10002F214(&qword_10069D190);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  v42 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v10);
  v41 = (char *)&v32 - v13;
  uint64_t v43 = a4;
  uint64_t v16 = *(void *)(a4 + 64);
  uint64_t v15 = a4 + 64;
  uint64_t v14 = v16;
  uint64_t v37 = v15;
  uint64_t v17 = -1 << *(unsigned char *)(v15 - 32);
  if (-v17 < 64) {
    uint64_t v18 = ~(-1 << -(char)v17);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & v14;
  if (!a2)
  {
    int64_t v20 = 0;
    a3 = 0;
LABEL_38:
    uint64_t v31 = v37;
    *a1 = v43;
    a1[1] = v31;
    a1[2] = ~v17;
    a1[3] = v20;
    a1[4] = v19;
    return a3;
  }
  if (!a3)
  {
    int64_t v20 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v34 = -1 << *(unsigned char *)(v15 - 32);
  v35 = a1;
  int64_t v20 = 0;
  uint64_t v21 = 0;
  uint64_t v38 = v9 + 32;
  uint64_t v39 = v9 + 16;
  int64_t v36 = (unint64_t)(63 - v17) >> 6;
  int64_t v33 = v36 - 1;
  uint64_t v40 = a3;
  v22 = v41;
  if (!v19) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v23 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  unint64_t v24 = v23 | (v20 << 6);
  while (1)
  {
    ++v21;
    v28 = v42;
    uint64_t v29 = *(void *)(v9 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v42, *(void *)(v43 + 48) + v29 * v24, v8);
    v30 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v30(v22, v28, v8);
    uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(a2, v22, v8);
    a3 = v40;
    if (v21 == v40) {
      goto LABEL_37;
    }
    a2 += v29;
    if (v19) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v25 >= v36) {
      goto LABEL_32;
    }
    unint64_t v26 = *(void *)(v37 + 8 * v25);
    if (!v26) {
      break;
    }
LABEL_18:
    unint64_t v19 = (v26 - 1) & v26;
    unint64_t v24 = __clz(__rbit64(v26)) + (v25 << 6);
    int64_t v20 = v25;
  }
  v20 += 2;
  if (v25 + 1 >= v36)
  {
    unint64_t v19 = 0;
    int64_t v20 = v25;
    goto LABEL_36;
  }
  unint64_t v26 = *(void *)(v37 + 8 * v20);
  if (v26) {
    goto LABEL_14;
  }
  int64_t v27 = v25 + 2;
  if (v25 + 2 >= v36) {
    goto LABEL_32;
  }
  unint64_t v26 = *(void *)(v37 + 8 * v27);
  if (v26) {
    goto LABEL_17;
  }
  int64_t v20 = v25 + 3;
  if (v25 + 3 >= v36)
  {
    unint64_t v19 = 0;
    int64_t v20 = v25 + 2;
    goto LABEL_36;
  }
  unint64_t v26 = *(void *)(v37 + 8 * v20);
  if (v26)
  {
LABEL_14:
    int64_t v25 = v20;
    goto LABEL_18;
  }
  int64_t v27 = v25 + 4;
  if (v25 + 4 >= v36)
  {
LABEL_32:
    unint64_t v19 = 0;
LABEL_36:
    a3 = v21;
LABEL_37:
    uint64_t v17 = v34;
    a1 = v35;
    goto LABEL_38;
  }
  unint64_t v26 = *(void *)(v37 + 8 * v27);
  if (v26)
  {
LABEL_17:
    int64_t v25 = v27;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v25 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v25 >= v36)
    {
      unint64_t v19 = 0;
      int64_t v20 = v33;
      goto LABEL_36;
    }
    unint64_t v26 = *(void *)(v37 + 8 * v25);
    ++v27;
    if (v26) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_10023D0C4(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_10023D0E0(a1, a2, a3, a4, (unint64_t *)&unk_1006A53A0, (uint64_t)ICFolder_ptr, (unint64_t *)&qword_1006A0418);
}

void *sub_10023D0E0(void *result, void *a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t a6, unint64_t *a7)
{
  uint64_t v7 = a4;
  uint64_t v9 = a2;
  uint64_t v29 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    sub_100031418(0, a5);
    sub_10002C8EC(a7, a5);
    uint64_t result = (void *)Set.Iterator.init(_cocoa:)();
    uint64_t v7 = v33;
    uint64_t v12 = v34;
    uint64_t v13 = v35;
    int64_t v14 = v36;
    unint64_t v15 = v37;
    if (v9) {
      goto LABEL_3;
    }
LABEL_36:
    uint64_t v16 = 0;
    goto LABEL_38;
  }
  int64_t v14 = 0;
  uint64_t v24 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v12 = a4 + 56;
  uint64_t v13 = ~v24;
  uint64_t v25 = -v24;
  if (v25 < 64) {
    uint64_t v26 = ~(-1 << v25);
  }
  else {
    uint64_t v26 = -1;
  }
  unint64_t v15 = v26 & *(void *)(a4 + 56);
  if (!a2) {
    goto LABEL_36;
  }
LABEL_3:
  if (!a3)
  {
    uint64_t v16 = 0;
LABEL_38:
    int64_t v27 = v29;
LABEL_41:
    *int64_t v27 = v7;
    v27[1] = v12;
    v27[2] = v13;
    v27[3] = v14;
    v27[4] = v15;
    return (void *)v16;
  }
  if (a3 < 0) {
    goto LABEL_48;
  }
  uint64_t v16 = 0;
  int64_t v30 = (unint64_t)(v13 + 64) >> 6;
  uint64_t v28 = v13;
  while (1)
  {
    if (v7 < 0)
    {
      if (!__CocoaSet.Iterator.next()()) {
        goto LABEL_40;
      }
      sub_100031418(0, a5);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v19 = v32;
      uint64_t result = (void *)swift_unknownObjectRelease();
      if (!v32) {
        goto LABEL_40;
      }
      goto LABEL_8;
    }
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v14 << 6);
      goto LABEL_7;
    }
    int64_t v20 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v20 >= v30)
    {
      unint64_t v15 = 0;
      goto LABEL_40;
    }
    unint64_t v21 = *(void *)(v12 + 8 * v20);
    if (v21) {
      goto LABEL_23;
    }
    int64_t v22 = v14 + 2;
    if (v14 + 2 >= v30)
    {
      unint64_t v15 = 0;
      ++v14;
      goto LABEL_40;
    }
    unint64_t v21 = *(void *)(v12 + 8 * v22);
    if (!v21)
    {
      if (v14 + 3 >= v30) {
        goto LABEL_44;
      }
      unint64_t v21 = *(void *)(v12 + 8 * (v14 + 3));
      if (v21)
      {
        int64_t v20 = v14 + 3;
        goto LABEL_23;
      }
      int64_t v22 = v14 + 4;
      if (v14 + 4 >= v30)
      {
        unint64_t v15 = 0;
        v14 += 3;
        goto LABEL_40;
      }
      unint64_t v21 = *(void *)(v12 + 8 * v22);
      if (!v21)
      {
        int64_t v20 = v14 + 5;
        if (v14 + 5 >= v30)
        {
LABEL_44:
          unint64_t v15 = 0;
          int64_t v14 = v22;
          goto LABEL_40;
        }
        unint64_t v21 = *(void *)(v12 + 8 * v20);
        if (!v21)
        {
          int64_t v23 = v14 + 6;
          while (v30 != v23)
          {
            unint64_t v21 = *(void *)(v12 + 8 * v23++);
            if (v21)
            {
              int64_t v20 = v23 - 1;
              goto LABEL_23;
            }
          }
          unint64_t v15 = 0;
          int64_t v14 = v30 - 1;
          goto LABEL_40;
        }
        goto LABEL_23;
      }
    }
    int64_t v20 = v22;
LABEL_23:
    unint64_t v15 = (v21 - 1) & v21;
    unint64_t v18 = __clz(__rbit64(v21)) + (v20 << 6);
    int64_t v14 = v20;
LABEL_7:
    uint64_t result = *(id *)(*(void *)(v7 + 48) + 8 * v18);
    id v19 = result;
    if (!result) {
      goto LABEL_40;
    }
LABEL_8:
    ++v16;
    *v9++ = v19;
    if (v16 == a3)
    {
      uint64_t v16 = a3;
LABEL_40:
      uint64_t v13 = v28;
      int64_t v27 = v29;
      goto LABEL_41;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

unint64_t sub_10023D3DC(unint64_t result, void *a2, uint64_t a3)
{
  void (*v13)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v14;
  char v15;
  unint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  long long v37;
  char v38;
  char v39;
  unint64_t v40;

  unint64_t v6 = result;
  uint64_t v40 = *v3;
  unint64_t v7 = v40;
  uint64_t v8 = v40 & 0xFFFFFFFFFFFFFF8;
  if (v40 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = sub_1001DA3A0((uint64_t)&v40);
  }
  else
  {
    uint64_t v9 = *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v10 = v3[1];
  char v11 = *((unsigned char *)v3 + 16);
  char v12 = *((unsigned char *)v3 + 17);
  uint64_t v13 = (void (*)(uint64_t *__return_ptr, uint64_t *))v3[3];
  int64_t v14 = v3[4];
  unint64_t v15 = *((unsigned char *)v3 + 40);
  uint64_t v32 = v7;
  uint64_t v34 = v10;
  uint64_t v35 = v11;
  int64_t v36 = v12;
  *(void *)&unint64_t v37 = v13;
  *((void *)&v37 + 1) = v14;
  uint64_t v38 = v15;
  uint64_t v39 = 0;
  if (!a2)
  {
    a3 = 0;
    *(void *)unint64_t v6 = v7;
    *(void *)(v6 + 8) = v9;
    *(void *)(v6 + 16) = v10;
    *(unsigned char *)(v6 + 24) = v11;
    *(unsigned char *)(v6 + 25) = v12;
    *(void *)(v6 + 32) = v13;
    *(void *)(v6 + 40) = v14;
    *(unsigned char *)(v6 + 48) = v15;
    *(unsigned char *)(v6 + 49) = 0;
    return a3;
  }
  if (!a3)
  {
    unint64_t v18 = 0;
LABEL_15:
    *(void *)unint64_t v6 = v7;
    *(void *)(v6 + 8) = v9;
    *(void *)(v6 + 16) = v10;
    *(unsigned char *)(v6 + 24) = v11;
    *(unsigned char *)(v6 + 25) = v12;
    *(void *)(v6 + 32) = v13;
    *(void *)(v6 + 40) = v14;
    *(unsigned char *)(v6 + 48) = v15;
    *(unsigned char *)(v6 + 49) = v18;
    return a3;
  }
  if (a3 < 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (!v9)
  {
LABEL_18:
    uint64_t v16 = 0;
LABEL_37:
    uint64_t v24 = v34;
    uint64_t v25 = v35;
    uint64_t v26 = v36;
    *(void *)unint64_t v6 = v7;
    *(void *)(v6 + 8) = v16;
    *(void *)(v6 + 16) = v24;
    *(unsigned char *)(v6 + 24) = v25;
    *(unsigned char *)(v6 + 25) = v26;
    *(_OWORD *)(v6 + 32) = v37;
    *(unsigned char *)(v6 + 48) = v15;
    a3 = v9;
    *(unsigned char *)(v6 + 49) = 1;
    return a3;
  }
  uint64_t v16 = v9 - 1;
  if (__OFSUB__(v9, 1))
  {
    __break(1u);
LABEL_20:
    unint64_t v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    if (v15) {
      goto LABEL_12;
    }
LABEL_21:
    swift_retain();
    v13(&v30, &v34);
    uint64_t result = swift_release();
    if (v31)
    {
      uint64_t v9 = 0;
LABEL_35:

      goto LABEL_36;
    }
    id v19 = a3;
    int64_t v20 = 0;
    int64_t v27 = v19;
    unint64_t v21 = 1 - v19;
    while (1)
    {
      int64_t v23 = v30;
      *a2 = v17;
      a2[1] = v23;
      if (v21 == v20)
      {
        unint64_t v7 = v32;
        uint64_t v9 = v33;
        uint64_t v10 = v34;
        char v11 = v35;
        char v12 = v36;
        int64_t v14 = *((void *)&v37 + 1);
        uint64_t v13 = (void (*)(uint64_t *__return_ptr, uint64_t *))v37;
        unint64_t v15 = v38;
        unint64_t v18 = v39;
        a3 = v27;
        goto LABEL_15;
      }
      if (v9 + v20 == 1)
      {
        uint64_t v16 = 0;
        unint64_t v15 = v38;
        goto LABEL_37;
      }
      if (!(v9 + 0x7FFFFFFFFFFFFFFFLL + v20)) {
        break;
      }
      uint64_t result = v9 + v20 - 2;
      uint64_t v33 = result;
      if (v29)
      {
        int64_t v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if ((result & 0x8000000000000000) != 0) {
          goto LABEL_41;
        }
        if (result >= *(void *)(v28 + 16)) {
          goto LABEL_42;
        }
        int64_t v22 = *(id *)(v7 + 8 * v9 + 16 + 8 * v20);
      }
      unint64_t v17 = v22;
      swift_retain();
      v13(&v30, &v34);
      uint64_t result = swift_release();
      --v20;
      a2 += 2;
      if (v31)
      {
        uint64_t v16 = v9 + v20 - 1;
        uint64_t v9 = -v20;
        goto LABEL_35;
      }
    }
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v33 = v9 - 1;
  uint64_t v29 = v7 & 0xC000000000000001;
  uint64_t v28 = v8;
  if ((v7 & 0xC000000000000001) != 0) {
    goto LABEL_20;
  }
  if ((v16 & 0x8000000000000000) != 0)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  if (v16 < *(void *)(v8 + 16))
  {
    unint64_t v17 = *(id *)(v7 + 8 * v16 + 32);
    if (v15)
    {
LABEL_12:

      uint64_t v9 = 0;
LABEL_36:
      unint64_t v15 = 1;
      goto LABEL_37;
    }
    goto LABEL_21;
  }
LABEL_44:
  __break(1u);
  return result;
}

void *sub_10023D700(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_10023D768(a1, a2, a3, a4, (void (*)(void))type metadata accessor for NoteSearchResult, &qword_1006A02A8, (void (*)(uint64_t))type metadata accessor for NoteSearchResult);
}

void *sub_10023D734(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_10023D768(a1, a2, a3, a4, (void (*)(void))type metadata accessor for AttachmentSearchResult, &qword_1006A00C8, (void (*)(uint64_t))type metadata accessor for AttachmentSearchResult);
}

void *sub_10023D768(void *result, void *a2, uint64_t a3, uint64_t a4, void (*a5)(void), unint64_t *a6, void (*a7)(uint64_t))
{
  uint64_t v7 = a4;
  uint64_t v9 = a2;
  int64_t v30 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    a5(0);
    sub_10023FF38(a6, a7);
    uint64_t result = (void *)Set.Iterator.init(_cocoa:)();
    uint64_t v7 = v34;
    uint64_t v13 = v35;
    uint64_t v14 = v36;
    int64_t v15 = v37;
    unint64_t v16 = v38;
    if (v9) {
      goto LABEL_3;
    }
LABEL_36:
    uint64_t v17 = 0;
    goto LABEL_38;
  }
  int64_t v15 = 0;
  uint64_t v25 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v13 = a4 + 56;
  uint64_t v14 = ~v25;
  uint64_t v26 = -v25;
  if (v26 < 64) {
    uint64_t v27 = ~(-1 << v26);
  }
  else {
    uint64_t v27 = -1;
  }
  unint64_t v16 = v27 & *(void *)(a4 + 56);
  if (!a2) {
    goto LABEL_36;
  }
LABEL_3:
  if (!a3)
  {
    uint64_t v17 = 0;
LABEL_38:
    uint64_t v28 = v30;
LABEL_41:
    void *v28 = v7;
    v28[1] = v13;
    v28[2] = v14;
    v28[3] = v15;
    v28[4] = v16;
    return (void *)v17;
  }
  if (a3 < 0) {
    goto LABEL_48;
  }
  uint64_t v17 = 0;
  int64_t v31 = (unint64_t)(v14 + 64) >> 6;
  uint64_t v29 = v14;
  while (1)
  {
    if (v7 < 0)
    {
      if (!__CocoaSet.Iterator.next()()) {
        goto LABEL_40;
      }
      a5(0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v20 = v33;
      uint64_t result = (void *)swift_unknownObjectRelease();
      if (!v33) {
        goto LABEL_40;
      }
      goto LABEL_8;
    }
    if (v16)
    {
      unint64_t v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v19 = v18 | (v15 << 6);
      goto LABEL_7;
    }
    int64_t v21 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v21 >= v31)
    {
      unint64_t v16 = 0;
      goto LABEL_40;
    }
    unint64_t v22 = *(void *)(v13 + 8 * v21);
    if (v22) {
      goto LABEL_23;
    }
    int64_t v23 = v15 + 2;
    if (v15 + 2 >= v31)
    {
      unint64_t v16 = 0;
      ++v15;
      goto LABEL_40;
    }
    unint64_t v22 = *(void *)(v13 + 8 * v23);
    if (!v22)
    {
      if (v15 + 3 >= v31) {
        goto LABEL_44;
      }
      unint64_t v22 = *(void *)(v13 + 8 * (v15 + 3));
      if (v22)
      {
        int64_t v21 = v15 + 3;
        goto LABEL_23;
      }
      int64_t v23 = v15 + 4;
      if (v15 + 4 >= v31)
      {
        unint64_t v16 = 0;
        v15 += 3;
        goto LABEL_40;
      }
      unint64_t v22 = *(void *)(v13 + 8 * v23);
      if (!v22)
      {
        int64_t v21 = v15 + 5;
        if (v15 + 5 >= v31)
        {
LABEL_44:
          unint64_t v16 = 0;
          int64_t v15 = v23;
          goto LABEL_40;
        }
        unint64_t v22 = *(void *)(v13 + 8 * v21);
        if (!v22)
        {
          int64_t v24 = v15 + 6;
          while (v31 != v24)
          {
            unint64_t v22 = *(void *)(v13 + 8 * v24++);
            if (v22)
            {
              int64_t v21 = v24 - 1;
              goto LABEL_23;
            }
          }
          unint64_t v16 = 0;
          int64_t v15 = v31 - 1;
          goto LABEL_40;
        }
        goto LABEL_23;
      }
    }
    int64_t v21 = v23;
LABEL_23:
    unint64_t v16 = (v22 - 1) & v22;
    unint64_t v19 = __clz(__rbit64(v22)) + (v21 << 6);
    int64_t v15 = v21;
LABEL_7:
    uint64_t result = *(id *)(*(void *)(v7 + 48) + 8 * v19);
    id v20 = result;
    if (!result) {
      goto LABEL_40;
    }
LABEL_8:
    ++v17;
    *v9++ = v20;
    if (v17 == a3)
    {
      uint64_t v17 = a3;
LABEL_40:
      uint64_t v14 = v29;
      uint64_t v28 = v30;
      goto LABEL_41;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_10023DA74(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = _s3TagVMa();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8 - 8);
  char v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v10);
  int64_t v15 = (char *)&v29 - v14;
  uint64_t v34 = a4;
  uint64_t v17 = a4 + 56;
  uint64_t v16 = *(void *)(a4 + 56);
  uint64_t v31 = -1 << *(unsigned char *)(a4 + 32);
  if (-v31 < 64) {
    uint64_t v18 = ~(-1 << -(char)v31);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & v16;
  if (!a2)
  {
    int64_t v20 = 0;
    a3 = 0;
LABEL_34:
    uint64_t v28 = ~v31;
    *a1 = v34;
    a1[1] = v17;
    a1[2] = v28;
    a1[3] = v20;
    a1[4] = v19;
    return a3;
  }
  if (!a3)
  {
    int64_t v20 = 0;
    goto LABEL_34;
  }
  if (a3 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  int64_t v30 = a1;
  int64_t v20 = 0;
  uint64_t v21 = 0;
  uint64_t v32 = v17;
  int64_t v33 = (unint64_t)(63 - v31) >> 6;
  int64_t v29 = v33 - 1;
  if (!v19) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v22 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  unint64_t v23 = v22 | (v20 << 6);
  while (1)
  {
    ++v21;
    uint64_t v27 = *(void *)(v9 + 72);
    sub_10023FD38(*(void *)(v34 + 48) + v27 * v23, (uint64_t)v12, (uint64_t (*)(void))_s3TagVMa);
    sub_100242F14((uint64_t)v12, (uint64_t)v15, (uint64_t (*)(void))_s3TagVMa);
    uint64_t result = sub_100242F14((uint64_t)v15, a2, (uint64_t (*)(void))_s3TagVMa);
    if (v21 == a3) {
      goto LABEL_33;
    }
    a2 += v27;
    if (v19) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v24 >= v33)
    {
      unint64_t v19 = 0;
      a3 = v21;
LABEL_33:
      a1 = v30;
      uint64_t v17 = v32;
      goto LABEL_34;
    }
    uint64_t v17 = v32;
    unint64_t v25 = *(void *)(v32 + 8 * v24);
    if (!v25) {
      break;
    }
LABEL_18:
    unint64_t v19 = (v25 - 1) & v25;
    unint64_t v23 = __clz(__rbit64(v25)) + (v24 << 6);
    int64_t v20 = v24;
  }
  v20 += 2;
  if (v24 + 1 >= v33)
  {
    unint64_t v19 = 0;
    int64_t v20 = v24;
LABEL_39:
    a3 = v21;
    a1 = v30;
    goto LABEL_34;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v20);
  if (v25) {
    goto LABEL_14;
  }
  int64_t v26 = v24 + 2;
  if (v24 + 2 >= v33) {
    goto LABEL_36;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v26);
  if (v25) {
    goto LABEL_17;
  }
  int64_t v20 = v24 + 3;
  if (v24 + 3 >= v33)
  {
    unint64_t v19 = 0;
    int64_t v20 = v24 + 2;
    goto LABEL_39;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v20);
  if (v25)
  {
LABEL_14:
    int64_t v24 = v20;
    goto LABEL_18;
  }
  int64_t v26 = v24 + 4;
  if (v24 + 4 >= v33)
  {
LABEL_36:
    unint64_t v19 = 0;
    goto LABEL_39;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v26);
  if (v25)
  {
LABEL_17:
    int64_t v24 = v26;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v24 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v24 >= v33)
    {
      unint64_t v19 = 0;
      int64_t v20 = v29;
      goto LABEL_39;
    }
    unint64_t v25 = *(void *)(v32 + 8 * v24);
    ++v26;
    if (v25) {
      goto LABEL_18;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

void *sub_10023DD98(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_10023D768(a1, a2, a3, a4, (void (*)(void))type metadata accessor for TableSearchResult, &qword_1006A00A8, (void (*)(uint64_t))type metadata accessor for TableSearchResult);
}

uint64_t sub_10023DDCC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10001DFB0((unint64_t *)&unk_1006A0080, &qword_1006A0078);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_10002F214(&qword_1006A0078);
          char v12 = sub_1003485CC(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100031418(0, &qword_1006A0070);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10023E000(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(void), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  unint64_t v14 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v15) {
      return a3;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v15) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v18 <= a2)
    {
      if (v15 >= 1)
      {
        uint64_t v19 = sub_10001DFB0(a5, a6);
        swift_bridgeObjectRetain();
        for (uint64_t i = 0; i != v15; ++i)
        {
          uint64_t v21 = sub_10002F214(a6);
          unint64_t v22 = (void (*)(unsigned char *, void))a7(v26, i, a3, v21, v19);
          id v24 = *v23;
          v22(v26, 0);
          *(void *)(a1 + 8 * i) = v24;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    a4(0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10023E238(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10001DFB0(&qword_1006A0048, &qword_1006A0040);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_10002F214(&qword_1006A0040);
          char v12 = sub_1003485CC(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100031418(0, (unint64_t *)&unk_10069B9F0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10023E46C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10001DFB0((unint64_t *)&unk_1006A0000, &qword_10069FFF8);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_10002F214(&qword_10069FFF8);
          char v12 = sub_1003485CC(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100031418(0, (unint64_t *)&qword_10069FD10);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10023E6A0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10001DFB0(&qword_1006A0018, &qword_1006A0010);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_10002F214(&qword_1006A0010);
          char v12 = sub_1003485CC(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100031418(0, (unint64_t *)&unk_1006A53A0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10023E8D4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10001DFB0((unint64_t *)&unk_1006A0030, &qword_1006A0028);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_10002F214(&qword_1006A0028);
          char v12 = sub_1003485CC(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100031418(0, (unint64_t *)&qword_1006A0020);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10023EB08(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10001DFB0(&qword_1006A0098, &qword_1006A0090);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_10002F214(&qword_1006A0090);
          char v12 = sub_1003485CC(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100031418(0, &qword_1006A4840);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

BOOL sub_10023ED3C(unsigned __int8 *a1)
{
  return *a1 < 0xFEu;
}

unsigned __int8 *sub_10023ED4C@<X0>(unsigned __int8 *result@<X0>, unsigned char *a2@<X8>)
{
  unsigned int v2 = *result;
  if (v2 > 0xFD) {
    __break(1u);
  }
  else {
    *a2 = v2;
  }
  return result;
}

uint64_t sub_10023ED64()
{
  sub_10002F214((uint64_t *)&unk_10069B130);
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t v0 = AppDependency.__allocating_init(key:manager:)();
  sub_10002F214((uint64_t *)&unk_10069CE60);
  AnyHashable.init<A>(_:)();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  sub_10002F214(&qword_10069B2A8);
  swift_getKeyPath();
  IntentParameterDependency.__allocating_init<A, B>(_:)();
  return v0;
}

id sub_10023EEBC(void *a1, void *a2)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v44 - v9;
  uint64_t v11 = type metadata accessor for NoteID();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a2;
  ICSearchIndexableNote<>.entityIdentifier.getter();
  (*(void (**)(unsigned char *, char *, uint64_t))(v12 + 32))(&v15[OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_id], v14, v11);
  id v16 = [a1 title];
  if (v16)
  {
    uint64_t v17 = v16;
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v20 = v19;
  }
  else
  {
    uint64_t v18 = 0;
    unint64_t v20 = 0xE000000000000000;
  }
  uint64_t v21 = (uint64_t *)&v15[OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_title];
  *uint64_t v21 = v18;
  v21[1] = v20;
  id v22 = [a1 creationDate];
  if (v22)
  {
    unint64_t v23 = v22;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v24 = type metadata accessor for Date();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v10, 0, 1, v24);
  }
  else
  {
    uint64_t v25 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v10, 1, 1, v25);
  }
  sub_10002F1B0((uint64_t)v10, (uint64_t)&v15[OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_creationDate], (uint64_t *)&unk_1006A3E20);
  id v26 = [a1 modificationDate];
  if (v26)
  {
    uint64_t v27 = v26;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v28 = type metadata accessor for Date();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v8, 0, 1, v28);
  }
  else
  {
    uint64_t v29 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v8, 1, 1, v29);
  }
  sub_10002F1B0((uint64_t)v8, (uint64_t)&v15[OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_modificationDate], (uint64_t *)&unk_1006A3E20);
  id v30 = [a1 folder];
  uint64_t v31 = (uint64_t)v30;
  if (v30)
  {
    id v32 = [v30 localizedTitle];
    swift_unknownObjectRelease();
    uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v34 = v33;
  }
  else
  {
    uint64_t v34 = 0;
  }
  uint64_t v35 = (uint64_t *)&v15[OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_folderName];
  uint64_t *v35 = v31;
  v35[1] = v34;
  id v36 = [a1 folderManagedIdentifier];
  if (v36)
  {
    int64_t v37 = v36;
    uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v40 = v39;
  }
  else
  {
    uint64_t v38 = 0;
    uint64_t v40 = 0;
  }
  v41 = (uint64_t *)&v15[OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_folderManagedIdentifier];
  uint64_t *v41 = v38;
  v41[1] = v40;
  unsigned __int8 v42 = [a1 isModernNote];
  v15[OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_isModernNote] = v42;

  v44.receiver = v15;
  v44.super_class = ObjectType;
  return [super init];
}

uint64_t sub_10023F2DC()
{
  sub_10002F214((uint64_t *)&unk_10069B130);
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t v0 = AppDependency.__allocating_init(key:manager:)();
  sub_10002F214((uint64_t *)&unk_10069CE60);
  AnyHashable.init<A>(_:)();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  sub_10002F214(&qword_10069B2A8);
  swift_getKeyPath();
  IntentParameterDependency.__allocating_init<A, B>(_:)();
  return v0;
}

uint64_t sub_10023F448()
{
  sub_10002F214((uint64_t *)&unk_10069B130);
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t v0 = AppDependency.__allocating_init(key:manager:)();
  sub_10002F214((uint64_t *)&unk_10069CE60);
  AnyHashable.init<A>(_:)();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  sub_10002F214(&qword_10069B2A8);
  swift_getKeyPath();
  IntentParameterDependency.__allocating_init<A, B>(_:)();
  return v0;
}

uint64_t sub_10023F590()
{
  sub_10002F214((uint64_t *)&unk_10069B130);
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t v0 = AppDependency.__allocating_init(key:manager:)();
  sub_10002F214((uint64_t *)&unk_10069CE60);
  AnyHashable.init<A>(_:)();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  sub_10002F214(&qword_10069B2A8);
  swift_getKeyPath();
  IntentParameterDependency.__allocating_init<A, B>(_:)();
  return v0;
}

uint64_t sub_10023F6CC()
{
  sub_10002F214((uint64_t *)&unk_10069B130);
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t v0 = AppDependency.__allocating_init(key:manager:)();
  sub_10002F214((uint64_t *)&unk_10069CE60);
  AnyHashable.init<A>(_:)();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  sub_10002F214(&qword_10069B2A8);
  swift_getKeyPath();
  IntentParameterDependency.__allocating_init<A, B>(_:)();
  return v0;
}

uint64_t sub_10023F838()
{
  sub_10002F214((uint64_t *)&unk_10069B130);
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t v0 = AppDependency.__allocating_init(key:manager:)();
  sub_10002F214((uint64_t *)&unk_10069CE60);
  AnyHashable.init<A>(_:)();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  sub_10002F214(&qword_10069B2A8);
  swift_getKeyPath();
  IntentParameterDependency.__allocating_init<A, B>(_:)();
  return v0;
}

uint64_t sub_10023F9A4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_10023F9E0()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t type metadata accessor for VisibleNotesQuery.Comparator(uint64_t a1)
{
  return sub_10002EFBC(a1, (uint64_t *)&unk_10069FFA0);
}

const char *sub_10023FA38()
{
  return "title";
}

void sub_10023FA44(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_10023FA64(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

uint64_t sub_10023FA88()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10023FAD8(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_100161724;
  *(_OWORD *)(v4 + 24) = v5;
  *(void *)(v4 + 16) = a1;
  return _swift_task_switch(sub_100239704, 0, 0);
}

uint64_t sub_10023FB8C(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_10017B61C;
  *(_OWORD *)(v4 + 24) = v5;
  *(void *)(v4 + 16) = a1;
  return _swift_task_switch(sub_100239A58, 0, 0);
}

uint64_t type metadata accessor for NoteSearchResult(uint64_t a1)
{
  return sub_10002EFBC(a1, qword_10069FE98);
}

const char *sub_10023FC60()
{
  return "creationDate";
}

uint64_t sub_10023FC6C@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10023A37C(a1, (SEL *)&selRef_creationDate, a2);
}

uint64_t sub_10023FC8C@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10023A37C(a1, (SEL *)&selRef_creationDate, a2);
}

void sub_10023FCAC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

const char *sub_10023FCCC()
{
  return "modificationDate";
}

uint64_t sub_10023FCD8@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10023A37C(a1, (SEL *)&selRef_modificationDate, a2);
}

uint64_t sub_10023FCF8@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10023A37C(a1, (SEL *)&selRef_modificationDate, a2);
}

void sub_10023FD18(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_10023FD38(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_10023FDA4()
{
  unint64_t result = qword_10069FDB0;
  if (!qword_10069FDB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069FDB0);
  }
  return result;
}

unint64_t sub_10023FDFC()
{
  unint64_t result = qword_10069FDB8[0];
  if (!qword_10069FDB8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10069FDB8);
  }
  return result;
}

uint64_t sub_10023FE50()
{
  return sub_10023FF38((unint64_t *)&qword_10069B1E0, (void (*)(uint64_t))type metadata accessor for NoteEntity);
}

unint64_t sub_10023FE9C()
{
  unint64_t result = qword_10069FDD8;
  if (!qword_10069FDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069FDD8);
  }
  return result;
}

uint64_t sub_10023FEF0()
{
  return sub_10023FF38((unint64_t *)&qword_10069CD70, (void (*)(uint64_t))type metadata accessor for NoteEntity);
}

uint64_t sub_10023FF38(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10023FF84()
{
  unint64_t result = qword_10069FDE8;
  if (!qword_10069FDE8)
  {
    sub_10001DFF4(qword_10069FDF0);
    sub_10023FF38((unint64_t *)&qword_10069CD70, (void (*)(uint64_t))type metadata accessor for NoteEntity);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069FDE8);
  }
  return result;
}

uint64_t sub_10024002C(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 24);
}

uint64_t sub_100240034()
{
  return type metadata accessor for NoteSearchResult(0);
}

void sub_10024003C()
{
  type metadata accessor for NoteID();
  if (v0 <= 0x3F)
  {
    sub_1002422F4(319, (unint64_t *)&qword_1006A6C30, (void (*)(uint64_t))&type metadata accessor for Date);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t initializeWithCopy for VisibleNotesQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for VisibleNotesQuery(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(unsigned char *)(a1 + 27) = *(unsigned char *)(a2 + 27);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  return a1;
}

__n128 initializeWithTake for VisibleNotesQuery(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for VisibleNotesQuery(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(unsigned char *)(a1 + 27) = *(unsigned char *)(a2 + 27);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  return a1;
}

uint64_t getEnumTagSinglePayload for VisibleNotesQuery(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 29)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VisibleNotesQuery(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 28) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 29) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 29) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisibleNotesQuery()
{
  return &type metadata for VisibleNotesQuery;
}

uint64_t type metadata accessor for VisibleNotesQuery.ComparatorKeyPath()
{
  return sub_100183A74();
}

void *initializeBufferWithCopyOfBuffer for VisibleNotesQuery.Comparator(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v10 = type metadata accessor for ICQueryType();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        break;
      case 2u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        break;
      case 3u:
        uint64_t v11 = a2[1];
        *a1 = *a2;
        a1[1] = v11;
        swift_bridgeObjectRetain();
        break;
      case 4u:
        uint64_t v12 = a2[1];
        *a1 = *a2;
        a1[1] = v12;
        uint64_t v13 = a2[2];
        uint64_t v14 = a2[3];
        a1[2] = v13;
        a1[3] = v14;
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        break;
      case 5u:
      case 6u:
      case 7u:
      case 8u:
      case 9u:
      case 0xAu:
        long long v15 = *(_OWORD *)(a2 + 3);
        *(_OWORD *)(a1 + 3) = v15;
        (**(void (***)(void *, void *))(v15 - 8))(a1, a2);
        uint64_t v16 = a2[8];
        a1[8] = v16;
        (**(void (***)(uint64_t, uint64_t))(v16 - 8))((uint64_t)(a1 + 5), (uint64_t)(a2 + 5));
        break;
      case 0xBu:
        long long v17 = *(_OWORD *)(a2 + 3);
        *(_OWORD *)(a1 + 3) = v17;
        (**(void (***)(void *, void *))(v17 - 8))(a1, a2);
        uint64_t v18 = a2[8];
        a1[8] = v18;
        (**(void (***)(uint64_t, uint64_t))(v18 - 8))((uint64_t)(a1 + 5), (uint64_t)(a2 + 5));
        uint64_t v19 = a2[12];
        a1[12] = v19;
        (**(void (***)(uint64_t, uint64_t))(v19 - 8))((uint64_t)(a1 + 9), (uint64_t)(a2 + 9));
        break;
      default:
        uint64_t v6 = (int *)type metadata accessor for FolderEntity();
        uint64_t v7 = *((void *)v6 - 1);
        if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
        {
          uint64_t v8 = sub_10002F214(&qword_10069B260);
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
        }
        else
        {
          uint64_t v20 = type metadata accessor for FolderID();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
          uint64_t v21 = v6[5];
          id v22 = (char *)a1 + v21;
          unint64_t v23 = (char *)a2 + v21;
          uint64_t v24 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
          uint64_t v25 = v6[6];
          id v26 = (void *)((char *)a1 + v25);
          uint64_t v27 = (void *)((char *)a2 + v25);
          uint64_t v28 = v27[1];
          *id v26 = *v27;
          v26[1] = v28;
          uint64_t v29 = v6[7];
          id v30 = (void *)((char *)a1 + v29);
          uint64_t v31 = (void *)((char *)a2 + v29);
          uint64_t v32 = v31[1];
          *id v30 = *v31;
          v30[1] = v32;
          *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
          *((unsigned char *)a1 + v6[9]) = *((unsigned char *)a2 + v6[9]);
          uint64_t v33 = *(void (**)(void *, void, uint64_t, int *))(v7 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v33(a1, 0, 1, v6);
        }
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for VisibleNotesQuery.Comparator(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v4 = type metadata accessor for FolderEntity();
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4);
      if (!result)
      {
        uint64_t v5 = type metadata accessor for FolderID();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
        uint64_t v6 = a1 + *(int *)(v4 + 20);
        uint64_t v7 = type metadata accessor for URL();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
        swift_bridgeObjectRelease();
        goto LABEL_11;
      }
      return result;
    case 1:
      uint64_t v8 = type metadata accessor for ICQueryType();
      uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
      return v9(a1, v8);
    case 2:
    case 3:
      goto LABEL_11;
    case 4:
      swift_release();
      swift_release();
LABEL_11:
      return swift_bridgeObjectRelease();
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      sub_100018FE8(a1);
      uint64_t v3 = a1 + 40;
      goto LABEL_3;
    case 11:
      sub_100018FE8(a1);
      sub_100018FE8(a1 + 40);
      uint64_t v3 = a1 + 72;
LABEL_3:
      uint64_t result = sub_100018FE8(v3);
      break;
    default:
      return result;
  }
  return result;
}

void *initializeWithCopy for VisibleNotesQuery.Comparator(void *a1, void *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v7 = type metadata accessor for ICQueryType();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      break;
    case 2u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      break;
    case 3u:
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
      break;
    case 4u:
      uint64_t v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      uint64_t v10 = a2[2];
      uint64_t v11 = a2[3];
      a1[2] = v10;
      a1[3] = v11;
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      break;
    case 5u:
    case 6u:
    case 7u:
    case 8u:
    case 9u:
    case 0xAu:
      long long v12 = *(_OWORD *)(a2 + 3);
      *(_OWORD *)(a1 + 3) = v12;
      (**(void (***)(void *, void *))(v12 - 8))(a1, a2);
      uint64_t v13 = a2[8];
      a1[8] = v13;
      (**(void (***)(uint64_t, uint64_t))(v13 - 8))((uint64_t)(a1 + 5), (uint64_t)(a2 + 5));
      break;
    case 0xBu:
      long long v14 = *(_OWORD *)(a2 + 3);
      *(_OWORD *)(a1 + 3) = v14;
      (**(void (***)(void *, void *))(v14 - 8))(a1, a2);
      uint64_t v15 = a2[8];
      a1[8] = v15;
      (**(void (***)(uint64_t, uint64_t))(v15 - 8))((uint64_t)(a1 + 5), (uint64_t)(a2 + 5));
      uint64_t v16 = a2[12];
      a1[12] = v16;
      (**(void (***)(uint64_t, uint64_t))(v16 - 8))((uint64_t)(a1 + 9), (uint64_t)(a2 + 9));
      break;
    default:
      uint64_t v4 = (int *)type metadata accessor for FolderEntity();
      uint64_t v5 = *((void *)v4 - 1);
      if ((*(unsigned int (**)(void *, uint64_t, int *))(v5 + 48))(a2, 1, v4))
      {
        uint64_t v6 = sub_10002F214(&qword_10069B260);
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      }
      else
      {
        uint64_t v17 = type metadata accessor for FolderID();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
        uint64_t v18 = v4[5];
        uint64_t v19 = (char *)a1 + v18;
        uint64_t v20 = (char *)a2 + v18;
        uint64_t v21 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
        uint64_t v22 = v4[6];
        unint64_t v23 = (void *)((char *)a1 + v22);
        uint64_t v24 = (void *)((char *)a2 + v22);
        uint64_t v25 = v24[1];
        *unint64_t v23 = *v24;
        v23[1] = v25;
        uint64_t v26 = v4[7];
        uint64_t v27 = (void *)((char *)a1 + v26);
        uint64_t v28 = (void *)((char *)a2 + v26);
        uint64_t v29 = v28[1];
        *uint64_t v27 = *v28;
        v27[1] = v29;
        *((unsigned char *)a1 + v4[8]) = *((unsigned char *)a2 + v4[8]);
        *((unsigned char *)a1 + v4[9]) = *((unsigned char *)a2 + v4[9]);
        id v30 = *(void (**)(void *, void, uint64_t, int *))(v5 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v30(a1, 0, 1, v4);
      }
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for VisibleNotesQuery.Comparator(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_100241CB0((uint64_t)a1, type metadata accessor for VisibleNotesQuery.Comparator);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v7 = type metadata accessor for ICQueryType();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        break;
      case 2u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        break;
      case 3u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        break;
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        break;
      case 5u:
      case 6u:
      case 7u:
      case 8u:
      case 9u:
      case 0xAu:
        uint64_t v8 = a2[3];
        a1[3] = v8;
        a1[4] = a2[4];
        (**(void (***)(void *, void *))(v8 - 8))(a1, a2);
        uint64_t v9 = a2[8];
        a1[8] = v9;
        (**(void (***)(uint64_t, uint64_t))(v9 - 8))((uint64_t)(a1 + 5), (uint64_t)(a2 + 5));
        break;
      case 0xBu:
        uint64_t v10 = a2[3];
        a1[3] = v10;
        a1[4] = a2[4];
        (**(void (***)(void *, void *))(v10 - 8))(a1, a2);
        uint64_t v11 = a2[8];
        a1[8] = v11;
        (**(void (***)(uint64_t, uint64_t))(v11 - 8))((uint64_t)(a1 + 5), (uint64_t)(a2 + 5));
        uint64_t v12 = a2[12];
        a1[12] = v12;
        (**(void (***)(uint64_t, uint64_t))(v12 - 8))((uint64_t)(a1 + 9), (uint64_t)(a2 + 9));
        break;
      default:
        uint64_t v4 = (int *)type metadata accessor for FolderEntity();
        uint64_t v5 = *((void *)v4 - 1);
        if ((*(unsigned int (**)(void *, uint64_t, int *))(v5 + 48))(a2, 1, v4))
        {
          uint64_t v6 = sub_10002F214(&qword_10069B260);
          memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        }
        else
        {
          uint64_t v13 = type metadata accessor for FolderID();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
          uint64_t v14 = v4[5];
          uint64_t v15 = (char *)a1 + v14;
          uint64_t v16 = (char *)a2 + v14;
          uint64_t v17 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
          uint64_t v18 = v4[6];
          uint64_t v19 = (void *)((char *)a1 + v18);
          uint64_t v20 = (void *)((char *)a2 + v18);
          *uint64_t v19 = *v20;
          v19[1] = v20[1];
          uint64_t v21 = v4[7];
          uint64_t v22 = (void *)((char *)a1 + v21);
          unint64_t v23 = (void *)((char *)a2 + v21);
          void *v22 = *v23;
          v22[1] = v23[1];
          *((unsigned char *)a1 + v4[8]) = *((unsigned char *)a2 + v4[8]);
          *((unsigned char *)a1 + v4[9]) = *((unsigned char *)a2 + v4[9]);
          uint64_t v24 = *(void (**)(void *, void, uint64_t, int *))(v5 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v24(a1, 0, 1, v4);
        }
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100241CB0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

char *initializeWithTake for VisibleNotesQuery.Comparator(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v10 = type metadata accessor for ICQueryType();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
LABEL_8:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = (int *)type metadata accessor for FolderEntity();
    uint64_t v8 = *((void *)v7 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_10002F214(&qword_10069B260);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v11 = type metadata accessor for FolderID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
      uint64_t v12 = v7[5];
      uint64_t v13 = &a1[v12];
      uint64_t v14 = &a2[v12];
      uint64_t v15 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
      *(_OWORD *)&a1[v7[6]] = *(_OWORD *)&a2[v7[6]];
      *(_OWORD *)&a1[v7[7]] = *(_OWORD *)&a2[v7[7]];
      a1[v7[8]] = a2[v7[8]];
      a1[v7[9]] = a2[v7[9]];
      (*(void (**)(char *, void, uint64_t, int *))(v8 + 56))(a1, 0, 1, v7);
    }
    goto LABEL_8;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *assignWithTake for VisibleNotesQuery.Comparator(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100241CB0((uint64_t)a1, type metadata accessor for VisibleNotesQuery.Comparator);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = type metadata accessor for ICQueryType();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
LABEL_9:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v7 = (int *)type metadata accessor for FolderEntity();
      uint64_t v8 = *((void *)v7 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
      {
        uint64_t v9 = sub_10002F214(&qword_10069B260);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        uint64_t v11 = type metadata accessor for FolderID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
        uint64_t v12 = v7[5];
        uint64_t v13 = &a1[v12];
        uint64_t v14 = &a2[v12];
        uint64_t v15 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
        *(_OWORD *)&a1[v7[6]] = *(_OWORD *)&a2[v7[6]];
        *(_OWORD *)&a1[v7[7]] = *(_OWORD *)&a2[v7[7]];
        a1[v7[8]] = a2[v7[8]];
        a1[v7[9]] = a2[v7[9]];
        (*(void (**)(char *, void, uint64_t, int *))(v8 + 56))(a1, 0, 1, v7);
      }
      goto LABEL_9;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void sub_1002421D4()
{
  sub_1002422F4(319, (unint64_t *)&qword_10069FFB0, (void (*)(uint64_t))type metadata accessor for FolderEntity);
  if (v0 <= 0x3F)
  {
    type metadata accessor for ICQueryType();
    if (v1 <= 0x3F) {
      swift_initEnumMetadataMultiPayload();
    }
  }
}

void sub_1002422F4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_100242348@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for NoteEntity(0);
  uint64_t result = EntityProperty.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10024238C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for NoteEntity(0);
  uint64_t result = EntityProperty.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1002423D0@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for NoteEntity(0);
  uint64_t result = EntityProperty.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100242414@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for NoteEntity(0);
  uint64_t result = EntityProperty.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100242458@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for NoteEntity(0);
  uint64_t result = EntityProperty.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10024249C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for NoteEntity(0);
  uint64_t result = EntityProperty.projectedValue.getter();
  *a1 = result;
  return result;
}

unint64_t sub_1002424E0()
{
  unint64_t result = qword_1006A0130;
  if (!qword_1006A0130)
  {
    sub_10001DFF4(&qword_10069C410);
    sub_10023FF38(&qword_1006A0140, (void (*)(uint64_t))type metadata accessor for TagEntity);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0130);
  }
  return result;
}

uint64_t sub_100242584()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

unint64_t sub_1002425BC()
{
  unint64_t result = qword_1006A01A0;
  if (!qword_1006A01A0)
  {
    sub_10001DFF4((uint64_t *)&unk_10069CE50);
    sub_10023FF38(&qword_10069E9F8, (void (*)(uint64_t))&type metadata accessor for AttributedString);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A01A0);
  }
  return result;
}

unint64_t sub_100242660()
{
  unint64_t result = qword_1006A0210;
  if (!qword_1006A0210)
  {
    sub_10001DFF4((uint64_t *)&unk_1006A3E20);
    sub_10023FF38(&qword_1006A0218, (void (*)(uint64_t))&type metadata accessor for Date);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0210);
  }
  return result;
}

unint64_t sub_100242704@<X0>(void *a1@<X8>)
{
  return sub_100239C8C(a1);
}

id sub_100242720(void *a1, void *a2, unint64_t *a3)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v7 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v46 - v11;
  uint64_t v13 = type metadata accessor for NoteID();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100031418(0, a3);
  uint64_t v17 = a2;
  ICSearchIndexableNote<>.entityIdentifier.getter();
  (*(void (**)(unsigned char *, char *, uint64_t))(v14 + 32))(&v17[OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_id], v16, v13);
  id v18 = [a1 title];
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v22 = v21;
  }
  else
  {
    uint64_t v20 = 0;
    unint64_t v22 = 0xE000000000000000;
  }
  unint64_t v23 = (uint64_t *)&v17[OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_title];
  *unint64_t v23 = v20;
  v23[1] = v22;
  id v24 = [a1 creationDate];
  if (v24)
  {
    uint64_t v25 = v24;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v26 = type metadata accessor for Date();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v12, 0, 1, v26);
  }
  else
  {
    uint64_t v27 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v12, 1, 1, v27);
  }
  sub_10002F1B0((uint64_t)v12, (uint64_t)&v17[OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_creationDate], (uint64_t *)&unk_1006A3E20);
  id v28 = [a1 modificationDate];
  if (v28)
  {
    uint64_t v29 = v28;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v30 = type metadata accessor for Date();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v10, 0, 1, v30);
  }
  else
  {
    uint64_t v31 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v10, 1, 1, v31);
  }
  sub_10002F1B0((uint64_t)v10, (uint64_t)&v17[OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_modificationDate], (uint64_t *)&unk_1006A3E20);
  id v32 = [a1 folder];
  uint64_t v33 = (uint64_t)v32;
  if (v32)
  {
    id v34 = [v32 localizedTitle];
    swift_unknownObjectRelease();
    uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v36 = v35;
  }
  else
  {
    uint64_t v36 = 0;
  }
  int64_t v37 = (uint64_t *)&v17[OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_folderName];
  *int64_t v37 = v33;
  v37[1] = v36;
  id v38 = [a1 folderManagedIdentifier];
  if (v38)
  {
    uint64_t v39 = v38;
    uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v42 = v41;
  }
  else
  {
    uint64_t v40 = 0;
    uint64_t v42 = 0;
  }
  uint64_t v43 = (uint64_t *)&v17[OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_folderManagedIdentifier];
  *uint64_t v43 = v40;
  v43[1] = v42;
  unsigned __int8 v44 = [a1 isModernNote];
  v17[OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_isModernNote] = v44;

  v46.receiver = v17;
  v46.super_class = ObjectType;
  return [super init];
}

uint64_t sub_100242B58()
{
  return _swift_deallocObject(v0, 32, 7);
}

unint64_t sub_100242B98@<X0>(void *a1@<X8>)
{
  return sub_10023999C(a1);
}

const char *sub_100242BB4()
{
  return "guid";
}

void sub_100242BC0(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

unint64_t sub_100242BE0()
{
  unint64_t result = qword_1006A0308;
  if (!qword_1006A0308)
  {
    sub_10001DFF4(&qword_1006A02C8);
    sub_100242C9C(&qword_1006A0310, &qword_1006A02C0, &qword_1006A0318, &qword_1006A02B8);
    sub_100242C9C(&qword_1006A0320, &qword_1006A02D8, &qword_1006A0328, &qword_1006A0330);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0308);
  }
  return result;
}

uint64_t sub_100242C9C(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001DFF4(a2);
    sub_10001DFB0(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100242D30()
{
  unint64_t result = qword_1006A0338;
  if (!qword_1006A0338)
  {
    sub_10001DFF4(&qword_1006A02B0);
    sub_100242DF4(&qword_1006A0340);
    sub_100242DF4(&qword_1006A0348);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0338);
  }
  return result;
}

uint64_t sub_100242DF4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001DFF4(&qword_1006A02F0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100242E5C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

id sub_100242E94@<X0>(void *a1@<X8>)
{
  id result = sub_10023A590(*(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
  *a1 = result;
  return result;
}

uint64_t sub_100242EDC()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100242F14(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

const char *sub_100242F80()
{
  return "identifier";
}

void sub_100242F8C(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

uint64_t sub_100242FAC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001DFF4(a2);
    a3();
    sub_100242D30();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10024302C()
{
  unint64_t result = qword_1006A03F8;
  if (!qword_1006A03F8)
  {
    sub_10001DFF4(&qword_1006A03D0);
    sub_100242C9C(&qword_1006A0400, &qword_1006A03C8, &qword_1006A0408, &qword_1006A03C0);
    sub_100242C9C(&qword_1006A0320, &qword_1006A02D8, &qword_1006A0328, &qword_1006A0330);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A03F8);
  }
  return result;
}

void *sub_1002430F8(uint64_t a1)
{
  unint64_t v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v3 = __CocoaSet.count.getter();
    unint64_t result = _swiftEmptyArrayStorage;
    if (!v3) {
      return result;
    }
    id v24 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v21 = __CocoaSet.startIndex.getter();
    uint64_t v22 = v5;
    unsigned __int8 v23 = 1;
    if ((v3 & 0x8000000000000000) == 0) {
      goto LABEL_9;
    }
    __break(1u);
  }
  uint64_t v3 = *(void *)(a1 + 16);
  unint64_t result = _swiftEmptyArrayStorage;
  if (v3)
  {
    id v24 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v21 = sub_1002AEEF8(a1);
    uint64_t v22 = v6;
    unsigned __int8 v23 = v7 & 1;
    while (1)
    {
LABEL_9:
      while (1)
      {
        uint64_t v13 = v21;
        uint64_t v14 = v22;
        uint64_t v15 = v23;
        sub_1002AEFA0(v21, v22, v23, a1);
        uint64_t v17 = v16;
        id v18 = [v16 objectID];

        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        unint64_t result = (void *)specialized ContiguousArray._endMutation()();
        if (v2) {
          break;
        }
        uint64_t v8 = sub_10048F4F4(v13, v14, v15, a1);
        uint64_t v10 = v9;
        char v12 = v11;
        sub_10002DA18(v13, v14, v15);
        uint64_t v21 = v8;
        uint64_t v22 = v10;
        unsigned __int8 v23 = v12 & 1;
        if (!--v3) {
          goto LABEL_14;
        }
      }
      if ((v15 & 1) == 0) {
        break;
      }
      if (__CocoaSet.Index.handleBitPattern.getter()) {
        swift_isUniquelyReferenced_nonNull_native();
      }
      sub_10002F214(&qword_1006A0488);
      uint64_t v19 = (void (*)(unsigned char *, void))Set.Index._asCocoa.modify();
      __CocoaSet.formIndex(after:isUnique:)();
      v19(v20, 0);
      if (!--v3)
      {
LABEL_14:
        sub_10002DA18(v21, v22, v23);
        return v24;
      }
    }
    __break(1u);
  }
  return result;
}

char *sub_100243328()
{
  uint64_t v1 = OBJC_IVAR___ICTagAssignmentViewController____lazy_storage___collectionView;
  unint64_t v2 = *(void **)&v0[OBJC_IVAR___ICTagAssignmentViewController____lazy_storage___collectionView];
  if (v2)
  {
    uint64_t v3 = *(char **)&v0[OBJC_IVAR___ICTagAssignmentViewController____lazy_storage___collectionView];
  }
  else
  {
    unint64_t v4 = v0;
    uint64_t v5 = *(void **)&v0[OBJC_IVAR___ICTagAssignmentViewController_managedObjectContext];
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    objc_allocWithZone((Class)type metadata accessor for TagAssignmentCollectionView());
    id v7 = v5;
    uint64_t v8 = v4;
    uint64_t v9 = sub_1003FAF60(v5, (uint64_t)sub_1002448E4, v6);
    uint64_t v10 = *(void **)&v4[v1];
    *(void *)&v4[v1] = v9;
    uint64_t v3 = v9;

    unint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

void sub_1002433F4(void *a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR___ICTagAssignmentViewController_model);
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_1002430F8(v4);
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_1002695C8((unint64_t)v5);
  swift_bridgeObjectRelease();
  id v7 = [a1 includedObjectIDs];
  sub_100031418(0, (unint64_t *)&qword_10069E810);
  sub_10002C8EC((unint64_t *)&qword_10069FFE0, (unint64_t *)&qword_10069E810);
  uint64_t v8 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  sub_100244908(v6, v8);
  LOBYTE(v7) = v9;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v10 = sub_100243634(&OBJC_IVAR___ICTagAssignmentViewController____lazy_storage___doneBarButtonItem, &selRef_dismissAndSaveActionWithSender_, 0);
  [v10 setEnabled:(v7 & 1) == 0];

  swift_beginAccess();
  *(void *)(v3 + 16) = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease();
  id v11 = *(void **)(v3 + 32);
  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = a1;
  v13[3] = v12;
  v13[4] = 0;
  v13[5] = 0;
  aBlock[4] = sub_100244E1C;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100262E2C;
  aBlock[3] = &unk_100631398;
  uint64_t v14 = _Block_copy(aBlock);
  id v15 = a1;
  swift_release();
  [v11 performBlock:v14];
  _Block_release(v14);
}

id sub_100243634(uint64_t *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(void **)(v3 + *a1);
  if (v5)
  {
    id v6 = *(id *)(v3 + *a1);
  }
  else
  {
    id v7 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:a3 target:v3 action:*a2];
    uint64_t v8 = *(void **)(v3 + v4);
    *(void *)(v3 + v4) = v7;
    id v6 = v7;

    uint64_t v5 = 0;
  }
  id v9 = v5;
  return v6;
}

id sub_10024373C(unint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v5[OBJC_IVAR___ICTagAssignmentViewController____lazy_storage___collectionView] = 0;
  *(void *)&v5[OBJC_IVAR___ICTagAssignmentViewController____lazy_storage___cancelBarButtonItem] = 0;
  *(void *)&v5[OBJC_IVAR___ICTagAssignmentViewController____lazy_storage___doneBarButtonItem] = 0;
  *(void *)&v5[OBJC_IVAR___ICTagAssignmentViewController_selectedNotes] = a1;
  *(void *)&v5[OBJC_IVAR___ICTagAssignmentViewController_managedObjectContext] = a2;
  id v11 = &v5[OBJC_IVAR___ICTagAssignmentViewController_completion];
  *(void *)id v11 = a3;
  *((void *)v11 + 1) = a4;
  type metadata accessor for TagAssignmentModel();
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = &_swiftEmptySetSingleton;
  v12[3] = a1;
  v12[4] = a2;
  swift_bridgeObjectRetain_n();
  id v13 = a2;
  uint64_t v14 = v5;
  swift_retain();
  uint64_t v15 = sub_1003D3514(a1, (uint64_t)v13);
  swift_bridgeObjectRelease();
  v12[5] = v15;
  *(void *)&v14[OBJC_IVAR___ICTagAssignmentViewController_model] = v12;

  v23.receiver = v14;
  v23.super_class = ObjectType;
  id v16 = [super initWithNibName:0 bundle:0];
  uint64_t v17 = sub_100243328();
  id v18 = *(void **)&v17[OBJC_IVAR____TtC11MobileNotes27TagAssignmentCollectionView_tagAssignmentDataSource];
  if (v18)
  {
    uint64_t v19 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v20 = (void *)swift_allocObject();
    v20[3] = 0;
    v20[4] = 0;
    v20[2] = v19;
    id v21 = v18;
    swift_retain();
    sub_100326620(0, (uint64_t)sub_100244EA8, (uint64_t)v20);

    swift_release();
    swift_release();
  }
  else
  {
  }
  swift_release();

  return v16;
}

void sub_100243A00()
{
  v13.receiver = v0;
  v13.super_class = (Class)swift_getObjectType();
  [super viewDidLoad];
  id v1 = [self mainBundle];
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v1 localizedStringForKey:v2 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v0 setTitle:v4];

  id v5 = [v0 navigationItem];
  id v6 = sub_100243634(&OBJC_IVAR___ICTagAssignmentViewController____lazy_storage___cancelBarButtonItem, &selRef_dismissActionWithSender_, 1);
  [v5 setLeftBarButtonItem:v6];

  id v7 = [v0 navigationItem];
  id v8 = sub_100243634(&OBJC_IVAR___ICTagAssignmentViewController____lazy_storage___doneBarButtonItem, &selRef_dismissAndSaveActionWithSender_, 0);
  [v7 setRightBarButtonItem:v8];

  id v9 = [v0 view];
  if (v9)
  {
    id v10 = v9;
    id v11 = sub_100243328();
    [v10 addSubview:v11];

    uint64_t v12 = sub_100243328();
    [v12 ic_addAnchorsToFillSuperview];
  }
  else
  {
    __break(1u);
  }
}

void sub_100243C40()
{
  uint64_t v1 = sub_10002F214((uint64_t *)&unk_1006A2670);
  __chkstk_darwin(v1 - 8);
  v64 = (char *)&v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = type metadata accessor for IndexPath();
  uint64_t v3 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  v62 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = v0;
  uint64_t v5 = *(void *)(*(void *)(v0 + OBJC_IVAR___ICTagAssignmentViewController_model) + 40);
  if ((v5 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_100031418(0, (unint64_t *)&qword_1006A49F0);
    sub_10002C8EC(&qword_1006A0480, (unint64_t *)&qword_1006A49F0);
    Set.Iterator.init(_cocoa:)();
    uint64_t v5 = v74;
    uint64_t v67 = v75;
    uint64_t v6 = v76;
    uint64_t v7 = v77;
    unint64_t v8 = v78;
  }
  else
  {
    uint64_t v9 = -1 << *(unsigned char *)(v5 + 32);
    uint64_t v10 = *(void *)(v5 + 56);
    uint64_t v67 = v5 + 56;
    uint64_t v6 = ~v9;
    uint64_t v11 = -v9;
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v8 = v12 & v10;
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
  }
  uint64_t v65 = v5 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v57 = v6;
  int64_t v66 = (unint64_t)(v6 + 64) >> 6;
  v63 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  v60 = (void (**)(char *, uint64_t, uint64_t))(v3 + 32);
  v55 = v72;
  v59 = (void (**)(char *, uint64_t))(v3 + 8);
  v61 = (char *)&type metadata for Swift.AnyObject + 8;
  while (1)
  {
    uint64_t v13 = v7;
    if (v5 < 0)
    {
      uint64_t v16 = __CocoaSet.Iterator.next()();
      if (!v16) {
        goto LABEL_49;
      }
      uint64_t v70 = v16;
      sub_100031418(0, (unint64_t *)&qword_1006A49F0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v17 = (id)aBlock[0];
      swift_unknownObjectRelease();
      if (!v17) {
        goto LABEL_49;
      }
      goto LABEL_30;
    }
    if (!v8) {
      break;
    }
    unint64_t v14 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v15 = v14 | (v7 << 6);
LABEL_29:
    id v17 = *(id *)(*(void *)(v5 + 48) + 8 * v15);
    if (!v17) {
      goto LABEL_49;
    }
LABEL_30:
    id v21 = [v17 standardizedContent];
    if (v21)
    {
      uint64_t v22 = v21;
      uint64_t v23 = v5;
      id v24 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v26 = v25;

      uint64_t v27 = sub_100243328();
      id v28 = *(void **)&v27[OBJC_IVAR____TtC11MobileNotes27TagAssignmentCollectionView_tagAssignmentDataSource];
      if (!v28)
      {

        swift_bridgeObjectRelease();
        uint64_t v29 = v27;
        goto LABEL_48;
      }
      uint64_t v29 = v28;
      uint64_t v30 = (uint64_t)v64;
      dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();
      uint64_t v31 = v68;
      if ((*v63)(v30, 1, v68) != 1)
      {
        v58 = v24;
        (*v60)(v62, v30, v31);
        id v32 = *(void **)&v29[qword_1006A3230];
        Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
        id v34 = [v32 cellForItemAtIndexPath:isa];

        if (v34)
        {
          type metadata accessor for TagContainerCell();
          if (swift_dynamicCastClass())
          {
            uint64_t v35 = sub_10028DF24();
            uint64_t v36 = *(void **)&v35[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagDataSource];
            if (v36)
            {
              v54 = (char *)OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagDataSource;
              id v37 = [v36 indexer];
              if (v37)
              {
                id v38 = v37;
                self;
                id v53 = v38;
                uint64_t v39 = swift_dynamicCastObjCClass();
                id v56 = v35;
                if (v39)
                {
                  uint64_t v40 = *(void **)&v54[(void)v56];
                  if (v40)
                  {
                    uint64_t v41 = (void *)v39;
                    uint64_t v42 = v40;
                    id v43 = [v41 objectIDs];
                    sub_100031418(0, (unint64_t *)&qword_10069E810);
                    uint64_t v52 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

                    v54 = v42;
                    v51 = *(void **)&v42[OBJC_IVAR____TtC11MobileNotes13TagDataSource_modernViewContext];
                    uint64_t v44 = swift_allocObject();
                    swift_unknownObjectWeakInit();
                    uint64_t v45 = swift_allocObject();
                    uint64_t v46 = v52;
                    *(void *)(v45 + 16) = v44;
                    *(void *)(v45 + 24) = v46;
                    v47 = v51;
                    v48 = v58;
                    *(void *)(v45 + 32) = v51;
                    *(void *)(v45 + 40) = v48;
                    *(void *)(v45 + 48) = v26;
                    *(void *)(v45 + 56) = v42;
                    *(unsigned char *)(v45 + 64) = 0;
                    *(void *)(v45 + 72) = 0;
                    *(void *)(v45 + 80) = 0;
                    v72[2] = sub_100244874;
                    uint64_t v73 = v45;
                    aBlock[0] = _NSConcreteStackBlock;
                    aBlock[1] = 1107296256;
                    v72[0] = sub_100262E2C;
                    v72[1] = &unk_1006312F8;
                    v49 = _Block_copy(aBlock);
                    uint64_t v52 = v73;
                    id v50 = v47;
                    v58 = v54;
                    uint64_t v35 = (char *)v50;
                    swift_bridgeObjectRetain();
                    swift_release();
                    [v35 performBlock:v49];
                    _Block_release(v49);

                    goto LABEL_45;
                  }
                }

                id v34 = v56;
                uint64_t v35 = (char *)v53;
              }
            }

LABEL_45:
          }
          else
          {
          }
        }
        (*v59)(v62, v68);
        goto LABEL_47;
      }
      sub_10015E208(v30);
LABEL_47:

      swift_bridgeObjectRelease();
LABEL_48:
      uint64_t v5 = v23;
    }
    else
    {
    }
  }
  int64_t v18 = v7 + 1;
  if (!__OFADD__(v7, 1))
  {
    if (v18 >= v66) {
      goto LABEL_49;
    }
    unint64_t v19 = *(void *)(v67 + 8 * v18);
    ++v7;
    if (!v19)
    {
      uint64_t v7 = v13 + 2;
      if (v13 + 2 >= v66) {
        goto LABEL_49;
      }
      unint64_t v19 = *(void *)(v67 + 8 * v7);
      if (!v19)
      {
        uint64_t v7 = v13 + 3;
        if (v13 + 3 >= v66) {
          goto LABEL_49;
        }
        unint64_t v19 = *(void *)(v67 + 8 * v7);
        if (!v19)
        {
          uint64_t v7 = v13 + 4;
          if (v13 + 4 >= v66) {
            goto LABEL_49;
          }
          unint64_t v19 = *(void *)(v67 + 8 * v7);
          if (!v19)
          {
            uint64_t v20 = v13 + 5;
            while (v66 != v20)
            {
              unint64_t v19 = *(void *)(v67 + 8 * v20++);
              if (v19)
              {
                uint64_t v7 = v20 - 1;
                goto LABEL_28;
              }
            }
LABEL_49:
            sub_10017B518();
            return;
          }
        }
      }
    }
LABEL_28:
    unint64_t v8 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v7 << 6);
    goto LABEL_29;
  }
  __break(1u);
}

uint64_t type metadata accessor for TagAssignmentViewController()
{
  return self;
}

uint64_t sub_1002447D4()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10024480C()
{
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 72)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 88, 7);
}

void sub_100244874()
{
  sub_10038F798(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void **)(v0 + 56), *(unsigned __int8 *)(v0 + 64), *(void (**)(uint64_t))(v0 + 72));
}

uint64_t sub_1002448AC()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1002448E4(void *a1)
{
}

void sub_100244908(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = a2 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0) {
      uint64_t v5 = a1;
    }
    else {
      uint64_t v5 = a1 & 0xFFFFFFFFFFFFFF8;
    }
    if (v4)
    {
      if (a2 < 0) {
        uint64_t v6 = a2;
      }
      else {
        uint64_t v6 = a2 & 0xFFFFFFFFFFFFFF8;
      }
      goto _$ss10__CocoaSetV7isEqual2toSbAB_tF;
    }
    uint64_t v7 = v5;
    uint64_t v8 = a2;
    goto LABEL_18;
  }
  if (v4)
  {
    if (a2 < 0) {
      uint64_t v7 = a2;
    }
    else {
      uint64_t v7 = a2 & 0xFFFFFFFFFFFFFF8;
    }
    uint64_t v8 = a1;
LABEL_18:
    sub_100244C40(v7, v8);
    return;
  }
  if (a1 == a2 || *(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return;
  }
  uint64_t v29 = a1 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(a1 + 56);
  uint64_t v6 = sub_100031418(0, (unint64_t *)&qword_10069E810);
  int64_t v12 = 0;
  int64_t v30 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = a2 + 56;
  while (1)
  {
    if (v11)
    {
      unint64_t v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_46;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_56;
    }
    if (v16 >= v30) {
      return;
    }
    unint64_t v17 = *(void *)(v29 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v30) {
        return;
      }
      unint64_t v17 = *(void *)(v29 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v30) {
          return;
        }
        unint64_t v17 = *(void *)(v29 + 8 * v12);
        if (!v17)
        {
          int64_t v12 = v16 + 3;
          if (v16 + 3 >= v30) {
            return;
          }
          unint64_t v17 = *(void *)(v29 + 8 * v12);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_45:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_46:
    Swift::Int v19 = *(void *)(a2 + 40);
    id v20 = *(id *)(*(void *)(a1 + 48) + 8 * v15);
    Swift::Int v21 = NSObject._rawHashValue(seed:)(v19);
    uint64_t v22 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v23 = v21 & ~v22;
    if (((*(void *)(v13 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
      goto LABEL_53;
    }
    int64_t v31 = v12;
    id v24 = *(id *)(*(void *)(a2 + 48) + 8 * v23);
    char v25 = static NSObject.== infix(_:_:)();

    if ((v25 & 1) == 0)
    {
      uint64_t v26 = ~v22;
      while (1)
      {
        unint64_t v23 = (v23 + 1) & v26;
        if (((*(void *)(v13 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
          break;
        }
        id v27 = *(id *)(*(void *)(a2 + 48) + 8 * v23);
        char v28 = static NSObject.== infix(_:_:)();

        if (v28) {
          goto LABEL_27;
        }
      }
LABEL_53:

      return;
    }
LABEL_27:

    int64_t v12 = v31;
  }
  int64_t v18 = v16 + 4;
  if (v18 >= v30) {
    return;
  }
  unint64_t v17 = *(void *)(v29 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_45;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v30) {
      return;
    }
    unint64_t v17 = *(void *)(v29 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_45;
    }
  }
LABEL_56:
  __break(1u);
_$ss10__CocoaSetV7isEqual2toSbAB_tF:
  __CocoaSet.isEqual(to:)(v6, v5);
}

void sub_100244C40(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  if (v3 != __CocoaSet.count.getter()) {
    return;
  }
  int64_t v4 = 0;
  uint64_t v5 = a2 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a2 + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    unint64_t v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v11 = v10 | (v4 << 6);
LABEL_6:
    id v12 = *(id *)(*(void *)(a2 + 48) + 8 * v11);
    char v13 = __CocoaSet.contains(_:)();

    if ((v13 & 1) == 0) {
      return;
    }
  }
  int64_t v14 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v14 >= v9) {
    return;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v14);
  ++v4;
  if (v15) {
    goto LABEL_19;
  }
  int64_t v4 = v14 + 1;
  if (v14 + 1 >= v9) {
    return;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v4);
  if (v15)
  {
LABEL_19:
    unint64_t v8 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + (v4 << 6);
    goto LABEL_6;
  }
  int64_t v16 = v14 + 2;
  if (v16 >= v9) {
    return;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v16);
  if (v15)
  {
    int64_t v4 = v16;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v4 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v4 >= v9) {
      return;
    }
    unint64_t v15 = *(void *)(v5 + 8 * v4);
    ++v16;
    if (v15) {
      goto LABEL_19;
    }
  }
LABEL_23:
  __break(1u);
}

uint64_t sub_100244D94()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100244DCC()
{
  swift_release();
  if (*(void *)(v0 + 32)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 48, 7);
}

void sub_100244E1C()
{
  sub_1003D22F0(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void (**)(uint64_t))(v0 + 32));
}

uint64_t sub_100244E28()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100244E60()
{
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100244EA8()
{
  sub_1003FB344(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24));
}

void sub_100244ED0(uint64_t a1)
{
  int64_t v2 = 0;
  uint64_t v4 = a1 + 64;
  uint64_t v3 = *(void *)(a1 + 64);
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & v3;
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  if ((v6 & v3) != 0) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v12 = v2 + 1;
  if (!__OFADD__(v2, 1))
  {
    if (v12 < v8)
    {
      unint64_t v13 = *(void *)(v4 + 8 * v12);
      ++v2;
      if (v13) {
        goto LABEL_22;
      }
      int64_t v2 = v12 + 1;
      if (v12 + 1 >= v8) {
        goto LABEL_26;
      }
      unint64_t v13 = *(void *)(v4 + 8 * v2);
      if (v13) {
        goto LABEL_22;
      }
      int64_t v2 = v12 + 2;
      if (v12 + 2 >= v8) {
        goto LABEL_26;
      }
      unint64_t v13 = *(void *)(v4 + 8 * v2);
      if (v13) {
        goto LABEL_22;
      }
      int64_t v2 = v12 + 3;
      if (v12 + 3 >= v8) {
        goto LABEL_26;
      }
      unint64_t v13 = *(void *)(v4 + 8 * v2);
      if (v13)
      {
LABEL_22:
        unint64_t v7 = (v13 - 1) & v13;
        for (unint64_t i = __clz(__rbit64(v13)) + (v2 << 6); ; unint64_t i = v10 | (v2 << 6))
        {
          id v15 = *(id *)(*(void *)(a1 + 56) + 8 * i);
          id v16 = [v15 parentAttachment];
          if (v16)
          {
            int64_t v9 = v16;

            if (!v7) {
              goto LABEL_7;
            }
          }
          else
          {
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
            if (!v7) {
              goto LABEL_7;
            }
          }
LABEL_6:
          unint64_t v10 = __clz(__rbit64(v7));
          v7 &= v7 - 1;
        }
      }
      int64_t v14 = v12 + 4;
      if (v14 < v8)
      {
        unint64_t v13 = *(void *)(v4 + 8 * v14);
        if (v13)
        {
          int64_t v2 = v14;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v2 = v14 + 1;
          if (__OFADD__(v14, 1)) {
            goto LABEL_28;
          }
          if (v2 >= v8) {
            break;
          }
          unint64_t v13 = *(void *)(v4 + 8 * v2);
          ++v14;
          if (v13) {
            goto LABEL_22;
          }
        }
      }
    }
LABEL_26:
    swift_release();
    return;
  }
  __break(1u);
LABEL_28:
  __break(1u);
}

uint64_t sub_1002450A4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100032974(v0, qword_1006A0490);
  sub_10003293C(v0, (uint64_t)qword_1006A0490);
  return static Logger.archiving.getter();
}

unint64_t sub_1002450F0(char a1)
{
  unint64_t result = 0x6E65644965707974;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x696669746E656469;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0x6954746E65726170;
      break;
    case 4:
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    case 6:
      unint64_t result = 0xD000000000000018;
      break;
    case 7:
      unint64_t result = 0x6C6946616964656DLL;
      break;
    case 8:
      unint64_t result = 0x4164657461657263;
      break;
    case 9:
      unint64_t result = 0x6465696669646F6DLL;
      break;
    case 10:
      unint64_t result = 1635017060;
      break;
    case 11:
      unint64_t result = 0x656C746974;
      break;
    case 12:
      unint64_t result = 0x73646E756F62;
      break;
    case 13:
      unint64_t result = 0x676E6970706F7263;
      break;
    case 14:
      unint64_t result = 0x7461746E6569726FLL;
      break;
    case 15:
      unint64_t result = 0x6C69466567616D69;
      break;
    case 16:
      unint64_t result = 7107189;
      break;
    case 17:
      unint64_t result = 0x4474657070696E73;
      break;
    case 18:
      unint64_t result = 0x616E6964726F6F63;
      break;
    case 19:
      unint64_t result = 1937207154;
      break;
    case 20:
      unint64_t result = 0x5474686769527369;
      break;
    case 21:
      unint64_t result = 0xD000000000000018;
      break;
    case 22:
      unint64_t result = 0x65746F75516C7275;
      break;
    case 23:
      unint64_t result = 0xD000000000000011;
      break;
    case 24:
      unint64_t result = 0x6365526F69647561;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100245420(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10002F214(&qword_1006A0610);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10015E154(a1, a1[3]);
  sub_10024E9B0();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v25) = *v3;
  char v31 = 0;
  sub_10024EA04();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    LOBYTE(v25) = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v25) = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v25) = 3;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v25) = 4;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v25) = 5;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v25) = 6;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v25) = 7;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    int64_t v9 = (int *)type metadata accessor for ICAttachmentArchiveModel();
    LOBYTE(v25) = 8;
    type metadata accessor for Date();
    sub_10024F628(&qword_10069FAD0, (void (*)(uint64_t))&type metadata accessor for Date);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v25) = 9;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    long long v25 = *(_OWORD *)&v3[v9[14]];
    char v31 = 10;
    sub_10017326C();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v25) = 11;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    unint64_t v10 = &v3[v9[16]];
    char v11 = v10[32];
    long long v12 = *((_OWORD *)v10 + 1);
    long long v25 = *(_OWORD *)v10;
    long long v26 = v12;
    LOBYTE(v27) = v11;
    char v31 = 12;
    type metadata accessor for CGRect(0);
    sub_10024F628(&qword_1006A0628, type metadata accessor for CGRect);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    unint64_t v13 = &v3[v9[17]];
    char v14 = v13[64];
    long long v15 = *((_OWORD *)v13 + 1);
    long long v25 = *(_OWORD *)v13;
    long long v26 = v15;
    long long v16 = *((_OWORD *)v13 + 3);
    long long v27 = *((_OWORD *)v13 + 2);
    long long v28 = v16;
    LOBYTE(v29) = v14;
    char v31 = 13;
    sub_10024EA58();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v25) = v3[v9[18]];
    char v31 = 14;
    sub_10024EAAC();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v25) = v3[v9[19]];
    char v31 = 15;
    sub_10024EB00();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v25) = 16;
    type metadata accessor for URL();
    sub_10024F628(&qword_10069D888, (void (*)(uint64_t))&type metadata accessor for URL);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    long long v25 = *(_OWORD *)&v3[v9[21]];
    char v31 = 17;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    unint64_t v17 = &v3[v9[22]];
    char v18 = v17[16];
    long long v25 = *(_OWORD *)v17;
    LOBYTE(v26) = v18;
    char v31 = 18;
    sub_10024EB54();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    *(void *)&long long v25 = *(void *)&v3[v9[23]];
    char v31 = 19;
    sub_10002F214(&qword_1006A0650);
    sub_10024EBE4(&qword_1006A0658, &qword_1006A0650, (void (*)(void))sub_10024EBA8);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v25) = 20;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    *(void *)&long long v25 = *(void *)&v3[v9[25]];
    char v31 = 21;
    sub_10002F214(&qword_10069FCC8);
    sub_10024EF80(&qword_1006A0670);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v25) = 22;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v25) = v3[v9[27]];
    char v31 = 23;
    sub_10024ECA4();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    Swift::Int v19 = &v3[v9[28]];
    uint64_t v20 = *((void *)v19 + 8);
    char v21 = v19[72];
    long long v22 = *((_OWORD *)v19 + 1);
    long long v25 = *(_OWORD *)v19;
    long long v26 = v22;
    long long v23 = *((_OWORD *)v19 + 3);
    long long v27 = *((_OWORD *)v19 + 2);
    long long v28 = v23;
    uint64_t v29 = v20;
    char v30 = v21;
    char v31 = 24;
    sub_10024ECF8();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100245C30@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  v98 = a1;
  uint64_t v78 = a2;
  uint64_t v2 = sub_10002F214(&qword_10069B310);
  __chkstk_darwin(v2 - 8);
  uint64_t v77 = (uint64_t)&v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v80 = (uint64_t)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v83 = (char *)&v73 - v7;
  uint64_t v84 = sub_10002F214(&qword_1006A0688);
  uint64_t v82 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  *(void *)&long long v97 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ICAttachmentArchiveModel();
  unint64_t v10 = (int *)(v9 - 8);
  __chkstk_darwin(v9);
  long long v12 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *long long v12 = 4;
  *(_OWORD *)(v12 + 40) = 0u;
  *(_OWORD *)(v12 + 24) = 0u;
  *((_WORD *)v12 + 28) = 514;
  *((_OWORD *)v12 + 4) = 0u;
  *((_OWORD *)v12 + 5) = 0u;
  unint64_t v13 = &v12[v10[14]];
  uint64_t v14 = type metadata accessor for Date();
  long long v15 = *(void (**)(void))(*(void *)(v14 - 8) + 56);
  *(void *)&long long v96 = v13;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v15)(v13, 1, 1, v14);
  *(void *)&long long v94 = &v12[v10[15]];
  uint64_t v81 = v14;
  v15();
  long long v16 = &v12[v10[16]];
  long long v95 = xmmword_10052D4D0;
  *(void *)&long long v93 = v16;
  *(_OWORD *)long long v16 = xmmword_10052D4D0;
  unint64_t v17 = &v12[v10[17]];
  *(void *)unint64_t v17 = 0;
  *((void *)v17 + 1) = 0;
  v92 = v17;
  char v18 = &v12[v10[18]];
  *(_OWORD *)char v18 = 0u;
  *((_OWORD *)v18 + 1) = 0u;
  v18[32] = 1;
  Swift::Int v19 = &v12[v10[19]];
  *((_OWORD *)v19 + 2) = 0u;
  *((_OWORD *)v19 + 3) = 0u;
  *(_OWORD *)Swift::Int v19 = 0u;
  *((_OWORD *)v19 + 1) = 0u;
  v19[64] = 1;
  uint64_t v79 = v10[20];
  v12[v79] = 4;
  uint64_t v76 = v10[21];
  v12[v76] = 5;
  uint64_t v20 = (uint64_t)&v12[v10[22]];
  uint64_t v21 = type metadata accessor for URL();
  long long v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
  uint64_t v91 = v20;
  v22(v20, 1, 1, v21);
  v90 = &v12[v10[23]];
  *(_OWORD *)v90 = v95;
  long long v23 = &v12[v10[24]];
  *(void *)long long v23 = 0;
  *((void *)v23 + 1) = 0;
  v23[16] = 1;
  uint64_t v89 = v10[25];
  *(void *)&v12[v89] = 0;
  uint64_t v24 = v10[26];
  v12[v24] = 2;
  uint64_t v87 = v10[27];
  *(void *)&v12[v87] = 0;
  long long v25 = &v12[v10[28]];
  *(void *)long long v25 = 0;
  *((void *)v25 + 1) = 0;
  v88 = v25;
  uint64_t v26 = v10[29];
  v12[v26] = 3;
  uint64_t v27 = v10[30];
  *(void *)&long long v95 = v12;
  long long v28 = &v12[v27];
  *(_OWORD *)long long v28 = xmmword_10052CE20;
  *((_OWORD *)v28 + 1) = 0u;
  *((_OWORD *)v28 + 2) = 0u;
  *((_OWORD *)v28 + 3) = 0u;
  v86 = (uint64_t *)&v12[v27];
  *(_OWORD *)(v28 + 57) = 0u;
  sub_10015E154(v98, v98[3]);
  sub_10024E9B0();
  uint64_t v29 = v85;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v29)
  {
    sub_100018FE8((uint64_t)v98);
    id v32 = v86;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10002B754(v96, (uint64_t *)&unk_1006A3E20);
    sub_10002B754(v94, (uint64_t *)&unk_1006A3E20);
    sub_1001A3F54(*(void *)v93, *(void *)(v93 + 8));
    swift_bridgeObjectRelease();
    sub_10002B754(v91, &qword_10069B310);
    sub_1001A3F54(*(void *)v90, *((void *)v90 + 1));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_10024BF50(*v32, v32[1], v32[2], v32[3], v32[4]);
  }
  else
  {
    uint64_t v30 = (uint64_t)v83;
    v85 = v19;
    uint64_t v74 = v23;
    uint64_t v75 = v24;
    uint64_t v31 = v82;
    char v105 = 0;
    sub_10024ED4C();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v33 = v95;
    *(unsigned char *)long long v95 = v99;
    LOBYTE(v99) = 1;
    *(void *)(v33 + 8) = KeyedDecodingContainer.decode(_:forKey:)();
    *(void *)(v33 + 16) = v34;
    LOBYTE(v99) = 2;
    *(void *)(v33 + 24) = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    *(void *)(v33 + 32) = v35;
    LOBYTE(v99) = 3;
    *(void *)(v33 + 40) = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    *(void *)(v33 + 48) = v36;
    LOBYTE(v99) = 4;
    *(unsigned char *)(v33 + 56) = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    LOBYTE(v99) = 5;
    *(unsigned char *)(v33 + 57) = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    LOBYTE(v99) = 6;
    *(void *)(v33 + 64) = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    *(void *)(v33 + 72) = v37;
    LOBYTE(v99) = 7;
    *(void *)(v33 + 80) = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    *(void *)(v33 + 88) = v38;
    LOBYTE(v99) = 8;
    uint64_t v73 = sub_10024F628(&qword_10069FA08, (void (*)(uint64_t))&type metadata accessor for Date);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    sub_10002B660(v30, v96, (uint64_t *)&unk_1006A3E20);
    LOBYTE(v99) = 9;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    sub_10002B660(v80, v94, (uint64_t *)&unk_1006A3E20);
    char v105 = 10;
    sub_100173218();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    long long v39 = v99;
    uint64_t v40 = (_OWORD *)v93;
    sub_1001A3F54(*(void *)v93, *(void *)(v93 + 8));
    *uint64_t v40 = v39;
    LOBYTE(v99) = 11;
    uint64_t v41 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v43 = v42;
    uint64_t v44 = (uint64_t *)v92;
    swift_bridgeObjectRelease();
    *uint64_t v44 = v41;
    v44[1] = v43;
    type metadata accessor for CGRect(0);
    char v105 = 12;
    sub_10024F628(&qword_1006A0698, type metadata accessor for CGRect);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    char v45 = v101;
    long long v46 = v100;
    *(_OWORD *)char v18 = v99;
    *((_OWORD *)v18 + 1) = v46;
    v18[32] = v45;
    char v105 = 13;
    sub_10024EDA0();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    char v47 = v103;
    long long v48 = v100;
    v49 = v85;
    *(_OWORD *)v85 = v99;
    *((_OWORD *)v49 + 1) = v48;
    long long v50 = v102;
    *((_OWORD *)v49 + 2) = v101;
    *((_OWORD *)v49 + 3) = v50;
    v49[64] = v47;
    char v105 = 14;
    sub_10024EDF4();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    *(unsigned char *)(v95 + v79) = v99;
    char v105 = 15;
    sub_10024EE48();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    *(unsigned char *)(v95 + v76) = v99;
    LOBYTE(v99) = 16;
    sub_10024F628(&qword_10069D840, (void (*)(uint64_t))&type metadata accessor for URL);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    sub_10002B660(v77, v91, &qword_10069B310);
    char v105 = 17;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    long long v51 = v99;
    uint64_t v52 = v90;
    sub_1001A3F54(*(void *)v90, *((void *)v90 + 1));
    *(_OWORD *)uint64_t v52 = v51;
    char v105 = 18;
    sub_10024EE9C();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    char v53 = v100;
    v54 = v74;
    *(_OWORD *)uint64_t v74 = v99;
    v54[16] = v53;
    sub_10002F214(&qword_1006A0650);
    char v105 = 19;
    sub_10024EBE4(&qword_1006A06C0, &qword_1006A0650, (void (*)(void))sub_10024EEF0);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v55 = v99;
    uint64_t v56 = v89;
    uint64_t v57 = v95;
    swift_bridgeObjectRelease();
    *(void *)(v57 + v56) = v55;
    LOBYTE(v99) = 20;
    *(unsigned char *)(v95 + v75) = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    sub_10002F214(&qword_10069FCC8);
    char v105 = 21;
    sub_10024EF80(&qword_1006A06D8);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v58 = v99;
    uint64_t v59 = v87;
    uint64_t v60 = v95;
    swift_bridgeObjectRelease();
    *(void *)(v60 + v59) = v58;
    LOBYTE(v99) = 22;
    uint64_t v61 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v63 = v62;
    v64 = (uint64_t *)v88;
    swift_bridgeObjectRelease();
    uint64_t *v64 = v61;
    v64[1] = v63;
    char v105 = 23;
    sub_10024EFE4();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    *(unsigned char *)(v95 + v26) = v99;
    char v105 = 24;
    sub_10024F038();
    uint64_t v65 = v84;
    uint64_t v66 = v97;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v66, v65);
    long long v96 = v100;
    long long v97 = v99;
    long long v94 = v101;
    long long v93 = v102;
    uint64_t v67 = v103;
    LOBYTE(v66) = v104;
    uint64_t v68 = v86;
    sub_10024BF50(*v86, v86[1], v86[2], v86[3], v86[4]);
    long long v69 = v96;
    *(_OWORD *)uint64_t v68 = v97;
    *((_OWORD *)v68 + 1) = v69;
    long long v70 = v93;
    *((_OWORD *)v68 + 2) = v94;
    *((_OWORD *)v68 + 3) = v70;
    v68[8] = v67;
    *((unsigned char *)v68 + 72) = v66;
    uint64_t v71 = v95;
    sub_10024F08C(v95, v78);
    sub_100018FE8((uint64_t)v98);
    return sub_10024F0F0(v71);
  }
}

unint64_t sub_100246B30()
{
  return sub_1002450F0(*v0);
}

uint64_t sub_100246B38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10024AF30(a1, a2);
  *a3 = result;
  return result;
}

void sub_100246B60(unsigned char *a1@<X8>)
{
  *a1 = 25;
}

uint64_t sub_100246B6C(uint64_t a1)
{
  unint64_t v2 = sub_10024E9B0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100246BA8(uint64_t a1)
{
  unint64_t v2 = sub_10024E9B0();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100246BE4(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v151 = a2;
  uint64_t v5 = sub_10002F214(&qword_10069B310);
  __chkstk_darwin(v5 - 8);
  v150 = (char *)&v131 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  v144 = (char *)&v131 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v131 - v10;
  *(unsigned char *)a3 = 4;
  *(_OWORD *)(a3 + 24) = 0u;
  *(_OWORD *)(a3 + 40) = 0u;
  *(_WORD *)(a3 + 56) = 514;
  long long v12 = (int *)type metadata accessor for ICAttachmentArchiveModel();
  uint64_t v13 = a3 + v12[12];
  uint64_t v14 = type metadata accessor for Date();
  long long v15 = *(void (**)(void))(*(void *)(v14 - 8) + 56);
  uint64_t v141 = v13;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v15)(v13, 1, 1, v14);
  uint64_t v142 = a3 + v12[13];
  v143 = v15;
  v15();
  long long v16 = (uint64_t *)(a3 + v12[14]);
  long long v149 = xmmword_10052D4D0;
  v132 = v16;
  *(_OWORD *)long long v16 = xmmword_10052D4D0;
  unint64_t v17 = (uint64_t *)(a3 + v12[15]);
  uint64_t *v17 = 0;
  v17[1] = 0;
  v152 = v17;
  uint64_t v18 = a3 + v12[16];
  *(_OWORD *)uint64_t v18 = 0u;
  *(_OWORD *)(v18 + 16) = 0u;
  *(unsigned char *)(v18 + 32) = 1;
  uint64_t v19 = a3 + v12[17];
  *(_OWORD *)(v19 + 32) = 0u;
  *(_OWORD *)(v19 + 48) = 0u;
  *(_OWORD *)uint64_t v19 = 0u;
  *(_OWORD *)(v19 + 16) = 0u;
  *(unsigned char *)(v19 + 64) = 1;
  uint64_t v145 = v12[18];
  *(unsigned char *)(a3 + v145) = 4;
  uint64_t v146 = v12[19];
  *(unsigned char *)(a3 + v146) = 5;
  uint64_t v20 = a3 + v12[20];
  uint64_t v21 = type metadata accessor for URL();
  uint64_t v22 = *(void *)(v21 - 8);
  long long v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
  uint64_t v147 = v20;
  uint64_t v136 = v21;
  v135 = v23;
  uint64_t v134 = v22 + 56;
  ((void (*)(uint64_t, uint64_t, uint64_t))v23)(v20, 1, 1);
  v148 = (uint64_t *)(a3 + v12[21]);
  *(_OWORD *)v148 = v149;
  uint64_t v24 = a3 + v12[22];
  *(void *)uint64_t v24 = 0;
  *(void *)(v24 + 8) = 0;
  v138 = (void *)v24;
  *(unsigned char *)(v24 + 16) = 1;
  uint64_t v139 = v12[23];
  *(void *)(a3 + v139) = 0;
  uint64_t v140 = v12[24];
  *(unsigned char *)(a3 + v140) = 2;
  uint64_t v133 = v12[25];
  *(void *)(a3 + v133) = 0;
  long long v25 = (void *)(a3 + v12[26]);
  *long long v25 = 0;
  v25[1] = 0;
  *(void *)&long long v149 = v25;
  uint64_t v137 = v12[27];
  *(unsigned char *)(a3 + v137) = 3;
  uint64_t v26 = (_OWORD *)(a3 + v12[28]);
  *uint64_t v26 = xmmword_10052CE20;
  v26[1] = 0u;
  v26[2] = 0u;
  v26[3] = 0u;
  v131 = (uint64_t *)v26;
  *(_OWORD *)((char *)v26 + 57) = 0u;
  id v27 = [a1 identifier];
  if (v27)
  {
    long long v28 = v27;
    uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v31 = v30;
  }
  else
  {
    uint64_t v29 = 0;
    unint64_t v31 = 0xE000000000000000;
  }
  *(void *)(a3 + 8) = v29;
  *(void *)(a3 + 16) = v31;
  id v32 = [a1 typeUTI];
  if (v32)
  {
    uint64_t v33 = v32;
    uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v36 = v35;
  }
  else
  {
    uint64_t v34 = 0;
    uint64_t v36 = 0;
  }
  uint64_t v37 = v143;
  *(void *)(a3 + 64) = v34;
  *(void *)(a3 + 72) = v36;
  id v38 = a1;
  uint64_t v39 = sub_10024AC04(v38);
  uint64_t v41 = v40;

  *(void *)(a3 + 80) = v39;
  *(void *)(a3 + 88) = v41;
  id v42 = [v38 creationDate];
  if (v42)
  {
    uint64_t v43 = v42;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v44 = 0;
  }
  else
  {
    uint64_t v44 = 1;
  }
  uint64_t v45 = (uint64_t)v144;
  uint64_t v46 = 1;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v37)(v11, v44, 1, v14);
  sub_10002B660((uint64_t)v11, v141, (uint64_t *)&unk_1006A3E20);
  id v47 = [v38 modificationDate];
  if (v47)
  {
    long long v48 = v47;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v46 = 0;
  }
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v37)(v45, v46, 1, v14);
  sub_10002B660(v45, v142, (uint64_t *)&unk_1006A3E20);
  id v49 = [v38 title];
  if (v49)
  {
    long long v50 = v49;
    uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v53 = v52;
  }
  else
  {
    uint64_t v51 = 0;
    uint64_t v53 = 0;
  }
  v54 = v152;
  swift_bridgeObjectRelease();
  uint64_t *v54 = v51;
  v54[1] = v53;
  [v38 bounds];
  uint64_t v55 = 0;
  v156.origin.x = 0.0;
  v156.origin.y = 0.0;
  v156.size.width = 0.0;
  v156.size.height = 0.0;
  BOOL v56 = CGRectEqualToRect(v155, v156);
  uint64_t v57 = 0;
  uint64_t v58 = 0;
  uint64_t v59 = 0;
  if (!v56)
  {
    [v38 bounds];
    uint64_t v55 = v60;
  }
  *(void *)uint64_t v18 = v55;
  *(void *)(v18 + 8) = v57;
  *(void *)(v18 + 16) = v58;
  *(void *)(v18 + 24) = v59;
  *(unsigned char *)(v18 + 32) = v56;
  id v61 = v38;
  sub_10024B9BC(v61, (uint64_t)v153);

  sub_10002F1B0((uint64_t)v153, v19, &qword_1006A04A8);
  *(unsigned char *)(a3 + v145) = sub_10024BB9C((int)[v61 orientation]);
  unsigned int v62 = [v61 imageFilterType];
  unint64_t v63 = 0x403020105uLL >> (8 * v62);
  if (v62 >= 5) {
    LOBYTE(v63) = 5;
  }
  *(unsigned char *)(a3 + v146) = v63;
  id v64 = [v61 urlString];
  if (v64)
  {
    uint64_t v65 = v64;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    swift_bridgeObjectRetain();
    uint64_t v66 = (uint64_t)v150;
    URL.init(string:)();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v66 = (uint64_t)v150;
    v135(v150, 1, 1, v136);
  }
  uint64_t v67 = v151;
  sub_10002B660(v66, v147, &qword_10069B310);
  id v68 = [v61 synapseData];
  if (v68)
  {
    long long v69 = v68;
    uint64_t v70 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v72 = v71;
  }
  else
  {
    uint64_t v70 = 0;
    unint64_t v72 = 0xF000000000000000;
  }
  uint64_t v73 = v148;
  sub_1001A3F54(*v148, v148[1]);
  *uint64_t v73 = v70;
  v73[1] = v72;
  id v74 = [v61 synapseBasedMetadata];
  uint64_t v75 = v74;
  if (v74)
  {
    id v76 = [v74 selectedText];

    if (v76)
    {
      uint64_t v75 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v78 = v77;

      goto LABEL_30;
    }
    uint64_t v75 = 0;
  }
  uint64_t v78 = 0;
LABEL_30:
  uint64_t v79 = (void *)v149;
  swift_bridgeObjectRelease();
  *uint64_t v79 = v75;
  v79[1] = v78;
  id v80 = [v61 mergeablePreferredViewSize];
  if (v80)
  {
    uint64_t v81 = v80;
    uint64_t v82 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v84 = v83;

    sub_10017253C(v82, v84);
    char v85 = sub_1004B793C((uint64_t)[v61 preferredViewSize]);
    *(unsigned char *)(a3 + v137) = v85;
  }
  id v86 = [v61 location];
  if (v86)
  {
    uint64_t v87 = v86;
    [v86 latitude];
    uint64_t v89 = v88;
    [v87 longitude];
    uint64_t v91 = v90;

    v92 = v138;
    void *v138 = v89;
    v92[1] = v91;
    *((unsigned char *)v92 + 16) = 0;
  }
  id v93 = [v61 tableModel];
  if (v93)
  {
    long long v94 = v93;
    uint64_t v95 = sub_10024BCEC(v93, v67);
    uint64_t v96 = v139;
    swift_bridgeObjectRelease();
    *(void *)(a3 + v96) = v95;
    id v97 = [v94 table];
    LOBYTE(v96) = [v97 isRightToLeft];

    sub_10024BEBC((void *)v67, (void (*)(void, void, void, void, void, void))sub_10024BC98);
    *(unsigned char *)(a3 + v140) = v96;
    if ((*(unsigned char *)(v67 + 51) & 1) == 0)
    {
LABEL_36:

      return;
    }
  }
  else
  {
    id v98 = [v61 attachmentModel];
    self;
    long long v99 = (void *)swift_dynamicCastObjCClass();
    if (v99)
    {
      id v100 = [v99 subAttachmentIdentifiers];
      uint64_t v101 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v102 = v133;
      swift_bridgeObjectRelease();
      sub_10024BEBC((void *)v67, (void (*)(void, void, void, void, void, void))sub_10024BC98);
      *(void *)(a3 + v102) = v101;
      if ((*(unsigned char *)(v67 + 51) & 1) == 0) {
        goto LABEL_36;
      }
    }
    else
    {

      id v108 = [v61 audioModel];
      if (!v108) {
        goto LABEL_58;
      }
      v109 = v108;
      id v110 = [v108 audioDocument];

      if (!v110)
      {
        __break(1u);
        return;
      }
      v111 = (void *)ICTTAudioDocument.root.getter();

      if (v111)
      {
        id v112 = v61;
        sub_10024BEBC((void *)v67, (void (*)(void, void, void, void, void, void))sub_10024BEFC);
        sub_10048027C(v111, v112, (void *)v67, (uint64_t)v154);
        uint64_t v113 = (uint64_t)v131;
        sub_10024BF50(*v131, v131[1], v131[2], v131[3], v131[4]);
        sub_10024BEBC((void *)v67, (void (*)(void, void, void, void, void, void))sub_10024BC98);
        sub_10002F1B0((uint64_t)v154, v113, &qword_1006A04B0);
        if ((*(unsigned char *)(v67 + 51) & 1) == 0) {
          goto LABEL_36;
        }
      }
      else
      {
LABEL_58:
        id v125 = [v61 mergeableData];
        if (v125)
        {
          v126 = v125;
          uint64_t v127 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v129 = v128;
        }
        else
        {
          uint64_t v127 = 0;
          unint64_t v129 = 0xF000000000000000;
        }
        v130 = v132;
        sub_1001A3F54(*v132, v132[1]);
        sub_10024BEBC((void *)v67, (void (*)(void, void, void, void, void, void))sub_10024BC98);
        uint64_t *v130 = v127;
        v130[1] = v129;
        if ((*(unsigned char *)(v67 + 51) & 1) == 0) {
          goto LABEL_36;
        }
      }
    }
  }
  id v103 = [v61 note];
  char v104 = v103;
  if (v103)
  {
    id v105 = [v103 identifier];

    if (v105)
    {
      char v104 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v107 = v106;

      goto LABEL_49;
    }
    char v104 = 0;
  }
  uint64_t v107 = 0;
LABEL_49:
  swift_bridgeObjectRelease();
  *(void *)(a3 + 24) = v104;
  *(void *)(a3 + 32) = v107;
  id v114 = [v61 note];
  v115 = v114;
  if (!v114)
  {
LABEL_53:
    uint64_t v118 = 0;
    goto LABEL_54;
  }
  id v116 = [v114 title];

  if (!v116)
  {
    v115 = 0;
    goto LABEL_53;
  }
  v115 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v118 = v117;

LABEL_54:
  swift_bridgeObjectRelease();
  *(void *)(a3 + 40) = v115;
  *(void *)(a3 + 48) = v118;
  id v119 = [v61 title];
  if (v119)
  {
    v120 = v119;
    uint64_t v121 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v123 = v122;
  }
  else
  {
    uint64_t v121 = 0;
    uint64_t v123 = 0;
  }
  swift_bridgeObjectRelease();
  uint64_t *v54 = v121;
  v54[1] = v123;
  *(unsigned char *)(a3 + 56) = [v61 markedForDeletion];
  unsigned __int8 v124 = [v61 isPasswordProtected];

  *(unsigned char *)(a3 + 57) = v124;
}

uint64_t type metadata accessor for ICAttachmentArchiveModel()
{
  uint64_t result = qword_1006A0530;
  if (!qword_1006A0530) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100247898@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100245C30(a1, a2);
}

uint64_t sub_1002478B0(void *a1)
{
  return sub_100245420(a1);
}

uint64_t sub_1002478C8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void **a6)
{
  long long v28 = a6;
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  long long v12 = (char *)&aBlock[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v30 = _swiftEmptyArrayStorage;
  id v13 = [a4 table];
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v15 = (v11 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  long long v16 = (void *)((v15 + 60) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a4;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v17 + v14, v12, v9);
  unint64_t v18 = v17 + v15;
  long long v19 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)unint64_t v18 = *(_OWORD *)a5;
  *(_OWORD *)(v18 + 16) = v19;
  *(_OWORD *)(v18 + 32) = *(_OWORD *)(a5 + 32);
  *(void *)(v18 + 45) = *(void *)(a5 + 45);
  *(void *)((char *)v16 + v17) = &v30;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_10024C198;
  *(void *)(v20 + 24) = v17;
  aBlock[4] = sub_10025046C;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100247EF0;
  aBlock[3] = &unk_100631500;
  uint64_t v21 = _Block_copy(aBlock);
  uint64_t v22 = a4;
  sub_10024BEBC((void *)a5, (void (*)(void, void, void, void, void, void))sub_10024BEFC);
  swift_retain();
  swift_release();
  [v13 enumerateColumnsWithBlock:v21];

  _Block_release(v21);
  uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    uint64_t isEscapingClosureAtFileLocation = (uint64_t)v30;
    long long v16 = v28;
    a4 = *v28;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *long long v16 = a4;
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_3;
    }
  }
  a4 = sub_1001A86E4(0, a4[2] + 1, 1, a4);
  *long long v16 = a4;
LABEL_3:
  unint64_t v26 = a4[2];
  unint64_t v25 = a4[3];
  if (v26 >= v25 >> 1)
  {
    a4 = sub_1001A86E4((void *)(v25 > 1), v26 + 1, 1, a4);
    *long long v16 = a4;
  }
  a4[2] = v26 + 1;
  a4[v26 + 4] = isEscapingClosureAtFileLocation;
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_100247C0C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void *a6, void **a7)
{
  uint64_t v10 = sub_10002F214((uint64_t *)&unk_10069C990);
  __chkstk_darwin(v10 - 8);
  long long v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = [a4 table];
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  Class v15 = UUID._bridgeToObjectiveC()().super.isa;
  id v16 = [v13 mergeableStringForColumnID:isa rowID:v15];

  if (!v16)
  {
    UUID.init()();
    uint64_t v17 = type metadata accessor for UUID();
    uint64_t v18 = *(void *)(v17 - 8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v12, 0, 1, v17);
    Class v19 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v12, 1, v17) != 1)
    {
      Class v19 = UUID._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v18 + 8))(v12, v17);
    }
    id v16 = [objc_allocWithZone((Class)ICTTMergeableAttributedString) initWithReplicaID:v19];
  }
  id v20 = [a4 attachment];
  if (v20)
  {
    uint64_t v21 = v20;
    sub_10024BEBC(a6, (void (*)(void, void, void, void, void, void))sub_10024BEFC);
    id v22 = v16;
    id v23 = sub_1002CB494(v22, v21, (uint64_t)a6);
    uint64_t v25 = v24;
    uint64_t v27 = v26;
    sub_10024BEBC(a6, (void (*)(void, void, void, void, void, void))sub_10024BC98);
    long long v28 = *a7;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a7 = v28;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      long long v28 = sub_1001A8814(0, v28[2] + 1, 1, v28);
      *a7 = v28;
    }
    unint64_t v31 = v28[2];
    unint64_t v30 = v28[3];
    if (v31 >= v30 >> 1)
    {
      long long v28 = sub_1001A8814((void *)(v30 > 1), v31 + 1, 1, v28);
      *a7 = v28;
    }
    v28[2] = v31 + 1;
    id v32 = &v28[3 * v31];
    v32[4] = v23;
    v32[5] = v25;
    v32[6] = v27;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100247EF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(a1 + 32);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();
  v11(v10, a3, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

id sub_100247FF4(double a1, uint64_t a2, uint64_t a3, int a4, int *a5, void *a6)
{
  uint64_t v77 = a6;
  uint64_t v7 = v6;
  id v76 = a5;
  LODWORD(v75) = a4;
  id v74 = (char *)a3;
  uint64_t v9 = sub_10002F214(&qword_10069B310);
  __chkstk_darwin(v9 - 8);
  uint64_t v73 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  unint64_t v14 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  id v16 = (char *)&v69 - v15;
  uint64_t v17 = type metadata accessor for Date();
  uint64_t v72 = *(void *)(v17 - 8);
  uint64_t v18 = __chkstk_darwin(v17);
  id v20 = (char *)&v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v18);
  id v23 = (char *)&v69 - v22;
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v26 = (char *)&v69 - v25;
  __chkstk_darwin(v24);
  long long v28 = (char *)&v69 - v27;
  uint64_t ObjectType = swift_getObjectType();
  id v30 = v78;
  unint64_t v31 = (void *)(*((uint64_t (**)(void, void, uint64_t, int *, void *, uint64_t, double))v74 + 5))(v7[1], v7[2], v75 & 0x101, v76, v77, ObjectType, a1);
  id v32 = v31;
  if (!v30)
  {
    long long v69 = v26;
    uint64_t v70 = v28;
    uint64_t v33 = v72;
    unint64_t v71 = v20;
    id v78 = v31;
    id v74 = v14;
    uint64_t v75 = 0;
    if (v7[9]) {
      NSString v34 = String._bridgeToObjectiveC()();
    }
    else {
      NSString v34 = 0;
    }
    uint64_t v35 = v23;
    [v78 setTypeUTI:v34, v69];

    id v76 = (int *)type metadata accessor for ICAttachmentArchiveModel();
    uint64_t v77 = v7;
    uint64_t v36 = (uint64_t)v16;
    sub_10002F034((uint64_t)v7 + v76[12], (uint64_t)v16, (uint64_t *)&unk_1006A3E20);
    uint64_t v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
    uint64_t v38 = v17;
    if (v37(v16, 1, v17) == 1)
    {
      uint64_t v39 = v69;
      Date.init()();
      sub_10002B754(v36, (uint64_t *)&unk_1006A3E20);
    }
    else
    {
      uint64_t v39 = v69;
      (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v69, v36, v17);
    }
    uint64_t v40 = v70;
    static Date.+ infix(_:_:)();
    uint64_t v41 = *(void (**)(char *, uint64_t))(v33 + 8);
    v41(v39, v38);
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    v41(v40, v38);
    [v78 setCreationDate:isa];

    uint64_t v43 = (uint64_t)v74;
    sub_10002F034((uint64_t)v77 + v76[13], (uint64_t)v74, (uint64_t *)&unk_1006A3E20);
    if (v37((char *)v43, 1, v38) == 1)
    {
      uint64_t v44 = v71;
      Date.init()();
      sub_10002B754(v43, (uint64_t *)&unk_1006A3E20);
    }
    else
    {
      uint64_t v44 = v71;
      (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v71, v43, v38);
    }
    static Date.+ infix(_:_:)();
    v41(v44, v38);
    Class v45 = Date._bridgeToObjectiveC()().super.isa;
    v41(v35, v38);
    id v32 = v78;
    [v78 setModificationDate:v45];

    id v47 = v76;
    uint64_t v46 = v77;
    if (*(void *)((char *)v77 + v76[15] + 8)) {
      NSString v48 = String._bridgeToObjectiveC()();
    }
    else {
      NSString v48 = 0;
    }
    uint64_t v49 = (uint64_t)v73;
    [v32 setTitle:v48];

    uint64_t v50 = (uint64_t)v46 + v47[16];
    double v51 = 0.0;
    double v52 = 0.0;
    double v53 = 0.0;
    double v54 = 0.0;
    if ((*(unsigned char *)(v50 + 32) & 1) == 0)
    {
      double v51 = *(double *)(v50 + 16);
      double v52 = *(double *)(v50 + 24);
      double v53 = *(double *)v50;
      double v54 = *(double *)(v50 + 8);
    }
    [v32 setBounds:v53, v54, v51, v52];
    uint64_t v55 = (uint64_t)v46 + v47[17];
    if ((*(unsigned char *)(v55 + 64) & 1) == 0)
    {
      double v57 = *(double *)(v55 + 48);
      double v56 = *(double *)(v55 + 56);
      double v59 = *(double *)(v55 + 32);
      double v58 = *(double *)(v55 + 40);
      double v61 = *(double *)(v55 + 16);
      double v60 = *(double *)(v55 + 24);
      double v62 = *(double *)(v55 + 8);
      [v32 setCroppingQuadTopLeftX:*(double *)v55];
      [v32 setCroppingQuadTopLeftY:v62];
      [v32 setCroppingQuadTopRightX:v61];
      [v32 setCroppingQuadTopRightY:v60];
      [v32 setCroppingQuadBottomRightX:v59];
      [v32 setCroppingQuadBottomRightY:v58];
      [v32 setCroppingQuadBottomLeftX:v57];
      [v32 setCroppingQuadBottomLeftY:v56];
    }
    [v32 setOrientation:word_10052DD56[*((char *)v46 + v47[18])]];
    [v32 setImageFilterType:word_10052DD60[*((char *)v46 + v47[19])]];
    sub_10002F034((uint64_t)v46 + v47[20], v49, &qword_10069B310);
    uint64_t v63 = type metadata accessor for URL();
    uint64_t v64 = *(void *)(v63 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v49, 1, v63) == 1)
    {
      sub_10002B754(v49, &qword_10069B310);
      NSString v65 = 0;
    }
    else
    {
      URL.absoluteString.getter();
      (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v49, v63);
      id v32 = v78;
      NSString v65 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    [v32 setUrlString:v65];

    if (*(void *)((char *)v46 + v47[21] + 8) >> 60 == 15) {
      Class v66 = 0;
    }
    else {
      Class v66 = Data._bridgeToObjectiveC()().super.isa;
    }
    [v32 setSynapseData:v66];

    uint64_t v67 = 0;
    switch(*((unsigned char *)v46 + v47[27]))
    {
      case 1:
        uint64_t v67 = 1;
        goto LABEL_27;
      case 2:
        uint64_t v67 = 2;
        goto LABEL_27;
      case 3:
        return v32;
      default:
LABEL_27:
        [v32 setPreferredViewSize:v67];
        break;
    }
  }
  return v32;
}

void sub_100248780(void *a1, int64_t a2, uint64_t a3, void *a4, uint64_t a5, int a6, uint64_t a7, char *a8, double a9)
{
  v182 = a8;
  uint64_t v181 = a7;
  LODWORD(v186) = a6;
  uint64_t v188 = a5;
  v189 = a4;
  uint64_t v191 = a3;
  int64_t v187 = a2;
  uint64_t v11 = (char *)type metadata accessor for URL();
  id v190 = (id)*((void *)v11 - 1);
  uint64_t v12 = __chkstk_darwin(v11);
  unint64_t v14 = (char *)&v165 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v165 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  id v20 = (char *)&v165 - v19;
  uint64_t v21 = __chkstk_darwin(v18);
  id v23 = (char *)&v165 - v22;
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v26 = (char *)&v165 - v25;
  __chkstk_darwin(v24);
  long long v28 = (char *)&v165 - v27;
  id v29 = [a1 attachmentModel];
  self;
  uint64_t v30 = swift_dynamicCastObjCClass();
  if (v30)
  {
    unint64_t v31 = v30;
    unint64_t v14 = (char *)v29;
    id v32 = (SEL *)[a1 managedObjectContext];
    if (v32)
    {
      uint64_t v33 = v32;
      uint64_t v34 = *(void *)(v183 + *(int *)(type metadata accessor for ICAttachmentArchiveModel() + 100));
      uint64_t v35 = v185;
      uint64_t v36 = v191;
      id v190 = v14;
      if (!v34) {
        goto LABEL_98;
      }
      swift_bridgeObjectRetain();
      uint64_t v37 = swift_bridgeObjectRetain();
      unint64_t v38 = (unint64_t)sub_10024AE00(v37, v36);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v185 = v35;
      if (v38 >> 62)
      {
LABEL_96:
        v154 = v14;
        swift_bridgeObjectRetain();
        uint64_t v39 = _CocoaArrayWrapper.endIndex.getter();
        if (v39) {
          goto LABEL_6;
        }
      }
      else
      {
        uint64_t v39 = *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t v40 = v14;
        swift_bridgeObjectRetain();
        if (v39)
        {
LABEL_6:
          if (v39 < 1)
          {
LABEL_109:
            __break(1u);
LABEL_110:
            swift_once();
LABEL_30:
            uint64_t v84 = type metadata accessor for Logger();
            sub_10003293C(v84, (uint64_t)qword_1006A0490);
            swift_errorRetain();
            swift_errorRetain();
            char v85 = Logger.logObject.getter();
            os_log_type_t v86 = static os_log_type_t.error.getter();
            BOOL v87 = os_log_type_enabled(v85, v86);
            id v88 = v176;
            if (v87)
            {
              uint64_t v89 = (uint8_t *)swift_slowAlloc();
              v193[0] = swift_slowAlloc();
              *(_DWORD *)uint64_t v89 = 136315138;
              swift_getErrorValue();
              uint64_t v90 = Error.localizedDescription.getter();
              unint64_t v192 = sub_10045DA1C(v90, v91, v193);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              swift_errorRelease();
              swift_errorRelease();
              _os_log_impl((void *)&_mh_execute_header, v85, v86, "Cannot import paper attachment database and assets — skipping {error: %s}", v89, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              swift_errorRelease();
            }
            else
            {
              swift_errorRelease();
              swift_errorRelease();
              swift_errorRelease();
            }
            return;
          }
          for (uint64_t i = 0; i != v39; ++i)
          {
            if ((v38 & 0xC000000000000001) != 0) {
              id v42 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v42 = *(id *)(v38 + 8 * i + 32);
            }
            uint64_t v43 = v42;
            [(id)v31 addSubAttachment:v42];
          }
        }
      }
      id v155 = v190;

      swift_bridgeObjectRelease_n();
LABEL_98:
      [(id)v31 writeMergeableData];
      uint64_t v156 = swift_bridgeObjectRetain();
      sub_100244ED0(v156);
      unint64_t v158 = v157;
      if (v157 >> 62)
      {
        v164 = v33;
        swift_bridgeObjectRetain();
        uint64_t v159 = _CocoaArrayWrapper.endIndex.getter();
        if (v159) {
          goto LABEL_100;
        }
      }
      else
      {
        uint64_t v159 = *(void *)((v157 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v160 = v33;
        swift_bridgeObjectRetain();
        if (v159)
        {
LABEL_100:
          if (v159 >= 1)
          {
            for (uint64_t j = 0; j != v159; ++j)
            {
              if ((v158 & 0xC000000000000001) != 0) {
                id v162 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v162 = *(id *)(v158 + 8 * j + 32);
              }
              v163 = v162;
              [(SEL *)v33 deleteObject:v162];
            }
            goto LABEL_107;
          }
          __break(1u);
          goto LABEL_109;
        }
      }
LABEL_107:

      swift_bridgeObjectRelease_n();
      return;
    }
    goto LABEL_114;
  }
  v177 = v20;
  v175 = v17;
  v174 = v14;
  v179 = v28;
  v180 = v23;
  v178 = v11;
  uint64_t v44 = v190;
  self;
  Class v45 = (void *)swift_dynamicCastObjCClass();
  if (v45)
  {
    id v184 = v45;
    unint64_t v46 = *(void *)(v183 + *(int *)(type metadata accessor for ICAttachmentArchiveModel() + 56) + 8);
    id v47 = a1;
    id v176 = v29;
    id v48 = v29;
    if (v46 >> 60 == 15) {
      Class isa = 0;
    }
    else {
      Class isa = Data._bridgeToObjectiveC()().super.isa;
    }
    long long v69 = v44;
    [v47 setMergeableData:isa];

    id v70 = v184;
    id v71 = [v184 paperBundleDatabaseSubdirectoryURL];
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    URL.lastPathComponent.getter();
    uint64_t v72 = (void (*)(char *, char *))v69[1];
    uint64_t v73 = v178;
    v72(v26, v178);
    uint64_t v74 = (uint64_t)v179;
    URL.appendingPathComponent(_:isDirectory:)();
    swift_bridgeObjectRelease();
    id v75 = [v70 paperBundleAssetsSubdirectoryURL];
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    URL.lastPathComponent.getter();
    v72(v26, v73);
    URL.appendingPathComponent(_:isDirectory:)();
    swift_bridgeObjectRelease();
    uint64_t ObjectType = swift_getObjectType();
    id v77 = [v70 paperBundleURL];
    uint64_t v78 = (uint64_t)v177;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v79 = v185;
    uint64_t v191 = ObjectType;
    dispatch thunk of ICFileManaging.createDirectory(at:withIntermediateDirectories:)();
    if (!v79)
    {
      v72((char *)v78, v73);
      id v81 = [v184 paperBundleDatabaseSubdirectoryURL];
      uint64_t v82 = v175;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      dispatch thunk of ICFileManaging.copyItem(at:to:)();
      v72(v82, v73);
      id v136 = [v184 paperBundleAssetsSubdirectoryURL];
      uint64_t v137 = v174;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v138 = (uint64_t)v180;
      dispatch thunk of ICFileManaging.copyItem(at:to:)();

      v72(v137, v73);
      v72((char *)v138, v73);
      v72(v179, v73);
      return;
    }
    uint64_t v185 = 0;
    uint64_t v80 = v78;
    uint64_t v83 = (uint64_t)v180;
    v72((char *)v80, v73);
    v72((char *)v83, v73);
    v72((char *)v74, v73);
    if (qword_10069AD80 == -1) {
      goto LABEL_30;
    }
    goto LABEL_110;
  }
  self;
  uint64_t v50 = (void *)swift_dynamicCastObjCClass();
  if (v50)
  {
    id v184 = v50;
    uint64_t v51 = type metadata accessor for ICAttachmentArchiveModel();
    uint64_t v52 = v185;
    if (!*(void *)(v183 + *(int *)(v51 + 92))) {
      return;
    }
    uint64_t v169 = *(void *)(v183 + *(int *)(v51 + 92));
    uint64_t v165 = v51;
    id v166 = v29;
    id v53 = [v184 table];
    unint64_t v54 = (unint64_t)[v53 rowCount];

    if ((v54 & 0x8000000000000000) != 0) {
      goto LABEL_112;
    }
    for (id k = v184; v54; --v54)
    {
      id v56 = [k table];
      [v56 removeRowAtIndex:0];
    }
    unint64_t v38 = (unint64_t)[k table];
    unint64_t v57 = (unint64_t)[(id)v38 columnCount];

    if ((v57 & 0x8000000000000000) != 0)
    {
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
      goto LABEL_116;
    }
    for (id m = v184; v57; --v57)
    {
      unint64_t v38 = (unint64_t)[m table];
      [(id)v38 removeColumnAtIndex:0];
    }
    id v59 = [m table];
    uint64_t v60 = v169;

    id v61 = [m table];
    uint64_t v62 = v60;
    uint64_t v63 = v61;
    uint64_t v64 = *(void *)(v60 + 16);
    uint64_t v33 = (SEL *)&selRef_setSymbolConfiguration_;
    uint64_t v167 = v64;
    if (v64)
    {
      uint64_t v66 = v62 + 32;
      uint64_t v65 = *(void *)(v62 + 32);
      uint64_t v168 = v66;

      int v170 = v186 & 0x101;
      uint64_t v67 = swift_bridgeObjectRetain();
      unint64_t v68 = 0;
      while (1)
      {
        if (v68 >= *(void *)(v67 + 16))
        {
          __break(1u);
LABEL_112:
          __break(1u);
          goto LABEL_113;
        }
        uint64_t v104 = *(void *)(v168 + 8 * v68);
        v173 = *(char **)(v104 + 16);
        if (!v173) {
          goto LABEL_38;
        }
        uint64_t v171 = v68;
        v174 = (char *)(v104 + 32);
        swift_bridgeObjectRetain();
        unint64_t v31 = 0;
        uint64_t v172 = v104;
LABEL_42:
        if (v31 >= *(void *)(v104 + 16))
        {
LABEL_95:
          __break(1u);
          goto LABEL_96;
        }
        uint64_t v185 = v52;
        id v105 = (uint64_t *)&v174[24 * v31];
        uint64_t v106 = v105[1];
        v177 = (char *)*v105;
        uint64_t v107 = v105[2];
        v180 = (char *)v106;
        swift_bridgeObjectRetain();
        v179 = (char *)v107;
        swift_bridgeObjectRetain();
        v178 = (char *)[v184 attachment];
        if (!v178) {
          goto LABEL_115;
        }
        id v176 = (id)v31;
        v175 = (char *)(v31 + 1);
        unint64_t v108 = sub_100168A4C((uint64_t)_swiftEmptyArrayStorage);
        uint64_t v33 = (SEL *)sub_10002F214(&qword_1006A04C8);
        uint64_t v109 = static _DictionaryStorage.copy(original:)();
        long long v99 = (void *)v109;
        int64_t v110 = 0;
        uint64_t v111 = 1 << *(unsigned char *)(v108 + 32);
        id v190 = (id)v108;
        uint64_t v113 = *(void *)(v108 + 64);
        unint64_t v31 = v108 + 64;
        uint64_t v112 = v113;
        unint64_t v186 = v31;
        if (v111 < 64) {
          uint64_t v114 = ~(-1 << v111);
        }
        else {
          uint64_t v114 = -1;
        }
        unint64_t v96 = v114 & v112;
        int64_t v187 = (unint64_t)(v111 + 63) >> 6;
        uint64_t v188 = v109 + 64;
        v189 = (void *)v109;
        if ((v114 & v112) != 0)
        {
LABEL_48:
          unint64_t v115 = __clz(__rbit64(v96));
          v96 &= v96 - 1;
          unint64_t v38 = v115 | (v110 << 6);
          goto LABEL_62;
        }
        while (1)
        {
          BOOL v116 = __OFADD__(v110++, 1);
          if (v116)
          {
            __break(1u);
            goto LABEL_93;
          }
          if (v110 >= v187) {
            goto LABEL_74;
          }
          unint64_t v117 = *(void *)(v186 + 8 * v110);
          if (!v117) {
            break;
          }
LABEL_61:
          unint64_t v96 = (v117 - 1) & v117;
          unint64_t v38 = __clz(__rbit64(v117)) + (v110 << 6);
LABEL_62:
          uint64_t v119 = *((void *)v190 + 7);
          v120 = (uint64_t *)(*((void *)v190 + 6) + 16 * v38);
          uint64_t v121 = v120[1];
          uint64_t v191 = *v120;
          uint64_t v122 = *(void **)(v119 + 8 * v38);
          swift_bridgeObjectRetain();
          id v123 = [v122 identifier];
          if (v123)
          {
            unsigned __int8 v124 = v123;
            static String._unconditionallyBridgeFromObjectiveC(_:)();
          }
          id v125 = [v122 typeUTI];
          if (v125)
          {
            v126 = v125;
            unint64_t v14 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v31 = v127;
          }
          else
          {
            unint64_t v14 = 0;
            unint64_t v31 = 0;
          }
          uint64_t v33 = (SEL *)sub_10024C26C();
          uint64_t v128 = ICTTAttachment.init(identifier:universalTypeIdentifier:)();
          long long v99 = v189;
          *(void *)(v188 + ((v38 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v38;
          unint64_t v129 = (uint64_t *)(v99[6] + 16 * v38);
          *unint64_t v129 = v191;
          v129[1] = v121;
          *(void *)(v99[7] + 8 * v38) = v128;
          uint64_t v130 = v99[2];
          BOOL v116 = __OFADD__(v130, 1);
          uint64_t v131 = v130 + 1;
          if (v116)
          {
            __break(1u);
            goto LABEL_90;
          }
          v99[2] = v131;
          if (v96) {
            goto LABEL_48;
          }
        }
        int64_t v118 = v110 + 1;
        if (v110 + 1 >= v187) {
          goto LABEL_74;
        }
        unint64_t v117 = *(void *)(v186 + 8 * v118);
        if (v117) {
          goto LABEL_60;
        }
        int64_t v118 = v110 + 2;
        if (v110 + 2 >= v187) {
          goto LABEL_74;
        }
        unint64_t v117 = *(void *)(v186 + 8 * v118);
        if (v117) {
          goto LABEL_60;
        }
        int64_t v118 = v110 + 3;
        if (v110 + 3 >= v187) {
          goto LABEL_74;
        }
        unint64_t v117 = *(void *)(v186 + 8 * v118);
        if (v117) {
          goto LABEL_60;
        }
        int64_t v118 = v110 + 4;
        if (v110 + 4 < v187) {
          break;
        }
LABEL_74:
        uint64_t v132 = v185;
        unint64_t v38 = (unint64_t)v179;
        uint64_t v133 = v178;
        uint64_t v134 = (SEL *)sub_1002C4608((uint64_t)v99, (uint64_t)v178, (uint64_t)&off_100636FD0, v170, v181, v182, a9, (uint64_t)v177, (uint64_t)v180, (uint64_t)v179);
        unint64_t v14 = v133;
        uint64_t v52 = v132;
        if (v132)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          id v153 = v166;

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          return;
        }
        uint64_t v33 = v134;

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        id v135 = [v184 table];
        [v135 setAttributedString:v33 columnIndex:v176 rowIndex:v171];

        unint64_t v31 = (unint64_t)v175;
        uint64_t v104 = v172;
        if (v175 != v173) {
          goto LABEL_42;
        }
        swift_bridgeObjectRelease();
        uint64_t v33 = (SEL *)&selRef_setSymbolConfiguration_;
        uint64_t v67 = v169;
        unint64_t v68 = v171;
LABEL_38:
        if (++v68 == v167)
        {
LABEL_93:
          swift_bridgeObjectRelease();
          goto LABEL_78;
        }
      }
      unint64_t v117 = *(void *)(v186 + 8 * v118);
      if (!v117)
      {
        while (1)
        {
          int64_t v110 = v118 + 1;
          if (__OFADD__(v118, 1)) {
            break;
          }
          if (v110 >= v187) {
            goto LABEL_74;
          }
          unint64_t v117 = *(void *)(v186 + 8 * v110);
          ++v118;
          if (v117) {
            goto LABEL_61;
          }
        }
        __break(1u);
        goto LABEL_95;
      }
LABEL_60:
      int64_t v110 = v118;
      goto LABEL_61;
    }

LABEL_78:
    int v139 = *(unsigned __int8 *)(v183 + *(int *)(v165 + 96));
    id v140 = v184;
    if (v139 != 2)
    {
      BOOL v141 = (v139 & 1) == 0;
      id v142 = [v184 v33[106]];
      unsigned int v143 = [v142 isRightToLeft];

      if (((v141 ^ v143) & 1) == 0)
      {
        id v144 = [v140 table];
        [v144 reverseColumnDirection];
      }
    }
    [v140 writeMergeableData];
  }
  else
  {
    uint64_t v92 = (uint64_t)a1;
    self;
    uint64_t v93 = swift_dynamicCastObjCClass();
    uint64_t v94 = v185;
    if (v93)
    {
      uint64_t v95 = (void *)v93;
      unint64_t v31 = (unint64_t)v29;
      unint64_t v96 = (unint64_t)v95;
      id v97 = [v95 audioDocument];
      if (v97)
      {
        id v98 = v97;
        long long v99 = [v97 document];

        uint64_t v100 = v183 + *(int *)(type metadata accessor for ICAttachmentArchiveModel() + 112);
        uint64_t v101 = *(void *)(v100 + 8);
        uint64_t v102 = v191;
        if (v101 == 1)
        {
          uint64_t v103 = 0;
        }
        else
        {
          char v147 = *(unsigned char *)(v100 + 72);
          uint64_t v148 = *(void *)(v100 + 64);
          int v149 = *(_DWORD *)(v100 + 56);
          uint64_t v150 = *(void *)(v100 + 48);
          v193[1] = *(void *)v100;
          v193[2] = v101;
          long long v151 = *(_OWORD *)(v100 + 32);
          long long v194 = *(_OWORD *)(v100 + 16);
          long long v195 = v151;
          uint64_t v196 = v150;
          char v197 = v149 & 1;
          uint64_t v198 = v148;
          char v199 = v147;
          v152 = (char *)[(id)v96 audioDocument];
          if (!v152)
          {
LABEL_117:
            __break(1u);
            return;
          }
          unint64_t v14 = v152;
          uint64_t v128 = (uint64_t)sub_10047D578(v152, v92, (uint64_t)&off_100636FD0, v102, v186 & 0x101, v181, v182, a9);
          if (v94)
          {

            return;
          }
LABEL_90:
          uint64_t v103 = v128;
        }
        [v99 setRootObject:v103];

        swift_unknownObjectRelease();
        [(id)v96 writeMergeableData];

        return;
      }
LABEL_116:
      __break(1u);
      goto LABEL_117;
    }

    Class v145 = 0;
    if (*(void *)(v183 + *(int *)(type metadata accessor for ICAttachmentArchiveModel() + 56) + 8) >> 60 != 15) {
      Class v145 = Data._bridgeToObjectiveC()().super.isa;
    }
    [a1 setMergeableData:v145];

    id v146 = [a1 attachmentModel];
  }
}

uint64_t sub_100249B90(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10002F214(&qword_1006A0708);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10015E154(a1, a1[3]);
  sub_10024F5D4();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  long long v12 = *v3;
  char v11 = 0;
  type metadata accessor for CGPoint(0);
  sub_10024F628(&qword_1006A0710, type metadata accessor for CGPoint);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    long long v12 = v3[1];
    char v11 = 1;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    long long v12 = v3[2];
    char v11 = 2;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    long long v12 = v3[3];
    char v11 = 3;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100249DC4()
{
  uint64_t result = 0x7466654C706F74;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7468676952706F74;
      break;
    case 2:
      uint64_t result = 0x69526D6F74746F62;
      break;
    case 3:
      uint64_t result = 0x654C6D6F74746F62;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100249E60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10024F14C(a1, a2);
  *a3 = result;
  return result;
}

void sub_100249E88(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_100249E94(uint64_t a1)
{
  unint64_t v2 = sub_10024F5D4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100249ED0(uint64_t a1)
{
  unint64_t v2 = sub_10024F5D4();

  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_100249F0C@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_10024F32C(a1, v7);
  if (!v2)
  {
    long long v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    double result = *(double *)&v8;
    long long v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_100249F50(void *a1)
{
  return sub_100249B90(a1);
}

uint64_t sub_100249F68(char *a1, char *a2)
{
  return sub_100275148(*a1, *a2);
}

Swift::Int sub_100249F74()
{
  return Hasher._finalize()();
}

uint64_t sub_10024A030()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10024A0D4()
{
  return Hasher._finalize()();
}

unint64_t sub_10024A18C@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_10024FE70(*a1);
  *a2 = result;
  return result;
}

void sub_10024A1BC(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE200000000000000;
  uint64_t v3 = 20565;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1314344772;
      goto LABEL_3;
    case 2:
      *a1 = 1413891404;
      a1[1] = 0xE400000000000000;
      break;
    case 3:
      *a1 = 0x5448474952;
      a1[1] = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

void sub_10024A238(void *a1@<X8>)
{
  *a1 = &off_10062B5A0;
}

uint64_t sub_10024A248()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_10024A2A8()
{
  return RawRepresentable<>.encode(to:)();
}

void sub_10024A2F8(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_10024A300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10024A990(a1, a2, a3, a4, (void (*)(void))sub_100250208, (void (*)(void))sub_10024FD74);
}

uint64_t sub_10024A32C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10024AA50(a1, a2, a3, a4, (void (*)(void))sub_100250208, (void (*)(void))sub_10024FD74);
}

uint64_t sub_10024A358(void *a1)
{
  uint64_t v3 = sub_10002F214(&qword_1006A0788);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  long long v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10015E154(a1, a1[3]);
  sub_10024FE1C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v10 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    char v9 = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_10024A4C0(unsigned __int8 *a1, char *a2)
{
  return sub_10027529C(*a1, *a2);
}

Swift::Int sub_10024A4CC()
{
  return Hasher._finalize()();
}

uint64_t sub_10024A5CC()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10024A6B4()
{
  return Hasher._finalize()();
}

unint64_t sub_10024A7B0@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_10024FEBC(*a1);
  *a2 = result;
  return result;
}

void sub_10024A7E0(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x4F544F4850;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 0x524F4C4F43;
      goto LABEL_3;
    case 2:
      *a1 = 0x4C41435359415247;
      a1[1] = 0xE900000000000045;
      break;
    case 3:
      *a1 = 0x4E415F4B43414C42;
      a1[1] = 0xEF45544948575F44;
      break;
    case 4:
      *a1 = 0x414F424554494857;
      a1[1] = 0xEA00000000004452;
      break;
    default:
LABEL_3:
      *a1 = v2;
      a1[1] = 0xE500000000000000;
      break;
  }
}

void sub_10024A8A4(void *a1@<X8>)
{
  *a1 = &off_10062B578;
}

uint64_t sub_10024A8B4()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_10024A914()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_10024A964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10024A990(a1, a2, a3, a4, (void (*)(void))sub_1002501B4, (void (*)(void))sub_10024FDC8);
}

uint64_t sub_10024A990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), void (*a6)(void))
{
  a5();
  a6();

  return ArgumentDecodable<>.init(fromArgument:)();
}

uint64_t sub_10024AA24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10024AA50(a1, a2, a3, a4, (void (*)(void))sub_1002501B4, (void (*)(void))sub_10024FDC8);
}

uint64_t sub_10024AA50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), void (*a6)(void))
{
  a5();
  a6();

  return static ArgumentDecodable<>.typeSummary(forName:)();
}

uint64_t sub_10024AADC()
{
  if (*v0) {
    return 0x64757469676E6F6CLL;
  }
  else {
    return 0x656475746974616CLL;
  }
}

uint64_t sub_10024AB1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10024FF08(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10024AB44(uint64_t a1)
{
  unint64_t v2 = sub_10024FE1C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10024AB80(uint64_t a1)
{
  unint64_t v2 = sub_10024FE1C();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_10024ABBC(void *a1@<X0>, uint64_t a2@<X8>)
{
  double v4 = sub_100250008(a1);
  if (!v2)
  {
    *(double *)a2 = v4;
    *(void *)(a2 + 8) = v5;
  }
}

uint64_t sub_10024ABE8(void *a1)
{
  return sub_10024A358(a1);
}

uint64_t sub_10024AC04(void *a1)
{
  id v1 = [a1 media];
  uint64_t v2 = v1;
  if (!v1) {
    return 0;
  }
  id v3 = [v1 filename];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  char v7 = sub_1002D62A4(v4, v6, &off_10062BB38);
  swift_arrayDestroy();
  if (v7)
  {
    sub_10017B588();
    uint64_t v8 = StringProtocol.components<A>(separatedBy:)();
    swift_bridgeObjectRelease();
    sub_1003CEF44(1, v8);
    swift_bridgeObjectRetain();
    sub_10002F214(&qword_1006A04B8);
    sub_10001DFB0((unint64_t *)&qword_1006A04C0, &qword_1006A04B8);
    uint64_t v9 = BidirectionalCollection<>.joined(separator:)();
    swift_unknownObjectRelease();
    uint64_t v10 = *(void *)(v8 + 16);
    if (v10)
    {
      uint64_t v11 = v8 + 16 * v10;
      uint64_t v12 = *(void *)(v11 + 16);
      uint64_t v13 = *(void **)(v11 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v18 = v9;
      v14._countAndFlagsBits = 3027488;
      v14._object = (void *)0xE300000000000000;
      String.append(_:)(v14);
      v15._countAndFlagsBits = v12;
      v15._object = v13;
      String.append(_:)(v15);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v18 = v9;
      v16._countAndFlagsBits = 12832;
      v16._object = (void *)0xE200000000000000;
      String.append(_:)(v16);
    }
    return v18;
  }
  return v4;
}

void *sub_10024AE00(uint64_t a1, uint64_t a2)
{
  uint64_t result = _swiftEmptyArrayStorage;
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = (uint64_t *)(a1 + 40);
    do
    {
      if (*(void *)(a2 + 16))
      {
        uint64_t v7 = *(v6 - 1);
        uint64_t v8 = *v6;
        swift_bridgeObjectRetain_n();
        unint64_t v9 = sub_1002B63D4(v7, v8);
        if (v10)
        {
          id v11 = *(id *)(*(void *)(a2 + 56) + 8 * v9);
          swift_bridgeObjectRelease_n();
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }
      }
      v6 += 2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_10024AF30(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E65644965707974 && a2 == 0xEE00726569666974;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000100554FB0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6954746E65726170 && a2 == 0xEB00000000656C74 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000100554FD0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000100554FF0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000100555010 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6C6946616964656DLL && a2 == 0xED0000656D616E65 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x4164657461657263 && a2 == 0xE900000000000074 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6465696669646F6DLL && a2 == 0xEA00000000007441 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 1635017060 && a2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x73646E756F62 && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x676E6970706F7263 && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x7461746E6569726FLL && a2 == 0xEB000000006E6F69 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x6C69466567616D69 && a2 == 0xEB00000000726574 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x4474657070696E73 && a2 == 0xEB00000000617461 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x616E6964726F6F63 && a2 == 0xEA00000000006574 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 1937207154 && a2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0x5474686769527369 && a2 == 0xED00007466654C6FLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000100555030 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0x65746F75516C7275 && a2 == 0xEC00000074786554 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000100555050 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0x6365526F69647561 && a2 == 0xEE00676E6964726FLL)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 24;
    }
    else {
      return 25;
    }
  }
}

id sub_10024B9BC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  [a1 croppingQuadTopLeftX];
  if (v4 == 0.0
    && ([a1 croppingQuadTopLeftY], v5 == 1.0)
    && ([a1 croppingQuadTopRightX], v6 == 1.0)
    && ([a1 croppingQuadTopRightY], v7 == 1.0)
    && ([a1 croppingQuadBottomRightX], v8 == 1.0)
    && ([a1 croppingQuadBottomRightY], v9 == 0.0)
    && ([a1 croppingQuadBottomLeftX], v10 == 0.0)
    && (id result = [a1 croppingQuadBottomLeftY], v12 == 0.0))
  {
    uint64_t v13 = 0;
    char v14 = 1;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    uint64_t v21 = 0;
  }
  else
  {
    [a1 croppingQuadTopLeftX];
    uint64_t v13 = v22;
    [a1 croppingQuadTopLeftY];
    uint64_t v15 = v23;
    [a1 croppingQuadTopRightX];
    uint64_t v16 = v24;
    [a1 croppingQuadTopRightY];
    uint64_t v17 = v25;
    [a1 croppingQuadBottomRightX];
    uint64_t v18 = v26;
    [a1 croppingQuadBottomRightY];
    uint64_t v19 = v27;
    [a1 croppingQuadBottomLeftX];
    uint64_t v20 = v28;
    id result = [a1 croppingQuadBottomLeftY];
    char v14 = 0;
  }
  *(void *)a2 = v13;
  *(void *)(a2 + 8) = v15;
  *(void *)(a2 + 16) = v16;
  *(void *)(a2 + 24) = v17;
  *(void *)(a2 + 32) = v18;
  *(void *)(a2 + 40) = v19;
  *(void *)(a2 + 48) = v20;
  *(void *)(a2 + 56) = v21;
  *(unsigned char *)(a2 + 64) = v14;
  return result;
}

uint64_t sub_10024BB9C(unint64_t a1)
{
  if (a1 < 4) {
    return 0x3020104u >> (8 * a1);
  }
  if (qword_10069AD80 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10003293C(v2, (uint64_t)qword_1006A0490);
  id v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v3, v4))
  {
    double v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)double v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Unknown drawing orientation — returning nil", v5, 2u);
    swift_slowDealloc();
  }

  return 4;
}

uint64_t sub_10024BC98(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10024BCEC(void *a1, uint64_t a2)
{
  uint64_t v13 = _swiftEmptyArrayStorage;
  id v4 = [a1 table];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v5 + 24) = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 40) = v6;
  *(_OWORD *)(v5 + 56) = *(_OWORD *)(a2 + 32);
  *(void *)(v5 + 69) = *(void *)(a2 + 45);
  *(void *)(v5 + 80) = &v13;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_10024C054;
  *(void *)(v7 + 24) = v5;
  aBlock[4] = sub_10024C074;
  aBlock[5] = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100247EF0;
  aBlock[3] = &unk_100631488;
  double v8 = _Block_copy(aBlock);
  id v9 = a1;
  sub_10024BEBC((void *)a2, (void (*)(void, void, void, void, void, void))sub_10024BEFC);
  swift_retain();
  swift_release();
  [v4 enumerateRowsWithBlock:v8];

  _Block_release(v8);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v4)
  {
    __break(1u);
  }
  else
  {
    id v11 = v13;
    swift_release();
    return (uint64_t)v11;
  }
  return result;
}

void *sub_10024BEBC(void *a1, void (*a2)(void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_10024BEFC(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10024BF50(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a2 != 1)
  {
    sub_10024BFB8(result, a2);
    sub_10024BFB8(a4, a5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10024BFB8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10024BFFC()
{
  if (*(void *)(v0 + 32) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_10024C054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002478C8(a1, a2, a3, *(void **)(v3 + 16), v3 + 24, *(void ***)(v3 + 80));
}

uint64_t sub_10024C064()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10024C074()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10024C09C()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  if (*(void *)(v0 + v5 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return _swift_deallocObject(v0, ((v5 + 60) & 0xFFFFFFFFFFFFFFF8) + 8, v3 | 7);
}

void sub_10024C198(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  double v10 = *(void **)(v3 + 16);
  id v11 = *(void ***)(v3 + ((v9 + 60) & 0xFFFFFFFFFFFFFFF8));

  sub_100247C0C(a1, a2, a3, v10, v3 + v8, (void *)(v3 + v9), v11);
}

uint64_t sub_10024C25C()
{
  return _swift_deallocObject(v0, 32, 7);
}

unint64_t sub_10024C26C()
{
  unint64_t result = qword_1006A04D0;
  if (!qword_1006A04D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1006A04D0);
  }
  return result;
}

__n128 initializeWithCopy for ICAttachmentArchiveModel.Cropping(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for ICAttachmentArchiveModel.Cropping(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ICAttachmentArchiveModel.Cropping(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 64) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ICAttachmentArchiveModel.Cropping()
{
  return &type metadata for ICAttachmentArchiveModel.Cropping;
}

void *sub_10024C32C(uint64_t a1, uint64_t *a2, int *a3)
{
  long long v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) == 0)
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v7;
    uint64_t v8 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v8;
    uint64_t v9 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v9;
    *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
    uint64_t v10 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v10;
    uint64_t v11 = a2[11];
    uint64_t v12 = a3[12];
    __dst = (void *)(a1 + v12);
    uint64_t v72 = (char *)a2 + v12;
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v11;
    uint64_t v13 = type metadata accessor for Date();
    uint64_t v73 = *(void *)(v13 - 8);
    char v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48);
    uint64_t v15 = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v72, 1, v15))
    {
      uint64_t v16 = sub_10002F214((uint64_t *)&unk_1006A3E20);
      memcpy(__dst, v72, *(void *)(*(void *)(v16 - 8) + 64));
      uint64_t v17 = v73;
    }
    else
    {
      uint64_t v17 = v73;
      (*(void (**)(void *, char *, uint64_t))(v73 + 16))(__dst, v72, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v73 + 56))(__dst, 0, 1, v15);
    }
    uint64_t v19 = a3[13];
    uint64_t v20 = (char *)v4 + v19;
    uint64_t v21 = (char *)a2 + v19;
    if (v14((char *)a2 + v19, 1, v15))
    {
      uint64_t v22 = sub_10002F214((uint64_t *)&unk_1006A3E20);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v20, v21, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v15);
    }
    uint64_t v23 = a3[14];
    uint64_t v24 = (char *)v4 + v23;
    uint64_t v25 = (uint64_t *)((char *)a2 + v23);
    unint64_t v26 = v25[1];
    if (v26 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    }
    else
    {
      uint64_t v27 = *v25;
      sub_100172484(*v25, v25[1]);
      *(void *)uint64_t v24 = v27;
      *((void *)v24 + 1) = v26;
    }
    uint64_t v28 = a3[15];
    uint64_t v29 = a3[16];
    uint64_t v30 = (void *)((char *)v4 + v28);
    unint64_t v31 = (uint64_t *)((char *)a2 + v28);
    uint64_t v32 = v31[1];
    *uint64_t v30 = *v31;
    v30[1] = v32;
    uint64_t v33 = (char *)v4 + v29;
    uint64_t v34 = (uint64_t)a2 + v29;
    v33[32] = *(unsigned char *)(v34 + 32);
    long long v35 = *(_OWORD *)(v34 + 16);
    *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
    *((_OWORD *)v33 + 1) = v35;
    uint64_t v36 = a3[17];
    uint64_t v37 = a3[18];
    unint64_t v38 = (char *)v4 + v36;
    uint64_t v39 = (uint64_t)a2 + v36;
    v38[64] = *(unsigned char *)(v39 + 64);
    long long v40 = *(_OWORD *)(v39 + 48);
    *((_OWORD *)v38 + 2) = *(_OWORD *)(v39 + 32);
    *((_OWORD *)v38 + 3) = v40;
    long long v41 = *(_OWORD *)(v39 + 16);
    *(_OWORD *)unint64_t v38 = *(_OWORD *)v39;
    *((_OWORD *)v38 + 1) = v41;
    *((unsigned char *)v4 + v37) = *((unsigned char *)a2 + v37);
    uint64_t v42 = a3[20];
    *((unsigned char *)v4 + a3[19]) = *((unsigned char *)a2 + a3[19]);
    uint64_t v43 = (char *)v4 + v42;
    uint64_t v44 = (char *)a2 + v42;
    uint64_t v45 = type metadata accessor for URL();
    uint64_t v46 = *(void *)(v45 - 8);
    id v47 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48);
    swift_bridgeObjectRetain();
    if (v47(v44, 1, v45))
    {
      uint64_t v48 = sub_10002F214(&qword_10069B310);
      memcpy(v43, v44, *(void *)(*(void *)(v48 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v43, v44, v45);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
    }
    uint64_t v49 = a3[21];
    uint64_t v50 = (char *)v4 + v49;
    uint64_t v51 = (uint64_t *)((char *)a2 + v49);
    unint64_t v52 = v51[1];
    if (v52 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
    }
    else
    {
      uint64_t v53 = *v51;
      sub_100172484(*v51, v51[1]);
      *(void *)uint64_t v50 = v53;
      *((void *)v50 + 1) = v52;
    }
    uint64_t v54 = a3[22];
    uint64_t v55 = a3[23];
    id v56 = (char *)v4 + v54;
    uint64_t v57 = (uint64_t)a2 + v54;
    *(_OWORD *)id v56 = *(_OWORD *)v57;
    v56[16] = *(unsigned char *)(v57 + 16);
    *(void *)((char *)v4 + v55) = *(uint64_t *)((char *)a2 + v55);
    uint64_t v58 = a3[25];
    *((unsigned char *)v4 + a3[24]) = *((unsigned char *)a2 + a3[24]);
    *(void *)((char *)v4 + v58) = *(uint64_t *)((char *)a2 + v58);
    uint64_t v59 = a3[26];
    uint64_t v60 = a3[27];
    id v61 = (void *)((char *)v4 + v59);
    uint64_t v62 = (uint64_t *)((char *)a2 + v59);
    uint64_t v63 = v62[1];
    void *v61 = *v62;
    v61[1] = v63;
    *((unsigned char *)v4 + v60) = *((unsigned char *)a2 + v60);
    uint64_t v64 = a3[28];
    uint64_t v65 = (char *)v4 + v64;
    uint64_t v66 = (uint64_t)a2 + v64;
    uint64_t v67 = *(uint64_t *)((char *)a2 + v64 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v67)
    {
      if (v67 == 1)
      {
        long long v68 = *(_OWORD *)(v66 + 48);
        *((_OWORD *)v65 + 2) = *(_OWORD *)(v66 + 32);
        *((_OWORD *)v65 + 3) = v68;
        *(_OWORD *)(v65 + 57) = *(_OWORD *)(v66 + 57);
        long long v69 = *(_OWORD *)(v66 + 16);
        *(_OWORD *)uint64_t v65 = *(_OWORD *)v66;
        *((_OWORD *)v65 + 1) = v69;
        return v4;
      }
      *(void *)uint64_t v65 = *(void *)v66;
      *((void *)v65 + 1) = v67;
      *((void *)v65 + 2) = *(void *)(v66 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v70 = *(void *)(v66 + 32);
      if (!v70) {
        goto LABEL_24;
      }
    }
    else
    {
      *(_OWORD *)uint64_t v65 = *(_OWORD *)v66;
      *((void *)v65 + 2) = *(void *)(v66 + 16);
      uint64_t v70 = *(void *)(v66 + 32);
      if (!v70)
      {
LABEL_24:
        *(_OWORD *)(v65 + 24) = *(_OWORD *)(v66 + 24);
        *((void *)v65 + 5) = *(void *)(v66 + 40);
        goto LABEL_25;
      }
    }
    *((void *)v65 + 3) = *(void *)(v66 + 24);
    *((void *)v65 + 4) = v70;
    *((void *)v65 + 5) = *(void *)(v66 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_25:
    *((void *)v65 + 6) = *(void *)(v66 + 48);
    v65[56] = *(unsigned char *)(v66 + 56);
    *((void *)v65 + 8) = *(void *)(v66 + 64);
    v65[72] = *(unsigned char *)(v66 + 72);
    swift_bridgeObjectRetain();
    return v4;
  }
  uint64_t v18 = *a2;
  *long long v4 = *a2;
  long long v4 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return v4;
}

uint64_t sub_10024C8B0(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[12];
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = a1 + a2[13];
  if (!v7(v8, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  }
  uint64_t v9 = (uint64_t *)(a1 + a2[14]);
  unint64_t v10 = v9[1];
  if (v10 >> 60 != 15) {
    sub_10017253C(*v9, v10);
  }
  swift_bridgeObjectRelease();
  uint64_t v11 = a1 + a2[20];
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  char v14 = (uint64_t *)(a1 + a2[21]);
  unint64_t v15 = v14[1];
  if (v15 >> 60 != 15) {
    sub_10017253C(*v14, v15);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v16 = a1 + a2[28];
  uint64_t result = *(void *)(v16 + 8);
  if (result)
  {
    if (result == 1) {
      return result;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v16 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_10024CB28(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  uint64_t v10 = *(void *)(a2 + 88);
  uint64_t v11 = a3[12];
  __dst = (void *)(a1 + v11);
  uint64_t v70 = (const void *)(a2 + v11);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v10;
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v71 = *(void *)(v12 - 8);
  uint64_t v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v71 + 48);
  uint64_t v14 = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v70, 1, v14))
  {
    uint64_t v15 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    memcpy(__dst, v70, *(void *)(*(void *)(v15 - 8) + 64));
    uint64_t v16 = v71;
  }
  else
  {
    uint64_t v16 = v71;
    (*(void (**)(void *, const void *, uint64_t))(v71 + 16))(__dst, v70, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v71 + 56))(__dst, 0, 1, v14);
  }
  uint64_t v17 = a3[13];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (const void *)(a2 + v17);
  if (v13((const void *)(a2 + v17), 1, v14))
  {
    uint64_t v20 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v18, v19, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v18, 0, 1, v14);
  }
  uint64_t v21 = a3[14];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = (uint64_t *)(a2 + v21);
  unint64_t v24 = v23[1];
  if (v24 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  }
  else
  {
    uint64_t v25 = *v23;
    sub_100172484(*v23, v23[1]);
    *(void *)uint64_t v22 = v25;
    *(void *)(v22 + 8) = v24;
  }
  uint64_t v26 = a3[15];
  uint64_t v27 = a3[16];
  uint64_t v28 = (void *)(a1 + v26);
  uint64_t v29 = (void *)(a2 + v26);
  uint64_t v30 = v29[1];
  void *v28 = *v29;
  v28[1] = v30;
  uint64_t v31 = a1 + v27;
  uint64_t v32 = a2 + v27;
  *(unsigned char *)(v31 + 32) = *(unsigned char *)(v32 + 32);
  long long v33 = *(_OWORD *)(v32 + 16);
  *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
  *(_OWORD *)(v31 + 16) = v33;
  uint64_t v34 = a3[17];
  uint64_t v35 = a3[18];
  uint64_t v36 = a1 + v34;
  uint64_t v37 = a2 + v34;
  *(unsigned char *)(v36 + 64) = *(unsigned char *)(v37 + 64);
  long long v38 = *(_OWORD *)(v37 + 48);
  *(_OWORD *)(v36 + 32) = *(_OWORD *)(v37 + 32);
  *(_OWORD *)(v36 + 48) = v38;
  long long v39 = *(_OWORD *)(v37 + 16);
  *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
  *(_OWORD *)(v36 + 16) = v39;
  *(unsigned char *)(a1 + v35) = *(unsigned char *)(a2 + v35);
  uint64_t v40 = a3[20];
  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  long long v41 = (void *)(a1 + v40);
  uint64_t v42 = (const void *)(a2 + v40);
  uint64_t v43 = type metadata accessor for URL();
  uint64_t v44 = *(void *)(v43 - 8);
  uint64_t v45 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v44 + 48);
  swift_bridgeObjectRetain();
  if (v45(v42, 1, v43))
  {
    uint64_t v46 = sub_10002F214(&qword_10069B310);
    memcpy(v41, v42, *(void *)(*(void *)(v46 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v44 + 16))(v41, v42, v43);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
  }
  uint64_t v47 = a3[21];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = (uint64_t *)(a2 + v47);
  unint64_t v50 = v49[1];
  if (v50 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
  }
  else
  {
    uint64_t v51 = *v49;
    sub_100172484(*v49, v49[1]);
    *(void *)uint64_t v48 = v51;
    *(void *)(v48 + 8) = v50;
  }
  uint64_t v52 = a3[22];
  uint64_t v53 = a3[23];
  uint64_t v54 = a1 + v52;
  uint64_t v55 = a2 + v52;
  *(_OWORD *)uint64_t v54 = *(_OWORD *)v55;
  *(unsigned char *)(v54 + 16) = *(unsigned char *)(v55 + 16);
  *(void *)(a1 + v53) = *(void *)(a2 + v53);
  uint64_t v56 = a3[25];
  *(unsigned char *)(a1 + a3[24]) = *(unsigned char *)(a2 + a3[24]);
  *(void *)(a1 + v56) = *(void *)(a2 + v56);
  uint64_t v57 = a3[26];
  uint64_t v58 = a3[27];
  uint64_t v59 = (void *)(a1 + v57);
  uint64_t v60 = (void *)(a2 + v57);
  uint64_t v61 = v60[1];
  *uint64_t v59 = *v60;
  v59[1] = v61;
  *(unsigned char *)(a1 + v58) = *(unsigned char *)(a2 + v58);
  uint64_t v62 = a3[28];
  uint64_t v63 = a1 + v62;
  uint64_t v64 = a2 + v62;
  uint64_t v65 = *(void *)(a2 + v62 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v65)
  {
    *(_OWORD *)uint64_t v63 = *(_OWORD *)v64;
    *(void *)(v63 + 16) = *(void *)(v64 + 16);
    uint64_t v68 = *(void *)(v64 + 32);
    if (!v68)
    {
LABEL_22:
      *(_OWORD *)(v63 + 24) = *(_OWORD *)(v64 + 24);
      *(void *)(v63 + 40) = *(void *)(v64 + 40);
      goto LABEL_23;
    }
LABEL_20:
    *(void *)(v63 + 24) = *(void *)(v64 + 24);
    *(void *)(v63 + 32) = v68;
    *(void *)(v63 + 40) = *(void *)(v64 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_23:
    *(void *)(v63 + 48) = *(void *)(v64 + 48);
    *(unsigned char *)(v63 + 56) = *(unsigned char *)(v64 + 56);
    *(void *)(v63 + 64) = *(void *)(v64 + 64);
    *(unsigned char *)(v63 + 72) = *(unsigned char *)(v64 + 72);
    swift_bridgeObjectRetain();
    return a1;
  }
  if (v65 != 1)
  {
    *(void *)uint64_t v63 = *(void *)v64;
    *(void *)(v63 + 8) = v65;
    *(void *)(v63 + 16) = *(void *)(v64 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v68 = *(void *)(v64 + 32);
    if (!v68) {
      goto LABEL_22;
    }
    goto LABEL_20;
  }
  long long v66 = *(_OWORD *)(v64 + 48);
  *(_OWORD *)(v63 + 32) = *(_OWORD *)(v64 + 32);
  *(_OWORD *)(v63 + 48) = v66;
  *(_OWORD *)(v63 + 57) = *(_OWORD *)(v64 + 57);
  long long v67 = *(_OWORD *)(v64 + 16);
  *(_OWORD *)uint64_t v63 = *(_OWORD *)v64;
  *(_OWORD *)(v63 + 16) = v67;
  return a1;
}

uint64_t sub_10024D05C(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[12];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[13];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  int v18 = v11((void *)(a1 + v15), 1, v9);
  int v19 = v11(v17, 1, v9);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v16, v17, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v16, v9);
LABEL_12:
    uint64_t v20 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v16, v17, v9);
LABEL_13:
  uint64_t v21 = a3[14];
  uint64_t v22 = (uint64_t *)(a1 + v21);
  uint64_t v23 = (uint64_t *)(a2 + v21);
  unint64_t v24 = *(void *)(a2 + v21 + 8);
  if (*(void *)(a1 + v21 + 8) >> 60 == 15)
  {
    if (v24 >> 60 != 15)
    {
      uint64_t v25 = *v23;
      sub_100172484(v25, v24);
      uint64_t *v22 = v25;
      v22[1] = v24;
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v24 >> 60 == 15)
  {
    sub_10024D984((uint64_t)v22);
LABEL_18:
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
    goto LABEL_20;
  }
  uint64_t v26 = *v23;
  sub_100172484(v26, v24);
  uint64_t v27 = *v22;
  unint64_t v28 = v22[1];
  uint64_t *v22 = v26;
  v22[1] = v24;
  sub_10017253C(v27, v28);
LABEL_20:
  uint64_t v29 = a3[15];
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = (void *)(a2 + v29);
  *uint64_t v30 = *v31;
  v30[1] = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v32 = a3[16];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  char v35 = *(unsigned char *)(v34 + 32);
  long long v36 = *(_OWORD *)(v34 + 16);
  *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
  *(_OWORD *)(v33 + 16) = v36;
  *(unsigned char *)(v33 + 32) = v35;
  uint64_t v37 = a3[17];
  uint64_t v38 = a1 + v37;
  uint64_t v39 = a2 + v37;
  long long v40 = *(_OWORD *)(v39 + 16);
  long long v41 = *(_OWORD *)(v39 + 32);
  long long v42 = *(_OWORD *)(v39 + 48);
  *(unsigned char *)(v38 + 64) = *(unsigned char *)(v39 + 64);
  *(_OWORD *)(v38 + 32) = v41;
  *(_OWORD *)(v38 + 48) = v42;
  *(_OWORD *)(v38 + 16) = v40;
  *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  uint64_t v43 = a3[20];
  uint64_t v44 = (void *)(a1 + v43);
  uint64_t v45 = (void *)(a2 + v43);
  uint64_t v46 = type metadata accessor for URL();
  uint64_t v47 = *(void *)(v46 - 8);
  uint64_t v48 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v47 + 48);
  int v49 = v48(v44, 1, v46);
  int v50 = v48(v45, 1, v46);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(void *, void *, uint64_t))(v47 + 16))(v44, v45, v46);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
      goto LABEL_26;
    }
    goto LABEL_25;
  }
  if (v50)
  {
    (*(void (**)(void *, uint64_t))(v47 + 8))(v44, v46);
LABEL_25:
    uint64_t v51 = sub_10002F214(&qword_10069B310);
    memcpy(v44, v45, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_26;
  }
  (*(void (**)(void *, void *, uint64_t))(v47 + 24))(v44, v45, v46);
LABEL_26:
  uint64_t v52 = a3[21];
  uint64_t v53 = (uint64_t *)(a1 + v52);
  uint64_t v54 = (uint64_t *)(a2 + v52);
  unint64_t v55 = *(void *)(a2 + v52 + 8);
  if (*(void *)(a1 + v52 + 8) >> 60 == 15)
  {
    if (v55 >> 60 != 15)
    {
      uint64_t v56 = *v54;
      sub_100172484(v56, v55);
      *uint64_t v53 = v56;
      v53[1] = v55;
      goto LABEL_33;
    }
    goto LABEL_31;
  }
  if (v55 >> 60 == 15)
  {
    sub_10024D984((uint64_t)v53);
LABEL_31:
    *(_OWORD *)uint64_t v53 = *(_OWORD *)v54;
    goto LABEL_33;
  }
  uint64_t v57 = *v54;
  sub_100172484(v57, v55);
  uint64_t v58 = *v53;
  unint64_t v59 = v53[1];
  *uint64_t v53 = v57;
  v53[1] = v55;
  sub_10017253C(v58, v59);
LABEL_33:
  uint64_t v60 = a3[22];
  uint64_t v61 = a1 + v60;
  uint64_t v62 = (long long *)(a2 + v60);
  long long v63 = *v62;
  *(unsigned char *)(v61 + 16) = *((unsigned char *)v62 + 16);
  *(_OWORD *)uint64_t v61 = v63;
  *(void *)(a1 + a3[23]) = *(void *)(a2 + a3[23]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[24]) = *(unsigned char *)(a2 + a3[24]);
  *(void *)(a1 + a3[25]) = *(void *)(a2 + a3[25]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v64 = a3[26];
  uint64_t v65 = (void *)(a1 + v64);
  long long v66 = (void *)(a2 + v64);
  *uint64_t v65 = *v66;
  v65[1] = v66[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[27]) = *(unsigned char *)(a2 + a3[27]);
  uint64_t v67 = a3[28];
  uint64_t v68 = a1 + v67;
  long long v69 = (long long *)(a2 + v67);
  uint64_t v70 = *(void *)(a1 + v67 + 8);
  uint64_t v71 = *((void *)v69 + 1);
  if (v70 == 1)
  {
    if (v71 == 1)
    {
      *(_OWORD *)uint64_t v68 = *v69;
      long long v72 = v69[1];
      long long v73 = v69[2];
      long long v74 = v69[3];
      *(_OWORD *)(v68 + 57) = *(long long *)((char *)v69 + 57);
      *(_OWORD *)(v68 + 32) = v73;
      *(_OWORD *)(v68 + 48) = v74;
      *(_OWORD *)(v68 + 16) = v72;
      return a1;
    }
    if (v71)
    {
      *(void *)uint64_t v68 = *(void *)v69;
      *(void *)(v68 + 8) = *((void *)v69 + 1);
      *(void *)(v68 + 16) = *((void *)v69 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (*((void *)v69 + 4))
      {
LABEL_40:
        *(void *)(v68 + 24) = *((void *)v69 + 3);
        *(void *)(v68 + 32) = *((void *)v69 + 4);
        *(void *)(v68 + 40) = *((void *)v69 + 5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_49:
        uint64_t v80 = *((void *)v69 + 6);
        *(unsigned char *)(v68 + 56) = *((unsigned char *)v69 + 56);
        *(void *)(v68 + 48) = v80;
        *(void *)(v68 + 64) = *((void *)v69 + 8);
        *(unsigned char *)(v68 + 72) = *((unsigned char *)v69 + 72);
        swift_bridgeObjectRetain();
        return a1;
      }
    }
    else
    {
      long long v78 = *v69;
      *(void *)(v68 + 16) = *((void *)v69 + 2);
      *(_OWORD *)uint64_t v68 = v78;
      if (*((void *)v69 + 4)) {
        goto LABEL_40;
      }
    }
    long long v79 = *(long long *)((char *)v69 + 24);
    *(void *)(v68 + 40) = *((void *)v69 + 5);
    *(_OWORD *)(v68 + 24) = v79;
    goto LABEL_49;
  }
  if (v71 == 1)
  {
    sub_10024DA2C(v68);
    *(_OWORD *)uint64_t v68 = *v69;
    long long v76 = v69[2];
    long long v75 = v69[3];
    long long v77 = v69[1];
    *(_OWORD *)(v68 + 57) = *(long long *)((char *)v69 + 57);
    *(_OWORD *)(v68 + 32) = v76;
    *(_OWORD *)(v68 + 48) = v75;
    *(_OWORD *)(v68 + 16) = v77;
  }
  else
  {
    if (v70)
    {
      if (v71)
      {
        *(void *)uint64_t v68 = *(void *)v69;
        *(void *)(v68 + 8) = *((void *)v69 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)(v68 + 16) = *((void *)v69 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_10024D9D8(v68);
        uint64_t v81 = *((void *)v69 + 2);
        *(_OWORD *)uint64_t v68 = *v69;
        *(void *)(v68 + 16) = v81;
      }
    }
    else if (v71)
    {
      *(void *)uint64_t v68 = *(void *)v69;
      *(void *)(v68 + 8) = *((void *)v69 + 1);
      *(void *)(v68 + 16) = *((void *)v69 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v82 = *v69;
      *(void *)(v68 + 16) = *((void *)v69 + 2);
      *(_OWORD *)uint64_t v68 = v82;
    }
    uint64_t v83 = (_OWORD *)(v68 + 24);
    uint64_t v84 = (long long *)((char *)v69 + 24);
    uint64_t v85 = *((void *)v69 + 4);
    if (*(void *)(v68 + 32))
    {
      if (v85)
      {
        *(void *)(v68 + 24) = *((void *)v69 + 3);
        *(void *)(v68 + 32) = *((void *)v69 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)(v68 + 40) = *((void *)v69 + 5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_10024D9D8(v68 + 24);
        uint64_t v86 = *((void *)v69 + 5);
        _OWORD *v83 = *v84;
        *(void *)(v68 + 40) = v86;
      }
    }
    else if (v85)
    {
      *(void *)(v68 + 24) = *((void *)v69 + 3);
      *(void *)(v68 + 32) = *((void *)v69 + 4);
      *(void *)(v68 + 40) = *((void *)v69 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v87 = *v84;
      *(void *)(v68 + 40) = *((void *)v69 + 5);
      _OWORD *v83 = v87;
    }
    uint64_t v88 = *((void *)v69 + 6);
    *(unsigned char *)(v68 + 56) = *((unsigned char *)v69 + 56);
    *(void *)(v68 + 48) = v88;
    *(void *)(v68 + 64) = *((void *)v69 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v68 + 72) = *((unsigned char *)v69 + 72);
  }
  return a1;
}

uint64_t sub_10024D984(uint64_t a1)
{
  return a1;
}

uint64_t sub_10024D9D8(uint64_t a1)
{
  return a1;
}

uint64_t sub_10024DA2C(uint64_t a1)
{
  return a1;
}

uint64_t sub_10024DA80(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  long long v6 = *(_OWORD *)(a2 + 80);
  uint64_t v7 = a3[12];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[13];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  if (v12((const void *)(a2 + v14), 1, v10))
  {
    uint64_t v17 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v15, v16, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  uint64_t v18 = a3[15];
  *(_OWORD *)(a1 + a3[14]) = *(_OWORD *)(a2 + a3[14]);
  *(_OWORD *)(a1 + v18) = *(_OWORD *)(a2 + v18);
  uint64_t v19 = a3[16];
  uint64_t v20 = a3[17];
  uint64_t v21 = a1 + v19;
  uint64_t v22 = a2 + v19;
  long long v23 = *(_OWORD *)(v22 + 16);
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  *(_OWORD *)(v21 + 16) = v23;
  *(unsigned char *)(v21 + 32) = *(unsigned char *)(v22 + 32);
  uint64_t v24 = a1 + v20;
  uint64_t v25 = a2 + v20;
  *(unsigned char *)(v24 + 64) = *(unsigned char *)(v25 + 64);
  long long v26 = *(_OWORD *)(v25 + 48);
  *(_OWORD *)(v24 + 32) = *(_OWORD *)(v25 + 32);
  *(_OWORD *)(v24 + 48) = v26;
  long long v27 = *(_OWORD *)(v25 + 16);
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  *(_OWORD *)(v24 + 16) = v27;
  uint64_t v28 = a3[19];
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  *(unsigned char *)(a1 + v28) = *(unsigned char *)(a2 + v28);
  uint64_t v29 = a3[20];
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = (const void *)(a2 + v29);
  uint64_t v32 = type metadata accessor for URL();
  uint64_t v33 = *(void *)(v32 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
  {
    uint64_t v34 = sub_10002F214(&qword_10069B310);
    memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v33 + 32))(v30, v31, v32);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
  }
  uint64_t v35 = a3[22];
  *(_OWORD *)(a1 + a3[21]) = *(_OWORD *)(a2 + a3[21]);
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
  *(unsigned char *)(v36 + 16) = *(unsigned char *)(v37 + 16);
  uint64_t v38 = a3[24];
  *(void *)(a1 + a3[23]) = *(void *)(a2 + a3[23]);
  *(unsigned char *)(a1 + v38) = *(unsigned char *)(a2 + v38);
  uint64_t v39 = a3[26];
  *(void *)(a1 + a3[25]) = *(void *)(a2 + a3[25]);
  *(_OWORD *)(a1 + v39) = *(_OWORD *)(a2 + v39);
  uint64_t v40 = a3[28];
  *(unsigned char *)(a1 + a3[27]) = *(unsigned char *)(a2 + a3[27]);
  long long v41 = (_OWORD *)(a1 + v40);
  long long v42 = (_OWORD *)(a2 + v40);
  *(_OWORD *)((char *)v41 + 57) = *(_OWORD *)((char *)v42 + 57);
  long long v43 = v42[3];
  v41[2] = v42[2];
  v41[3] = v43;
  long long v44 = v42[1];
  _OWORD *v41 = *v42;
  v41[1] = v44;
  return a1;
}

uint64_t sub_10024DE24(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[12];
  int v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    uint64_t v19 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v12, v13, v14);
LABEL_7:
  uint64_t v20 = a3[13];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  int v23 = v16((void *)(a1 + v20), 1, v14);
  int v24 = v16(v22, 1, v14);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v21, v22, v14);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v21, 0, 1, v14);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v24)
  {
    (*(void (**)(void *, uint64_t))(v15 + 8))(v21, v14);
LABEL_12:
    uint64_t v25 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v21, v22, v14);
LABEL_13:
  uint64_t v26 = a3[14];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  unint64_t v29 = *(void *)(a1 + v26 + 8);
  if (v29 >> 60 == 15)
  {
LABEL_16:
    *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
    goto LABEL_18;
  }
  unint64_t v30 = *(void *)(v28 + 8);
  if (v30 >> 60 == 15)
  {
    sub_10024D984(v27);
    goto LABEL_16;
  }
  uint64_t v31 = *(void *)v27;
  *(void *)uint64_t v27 = *(void *)v28;
  *(void *)(v27 + 8) = v30;
  sub_10017253C(v31, v29);
LABEL_18:
  uint64_t v32 = a3[15];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (uint64_t *)(a2 + v32);
  uint64_t v36 = *v34;
  uint64_t v35 = v34[1];
  *uint64_t v33 = v36;
  v33[1] = v35;
  swift_bridgeObjectRelease();
  uint64_t v37 = a3[16];
  uint64_t v38 = a3[17];
  uint64_t v39 = a1 + v37;
  uint64_t v40 = a2 + v37;
  *(unsigned char *)(v39 + 32) = *(unsigned char *)(v40 + 32);
  long long v41 = *(_OWORD *)(v40 + 16);
  *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
  *(_OWORD *)(v39 + 16) = v41;
  uint64_t v42 = a1 + v38;
  uint64_t v43 = a2 + v38;
  *(unsigned char *)(v42 + 64) = *(unsigned char *)(v43 + 64);
  long long v44 = *(_OWORD *)(v43 + 48);
  *(_OWORD *)(v42 + 32) = *(_OWORD *)(v43 + 32);
  *(_OWORD *)(v42 + 48) = v44;
  long long v45 = *(_OWORD *)(v43 + 16);
  *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
  *(_OWORD *)(v42 + 16) = v45;
  uint64_t v46 = a3[19];
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  *(unsigned char *)(a1 + v46) = *(unsigned char *)(a2 + v46);
  uint64_t v47 = a3[20];
  uint64_t v48 = (void *)(a1 + v47);
  int v49 = (void *)(a2 + v47);
  uint64_t v50 = type metadata accessor for URL();
  uint64_t v51 = *(void *)(v50 - 8);
  uint64_t v52 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v51 + 48);
  int v53 = v52(v48, 1, v50);
  int v54 = v52(v49, 1, v50);
  if (v53)
  {
    if (!v54)
    {
      (*(void (**)(void *, void *, uint64_t))(v51 + 32))(v48, v49, v50);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  if (v54)
  {
    (*(void (**)(void *, uint64_t))(v51 + 8))(v48, v50);
LABEL_23:
    uint64_t v55 = sub_10002F214(&qword_10069B310);
    memcpy(v48, v49, *(void *)(*(void *)(v55 - 8) + 64));
    goto LABEL_24;
  }
  (*(void (**)(void *, void *, uint64_t))(v51 + 40))(v48, v49, v50);
LABEL_24:
  uint64_t v56 = a3[21];
  uint64_t v57 = a1 + v56;
  uint64_t v58 = a2 + v56;
  unint64_t v59 = *(void *)(a1 + v56 + 8);
  if (v59 >> 60 == 15)
  {
LABEL_27:
    *(_OWORD *)uint64_t v57 = *(_OWORD *)v58;
    goto LABEL_29;
  }
  unint64_t v60 = *(void *)(v58 + 8);
  if (v60 >> 60 == 15)
  {
    sub_10024D984(v57);
    goto LABEL_27;
  }
  uint64_t v61 = *(void *)v57;
  *(void *)uint64_t v57 = *(void *)v58;
  *(void *)(v57 + 8) = v60;
  sub_10017253C(v61, v59);
LABEL_29:
  uint64_t v62 = a3[22];
  uint64_t v63 = a3[23];
  uint64_t v64 = a1 + v62;
  uint64_t v65 = a2 + v62;
  *(_OWORD *)uint64_t v64 = *(_OWORD *)v65;
  *(unsigned char *)(v64 + 16) = *(unsigned char *)(v65 + 16);
  *(void *)(a1 + v63) = *(void *)(a2 + v63);
  swift_bridgeObjectRelease();
  uint64_t v66 = a3[25];
  *(unsigned char *)(a1 + a3[24]) = *(unsigned char *)(a2 + a3[24]);
  *(void *)(a1 + v66) = *(void *)(a2 + v66);
  swift_bridgeObjectRelease();
  uint64_t v67 = a3[26];
  uint64_t v68 = (void *)(a1 + v67);
  long long v69 = (uint64_t *)(a2 + v67);
  uint64_t v71 = *v69;
  uint64_t v70 = v69[1];
  *uint64_t v68 = v71;
  v68[1] = v70;
  swift_bridgeObjectRelease();
  uint64_t v72 = a3[28];
  *(unsigned char *)(a1 + a3[27]) = *(unsigned char *)(a2 + a3[27]);
  uint64_t v73 = a1 + v72;
  uint64_t v74 = a2 + v72;
  uint64_t v75 = *(void *)(a1 + v72 + 8);
  if (v75 != 1)
  {
    uint64_t v76 = *(void *)(v74 + 8);
    if (v76 == 1)
    {
      sub_10024DA2C(a1 + v72);
      goto LABEL_32;
    }
    if (v75)
    {
      if (v76)
      {
        *(void *)uint64_t v73 = *(void *)v74;
        *(void *)(v73 + 8) = v76;
        swift_bridgeObjectRelease();
        *(void *)(v73 + 16) = *(void *)(v74 + 16);
        swift_bridgeObjectRelease();
        goto LABEL_41;
      }
      sub_10024D9D8(a1 + v72);
    }
    *(_OWORD *)uint64_t v73 = *(_OWORD *)v74;
    *(void *)(v73 + 16) = *(void *)(v74 + 16);
LABEL_41:
    if (*(void *)(v73 + 32))
    {
      uint64_t v79 = *(void *)(v74 + 32);
      if (v79)
      {
        *(void *)(v73 + 24) = *(void *)(v74 + 24);
        *(void *)(v73 + 32) = v79;
        swift_bridgeObjectRelease();
        *(void *)(v73 + 40) = *(void *)(v74 + 40);
        swift_bridgeObjectRelease();
LABEL_46:
        *(void *)(v73 + 48) = *(void *)(v74 + 48);
        *(unsigned char *)(v73 + 56) = *(unsigned char *)(v74 + 56);
        *(void *)(v73 + 64) = *(void *)(v74 + 64);
        swift_bridgeObjectRelease();
        *(unsigned char *)(v73 + 72) = *(unsigned char *)(v74 + 72);
        return a1;
      }
      sub_10024D9D8(v73 + 24);
    }
    *(_OWORD *)(v73 + 24) = *(_OWORD *)(v74 + 24);
    *(void *)(v73 + 40) = *(void *)(v74 + 40);
    goto LABEL_46;
  }
LABEL_32:
  long long v77 = *(_OWORD *)(v74 + 48);
  *(_OWORD *)(v73 + 32) = *(_OWORD *)(v74 + 32);
  *(_OWORD *)(v73 + 48) = v77;
  *(_OWORD *)(v73 + 57) = *(_OWORD *)(v74 + 57);
  long long v78 = *(_OWORD *)(v74 + 16);
  *(_OWORD *)uint64_t v73 = *(_OWORD *)v74;
  *(_OWORD *)(v73 + 16) = v78;
  return a1;
}

uint64_t sub_10024E4AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10024E4C0);
}

uint64_t sub_10024E4C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 48);
      int v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_10002F214(&qword_10069B310);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 80);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_10024E5F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10024E608);
}

uint64_t sub_10024E608(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 48);
      int v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_10002F214(&qword_10069B310);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 80);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_10024E73C()
{
  sub_10024E8D8(319, (unint64_t *)&qword_1006A6C30, (void (*)(uint64_t))&type metadata accessor for Date);
  if (v0 <= 0x3F)
  {
    sub_10024E8D8(319, (unint64_t *)&qword_10069EFF0, (void (*)(uint64_t))&type metadata accessor for URL);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_10024E8D8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_10024E92C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_10024F628(&qword_1006A0600, (void (*)(uint64_t))type metadata accessor for ICAttachmentArchiveModel);
  uint64_t result = sub_10024F628(&qword_1006A0608, (void (*)(uint64_t))type metadata accessor for ICAttachmentArchiveModel);
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_10024E9B0()
{
  unint64_t result = qword_1006A0618;
  if (!qword_1006A0618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0618);
  }
  return result;
}

unint64_t sub_10024EA04()
{
  unint64_t result = qword_1006A0620;
  if (!qword_1006A0620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0620);
  }
  return result;
}

unint64_t sub_10024EA58()
{
  unint64_t result = qword_1006A0630;
  if (!qword_1006A0630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0630);
  }
  return result;
}

unint64_t sub_10024EAAC()
{
  unint64_t result = qword_1006A0638;
  if (!qword_1006A0638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0638);
  }
  return result;
}

unint64_t sub_10024EB00()
{
  unint64_t result = qword_1006A0640;
  if (!qword_1006A0640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0640);
  }
  return result;
}

unint64_t sub_10024EB54()
{
  unint64_t result = qword_1006A0648;
  if (!qword_1006A0648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0648);
  }
  return result;
}

uint64_t sub_10024EBA8()
{
  return sub_10024EBE4(&qword_1006A0660, &qword_10069DC68, (void (*)(void))sub_10024EC50);
}

uint64_t sub_10024EBE4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001DFF4(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10024EC50()
{
  unint64_t result = qword_1006A0668;
  if (!qword_1006A0668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0668);
  }
  return result;
}

unint64_t sub_10024ECA4()
{
  unint64_t result = qword_1006A0678;
  if (!qword_1006A0678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0678);
  }
  return result;
}

unint64_t sub_10024ECF8()
{
  unint64_t result = qword_1006A0680;
  if (!qword_1006A0680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0680);
  }
  return result;
}

unint64_t sub_10024ED4C()
{
  unint64_t result = qword_1006A0690;
  if (!qword_1006A0690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0690);
  }
  return result;
}

unint64_t sub_10024EDA0()
{
  unint64_t result = qword_1006A06A0;
  if (!qword_1006A06A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A06A0);
  }
  return result;
}

unint64_t sub_10024EDF4()
{
  unint64_t result = qword_1006A06A8;
  if (!qword_1006A06A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A06A8);
  }
  return result;
}

unint64_t sub_10024EE48()
{
  unint64_t result = qword_1006A06B0;
  if (!qword_1006A06B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A06B0);
  }
  return result;
}

unint64_t sub_10024EE9C()
{
  unint64_t result = qword_1006A06B8;
  if (!qword_1006A06B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A06B8);
  }
  return result;
}

uint64_t sub_10024EEF0()
{
  return sub_10024EBE4(&qword_1006A06C8, &qword_10069DC68, (void (*)(void))sub_10024EF2C);
}

unint64_t sub_10024EF2C()
{
  unint64_t result = qword_1006A06D0;
  if (!qword_1006A06D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A06D0);
  }
  return result;
}

uint64_t sub_10024EF80(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001DFF4(&qword_10069FCC8);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10024EFE4()
{
  unint64_t result = qword_1006A06E0;
  if (!qword_1006A06E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A06E0);
  }
  return result;
}

unint64_t sub_10024F038()
{
  unint64_t result = qword_1006A06E8;
  if (!qword_1006A06E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A06E8);
  }
  return result;
}

uint64_t sub_10024F08C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ICAttachmentArchiveModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10024F0F0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ICAttachmentArchiveModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10024F14C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7466654C706F74 && a2 == 0xE700000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7468676952706F74 && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x69526D6F74746F62 && a2 == 0xEB00000000746867 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x654C6D6F74746F62 && a2 == 0xEA00000000007466)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_10024F32C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_10002F214(&qword_1006A06F0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10015E154(a1, a1[3]);
  sub_10024F5D4();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return sub_100018FE8((uint64_t)a1);
  }
  type metadata accessor for CGPoint(0);
  char v20 = 0;
  sub_10024F628(&qword_1006A0700, type metadata accessor for CGPoint);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v9 = v18;
  uint64_t v10 = v19;
  char v20 = 1;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v11 = v18;
  uint64_t v12 = v19;
  char v20 = 2;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v13 = v18;
  uint64_t v14 = v19;
  char v20 = 3;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v15 = v18;
  uint64_t v16 = v19;
  uint64_t result = sub_100018FE8((uint64_t)a1);
  *a2 = v9;
  a2[1] = v10;
  a2[2] = v11;
  a2[3] = v12;
  a2[4] = v13;
  a2[5] = v14;
  a2[6] = v15;
  a2[7] = v16;
  return result;
}

unint64_t sub_10024F5D4()
{
  unint64_t result = qword_1006A06F8;
  if (!qword_1006A06F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A06F8);
  }
  return result;
}

uint64_t sub_10024F628(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for ICAttachmentArchiveModel.Cropping.CodingKeys()
{
  return &type metadata for ICAttachmentArchiveModel.Cropping.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ICAttachmentArchiveModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE8) {
    goto LABEL_17;
  }
  if (a2 + 24 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 24) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 24;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 24;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 24;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x19;
  int v8 = v6 - 25;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ICAttachmentArchiveModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 24 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 24) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE7)
  {
    unsigned int v6 = ((a2 - 232) >> 8) + 1;
    *uint64_t result = a2 + 24;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10024F7E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 24;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICAttachmentArchiveModel.CodingKeys()
{
  return &type metadata for ICAttachmentArchiveModel.CodingKeys;
}

ValueMetadata *type metadata accessor for ICAttachmentArchiveModel.Coordinate()
{
  return &type metadata for ICAttachmentArchiveModel.Coordinate;
}

unsigned char *storeEnumTagSinglePayload for ICAttachmentArchiveModel.ImageFilters(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10024F8F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICAttachmentArchiveModel.ImageFilters()
{
  return &type metadata for ICAttachmentArchiveModel.ImageFilters;
}

unsigned char *_s11MobileNotes24ICAttachmentArchiveModelV12OrientationsOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10024F9FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICAttachmentArchiveModel.Orientations()
{
  return &type metadata for ICAttachmentArchiveModel.Orientations;
}

uint64_t sub_10024FA38()
{
  return sub_10001DFB0(&qword_1006A0718, &qword_1006A0720);
}

unint64_t sub_10024FA78()
{
  unint64_t result = qword_1006A0728;
  if (!qword_1006A0728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0728);
  }
  return result;
}

uint64_t sub_10024FAD0()
{
  return sub_10001DFB0(&qword_1006A0730, &qword_1006A0738);
}

unint64_t sub_10024FB10()
{
  unint64_t result = qword_1006A0740;
  if (!qword_1006A0740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0740);
  }
  return result;
}

unint64_t sub_10024FB68()
{
  unint64_t result = qword_1006A0748;
  if (!qword_1006A0748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0748);
  }
  return result;
}

unint64_t sub_10024FBC0()
{
  unint64_t result = qword_1006A0750;
  if (!qword_1006A0750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0750);
  }
  return result;
}

unint64_t sub_10024FC18()
{
  unint64_t result = qword_1006A0758;
  if (!qword_1006A0758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0758);
  }
  return result;
}

unint64_t sub_10024FC70()
{
  unint64_t result = qword_1006A0760;
  if (!qword_1006A0760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0760);
  }
  return result;
}

unint64_t sub_10024FCC8()
{
  unint64_t result = qword_1006A0768;
  if (!qword_1006A0768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0768);
  }
  return result;
}

unint64_t sub_10024FD20()
{
  unint64_t result = qword_1006A0770;
  if (!qword_1006A0770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0770);
  }
  return result;
}

unint64_t sub_10024FD74()
{
  unint64_t result = qword_1006A0778;
  if (!qword_1006A0778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0778);
  }
  return result;
}

unint64_t sub_10024FDC8()
{
  unint64_t result = qword_1006A0780;
  if (!qword_1006A0780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0780);
  }
  return result;
}

unint64_t sub_10024FE1C()
{
  unint64_t result = qword_1006A0790;
  if (!qword_1006A0790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0790);
  }
  return result;
}

unint64_t sub_10024FE70(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10062BB78, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 4) {
    return 4;
  }
  else {
    return v3;
  }
}

unint64_t sub_10024FEBC(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10062BBF8, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 5) {
    return 5;
  }
  else {
    return v3;
  }
}

uint64_t sub_10024FF08(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656475746974616CLL && a2 == 0xE800000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

double sub_100250008(void *a1)
{
  uint64_t v4 = sub_10002F214(&qword_1006A0798);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  BOOL v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10015E154(a1, a1[3]);
  sub_10024FE1C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v1)
  {
    v10[15] = 0;
    KeyedDecodingContainer.decode(_:forKey:)();
    double v2 = v8;
    v10[14] = 1;
    KeyedDecodingContainer.decode(_:forKey:)();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  }
  sub_100018FE8((uint64_t)a1);
  return v2;
}

unint64_t sub_1002501B4()
{
  unint64_t result = qword_1006A07A0;
  if (!qword_1006A07A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A07A0);
  }
  return result;
}

unint64_t sub_100250208()
{
  unint64_t result = qword_1006A07A8;
  if (!qword_1006A07A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A07A8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ICAttachmentArchiveModel.Coordinate.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100250328);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICAttachmentArchiveModel.Coordinate.CodingKeys()
{
  return &type metadata for ICAttachmentArchiveModel.Coordinate.CodingKeys;
}

unint64_t sub_100250364()
{
  unint64_t result = qword_1006A07B0;
  if (!qword_1006A07B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A07B0);
  }
  return result;
}

unint64_t sub_1002503BC()
{
  unint64_t result = qword_1006A07B8;
  if (!qword_1006A07B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A07B8);
  }
  return result;
}

unint64_t sub_100250414()
{
  unint64_t result = qword_1006A07C0;
  if (!qword_1006A07C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A07C0);
  }
  return result;
}

uint64_t sub_100250474(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UIListContentConfiguration();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  double v8 = (char *)&v27[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v27[-1] - v9;
  static UIListContentConfiguration.valueCell()();
  uint64_t v11 = type metadata accessor for UICellConfigurationState();
  uint64_t v28 = v11;
  unint64_t v29 = &protocol witness table for UICellConfigurationState;
  uint64_t v12 = sub_10015E0F0(v27);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v12, a1, v11);
  UIListContentConfiguration.updated(for:)();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v8, v4);
  sub_100018FE8((uint64_t)v27);
  uint64_t v14 = OBJC_IVAR____TtC11MobileNotes42FolderComposerFilterCellTagsExpandCollapse_hiddenTagCount;
  uint64_t v15 = *(void *)(v2 + OBJC_IVAR____TtC11MobileNotes42FolderComposerFilterCellTagsExpandCollapse_hiddenTagCount);
  id v16 = [self mainBundle];
  if (v15)
  {
    NSString v17 = String._bridgeToObjectiveC()();
    id v18 = [v16 localizedStringForKey:v17 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    UIListContentConfiguration.text.setter();
    v27[0] = 43;
    v27[1] = 0xE100000000000000;
    uint64_t v26 = *(void *)(v2 + v14);
    v19._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v19);
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v20 = String._bridgeToObjectiveC()();
    id v21 = [v16 localizedStringForKey:v20 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    UIListContentConfiguration.text.setter();
  }
  UIListContentConfiguration.secondaryText.setter();
  id v22 = [self ICTintColor];
  int v23 = (void (*)(uint64_t *, void))UIListContentConfiguration.textProperties.modify();
  UIListContentConfiguration.TextProperties.color.setter();
  v23(v27, 0);
  uint64_t v28 = v4;
  unint64_t v29 = &protocol witness table for UIListContentConfiguration;
  int v24 = sub_10015E0F0(v27);
  (*(void (**)(uint64_t *, char *, uint64_t))(v5 + 16))(v24, v10, v4);
  UICollectionViewCell.contentConfiguration.setter();
  return ((uint64_t (*)(char *, uint64_t))v13)(v10, v4);
}

id sub_1002509B8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FolderComposerFilterCellTagsExpandCollapse();
  return [super dealloc];
}

uint64_t type metadata accessor for FolderComposerFilterCellTagsExpandCollapse()
{
  return self;
}

void sub_100250AD8()
{
  id v1 = [v0 textAttachment];
  if (v1)
  {
    id v2 = v1;
    *((void *)&v9 + 1) = sub_100031418(0, (unint64_t *)&unk_1006A5250);
    *(void *)&long long v8 = v2;
  }
  else
  {
    long long v8 = 0u;
    long long v9 = 0u;
  }
  v7[3] = sub_10002F214(&qword_10069B4D0);
  v7[0] = swift_allocObject();
  sub_1002510BC((uint64_t)&v8, v7[0] + 16);
  int v3 = (char *)sub_1001A76DC((uint64_t)v7);
  sub_100018FE8((uint64_t)v7);
  sub_100015BE0((uint64_t)&v8);
  uint64_t v4 = *(void **)&v3[OBJC_IVAR____TtC11MobileNotes30InlineMenuButtonTextAttachment_menu];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = sub_100251124(v3);
    [v6 setMenu:v5];
    [v0 setView:v6];

    int v3 = (char *)v6;
  }
}

double sub_100250C44(double a1, double a2, double a3, double a4, double a5, double a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  type metadata accessor for Key(0);
  sub_1001BBF80();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v29.receiver = v9;
  v29.super_class = ObjectType;
  objc_msgSendSuper2(&v29, "attachmentBoundsForAttributes:location:textContainer:proposedLineFragment:position:", isa, a8, a9, a1, a2, a3, a4, a5, a6);
  double v21 = v20;

  id v22 = [v9 textAttachment];
  if (v22)
  {
    int v23 = v22;
    type metadata accessor for InlineMenuButtonTextAttachment();
    uint64_t v24 = swift_dynamicCastClass();
    if (v24)
    {
      uint64_t v25 = v24;
      uint64_t v26 = OBJC_IVAR____TtC11MobileNotes30InlineMenuButtonTextAttachment_font;
      [*(id *)(v24 + OBJC_IVAR____TtC11MobileNotes30InlineMenuButtonTextAttachment_font) descender];
      [*(id *)(v25 + v26) lineHeight];
      if (v27 + 8.0 < *(double *)(v25 + OBJC_IVAR____TtC11MobileNotes30InlineMenuButtonTextAttachment_minimumHeight)) {
        [*(id *)(v25 + v26) lineHeight];
      }
    }
  }
  return v21;
}

uint64_t sub_100250F30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for AttributeContainer();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a3, a1, v6);
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v7 = *(void **)(a2 + OBJC_IVAR____TtC11MobileNotes30InlineMenuButtonTextAttachment_font);
  sub_100251454();
  id v8 = v7;
  return AttributeContainer.subscript.setter();
}

uint64_t sub_100250FFC()
{
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

uint64_t type metadata accessor for InlineMenuButtonTextAttachmentViewProvider()
{
  return self;
}

uint64_t sub_10025107C()
{
  if (*(void *)(v0 + 40)) {
    sub_100018FE8(v0 + 16);
  }

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1002510BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002F214(&qword_10069B4D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *sub_100251124(char *a1)
{
  uint64_t v2 = sub_10002F214(&qword_1006A0820);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UIButton.Configuration();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  long long v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v19 - v10;
  static UIButton.Configuration.gray()();
  id v12 = *(id *)&a1[OBJC_IVAR____TtC11MobileNotes30InlineMenuButtonTextAttachment_foregroundColor];
  UIButton.Configuration.baseForegroundColor.setter();
  uint64_t v13 = OBJC_IVAR____TtC11MobileNotes30InlineMenuButtonTextAttachment_font;
  [*(id *)&a1[OBJC_IVAR____TtC11MobileNotes30InlineMenuButtonTextAttachment_font] lineHeight];
  if (v14 + 8.0 < *(double *)&a1[OBJC_IVAR____TtC11MobileNotes30InlineMenuButtonTextAttachment_minimumHeight]) {
    [*(id *)&a1[v13] lineHeight:4.0];
  }
  UIButton.Configuration.contentInsets.setter();
  *(void *)(swift_allocObject() + 16) = a1;
  uint64_t v15 = a1;
  UIConfigurationTextAttributesTransformer.init(_:)();
  uint64_t v16 = type metadata accessor for UIConfigurationTextAttributesTransformer();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v4, 0, 1, v16);
  UIButton.Configuration.titleTextAttributesTransformer.setter();
  sub_100031418(0, &qword_10069C298);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
  NSString v17 = (void *)UIButton.init(configuration:primaryAction:)();
  [v17 setShowsMenuAsPrimaryAction:1];
  [v17 setChangesSelectionAsPrimaryAction:1];
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  return v17;
}

uint64_t sub_1002513F4()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10025142C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100250F30(a1, *(void *)(v2 + 16), a2);
}

void sub_100251434()
{
}

unint64_t sub_100251454()
{
  unint64_t result = qword_1006A0828;
  if (!qword_1006A0828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0828);
  }
  return result;
}

void sub_1002514A8()
{
}

uint64_t sub_1002514D0()
{
  return 8;
}

uint64_t sub_1002514DC()
{
  return swift_release();
}

uint64_t sub_1002514E4(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_1002514F4()
{
  return dispatch thunk of Hashable.hashValue.getter();
}

void *sub_10025153C(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

void *AddLinkAttachmentIntent.persistentIdentifier.unsafeMutableAddressor()
{
  return &static AddLinkAttachmentIntent.persistentIdentifier;
}

unint64_t static AddLinkAttachmentIntent.persistentIdentifier.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_100251570()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  sub_100032974(v6, static AddLinkAttachmentIntent.title);
  sub_10003293C(v6, (uint64_t)static AddLinkAttachmentIntent.title);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t AddLinkAttachmentIntent.title.unsafeMutableAddressor()
{
  if (qword_10069AD88 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for LocalizedStringResource();

  return sub_10003293C(v0, (uint64_t)static AddLinkAttachmentIntent.title);
}

uint64_t static AddLinkAttachmentIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_10069AD88 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_10003293C(v2, (uint64_t)static AddLinkAttachmentIntent.title);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t static AddLinkAttachmentIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for Locale();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = type metadata accessor for LocalizedStringResource();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v4, 1, 1, v11);
  IntentDescription.init(_:categoryName:searchKeywords:)();
  uint64_t v13 = type metadata accessor for IntentDescription();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 0, 1, v13);
}

uint64_t static AddLinkAttachmentIntent.parameterSummary.getter()
{
  uint64_t v0 = sub_10002F214(&qword_1006A0838);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10002F214(&qword_1006A0840);
  __chkstk_darwin(v1);
  sub_100251D34();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._countAndFlagsBits = 543450177;
  v2._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_10002F214(&qword_1006A0850);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._countAndFlagsBits = 544175136;
  v3._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  swift_getKeyPath();
  sub_10002F214(&qword_1006A0858);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v4);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:_:)();
}

unint64_t sub_100251D34()
{
  unint64_t result = qword_1006A0848;
  if (!qword_1006A0848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0848);
  }
  return result;
}

uint64_t sub_100251D88@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100251DB4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100251DE0()
{
  swift_getKeyPath();
  sub_100251D34();
  uint64_t v0 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)();
  swift_release();
  sub_10002F214(&qword_10069BA00);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100529F20;
  *(void *)(v1 + 32) = v0;
  specialized Array._endMutation()();
  swift_retain();
  uint64_t v2 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  swift_release();
  return v2;
}

double AddLinkAttachmentIntent.init()@<D0>(_OWORD *a1@<X8>)
{
  sub_1002535F0((char **)v5);
  long long v2 = v5[1];
  *a1 = v5[0];
  a1[1] = v2;
  double result = *(double *)&v6;
  long long v4 = v7;
  a1[2] = v6;
  a1[3] = v4;
  return result;
}

uint64_t AddLinkAttachmentIntent.url.setter(uint64_t a1)
{
  uint64_t v2 = sub_10002F214(&qword_10069B310);
  __chkstk_darwin(v2 - 8);
  sub_1001BC0FC(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  IntentParameter.wrappedValue.setter();
  return sub_10002B754(a1, &qword_10069B310);
}

uint64_t AddLinkAttachmentIntent.note.setter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NoteEntity(0);
  __chkstk_darwin(v2 - 8);
  sub_100254244(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for NoteEntity);
  IntentParameter.wrappedValue.setter();
  return sub_1002542AC(a1, type metadata accessor for NoteEntity);
}

uint64_t AddLinkAttachmentIntent.insertionRange.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t AddLinkAttachmentIntent.insertionRange.setter(uint64_t result, uint64_t a2, char a3)
{
  *(void *)(v3 + 24) = result;
  *(void *)(v3 + 32) = a2;
  *(unsigned char *)(v3 + 40) = a3 & 1;
  return result;
}

uint64_t (*AddLinkAttachmentIntent.insertionRange.modify())()
{
  return ICCloudSyncingObject.MoveAction.Types.rawValue.getter;
}

uint64_t AddLinkAttachmentIntent.loggingConfiguration.getter()
{
  AppDependency.wrappedValue.getter();
  return v1;
}

uint64_t AddLinkAttachmentIntent.loggingConfiguration.setter()
{
  return AppDependency.wrappedValue.setter();
}

uint64_t (*AddLinkAttachmentIntent.loggingConfiguration.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = AppDependency.wrappedValue.modify();
  return sub_10015ACE0;
}

uint64_t AddLinkAttachmentIntent.$loggingConfiguration.getter()
{
  return AppDependency.projectedValue.getter();
}

uint64_t AddLinkAttachmentIntent.perform()(uint64_t a1)
{
  v2[10] = a1;
  v2[11] = v1;
  v2[12] = type metadata accessor for AttachmentEntity();
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for NoteID();
  v2[17] = v3;
  v2[18] = *(void *)(v3 - 8);
  v2[19] = swift_task_alloc();
  type metadata accessor for NoteEntity(0);
  v2[20] = swift_task_alloc();
  return _swift_task_switch(sub_1002522A0, 0, 0);
}

uint64_t sub_1002522A0()
{
  uint64_t v2 = v0[19];
  uint64_t v1 = v0[20];
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[18];
  AppDependency.wrappedValue.getter();
  uint64_t v5 = (void *)v0[5];
  v0[21] = [v5 modernManagedObjectContext];

  IntentParameter.wrappedValue.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v1, v3);
  sub_1002542AC(v1, type metadata accessor for NoteEntity);
  AppDependency.wrappedValue.getter();
  uint64_t v6 = v0[6];
  v0[22] = v6;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1006A3B80 + dword_1006A3B80);
  long long v7 = (void *)swift_task_alloc();
  v0[23] = v7;
  *long long v7 = v0;
  v7[1] = sub_100252404;
  uint64_t v8 = v0[19];
  return v10(v8, v6);
}

uint64_t sub_100252404(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)v1 + 176);
  uint64_t v3 = *(void *)(*(void *)v1 + 152);
  uint64_t v4 = *(void *)(*(void *)v1 + 144);
  uint64_t v5 = *(void *)(*(void *)v1 + 136);
  *(void *)(*(void *)v1 + 192) = a1;
  swift_task_dealloc();

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  return _swift_task_switch(sub_10025257C, 0, 0);
}

uint64_t sub_10025257C()
{
  uint64_t v1 = (void *)v0[24];
  uint64_t v2 = (void *)v0[21];
  uint64_t v3 = (long long *)v0[11];
  uint64_t v4 = swift_allocObject();
  v0[25] = v4;
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = v2;
  long long v5 = *v3;
  long long v6 = v3[1];
  long long v7 = v3[3];
  *(_OWORD *)(v4 + 64) = v3[2];
  *(_OWORD *)(v4 + 80) = v7;
  *(_OWORD *)(v4 + 32) = v5;
  *(_OWORD *)(v4 + 48) = v6;
  id v8 = v1;
  id v9 = v2;
  sub_1002541E0((uint64_t)v3);
  uint64_t v10 = (void *)swift_task_alloc();
  v0[26] = v10;
  uint64_t v11 = sub_10002F214(&qword_10069D520);
  void *v10 = v0;
  v10[1] = sub_1002526A0;
  return NSManagedObjectContext.perform<A>(_:)(v0 + 7, sub_1002541C0, v4, v11);
}

uint64_t sub_1002526A0()
{
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_100252CC4;
  }
  else {
    uint64_t v2 = sub_1002527D4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002527D4()
{
  uint64_t v1 = *(void **)(v0 + 56);
  *(void *)(v0 + 224) = v1;
  if (v1)
  {
    id v2 = *(id *)(v0 + 168);
    id v3 = v1;
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 232) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1002529B8;
    uint64_t v5 = *(void *)(v0 + 168);
    uint64_t v6 = *(void *)(v0 + 128);
    return AttachmentEntity.init(for:in:)(v6, (uint64_t)v3, v5);
  }
  else
  {
    id v8 = *(void **)(v0 + 192);
    id v9 = *(void **)(v0 + 168);
    type metadata accessor for ICError(0);
    *(void *)(v0 + 72) = 227;
    sub_1001B50CC((uint64_t)_swiftEmptyArrayStorage);
    sub_100254810((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_willThrow();

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
}

uint64_t sub_1002529B8()
{
  *(void *)(*(void *)v1 + 240) = v0;
  swift_task_dealloc();
  if (v0) {
    id v2 = sub_100252D78;
  }
  else {
    id v2 = sub_100252ACC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100252ACC()
{
  uint64_t v12 = (void *)v0[28];
  uint64_t v13 = (void *)v0[21];
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[13];
  uint64_t v4 = v0[14];
  double v14 = (void *)v0[24];
  sub_100254244(v2, v1, (uint64_t (*)(void))type metadata accessor for AttachmentEntity);
  uint64_t v5 = _s11MobileNotes20OpenAttachmentIntentVACycfC_0();
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  sub_100254244(v1, v4, (uint64_t (*)(void))type metadata accessor for AttachmentEntity);
  sub_100254244(v4, v3, (uint64_t (*)(void))type metadata accessor for AttachmentEntity);
  IntentParameter.wrappedValue.setter();
  sub_1002542AC(v4, (uint64_t (*)(void))type metadata accessor for AttachmentEntity);
  sub_1002542AC(v1, (uint64_t (*)(void))type metadata accessor for AttachmentEntity);
  v0[2] = v5;
  v0[3] = v7;
  v0[4] = v9;
  sub_100254810(&qword_10069EEF0, (void (*)(uint64_t))type metadata accessor for AttachmentEntity);
  sub_100034858();
  static IntentResult.result<A, B>(value:opensIntent:)();

  sub_1002542AC(v2, (uint64_t (*)(void))type metadata accessor for AttachmentEntity);
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_100252CC4()
{
  uint64_t v1 = *(void **)(v0 + 192);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100252D78()
{
  uint64_t v1 = *(void **)(v0 + 224);
  uint64_t v2 = *(void **)(v0 + 192);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

void sub_100252E34(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v39 = a3;
  uint64_t v7 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10002F214(&qword_10069B310);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    goto LABEL_6;
  }
  uint64_t v38 = a4;
  id v17 = a1;
  id v37 = a2;
  id v18 = [a2 objectWithID:v17];
  self;
  uint64_t v19 = (void *)swift_dynamicCastObjCClass();
  if (!v19)
  {

LABEL_6:
    type metadata accessor for ICError(0);
    uint64_t v40 = 227;
    sub_1001B50CC((uint64_t)_swiftEmptyArrayStorage);
    sub_100254810((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_willThrow();
    return;
  }
  double v20 = v19;
  if ([v19 isPasswordProtectedAndLocked])
  {
    sub_100173F8C();
    swift_allocError();
    char v22 = 11;
LABEL_13:
    *double v21 = v22;
    swift_willThrow();

    return;
  }
  if (![v20 isEditable])
  {
    sub_100173F8C();
    swift_allocError();
    char v22 = 12;
    goto LABEL_13;
  }
  if (![v20 canAddAttachment])
  {
    sub_100173F8C();
    swift_allocError();
    char v22 = 21;
    goto LABEL_13;
  }
  id v36 = v17;
  IntentParameter.wrappedValue.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_10002B754((uint64_t)v12, &qword_10069B310);
    IntentParameter.projectedValue.getter();
    uint64_t v23 = type metadata accessor for IntentDialog();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v9, 1, 1, v23);
    type metadata accessor for AppIntentError();
    sub_100254810((unint64_t *)&unk_1006A2DB0, (void (*)(uint64_t))&type metadata accessor for AppIntentError);
    swift_allocError();
    IntentParameter.needsValueError(_:)();
    swift_release();
    sub_10002B754((uint64_t)v9, (uint64_t *)&unk_10069C9B0);
    swift_willThrow();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    URL._bridgeToObjectiveC()(v24);
    uint64_t v26 = v25;
    id v27 = [v20 addURLAttachmentWithURL:v25];

    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    if (v27)
    {
      id v28 = objc_allocWithZone((Class)ICAttachmentInsertionController);
      id v29 = v27;
      id v30 = [v28 initWithNote:v20];
      sub_100254858(v39 + 24, (uint64_t)v42);
      sub_100254858((uint64_t)v42, (uint64_t)v43);
      if (v44) {
        id v31 = [v30 addAttachment:v29];
      }
      else {
        id v31 = [v30 addAttachment:v29 atTextRange:v43[0], v43[1]];
      }

      id v41 = 0;
      if ([v37 save:&v41])
      {
        id v32 = v41;
        id v33 = [v29 objectID];

        *uint64_t v38 = v33;
      }
      else
      {
        id v34 = v41;
        _convertNSErrorToError(_:)();

        swift_willThrow();
      }
    }
    else
    {

      *uint64_t v38 = 0;
    }
  }
}

uint64_t sub_100253444(uint64_t a1)
{
  long long v4 = v1[1];
  *(_OWORD *)(v2 + 16) = *v1;
  *(_OWORD *)(v2 + 32) = v4;
  long long v5 = v1[3];
  *(_OWORD *)(v2 + 48) = v1[2];
  *(_OWORD *)(v2 + 64) = v5;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 80) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_1002534FC;
  return AddLinkAttachmentIntent.perform()(a1);
}

uint64_t sub_1002534FC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1002535F0@<X0>(char **a1@<X8>)
{
  unint64_t v60 = a1;
  uint64_t v1 = sub_10002F214(&qword_10069B1D0);
  __chkstk_darwin(v1 - 8);
  unint64_t v59 = (char *)v52 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10002F214(&qword_10069B310);
  __chkstk_darwin(v3 - 8);
  uint64_t v57 = (char *)v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = type metadata accessor for InputConnectionBehavior();
  uint64_t v75 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v74 = (char *)v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v58 = (char *)v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v64 = (char *)v52 - v9;
  uint64_t v10 = sub_10002F214((uint64_t *)&unk_10069E280);
  __chkstk_darwin(v10 - 8);
  uint64_t v56 = (char *)v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v12 - 8);
  int v54 = (char *)v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  id v17 = (char *)v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for Locale();
  __chkstk_darwin(v18 - 8);
  uint64_t v19 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v19 - 8);
  uint64_t v20 = type metadata accessor for LocalizedStringResource();
  uint64_t v70 = v20;
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_10002F214((uint64_t *)&unk_10069B250);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v24 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 104);
  unsigned int v61 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v53 = v14;
  v25(v17, enum case for LocalizedStringResource.BundleDescription.main(_:), v14);
  uint64_t v63 = v15 + 104;
  uint64_t v62 = v25;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v25(v17, v24, v14);
  uint64_t v26 = v54;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  id v27 = *(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56);
  uint64_t v69 = v21 + 56;
  uint64_t v71 = v27;
  v27(v26, 0, 1, v20);
  uint64_t v28 = type metadata accessor for String.IntentInputOptions();
  uint64_t v78 = 0;
  uint64_t v79 = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v56, 1, 1, v28);
  uint64_t v65 = type metadata accessor for IntentDialog();
  uint64_t v29 = *(void *)(v65 - 8);
  uint64_t v66 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56);
  uint64_t v67 = v29 + 56;
  v66(v64, 1, 1, v65);
  unsigned int v72 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v68 = *(void (**)(char *))(v75 + 104);
  v75 += 104;
  uint64_t v30 = v73;
  v68(v74);
  v52[1] = v23;
  uint64_t v56 = (char *)IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)();
  uint64_t v55 = sub_10002F214(&qword_10069B318);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v31 = v61;
  uint64_t v32 = v53;
  id v33 = v62;
  v62(v17, v61, v53);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v33(v17, v31, v32);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  id v34 = v26;
  v71(v26, 0, 1, v70);
  uint64_t v35 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v57, 1, 1, v35);
  id v36 = v64;
  v66(v64, 1, 1, v65);
  ((void (*)(char *, void, uint64_t))v68)(v74, v72, v30);
  uint64_t v57 = (char *)IntentParameter<>.init(title:description:default:requestValueDialog:inputConnectionBehavior:)();
  uint64_t v55 = sub_10002F214(&qword_10069B1D8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v37 = v61;
  uint64_t v38 = v62;
  v62(v17, v61, v32);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v38(v17, v37, v32);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v71(v34, 0, 1, v70);
  uint64_t v39 = type metadata accessor for NoteEntity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v59, 1, 1, v39);
  uint64_t v40 = v65;
  id v41 = v66;
  v66(v36, 1, 1, v65);
  v41(v58, 1, 1, v40);
  uint64_t v78 = sub_10023F448();
  uint64_t v79 = v42;
  uint64_t v80 = v43;
  char v81 = v44 & 1;
  uint64x2_t v45 = (uint64x2_t)vdupq_n_s64(v44);
  int16x8_t v46 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v45, (uint64x2_t)xmmword_100524D00), (int32x4_t)vshlq_u64(v45, (uint64x2_t)xmmword_100524CF0));
  *(int8x8_t *)v46.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v46), (int8x8_t)0x1000100010001);
  unsigned __int32 v82 = vmovn_s16(v46).u32[0];
  ((void (*)(char *, void, uint64_t))v68)(v74, v72, v73);
  sub_1001579C0();
  uint64_t v47 = IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:query:)();
  sub_10002F214((uint64_t *)&unk_10069CE60);
  unint64_t v76 = 0xD000000000000021;
  unint64_t v77 = 0x8000000100549290;
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t v48 = AppDependency.__allocating_init(key:manager:)();
  sub_10002F214((uint64_t *)&unk_10069B130);
  unint64_t v76 = 0xD000000000000024;
  unint64_t v77 = 0x8000000100549260;
  AnyHashable.init<A>(_:)();
  static AppDependencyManager.shared.getter();
  uint64_t result = AppDependency.__allocating_init(key:manager:)();
  uint64_t v50 = v60;
  uint64_t v51 = v57;
  *unint64_t v60 = v56;
  v50[1] = v51;
  v50[3] = 0;
  v50[4] = 0;
  v50[2] = (char *)v47;
  *((unsigned char *)v50 + 40) = 1;
  v50[6] = (char *)v48;
  v50[7] = (char *)result;
  return result;
}

uint64_t sub_100254158()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 96, 7);
}

void sub_1002541C0(void *a1@<X8>)
{
  sub_100252E34(*(void **)(v1 + 16), *(void **)(v1 + 24), v1 + 32, a1);
}

uint64_t sub_1002541E0(uint64_t a1)
{
  return a1;
}

uint64_t sub_100254244(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1002542AC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_100254310()
{
  unint64_t result = qword_1006A0868;
  if (!qword_1006A0868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0868);
  }
  return result;
}

uint64_t sub_100254364()
{
  return sub_100254810((unint64_t *)&qword_10069EF80, (void (*)(uint64_t))type metadata accessor for AttachmentEntity);
}

unint64_t sub_1002543B4()
{
  unint64_t result = qword_1006A0870;
  if (!qword_1006A0870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0870);
  }
  return result;
}

unint64_t sub_10025440C()
{
  unint64_t result = qword_1006A0878;
  if (!qword_1006A0878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0878);
  }
  return result;
}

uint64_t sub_100254460()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_100254494()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for AddLinkAttachmentIntent()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for AddLinkAttachmentIntent(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for AddLinkAttachmentIntent(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  long long v4 = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for AddLinkAttachmentIntent(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AddLinkAttachmentIntent(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AddLinkAttachmentIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AddLinkAttachmentIntent()
{
  return &type metadata for AddLinkAttachmentIntent;
}

uint64_t sub_10025475C()
{
  return sub_10001DFB0(&qword_1006A0888, &qword_1006A0890);
}

uint64_t sub_100254798()
{
  return sub_10001DFB0(&qword_1006A0898, &qword_1006A08A0);
}

uint64_t sub_1002547D4()
{
  return sub_10001DFB0(&qword_1006A08A8, &qword_1006A08A0);
}

uint64_t sub_100254810(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100254858(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002F214(&qword_1006A08B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002548C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

Swift::Int sub_1002548EC()
{
  return Hasher._finalize()();
}

Swift::Int sub_100254A08()
{
  return Hasher._finalize()();
}

Swift::Int sub_100254B10()
{
  return Hasher._finalize()();
}

Swift::Int sub_100254C18()
{
  return Hasher._finalize()();
}

uint64_t sub_100254D04()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100254E0C()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100254ED8()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100254FCC()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1002550B8()
{
  return Hasher._finalize()();
}

Swift::Int sub_1002551BC()
{
  return Hasher._finalize()();
}

Swift::Int sub_1002552C0()
{
  return Hasher._finalize()();
}

Swift::Int sub_1002553A8()
{
  return Hasher._finalize()();
}

Swift::Int sub_1002554D8()
{
  return Hasher._finalize()();
}

uint64_t sub_1002555F0()
{
  uint64_t v0 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Locale();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for LocalizedStringResource();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = type metadata accessor for TypeDisplayRepresentation();
  sub_100032974(v10, static NotesSetting.typeDisplayRepresentation);
  sub_10003293C(v10, (uint64_t)static NotesSetting.typeDisplayRepresentation);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t NotesSetting.typeDisplayRepresentation.unsafeMutableAddressor()
{
  if (qword_10069AD90 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for TypeDisplayRepresentation();

  return sub_10003293C(v0, (uint64_t)static NotesSetting.typeDisplayRepresentation);
}

uint64_t static NotesSetting.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_10069AD90 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for TypeDisplayRepresentation();
  uint64_t v3 = sub_10003293C(v2, (uint64_t)static NotesSetting.typeDisplayRepresentation);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

unint64_t NotesSetting.rawValue.getter(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0x6363416C61636F6CLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100255A98(unsigned __int8 *a1, char *a2)
{
  return sub_1002769AC(*a1, *a2);
}

unint64_t sub_100255AA4@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = _s11MobileNotes0B7SettingO8rawValueACSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_100255AD4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = NotesSetting.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

Swift::Int sub_100255B00()
{
  return sub_100254A08();
}

uint64_t sub_100255B08()
{
  return sub_100254FCC();
}

Swift::Int sub_100255B10()
{
  return sub_1002550B8();
}

uint64_t sub_100255B18(uint64_t a1)
{
  unint64_t v2 = sub_100158634();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t NotesSetting.debugDescription.getter(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000017;
      break;
    case 2:
      unint64_t result = 0x6361206C61636F6CLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000015;
      break;
    case 4:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_100255C14()
{
  return NotesSetting.debugDescription.getter(*v0);
}

unint64_t sub_100255C1C()
{
  uint64_t v0 = sub_10002F214((uint64_t *)&unk_10069D360);
  __chkstk_darwin(v0 - 8);
  unsigned int v61 = (char *)v43 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v2 - 8);
  unint64_t v59 = (char *)v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v4 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v53 = (char *)v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Locale();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = type metadata accessor for LocalizedStringResource();
  uint64_t v62 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v13 = (char *)v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002F214(&qword_1006A0918);
  uint64_t v14 = sub_10002F214(&qword_10069C5B8);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = v14 - 8;
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v51 = *(unsigned char **)(v15 + 72);
  uint64_t v45 = 4 * (void)v51;
  uint64_t v18 = swift_allocObject();
  uint64_t v46 = v18;
  *(_OWORD *)(v18 + 16) = xmmword_10052AC40;
  uint64_t v19 = *(int *)(v16 + 56);
  uint64_t v20 = v16;
  uint64_t v60 = v16;
  uint64_t v44 = v18 + v17 + v19;
  *(unsigned char *)(v18 + v17) = 0;
  unint64_t v21 = v18 + v17;
  unint64_t v49 = v18 + v17;
  String.LocalizationValue.init(stringLiteral:)();
  uint64_t v48 = v8;
  static Locale.current.getter();
  unsigned int v57 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  uint64_t v58 = v4 + 104;
  uint64_t v63 = v22;
  uint64_t v23 = v53;
  ((void (*)(char *))v22)(v53);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v62 + 56);
  v62 += 56;
  uint64_t v24 = v54;
  v50(v59, 1, 1, v54);
  uint64_t v56 = type metadata accessor for DisplayRepresentation.Image();
  uint64_t v25 = *(void *)(v56 - 8);
  uint64_t v55 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56);
  uint64_t v26 = v25 + 56;
  v55(v61, 1, 1, v56);
  uint64_t v52 = v26;
  DisplayRepresentation.init(title:subtitle:image:)();
  id v27 = v51;
  uint64_t v44 = (uint64_t)&v51[v21 + *(int *)(v20 + 56)];
  v51[v21] = 1;
  uint64_t v47 = v11;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v28 = v57;
  v63(v23, v57, v64);
  v43[1] = v13;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v29 = v50;
  v50(v59, 1, 1, v24);
  uint64_t v30 = v61;
  uint64_t v31 = v56;
  v55(v61, 1, 1, v56);
  DisplayRepresentation.init(title:subtitle:image:)();
  uint64_t v44 = 2 * (void)v27;
  unint64_t v32 = v49;
  id v33 = (unsigned char *)(v49 + 2 * (void)v27);
  void v43[2] = &v33[*(int *)(v60 + 56)];
  *id v33 = 2;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  id v34 = v53;
  v63(v53, v28, v64);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v35 = v59;
  uint64_t v36 = v54;
  v29(v59, 1, 1, v54);
  uint64_t v37 = v31;
  uint64_t v38 = v55;
  v55(v30, 1, 1, v37);
  DisplayRepresentation.init(title:subtitle:image:)();
  uint64_t v39 = &v51[v44 + v32];
  uint64_t v51 = &v39[*(int *)(v60 + 56)];
  *uint64_t v39 = 3;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v63(v34, v57, v64);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v40 = v50;
  v50(v35, 1, 1, v36);
  id v41 = v61;
  v38(v61, 1, 1, v56);
  DisplayRepresentation.init(title:subtitle:image:)();
  *(unsigned char *)(v49 + v45) = 4;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v63(v34, v57, v64);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v40(v35, 1, 1, v54);
  v55(v41, 1, 1, v56);
  DisplayRepresentation.init(title:subtitle:image:)();
  unint64_t result = sub_100168A58(v46);
  static NotesSetting.caseDisplayRepresentations = result;
  return result;
}

uint64_t *NotesSetting.caseDisplayRepresentations.unsafeMutableAddressor()
{
  if (qword_10069AD98 != -1) {
    swift_once();
  }
  return &static NotesSetting.caseDisplayRepresentations;
}

uint64_t static NotesSetting.caseDisplayRepresentations.getter()
{
  if (qword_10069AD98 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

_UNKNOWN **static NotesSetting.allCases.getter()
{
  return &off_10062BD28;
}

uint64_t sub_10025653C(uint64_t a1)
{
  unint64_t v2 = sub_1002567FC();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

void sub_100256588(void *a1@<X8>)
{
  *a1 = &off_10062B340;
}

unint64_t _s11MobileNotes0B7SettingO8rawValueACSgSS_tcfC_0(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10062BC90, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 5) {
    return 5;
  }
  else {
    return v3;
  }
}

unint64_t sub_1002565E8()
{
  unint64_t result = qword_1006A08B8;
  if (!qword_1006A08B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A08B8);
  }
  return result;
}

unint64_t sub_100256640()
{
  unint64_t result = qword_1006A08C0;
  if (!qword_1006A08C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A08C0);
  }
  return result;
}

unint64_t sub_100256698()
{
  unint64_t result = qword_1006A08C8;
  if (!qword_1006A08C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A08C8);
  }
  return result;
}

unint64_t sub_1002566F0()
{
  unint64_t result = qword_1006A08D0;
  if (!qword_1006A08D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A08D0);
  }
  return result;
}

unint64_t sub_100256748()
{
  unint64_t result = qword_1006A08D8;
  if (!qword_1006A08D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A08D8);
  }
  return result;
}

unint64_t sub_1002567A0()
{
  unint64_t result = qword_1006A08E0;
  if (!qword_1006A08E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A08E0);
  }
  return result;
}

unint64_t sub_1002567FC()
{
  unint64_t result = qword_1006A08E8;
  if (!qword_1006A08E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A08E8);
  }
  return result;
}

uint64_t sub_100256850()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1002568A4()
{
  unint64_t result = qword_1006A08F0;
  if (!qword_1006A08F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A08F0);
  }
  return result;
}

unint64_t sub_1002568FC()
{
  unint64_t result = qword_1006A08F8;
  if (!qword_1006A08F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A08F8);
  }
  return result;
}

unint64_t sub_100256954()
{
  unint64_t result = qword_1006A0900;
  if (!qword_1006A0900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0900);
  }
  return result;
}

unint64_t sub_1002569AC()
{
  unint64_t result = qword_1006A0908;
  if (!qword_1006A0908)
  {
    sub_10001DFF4(&qword_1006A0910);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0908);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NotesSetting(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100256AD4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NotesSetting()
{
  return &type metadata for NotesSetting;
}

uint64_t LaunchTaskRunner.delegate.getter()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t LaunchTaskRunner.delegate.setter()
{
  return swift_unknownObjectRelease();
}

void (*LaunchTaskRunner.delegate.modify(void *a1))(void **a1, char a2)
{
  int v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR___ICLaunchTaskRunner_delegate;
  v3[4] = v1;
  v3[5] = v4;
  swift_beginAccess();
  v3[3] = swift_unknownObjectWeakLoadStrong();
  return sub_100256C38;
}

void sub_100256C38(void **a1, char a2)
{
  int v3 = *a1;
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }

  free(v3);
}

id LaunchTaskRunner.__allocating_init(launchTasks:logger:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)objc_allocWithZone(v2);
  swift_unknownObjectWeakInit();
  *(void *)&v5[OBJC_IVAR___ICLaunchTaskRunner_launchTasks] = a1;
  unsigned int v6 = &v5[OBJC_IVAR___ICLaunchTaskRunner_logger];
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a2, v7);
  v11.receiver = v5;
  v11.super_class = v2;
  id v9 = [super init];
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a2, v7);
  return v9;
}

id LaunchTaskRunner.init(launchTasks:logger:)(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  swift_unknownObjectWeakInit();
  *(void *)&v2[OBJC_IVAR___ICLaunchTaskRunner_launchTasks] = a1;
  unsigned int v6 = &v2[OBJC_IVAR___ICLaunchTaskRunner_logger];
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a2, v7);
  v11.receiver = v2;
  v11.super_class = ObjectType;
  [super init];
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a2, v7);
  return v9;
}

uint64_t LaunchTaskRunner.run()()
{
  *(void *)(v1 + 56) = v0;
  return _swift_task_switch(sub_100256ED8, 0, 0);
}

uint64_t sub_100256ED8()
{
  Swift::String v2 = v0 + 7;
  swift_beginAccess();
  Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    if (([Strong launchTaskRunnerShouldRunLaunchTasks:*v2] & 1) == 0)
    {
      unint64_t v17 = Logger.logObject.getter();
      os_log_type_t v20 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v17, v20))
      {
        unint64_t v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v21 = 0;
        _os_log_impl((void *)&_mh_execute_header, v17, v20, "LaunchTaskRunner: Skipped running launch tasks in response to delegate.", v21, 2u);
        swift_slowDealloc();
      }
      swift_unknownObjectRelease();
LABEL_23:

      uint64_t v22 = (uint64_t (*)(void))v0[1];
      return v22();
    }
    swift_unknownObjectRelease();
  }
  uint64_t v4 = (void *)v0[7];
  v0[8] = OBJC_IVAR___ICLaunchTaskRunner_logger;
  id v5 = v4;
  uint64_t v6 = Logger.logObject.getter();
  LOBYTE(v7) = static os_log_type_t.default.getter();
  BOOL v8 = os_log_type_enabled((os_log_t)v6, (os_log_type_t)v7);
  id v9 = (char *)v0[7];
  if (!v8)
  {

    goto LABEL_9;
  }
  uint64_t v1 = (uint8_t *)swift_slowAlloc();
  *(_DWORD *)uint64_t v1 = 134217984;
  unint64_t v10 = *(void *)&v9[OBJC_IVAR___ICLaunchTaskRunner_launchTasks];
  if (v10 >> 62) {
    goto LABEL_32;
  }
  uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v12 = (void *)*v2;
    v0[6] = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v6, (os_log_type_t)v7, "Starting delayed launch tasks (%ld total).", v1, 0xCu);
    swift_slowDealloc();
LABEL_9:
    uint64_t v7 = v0[7];

    unint64_t v13 = *(void *)(v7 + OBJC_IVAR___ICLaunchTaskRunner_launchTasks);
    v0[9] = v13;
    if (v13 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
      v0[10] = v6;
      if (!v6)
      {
LABEL_18:
        swift_bridgeObjectRelease();
        unint64_t v17 = Logger.logObject.getter();
        os_log_type_t v18 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v17, v18))
        {
          uint64_t v19 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v19 = 134217984;
          v0[5] = 0;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v17, v18, "Finished running %ld delayed launch tasks.", v19, 0xCu);
          swift_slowDealloc();
        }
        goto LABEL_23;
      }
    }
    else
    {
      uint64_t v6 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      v0[10] = v6;
      if (!v6) {
        goto LABEL_18;
      }
    }
    if (v6 >= 1) {
      break;
    }
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = 0;
  while (1)
  {
    v0[11] = 0;
    v0[12] = v14;
    uint64_t v15 = v0[9];
    if ((v15 & 0xC000000000000001) != 0)
    {
      uint64_t v16 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      uint64_t v16 = *(void *)(v15 + 8 * v14 + 32);
      swift_unknownObjectRetain();
    }
    v0[13] = v16;
    if ((static Task<>.isCancelled.getter() & 1) == 0) {
      break;
    }
    swift_unknownObjectRelease();
    uint64_t v14 = v0[12] + 1;
    if (v14 == v0[10]) {
      goto LABEL_18;
    }
  }
  uint64_t v24 = v0[7] + v0[8];
  uint64_t v25 = swift_task_alloc();
  v0[14] = v25;
  *(void *)(v25 + 16) = v16;
  *(void *)(v25 + 24) = v24;
  uint64_t v26 = (void *)swift_task_alloc();
  v0[15] = v26;
  *uint64_t v26 = v0;
  v26[1] = sub_100257348;
  return withCheckedContinuation<A>(isolation:function:_:)(v26, 0, 0, 0x29286E7572, 0xE500000000000000, sub_1002580BC, v25, (char *)&type metadata for () + 8);
}

uint64_t sub_100257348()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_100257460, 0, 0);
}

uint64_t sub_100257460()
{
  uint64_t v1 = v0[11];
  Swift::String v2 = (void *)swift_unknownObjectRelease();
  uint64_t v10 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
    return withCheckedContinuation<A>(isolation:function:_:)(v2, v3, v4, v5, v6, v7, v8, v9);
  }
  else
  {
    while (1)
    {
      uint64_t v11 = v0[12] + 1;
      if (v11 == v0[10]) {
        break;
      }
      v0[11] = v10;
      v0[12] = v11;
      uint64_t v12 = v0[9];
      if ((v12 & 0xC000000000000001) != 0)
      {
        uint64_t v13 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v13 = *(void *)(v12 + 8 * v11 + 32);
        swift_unknownObjectRetain();
      }
      v0[13] = v13;
      if ((static Task<>.isCancelled.getter() & 1) == 0)
      {
        uint64_t v19 = v0[7] + v0[8];
        uint64_t v20 = swift_task_alloc();
        v0[14] = v20;
        *(void *)(v20 + 16) = v13;
        *(void *)(v20 + 24) = v19;
        Swift::String v2 = (void *)swift_task_alloc();
        v0[15] = v2;
        *Swift::String v2 = v0;
        v2[1] = sub_100257348;
        id v9 = (char *)&type metadata for () + 8;
        uint64_t v7 = sub_1002580BC;
        uint64_t v3 = 0;
        uint64_t v4 = 0;
        uint64_t v5 = 0x29286E7572;
        unint64_t v6 = 0xE500000000000000;
        uint64_t v8 = v20;
        return withCheckedContinuation<A>(isolation:function:_:)(v2, v3, v4, v5, v6, v7, v8, v9);
      }
      swift_unknownObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 134217984;
      v0[5] = v10;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Finished running %ld delayed launch tasks.", v16, 0xCu);
      swift_slowDealloc();
    }

    unint64_t v17 = (uint64_t (*)(void))v0[1];
    return v17();
  }
}

void sub_1002576A4(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v20 = a2;
  uint64_t v5 = sub_10002F214(&qword_1006A09C0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  unint64_t v13 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v14 = (v11 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (*(unsigned __int8 *)(v6 + 80) + v14 + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v16 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v16 + v13, v12, v9);
  unint64_t v17 = v20;
  *(void *)(v16 + v14) = v20;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v16 + v15, v8, v5);
  aBlock[4] = sub_100258780;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100257B9C;
  aBlock[3] = &unk_100631B40;
  os_log_type_t v18 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_release();
  sub_1000D384C(v17, v18);
  _Block_release(v18);
}

uint64_t sub_100257938(uint64_t a1)
{
  if (a1)
  {
    swift_errorRetain();
    swift_errorRetain();
    swift_unknownObjectRetain();
    swift_errorRetain();
    swift_unknownObjectRetain();
    uint64_t v1 = Logger.logObject.getter();
    os_log_type_t v2 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v1, v2))
    {
      uint64_t v3 = swift_slowAlloc();
      uint64_t v4 = (void *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      *(_DWORD *)uint64_t v3 = 136446466;
      swift_unknownObjectRetain();
      sub_10002F214(&qword_1006A09A8);
      uint64_t v5 = String.init<A>(describing:)();
      sub_10045DA1C(v5, v6, &v9);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v3 + 12) = 2112;
      uint64_t v8 = _convertErrorToNSError(_:)();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v4 = v8;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v1, v2, "LaunchTaskRunner: task %{public}s failed with error: %@", (uint8_t *)v3, 0x16u);
      sub_10002F214(&qword_10069FD50);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_unknownObjectRelease_n();

      swift_errorRelease();
      swift_errorRelease();
    }
  }
  sub_10002F214(&qword_1006A09C0);
  return CheckedContinuation.resume(returning:)();
}

void sub_100257B9C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

void LaunchTaskRunner.init()()
{
}

Swift::Void __swiftcall LaunchTaskRunner.CancellationToken.cancel()()
{
}

void LaunchTaskRunner.CancellationToken.init()()
{
}

uint64_t sub_100257E08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[2] = a5;
  v6[3] = a6;
  uint64_t v8 = (void *)swift_task_alloc();
  v6[4] = v8;
  *uint64_t v8 = v6;
  v8[1] = sub_100257EB8;
  v8[7] = a4;
  return _swift_task_switch(sub_100256ED8, 0, 0);
}

uint64_t sub_100257EB8()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100257FB4, 0, 0);
}

uint64_t sub_100257FB4()
{
  uint64_t v1 = *(void (**)(void))(v0 + 16);
  char v2 = static Task<>.isCancelled.getter();
  v1(v2 & 1);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

void sub_1002580BC(uint64_t a1)
{
  sub_1002576A4(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

id _s11MobileNotes16LaunchTaskRunnerC010runDelayedC5Tasks8delegate17completionHandlerAC17CancellationTokenCAA0cdE8Delegate_pSg_ySbYbctFZ_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v25 = a2;
  uint64_t v4 = sub_10002F214(&qword_1006A09A0);
  __chkstk_darwin(v4 - 8);
  unint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = sub_1000804F8();
  sub_10002F214(&qword_1006A09A8);
  uint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  static Logger.launchTask.getter();
  unint64_t v13 = (objc_class *)type metadata accessor for LaunchTaskRunner();
  unint64_t v14 = (char *)objc_allocWithZone(v13);
  swift_unknownObjectWeakInit();
  *(void *)&v14[OBJC_IVAR___ICLaunchTaskRunner_launchTasks] = v12;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(&v14[OBJC_IVAR___ICLaunchTaskRunner_logger], v10, v7);
  v27.receiver = v14;
  v27.super_class = v13;
  id v15 = [super init];
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  static TaskPriority.low.getter();
  uint64_t v16 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v6, 0, 1, v16);
  unint64_t v17 = (void *)swift_allocObject();
  v17[2] = 0;
  v17[3] = 0;
  uint64_t v18 = v25;
  v17[4] = v15;
  v17[5] = v18;
  v17[6] = a3;
  id v19 = v15;
  swift_retain();
  uint64_t v20 = sub_10030B6A4((uint64_t)v6, (uint64_t)&unk_1006A09B8, (uint64_t)v17);
  uint64_t v21 = (objc_class *)type metadata accessor for LaunchTaskRunner.CancellationToken();
  uint64_t v22 = (char *)objc_allocWithZone(v21);
  *(void *)&v22[OBJC_IVAR___ICLaunchTaskCancellationToken_task] = v20;
  v26.receiver = v22;
  v26.super_class = v21;
  [super init];

  return v23;
}

uint64_t sub_100258398()
{
  return type metadata accessor for LaunchTaskRunner();
}

uint64_t type metadata accessor for LaunchTaskRunner()
{
  uint64_t result = qword_1006A0968;
  if (!qword_1006A0968) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1002583EC()
{
  uint64_t result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for LaunchTaskRunner.CancellationToken()
{
  return self;
}

uint64_t sub_1002584B8()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002584F0(char a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(v1 + 16) + 16))(*(void *)(v1 + 16), a1 & 1);
}

uint64_t sub_100258508()
{
  swift_unknownObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100258550(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100161724;
  return sub_100257E08(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100258618()
{
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = sub_10002F214(&qword_1006A09C0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8 + 8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return _swift_deallocObject(v0, v10, v11);
}

uint64_t sub_100258780(uint64_t a1)
{
  type metadata accessor for Logger();
  sub_10002F214(&qword_1006A09C0);

  return sub_100257938(a1);
}

uint64_t sub_10025886C()
{
  uint64_t v1 = sub_10002F214(&qword_1006A0A08);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v18[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UIListContentConfiguration();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v18[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (objc_class *)type metadata accessor for FolderComposerFilterCellEntry();
  v21.receiver = v0;
  v21.super_class = v8;
  [super layoutSubviews];
  UICollectionViewCell.contentConfiguration.getter();
  if (!v19)
  {
    sub_10002B754((uint64_t)v18, &qword_1006A0A10);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    return sub_10002B754((uint64_t)v3, &qword_1006A0A08);
  }
  sub_10002F214(&qword_1006A0A18);
  int v9 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v3, v9 ^ 1u, 1, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1) {
    return sub_10002B754((uint64_t)v3, &qword_1006A0A08);
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
  [v0 directionalLayoutMargins];
  double v11 = v10;
  if (!ICAccessibilityAccessibilityLargerTextSizesEnabled()) {
    double v11 = v11 + 44.0;
  }
  UIListContentConfiguration.directionalLayoutMargins.getter();
  if (v12 != v11)
  {
    unint64_t v13 = (void (*)(uint64_t *, void))UIListContentConfiguration.directionalLayoutMargins.modify();
    *(double *)(v14 + 8) = v11;
    v13(v18, 0);
    uint64_t v19 = v4;
    uint64_t v20 = &protocol witness table for UIListContentConfiguration;
    id v15 = sub_10015E0F0(v18);
    (*(void (**)(uint64_t *, char *, uint64_t))(v5 + 16))(v15, v7, v4);
    UICollectionViewCell.contentConfiguration.setter();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_100258B6C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10002F214(&qword_10069C1A0);
  __chkstk_darwin(v4 - 8);
  id v33 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UICellAccessory.DisclosureIndicatorOptions();
  uint64_t v34 = *(void *)(v6 - 8);
  uint64_t v35 = v6;
  __chkstk_darwin(v6);
  uint64_t v31 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for UICellAccessory.DisplayedState();
  uint64_t v8 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  double v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UIListContentConfiguration();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  id v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  unint64_t v17 = (char *)&v30 - v16;
  static UIListContentConfiguration.valueCell()();
  uint64_t v18 = type metadata accessor for UICellConfigurationState();
  uint64_t v38 = v18;
  uint64_t v39 = &protocol witness table for UICellConfigurationState;
  uint64_t v19 = sub_10015E0F0(v37);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v19, a1, v18);
  UIListContentConfiguration.updated(for:)();
  uint64_t v36 = *(void (**)(char *, uint64_t))(v12 + 8);
  v36(v15, v11);
  sub_100018FE8((uint64_t)v37);
  if (!*(void *)(v2 + OBJC_IVAR____TtC11MobileNotes29FolderComposerFilterCellEntry_leadingText + 8)) {
    ICAccessibilityAccessibilityLargerTextSizesEnabled();
  }
  swift_bridgeObjectRetain();
  UIListContentConfiguration.text.setter();
  swift_bridgeObjectRetain();
  UIListContentConfiguration.secondaryText.setter();
  uint64_t v38 = v11;
  uint64_t v39 = &protocol witness table for UIListContentConfiguration;
  uint64_t v20 = sub_10015E0F0(v37);
  (*(void (**)(uint64_t *, char *, uint64_t))(v12 + 16))(v20, v17, v11);
  UICollectionViewCell.contentConfiguration.setter();
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC11MobileNotes29FolderComposerFilterCellEntry_showDisclosure) == 1)
  {
    sub_10002F214(&qword_10069C1B0);
    uint64_t v21 = *(void *)(type metadata accessor for UICellAccessory() - 8);
    unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_100524D10;
    unint64_t v30 = v23 + v22;
    uint64_t v24 = v10;
    uint64_t v25 = v32;
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for UICellAccessory.DisplayedState.always(_:), v32);
    uint64_t v26 = type metadata accessor for UICellAccessory.LayoutDimension();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v33, 1, 1, v26);
    objc_super v27 = v31;
    UICellAccessory.DisclosureIndicatorOptions.init(isHidden:reservedLayoutWidth:tintColor:)();
    static UICellAccessory.disclosureIndicator(displayed:options:)();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v27, v35);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v24, v25);
  }
  uint64_t v28 = (uint64_t (*)(char *, uint64_t))v36;
  UICollectionViewListCell.accessories.setter();
  return v28(v17, v11);
}

id sub_100259264()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FolderComposerFilterCellEntry();
  return [super dealloc];
}

uint64_t type metadata accessor for FolderComposerFilterCellEntry()
{
  return self;
}

uint64_t sub_100259310()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100032974(v0, qword_1006A0A20);
  sub_10003293C(v0, (uint64_t)qword_1006A0A20);
  return static Logger.archiving.getter();
}

uint64_t sub_10025935C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10002F214(&qword_1006A0AB0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_10015E154(a1, a1[3]);
  sub_10025B1E8();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v11[0] = *v3;
  char v12 = 0;
  sub_10024EA04();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    v11[0] = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    v11[0] = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    sub_10002F1B0((uint64_t)(v3 + 40), (uint64_t)&v15, &qword_1006A0A40);
    sub_10002F1B0((uint64_t)&v15, (uint64_t)v11, &qword_1006A0A40);
    char v12 = 3;
    sub_10025B23C();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    sub_10002F1B0((uint64_t)(v3 + 48), (uint64_t)v14, &qword_1006A0AC8);
    sub_10002F1B0((uint64_t)v14, (uint64_t)v11, &qword_1006A0AC8);
    char v12 = 4;
    sub_10002F214(&qword_1006A0AD0);
    sub_10025B290(&qword_1006A0AD8, &qword_1006A0AE0);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    sub_10002F1B0((uint64_t)(v3 + 56), (uint64_t)v13, &qword_1006A0A38);
    sub_10002F1B0((uint64_t)v13, (uint64_t)v11, &qword_1006A0A38);
    char v12 = 5;
    sub_10002F214(&qword_10069FCC8);
    sub_10024EF80(&qword_1006A0670);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_100259690()
{
  unint64_t result = 0x6E65644965707974;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x696669746E656469;
      break;
    case 2:
      unint64_t result = 0x656C746974;
      break;
    case 3:
      unint64_t result = 1701869940;
      break;
    case 4:
      unint64_t result = 1936154996;
      break;
    case 5:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100259758@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10025A140(a1, a2);
  *a3 = result;
  return result;
}

void sub_100259780(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_10025978C(uint64_t a1)
{
  unint64_t v2 = sub_10025B1E8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002597C8(uint64_t a1)
{
  unint64_t v2 = sub_10025B1E8();

  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_100259804@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_10025A3C8(a1, v7);
  if (!v2)
  {
    long long v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    double result = *(double *)&v8;
    long long v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_100259848(void *a1)
{
  return sub_10025935C(a1);
}

id sub_100259884(id a1, uint64_t a2, __int16 a3, uint64_t a4, uint64_t a5, double a6)
{
  uint64_t v8 = v6;
  if ((a3 & 1) == 0 || (id v15 = [a1 managedObjectContext]) == 0)
  {
LABEL_8:
    uint64_t ObjectType = swift_getObjectType();
    id v20 = a1;
    uint64_t v22 = (*(uint64_t (**)(void, void, void, uint64_t, uint64_t, uint64_t, uint64_t, double))(a2 + 16))(*(void *)(v8 + 8), *(void *)(v8 + 16), a3 & 0x101, a4, a5, ObjectType, a2, a6);
    if (!v7)
    {
      id v20 = (id)v22;
      self;
      uint64_t v23 = swift_dynamicCastObjCClass();
      if (v23)
      {
        uint64_t v24 = (void *)v23;
        id v20 = v20;
        NSString v25 = v20;
        if ([v24 isRenamable])
        {
          swift_bridgeObjectRetain();
          NSString v25 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          [v24 setTitle:v25];
        }
      }
    }
    return v20;
  }
  uint64_t v16 = v15;
  sub_10002F1B0(v6 + 40, (uint64_t)&v27, &qword_1006A0A40);
  sub_10002F1B0((uint64_t)&v27, (uint64_t)&v28, &qword_1006A0A40);
  char v17 = v28;
  if (v28 == 2)
  {

    goto LABEL_8;
  }
  uint64_t v18 = self;
  uint64_t v19 = &selRef_cloudKitAccountInContext_;
  if (v17) {
    uint64_t v19 = &selRef_localAccountInContext_;
  }
  id v20 = [v18 *v19 v16];

  if (!v20) {
    goto LABEL_8;
  }
  return v20;
}

id sub_100259A84(void *a1, uint64_t a2)
{
  sub_10002F1B0(v2 + 56, (uint64_t)v16, &qword_1006A0A38);
  sub_10002F1B0((uint64_t)v16, (uint64_t)&v17, &qword_1006A0A38);
  uint64_t v5 = v17;
  if (!v17) {
    return 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = (unint64_t)sub_100259FD8(v5, a2);
  swift_bridgeObjectRelease();
  id v7 = [a1 subFolderIdentifiersOrderedSet];
  uint64_t v8 = v7;
  if (!(v6 >> 62))
  {
    uint64_t v9 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v10 = v7;
    id result = (id)swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_4;
    }
LABEL_12:

    swift_bridgeObjectRelease_n();
    [a1 setSubFolderOrderMergeableDataDirty:1];
    [a1 saveSubFolderMergeableDataIfNeeded];
    return [a1 subFolderIdentifiersOrderedSetDocument];
  }
  id v15 = v7;
  swift_bridgeObjectRetain();
  id result = (id)_CocoaArrayWrapper.endIndex.getter();
  uint64_t v9 = (uint64_t)result;
  if (!result) {
    goto LABEL_12;
  }
LABEL_4:
  if (v9 >= 1)
  {
    for (uint64_t i = 0; i != v9; ++i)
    {
      if ((v6 & 0xC000000000000001) != 0) {
        id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v13 = *(id *)(v6 + 8 * i + 32);
      }
      uint64_t v14 = v13;
      [v8 addObject:v13];
    }
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_100259C4C(char *a1, char *a2)
{
  return sub_100275660(*a1, *a2);
}

Swift::Int sub_100259C58()
{
  return Hasher._finalize()();
}

uint64_t sub_100259CC8()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100259D1C()
{
  return Hasher._finalize()();
}

uint64_t sub_100259D88@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10062BD50, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

void sub_100259DE8(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x44554F4C43;
  if (*v1) {
    uint64_t v2 = 0x4C41434F4CLL;
  }
  *a1 = v2;
  a1[1] = 0xE500000000000000;
}

void sub_100259E18(void *a1@<X8>)
{
  *a1 = &off_10062B528;
}

uint64_t sub_100259E28()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100259E88()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_100259ED8()
{
  sub_10025B3A8();
  sub_10025B354();

  return ArgumentDecodable<>.init(fromArgument:)();
}

uint64_t sub_100259F60()
{
  sub_10025B3A8();
  sub_10025B354();

  return static ArgumentDecodable<>.typeSummary(forName:)();
}

void *sub_100259FD8(uint64_t a1, uint64_t a2)
{
  uint64_t result = _swiftEmptyArrayStorage;
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    unint64_t v6 = (uint64_t *)(a1 + 40);
    do
    {
      if (*(void *)(a2 + 16))
      {
        uint64_t v7 = *(v6 - 1);
        uint64_t v8 = *v6;
        swift_bridgeObjectRetain();
        unint64_t v9 = sub_1002B63D4(v7, v8);
        if ((v10 & 1) != 0
          && (id v11 = [*(id *)(*(void *)(a2 + 56) + 8 * v9) identifier]) != 0)
        {
          char v12 = v11;
          static String._unconditionallyBridgeFromObjectiveC(_:)();

          String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      v6 += 2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_10025A140(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E65644965707974 && a2 == 0xEE00726569666974;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1936154996 && a2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000100555460)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_10025A3C8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_10002F214(&qword_1006A0AE8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10015E154(a1, a1[3]);
  sub_10025B1E8();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    sub_100018FE8((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v27 = 0;
    sub_10024ED4C();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    int v9 = v25;
    LOBYTE(v25) = 1;
    uint64_t v10 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v12 = v11;
    uint64_t v24 = v10;
    int v26 = v9;
    LOBYTE(v25) = 2;
    swift_bridgeObjectRetain();
    uint64_t v13 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v15 = v14;
    uint64_t v23 = v13;
    char v27 = 3;
    sub_10025B0DC();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    int v22 = v25;
    sub_10002F214(&qword_1006A0AD0);
    char v27 = 4;
    sub_10025B290(&qword_1006A0AF0, &qword_10069F9F0);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v21 = a2;
    uint64_t v16 = v25;
    sub_10002F214(&qword_10069FCC8);
    char v27 = 5;
    sub_10024EF80(&qword_1006A06D8);
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v17 = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_100018FE8((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v19 = v21;
    *uint64_t v21 = v26;
    *((void *)v19 + 1) = v24;
    *((void *)v19 + 2) = v12;
    *((void *)v19 + 3) = v23;
    *((void *)v19 + 4) = v15;
    v19[40] = v22;
    *((void *)v19 + 6) = v16;
    *((void *)v19 + 7) = v17;
  }
  return result;
}

uint64_t sub_10025A828(int a1)
{
  if (a1 == 1) {
    return 0;
  }
  if (a1 == 3) {
    return 1;
  }
  if (qword_10069ADA0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10003293C(v2, (uint64_t)qword_1006A0A20);
  Swift::Int v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v1 = 2;
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Unknown account type — returning nil", v5, 2u);
    swift_slowDealloc();
  }
  else
  {

    return 2;
  }
  return v1;
}

uint64_t sub_10025A934@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  sub_10025AC00(a2);
  id v5 = [a1 identifier];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v9 = v8;
  }
  else
  {
    uint64_t v7 = 0;
    unint64_t v9 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  id v10 = [a1 localizedName];
  uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  uint64_t v29 = v12;
  swift_bridgeObjectRetain();
  char v28 = sub_10025A828((int)[a1 accountType]);
  uint64_t v32 = a1;
  id v13 = [a1 subFolderIdentifiersOrderedSet];
  id v14 = [v13 allObjects];

  sub_10025AC38();
  unint64_t v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v15 >> 62))
  {
    uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    unint64_t v31 = v9;
    if (v16) {
      goto LABEL_6;
    }
LABEL_16:
    swift_bridgeObjectRelease();

LABEL_17:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease_n();
    *(unsigned char *)a3 = 1;
    *(void *)(a3 + 8) = v7;
    *(void *)(a3 + 16) = v31;
    *(void *)(a3 + 24) = v30;
    *(void *)(a3 + 32) = v29;
    *(unsigned char *)(a3 + 40) = v28;
    *(void *)(a3 + 48) = &_swiftEmptySetSingleton;
    *(void *)(a3 + 56) = _swiftEmptyArrayStorage;
    return result;
  }
  swift_bridgeObjectRetain();
  uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  unint64_t v31 = v9;
  if (!v16) {
    goto LABEL_16;
  }
LABEL_6:
  uint64_t result = sub_100169AAC(0, v16 & ~(v16 >> 63), 0);
  if ((v16 & 0x8000000000000000) == 0)
  {
    uint64_t v27 = a3;
    uint64_t v18 = 0;
    do
    {
      if ((v15 & 0xC000000000000001) != 0) {
        id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v19 = *(id *)(v15 + 8 * v18 + 32);
      }
      uint64_t v20 = v19;
      uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v23 = v22;

      unint64_t v25 = _swiftEmptyArrayStorage[2];
      unint64_t v24 = _swiftEmptyArrayStorage[3];
      if (v25 >= v24 >> 1) {
        sub_100169AAC(v24 > 1, v25 + 1, 1);
      }
      ++v18;
      _swiftEmptyArrayStorage[2] = v25 + 1;
      int v26 = &_swiftEmptyArrayStorage[2 * v25];
      v26[4] = v21;
      v26[5] = v23;
    }
    while (v16 != v18);
    swift_bridgeObjectRelease();

    a3 = v27;
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t *sub_10025AC00(uint64_t *a1)
{
  return a1;
}

unint64_t sub_10025AC38()
{
  unint64_t result = qword_10069C1B8;
  if (!qword_10069C1B8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10069C1B8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ICAccountArchiveModel.Types(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10025AD44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICAccountArchiveModel.Types()
{
  return &type metadata for ICAccountArchiveModel.Types;
}

uint64_t destroy for ICAccountArchiveModel()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ICAccountArchiveModel(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ICAccountArchiveModel(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ICAccountArchiveModel(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ICAccountArchiveModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ICAccountArchiveModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICAccountArchiveModel()
{
  return &type metadata for ICAccountArchiveModel;
}

unint64_t sub_10025B000(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_10025B030();
  unint64_t result = sub_10025B084();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_10025B030()
{
  unint64_t result = qword_1006A0A80;
  if (!qword_1006A0A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0A80);
  }
  return result;
}

unint64_t sub_10025B084()
{
  unint64_t result = qword_1006A0A88;
  if (!qword_1006A0A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0A88);
  }
  return result;
}

unint64_t sub_10025B0DC()
{
  unint64_t result = qword_1006A0A90;
  if (!qword_1006A0A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0A90);
  }
  return result;
}

unint64_t sub_10025B134()
{
  unint64_t result = qword_1006A0A98;
  if (!qword_1006A0A98)
  {
    sub_10001DFF4(&qword_1006A0AA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0A98);
  }
  return result;
}

unint64_t sub_10025B194()
{
  unint64_t result = qword_1006A0AA8;
  if (!qword_1006A0AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0AA8);
  }
  return result;
}

unint64_t sub_10025B1E8()
{
  unint64_t result = qword_1006A0AB8;
  if (!qword_1006A0AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0AB8);
  }
  return result;
}

unint64_t sub_10025B23C()
{
  unint64_t result = qword_1006A0AC0;
  if (!qword_1006A0AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0AC0);
  }
  return result;
}

uint64_t sub_10025B290(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001DFF4(&qword_1006A0AD0);
    sub_10025B310(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10025B310(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    _s3TagVMa();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10025B354()
{
  unint64_t result = qword_1006A0AF8;
  if (!qword_1006A0AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0AF8);
  }
  return result;
}

unint64_t sub_10025B3A8()
{
  unint64_t result = qword_1006A0B00;
  if (!qword_1006A0B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0B00);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ICAccountArchiveModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ICAccountArchiveModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10025B558);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICAccountArchiveModel.CodingKeys()
{
  return &type metadata for ICAccountArchiveModel.CodingKeys;
}

unint64_t sub_10025B594()
{
  unint64_t result = qword_1006A0B08;
  if (!qword_1006A0B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0B08);
  }
  return result;
}

unint64_t sub_10025B5EC()
{
  unint64_t result = qword_1006A0B10;
  if (!qword_1006A0B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0B10);
  }
  return result;
}

unint64_t sub_10025B644()
{
  unint64_t result = qword_1006A0B18;
  if (!qword_1006A0B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0B18);
  }
  return result;
}

uint64_t OpenFolderIntent.target.setter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FolderEntity();
  __chkstk_darwin(v2 - 8);
  sub_10025C764(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  IntentParameter.wrappedValue.setter();
  return sub_10025C7C8(a1);
}

void *OpenFolderIntent.persistentIdentifier.unsafeMutableAddressor()
{
  return &static OpenFolderIntent.persistentIdentifier;
}

uint64_t sub_10025B738()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  sub_100032974(v6, static OpenFolderIntent.title);
  sub_10003293C(v6, (uint64_t)static OpenFolderIntent.title);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t OpenFolderIntent.title.unsafeMutableAddressor()
{
  if (qword_10069ADA8 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for LocalizedStringResource();

  return sub_10003293C(v0, (uint64_t)static OpenFolderIntent.title);
}

uint64_t static OpenFolderIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_10069ADA8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_10003293C(v2, (uint64_t)static OpenFolderIntent.title);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

void *OpenFolderIntent.openAppWhenRun.unsafeMutableAddressor()
{
  return &static OpenFolderIntent.openAppWhenRun;
}

uint64_t static OpenFolderIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for Locale();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = type metadata accessor for LocalizedStringResource();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v4, 1, 1, v11);
  IntentDescription.init(_:categoryName:searchKeywords:)();
  uint64_t v13 = type metadata accessor for IntentDescription();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 0, 1, v13);
}

uint64_t static OpenFolderIntent.parameterSummary.getter()
{
  uint64_t v0 = sub_10002F214(&qword_1006A0B28);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10002F214(&qword_1006A0B30);
  __chkstk_darwin(v1);
  sub_100034CBC();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._countAndFlagsBits = 0x656874206E65704FLL;
  v2._object = (void *)0xE900000000000020;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_10002F214(&qword_1006A0B38);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._countAndFlagsBits = 0x7265646C6F6620;
  v3._object = (void *)0xE700000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_10025BEC8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FolderEntity();
  __chkstk_darwin(v2 - 8);
  sub_10025C764(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  IntentParameter.wrappedValue.setter();
  return sub_10025C7C8(a1);
}

uint64_t sub_10025BF58()
{
  uint64_t v0 = sub_10002F214(&qword_1006A0B28);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10002F214(&qword_1006A0B30);
  __chkstk_darwin(v1);
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._countAndFlagsBits = 0x656874206E65704FLL;
  v2._object = (void *)0xE900000000000020;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_10002F214(&qword_1006A0B38);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._countAndFlagsBits = 0x7265646C6F6620;
  v3._object = (void *)0xE700000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_10025C0F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = _s11MobileNotes16OpenFolderIntentVACycfC_0();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t _s11MobileNotes16OpenFolderIntentVACycfC_0()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v31 = *(void *)(v0 - 8);
  uint64_t v32 = v0;
  __chkstk_darwin(v0);
  uint64_t v30 = (char *)v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v29 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  char v28 = (char *)v26 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069B260);
  __chkstk_darwin(v6 - 8);
  uint64_t v27 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v8 - 8);
  v26[0] = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Locale();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = type metadata accessor for LocalizedStringResource();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  v26[1] = sub_10002F214((uint64_t *)&unk_10069B320);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v18 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  id v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v19(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v19(v13, v18, v10);
  uint64_t v20 = v26[0];
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
  uint64_t v21 = type metadata accessor for FolderEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v27, 1, 1, v21);
  uint64_t v22 = type metadata accessor for IntentDialog();
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(v28, 1, 1, v22);
  v23(v29, 1, 1, v22);
  (*(void (**)(char *, void, uint64_t))(v31 + 104))(v30, enum case for InputConnectionBehavior.default(_:), v32);
  sub_10025CA14((unint64_t *)&qword_1006A3B50);
  uint64_t v24 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  sub_10002F214((uint64_t *)&unk_10069B130);
  unint64_t v33 = 0xD000000000000024;
  unint64_t v34 = 0x8000000100549260;
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  sub_10002F214((uint64_t *)&unk_10069CE60);
  unint64_t v33 = 0xD000000000000021;
  unint64_t v34 = 0x8000000100549290;
  AnyHashable.init<A>(_:)();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  return v24;
}

uint64_t sub_10025C764(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FolderEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10025C7C8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FolderEntity();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10025C824@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10025C850()
{
  return sub_10025CA14(&qword_1006A0B40);
}

unint64_t sub_10025C884(uint64_t a1)
{
  unint64_t result = sub_10025C8AC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10025C8AC()
{
  unint64_t result = qword_1006A0B70;
  if (!qword_1006A0B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0B70);
  }
  return result;
}

unint64_t sub_10025C904()
{
  unint64_t result = qword_1006A0B78;
  if (!qword_1006A0B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0B78);
  }
  return result;
}

uint64_t sub_10025C958()
{
  return sub_10025CA14((unint64_t *)&unk_1006A35F0);
}

uint64_t sub_10025C990()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10025C9AC()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for OpenFolderIntent()
{
  return &type metadata for OpenFolderIntent;
}

uint64_t sub_10025C9D8()
{
  return sub_10001DFB0(&qword_1006A0B98, &qword_1006A0BA0);
}

uint64_t sub_10025CA14(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FolderEntity();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t ApplyFormattingIntent.perform()(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  type metadata accessor for MainActor();
  v2[6] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10025CAF0, v4, v3);
}

uint64_t sub_10025CAF0()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_release();
  uint64_t v2 = *(void **)(v1 + 48);
  if (v2)
  {
    id v3 = v2;
    IntentParameter.wrappedValue.getter();
    uint64_t v4 = &selRef_enableBoldface;
    switch(*(unsigned char *)(v0 + 16))
    {
      case 1:
        uint64_t v4 = &selRef_disableBoldface;
        goto LABEL_6;
      case 2:
        uint64_t v4 = &selRef_toggleBoldface;
        goto LABEL_6;
      case 3:
        goto LABEL_7;
      default:
LABEL_6:
        [v3 *v4];
LABEL_7:
        IntentParameter.wrappedValue.getter();
        uint64_t v6 = &selRef_enableItalics;
        switch(*(unsigned char *)(v0 + 16))
        {
          case 1:
            uint64_t v6 = &selRef_disableItalics;
            goto LABEL_10;
          case 2:
            uint64_t v6 = &selRef_toggleItalics;
            goto LABEL_10;
          case 3:
            goto LABEL_11;
          default:
LABEL_10:
            [v3 *v6];
LABEL_11:
            IntentParameter.wrappedValue.getter();
            uint64_t v7 = &selRef_enableUnderline;
            switch(*(unsigned char *)(v0 + 16))
            {
              case 1:
                uint64_t v7 = &selRef_disableUnderline;
                goto LABEL_14;
              case 2:
                uint64_t v7 = &selRef_toggleUnderline;
                goto LABEL_14;
              case 3:
                goto LABEL_15;
              default:
LABEL_14:
                [v3 *v7];
LABEL_15:
                IntentParameter.wrappedValue.getter();
                uint64_t v8 = &selRef_enableStrikethrough;
                switch(*(unsigned char *)(v0 + 16))
                {
                  case 1:
                    uint64_t v8 = &selRef_disableStrikethrough;
                    goto LABEL_18;
                  case 2:
                    uint64_t v8 = &selRef_toggleStrikethrough;
                    goto LABEL_18;
                  case 3:
                    goto LABEL_19;
                  default:
LABEL_18:
                    [v3 *v8];
LABEL_19:
                    static IntentResult.result<>()();

                    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
                    break;
                }
                break;
            }
            break;
        }
        break;
    }
  }
  else
  {
    type metadata accessor for ICError(0);
    *(void *)(v0 + 24) = 227;
    sub_1001B50CC((uint64_t)_swiftEmptyArrayStorage);
    sub_1001CBD44();
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_willThrow();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v5();
}

double ApplyFormattingIntent.init()@<D0>(_OWORD *a1@<X8>)
{
  sub_10025E5AC((uint64_t *)v5);
  long long v2 = v5[1];
  *a1 = v5[0];
  a1[1] = v2;
  double result = *(double *)&v6;
  long long v4 = v7;
  a1[2] = v6;
  a1[3] = v4;
  return result;
}

uint64_t SetChecklistItemsCheckedIntent.changeOperation.getter()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t SetChecklistItemsCheckedIntent.changeOperation.setter()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t ApplyFormattingIntent.italic.getter()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t ApplyFormattingIntent.italic.setter()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t ApplyFormattingIntent.underline.setter()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t ApplyFormattingIntent.strikethrough.getter()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t ApplyFormattingIntent.strikethrough.setter()
{
  return IntentParameter.wrappedValue.setter();
}

void *ApplyFormattingIntent.persistentIdentifier.unsafeMutableAddressor()
{
  return &static ApplyFormattingIntent.persistentIdentifier;
}

uint64_t sub_10025CF48()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  sub_100032974(v6, static ApplyFormattingIntent.title);
  sub_10003293C(v6, (uint64_t)static ApplyFormattingIntent.title);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t ApplyFormattingIntent.title.unsafeMutableAddressor()
{
  return sub_1001B0DD8(&qword_10069ADB0, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)static ApplyFormattingIntent.title);
}

uint64_t static ApplyFormattingIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1001B0E6C(&qword_10069ADB0, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)static ApplyFormattingIntent.title, a1);
}

void *ApplyFormattingIntent.openAppWhenRun.unsafeMutableAddressor()
{
  return &static ApplyFormattingIntent.openAppWhenRun;
}

void *ApplyFormattingIntent.assistantOnly.unsafeMutableAddressor()
{
  return &static ApplyFormattingIntent.assistantOnly;
}

uint64_t static ApplyFormattingIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for Locale();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = type metadata accessor for LocalizedStringResource();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v4, 1, 1, v11);
  IntentDescription.init(_:categoryName:searchKeywords:)();
  uint64_t v13 = type metadata accessor for IntentDescription();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 0, 1, v13);
}

uint64_t (*CreateAttachmentIntent.note.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = IntentParameter.wrappedValue.modify();
  return sub_10015ACE0;
}

uint64_t CreateAttachmentIntent.$note.getter()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t ApplyFormattingIntent.loggingConfiguration.getter()
{
  AppDependency.wrappedValue.getter();
  return v1;
}

uint64_t ApplyFormattingIntent.loggingConfiguration.setter()
{
  return AppDependency.wrappedValue.setter();
}

uint64_t (*ApplyFormattingIntent.loggingConfiguration.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = AppDependency.wrappedValue.modify();
  return sub_10015ACE0;
}

uint64_t ApplyFormattingIntent.$loggingConfiguration.getter()
{
  return AppDependency.projectedValue.getter();
}

uint64_t sub_10025D618()
{
  uint64_t v0 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Locale();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for LocalizedStringResource();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = type metadata accessor for TypeDisplayRepresentation();
  sub_100032974(v10, static ApplyFormattingIntent.ChangeOperationType.typeDisplayRepresentation);
  sub_10003293C(v10, (uint64_t)static ApplyFormattingIntent.ChangeOperationType.typeDisplayRepresentation);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t ApplyFormattingIntent.ChangeOperationType.typeDisplayRepresentation.unsafeMutableAddressor()
{
  return sub_1001B0DD8(&qword_10069ADB8, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)static ApplyFormattingIntent.ChangeOperationType.typeDisplayRepresentation);
}

uint64_t static ApplyFormattingIntent.ChangeOperationType.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1001B0E6C(&qword_10069ADB8, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)static ApplyFormattingIntent.ChangeOperationType.typeDisplayRepresentation, a1);
}

unint64_t sub_10025D960()
{
  uint64_t v0 = sub_10002F214((uint64_t *)&unk_10069D360);
  __chkstk_darwin(v0 - 8);
  id v41 = (char *)&v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v2 - 8);
  unint64_t v33 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v4 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Locale();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = type metadata accessor for LocalizedStringResource();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v42 = v9;
  uint64_t v43 = v10;
  __chkstk_darwin(v9);
  sub_10002F214(&qword_1006A0C28);
  uint64_t v11 = (int *)(sub_10002F214(&qword_10069C5A8) - 8);
  uint64_t v12 = *(void *)(*(void *)v11 + 72);
  unint64_t v13 = (*(unsigned __int8 *)(*(void *)v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v11 + 80);
  uint64_t v32 = 2 * v12;
  uint64_t v14 = swift_allocObject();
  uint64_t v34 = v14;
  *(_OWORD *)(v14 + 16) = xmmword_100529A00;
  unint64_t v40 = v14 + v13;
  unint64_t v28 = v14 + v13 + v11[14];
  *(unsigned char *)(v14 + v13) = 0;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  unsigned int v29 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  uint64_t v30 = v4 + 104;
  uint64_t v31 = v15;
  ((void (*)(char *))v15)(v6);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v43 + 56);
  v43 += 56;
  uint64_t v38 = v16;
  uint64_t v17 = v33;
  v16(v33, 1, 1, v42);
  uint64_t v36 = type metadata accessor for DisplayRepresentation.Image();
  uint64_t v18 = *(void *)(v36 - 8);
  uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
  uint64_t v37 = v18 + 56;
  v35(v41, 1, 1, v36);
  DisplayRepresentation.init(title:subtitle:image:)();
  unint64_t v28 = v40 + v12 + v11[14];
  *(unsigned char *)(v40 + v12) = 1;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  id v19 = v6;
  uint64_t v20 = v6;
  uint64_t v21 = v29;
  uint64_t v22 = v31;
  v31(v20, v29, v39);
  uint64_t v23 = v19;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v24 = v17;
  v38(v17, 1, 1, v42);
  unint64_t v25 = v41;
  v35(v41, 1, 1, v36);
  DisplayRepresentation.init(title:subtitle:image:)();
  *(unsigned char *)(v40 + v32) = 2;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v22(v23, v21, v39);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v38(v24, 1, 1, v42);
  v35(v25, 1, 1, v36);
  DisplayRepresentation.init(title:subtitle:image:)();
  unint64_t result = sub_100168A80(v34);
  static ApplyFormattingIntent.ChangeOperationType.caseDisplayRepresentations = result;
  return result;
}

uint64_t *ApplyFormattingIntent.ChangeOperationType.caseDisplayRepresentations.unsafeMutableAddressor()
{
  if (qword_10069ADC0 != -1) {
    swift_once();
  }
  return &static ApplyFormattingIntent.ChangeOperationType.caseDisplayRepresentations;
}

uint64_t static ApplyFormattingIntent.ChangeOperationType.caseDisplayRepresentations.getter()
{
  if (qword_10069ADC0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static ApplyFormattingIntent.ChangeOperationType.caseDisplayRepresentations.setter(uint64_t a1)
{
  if (qword_10069ADC0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  static ApplyFormattingIntent.ChangeOperationType.caseDisplayRepresentations = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static ApplyFormattingIntent.ChangeOperationType.caseDisplayRepresentations.modify())()
{
  if (qword_10069ADC0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

_UNKNOWN **static ApplyFormattingIntent.ChangeOperationType.allCases.getter()
{
  return &off_10062BEA8;
}

uint64_t ApplyFormattingIntent.ChangeOperationType.rawValue.getter(char a1)
{
  if (!a1) {
    return 0x656C62616E65;
  }
  if (a1 == 1) {
    return 0x656C6261736964;
  }
  return 0x656C67676F74;
}

uint64_t sub_10025E188(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1002756D8(*a1, *a2);
}

unint64_t sub_10025E194@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = _s11MobileNotes21ApplyFormattingIntentV19ChangeOperationTypeO8rawValueAESgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_10025E1C4(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE600000000000000;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = 0x656C6261736964;
  if (v2 != 1)
  {
    uint64_t v5 = 0x656C67676F74;
    unint64_t v4 = 0xE600000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x656C62616E65;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

Swift::Int sub_10025E21C()
{
  return Hasher._finalize()();
}

uint64_t sub_10025E2B8()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10025E340()
{
  return Hasher._finalize()();
}

uint64_t sub_10025E3D8@<X0>(uint64_t a1@<X8>)
{
  return sub_1001B1AA8(&qword_10069ADB8, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)static ApplyFormattingIntent.ChangeOperationType.typeDisplayRepresentation, a1);
}

uint64_t sub_10025E410(uint64_t a1)
{
  unint64_t v2 = sub_100157FB4();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_10025E45C(uint64_t a1)
{
  unint64_t v2 = sub_10025F3DC();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

void sub_10025E4A8(void *a1@<X8>)
{
  *a1 = &off_10062B500;
}

uint64_t sub_10025E4B8@<X0>(uint64_t a1@<X8>)
{
  return sub_1001B1AA8(&qword_10069ADB0, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)static ApplyFormattingIntent.title, a1);
}

uint64_t sub_10025E4F4(uint64_t a1)
{
  long long v4 = v1[1];
  *(_OWORD *)(v2 + 16) = *v1;
  *(_OWORD *)(v2 + 32) = v4;
  long long v5 = v1[3];
  *(_OWORD *)(v2 + 48) = v1[2];
  *(_OWORD *)(v2 + 64) = v5;
  BOOL v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 80) = v6;
  *BOOL v6 = v2;
  v6[1] = sub_1002534FC;
  return ApplyFormattingIntent.perform()(a1);
}

uint64_t sub_10025E5AC@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v59 = a1;
  uint64_t v77 = type metadata accessor for InputConnectionBehavior();
  uint64_t v79 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  uint64_t v78 = (char *)&v53 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v69 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v60 = (char *)&v53 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  uint64_t v68 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v76 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_10002F214(&qword_10069B330);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v18 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  id v19 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  unsigned int v61 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v62 = v8;
  v19(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  uint64_t v64 = v19;
  uint64_t v63 = v9 + 104;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v19(v11, v18, v8);
  uint64_t v20 = v68;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v73 = *(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56);
  uint64_t v75 = v15 + 56;
  v73(v20, 0, 1, v14);
  char v82 = 3;
  uint64_t v21 = type metadata accessor for IntentDialog();
  uint64_t v65 = v21;
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
  uint64_t v66 = v23;
  uint64_t v67 = v22 + 56;
  uint64_t v24 = v60;
  v23(v60, 1, 1, v21);
  v23(v69, 1, 1, v21);
  unsigned int v74 = enum case for InputConnectionBehavior.default(_:);
  unint64_t v25 = *(void (**)(void))(v79 + 104);
  v79 += 104;
  unsigned int v72 = (void (*)(char *, void, uint64_t))v25;
  v25(v78);
  unint64_t v71 = sub_100157FB4();
  int v26 = v24;
  uint64_t v58 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v27 = v61;
  uint64_t v28 = v62;
  unsigned int v29 = v64;
  v64(v11, v61, v62);
  uint64_t v54 = v11;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v29(v11, v27, v28);
  uint64_t v30 = v68;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v73(v30, 0, 1, v76);
  char v82 = 3;
  uint64_t v31 = v65;
  uint64_t v32 = v66;
  v66(v26, 1, 1, v65);
  unint64_t v33 = v69;
  v32(v69, 1, 1, v31);
  uint64_t v34 = v77;
  v72(v78, v74, v77);
  uint64_t v55 = v17;
  uint64_t v57 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v35 = v54;
  uint64_t v36 = v61;
  uint64_t v37 = v62;
  uint64_t v38 = v64;
  v64(v54, v61, v62);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v38(v35, v36, v37);
  uint64_t v39 = v68;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v73(v39, 0, 1, v76);
  char v82 = 3;
  unint64_t v40 = v60;
  uint64_t v41 = v65;
  uint64_t v42 = v66;
  v66(v60, 1, 1, v65);
  v42(v33, 1, 1, v41);
  v72(v78, v74, v34);
  uint64_t v56 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v43 = v61;
  uint64_t v44 = v62;
  uint64_t v45 = v64;
  v64(v35, v61, v62);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v45(v35, v43, v44);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v73(v39, 0, 1, v76);
  char v82 = 3;
  uint64_t v46 = v65;
  uint64_t v47 = v66;
  v66(v40, 1, 1, v65);
  v47(v69, 1, 1, v46);
  v72(v78, v74, v77);
  uint64_t v48 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
  sub_10002F214((uint64_t *)&unk_10069CE60);
  unint64_t v80 = 0xD000000000000021;
  unint64_t v81 = 0x8000000100549290;
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t v49 = AppDependency.__allocating_init(key:manager:)();
  sub_10002F214((uint64_t *)&unk_10069B130);
  unint64_t v80 = 0xD000000000000024;
  unint64_t v81 = 0x8000000100549260;
  AnyHashable.init<A>(_:)();
  static AppDependencyManager.shared.getter();
  uint64_t result = AppDependency.__allocating_init(key:manager:)();
  uint64_t v51 = v59;
  uint64_t v52 = v57;
  *unint64_t v59 = v58;
  v51[1] = v52;
  v51[2] = v56;
  v51[3] = v48;
  v51[4] = v49;
  v51[5] = result;
  v51[6] = 0;
  v51[7] = 0;
  return result;
}

unint64_t _s11MobileNotes21ApplyFormattingIntentV19ChangeOperationTypeO8rawValueAESgSS_tcfC_0(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10062BE40, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return 3;
  }
  else {
    return v3;
  }
}

unint64_t sub_10025F1C8()
{
  unint64_t result = qword_1006A0BB0;
  if (!qword_1006A0BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0BB0);
  }
  return result;
}

unint64_t sub_10025F220()
{
  unint64_t result = qword_1006A0BB8;
  if (!qword_1006A0BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0BB8);
  }
  return result;
}

unint64_t sub_10025F278()
{
  unint64_t result = qword_1006A0BC0;
  if (!qword_1006A0BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0BC0);
  }
  return result;
}

unint64_t sub_10025F2D0()
{
  unint64_t result = qword_1006A0BC8;
  if (!qword_1006A0BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0BC8);
  }
  return result;
}

unint64_t sub_10025F328()
{
  unint64_t result = qword_1006A0BD0;
  if (!qword_1006A0BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0BD0);
  }
  return result;
}

unint64_t sub_10025F380()
{
  unint64_t result = qword_1006A0BD8;
  if (!qword_1006A0BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0BD8);
  }
  return result;
}

unint64_t sub_10025F3DC()
{
  unint64_t result = qword_1006A0BE0;
  if (!qword_1006A0BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0BE0);
  }
  return result;
}

uint64_t sub_10025F430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10025F5E8(a1, a2, a3, (void (*)(void))sub_100157FB4);
}

unint64_t sub_10025F460()
{
  unint64_t result = qword_1006A0BE8;
  if (!qword_1006A0BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0BE8);
  }
  return result;
}

unint64_t sub_10025F4B8()
{
  unint64_t result = qword_1006A0BF0;
  if (!qword_1006A0BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0BF0);
  }
  return result;
}

unint64_t sub_10025F510()
{
  unint64_t result = qword_1006A0BF8;
  if (!qword_1006A0BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0BF8);
  }
  return result;
}

uint64_t sub_10025F564()
{
  return sub_10001DFB0(&qword_1006A0C00, &qword_1006A0C08);
}

uint64_t sub_10025F5A0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10025F5BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10025F5E8(a1, a2, a3, (void (*)(void))sub_100034650);
}

uint64_t sub_10025F5E8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return swift_getOpaqueTypeConformance2();
}

void destroy for ApplyFormattingIntent(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  Swift::String v2 = *(void **)(a1 + 56);
}

void *initializeWithCopy for ApplyFormattingIntent(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = (void *)a2[6];
  uint64_t v7 = (void *)a2[7];
  a1[6] = v6;
  a1[7] = v7;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  id v8 = v6;
  id v9 = v7;
  return a1;
}

void *assignWithCopy for ApplyFormattingIntent(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  uint64_t v4 = (void *)a1[6];
  uint64_t v5 = (void *)a2[6];
  a1[6] = v5;
  id v6 = v5;

  uint64_t v7 = (void *)a1[7];
  id v8 = (void *)a2[7];
  a1[7] = v8;
  id v9 = v8;

  return a1;
}

uint64_t assignWithTake for ApplyFormattingIntent(uint64_t a1, _OWORD *a2)
{
  swift_release();
  *(_OWORD *)a1 = *a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = a2[1];
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 32) = a2[2];
  swift_release();

  uint64_t v4 = *(void **)(a1 + 56);
  *(_OWORD *)(a1 + 48) = a2[3];

  return a1;
}

ValueMetadata *type metadata accessor for ApplyFormattingIntent()
{
  return &type metadata for ApplyFormattingIntent;
}

unsigned char *storeEnumTagSinglePayload for ApplyFormattingIntent.ChangeOperationType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10025F978);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ApplyFormattingIntent.ChangeOperationType()
{
  return &type metadata for ApplyFormattingIntent.ChangeOperationType;
}

uint64_t sub_10025F9B0()
{
  return sub_10001DFB0((unint64_t *)&qword_10069DE30, (uint64_t *)&unk_10069C980);
}

uint64_t OpenTopLevelFolderIntent.target.getter()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t OpenTopLevelFolderIntent.target.setter()
{
  return IntentParameter.wrappedValue.setter();
}

void *SetParagraphStyleIntent.persistentIdentifier.unsafeMutableAddressor()
{
  return &static SetParagraphStyleIntent.persistentIdentifier;
}

uint64_t sub_10025FA64()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  sub_100032974(v6, static SetParagraphStyleIntent.title);
  sub_10003293C(v6, (uint64_t)static SetParagraphStyleIntent.title);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t SetParagraphStyleIntent.title.unsafeMutableAddressor()
{
  return sub_1001B0DD8(&qword_10069ADC8, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)static SetParagraphStyleIntent.title);
}

uint64_t static SetParagraphStyleIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1001B0E6C(&qword_10069ADC8, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)static SetParagraphStyleIntent.title, a1);
}

void *SetParagraphStyleIntent.openAppWhenRun.unsafeMutableAddressor()
{
  return &static SetParagraphStyleIntent.openAppWhenRun;
}

uint64_t static SetParagraphStyleIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for Locale();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = type metadata accessor for LocalizedStringResource();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v4, 1, 1, v11);
  IntentDescription.init(_:categoryName:searchKeywords:)();
  uint64_t v13 = type metadata accessor for IntentDescription();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 0, 1, v13);
}

uint64_t static SetParagraphStyleIntent.parameterSummary.getter()
{
  uint64_t v0 = sub_10002F214(&qword_1006A0C30);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10002F214(&qword_1006A0C38);
  __chkstk_darwin(v1);
  sub_1000342B8();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._object = (void *)0x80000001005555A0;
  v2._countAndFlagsBits = 0xD000000000000017;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_10002F214(&qword_1006A0C40);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_100260148@<X0>(uint64_t a1@<X8>)
{
  return sub_1002288F0(&qword_10069ADC8, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)static SetParagraphStyleIntent.title, a1);
}

uint64_t sub_100260188@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = _s11MobileNotes23SetParagraphStyleIntentVACycfC_0();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t sub_1002601B4()
{
  uint64_t v0 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v0 - 8);
  Swift::String v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Locale();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for LocalizedStringResource();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = type metadata accessor for TypeDisplayRepresentation();
  sub_100032974(v10, static ParagraphStyle.typeDisplayRepresentation);
  sub_10003293C(v10, (uint64_t)static ParagraphStyle.typeDisplayRepresentation);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t ParagraphStyle.typeDisplayRepresentation.unsafeMutableAddressor()
{
  return sub_1001B0DD8(&qword_10069ADD0, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)static ParagraphStyle.typeDisplayRepresentation);
}

uint64_t static ParagraphStyle.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1001B0E6C(&qword_10069ADD0, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)static ParagraphStyle.typeDisplayRepresentation, a1);
}

unint64_t sub_100260504()
{
  uint64_t v0 = sub_10002F214((uint64_t *)&unk_10069D360);
  __chkstk_darwin(v0 - 8);
  uint64_t v76 = (char *)&v67 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v5 = *(void *)(v82 - 8);
  __chkstk_darwin(v82);
  uint64_t v7 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Locale();
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v87 = *(void *)(v14 - 8);
  uint64_t v88 = v14;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002F214(&qword_1006A0CD8);
  uint64_t v17 = sub_10002F214(&qword_10069C598);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v79 = *(void *)(v18 + 72);
  uint64_t v19 = v17 - 8;
  uint64_t v89 = v17 - 8;
  unint64_t v20 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v21 = swift_allocObject();
  uint64_t v69 = v21;
  *(_OWORD *)(v21 + 16) = xmmword_10052EC80;
  uint64_t v71 = v21 + v20 + *(int *)(v19 + 56);
  *(unsigned char *)(v21 + v20) = 0;
  unint64_t v22 = v21 + v20;
  unint64_t v75 = v21 + v20;
  String.LocalizationValue.init(stringLiteral:)();
  unsigned int v74 = v10;
  static Locale.current.getter();
  unsigned int v85 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v83 = *(void (**)(char *))(v5 + 104);
  uint64_t v84 = v7;
  uint64_t v86 = v5 + 104;
  uint64_t v23 = v82;
  v83(v7);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v24 = v88;
  unint64_t v80 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v87 + 56);
  v87 += 56;
  unint64_t v25 = v4;
  v80(v4, 1, 1, v88);
  uint64_t v81 = type metadata accessor for DisplayRepresentation.Image();
  uint64_t v26 = *(void *)(v81 - 8);
  uint64_t v77 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56);
  uint64_t v78 = v26 + 56;
  uint64_t v27 = v76;
  v77(v76, 1, 1, v81);
  uint64_t v70 = v16;
  DisplayRepresentation.init(title:subtitle:image:)();
  uint64_t v28 = v79;
  uint64_t v71 = v22 + v79 + *(int *)(v89 + 56);
  unsigned int v72 = v13;
  *(unsigned char *)(v22 + v79) = 1;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  unsigned int v29 = v83;
  ((void (*)(char *, void, uint64_t))v83)(v84, v85, v23);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v73 = v25;
  uint64_t v30 = v80;
  v80(v25, 1, 1, v24);
  uint64_t v31 = v27;
  uint64_t v32 = v27;
  uint64_t v33 = v81;
  v77(v32, 1, 1, v81);
  DisplayRepresentation.init(title:subtitle:image:)();
  uint64_t v71 = 2 * v28;
  unint64_t v34 = v75;
  uint64_t v35 = (unsigned char *)(v75 + 2 * v28);
  uint64_t v68 = &v35[*(int *)(v89 + 56)];
  unsigned char *v35 = 2;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  ((void (*)(char *, void, uint64_t))v29)(v84, v85, v82);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v36 = v73;
  v30(v73, 1, 1, v88);
  v77(v31, 1, 1, v33);
  uint64_t v37 = v36;
  DisplayRepresentation.init(title:subtitle:image:)();
  *(unsigned char *)(v34 + v71 + v79) = 3;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v38 = v85;
  uint64_t v39 = v82;
  ((void (*)(char *, void, uint64_t))v83)(v84, v85, v82);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v80(v36, 1, 1, v88);
  v77(v31, 1, 1, v81);
  DisplayRepresentation.init(title:subtitle:image:)();
  uint64_t v40 = v79;
  uint64_t v71 = 4 * v79;
  unint64_t v41 = v75;
  uint64_t v42 = (unsigned char *)(v75 + 4 * v79);
  uint64_t v68 = &v42[*(int *)(v89 + 56)];
  unsigned char *v42 = 4;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  ((void (*)(char *, uint64_t, uint64_t))v83)(v84, v38, v39);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v43 = v80;
  v80(v37, 1, 1, v88);
  uint64_t v44 = v81;
  v77(v31, 1, 1, v81);
  DisplayRepresentation.init(title:subtitle:image:)();
  uint64_t v45 = (unsigned char *)(v41 + v71 + v40);
  uint64_t v71 = (uint64_t)&v45[*(int *)(v89 + 56)];
  *uint64_t v45 = 5;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v46 = (void (*)(char *, uint64_t, uint64_t))v83;
  uint64_t v47 = v84;
  uint64_t v48 = v85;
  uint64_t v49 = v82;
  ((void (*)(char *, void, uint64_t))v83)(v84, v85, v82);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v43(v73, 1, 1, v88);
  uint64_t v50 = v77;
  v77(v76, 1, 1, v44);
  DisplayRepresentation.init(title:subtitle:image:)();
  uint64_t v51 = (unsigned char *)(v75 + 6 * v79);
  uint64_t v71 = (uint64_t)&v51[*(int *)(v89 + 56)];
  unsigned char *v51 = 6;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v46(v47, v48, v49);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v52 = v88;
  uint64_t v53 = v80;
  v80(v73, 1, 1, v88);
  v50(v76, 1, 1, v81);
  DisplayRepresentation.init(title:subtitle:image:)();
  uint64_t v71 = 8 * v79;
  unint64_t v54 = v75;
  uint64_t v55 = (unsigned char *)(v75 + 7 * v79);
  uint64_t v56 = v89;
  uint64_t v68 = &v55[*(int *)(v89 + 56)];
  unsigned char *v55 = 7;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v57 = v82;
  ((void (*)(char *, void, uint64_t))v83)(v84, v85, v82);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v53(v73, 1, 1, v52);
  uint64_t v58 = v77;
  uint64_t v59 = v81;
  v77(v76, 1, 1, v81);
  DisplayRepresentation.init(title:subtitle:image:)();
  uint64_t v68 = (unsigned char *)(v54 + v71 + *(int *)(v56 + 56));
  *(unsigned char *)(v54 + v71) = 8;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v60 = v84;
  uint64_t v61 = v57;
  uint64_t v62 = v83;
  ((void (*)(char *, void, uint64_t))v83)(v84, v85, v61);
  uint64_t v63 = v60;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v64 = v73;
  v80(v73, 1, 1, v88);
  uint64_t v65 = v76;
  v58(v76, 1, 1, v59);
  DisplayRepresentation.init(title:subtitle:image:)();
  *(unsigned char *)(v75 + v71 + v79) = 9;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  ((void (*)(char *, void, uint64_t))v62)(v63, v85, v82);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v80(v64, 1, 1, v88);
  v58(v65, 1, 1, v81);
  DisplayRepresentation.init(title:subtitle:image:)();
  unint64_t result = sub_100168AA8(v69);
  static ParagraphStyle.caseDisplayRepresentations = result;
  return result;
}

uint64_t *ParagraphStyle.caseDisplayRepresentations.unsafeMutableAddressor()
{
  if (qword_10069ADD8 != -1) {
    swift_once();
  }
  return &static ParagraphStyle.caseDisplayRepresentations;
}

uint64_t static ParagraphStyle.caseDisplayRepresentations.getter()
{
  if (qword_10069ADD8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static ParagraphStyle.caseDisplayRepresentations.setter(uint64_t a1)
{
  if (qword_10069ADD8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  static ParagraphStyle.caseDisplayRepresentations = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static ParagraphStyle.caseDisplayRepresentations.modify())()
{
  if (qword_10069ADD8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t ParagraphStyle.init(namedStyle:)(int a1)
{
  uint64_t result = 0;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      uint64_t result = 1;
      break;
    case 2:
      uint64_t result = 2;
      break;
    case 3:
LABEL_5:
      uint64_t result = 3;
      break;
    case 4:
      uint64_t result = 4;
      break;
    case 5:
      uint64_t result = 5;
      break;
    default:
      switch(a1)
      {
        case 'd':
          uint64_t result = 6;
          break;
        case 'e':
          uint64_t result = 7;
          break;
        case 'f':
          uint64_t result = 8;
          break;
        case 'g':
          uint64_t result = 9;
          break;
        default:
          goto LABEL_5;
      }
      break;
  }
  return result;
}

uint64_t ParagraphStyle.namedStyle.getter(char a1)
{
  return dword_10052F07C[a1];
}

_UNKNOWN **static ParagraphStyle.allCases.getter()
{
  return &off_10062B368;
}

uint64_t ParagraphStyle.rawValue.getter(char a1)
{
  uint64_t result = 0x656C746974;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x676E6964616568;
      break;
    case 2:
      uint64_t result = 0x6964616568627573;
      break;
    case 3:
      uint64_t result = 2036625250;
      break;
    case 4:
      uint64_t result = 0x6469576465786966;
      break;
    case 5:
      uint64_t result = 0x6E6F6974706163;
      break;
    case 6:
      uint64_t result = 0x6C6C75427473696CLL;
      break;
    case 7:
      uint64_t result = 0x687361447473696CLL;
      break;
    case 8:
      uint64_t result = 0x626D754E7473696CLL;
      break;
    case 9:
      uint64_t result = 0x6F646F547473696CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100261668(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = ParagraphStyle.rawValue.getter(*a1);
  uint64_t v5 = v4;
  if (v3 == ParagraphStyle.rawValue.getter(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

unint64_t sub_1002616F4@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = _s11MobileNotes14ParagraphStyleO8rawValueACSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100261724@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ParagraphStyle.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

Swift::Int sub_100261750()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  ParagraphStyle.rawValue.getter(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_1002617B4()
{
  ParagraphStyle.rawValue.getter(*v0);
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100261808()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  ParagraphStyle.rawValue.getter(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_100261868@<X0>(uint64_t a1@<X8>)
{
  return sub_1002288F0(&qword_10069ADD0, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)static ParagraphStyle.typeDisplayRepresentation, a1);
}

uint64_t sub_1002618A0(uint64_t a1)
{
  unint64_t v2 = sub_100158008();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_1002618EC(uint64_t a1)
{
  unint64_t v2 = sub_1002621D0();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

void sub_100261938(void *a1@<X8>)
{
  *a1 = &off_10062B368;
}

uint64_t _s11MobileNotes23SetParagraphStyleIntentVACycfC_0()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v28 = *(void *)(v0 - 8);
  uint64_t v29 = v0;
  __chkstk_darwin(v0);
  uint64_t v27 = (char *)v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v26 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  unint64_t v25 = (char *)v23 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  uint64_t v24 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  v23[1] = sub_10002F214(&qword_10069B340);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  uint64_t v18 = v24;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  char v32 = 10;
  uint64_t v19 = type metadata accessor for IntentDialog();
  unint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v25, 1, 1, v19);
  v20(v26, 1, 1, v19);
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v27, enum case for InputConnectionBehavior.default(_:), v29);
  sub_100158008();
  uint64_t v21 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
  sub_10002F214((uint64_t *)&unk_10069CE60);
  unint64_t v30 = 0xD000000000000021;
  unint64_t v31 = 0x8000000100549290;
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  sub_10002F214((uint64_t *)&unk_10069B130);
  unint64_t v30 = 0xD000000000000024;
  unint64_t v31 = 0x8000000100549260;
  AnyHashable.init<A>(_:)();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  return v21;
}

uint64_t sub_100261F08@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unint64_t _s11MobileNotes14ParagraphStyleO8rawValueACSgSS_tcfC_0(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10062BED0, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 0xA) {
    return 10;
  }
  else {
    return v3;
  }
}

uint64_t sub_100261F80()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100261F9C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100261FBC()
{
  unint64_t result = qword_1006A0C68;
  if (!qword_1006A0C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0C68);
  }
  return result;
}

unint64_t sub_100262014()
{
  unint64_t result = qword_1006A0C70;
  if (!qword_1006A0C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0C70);
  }
  return result;
}

unint64_t sub_10026206C()
{
  unint64_t result = qword_1006A0C78;
  if (!qword_1006A0C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0C78);
  }
  return result;
}

unint64_t sub_1002620C4()
{
  unint64_t result = qword_1006A0C80;
  if (!qword_1006A0C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0C80);
  }
  return result;
}

unint64_t sub_10026211C()
{
  unint64_t result = qword_1006A0C88;
  if (!qword_1006A0C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0C88);
  }
  return result;
}

unint64_t sub_100262174()
{
  unint64_t result = qword_1006A0C90;
  if (!qword_1006A0C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0C90);
  }
  return result;
}

unint64_t sub_1002621D0()
{
  unint64_t result = qword_1006A0C98;
  if (!qword_1006A0C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0C98);
  }
  return result;
}

uint64_t sub_100262224()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100262278()
{
  unint64_t result = qword_1006A0CA0;
  if (!qword_1006A0CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0CA0);
  }
  return result;
}

unint64_t sub_1002622D0()
{
  unint64_t result = qword_1006A0CA8;
  if (!qword_1006A0CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0CA8);
  }
  return result;
}

unint64_t sub_100262328()
{
  unint64_t result = qword_1006A0CB0;
  if (!qword_1006A0CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0CB0);
  }
  return result;
}

uint64_t sub_10026237C()
{
  return sub_10001DFB0(&qword_1006A0CB8, &qword_1006A0CC0);
}

ValueMetadata *type metadata accessor for SetParagraphStyleIntent()
{
  return &type metadata for SetParagraphStyleIntent;
}

uint64_t getEnumTagSinglePayload for ParagraphStyle(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ParagraphStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100262524);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParagraphStyle()
{
  return &type metadata for ParagraphStyle;
}

uint64_t sub_10026255C()
{
  return sub_10001DFB0(&qword_1006A0CC8, &qword_1006A0CD0);
}

uint64_t sub_100262598()
{
  return sub_10001DFB0((unint64_t *)&qword_10069DE30, (uint64_t *)&unk_10069C980);
}

uint64_t type metadata accessor for ClearActivityCachesActivity()
{
  return self;
}

uint64_t sub_100262938()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100262970(char a1, uint64_t a2, uint64_t a3)
{
  sub_100496214(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_100262978(uint64_t a1)
{
  uint64_t v34 = type metadata accessor for Participant();
  uint64_t v3 = *(void *)(v34 - 8);
  uint64_t v4 = __chkstk_darwin(v34);
  uint64_t v33 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  char v32 = (char *)v27 - v6;
  uint64_t v31 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v35 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = _swiftEmptyArrayStorage;
  if (!v9) {
    return (uint64_t)v10;
  }
  v27[1] = v1;
  uint64_t v36 = _swiftEmptyArrayStorage;
  sub_100169C6C(0, v9, 0);
  uint64_t result = sub_1002AEEFC(a1);
  uint64_t v12 = result;
  uint64_t v14 = v13;
  char v16 = v15 & 1;
  uint64_t v29 = v3;
  uint64_t v30 = a1 + 56;
  v27[4] = v3 + 32;
  v27[5] = v3 + 16;
  v27[2] = v7 + 32;
  uint64_t v27[3] = v3 + 8;
  uint64_t v28 = a1;
  uint64_t v17 = v3;
  while ((v12 & 0x8000000000000000) == 0 && v12 < 1 << *(unsigned char *)(a1 + 32))
  {
    if (((*(void *)(v30 + (((unint64_t)v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
      goto LABEL_15;
    }
    if (*(_DWORD *)(a1 + 36) != v14) {
      goto LABEL_16;
    }
    uint64_t v18 = v7;
    uint64_t v19 = *(void *)(a1 + 48) + *(void *)(v17 + 72) * v12;
    unint64_t v20 = v32;
    uint64_t v21 = v34;
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v32, v19, v34);
    unint64_t v22 = v33;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v33, v20, v21);
    Participant.id.getter();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v21);
    uint64_t v10 = v36;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_100169C6C(0, v10[2] + 1, 1);
      uint64_t v10 = v36;
    }
    unint64_t v24 = v10[2];
    unint64_t v23 = v10[3];
    if (v24 >= v23 >> 1)
    {
      sub_100169C6C(v23 > 1, v24 + 1, 1);
      uint64_t v10 = v36;
    }
    v10[2] = v24 + 1;
    uint64_t v7 = v18;
    (*(void (**)(unint64_t, char *, uint64_t))(v18 + 32))((unint64_t)v10+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(void *)(v18 + 72) * v24, v35, v31);
    uint64_t v36 = v10;
    a1 = v28;
    uint64_t result = sub_10048F4F4(v12, v14, v16 & 1, v28);
    uint64_t v12 = result;
    uint64_t v14 = v25;
    char v16 = v26 & 1;
    if (!--v9)
    {
      sub_10002DA18(result, v25, v26 & 1);
      return (uint64_t)v10;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

void *sub_100262CF4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_100169C8C(0, v1, 0);
    uint64_t v3 = *(void *)(type metadata accessor for ICTTTextStorage.Selection() - 8);
    uint64_t v4 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v5 = *(void *)(v3 + 72);
    do
    {
      uint64_t v6 = ICTTTextStorage.Selection.range.getter();
      uint64_t v8 = v7;
      unint64_t v10 = _swiftEmptyArrayStorage[2];
      unint64_t v9 = _swiftEmptyArrayStorage[3];
      if (v10 >= v9 >> 1) {
        sub_100169C8C(v9 > 1, v10 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v10 + 1;
      uint64_t v11 = &_swiftEmptyArrayStorage[2 * v10];
      v11[4] = v6;
      v11[5] = v8;
      v4 += v5;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100262E2C(uint64_t a1)
{
  int64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_100262E70@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, char *a3@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v27 = a3;
  uint64_t v5 = sub_10002F214(&qword_10069D190);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  unint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  char v32 = (char *)&v27 - v10;
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v28 = a2 + 64;
  uint64_t v12 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  uint64_t v31 = v6 + 16;
  uint64_t v34 = v6 + 32;
  int64_t v29 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v30 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v35 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v16 = 0;
  uint64_t v17 = v32;
  if (!v14) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v18 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (unint64_t i = v18 | (v16 << 6); ; unint64_t i = __clz(__rbit64(v21)) + (v16 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v17, *(void *)(v35 + 48) + *(void *)(v6 + 72) * i, v5);
    unint64_t v23 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v23(v9, v17, v5);
    char v24 = v33(v9);
    if (v3)
    {
      (*v30)(v9, v5);
      return swift_release();
    }
    if (v24)
    {
      swift_release();
      uint64_t v25 = v27;
      v23(v27, v9, v5);
      uint64_t v26 = 0;
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v25, v26, 1, v5);
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))*v30)(v9, v5);
    if (v14) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v16++, 1)) {
      break;
    }
    if (v16 >= v29) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v28 + 8 * v16);
    if (!v21)
    {
      int64_t v22 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v28 + 8 * v22);
      if (v21) {
        goto LABEL_16;
      }
      int64_t v22 = v16 + 2;
      if (v16 + 2 >= v29) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v28 + 8 * v22);
      if (v21) {
        goto LABEL_16;
      }
      int64_t v22 = v16 + 3;
      if (v16 + 3 >= v29) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v28 + 8 * v22);
      if (v21)
      {
LABEL_16:
        int64_t v16 = v22;
        goto LABEL_17;
      }
      int64_t v22 = v16 + 4;
      if (v16 + 4 < v29)
      {
        unint64_t v21 = *(void *)(v28 + 8 * v22);
        if (!v21)
        {
          while (1)
          {
            int64_t v16 = v22 + 1;
            if (__OFADD__(v22, 1)) {
              goto LABEL_31;
            }
            if (v16 >= v29) {
              goto LABEL_28;
            }
            unint64_t v21 = *(void *)(v28 + 8 * v16);
            ++v22;
            if (v21) {
              goto LABEL_17;
            }
          }
        }
        goto LABEL_16;
      }
LABEL_28:
      uint64_t v25 = v27;
      swift_release();
      uint64_t v26 = 1;
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v25, v26, 1, v5);
    }
LABEL_17:
    unint64_t v14 = (v21 - 1) & v21;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1002631D4@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, char *a3@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v28 = a3;
  uint64_t v5 = type metadata accessor for Participant();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  unint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v27 - v10;
  uint64_t v12 = *(void *)(a2 + 56);
  uint64_t v29 = a2 + 56;
  uint64_t v13 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  uint64_t v32 = v6 + 16;
  uint64_t v34 = v6 + 32;
  int64_t v30 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v31 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v35 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v17 = 0;
  if (!v15) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v18 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  for (unint64_t i = v18 | (v17 << 6); ; unint64_t i = __clz(__rbit64(v21)) + (v17 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v11, *(void *)(v35 + 48) + *(void *)(v6 + 72) * i, v5);
    unint64_t v23 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v23(v9, v11, v5);
    char v24 = v33(v9);
    if (v3)
    {
      (*v31)(v9, v5);
      return swift_release();
    }
    if (v24)
    {
      swift_release();
      uint64_t v25 = v28;
      v23(v28, v9, v5);
      uint64_t v26 = 0;
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v25, v26, 1, v5);
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))*v31)(v9, v5);
    if (v15) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v17++, 1)) {
      break;
    }
    if (v17 >= v30) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v29 + 8 * v17);
    if (!v21)
    {
      int64_t v22 = v17 + 1;
      if (v17 + 1 >= v30) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v29 + 8 * v22);
      if (v21) {
        goto LABEL_16;
      }
      int64_t v22 = v17 + 2;
      if (v17 + 2 >= v30) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v29 + 8 * v22);
      if (v21) {
        goto LABEL_16;
      }
      int64_t v22 = v17 + 3;
      if (v17 + 3 >= v30) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v29 + 8 * v22);
      if (v21)
      {
LABEL_16:
        int64_t v17 = v22;
        goto LABEL_17;
      }
      int64_t v22 = v17 + 4;
      if (v17 + 4 < v30)
      {
        unint64_t v21 = *(void *)(v29 + 8 * v22);
        if (!v21)
        {
          while (1)
          {
            int64_t v17 = v22 + 1;
            if (__OFADD__(v22, 1)) {
              goto LABEL_31;
            }
            if (v17 >= v30) {
              goto LABEL_28;
            }
            unint64_t v21 = *(void *)(v29 + 8 * v17);
            ++v22;
            if (v21) {
              goto LABEL_17;
            }
          }
        }
        goto LABEL_16;
      }
LABEL_28:
      uint64_t v25 = v28;
      swift_release();
      uint64_t v26 = 1;
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v25, v26, 1, v5);
    }
LABEL_17:
    unint64_t v15 = (v21 - 1) & v21;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

void sub_10026352C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100031418(0, (unint64_t *)&qword_1006A4DB0);
  sub_10002C8EC((unint64_t *)&qword_1006A0DF8, (unint64_t *)&qword_1006A4DB0);
  v20[1] = (id)Set.init(minimumCapacity:)();
  sub_100363EA0(a1, a2, a3, (uint64_t)v21);
  uint64_t v6 = v21[0];
  uint64_t v7 = v21[3];
  unint64_t v9 = v21[4];
  uint64_t v8 = (uint64_t (*)(id *))v21[5];
  uint64_t v18 = v21[1];
  int64_t v10 = (unint64_t)(v21[2] + 64) >> 6;
  while (v6 < 0)
  {
    if (!__CocoaSet.Iterator.next()()) {
      goto LABEL_31;
    }
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v14 = v19;
    swift_unknownObjectRelease();
    uint64_t v13 = v7;
    uint64_t v11 = v9;
    if (!v19) {
      goto LABEL_31;
    }
LABEL_29:
    v20[0] = v14;
    if (v8(v20))
    {
      sub_100394A00(v20, v14);
    }
    else
    {
    }
    uint64_t v7 = v13;
    unint64_t v9 = v11;
  }
  if (v9)
  {
    uint64_t v11 = (v9 - 1) & v9;
    unint64_t v12 = __clz(__rbit64(v9)) | (v7 << 6);
    uint64_t v13 = v7;
LABEL_28:
    id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v12);
    if (!v14) {
      goto LABEL_31;
    }
    goto LABEL_29;
  }
  int64_t v15 = v7 + 1;
  if (!__OFADD__(v7, 1))
  {
    if (v15 >= v10) {
      goto LABEL_31;
    }
    unint64_t v16 = *(void *)(v18 + 8 * v15);
    uint64_t v13 = v7 + 1;
    if (!v16)
    {
      uint64_t v13 = v7 + 2;
      if (v7 + 2 >= v10) {
        goto LABEL_31;
      }
      unint64_t v16 = *(void *)(v18 + 8 * v13);
      if (!v16)
      {
        uint64_t v13 = v7 + 3;
        if (v7 + 3 >= v10) {
          goto LABEL_31;
        }
        unint64_t v16 = *(void *)(v18 + 8 * v13);
        if (!v16)
        {
          uint64_t v13 = v7 + 4;
          if (v7 + 4 >= v10) {
            goto LABEL_31;
          }
          unint64_t v16 = *(void *)(v18 + 8 * v13);
          if (!v16)
          {
            uint64_t v13 = v7 + 5;
            if (v7 + 5 >= v10) {
              goto LABEL_31;
            }
            unint64_t v16 = *(void *)(v18 + 8 * v13);
            if (!v16)
            {
              uint64_t v13 = v7 + 6;
              if (v7 + 6 >= v10) {
                goto LABEL_31;
              }
              unint64_t v16 = *(void *)(v18 + 8 * v13);
              if (!v16)
              {
                uint64_t v17 = v7 + 7;
                while (v10 != v17)
                {
                  unint64_t v16 = *(void *)(v18 + 8 * v17++);
                  if (v16)
                  {
                    uint64_t v13 = v17 - 1;
                    goto LABEL_27;
                  }
                }
LABEL_31:
                sub_10017B518();
                swift_release();
                return;
              }
            }
          }
        }
      }
    }
LABEL_27:
    uint64_t v11 = (v16 - 1) & v16;
    unint64_t v12 = __clz(__rbit64(v16)) + (v13 << 6);
    goto LABEL_28;
  }
  __break(1u);
}

uint64_t sub_1002637D0(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v28 = type metadata accessor for RealtimeCollaborationSelectionDocument.ParticipantSelection();
  uint64_t v7 = *(void *)(v28 - 8);
  uint64_t v8 = __chkstk_darwin(v28);
  uint64_t v27 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v8);
  unint64_t v12 = (char *)v20 - v11;
  uint64_t v13 = _swiftEmptyArrayStorage;
  uint64_t v29 = _swiftEmptyArrayStorage;
  uint64_t v26 = *(void *)(a3 + 16);
  if (v26)
  {
    unint64_t v14 = 0;
    uint64_t v21 = a3;
    int64_t v22 = (void (**)(char *, uint64_t))(v7 + 8);
    char v24 = (void (**)(char *, char *, uint64_t))(v7 + 32);
    uint64_t v25 = v7 + 16;
    v20[0] = a1;
    v20[1] = a2;
    while (v14 < *(void *)(a3 + 16))
    {
      unint64_t v15 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      uint64_t v13 = *(void **)(v7 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v12, a3 + v15 + (void)v13 * v14, v28);
      char v16 = a1(v12);
      if (v3)
      {
        (*v22)(v12, v28);
        swift_bridgeObjectRelease();
        swift_release();
        return (uint64_t)v13;
      }
      if (v16)
      {
        unint64_t v23 = *v24;
        v23(v27, v12, v28);
        uint64_t v17 = v29;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100169C4C(0, v17[2] + 1, 1);
          uint64_t v17 = v29;
        }
        unint64_t v19 = v17[2];
        unint64_t v18 = v17[3];
        if (v19 >= v18 >> 1)
        {
          sub_100169C4C(v18 > 1, v19 + 1, 1);
          uint64_t v17 = v29;
        }
        v17[2] = v19 + 1;
        uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v23)((char *)v17 + v15 + v19 * (void)v13, v27, v28);
        uint64_t v29 = v17;
        a3 = v21;
        a1 = (uint64_t (*)(char *))v20[0];
      }
      else
      {
        uint64_t result = ((uint64_t (*)(char *, uint64_t))*v22)(v12, v28);
      }
      if (v26 == ++v14)
      {
        uint64_t v13 = v29;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return (uint64_t)v13;
  }
  return result;
}

uint64_t sub_100263A74()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100032974(v0, qword_1006A0D10);
  sub_10003293C(v0, (uint64_t)qword_1006A0D10);
  return static Logger.realtimeCollaboration.getter();
}

uint64_t RealtimeCollaborationSelectionController.editorController.getter()
{
  return swift_unknownObjectUnownedLoadStrong();
}

uint64_t RealtimeCollaborationSelectionController.realtimeCollaborationController.getter()
{
  return swift_unknownObjectUnownedLoadStrong();
}

id RealtimeCollaborationSelectionController.__allocating_init(editorController:realtimeCollaborationController:)(void *a1, char *a2)
{
  id v5 = objc_allocWithZone(v2);
  return RealtimeCollaborationSelectionController.init(editorController:realtimeCollaborationController:)(a1, a2);
}

id RealtimeCollaborationSelectionController.init(editorController:realtimeCollaborationController:)(void *a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v7 = sub_10002F214(&qword_1006A0D38);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  int64_t v10 = (char *)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = &v3[OBJC_IVAR___ICRealtimeCollaborationSelectionController__groupSession];
  v35[1] = 0;
  unint64_t v12 = v3;
  sub_10002F214(&qword_1006A0D48);
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v10, v7);
  *(void *)&v12[OBJC_IVAR___ICRealtimeCollaborationSelectionController_activeParticipantsObservation] = 0;
  *(void *)&v12[OBJC_IVAR___ICRealtimeCollaborationSelectionController_activeParticipants] = &_swiftEmptySetSingleton;
  v12[OBJC_IVAR___ICRealtimeCollaborationSelectionController_didScheduleCollaboratorStatusesUpdate] = 0;
  swift_unknownObjectUnownedInit();
  swift_unknownObjectUnownedInit();

  v36.receiver = v12;
  v36.super_class = ObjectType;
  id v13 = [super init];
  unint64_t v14 = self;
  id v15 = v13;
  id v16 = [v14 defaultCenter];
  uint64_t v17 = qword_10069AEC0;
  id v18 = v15;
  if (v17 != -1) {
    swift_once();
  }
  [v16 addObserver:v18 selector:"realtimeCollaborationControllerGroupActivityDidChange:" name:qword_1006CDE50 object:a2];

  id v19 = [v14 defaultCenter];
  [v19 addObserver:v18 selector:"editorDidChangeSelection:" name:ICNoteEditorViewControllerSelectionDidChangeNotification object:a1];

  id v20 = [v14 defaultCenter];
  uint64_t v21 = ICTextViewLayoutDidChangeNotification;
  id v22 = v18;
  id v23 = [a1 textView];
  [v20 addObserver:v22 selector:"textViewLayoutDidChange:" name:v21 object:v23];

  id v24 = [v14 defaultCenter];
  [v24 addObserver:v22 selector:"tableScrollViewBoundsDidChange:" name:ICTableScrollViewBoundsDidChangeNotification object:0];

  id v25 = [v14 defaultCenter];
  uint64_t v26 = ICNoteDidPerformMergeNotification;
  id v27 = v22;
  id v28 = [a1 note];
  [v25 addObserver:v27 selector:"noteDidPerformMerge:" name:v26 object:v28];

  id v29 = [v14 defaultCenter];
  [v29 addObserver:v27 selector:"tableAttachmentProviderDidMergeTable:" name:ICTableAttachmentProviderDidMergeTable object:0];

  int64_t v30 = &a2[OBJC_IVAR___ICRealtimeCollaborationController_activeSession];
  swift_beginAccess();
  uint64_t v31 = *(void *)v30;
  if (*(void *)v30)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain_n();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    uint64_t v32 = v35[0];
    swift_getKeyPath();
    swift_getKeyPath();
    v35[0] = v31;
    id v33 = v27;
    swift_retain();
    static Published.subscript.setter();
    sub_1002641E8(v32);

    swift_release_n();
    swift_release();
  }
  else
  {
  }
  return v27;
}

uint64_t property wrapper backing initializer of RealtimeCollaborationSelectionController.groupSession()
{
  return Published.init(initialValue:)();
}

uint64_t sub_1002640C4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  id v1 = v0;
  static Published.subscript.setter();
  sub_1002641E8(v3);
  swift_release();
  return swift_release();
}

void sub_1002641E8(uint64_t a1)
{
  uint64_t v66 = a1;
  uint64_t v2 = sub_10002F214(&qword_1006A0E10);
  uint64_t v62 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v61 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v60 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10002F214((uint64_t *)&unk_1006A4F60);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10002F214((uint64_t *)&unk_10069C990);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v64 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  id v15 = (char *)&v59 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v59 - v16;
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v65 = v1;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (!v68)
  {
LABEL_12:
    swift_getKeyPath();
    swift_getKeyPath();
    id v28 = v65;
    static Published.subscript.getter();
    swift_release();
    swift_release();
    uint64_t v29 = v68;
    swift_release();
    if (!v29 && v66)
    {
      if (qword_10069ADE0 != -1) {
        swift_once();
      }
      uint64_t v30 = type metadata accessor for Logger();
      sub_10003293C(v30, (uint64_t)qword_1006A0D10);
      uint64_t v31 = v28;
      uint64_t v32 = Logger.logObject.getter();
      os_log_type_t v33 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v32, v33))
      {
        uint64_t v34 = swift_slowAlloc();
        uint64_t v35 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v34 = 138412546;
        uint64_t Strong = swift_unknownObjectUnownedLoadStrong();
        uint64_t v68 = Strong;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v35 = Strong;
        *(_WORD *)(v34 + 12) = 2048;
        uint64_t v37 = (char *)swift_unknownObjectUnownedLoadStrong();
        uint64_t v38 = *(void *)&v37[OBJC_IVAR___ICRealtimeCollaborationController_id];

        uint64_t v68 = v38;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        _os_log_impl((void *)&_mh_execute_header, v32, v33, "%@: SelectionController[%ld]: no group session", (uint8_t *)v34, 0x16u);
        sub_10002F214(&qword_10069FD50);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        uint64_t v32 = v31;
      }

      sub_100266204((unint64_t)&_swiftEmptySetSingleton);
      *(Class *)((char *)&v31->isa + OBJC_IVAR___ICRealtimeCollaborationSelectionController_activeParticipants) = (Class)&_swiftEmptySetSingleton;
      swift_bridgeObjectRelease();
      *(Class *)((char *)&v31->isa + OBJC_IVAR___ICRealtimeCollaborationSelectionController_activeParticipantsObservation) = 0;
      swift_release();
      _s11MobileNotes40RealtimeCollaborationSelectionControllerC08realtimedf9DidChangeE5StateyyAA0cdF0CF_0();
    }
    return;
  }
  uint64_t v59 = v2;
  GroupSession.id.getter();
  uint64_t v63 = v5;
  id v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  uint64_t v19 = 1;
  v18(v17, 0, 1, v4);
  if (v66)
  {
    GroupSession.id.getter();
    uint64_t v19 = 0;
  }
  v18(v15, v19, 1, v4);
  uint64_t v20 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_10026BE04((uint64_t)v17, (uint64_t)v9);
  sub_10026BE04((uint64_t)v15, v20);
  uint64_t v21 = v4;
  uint64_t v22 = v63;
  id v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48);
  if (v23((uint64_t)v9, 1, v4) == 1)
  {
    sub_10002B754((uint64_t)v15, (uint64_t *)&unk_10069C990);
    sub_10002B754((uint64_t)v17, (uint64_t *)&unk_10069C990);
    if (v23(v20, 1, v4) == 1)
    {
      sub_10002B754((uint64_t)v9, (uint64_t *)&unk_10069C990);
LABEL_11:
      swift_release();
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v24 = (uint64_t)v64;
  sub_10026BE04((uint64_t)v9, (uint64_t)v64);
  if (v23(v20, 1, v21) == 1)
  {
    sub_10002B754((uint64_t)v15, (uint64_t *)&unk_10069C990);
    sub_10002B754((uint64_t)v17, (uint64_t *)&unk_10069C990);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v24, v21);
LABEL_9:
    sub_10002B754((uint64_t)v9, (uint64_t *)&unk_1006A4F60);
    goto LABEL_18;
  }
  id v25 = v60;
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 32))(v60, v20, v21);
  sub_10026BC40(&qword_10069DE60, (void (*)(uint64_t))&type metadata accessor for UUID);
  char v26 = dispatch thunk of static Equatable.== infix(_:_:)();
  id v27 = *(void (**)(char *, uint64_t))(v22 + 8);
  v27(v25, v21);
  sub_10002B754((uint64_t)v15, (uint64_t *)&unk_10069C990);
  sub_10002B754((uint64_t)v17, (uint64_t *)&unk_10069C990);
  v27(v64, v21);
  sub_10002B754((uint64_t)v9, (uint64_t *)&unk_10069C990);
  if (v26) {
    goto LABEL_11;
  }
LABEL_18:
  uint64_t v39 = v65;
  if (qword_10069ADE0 != -1) {
    swift_once();
  }
  uint64_t v40 = type metadata accessor for Logger();
  sub_10003293C(v40, (uint64_t)qword_1006A0D10);
  unint64_t v41 = v39;
  swift_retain_n();
  uint64_t v42 = Logger.logObject.getter();
  os_log_type_t v43 = static os_log_type_t.info.getter();
  int v44 = v43;
  if (os_log_type_enabled(v42, v43))
  {
    uint64_t v45 = swift_slowAlloc();
    LODWORD(v65) = v44;
    uint64_t v46 = v45;
    uint64_t v47 = (char *)swift_slowAlloc();
    uint64_t v64 = v47;
    uint64_t v66 = swift_slowAlloc();
    uint64_t v68 = v66;
    *(_DWORD *)uint64_t v46 = 138412802;
    uint64_t v48 = swift_unknownObjectUnownedLoadStrong();
    unint64_t v67 = v48;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(void *)uint64_t v47 = v48;
    *(_WORD *)(v46 + 12) = 2048;
    uint64_t v49 = (char *)swift_unknownObjectUnownedLoadStrong();
    unint64_t v50 = *(void *)&v49[OBJC_IVAR___ICRealtimeCollaborationController_id];

    unint64_t v67 = v50;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    *(_WORD *)(v46 + 22) = 2080;
    uint64_t v51 = v21;
    uint64_t v52 = v60;
    GroupSession.id.getter();
    sub_10026BC40(&qword_1006A0E20, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v53 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v55 = v54;
    (*(void (**)(char *, uint64_t))(v63 + 8))(v52, v51);
    unint64_t v67 = sub_10045DA1C(v53, v55, &v68);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v42, (os_log_type_t)v65, "%@: SelectionController[%ld]: received group session %s", (uint8_t *)v46, 0x20u);
    sub_10002F214(&qword_10069FD50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v56 = v61;
  GroupSession.$activeParticipants.getter();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_10001DFB0(&qword_1006A0E18, &qword_1006A0E10);
  uint64_t v57 = v59;
  uint64_t v58 = Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v56, v57);
  *(void *)&v41[OBJC_IVAR___ICRealtimeCollaborationSelectionController_activeParticipantsObservation] = v58;
  swift_release();
  _s11MobileNotes40RealtimeCollaborationSelectionControllerC08realtimedf9DidChangeE5StateyyAA0cdF0CF_0();
  swift_release();
}

uint64_t sub_100264CB8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100264D2C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = (char *)result;
    unint64_t v4 = swift_bridgeObjectRetain();
    sub_100266204(v4);
    *(void *)&v3[OBJC_IVAR___ICRealtimeCollaborationSelectionController_activeParticipants] = v1;

    return swift_bridgeObjectRelease();
  }
  return result;
}

void _s11MobileNotes40RealtimeCollaborationSelectionControllerC08realtimedf9DidChangeE5StateyyAA0cdF0CF_0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for RealtimeCollaborationSelectionDocument.ParticipantSelection();
  uint64_t v116 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v115 = (char *)v92 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214(&qword_1006A0D68);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v111 = (char *)v92 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  int64_t v110 = (char *)v92 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)v92 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v92 - v12;
  uint64_t v14 = sub_10002F214((uint64_t *)&unk_10069C990);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v114 = (char *)v92 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)v92 - v18;
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)v92 - v20;
  uint64_t v22 = type metadata accessor for UUID();
  uint64_t v113 = *(void *)(v22 - 8);
  uint64_t v23 = __chkstk_darwin(v22);
  unint64_t v117 = (char *)v92 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v23);
  id v27 = (char *)v92 - v26;
  __chkstk_darwin(v25);
  uint64_t v112 = (char *)v92 - v28;
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  id v118 = [Strong authorHighlightsUpdater];

  if (!v118) {
    return;
  }
  if ((AuthorHighlightsUpdater.showsCollaboratorStatuses.getter() & 1) == 0) {
    goto LABEL_10;
  }
  id v99 = v1;
  uint64_t v30 = (void *)swift_unknownObjectUnownedLoadStrong();
  id v31 = [v30 note];

  if (!v31) {
    goto LABEL_10;
  }
  id v107 = [v31 textStorage];

  if (!v107) {
    goto LABEL_10;
  }
  uint64_t v32 = (void *)AuthorHighlightsUpdater.authorHighlightsController.getter();
  unsigned __int8 v33 = [v32 isPerformingHighlightUpdatesForTextStorage:v107];

  if (v33)
  {

    id v34 = v107;
LABEL_11:

    return;
  }
  uint64_t v35 = (void *)swift_unknownObjectUnownedLoadStrong();
  id v36 = [v35 textView];

  if (v36)
  {
    unsigned int v37 = [v36 isPerformingHighlightUpdates];

    if (v37)
    {

LABEL_10:
      id v34 = v118;
      goto LABEL_11;
    }
  }
  uint64_t v38 = (char *)swift_unknownObjectUnownedLoadStrong();
  uint64_t v39 = *(void **)&v38[OBJC_IVAR___ICRealtimeCollaborationController_selectionDocument];
  if (v39)
  {
    id v40 = v39;
    RealtimeCollaborationSelectionDocument.localParticipantID.getter();

    uint64_t v41 = v113;
    uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v113 + 56);
    os_log_type_t v43 = v21;
    uint64_t v44 = 0;
  }
  else
  {
    uint64_t v41 = v113;
    uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v113 + 56);
    os_log_type_t v43 = v21;
    uint64_t v44 = 1;
  }
  uint64_t v104 = v42;
  v42(v43, v44, 1, v22);

  id v105 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
  uint64_t v106 = v41 + 48;
  if (v105(v21, 1, v22) == 1)
  {
    sub_10002B754((uint64_t)v21, (uint64_t *)&unk_10069C990);
LABEL_46:
    AuthorHighlightsUpdater.collaboratorStatuses.setter();
    AuthorHighlightsUpdater.scheduleUpdate(animated:)(0);

    return;
  }
  uint64_t v45 = v112;
  unint64_t v108 = *(void (**)(char *, char *, uint64_t))(v41 + 32);
  uint64_t v109 = v41 + 32;
  v108(v112, v21, v22);
  uint64_t v46 = (char *)swift_unknownObjectUnownedLoadStrong();
  uint64_t v47 = v46;
  uint64_t v48 = *(void **)&v46[OBJC_IVAR___ICRealtimeCollaborationController_selectionDocument];
  if (!v48)
  {

    (*(void (**)(char *, uint64_t))(v41 + 8))(v45, v22);
    goto LABEL_46;
  }
  id v49 = v48;
  uint64_t v50 = RealtimeCollaborationSelectionDocument.selections.getter();

  if (!*(void *)(v50 + 16))
  {
    (*(void (**)(char *, uint64_t))(v113 + 8))(v45, v22);
    swift_bridgeObjectRelease();
    goto LABEL_46;
  }
  unint64_t v98 = *(void *)(v50 + 16);
  __chkstk_darwin(v51);
  id v52 = v107;
  v92[-2] = v53;
  v92[-1] = v52;
  swift_bridgeObjectRetain();
  uint64_t v94 = sub_1002637D0((uint64_t (*)(char *))sub_10026BD5C, (uint64_t)&v92[-4], v50);
  unint64_t v93 = 0;
  uint64_t v54 = v50;
  v92[1] = sub_10026BC40((unint64_t *)&qword_1006A4DD0, (void (*)(uint64_t))&type metadata accessor for UUID);
  unint64_t v55 = 0;
  v119[0] = Set.init(minimumCapacity:)();
  uint64_t v95 = v116 + 16;
  uint64_t v103 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v116 + 56);
  uint64_t v102 = (unsigned int (**)(char *, uint64_t, uint64_t))(v116 + 48);
  id v97 = (void (**)(char *, char *, uint64_t))(v116 + 32);
  unint64_t v96 = (void (**)(char *, uint64_t))(v116 + 8);
  uint64_t v101 = v113 + 56;
  for (v113 += 8; ; (*(void (**)(char *, uint64_t))v113)(v27, v22))
  {
    unint64_t v56 = v98;
    if (v55 == v98)
    {
      uint64_t v100 = *v103;
      v100(v13, 1, 1, v2);
      unint64_t v55 = v56;
    }
    else
    {
      if (v55 >= *(void *)(v54 + 16))
      {
        __break(1u);
LABEL_49:
        __break(1u);
        goto LABEL_50;
      }
      uint64_t v57 = v116;
      (*(void (**)(char *, unint64_t, uint64_t))(v116 + 16))(v13, v54+ ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80))+ *(void *)(v57 + 72) * v55++, v2);
      uint64_t v100 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v57 + 56);
      v100(v13, 0, 1, v2);
    }
    sub_10026BD7C((uint64_t)v13, (uint64_t)v11);
    uint64_t v58 = *v102;
    if ((*v102)(v11, 1, v2) == 1)
    {
      uint64_t v59 = v19;
      uint64_t v60 = 1;
    }
    else
    {
      uint64_t v61 = v115;
      (*v97)(v115, v11, v2);
      RealtimeCollaborationSelectionDocument.ParticipantSelection.participantID.getter();
      v108(v19, v27, v22);
      (*v96)(v61, v2);
      uint64_t v59 = v19;
      uint64_t v60 = 0;
    }
    v104(v59, v60, 1, v22);
    if (v105(v19, 1, v22) == 1) {
      break;
    }
    uint64_t v62 = v117;
    v108(v117, v19, v22);
    sub_100393D98((uint64_t)v27, v62);
  }
  swift_bridgeObjectRelease();
  uint64_t v63 = v119[0];
  swift_bridgeObjectRetain();
  uint64_t v64 = (void (*)(void *, void))AuthorHighlightsUpdater.collaboratorStatuses.modify();
  uint64_t v66 = v65;
  unint64_t v67 = v93;
  uint64_t v68 = sub_10026A3A0(v65, v63);
  unint64_t v98 = v67;
  swift_bridgeObjectRelease();
  uint64_t v69 = *(void *)(*v66 + 16);
  if (v69 < v68)
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  sub_1002E18A4(v68, v69);
  v64(v119, 0);
  swift_bridgeObjectRelease();
  uint64_t v70 = v94;
  swift_bridgeObjectRetain();
  unint64_t i = 0;
  v119[0] = Set.init(minimumCapacity:)();
  unint64_t v72 = *(void *)(v70 + 16);
  uint64_t v74 = (uint64_t)v110;
  uint64_t v73 = (uint64_t)v111;
  if (v72) {
    goto LABEL_34;
  }
LABEL_33:
  v100((char *)v74, 1, 1, v2);
  for (unint64_t i = v72; ; ++i)
  {
    sub_10026BD7C(v74, v73);
    if (v58((char *)v73, 1, v2) == 1)
    {
      unint64_t v75 = v114;
      uint64_t v76 = v114;
      uint64_t v77 = 1;
    }
    else
    {
      uint64_t v78 = v115;
      (*v97)(v115, (char *)v73, v2);
      RealtimeCollaborationSelectionDocument.ParticipantSelection.participantID.getter();
      uint64_t v79 = v114;
      v108(v114, v27, v22);
      unint64_t v80 = v78;
      unint64_t v75 = v79;
      (*v96)(v80, v2);
      uint64_t v76 = v79;
      uint64_t v77 = 0;
    }
    v104(v76, v77, 1, v22);
    if (v105(v75, 1, v22) == 1) {
      break;
    }
    uint64_t v81 = v117;
    v108(v117, v75, v22);
    sub_100393D98((uint64_t)v27, v81);
    (*(void (**)(char *, uint64_t))v113)(v27, v22);
    if (i == v72) {
      goto LABEL_33;
    }
LABEL_34:
    if (i >= *(void *)(v94 + 16)) {
      goto LABEL_49;
    }
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v116 + 16))(v74, v94+ ((*(unsigned __int8 *)(v116 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80))+ *(void *)(v116 + 72) * i, v2);
    v100((char *)v74, 0, 1, v2);
  }
  uint64_t v82 = v94;
  swift_bridgeObjectRelease();
  uint64_t v83 = v119[0];
  swift_bridgeObjectRetain();
  uint64_t v84 = (void (*)(void *, void))AuthorHighlightsUpdater.collaboratorStatuses.modify();
  uint64_t v86 = v85;
  uint64_t v87 = sub_10026AB78(v85, v83);
  swift_bridgeObjectRelease();
  uint64_t v88 = *(void *)(*v86 + 16);
  if (v88 >= v87)
  {
    sub_1002E18A4(v87, v88);
    v84(v119, 0);
    swift_bridgeObjectRelease();
    id v89 = v99;
    uint64_t v90 = sub_1002692B8(v82, (uint64_t)v89);
    swift_bridgeObjectRelease();

    unint64_t v91 = (void (*)(void *, void))AuthorHighlightsUpdater.collaboratorStatuses.modify();
    sub_10022B528((uint64_t)v90);
    v91(v119, 0);
    AuthorHighlightsUpdater.update(animated:)(0);

    (*(void (**)(char *, uint64_t))v113)(v112, v22);
    return;
  }
LABEL_51:
  __break(1u);
}

uint64_t sub_100265A98@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_100265B18@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_10002F214(&qword_1006A0DC0);
  __chkstk_darwin(v2 - 8);
  uint64_t v57 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for RealtimeCollaborationSelectionDocument.TableSelection();
  uint64_t v58 = *(void *)(v4 - 8);
  uint64_t v59 = v4;
  __chkstk_darwin(v4);
  unint64_t v56 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214(&qword_1006A0DC8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ICTTMergeableString.Location();
  uint64_t v60 = *(void *)(v9 - 8);
  uint64_t v61 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10002F214(&qword_1006A0DD0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for ICTTMergeableString.Selection();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  id v20 = [Strong textView];

  if (v20)
  {
    if ([v20 isFirstResponder])
    {
      ICTextView.selection.getter();

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
      {
        uint64_t v21 = &qword_1006A0DD0;
LABEL_5:
        uint64_t v22 = (uint64_t)v14;
LABEL_6:
        sub_10002B754(v22, v21);
LABEL_7:
        uint64_t v23 = type metadata accessor for RealtimeCollaborationSelectionDocument.Selection();
        return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(a1, 1, 1, v23);
      }
      uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
      v38(v18, v14, v15);
      uint64_t v39 = swift_allocBox();
      v38(v40, v18, v15);
      *a1 = v39;
      uint64_t v41 = (unsigned int *)&enum case for RealtimeCollaborationSelectionDocument.Selection.text(_:);
LABEL_16:
      uint64_t v42 = *v41;
      uint64_t v43 = type metadata accessor for RealtimeCollaborationSelectionDocument.Selection();
      uint64_t v44 = *(void *)(v43 - 8);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v44 + 104))(a1, v42, v43);
      return (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(v44 + 56))(a1, 0, 1, v43);
    }
    uint64_t v29 = (void *)swift_unknownObjectUnownedLoadStrong();
    id v30 = [v29 auxiliaryResponder];

    if (v30)
    {
      id v31 = (void *)swift_unknownObjectUnownedLoadStrong();
      id v32 = [v31 auxiliaryStylingController];

      if (v32)
      {
        self;
        unsigned __int8 v33 = (void *)swift_dynamicCastObjCClass();
        if (v33)
        {
          id v34 = [v33 attachment];
          if (!v34)
          {

            swift_unknownObjectRelease();
            goto LABEL_7;
          }
          uint64_t v35 = v34;
          ICBaseTextView.location(for:)();
          uint64_t v37 = v60;
          uint64_t v36 = v61;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v8, 1, v61) == 1)
          {

            swift_unknownObjectRelease();
            uint64_t v21 = &qword_1006A0DC8;
            uint64_t v22 = (uint64_t)v8;
            goto LABEL_6;
          }
          unint64_t v55 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
          v55(v11, v8, v36);
          uint64_t v14 = v57;
          ICTableAttachmentViewController.collaborationSelection.getter();

          swift_unknownObjectRelease();
          uint64_t v47 = v58;
          uint64_t v46 = v59;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v14, 1, v59) == 1)
          {
            (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v61);
            uint64_t v21 = &qword_1006A0DC0;
            goto LABEL_5;
          }
          uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
          id v49 = v56;
          v48(v56, v14, v46);
          uint64_t v50 = sub_10002F214(&qword_1006A0DD8);
          uint64_t v51 = swift_allocBox();
          uint64_t v53 = &v52[*(int *)(v50 + 48)];
          v55(v52, v11, v61);
          v48(v53, v49, v46);
          *a1 = v51;
          uint64_t v41 = (unsigned int *)&enum case for RealtimeCollaborationSelectionDocument.Selection.table(_:);
          goto LABEL_16;
        }
        swift_unknownObjectRelease();
      }
    }

    uint64_t v45 = type metadata accessor for RealtimeCollaborationSelectionDocument.Selection();
    uint64_t v26 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56);
    uint64_t v27 = v45;
    uint64_t v28 = a1;
  }
  else
  {
    uint64_t v25 = type metadata accessor for RealtimeCollaborationSelectionDocument.Selection();
    uint64_t v26 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
    uint64_t v27 = v25;
    uint64_t v28 = a1;
  }

  return v26(v28, 1, 1, v27);
}

void sub_100266204(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10002F214((uint64_t *)&unk_10069C990);
  __chkstk_darwin(v4 - 8);
  unint64_t v93 = (char *)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214(&qword_1006A0DB8);
  __chkstk_darwin(v6 - 8);
  unint64_t v8 = (unint64_t)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = type metadata accessor for Participant();
  uint64_t v9 = *(void *)(v102 - 8);
  uint64_t v10 = __chkstk_darwin(v102);
  uint64_t v12 = (char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v101 = (char *)&v85 - v13;
  uint64_t v14 = type metadata accessor for UUID();
  uint64_t v104 = *(void *)(v14 - 8);
  uint64_t v15 = __chkstk_darwin(v14);
  id v99 = (char *)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v100 = (char *)&v85 - v18;
  __chkstk_darwin(v17);
  uint64_t v103 = (char *)&v85 - v19;
  int64_t v20 = OBJC_IVAR___ICRealtimeCollaborationSelectionController_activeParticipants;
  if (*(void *)(*(void *)(v1 + OBJC_IVAR___ICRealtimeCollaborationSelectionController_activeParticipants) + 16) <= *(void *)(a1 + 16) >> 3)
  {
    v107[0] = a1;
    swift_bridgeObjectRetain();
    uint64_t v23 = swift_bridgeObjectRetain();
    sub_10048DCF8(v23);
    swift_bridgeObjectRelease();
    uint64_t v22 = (char *)v107[0];
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = swift_bridgeObjectRetain();
    uint64_t v22 = (char *)sub_10048E55C(v21, a1);
    swift_bridgeObjectRelease();
  }
  uint64_t v24 = *((void *)v22 + 2);
  uint64_t v105 = v14;
  uint64_t v25 = (uint64_t)v99;
  if (!v24)
  {
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  if (qword_10069ADE0 != -1) {
    goto LABEL_60;
  }
  while (1)
  {
    uint64_t v26 = type metadata accessor for Logger();
    sub_10003293C(v26, (uint64_t)qword_1006A0D10);
    swift_bridgeObjectRetain();
    uint64_t v27 = Logger.logObject.getter();
    int v91 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v27, (os_log_type_t)v91))
    {
      os_log_t v87 = v27;
      int64_t v88 = v20;
      id v89 = v8;
      uint64_t v90 = a1;
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v85 = swift_slowAlloc();
      v107[0] = v85;
      uint64_t v86 = v28;
      *(_DWORD *)uint64_t v28 = 136315138;
      int64_t v20 = *((void *)v22 + 2);
      if (v20)
      {
        uint64_t v92 = v2;
        uint64_t v106 = _swiftEmptyArrayStorage;
        sub_100169C6C(0, v20, 0);
        uint64_t v25 = sub_1002AEEFC(v22);
        uint64_t v2 = v29;
        unint64_t v8 = v30 & 1;
        unint64_t v97 = v9 + 16;
        unint64_t v98 = v22 + 56;
        uint64_t v95 = v9 + 8;
        uint64_t v96 = v9 + 32;
        uint64_t v94 = (uint8_t *)(v104 + 32);
        while ((v25 & 0x8000000000000000) == 0 && v25 < 1 << v22[32])
        {
          if (((*(void *)&v98[((unint64_t)v25 >> 3) & 0x1FFFFFFFFFFFFFF8] >> v25) & 1) == 0) {
            goto LABEL_55;
          }
          if (*((_DWORD *)v22 + 9) != v2) {
            goto LABEL_56;
          }
          id v31 = v101;
          uint64_t v32 = v102;
          (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v101, *((void *)v22 + 6) + *(void *)(v9 + 72) * v25, v102);
          (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v31, v32);
          Participant.id.getter();
          (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v32);
          unsigned __int8 v33 = v106;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_100169C6C(0, v33[2] + 1, 1);
            unsigned __int8 v33 = v106;
          }
          a1 = v33[2];
          unint64_t v34 = v33[3];
          if (a1 >= v34 >> 1)
          {
            sub_100169C6C(v34 > 1, a1 + 1, 1);
            unsigned __int8 v33 = v106;
          }
          v33[2] = a1 + 1;
          uint64_t v14 = v105;
          (*(void (**)(unint64_t, char *, uint64_t))(v104 + 32))((unint64_t)v33+ ((*(unsigned __int8 *)(v104 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80))+ *(void *)(v104 + 72) * a1, v103, v105);
          uint64_t v106 = v33;
          uint64_t v35 = sub_10048F4F4(v25, v2, v8 & 1, v22);
          uint64_t v25 = v35;
          uint64_t v2 = v36;
          unint64_t v8 = v37 & 1;
          if (!--v20)
          {
            sub_10002DA18(v35, v36, v37 & 1);
            uint64_t v2 = v92;
            goto LABEL_21;
          }
        }
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
        goto LABEL_57;
      }
LABEL_21:
      uint64_t v38 = v86;
      uint64_t v39 = Array.description.getter();
      unint64_t v41 = v40;
      swift_bridgeObjectRelease();
      uint64_t v42 = v39;
      uint64_t v14 = v105;
      uint64_t v106 = (void *)sub_10045DA1C(v42, v41, v107);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      os_log_t v43 = v87;
      _os_log_impl((void *)&_mh_execute_header, v87, (os_log_type_t)v91, "Posting full local selection for added participants {participantIDs: %s}", v38, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v25 = (uint64_t)v99;
      unint64_t v8 = (unint64_t)v89;
      a1 = v90;
      int64_t v20 = v88;
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
    sub_100265B18((uint64_t *)v8);
    RealtimeCollaborationController.postLocalSelection(_:asDelta:)(v8, 0);

    sub_10002B754(v8, &qword_1006A0DB8);
LABEL_23:
    uint64_t v45 = *(void *)(v2 + v20);
    if (*(void *)(a1 + 16) <= *(void *)(v45 + 16) >> 3)
    {
      v107[0] = *(void *)(v2 + v20);
      swift_bridgeObjectRetain();
      sub_10048DCF8(a1);
      uint64_t v22 = (char *)v107[0];
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = (char *)sub_10048E55C(a1, v45);
    }
    if (!*((void *)v22 + 2))
    {
      swift_bridgeObjectRelease();
      return;
    }
    if (qword_10069ADE0 != -1) {
      swift_once();
    }
    uint64_t v46 = type metadata accessor for Logger();
    sub_10003293C(v46, (uint64_t)qword_1006A0D10);
    swift_bridgeObjectRetain_n();
    uint64_t v47 = Logger.logObject.getter();
    int v48 = static os_log_type_t.debug.getter();
    BOOL v49 = os_log_type_enabled(v47, (os_log_type_t)v48);
    uint64_t v92 = v2;
    if (!v49)
    {

      swift_bridgeObjectRelease_n();
      uint64_t v60 = v104;
      goto LABEL_45;
    }
    int v91 = v48;
    uint64_t v50 = (uint8_t *)swift_slowAlloc();
    uint64_t v90 = swift_slowAlloc();
    v107[0] = v90;
    uint64_t v94 = v50;
    *(_DWORD *)uint64_t v50 = 136315138;
    int64_t v20 = *((void *)v22 + 2);
    if (!v20) {
      break;
    }
    id v89 = v47;
    uint64_t v106 = _swiftEmptyArrayStorage;
    sub_100169C6C(0, v20, 0);
    uint64_t v25 = sub_1002AEEFC(v22);
    uint64_t v2 = v51;
    unint64_t v8 = v52 & 1;
    uint64_t v103 = v22 + 56;
    unint64_t v97 = v9 + 32;
    unint64_t v98 = (char *)(v9 + 16);
    uint64_t v95 = v104 + 32;
    uint64_t v96 = v9 + 8;
    while ((v25 & 0x8000000000000000) == 0 && v25 < 1 << v22[32])
    {
      if (((*(void *)&v103[((unint64_t)v25 >> 3) & 0x1FFFFFFFFFFFFFF8] >> v25) & 1) == 0) {
        goto LABEL_58;
      }
      if (*((_DWORD *)v22 + 9) != v2) {
        goto LABEL_59;
      }
      uint64_t v53 = v101;
      uint64_t v54 = v102;
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v101, *((void *)v22 + 6) + *(void *)(v9 + 72) * v25, v102);
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v53, v54);
      Participant.id.getter();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v54);
      unint64_t v55 = v106;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100169C6C(0, v55[2] + 1, 1);
        unint64_t v55 = v106;
      }
      a1 = v55[2];
      unint64_t v56 = v55[3];
      if (a1 >= v56 >> 1)
      {
        sub_100169C6C(v56 > 1, a1 + 1, 1);
        unint64_t v55 = v106;
      }
      v55[2] = a1 + 1;
      uint64_t v14 = v105;
      (*(void (**)(unint64_t, char *, uint64_t))(v104 + 32))((unint64_t)v55+ ((*(unsigned __int8 *)(v104 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80))+ *(void *)(v104 + 72) * a1, v100, v105);
      uint64_t v106 = v55;
      uint64_t v57 = sub_10048F4F4(v25, v2, v8 & 1, v22);
      uint64_t v25 = v57;
      uint64_t v2 = v58;
      unint64_t v8 = v59 & 1;
      if (!--v20)
      {
        sub_10002DA18(v57, v58, v59 & 1);
        uint64_t v2 = v92;
        uint64_t v47 = v89;
        goto LABEL_44;
      }
    }
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    swift_once();
  }
LABEL_44:
  uint64_t v61 = v94;
  uint64_t v62 = Array.description.getter();
  unint64_t v64 = v63;
  swift_bridgeObjectRelease();
  uint64_t v106 = (void *)sub_10045DA1C(v62, v64, v107);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease_n();
  uint64_t v14 = v105;
  swift_bridgeObjectRelease();
  _os_log_impl((void *)&_mh_execute_header, v47, (os_log_type_t)v91, "Removing selections for removed participants {participantIDs: %s}", v61, 0xCu);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  uint64_t v60 = v104;
  uint64_t v25 = (uint64_t)v99;
LABEL_45:
  uint64_t v65 = sub_100262978((uint64_t)v22);
  swift_bridgeObjectRelease();
  uint64_t v66 = *(void *)(v65 + 16);
  unint64_t v67 = v93;
  unint64_t v98 = (char *)v65;
  if (v66)
  {
    uint64_t v69 = *(void *)(v60 + 16);
    uint64_t v68 = v60 + 16;
    unint64_t v70 = v65 + ((*(unsigned __int8 *)(v68 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 64));
    uint64_t v102 = v2 + OBJC_IVAR___ICRealtimeCollaborationSelectionController_realtimeCollaborationController;
    uint64_t v71 = *(char **)(v68 + 56);
    unint64_t v72 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v68 + 40);
    uint64_t v103 = (char *)(v68 + 32);
    uint64_t v104 = v69;
    uint64_t v100 = (char *)(v68 + 16);
    uint64_t v101 = v71;
    uint64_t v73 = (void (**)(uint64_t, uint64_t))(v68 - 8);
    swift_bridgeObjectRetain();
    unint64_t v97 = (v68 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    while (1)
    {
      ((void (*)(char *, unint64_t, uint64_t))v104)(v67, v70, v14);
      uint64_t v74 = *v72;
      (*v72)(v67, 0, 1, v14);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))v103)(v67, 1, v14) == 1) {
        break;
      }
      (*(void (**)(uint64_t, char *, uint64_t))v100)(v25, v67, v14);
      unint64_t v75 = (char *)swift_unknownObjectUnownedLoadStrong();
      uint64_t v76 = *(void **)&v75[OBJC_IVAR___ICRealtimeCollaborationController_selectionDocument];
      if (v76)
      {
        id v77 = v76;
        uint64_t v78 = RealtimeCollaborationSelectionDocument.removeSelection(forParticipantID:)();
        uint64_t v79 = v68;
        unint64_t v81 = v80;

        unint64_t v67 = v93;
        uint64_t v82 = v78;
        uint64_t v14 = v105;
        unint64_t v83 = v81;
        uint64_t v68 = v79;
        uint64_t v25 = (uint64_t)v99;
        sub_1001A3F54(v82, v83);
      }

      (*v73)(v25, v14);
      v70 += (unint64_t)v101;
      if (!--v66)
      {
        v74(v67, 1, 1, v14);
        break;
      }
    }
  }
  else
  {
    uint64_t v84 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v60 + 56);
    swift_bridgeObjectRetain();
    v84(v67, 1, 1, v14);
  }
  swift_bridgeObjectRelease_n();
  _s11MobileNotes40RealtimeCollaborationSelectionControllerC08realtimedf9DidChangeE5StateyyAA0cdF0CF_0();
}

uint64_t sub_100266EA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v17[1] = a3;
  uint64_t v19 = a2;
  uint64_t v18 = type metadata accessor for RealtimeCollaborationSelectionDocument.Selection();
  v17[0] = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for RealtimeCollaborationSelectionDocument.ParticipantSelection();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  RealtimeCollaborationSelectionDocument.ParticipantSelection.participantID.getter();
  sub_10026BC40(&qword_10069DE60, (void (*)(uint64_t))&type metadata accessor for UUID);
  char v14 = dispatch thunk of static Equatable.== infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  if (v14)
  {
    char v15 = 0;
  }
  else
  {
    RealtimeCollaborationSelectionDocument.ParticipantSelection.selection.getter();
    char v15 = ICTTTextStorage.canResolve(_:)();
    (*(void (**)(char *, uint64_t))(v17[0] + 8))(v5, v18);
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v15 & 1;
}

uint64_t sub_100267154@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for RealtimeCollaborationSelectionDocument.Selection();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UUID();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_10002F214(&qword_1006A0E08);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v29[3])
  {
    v29[1] = v6;
    uint64_t v11 = GroupSession.activeParticipants.getter();
    uint64_t v12 = swift_release();
    __chkstk_darwin(v12);
    v29[-2] = a1;
    sub_1002631D4((uint64_t (*)(char *))sub_10026BDE4, v11, v10);
    swift_bridgeObjectRelease();
    uint64_t v13 = type metadata accessor for Participant();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v10, 1, v13) == 1)
    {
      sub_10002B754((uint64_t)v10, &qword_1006A0E08);
    }
    else
    {
      Participant.handle.getter();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v10, v13);
      uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
      id v16 = [Strong note];

      if (v16)
      {
        NSString v17 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v18 = [v16 participantForHandle:v17];

        if (v18)
        {
          id v19 = [v18 userIdentity];
          id v20 = [v19 userRecordID];

          if (v20)
          {
            id v21 = [v20 recordName];

            static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v22 = (void *)swift_unknownObjectUnownedLoadStrong();
            id v23 = [v22 authorHighlightsController];

            if (v23)
            {
              NSString v24 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
              id v25 = [v23 highlightColorForUserID:v24];

              if (v25)
              {
                RealtimeCollaborationSelectionDocument.ParticipantSelection.participantID.getter();
                RealtimeCollaborationSelectionDocument.ParticipantSelection.selection.getter();
                CollaboratorStatus.init(participantID:participant:color:selection:)();
                uint64_t v26 = type metadata accessor for CollaboratorStatus();
                return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(a2, 0, 1, v26);
              }
            }
            else
            {
              swift_bridgeObjectRelease();
            }
          }
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
  }
  uint64_t v28 = type metadata accessor for CollaboratorStatus();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(a2, 1, 1, v28);
}

void sub_1002675F0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = OBJC_IVAR___ICRealtimeCollaborationSelectionController_didScheduleCollaboratorStatusesUpdate;
  if ((v0[OBJC_IVAR___ICRealtimeCollaborationSelectionController_didScheduleCollaboratorStatusesUpdate] & 1) == 0)
  {
    uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
    id v12 = [Strong authorHighlightsUpdater];

    if (v12)
    {
      char v13 = AuthorHighlightsUpdater.didScheduleUpdate.getter();

      if ((v13 & 1) == 0 && (v1[v10] & 1) == 0)
      {
        v1[v10] = 1;
        sub_100031418(0, (unint64_t *)&qword_10069D2D0);
        v18[0] = static OS_dispatch_queue.main.getter();
        uint64_t v14 = swift_allocObject();
        *(void *)(v14 + 16) = v1;
        aBlock[4] = sub_10026BCE4;
        aBlock[5] = v14;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        void aBlock[2] = sub_100262E2C;
        aBlock[3] = &unk_100632100;
        char v15 = _Block_copy(aBlock);
        id v16 = v1;
        static DispatchQoS.unspecified.getter();
        v18[1] = _swiftEmptyArrayStorage;
        sub_10026BC40((unint64_t *)&qword_1006A26A0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_10002F214((uint64_t *)&unk_1006A4830);
        sub_10001DFB0((unint64_t *)&qword_1006A26B0, (uint64_t *)&unk_1006A4830);
        dispatch thunk of SetAlgebra.init<A>(_:)();
        NSString v17 = (void *)v18[0];
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v15);

        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        swift_release();
      }
    }
  }
}

uint64_t sub_100267930()
{
  uint64_t v0 = type metadata accessor for UUID();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)v10 - v5;
  Participant.id.getter();
  RealtimeCollaborationSelectionDocument.ParticipantSelection.participantID.getter();
  char v7 = static UUID.== infix(_:_:)();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v4, v0);
  v8(v6, v0);
  return v7 & 1;
}

Swift::Void __swiftcall RealtimeCollaborationSelectionController.showSelection(for:)(CKShareParticipant a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for RealtimeCollaborationSelectionDocument.Selection();
  Swift::Int location = *(void *)(v4 - 8);
  Swift::Int length = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10002F214(&qword_1006A0D68);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for RealtimeCollaborationSelectionDocument.ParticipantSelection();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = __chkstk_darwin(v10);
  unint64_t v56 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  char v15 = (char *)&v49 - v14;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (aBlock[0])
  {
    uint64_t v54 = v15;
    uint64_t v55 = v11;
    uint64_t v16 = v2 + OBJC_IVAR___ICRealtimeCollaborationSelectionController_editorController;
    uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
    id v18 = [Strong note];

    if (v18)
    {
      id v19 = [v18 textStorage];

      if (v19)
      {
        id v20 = [(objc_class *)a1.super.isa userIdentity];
        id v21 = [v20 lookupInfo];

        if (!v21)
        {
          swift_release();

          return;
        }
        uint64_t v51 = v16;
        uint64_t v52 = v10;
        id v53 = v19;
        uint64_t v22 = GroupSession.activeParticipants.getter();
        id v23 = v21;
        uint64_t v24 = sub_10026B7F0(v22, v23);

        uint64_t v25 = sub_100262978(v24);
        swift_release();
        uint64_t v26 = sub_1002696FC(v25);
        swift_bridgeObjectRelease();
        uint64_t v27 = (char *)swift_unknownObjectUnownedLoadStrong();
        uint64_t v28 = *(void **)&v27[OBJC_IVAR___ICRealtimeCollaborationController_selectionDocument];
        if (!v28)
        {
          swift_bridgeObjectRelease();

          swift_release();
          return;
        }
        id v50 = v23;
        id v29 = v28;
        uint64_t v30 = RealtimeCollaborationSelectionDocument.selections.getter();

        swift_bridgeObjectRetain();
        sub_1002680A4(v30, v26, (uint64_t)v9);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v31 = v55;
        uint64_t v32 = v52;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v9, 1, v52) == 1)
        {

          swift_release();
          sub_10002B754((uint64_t)v9, &qword_1006A0D68);
          return;
        }
        unsigned __int8 v33 = v54;
        BOOL v49 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
        v49(v54, v9, v32);
        unint64_t v34 = (void *)swift_unknownObjectUnownedLoadStrong();
        id v35 = [v34 textView];

        if (v35)
        {
          uint64_t v51 = v31 + 32;
          RealtimeCollaborationSelectionDocument.ParticipantSelection.selection.getter();
          id v36 = v53;
          uint64_t v37 = ICTTTextStorage.resolvedSelections(_:)();
          (*(void (**)(char *, Swift::Int))(location + 8))(v6, length);
          uint64_t v38 = sub_100262CF4(v37);
          swift_bridgeObjectRelease();
          __C::_NSRange_optional v60 = _NSRange.init(union:)((Swift::OpaquePointer)v38);
          uint64_t v39 = v33;
          if (!v60.is_nil)
          {
            uint64_t v41 = v55;
            unint64_t v40 = v56;
            uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v55 + 16);
            Swift::Int location = v60.value.location;
            Swift::Int length = v60.value.length;
            uint64_t v43 = v52;
            v42(v56, v39, v52);
            uint64_t v44 = v35;
            unint64_t v45 = (*(unsigned __int8 *)(v41 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
            uint64_t v46 = swift_allocObject();
            *(void *)(v46 + 16) = v44;
            v49((char *)(v46 + v45), v40, v43);
            aBlock[4] = sub_10026BA70;
            aBlock[5] = v46;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = 1107296256;
            void aBlock[2] = sub_100262E2C;
            aBlock[3] = &unk_100632060;
            uint64_t v47 = _Block_copy(aBlock);
            id v48 = v44;
            swift_release();
            [v48 ic_scrollRangeToVisible:location length:length animated:1 v47];

            swift_release();
            _Block_release(v47);

            (*(void (**)(char *, uint64_t))(v41 + 8))(v39, v43);
            return;
          }
          (*(void (**)(char *, uint64_t))(v55 + 8))(v33, v52);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v32);
        }
      }
    }
    swift_release();
  }
}

uint64_t sub_1002680A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v29 = a3;
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v30 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v27 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    uint64_t v12 = type metadata accessor for RealtimeCollaborationSelectionDocument.ParticipantSelection();
    uint64_t v27 = *(void *)(v12 - 8);
    uint64_t v28 = v12;
    uint64_t v33 = a1 + ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80));
    uint64_t v37 = a2 + 56;
    uint64_t v36 = v30 + 16;
    uint64_t v13 = (void (**)(char *, uint64_t))(v30 + 8);
    uint64_t v32 = *(void *)(v27 + 72);
    uint64_t v38 = v10;
    while (1)
    {
      uint64_t v34 = v11 - 1;
      uint64_t v31 = v33 + v32 * (v11 - 1);
      RealtimeCollaborationSelectionDocument.ParticipantSelection.participantID.getter();
      if (*(void *)(a2 + 16))
      {
        sub_10026BC40((unint64_t *)&qword_1006A4DD0, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v14 = dispatch thunk of Hashable._rawHashValue(seed:)();
        uint64_t v15 = -1 << *(unsigned char *)(a2 + 32);
        unint64_t v16 = v14 & ~v15;
        if ((*(void *)(v37 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16)) {
          break;
        }
      }
LABEL_3:
      (*v13)(v38, v5);
      uint64_t v11 = v34;
      if (!v34) {
        goto LABEL_11;
      }
    }
    uint64_t v35 = ~v15;
    uint64_t v17 = *(void *)(v30 + 72);
    id v18 = *(void (**)(char *, unint64_t, uint64_t))(v30 + 16);
    while (1)
    {
      uint64_t v19 = a2;
      v18(v8, *(void *)(a2 + 48) + v17 * v16, v5);
      sub_10026BC40(&qword_10069DE60, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v20 = dispatch thunk of static Equatable.== infix(_:_:)();
      id v21 = *v13;
      (*v13)(v8, v5);
      if (v20) {
        break;
      }
      unint64_t v16 = (v16 + 1) & v35;
      a2 = v19;
      if (((*(void *)(v37 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) == 0) {
        goto LABEL_3;
      }
    }
    v21(v38, v5);
    uint64_t v23 = v27;
    uint64_t v22 = v28;
    uint64_t v24 = v29;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v29, v31, v28);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v23 + 56))(v24, 0, 1, v22);
  }
  else
  {
LABEL_11:
    uint64_t v25 = type metadata accessor for RealtimeCollaborationSelectionDocument.ParticipantSelection();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v29, 1, 1, v25);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_100268458()
{
  uint64_t v0 = type metadata accessor for UUID();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  RealtimeCollaborationSelectionDocument.ParticipantSelection.participantID.getter();
  ICBaseTextView.expandAvatar(for:animated:)();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1002685A0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v19 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = Notification.userInfo.getter();
  if (!v8)
  {
    long long v21 = 0u;
    long long v22 = 0u;
LABEL_11:
    sub_10002B754((uint64_t)&v21, &qword_10069B4D0);
    uint64_t v12 = 0;
    goto LABEL_12;
  }
  uint64_t v9 = v8;
  *(void *)&long long v21 = 0x70756F7247434352;
  *((void *)&v21 + 1) = 0xEF6E6F6973736553;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v9 + 16) && (unint64_t v10 = sub_100033028((uint64_t)aBlock), (v11 & 1) != 0))
  {
    sub_100032E28(*(void *)(v9 + 56) + 32 * v10, (uint64_t)&v21);
  }
  else
  {
    long long v21 = 0u;
    long long v22 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_100033134((uint64_t)aBlock);
  if (!*((void *)&v22 + 1)) {
    goto LABEL_11;
  }
  sub_10002F214(&qword_1006A0DE0);
  if (swift_dynamicCast()) {
    uint64_t v12 = aBlock[0];
  }
  else {
    uint64_t v12 = 0;
  }
LABEL_12:
  sub_100031418(0, (unint64_t *)&qword_10069D2D0);
  uint64_t v13 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v1;
  *(void *)(v14 + 24) = v12;
  aBlock[4] = sub_10026BD54;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100262E2C;
  aBlock[3] = &unk_100632150;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  id v16 = v1;
  static DispatchQoS.unspecified.getter();
  *(void *)&long long v21 = _swiftEmptyArrayStorage;
  sub_10026BC40((unint64_t *)&qword_1006A26A0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10002F214((uint64_t *)&unk_1006A4830);
  sub_10001DFB0((unint64_t *)&qword_1006A26B0, (uint64_t *)&unk_1006A4830);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);
  swift_release();

  (*(void (**)(char *, uint64_t))(v19 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v18);
  return swift_release();
}

uint64_t sub_100268980(void *a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  id v2 = a1;
  static Published.subscript.setter();
  sub_1002641E8(v4);
  swift_release();
  return swift_release();
}

uint64_t sub_100268C28()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v13[0] - 8);
  __chkstk_darwin(v13[0]);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100031418(0, (unint64_t *)&qword_10069D2D0);
  uint64_t v8 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v0;
  aBlock[4] = sub_10026BC88;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100262E2C;
  aBlock[3] = &unk_1006320B0;
  unint64_t v10 = _Block_copy(aBlock);
  id v11 = v0;
  static DispatchQoS.unspecified.getter();
  v13[1] = _swiftEmptyArrayStorage;
  sub_10026BC40((unint64_t *)&qword_1006A26A0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10002F214((uint64_t *)&unk_1006A4830);
  sub_10001DFB0((unint64_t *)&qword_1006A26B0, (uint64_t *)&unk_1006A4830);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, void))(v5 + 8))(v7, v13[0]);
  return swift_release();
}

uint64_t sub_100268F1C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(char *))
{
  uint64_t v6 = type metadata accessor for Notification();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)();
  id v10 = a1;
  a4(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_100269024(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v6 = type metadata accessor for Notification();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)();
  id v10 = a1;
  a4();

  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void RealtimeCollaborationSelectionController.init()()
{
}

uint64_t sub_10026928C()
{
  return sub_1002640C4();
}

void *sub_1002692B8(uint64_t a1, uint64_t a2)
{
  uint64_t v31 = a2;
  uint64_t v4 = sub_10002F214(&qword_1006A0E00);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CollaboratorStatus();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v32 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v30 = (char *)v26 - v11;
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12) {
    return _swiftEmptyArrayStorage;
  }
  void v26[2] = v2;
  uint64_t v13 = *(void *)(type metadata accessor for RealtimeCollaborationSelectionDocument.ParticipantSelection() - 8);
  uint64_t v14 = a1 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  uint64_t v15 = (unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  uint64_t v28 = v8;
  id v16 = (void (**)(char *, char *, uint64_t))(v8 + 32);
  uint64_t v17 = *(void *)(v13 + 72);
  v26[1] = a1;
  swift_bridgeObjectRetain();
  uint64_t v18 = _swiftEmptyArrayStorage;
  uint64_t v29 = v7;
  uint64_t v27 = v17;
  do
  {
    sub_100267154(v14, (uint64_t)v6);
    if ((*v15)(v6, 1, v7) == 1)
    {
      sub_10002B754((uint64_t)v6, &qword_1006A0E00);
    }
    else
    {
      uint64_t v19 = v15;
      char v20 = *v16;
      long long v21 = v30;
      (*v16)(v30, v6, v7);
      v20(v32, v21, v7);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v18 = (void *)sub_1001A893C(0, v18[2] + 1, 1, (unint64_t)v18);
      }
      unint64_t v23 = v18[2];
      unint64_t v22 = v18[3];
      if (v23 >= v22 >> 1) {
        uint64_t v18 = (void *)sub_1001A893C(v22 > 1, v23 + 1, 1, (unint64_t)v18);
      }
      void v18[2] = v23 + 1;
      unint64_t v24 = (unint64_t)v18
          + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))
          + *(void *)(v28 + 72) * v23;
      uint64_t v7 = v29;
      v20((char *)v24, v32, v29);
      uint64_t v15 = v19;
      uint64_t v17 = v27;
    }
    v14 += v17;
    --v12;
  }
  while (v12);
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_1002695C8(unint64_t a1)
{
  return sub_10002C76C(a1, (unint64_t *)&qword_10069E810, (uint64_t)NSManagedObjectID_ptr, (unint64_t *)&qword_10069FFE0, (void (*)(id *, uint64_t))sub_100393BB0);
}

uint64_t sub_1002695F8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = a1 + 32;
    do
    {
      sub_100033188(v4, (uint64_t)v5);
      sub_100393BCC((uint64_t)v6, (uint64_t)v5);
      sub_100033134((uint64_t)v6);
      v4 += 40;
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_100269684(unint64_t a1)
{
  return sub_100269CC4(a1, (void (*)(void))type metadata accessor for NoteSearchResult, &qword_1006A02A8, (void (*)(uint64_t))type metadata accessor for NoteSearchResult, (void (*)(id *, uint64_t))sub_100393D48);
}

uint64_t sub_1002696CC(unint64_t a1)
{
  return sub_10002C76C(a1, (unint64_t *)&qword_1006A49F0, (uint64_t)ICHashtag_ptr, &qword_1006A0480, (void (*)(id *, uint64_t))sub_100393D7C);
}

uint64_t sub_1002696FC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v28 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v27 = (char *)v21 - v6;
  uint64_t v7 = sub_10002F214((uint64_t *)&unk_10069C990);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 16);
  sub_10026BC40((unint64_t *)&qword_1006A4DD0, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v29 = Set.init(minimumCapacity:)();
  if (v10)
  {
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v14 = *(void *)(v11 + 56);
    unint64_t v15 = v11 + 40;
    unint64_t v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 32);
    uint64_t v25 = v12;
    unint64_t v22 = (void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v23 = v14;
    uint64_t v26 = v11;
    id v16 = (void (**)(uint64_t, uint64_t))(v11 - 8);
    v21[1] = v15 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v18 = (uint64_t)v27;
    uint64_t v17 = v28;
    while (1)
    {
      v25(v9, v13, v2);
      uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v15;
      (*(void (**)(char *, void, uint64_t, uint64_t))v15)(v9, 0, 1, v2);
      if ((*v24)(v9, 1, v2) == 1) {
        break;
      }
      (*v22)(v17, v9, v2);
      sub_100393D98(v18, v17);
      (*v16)(v18, v2);
      v13 += v23;
      if (!--v10) {
        goto LABEL_7;
      }
    }
  }
  else
  {
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
LABEL_7:
    v19(v9, 1, 1, v2);
  }
  return v29;
}

uint64_t sub_1002699A4(unint64_t a1)
{
  return sub_10002C76C(a1, (unint64_t *)&qword_1006A5380, (uint64_t)ICCloudSyncingObject_ptr, &qword_10069C8C0, (void (*)(id *, uint64_t))sub_1003940BC);
}

uint64_t sub_1002699D4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for IndexPath();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v28 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v27 = (char *)v21 - v6;
  uint64_t v7 = sub_10002F214((uint64_t *)&unk_1006A2670);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 16);
  sub_10026BC40(&qword_1006A4C80, (void (*)(uint64_t))&type metadata accessor for IndexPath);
  uint64_t v29 = Set.init(minimumCapacity:)();
  if (v10)
  {
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v14 = *(void *)(v11 + 56);
    unint64_t v15 = v11 + 40;
    unint64_t v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 32);
    uint64_t v25 = v12;
    unint64_t v22 = (void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v23 = v14;
    uint64_t v26 = v11;
    id v16 = (void (**)(uint64_t, uint64_t))(v11 - 8);
    v21[1] = v15 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v18 = (uint64_t)v27;
    uint64_t v17 = v28;
    while (1)
    {
      v25(v9, v13, v2);
      uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v15;
      (*(void (**)(char *, void, uint64_t, uint64_t))v15)(v9, 0, 1, v2);
      if ((*v24)(v9, 1, v2) == 1) {
        break;
      }
      (*v22)(v17, v9, v2);
      sub_1003940D8(v18, v17);
      (*v16)(v18, v2);
      v13 += v23;
      if (!--v10) {
        goto LABEL_7;
      }
    }
  }
  else
  {
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
LABEL_7:
    v19(v9, 1, 1, v2);
  }
  return v29;
}

uint64_t sub_100269C7C(unint64_t a1)
{
  return sub_100269CC4(a1, (void (*)(void))type metadata accessor for AttachmentSearchResult, &qword_1006A00C8, (void (*)(uint64_t))type metadata accessor for AttachmentSearchResult, (void (*)(id *, uint64_t))sub_1003943FC);
}

uint64_t sub_100269CC4(unint64_t a1, void (*a2)(void), unint64_t *a3, void (*a4)(uint64_t), void (*a5)(id *, uint64_t))
{
  unint64_t v10 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  a2(0);
  sub_10026BC40(a3, a4);
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v18 = result;
  if (v10)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v12) {
      return v18;
    }
  }
  else
  {
    uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v12) {
      return v18;
    }
  }
  if (v12 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v12; ++i)
      {
        uint64_t v14 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        a5(&v17, v14);
      }
    }
    else
    {
      unint64_t v15 = (void **)(a1 + 32);
      do
      {
        id v16 = *v15++;
        a5(&v17, (uint64_t)v16);

        --v12;
      }
      while (v12);
    }
    return v18;
  }
  __break(1u);
  return result;
}

uint64_t sub_100269E50(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v28 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v27 = (char *)v21 - v6;
  uint64_t v7 = sub_10002F214(&qword_10069B310);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 16);
  sub_10026BC40((unint64_t *)&unk_10069BA10, (void (*)(uint64_t))&type metadata accessor for URL);
  uint64_t v29 = Set.init(minimumCapacity:)();
  if (v10)
  {
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v14 = *(void *)(v11 + 56);
    unint64_t v15 = v11 + 40;
    unint64_t v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 32);
    uint64_t v25 = v12;
    unint64_t v22 = (void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v23 = v14;
    uint64_t v26 = v11;
    id v16 = (void (**)(uint64_t, uint64_t))(v11 - 8);
    v21[1] = v15 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v18 = (uint64_t)v27;
    id v17 = v28;
    while (1)
    {
      v25(v9, v13, v2);
      uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v15;
      (*(void (**)(char *, void, uint64_t, uint64_t))v15)(v9, 0, 1, v2);
      if ((*v24)(v9, 1, v2) == 1) {
        break;
      }
      (*v22)(v17, v9, v2);
      sub_100394430(v18, v17);
      (*v16)(v18, v2);
      v13 += v23;
      if (!--v10) {
        goto LABEL_7;
      }
    }
  }
  else
  {
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
LABEL_7:
    v19(v9, 1, 1, v2);
  }
  return v29;
}

uint64_t sub_10026A0F8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (Swift::Int *)(a1 + 40);
    do
    {
      Swift::Int v5 = *(v4 - 1);
      Swift::Int v6 = *v4;
      swift_bridgeObjectRetain();
      sub_100394754(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_10026A190(uint64_t a1)
{
  uint64_t v2 = _s3TagVMa();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  Swift::Int v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v13 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_10026BC40(&qword_1006A0DB0, (void (*)(uint64_t))_s3TagVMa);
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v14 = result;
  if (v9)
  {
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v12 = *(void *)(v3 + 72);
    do
    {
      sub_1002252C0(v11, (uint64_t)v6);
      sub_100394A1C((uint64_t)v8, (uint64_t)v6);
      sub_100225324((uint64_t)v8);
      v11 += v12;
      --v9;
    }
    while (v9);
    return v14;
  }
  return result;
}

uint64_t sub_10026A2F8(unint64_t a1)
{
  return sub_10002C76C(a1, (unint64_t *)&qword_1006A2780, (uint64_t)NSManagedObject_ptr, (unint64_t *)&qword_1006A0DF0, (void (*)(id *, uint64_t))sub_1003951AC);
}

uint64_t sub_10026A328(unint64_t a1)
{
  return sub_100269CC4(a1, (void (*)(void))type metadata accessor for TableSearchResult, &qword_1006A00A8, (void (*)(uint64_t))type metadata accessor for TableSearchResult, (void (*)(id *, uint64_t))sub_1003951C8);
}

uint64_t sub_10026A370(unint64_t a1)
{
  return sub_10002C76C(a1, &qword_1006A4840, (uint64_t)CKShareParticipant_ptr, (unint64_t *)&qword_1006A0DE8, (void (*)(id *, uint64_t))sub_1003951FC);
}

uint64_t sub_10026A3A0(unint64_t *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CollaboratorStatus();
  unint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v65 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  unint64_t v64 = (char *)&v60 - v9;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v60 - v10;
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  unint64_t v81 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v60 - v17;
  __chkstk_darwin(v16);
  uint64_t v76 = a1;
  id v77 = (char *)&v60 - v19;
  char v20 = (char *)*a1;
  uint64_t v73 = *(char **)(*a1 + 16);
  if (!v73) {
    return 0;
  }
  unint64_t v70 = v11;
  uint64_t v71 = v4;
  unint64_t v75 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  long long v21 = &v20[v75];
  unint64_t v63 = v5;
  uint64_t v22 = *(void *)(v5 + 72);
  uint64_t v79 = v13 + 16;
  uint64_t v80 = a2 + 56;
  uint64_t v23 = (void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v69 = v20;
  swift_bridgeObjectRetain();
  unint64_t v24 = 0;
  uint64_t v82 = a2;
  uint64_t v66 = v13;
  uint64_t v25 = v77;
  uint64_t v74 = v22;
  unint64_t v72 = v21;
  while (1)
  {
    unint64_t v67 = v24;
    CollaboratorStatus.participantID.getter();
    uint64_t v26 = *(void *)(a2 + 16);
    uint64_t v78 = (unint64_t)v23 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    if (!v26) {
      break;
    }
    sub_10026BC40((unint64_t *)&qword_1006A4DD0, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v27 = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v28 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v29 = v27 & ~v28;
    if (((*(void *)(v80 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0) {
      break;
    }
    uint64_t v30 = ~v28;
    uint64_t v31 = *(void *)(v13 + 72);
    uint64_t v32 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
    while (1)
    {
      v32(v18, *(void *)(v82 + 48) + v31 * v29, v12);
      sub_10026BC40(&qword_10069DE60, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v33 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v34 = *v23;
      (*v23)(v18, v12);
      if (v33) {
        break;
      }
      unint64_t v29 = (v29 + 1) & v30;
      if (((*(void *)(v80 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
      {
        a2 = v82;
        v34(v77, v12);
        goto LABEL_11;
      }
    }
    uint64_t v25 = v77;
    v34(v77, v12);
    uint64_t v13 = v66;
    unint64_t v24 = v67 + 1;
    a2 = v82;
    if (v67 + 1 == v73)
    {
      uint64_t v35 = v69;
      swift_bridgeObjectRelease();
      return v35[2];
    }
  }
  uint64_t v34 = *v23;
  (*v23)(v25, v12);
LABEL_11:
  uint64_t v36 = v69;
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v38 = v67 + 1;
  unint64_t v39 = v75;
  if (__OFADD__(v67, 1)) {
    goto LABEL_47;
  }
  unint64_t v40 = (char *)v36[2];
  if (v38 == v40) {
    return (uint64_t)v67;
  }
  uint64_t v41 = (char *)(v63 + 16);
  uint64_t v68 = (uint64_t (**)(char *, uint64_t))(v63 + 8);
  uint64_t v61 = (uint64_t (**)(unint64_t, char *, uint64_t))(v63 + 40);
  uint64_t v43 = v70;
  uint64_t v42 = v71;
  unint64_t v72 = (char *)(v63 + 16);
  while (v38 < v40)
  {
    id v77 = v38;
    uint64_t v73 = (char *)((void)v38 * v74);
    uint64_t v69 = *(void **)v41;
    ((void (*)(char *, char *, uint64_t))v69)(v43, (char *)v36 + v39 + (void)v38 * v74, v42);
    CollaboratorStatus.participantID.getter();
    if (*(void *)(a2 + 16)
      && (sub_10026BC40((unint64_t *)&qword_1006A4DD0, (void (*)(uint64_t))&type metadata accessor for UUID), a2 = v82, uint64_t v44 = dispatch thunk of Hashable._rawHashValue(seed:)(), v45 = -1 << *(unsigned char *)(a2 + 32), v46 = v44 & ~v45, ((*(void *)(v80 + ((v46 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v46) & 1) != 0))
    {
      uint64_t v47 = ~v45;
      uint64_t v48 = *(void *)(v66 + 72);
      BOOL v49 = *(void (**)(char *, unint64_t, uint64_t))(v66 + 16);
      while (1)
      {
        v49(v18, *(void *)(a2 + 48) + v48 * v46, v12);
        sub_10026BC40(&qword_10069DE60, (void (*)(uint64_t))&type metadata accessor for UUID);
        char v50 = dispatch thunk of static Equatable.== infix(_:_:)();
        v34(v18, v12);
        if (v50) {
          break;
        }
        unint64_t v46 = (v46 + 1) & v47;
        a2 = v82;
        if (((*(void *)(v80 + ((v46 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v46) & 1) == 0) {
          goto LABEL_20;
        }
      }
      v34(v81, v12);
      uint64_t v43 = v70;
      uint64_t v42 = v71;
      uint64_t result = (*v68)(v70, v71);
      id v53 = v67;
      uint64_t v51 = v77;
      unint64_t v39 = v75;
      if (v67 != v77)
      {
        if (((unint64_t)v67 & 0x8000000000000000) != 0) {
          goto LABEL_42;
        }
        unint64_t v54 = *v76;
        if ((unint64_t)v67 >= *(void *)(*v76 + 16)) {
          goto LABEL_43;
        }
        unint64_t v55 = v54 + v75;
        unint64_t v63 = *(void *)(*v76 + 16);
        uint64_t v62 = (void)v67 * v74;
        unint64_t v56 = (void (*)(char *, char *, uint64_t))v69;
        uint64_t result = ((uint64_t (*)(char *, unint64_t, uint64_t))v69)(v64, v54 + v75 + (void)v67 * v74, v42);
        if ((unint64_t)v77 >= v63) {
          goto LABEL_44;
        }
        v56(v65, &v73[v55], v42);
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v76 = v54;
        unint64_t v57 = v54;
        if ((result & 1) == 0)
        {
          uint64_t result = sub_1002E0830(v54);
          unint64_t v57 = result;
          *uint64_t v76 = result;
        }
        if ((unint64_t)v67 >= *(void *)(v57 + 16)) {
          goto LABEL_45;
        }
        unint64_t v58 = v75;
        char v59 = *v61;
        uint64_t result = (*v61)(v57 + v75 + v62, v65, v42);
        uint64_t v51 = v77;
        if ((unint64_t)v77 >= *(void *)(*v76 + 16)) {
          goto LABEL_46;
        }
        uint64_t result = v59((unint64_t)&v73[*v76 + v58], v64, v42);
        unint64_t v39 = v58;
        id v53 = v67;
      }
      unint64_t v67 = v53 + 1;
      a2 = v82;
      if (__OFADD__(v53, 1)) {
        goto LABEL_41;
      }
    }
    else
    {
LABEL_20:
      v34(v81, v12);
      uint64_t v43 = v70;
      uint64_t v42 = v71;
      uint64_t result = (*v68)(v70, v71);
      unint64_t v39 = v75;
      uint64_t v51 = v77;
    }
    BOOL v52 = __OFADD__(v51, 1);
    uint64_t v38 = v51 + 1;
    if (v52) {
      goto LABEL_40;
    }
    uint64_t v36 = (void *)*v76;
    unint64_t v40 = *(char **)(*v76 + 16);
    uint64_t v41 = v72;
    if (v38 == v40) {
      return (uint64_t)v67;
    }
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
  return result;
}

uint64_t sub_10026AB78(unint64_t *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CollaboratorStatus();
  unint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  unint64_t v64 = (char *)v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v65 = (char *)v59 - v9;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v59 - v10;
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v79 = (char *)v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)v59 - v16;
  __chkstk_darwin(v15);
  char v20 = (char *)v59 - v19;
  uint64_t v73 = a1;
  long long v21 = (char *)*a1;
  unint64_t v70 = *(void *)(*a1 + 16);
  if (!v70) {
    return 0;
  }
  uint64_t v61 = v11;
  unint64_t v62 = v5;
  unint64_t v68 = v18;
  uint64_t v69 = v4;
  unint64_t v72 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v74 = &v21[v72];
  uint64_t v71 = *(void *)(v5 + 72);
  uint64_t v80 = a2 + 56;
  unint64_t v76 = v18 + 16;
  unint64_t v81 = (void (**)(char *, uint64_t))(v18 + 8);
  unint64_t v67 = v21;
  swift_bridgeObjectRetain();
  unint64_t v22 = 0;
  while (1)
  {
    unint64_t v75 = v22;
    CollaboratorStatus.participantID.getter();
    if (*(void *)(a2 + 16))
    {
      uint64_t v63 = sub_10026BC40((unint64_t *)&qword_1006A4DD0, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v23 = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v24 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v25 = v23 & ~v24;
      if ((*(void *)(v80 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25)) {
        break;
      }
    }
LABEL_3:
    (*v81)(v20, v12);
    unint64_t v22 = v75 + 1;
    if (v75 + 1 == v70)
    {
      unint64_t v58 = v67;
      swift_bridgeObjectRelease();
      return v58[2];
    }
  }
  uint64_t v26 = ~v24;
  uint64_t v27 = *(void *)(v68 + 72);
  id v77 = *(void (**)(char *, unint64_t, uint64_t))(v68 + 16);
  uint64_t v78 = v27;
  while (1)
  {
    uint64_t v28 = a2;
    v77(v17, *(void *)(a2 + 48) + v78 * v25, v12);
    uint64_t v29 = sub_10026BC40(&qword_10069DE60, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v30 = v20;
    char v31 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v32 = *v81;
    (*v81)(v17, v12);
    if (v31) {
      break;
    }
    unint64_t v25 = (v25 + 1) & v26;
    char v20 = v30;
    a2 = v28;
    if (((*(void *)(v80 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0) {
      goto LABEL_3;
    }
  }
  v32(v30, v12);
  char v33 = v67;
  swift_bridgeObjectRelease();
  uint64_t result = v75;
  unint64_t v35 = v75 + 1;
  if (!__OFADD__(v75, 1))
  {
    unint64_t v36 = v33[2];
    if (v35 == v36) {
      return result;
    }
    uint64_t v37 = v61;
    uint64_t v38 = (void **)(v62 + 16);
    uint64_t v66 = (void (**)(char *, uint64_t))(v62 + 8);
    uint64_t v60 = (uint64_t (**)(unint64_t, char *, uint64_t))(v62 + 40);
    uint64_t v39 = v69;
    unint64_t v40 = v72;
    unint64_t v68 = v62 + 16;
    v59[1] = v29;
    while (v35 < v36)
    {
      uint64_t v74 = (char *)v35;
      unint64_t v75 = result;
      unint64_t v70 = v35 * v71;
      unint64_t v67 = *v38;
      ((void (*)(char *, char *, uint64_t))v67)(v37, (char *)v33 + v40 + v35 * v71, v39);
      CollaboratorStatus.participantID.getter();
      uint64_t v41 = v28;
      if (*(void *)(v28 + 16)
        && (uint64_t v42 = dispatch thunk of Hashable._rawHashValue(seed:)(),
            uint64_t v43 = -1 << *(unsigned char *)(v28 + 32),
            unint64_t v44 = v42 & ~v43,
            ((*(void *)(v80 + ((v44 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v44) & 1) != 0))
      {
        uint64_t v45 = ~v43;
        while (1)
        {
          v77(v17, *(void *)(v41 + 48) + v44 * v78, v12);
          char v46 = dispatch thunk of static Equatable.== infix(_:_:)();
          v32(v17, v12);
          if (v46) {
            break;
          }
          unint64_t v44 = (v44 + 1) & v45;
          if (((*(void *)(v80 + ((v44 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v44) & 1) == 0) {
            goto LABEL_19;
          }
        }
        v32(v79, v12);
        uint64_t v39 = v69;
        (*v66)(v37, v69);
        uint64_t v28 = v41;
        uint64_t result = v75;
        uint64_t v38 = (void **)v68;
        unint64_t v35 = (unint64_t)(v74 + 1);
        if (__OFADD__(v74, 1)) {
          goto LABEL_39;
        }
      }
      else
      {
LABEL_19:
        v32(v79, v12);
        uint64_t v39 = v69;
        (*v66)(v37, v69);
        uint64_t v47 = v74;
        uint64_t result = v75;
        uint64_t v28 = v41;
        if ((char *)v75 != v74)
        {
          if ((v75 & 0x8000000000000000) != 0) {
            goto LABEL_41;
          }
          unint64_t v48 = *v73;
          unint64_t v49 = *(void *)(*v73 + 16);
          if (v75 >= v49) {
            goto LABEL_42;
          }
          uint64_t v50 = v39;
          unint64_t v51 = v48 + v72;
          unint64_t v62 = v75 * v71;
          BOOL v52 = (void (*)(char *, unint64_t, uint64_t))v67;
          uint64_t result = ((uint64_t (*)(char *, unint64_t, uint64_t))v67)(v65, v48 + v72 + v75 * v71, v50);
          if ((unint64_t)v74 >= v49) {
            goto LABEL_43;
          }
          unint64_t v53 = v51 + v70;
          uint64_t v39 = v69;
          v52(v64, v53, v69);
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v73 = v48;
          if ((result & 1) == 0)
          {
            uint64_t result = sub_1002E0830(v48);
            unint64_t v48 = result;
            *uint64_t v73 = result;
          }
          uint64_t v28 = v41;
          unint64_t v54 = v72;
          if (v75 >= *(void *)(v48 + 16)) {
            goto LABEL_44;
          }
          unint64_t v55 = v48 + v72 + v62;
          unint64_t v56 = *v60;
          uint64_t result = (*v60)(v55, v64, v39);
          if ((unint64_t)v74 >= *(void *)(*v73 + 16)) {
            goto LABEL_45;
          }
          v56(*v73 + v54 + v70, v65, v39);
          uint64_t v47 = v74;
          uint64_t result = v75;
          uint64_t v37 = v61;
        }
        BOOL v57 = __OFADD__(result++, 1);
        uint64_t v38 = (void **)v68;
        if (v57) {
          goto LABEL_40;
        }
        BOOL v57 = __OFADD__(v47, 1);
        unint64_t v35 = (unint64_t)(v47 + 1);
        if (v57) {
          goto LABEL_39;
        }
      }
      unint64_t v40 = v72;
      char v33 = (void *)*v73;
      unint64_t v36 = *(void *)(*v73 + 16);
      if (v35 == v36) {
        return result;
      }
    }
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10026B300(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v53 = a2;
  id v64 = a4;
  unint64_t v54 = a1;
  uint64_t v5 = type metadata accessor for Participant();
  uint64_t v6 = __chkstk_darwin(v5);
  unint64_t v62 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v52 - v10;
  int64_t v12 = 0;
  uint64_t v59 = v9;
  uint64_t v60 = a3;
  uint64_t v13 = *(void *)(a3 + 56);
  uint64_t v55 = 0;
  uint64_t v56 = a3 + 56;
  uint64_t v14 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  int64_t v57 = (unint64_t)(v14 + 63) >> 6;
  unint64_t v58 = (void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v63 = v9 + 16;
  while (1)
  {
    if (v16)
    {
      unint64_t v19 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      int64_t v65 = v12;
      unint64_t v20 = v19 | (v12 << 6);
      goto LABEL_21;
    }
    int64_t v21 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_42;
    }
    if (v21 >= v57) {
      goto LABEL_40;
    }
    unint64_t v22 = *(void *)(v56 + 8 * v21);
    int64_t v23 = v12 + 1;
    if (!v22)
    {
      int64_t v23 = v12 + 2;
      if (v12 + 2 >= v57) {
        goto LABEL_40;
      }
      unint64_t v22 = *(void *)(v56 + 8 * v23);
      if (!v22)
      {
        int64_t v23 = v12 + 3;
        if (v12 + 3 >= v57) {
          goto LABEL_40;
        }
        unint64_t v22 = *(void *)(v56 + 8 * v23);
        if (!v22) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v16 = (v22 - 1) & v22;
    int64_t v65 = v23;
    unint64_t v20 = __clz(__rbit64(v22)) + (v23 << 6);
LABEL_21:
    uint64_t v25 = *(void *)(v60 + 48);
    uint64_t v26 = *(void *)(v59 + 72);
    unint64_t v61 = v20;
    uint64_t v27 = *(void (**)(char *, unint64_t, uint64_t))(v59 + 16);
    v27(v11, v25 + v26 * v20, v5);
    uint64_t v28 = Participant.handle.getter();
    uint64_t v30 = v29;
    id v31 = [v64 emailAddress];
    if (v31)
    {
      uint64_t v32 = v31;
      uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v35 = v34;

      if (v28 == v33 && v30 == v35)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v38 = v62;
        v27(v62, (unint64_t)v11, v5);
LABEL_35:
        unint64_t v48 = *v58;
        (*v58)(v38, v5);
LABEL_36:
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v48)(v11, v5);
        int64_t v12 = v65;
        goto LABEL_37;
      }
      char v37 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v38 = v62;
      v27(v62, (unint64_t)v11, v5);
      if (v37) {
        goto LABEL_35;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v38 = v62;
      v27(v62, (unint64_t)v11, v5);
    }
    uint64_t v39 = v38;
    uint64_t v40 = Participant.handle.getter();
    uint64_t v42 = v41;
    id v43 = [v64 phoneNumber];
    if (v43)
    {
      unint64_t v44 = v43;
      uint64_t v45 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v47 = v46;

      if (v40 == v45 && v42 == v47)
      {
        swift_bridgeObjectRelease();
        unint64_t v48 = *v58;
        (*v58)(v62, v5);
        swift_bridgeObjectRelease();
        goto LABEL_36;
      }
      char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      unint64_t v18 = *v58;
      (*v58)(v62, v5);
      swift_bridgeObjectRelease();
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v18)(v11, v5);
      int64_t v12 = v65;
      if (v17)
      {
LABEL_37:
        *(unint64_t *)((char *)v54 + ((v61 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v61;
        if (__OFADD__(v55++, 1))
        {
          __break(1u);
LABEL_40:
          uint64_t v51 = v60;
          swift_retain();
          return sub_10039D350(v54, v53, v55, v51);
        }
      }
    }
    else
    {
      unint64_t v49 = *v58;
      (*v58)(v39, v5);
      swift_bridgeObjectRelease();
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v49)(v11, v5);
      int64_t v12 = v65;
    }
  }
  uint64_t v24 = v12 + 4;
  if (v12 + 4 >= v57) {
    goto LABEL_40;
  }
  unint64_t v22 = *(void *)(v56 + 8 * v24);
  if (v22)
  {
    int64_t v23 = v12 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v23 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v23 >= v57) {
      goto LABEL_40;
    }
    unint64_t v22 = *(void *)(v56 + 8 * v23);
    ++v24;
    if (v22) {
      goto LABEL_20;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_10026B7F0(uint64_t a1, void *a2)
{
  char v4 = *(unsigned char *)(a1 + 32);
  unsigned int v5 = v4 & 0x3F;
  unint64_t v6 = (unint64_t)((1 << v4) + 63) >> 6;
  uint64_t isStackAllocationSafe = a2;
  uint64_t v8 = (void *)isStackAllocationSafe;
  if (v5 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    uint64_t v9 = (char *)&v15 - ((8 * v6 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v9, 8 * v6);
    id v10 = v8;
    uint64_t v11 = sub_10026B300((unint64_t *)v9, v6, a1, v10);
    swift_release();

    if (v2) {
      swift_willThrow();
    }
  }
  else
  {
    int64_t v12 = (void *)swift_slowAlloc();
    bzero(v12, 8 * v6);
    id v13 = v8;
    uint64_t v11 = sub_10026B300((unint64_t *)v12, v6, a1, v13);
    swift_release();

    swift_slowDealloc();
  }
  return v11;
}

uint64_t sub_10026B9A4()
{
  uint64_t v1 = type metadata accessor for RealtimeCollaborationSelectionDocument.ParticipantSelection();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10026BA70()
{
  type metadata accessor for RealtimeCollaborationSelectionDocument.ParticipantSelection();

  return sub_100268458();
}

uint64_t sub_10026BAD4()
{
  return type metadata accessor for RealtimeCollaborationSelectionController();
}

uint64_t type metadata accessor for RealtimeCollaborationSelectionController()
{
  uint64_t result = qword_1006A0D98;
  if (!qword_1006A0D98) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10026BB28()
{
  sub_10026BBE4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10026BBE4()
{
  if (!qword_1006A0DA8)
  {
    sub_10001DFF4(&qword_1006A0D48);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1006A0DA8);
    }
  }
}

uint64_t sub_10026BC40(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_10026BC88()
{
}

uint64_t sub_10026BCAC()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10026BCE4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  _s11MobileNotes40RealtimeCollaborationSelectionControllerC08realtimedf9DidChangeE5StateyyAA0cdF0CF_0();
  *(unsigned char *)(v1 + OBJC_IVAR___ICRealtimeCollaborationSelectionController_didScheduleCollaboratorStatusesUpdate) = 0;
}

uint64_t sub_10026BD14()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10026BD54()
{
  return sub_100268980(*(void **)(v0 + 16));
}

uint64_t sub_10026BD5C(uint64_t a1)
{
  return sub_100266EA0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24)) & 1;
}

uint64_t sub_10026BD7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002F214(&qword_1006A0D68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10026BDE4()
{
  return sub_100267930() & 1;
}

uint64_t sub_10026BE04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002F214((uint64_t *)&unk_10069C990);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10026BE6C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10026BEA4(uint64_t *a1)
{
  return sub_100264D2C(a1);
}

void sub_10026BEC8(uint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4)
{
  uint64_t v4 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    sub_100031418(0, a2);
    sub_10002C8EC(a4, a2);
    Set.Iterator.init(_cocoa:)();
    uint64_t v4 = v27;
    uint64_t v25 = v28;
    uint64_t v7 = v29;
    uint64_t v8 = v30;
    unint64_t v9 = v31;
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v10 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v25 = a1 + 56;
    uint64_t v7 = ~v10;
    uint64_t v11 = -v10;
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v9 = v12 & *(void *)(a1 + 56);
  }
  uint64_t v23 = v7;
  int64_t v13 = (unint64_t)(v7 + 64) >> 6;
  while (v4 < 0)
  {
    if (!__CocoaSet.Iterator.next()()) {
      goto LABEL_35;
    }
    sub_100031418(0, a2);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v18 = v26;
    swift_unknownObjectRelease();
    uint64_t v17 = v8;
    uint64_t v15 = v9;
    if (!v26) {
      goto LABEL_35;
    }
LABEL_33:
    id v22 = [v18 parentAttachment:v23];
    if (v22)
    {
      uint64_t v14 = v22;
    }
    else
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    uint64_t v8 = v17;
    unint64_t v9 = v15;
  }
  if (v9)
  {
    uint64_t v15 = (v9 - 1) & v9;
    unint64_t v16 = __clz(__rbit64(v9)) | (v8 << 6);
    uint64_t v17 = v8;
LABEL_32:
    id v18 = *(id *)(*(void *)(v4 + 48) + 8 * v16);
    if (!v18) {
      goto LABEL_35;
    }
    goto LABEL_33;
  }
  int64_t v19 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v19 >= v13) {
      goto LABEL_35;
    }
    unint64_t v20 = *(void *)(v25 + 8 * v19);
    uint64_t v17 = v8 + 1;
    if (!v20)
    {
      uint64_t v17 = v8 + 2;
      if (v8 + 2 >= v13) {
        goto LABEL_35;
      }
      unint64_t v20 = *(void *)(v25 + 8 * v17);
      if (!v20)
      {
        uint64_t v17 = v8 + 3;
        if (v8 + 3 >= v13) {
          goto LABEL_35;
        }
        unint64_t v20 = *(void *)(v25 + 8 * v17);
        if (!v20)
        {
          uint64_t v17 = v8 + 4;
          if (v8 + 4 >= v13) {
            goto LABEL_35;
          }
          unint64_t v20 = *(void *)(v25 + 8 * v17);
          if (!v20)
          {
            uint64_t v17 = v8 + 5;
            if (v8 + 5 >= v13) {
              goto LABEL_35;
            }
            unint64_t v20 = *(void *)(v25 + 8 * v17);
            if (!v20)
            {
              uint64_t v21 = v8 + 6;
              while (v13 != v21)
              {
                unint64_t v20 = *(void *)(v25 + 8 * v21++);
                if (v20)
                {
                  uint64_t v17 = v21 - 1;
                  goto LABEL_31;
                }
              }
LABEL_35:
              sub_10017B518();
              return;
            }
          }
        }
      }
    }
LABEL_31:
    uint64_t v15 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v17 << 6);
    goto LABEL_32;
  }
  __break(1u);
}

uint64_t sub_10026C1C4(uint64_t a1)
{
  unint64_t v19 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v2 = a1 + 56;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 56);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  if (v5) {
    goto LABEL_26;
  }
LABEL_6:
  int64_t v9 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v9 < v6)
    {
      unint64_t v10 = *(void *)(v2 + 8 * v9);
      ++v8;
      if (v10) {
        goto LABEL_21;
      }
      int64_t v8 = v9 + 1;
      if (v9 + 1 >= v6) {
        goto LABEL_27;
      }
      unint64_t v10 = *(void *)(v2 + 8 * v8);
      if (v10) {
        goto LABEL_21;
      }
      int64_t v8 = v9 + 2;
      if (v9 + 2 >= v6) {
        goto LABEL_27;
      }
      unint64_t v10 = *(void *)(v2 + 8 * v8);
      if (v10) {
        goto LABEL_21;
      }
      int64_t v8 = v9 + 3;
      if (v9 + 3 >= v6) {
        goto LABEL_27;
      }
      unint64_t v10 = *(void *)(v2 + 8 * v8);
      if (v10)
      {
LABEL_21:
        unint64_t v5 = (v10 - 1) & v10;
        for (unint64_t i = __clz(__rbit64(v10)) + (v8 << 6); ; unint64_t i = v14 | (v8 << 6))
        {
          sub_100033188(*(void *)(a1 + 48) + 40 * i, (uint64_t)v17);
          v15[0] = v17[0];
          v15[1] = v17[1];
          uint64_t v16 = v18;
          v13.Class isa = AnyHashable._bridgeToObjectiveC()().isa;
          self;
          if (swift_dynamicCastObjCClass())
          {
            sub_100033134((uint64_t)v15);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            uint64_t result = specialized Array._endMutation()();
            if (!v5) {
              goto LABEL_6;
            }
          }
          else
          {

            uint64_t result = sub_100033134((uint64_t)v15);
            if (!v5) {
              goto LABEL_6;
            }
          }
LABEL_26:
          unint64_t v14 = __clz(__rbit64(v5));
          v5 &= v5 - 1;
        }
      }
      int64_t v11 = v9 + 4;
      if (v11 < v6)
      {
        unint64_t v10 = *(void *)(v2 + 8 * v11);
        if (v10)
        {
          int64_t v8 = v11;
          goto LABEL_21;
        }
        while (1)
        {
          int64_t v8 = v11 + 1;
          if (__OFADD__(v11, 1)) {
            goto LABEL_29;
          }
          if (v8 >= v6) {
            break;
          }
          unint64_t v10 = *(void *)(v2 + 8 * v8);
          ++v11;
          if (v10) {
            goto LABEL_21;
          }
        }
      }
    }
LABEL_27:
    swift_release();
    return v19;
  }
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_10026C3E4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();

  return swift_release();
}

char *sub_10026C45C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = _s6ObjectVMa(0);
  uint64_t v6 = __chkstk_darwin(v5);
  int64_t v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unint64_t v10 = (void *)((char *)aBlock - v9);
  *(void *)&v2[OBJC_IVAR____TtCV11MobileNotes19SyncingDebugSection10Controller_managedObjectContextObjectsDidChangeObservation] = 0;
  int64_t v11 = v2;
  id v12 = a1;
  sub_10026C714(v12, v10);
  swift_beginAccess();
  sub_100270A18((uint64_t)v10, (uint64_t)v8);
  Published.init(initialValue:)();
  sub_100270A7C((uint64_t)v10);
  swift_endAccess();

  v25.receiver = v11;
  v25.super_class = ObjectType;
  id v13 = [super init];
  unint64_t v14 = self;
  uint64_t v15 = (char *)v13;
  id v16 = [v14 defaultCenter];
  id v17 = [v12 managedObjectContext];
  uint64_t v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v18;
  *(void *)(v19 + 24) = v12;
  aBlock[4] = sub_100271048;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_10040928C;
  aBlock[3] = &unk_1006321F0;
  unint64_t v20 = _Block_copy(aBlock);
  id v21 = v12;
  swift_release();
  id v22 = [v16 addObserverForName:NSManagedObjectContextObjectsDidChangeNotification object:v17 queue:0 usingBlock:v20];

  _Block_release(v20);
  *(void *)&v15[OBJC_IVAR____TtCV11MobileNotes19SyncingDebugSection10Controller_managedObjectContextObjectsDidChangeObservation] = v22;
  swift_unknownObjectRelease();
  return v15;
}

uint64_t sub_10026C714@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v60 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  int64_t v8 = (char *)&v56 - v7;
  uint64_t v9 = _s6ObjectVMa(0);
  uint64_t v10 = v9 - 8;
  uint64_t v11 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2[1] = 0;
  uint64_t v14 = (uint64_t)a2 + *(int *)(v10 + 44);
  uint64_t v15 = type metadata accessor for Date();
  uint64_t v16 = *(void *)(v15 - 8);
  id v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
  uint64_t v64 = v15;
  uint64_t v65 = v14;
  uint64_t v62 = v16 + 56;
  uint64_t v63 = v17;
  ((void (*)(uint64_t, uint64_t, uint64_t))v17)(v14, 1, 1);
  uint64_t v18 = (void *)((char *)a2 + *(int *)(v10 + 48));
  *uint64_t v18 = 0;
  v18[1] = 0;
  id v19 = [a1 objectID];
  unint64_t v61 = a2;
  *a2 = v19;
  unint64_t v20 = sub_10027106C(a1);
  if (!v20)
  {
    uint64_t v26 = 0;
LABEL_26:
    uint64_t v42 = v61;
    swift_bridgeObjectRelease();
    v42[1] = v26;
    v42[2] = sub_100271A1C(a1);
    v42[3] = v43;
    v42[4] = sub_100271ED8(a1);
    v42[5] = v44;
    *((unsigned char *)v42 + 48) = [a1 markedForDeletion];
    id v45 = [a1 cloudState];
    if (v45)
    {
      uint64_t v46 = v45;
      id v47 = [v45 localVersionDate];

      if (v47)
      {
        uint64_t v48 = (uint64_t)v60;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v49 = 0;
      }
      else
      {
        uint64_t v49 = 1;
        uint64_t v48 = (uint64_t)v60;
      }
      v63(v48, v49, 1, v64);
      sub_10027200C(v48, (uint64_t)v8);
    }
    else
    {
      v63((uint64_t)v8, 1, 1, v64);
    }
    sub_10021E98C((uint64_t)v8, v65);
    id v50 = [a1 lastUpdateChangeCountReason];
    if (v50)
    {
      uint64_t v51 = v50;
      uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v54 = v53;
    }
    else
    {

      uint64_t v52 = 0;
      uint64_t v54 = 0;
    }
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v18 = v52;
    v18[1] = v54;
    return result;
  }
  uint64_t v21 = v20;
  int64_t v57 = v8;
  unint64_t v58 = v18;
  uint64_t v59 = a1;
  unint64_t v67 = v20 & 0xC000000000000001;
  if ((v20 & 0xC000000000000001) != 0)
  {
    uint64_t v22 = __CocoaSet.count.getter();
    if (v22) {
      goto LABEL_4;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    uint64_t v27 = _swiftEmptyArrayStorage;
LABEL_25:
    v68[0] = v27;
    swift_bridgeObjectRetain();
    sub_10026E0CC(v68);
    uint64_t v18 = v58;
    a1 = v59;
    int64_t v8 = v57;
    swift_bridgeObjectRelease();
    uint64_t v26 = v68[0];
    goto LABEL_26;
  }
  uint64_t v22 = *(void *)(v20 + 16);
  if (!v22) {
    goto LABEL_8;
  }
LABEL_4:
  unint64_t v72 = _swiftEmptyArrayStorage;
  sub_100169CAC(0, v22 & ~(v22 >> 63), 0);
  if (v67)
  {
    uint64_t v23 = __CocoaSet.startIndex.getter();
    unsigned __int8 v25 = 1;
  }
  else
  {
    uint64_t v23 = sub_1002AEEF8(v21);
    unsigned __int8 v25 = v28 & 1;
  }
  uint64_t v69 = v23;
  uint64_t v70 = v24;
  unsigned __int8 v71 = v25;
  if ((v22 & 0x8000000000000000) == 0)
  {
    uint64_t v29 = v21 & 0xFFFFFFFFFFFFFF8;
    if (v21 < 0) {
      uint64_t v29 = v21;
    }
    uint64_t v66 = v29;
    do
    {
      while (1)
      {
        uint64_t v35 = v69;
        uint64_t v36 = v70;
        uint64_t v37 = v71;
        sub_1002AEFB4(v69, v70, v71, v21);
        sub_10026C714();
        uint64_t v38 = v72;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100169CAC(0, v38[2] + 1, 1);
          uint64_t v38 = v72;
        }
        unint64_t v40 = v38[2];
        unint64_t v39 = v38[3];
        if (v40 >= v39 >> 1)
        {
          sub_100169CAC(v39 > 1, v40 + 1, 1);
          uint64_t v38 = v72;
        }
        v38[2] = v40 + 1;
        sub_100272074((uint64_t)v13, (uint64_t)v38+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v40);
        if (v67) {
          break;
        }
        uint64_t v30 = sub_10048F4F4(v35, v36, v37, v21);
        uint64_t v32 = v31;
        char v34 = v33;
        sub_10002DA18(v35, v36, v37);
        uint64_t v69 = v30;
        uint64_t v70 = v32;
        unsigned __int8 v71 = v34 & 1;
        if (!--v22) {
          goto LABEL_24;
        }
      }
      if ((v37 & 1) == 0) {
        goto LABEL_37;
      }
      if (__CocoaSet.Index.handleBitPattern.getter()) {
        swift_isUniquelyReferenced_nonNull_native();
      }
      sub_10002F214(&qword_1006A0F30);
      uint64_t v41 = (void (*)(void **, void))Set.Index._asCocoa.modify();
      __CocoaSet.formIndex(after:isUnique:)();
      v41(v68, 0);
      --v22;
    }
    while (v22);
LABEL_24:
    sub_10002DA18(v69, v70, v71);
    swift_bridgeObjectRelease();
    uint64_t v27 = v72;
    goto LABEL_25;
  }
  __break(1u);
LABEL_37:
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_10026CCA0()
{
  return swift_release();
}

void sub_10026CD28(uint64_t a1, void *a2)
{
  uint64_t v3 = _s6ObjectVMa(0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  int64_t v8 = (uint64_t *)((char *)&v12 - v7);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = (void *)Strong;
    sub_10026C714(a2, v8);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_100270A18((uint64_t)v8, (uint64_t)v6);
    id v11 = v10;
    static Published.subscript.setter();
    sub_100270A7C((uint64_t)v8);
  }
}

uint64_t sub_10026CF0C()
{
  return _s10ControllerCMa(0);
}

uint64_t _s10ControllerCMa(uint64_t a1)
{
  return sub_10002EFBC(a1, (uint64_t *)&unk_1006A0E60);
}

void sub_10026CF34()
{
  sub_10026DC3C(319, &qword_1006A0E70, _s6ObjectVMa, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Published);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t _s6ObjectVMa(uint64_t a1)
{
  return sub_10002EFBC(a1, qword_1006A0ED0);
}

char *sub_10026D01C(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v6 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v6 = a1;
    uint64_t v7 = a2[2];
    *((void *)a1 + 1) = a2[1];
    *((void *)a1 + 2) = v7;
    int64_t v8 = a2[4];
    *((void *)a1 + 3) = a2[3];
    *((void *)a1 + 4) = v8;
    uint64_t v9 = a2[5];
    a1[48] = *((unsigned char *)a2 + 48);
    uint64_t v10 = *(int *)(a3 + 36);
    __dst = &a1[v10];
    id v11 = (char *)a2 + v10;
    *((void *)a1 + 5) = v9;
    uint64_t v12 = type metadata accessor for Date();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    uint64_t v14 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v21(v11, 1, v12))
    {
      uint64_t v15 = sub_10002F214((uint64_t *)&unk_1006A3E20);
      memcpy(__dst, v11, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    uint64_t v16 = *(int *)(a3 + 40);
    id v17 = &v6[v16];
    uint64_t v18 = (char **)((char *)a2 + v16);
    uint64_t v19 = v18[1];
    *(void *)id v17 = *v18;
    *((void *)v17 + 1) = v19;
    swift_bridgeObjectRetain();
  }
  return v6;
}

uint64_t sub_10026D200(id *a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 36);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_10026D2EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void **)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v10 = *(int *)(a3 + 36);
  __dst = (void *)(a1 + v10);
  id v11 = (const void *)(a2 + v10);
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v21 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
  id v14 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v21(v11, 1, v12))
  {
    uint64_t v15 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    memcpy(__dst, v11, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(__dst, v11, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
  }
  uint64_t v16 = *(int *)(a3 + 40);
  id v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  uint64_t v19 = v18[1];
  void *v17 = *v18;
  v17[1] = v19;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10026D47C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v9 = *(int *)(a3 + 36);
  uint64_t v10 = (void *)(a1 + v9);
  id v11 = (void *)(a2 + v9);
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void *)(v12 - 8);
  id v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  uint64_t v18 = *(int *)(a3 + 40);
  uint64_t v19 = (void *)(a1 + v18);
  unint64_t v20 = (void *)(a2 + v18);
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10026D69C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v7 = *(int *)(a3 + 36);
  id v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_OWORD *)(a1 + *(int *)(a3 + 40)) = *(_OWORD *)(a2 + *(int *)(a3 + 40));
  return a1;
}

uint64_t sub_10026D7DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v9 = *(int *)(a3 + 36);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void *)(v12 - 8);
  id v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  uint64_t v18 = *(int *)(a3 + 40);
  uint64_t v19 = (void *)(a1 + v18);
  unint64_t v20 = (uint64_t *)(a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10026D9C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10026D9D4);
}

uint64_t sub_10026D9D4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10026DA88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10026DA9C);
}

void *sub_10026DA9C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 36);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_10026DB48()
{
  sub_10026DC3C(319, (unint64_t *)&qword_1006A6C30, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_10026DC3C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_10026DCA0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = *v1;
  NSObject.hash(into:)();

  uint64_t v12 = (uint64_t)v2[1];
  if (v12)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    sub_100270654(a1, v12);
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(*((unsigned char *)v2 + 48));
  uint64_t v13 = _s6ObjectVMa(0);
  sub_10021E8BC((uint64_t)v2 + *(int *)(v13 + 36), (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    Hasher._combine(_:)(1u);
    sub_10026E084((unint64_t *)&unk_1006A4CF0, (void (*)(uint64_t))&type metadata accessor for Date);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  if (*(id *)((char *)v2 + *(int *)(v13 + 40) + 8))
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
}

Swift::Int sub_10026DF7C()
{
  Hasher.init(_seed:)();
  sub_10026DCA0((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_10026DFC0()
{
  Hasher.init(_seed:)();
  sub_10026DCA0((uint64_t)v1);
  return Hasher._finalize()();
}

id sub_10026DFFC@<X0>(void **a1@<X8>)
{
  uint64_t v2 = *v1;
  *a1 = *v1;
  return v2;
}

uint64_t sub_10026E00C()
{
  return sub_10002C8EC((unint64_t *)&qword_10069FFE0, (unint64_t *)&qword_10069E810);
}

uint64_t sub_10026E03C()
{
  return sub_10026E084(&qword_1006A0F20, (void (*)(uint64_t))_s6ObjectVMa);
}

uint64_t sub_10026E084(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

Swift::Int sub_10026E0CC(void **a1)
{
  uint64_t v2 = *(void *)(_s6ObjectVMa(0) - 8);
  int v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v3 = (void *)sub_100190DA8(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_10026E2DC(v6);
  *a1 = v3;
  return result;
}

BOOL sub_10026E17C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s6ObjectVMa(0) - 8;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      return 1;
    }
    else
    {
      unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v13 = *(void *)(v8 + 72);
      uint64_t v14 = v11 - 1;
      do
      {
        sub_100270A18(a1 + v12, (uint64_t)v10);
        sub_100270A18(a2 + v12, (uint64_t)v7);
        BOOL v15 = sub_100270AD8((uint64_t)v10, (uint64_t)v7);
        sub_100270A7C((uint64_t)v7);
        sub_100270A7C((uint64_t)v10);
        BOOL v17 = v14-- != 0;
        if (!v15) {
          break;
        }
        v12 += v13;
      }
      while (v17);
    }
  }
  else
  {
    return 0;
  }
  return v15;
}

Swift::Int sub_10026E2DC(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v183 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v183 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v198 = (uint64_t)&v183 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v197 = (uint64_t)&v183 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  BOOL v17 = (char *)&v183 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v183 - v18;
  uint64_t v218 = type metadata accessor for Date();
  v213 = *(char **)(v218 - 8);
  uint64_t v20 = __chkstk_darwin(v218);
  uint64_t v22 = (char *)&v183 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v20);
  v220 = (char *)&v183 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v183 - v26;
  uint64_t v28 = __chkstk_darwin(v25);
  uint64_t v30 = (char *)&v183 - v29;
  uint64_t v31 = __chkstk_darwin(v28);
  int64_t v187 = (char *)&v183 - v32;
  __chkstk_darwin(v31);
  uint64_t v191 = (char *)&v183 - v33;
  uint64_t v221 = _s6ObjectVMa(0);
  uint64_t v202 = *(void *)(v221 - 8);
  uint64_t v34 = __chkstk_darwin(v221);
  uint64_t v196 = (uint64_t)&v183 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v215 = (uint64_t)&v183 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v222 = (uint64_t)&v183 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  uint64_t v219 = (uint64_t)&v183 - v41;
  uint64_t v42 = __chkstk_darwin(v40);
  uint64_t v205 = (uint64_t)&v183 - v43;
  uint64_t v44 = __chkstk_darwin(v42);
  uint64_t v204 = (uint64_t)&v183 - v45;
  uint64_t v46 = __chkstk_darwin(v44);
  uint64_t v190 = (uint64_t)&v183 - v47;
  __chkstk_darwin(v46);
  uint64_t v189 = (uint64_t)&v183 - v48;
  v216 = a1;
  Swift::Int v49 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v49);
  Swift::Int v188 = result;
  if (result < v49)
  {
    if (v49 >= 0) {
      uint64_t v51 = v49;
    }
    else {
      uint64_t v51 = v49 + 1;
    }
    if (v49 >= -1)
    {
      v214 = v7;
      v207 = v10;
      uint64_t v185 = v17;
      id v184 = v19;
      v206 = v22;
      v203 = v30;
      if (v49 < 2)
      {
        unint64_t v201 = (unint64_t)_swiftEmptyArrayStorage
             + ((*(unsigned __int8 *)(v202 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v202 + 80));
        uint64_t v55 = v191;
        if (v49 != 1)
        {
          unint64_t v58 = _swiftEmptyArrayStorage[2];
          int64_t v57 = (char *)_swiftEmptyArrayStorage;
          v174 = _swiftEmptyArrayStorage;
          if (v58 < 2) {
            goto LABEL_158;
          }
          goto LABEL_146;
        }
        uint64_t v183 = _swiftEmptyArrayStorage;
      }
      else
      {
        uint64_t v52 = v51 >> 1;
        uint64_t v53 = static Array._allocateBufferUninitialized(minimumCapacity:)();
        *(void *)(v53 + 16) = v52;
        uint64_t v7 = v214;
        uint64_t v54 = *(unsigned __int8 *)(v202 + 80);
        uint64_t v183 = (void *)v53;
        unint64_t v201 = v53 + ((v54 + 32) & ~v54);
        uint64_t v55 = v191;
      }
      uint64_t v56 = 0;
      v217 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v213 + 48);
      v211 = (void (**)(char *, uint64_t))(v213 + 8);
      v212 = (void (**)(char *, uint64_t, uint64_t))(v213 + 32);
      int64_t v57 = (char *)_swiftEmptyArrayStorage;
      v200 = v27;
LABEL_16:
      uint64_t v59 = (uint64_t)v56;
      Swift::Int v60 = (Swift::Int)(v56 + 1);
      if ((uint64_t)(v56 + 1) >= v49)
      {
        Swift::Int v67 = v188;
        uint64_t v68 = (uint64_t)v7;
      }
      else
      {
        Swift::Int v209 = v49;
        uint64_t v61 = *v216;
        Swift::Int v62 = *(void *)(v202 + 72);
        long long v194 = v56 + 1;
        uint64_t v63 = v61 + v62 * v60;
        uint64_t v64 = v189;
        sub_100270A18(v63, v189);
        Swift::Int v199 = v59;
        uint64_t v192 = v61;
        Swift::Int v210 = v62;
        sub_100270A18(v61 + v62 * v59, v190);
        uint64_t v65 = v218;
        uint64_t v66 = (uint64_t)v184;
        sub_10021E8BC(v64 + *(int *)(v221 + 36), (uint64_t)v184);
        v213 = (char *)*v217;
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v213)(v66, 1, v65) == 1)
        {
          static Date.distantPast.getter();
          sub_10002B754(v66, (uint64_t *)&unk_1006A3E20);
        }
        else
        {
          (*v212)(v55, v66, v65);
        }
        uint64_t v69 = (uint64_t)v185;
        sub_10021E8BC(v190 + *(int *)(v221 + 36), (uint64_t)v185);
        unsigned int v70 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v213)(v69, 1, v65);
        unint64_t v186 = v57;
        unsigned __int8 v71 = v187;
        if (v70 == 1)
        {
          static Date.distantPast.getter();
          sub_10002B754(v69, (uint64_t *)&unk_1006A3E20);
        }
        else
        {
          (*v212)(v187, v69, v65);
        }
        uint64_t v72 = sub_10026E084(&qword_10069FA10, (void (*)(uint64_t))&type metadata accessor for Date);
        uint64_t v73 = v191;
        uint64_t v195 = v72;
        if (dispatch thunk of static Equatable.== infix(_:_:)())
        {
          Swift::Int v49 = v209;
          if (*(void *)(v189 + 16) == *(void *)(v190 + 16) && *(void *)(v189 + 24) == *(void *)(v190 + 24)) {
            LODWORD(v208) = 0;
          }
          else {
            LODWORD(v208) = _stringCompareWithSmolCheck(_:_:expecting:)();
          }
          uint64_t v74 = v218;
          unint64_t v75 = v187;
          uint64_t v73 = v191;
        }
        else
        {
          LODWORD(v208) = static Date.> infix(_:_:)();
          uint64_t v74 = v218;
          unint64_t v75 = v71;
          Swift::Int v49 = v209;
        }
        unint64_t v76 = *v211;
        (*v211)(v75, v74);
        v76(v73, v74);
        sub_100270A7C(v190);
        sub_100270A7C(v189);
        if (v199 + 2 >= v49)
        {
          Swift::Int v60 = v199 + 2;
          uint64_t v68 = (uint64_t)v7;
        }
        else
        {
          long long v194 = (char *)(v210 * (void)v194);
          uint64_t v77 = v192;
          Swift::Int v60 = v199 + 2;
          uint64_t v193 = v210 * (v199 + 2);
          while (1)
          {
            uint64_t v78 = v204;
            sub_100270A18(v77 + v193, v204);
            sub_100270A18((uint64_t)&v194[v77], v205);
            uint64_t v79 = v78 + *(int *)(v221 + 36);
            uint64_t v80 = v218;
            uint64_t v81 = v197;
            sub_10021E8BC(v79, v197);
            if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v213)(v81, 1, v80) == 1)
            {
              static Date.distantPast.getter();
              sub_10002B754(v81, (uint64_t *)&unk_1006A3E20);
            }
            else
            {
              (*v212)(v203, v81, v80);
            }
            uint64_t v82 = v198;
            sub_10021E8BC(v205 + *(int *)(v221 + 36), v198);
            if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v213)(v82, 1, v80) == 1)
            {
              static Date.distantPast.getter();
              sub_10002B754(v82, (uint64_t *)&unk_1006A3E20);
            }
            else
            {
              (*v212)(v27, v82, v80);
            }
            unint64_t v83 = v203;
            if (dispatch thunk of static Equatable.== infix(_:_:)())
            {
              int v84 = *(void *)(v204 + 16) == *(void *)(v205 + 16) && *(void *)(v204 + 24) == *(void *)(v205 + 24)
                  ? 0
                  : _stringCompareWithSmolCheck(_:_:expecting:)();
              uint64_t v86 = v218;
              uint64_t v85 = v203;
            }
            else
            {
              uint64_t v85 = v83;
              int v84 = static Date.> infix(_:_:)();
              uint64_t v86 = v218;
            }
            v76(v27, v86);
            v76(v85, v86);
            sub_100270A7C(v205);
            sub_100270A7C(v204);
            if ((v208 ^ v84)) {
              break;
            }
            Swift::Int v49 = v209;
            v77 += v210;
            if (v209 == ++v60)
            {
              Swift::Int v60 = v209;
              uint64_t v68 = (uint64_t)v214;
              goto LABEL_51;
            }
          }
          uint64_t v68 = (uint64_t)v214;
          Swift::Int v49 = v209;
        }
LABEL_51:
        int64_t v57 = v186;
        Swift::Int v67 = v188;
        uint64_t v59 = v199;
        if (v208)
        {
          if (v60 < v199) {
            goto LABEL_182;
          }
          if (v199 < v60)
          {
            uint64_t v87 = v68;
            uint64_t v88 = 0;
            uint64_t v89 = v210 * (v60 - 1);
            Swift::Int v90 = v60 * v210;
            Swift::Int v91 = v199;
            uint64_t v92 = v199 * v210;
            do
            {
              if (v91 != v60 + v88 - 1)
              {
                uint64_t v94 = v192;
                if (!v192) {
                  goto LABEL_187;
                }
                unint64_t v95 = v192 + v92;
                v213 = (char *)(v192 + v89);
                sub_100272074(v192 + v92, v196);
                if (v92 < v89 || v95 >= v94 + v90)
                {
                  uint64_t v93 = (uint64_t)v213;
                  swift_arrayInitWithTakeFrontToBack();
                }
                else
                {
                  uint64_t v93 = (uint64_t)v213;
                  if (v92 != v89) {
                    swift_arrayInitWithTakeBackToFront();
                  }
                }
                sub_100272074(v196, v93);
                uint64_t v87 = (uint64_t)v214;
              }
              ++v91;
              --v88;
              v89 -= v210;
              v90 -= v210;
              v92 += v210;
            }
            while (v91 < v60 + v88);
            uint64_t v27 = v200;
            int64_t v57 = v186;
            Swift::Int v67 = v188;
            uint64_t v68 = v87;
            uint64_t v59 = v199;
            Swift::Int v49 = v209;
          }
        }
      }
      if (v60 >= v49) {
        goto LABEL_96;
      }
      if (__OFSUB__(v60, v59)) {
        goto LABEL_180;
      }
      if (v60 - v59 >= v67) {
        goto LABEL_96;
      }
      if (__OFADD__(v59, v67)) {
        goto LABEL_183;
      }
      if (v59 + v67 >= v49) {
        Swift::Int v96 = v49;
      }
      else {
        Swift::Int v96 = v59 + v67;
      }
      if (v96 >= v59)
      {
        if (v60 == v96) {
          goto LABEL_96;
        }
        Swift::Int v199 = v59;
        unint64_t v186 = v57;
        long long v194 = v2;
        uint64_t v97 = *(void *)(v202 + 72);
        uint64_t v98 = v97 * (v60 - 1);
        uint64_t v208 = v97;
        Swift::Int v99 = v60 * v97;
        uint64_t v195 = v96;
LABEL_78:
        uint64_t v101 = 0;
        uint64_t v102 = (char *)v199;
        Swift::Int v209 = v98;
        Swift::Int v210 = v99;
        v213 = (char *)v60;
        while (1)
        {
          uint64_t v103 = *v216;
          uint64_t v104 = v99 + v101 + *v216;
          uint64_t v105 = v219;
          sub_100270A18(v104, v219);
          sub_100270A18(v98 + v101 + v103, v222);
          uint64_t v106 = v105 + *(int *)(v221 + 36);
          uint64_t v107 = v218;
          uint64_t v108 = (uint64_t)v207;
          sub_10021E8BC(v106, (uint64_t)v207);
          uint64_t v109 = *v217;
          if ((*v217)(v108, 1, v107) == 1)
          {
            static Date.distantPast.getter();
            sub_10002B754(v108, (uint64_t *)&unk_1006A3E20);
          }
          else
          {
            (*v212)(v220, v108, v107);
          }
          uint64_t v110 = v107;
          sub_10021E8BC(v222 + *(int *)(v221 + 36), v68);
          unsigned int v111 = v109(v68, 1, v107);
          uint64_t v112 = v206;
          if (v111 == 1)
          {
            static Date.distantPast.getter();
            sub_10002B754(v68, (uint64_t *)&unk_1006A3E20);
          }
          else
          {
            (*v212)(v206, v68, v110);
          }
          uint64_t v113 = v220;
          sub_10026E084(&qword_10069FA10, (void (*)(uint64_t))&type metadata accessor for Date);
          if (dispatch thunk of static Equatable.== infix(_:_:)())
          {
            if (*(void *)(v219 + 16) == *(void *)(v222 + 16) && *(void *)(v219 + 24) == *(void *)(v222 + 24))
            {
              v120 = *v211;
              uint64_t v121 = v218;
              (*v211)(v112, v218);
              v120(v220, v121);
              sub_100270A7C(v222);
              sub_100270A7C(v219);
              uint64_t v100 = v213;
LABEL_76:
              Swift::Int v99 = v210;
LABEL_77:
              Swift::Int v60 = (Swift::Int)(v100 + 1);
              v98 += v208;
              v99 += v208;
              if (v60 != v195) {
                goto LABEL_78;
              }
              Swift::Int v60 = v195;
              uint64_t v2 = v194;
              uint64_t v27 = v200;
              int64_t v57 = v186;
              uint64_t v59 = v199;
LABEL_96:
              if (v60 < v59) {
                goto LABEL_175;
              }
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v213 = (char *)v60;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                int64_t v57 = sub_1001904C8(0, *((void *)v57 + 2) + 1, 1, v57);
              }
              unint64_t v124 = *((void *)v57 + 2);
              unint64_t v123 = *((void *)v57 + 3);
              unint64_t v58 = v124 + 1;
              uint64_t v7 = (char *)v68;
              if (v124 >= v123 >> 1) {
                int64_t v57 = sub_1001904C8((char *)(v123 > 1), v124 + 1, 1, v57);
              }
              *((void *)v57 + 2) = v58;
              id v125 = v57 + 32;
              v126 = &v57[16 * v124 + 32];
              unint64_t v127 = v213;
              *(void *)v126 = v59;
              *((void *)v126 + 1) = v127;
              if (v124)
              {
LABEL_102:
                unint64_t v128 = v58 - 1;
                if (v58 >= 4)
                {
                  uint64_t v133 = &v125[16 * v58];
                  uint64_t v134 = *((void *)v133 - 8);
                  uint64_t v135 = *((void *)v133 - 7);
                  BOOL v139 = __OFSUB__(v135, v134);
                  uint64_t v136 = v135 - v134;
                  if (v139) {
                    goto LABEL_164;
                  }
                  uint64_t v138 = *((void *)v133 - 6);
                  uint64_t v137 = *((void *)v133 - 5);
                  BOOL v139 = __OFSUB__(v137, v138);
                  uint64_t v131 = v137 - v138;
                  char v132 = v139;
                  if (v139) {
                    goto LABEL_165;
                  }
                  unint64_t v140 = v58 - 2;
                  BOOL v141 = &v125[16 * v58 - 32];
                  uint64_t v143 = *(void *)v141;
                  uint64_t v142 = *((void *)v141 + 1);
                  BOOL v139 = __OFSUB__(v142, v143);
                  uint64_t v144 = v142 - v143;
                  if (v139) {
                    goto LABEL_167;
                  }
                  BOOL v139 = __OFADD__(v131, v144);
                  uint64_t v145 = v131 + v144;
                  if (v139) {
                    goto LABEL_170;
                  }
                  if (v145 >= v136)
                  {
                    v163 = &v125[16 * v128];
                    uint64_t v165 = *(void *)v163;
                    uint64_t v164 = *((void *)v163 + 1);
                    BOOL v139 = __OFSUB__(v164, v165);
                    uint64_t v166 = v164 - v165;
                    if (v139) {
                      goto LABEL_174;
                    }
                    BOOL v156 = v131 < v166;
                  }
                  else
                  {
LABEL_115:
                    if (v132) {
                      goto LABEL_166;
                    }
                    unint64_t v140 = v58 - 2;
                    id v146 = &v125[16 * v58 - 32];
                    uint64_t v148 = *(void *)v146;
                    uint64_t v147 = *((void *)v146 + 1);
                    BOOL v149 = __OFSUB__(v147, v148);
                    uint64_t v150 = v147 - v148;
                    char v151 = v149;
                    if (v149) {
                      goto LABEL_169;
                    }
                    v152 = &v125[16 * v128];
                    uint64_t v154 = *(void *)v152;
                    uint64_t v153 = *((void *)v152 + 1);
                    BOOL v139 = __OFSUB__(v153, v154);
                    uint64_t v155 = v153 - v154;
                    if (v139) {
                      goto LABEL_172;
                    }
                    if (__OFADD__(v150, v155)) {
                      goto LABEL_173;
                    }
                    if (v150 + v155 < v131) {
                      goto LABEL_127;
                    }
                    BOOL v156 = v131 < v155;
                  }
                  if (v156) {
                    unint64_t v128 = v140;
                  }
                }
                else
                {
                  if (v58 == 3)
                  {
                    uint64_t v130 = *((void *)v57 + 4);
                    uint64_t v129 = *((void *)v57 + 5);
                    BOOL v139 = __OFSUB__(v129, v130);
                    uint64_t v131 = v129 - v130;
                    char v132 = v139;
                    goto LABEL_115;
                  }
                  uint64_t v157 = *((void *)v57 + 4);
                  uint64_t v158 = *((void *)v57 + 5);
                  BOOL v139 = __OFSUB__(v158, v157);
                  uint64_t v150 = v158 - v157;
                  char v151 = v139;
LABEL_127:
                  if (v151) {
                    goto LABEL_168;
                  }
                  uint64_t v159 = &v125[16 * v128];
                  uint64_t v161 = *(void *)v159;
                  uint64_t v160 = *((void *)v159 + 1);
                  BOOL v139 = __OFSUB__(v160, v161);
                  uint64_t v162 = v160 - v161;
                  if (v139) {
                    goto LABEL_171;
                  }
                  if (v162 < v150) {
                    goto LABEL_15;
                  }
                }
                unint64_t v167 = v128 - 1;
                if (v128 - 1 >= v58)
                {
                  __break(1u);
LABEL_161:
                  __break(1u);
LABEL_162:
                  __break(1u);
LABEL_163:
                  __break(1u);
LABEL_164:
                  __break(1u);
LABEL_165:
                  __break(1u);
LABEL_166:
                  __break(1u);
LABEL_167:
                  __break(1u);
LABEL_168:
                  __break(1u);
LABEL_169:
                  __break(1u);
LABEL_170:
                  __break(1u);
LABEL_171:
                  __break(1u);
LABEL_172:
                  __break(1u);
LABEL_173:
                  __break(1u);
LABEL_174:
                  __break(1u);
LABEL_175:
                  __break(1u);
LABEL_176:
                  __break(1u);
LABEL_177:
                  __break(1u);
LABEL_178:
                  __break(1u);
LABEL_179:
                  __break(1u);
LABEL_180:
                  __break(1u);
LABEL_181:
                  __break(1u);
LABEL_182:
                  __break(1u);
LABEL_183:
                  __break(1u);
                  break;
                }
                if (!*v216) {
                  goto LABEL_186;
                }
                uint64_t v168 = v57;
                uint64_t v169 = &v125[16 * v167];
                uint64_t v170 = *(void *)v169;
                uint64_t v171 = &v125[16 * v128];
                uint64_t v172 = *((void *)v171 + 1);
                sub_10026FBC4(*v216 + *(void *)(v202 + 72) * *(void *)v169, *v216 + *(void *)(v202 + 72) * *(void *)v171, *v216 + *(void *)(v202 + 72) * v172, v201);
                if (v2)
                {
                  v174 = v183;
                  goto LABEL_158;
                }
                if (v172 < v170) {
                  goto LABEL_161;
                }
                if (v128 > *((void *)v168 + 2)) {
                  goto LABEL_162;
                }
                *(void *)uint64_t v169 = v170;
                *(void *)&v125[16 * v167 + 8] = v172;
                unint64_t v173 = *((void *)v168 + 2);
                if (v128 >= v173) {
                  goto LABEL_163;
                }
                int64_t v57 = v168;
                unint64_t v58 = v173 - 1;
                memmove(&v125[16 * v128], v171 + 16, 16 * (v173 - 1 - v128));
                *((void *)v168 + 2) = v173 - 1;
                uint64_t v7 = v214;
                uint64_t v27 = v200;
                if (v173 <= 2) {
                  goto LABEL_15;
                }
                goto LABEL_102;
              }
              unint64_t v58 = 1;
LABEL_15:
              Swift::Int v49 = v216[1];
              uint64_t v56 = v213;
              uint64_t v55 = v191;
              if ((uint64_t)v213 >= v49)
              {
                v174 = v183;
                if (v58 < 2)
                {
LABEL_158:
                  swift_bridgeObjectRelease();
                  v174[2] = 0;
                  return swift_bridgeObjectRelease();
                }
LABEL_146:
                uint64_t v175 = *v216;
                while (1)
                {
                  unint64_t v176 = v58 - 2;
                  if (v58 < 2) {
                    goto LABEL_176;
                  }
                  if (!v175) {
                    goto LABEL_188;
                  }
                  v177 = v57;
                  v178 = v57 + 32;
                  uint64_t v179 = *(void *)&v57[16 * v176 + 32];
                  uint64_t v180 = *(void *)&v57[16 * v58 + 24];
                  sub_10026FBC4(v175 + *(void *)(v202 + 72) * v179, v175 + *(void *)(v202 + 72) * *(void *)&v178[16 * v58 - 16], v175 + *(void *)(v202 + 72) * v180, v201);
                  if (v2) {
                    goto LABEL_158;
                  }
                  if (v180 < v179) {
                    goto LABEL_177;
                  }
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    v177 = sub_100190A20((uint64_t)v177);
                  }
                  if (v176 >= *((void *)v177 + 2)) {
                    goto LABEL_178;
                  }
                  uint64_t v181 = &v177[16 * v176 + 32];
                  *(void *)uint64_t v181 = v179;
                  *((void *)v181 + 1) = v180;
                  unint64_t v182 = *((void *)v177 + 2);
                  if (v58 > v182) {
                    goto LABEL_179;
                  }
                  int64_t v57 = v177;
                  memmove(&v177[16 * v58 + 16], &v177[16 * v58 + 32], 16 * (v182 - v58));
                  *((void *)v177 + 2) = v182 - 1;
                  unint64_t v58 = v182 - 1;
                  if (v182 <= 2) {
                    goto LABEL_158;
                  }
                }
              }
              goto LABEL_16;
            }
            char v114 = _stringCompareWithSmolCheck(_:_:expecting:)();
            uint64_t v115 = v218;
            uint64_t v116 = v112;
            uint64_t v113 = v220;
          }
          else
          {
            char v114 = static Date.> infix(_:_:)();
            uint64_t v115 = v218;
            uint64_t v116 = v112;
          }
          unint64_t v117 = *v211;
          (*v211)(v116, v115);
          v117(v113, v115);
          sub_100270A7C(v222);
          sub_100270A7C(v219);
          if ((v114 & 1) == 0)
          {
            uint64_t v100 = v213;
            uint64_t v68 = (uint64_t)v214;
            uint64_t v98 = v209;
            goto LABEL_76;
          }
          uint64_t v118 = *v216;
          uint64_t v98 = v209;
          if (!*v216) {
            goto LABEL_185;
          }
          Swift::Int v99 = v210;
          uint64_t v119 = v118 + v209 + v101;
          sub_100272074(v118 + v210 + v101, v215);
          swift_arrayInitWithTakeFrontToBack();
          sub_100272074(v215, v119);
          v101 -= v208;
          ++v102;
          uint64_t v100 = v213;
          uint64_t v68 = (uint64_t)v214;
          if (v213 == v102) {
            goto LABEL_77;
          }
        }
      }
      __break(1u);
LABEL_185:
      __break(1u);
LABEL_186:
      __break(1u);
LABEL_187:
      __break(1u);
LABEL_188:
      __break(1u);
    }
    Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  if (v49 < 0) {
    goto LABEL_181;
  }
  if (v49) {
    return sub_10026F650(0, v49, 1, v216);
  }
  return result;
}

uint64_t sub_10026F650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v51 = a4;
  uint64_t v42 = a1;
  uint64_t v6 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v45 = (uint64_t)&v40 - v10;
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  BOOL v17 = (char *)&v40 - v16;
  uint64_t v55 = _s6ObjectVMa(0);
  uint64_t v18 = __chkstk_darwin(v55);
  uint64_t v48 = (uint64_t)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v57 = (uint64_t)&v40 - v21;
  uint64_t result = __chkstk_darwin(v20);
  uint64_t v56 = (uint64_t)&v40 - v24;
  uint64_t v47 = a3;
  uint64_t v41 = a2;
  if (a3 != a2)
  {
    uint64_t v25 = *(void *)(v23 + 72);
    uint64_t v43 = (void (**)(char *, uint64_t))(v12 + 8);
    uint64_t v44 = (void (**)(char *, uint64_t, uint64_t))(v12 + 32);
    uint64_t v54 = v25 * (v47 - 1);
    uint64_t v46 = v25;
    uint64_t v52 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    uint64_t v53 = v25 * v47;
    Swift::Int v49 = v9;
LABEL_6:
    uint64_t v27 = 0;
    uint64_t v28 = v42;
    while (1)
    {
      uint64_t v29 = v15;
      uint64_t v30 = *v51;
      uint64_t v50 = v53 + v27;
      uint64_t v31 = v56;
      sub_100270A18(v53 + v27 + v30, v56);
      sub_100270A18(v54 + v27 + v30, v57);
      uint64_t v32 = v31 + *(int *)(v55 + 36);
      uint64_t v33 = v45;
      sub_10021E8BC(v32, v45);
      uint64_t v34 = *v52;
      if ((*v52)(v33, 1, v11) == 1)
      {
        static Date.distantPast.getter();
        sub_10002B754(v33, (uint64_t *)&unk_1006A3E20);
      }
      else
      {
        (*v44)(v17, v33, v11);
      }
      sub_10021E8BC(v57 + *(int *)(v55 + 36), (uint64_t)v9);
      uint64_t v15 = v29;
      if (v34((uint64_t)v9, 1, v11) == 1)
      {
        static Date.distantPast.getter();
        sub_10002B754((uint64_t)v9, (uint64_t *)&unk_1006A3E20);
      }
      else
      {
        (*v44)(v29, (uint64_t)v9, v11);
      }
      sub_10026E084(&qword_10069FA10, (void (*)(uint64_t))&type metadata accessor for Date);
      if (dispatch thunk of static Equatable.== infix(_:_:)())
      {
        if (*(void *)(v56 + 16) == *(void *)(v57 + 16) && *(void *)(v56 + 24) == *(void *)(v57 + 24))
        {
          uint64_t v26 = *v43;
          (*v43)(v15, v11);
          v26(v17, v11);
          sub_100270A7C(v57);
          uint64_t result = sub_100270A7C(v56);
LABEL_5:
          v54 += v46;
          v53 += v46;
          if (++v47 == v41) {
            return result;
          }
          goto LABEL_6;
        }
        char v35 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      else
      {
        char v35 = static Date.> infix(_:_:)();
      }
      char v36 = v35;
      uint64_t v37 = *v43;
      (*v43)(v29, v11);
      v37(v17, v11);
      sub_100270A7C(v57);
      uint64_t result = sub_100270A7C(v56);
      uint64_t v9 = v49;
      if ((v36 & 1) == 0) {
        goto LABEL_5;
      }
      uint64_t v38 = *v51;
      if (!*v51) {
        break;
      }
      uint64_t v39 = v38 + v54 + v27;
      sub_100272074(v38 + v53 + v27, v48);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_100272074(v48, v39);
      v27 -= v46;
      ++v28;
      uint64_t v9 = v49;
      if (v47 == v28) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10026FBC4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v85 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v86 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((char *)&v79 - v12);
  uint64_t v13 = __chkstk_darwin(v11);
  unint64_t v84 = (unint64_t)&v79 - v14;
  __chkstk_darwin(v13);
  unint64_t v83 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((char *)&v79 - v15);
  uint64_t v16 = type metadata accessor for Date();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v81 = (char *)&v79 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v87 = (char *)&v79 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v82 = (void (**)(char *, uint64_t, uint64_t))((char *)&v79 - v23);
  __chkstk_darwin(v22);
  uint64_t v88 = (char *)&v79 - v24;
  uint64_t v93 = _s6ObjectVMa(0);
  uint64_t v25 = __chkstk_darwin(v93);
  unint64_t v92 = (unint64_t)&v79 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  unint64_t v90 = (unint64_t)&v79 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v79 - v30;
  __chkstk_darwin(v29);
  uint64_t v33 = (char *)&v79 - v32;
  uint64_t v89 = *(void *)(v34 + 72);
  if (!v89)
  {
    __break(1u);
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
    goto LABEL_90;
  }
  unint64_t v35 = a1;
  if (a2 - a1 == 0x8000000000000000 && v89 == -1) {
    goto LABEL_88;
  }
  int64_t v36 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v89 == -1) {
    goto LABEL_89;
  }
  uint64_t v37 = (uint64_t)(a2 - a1) / v89;
  unint64_t v96 = a1;
  unint64_t v95 = a4;
  uint64_t v38 = v36 / v89;
  uint64_t v91 = v16;
  if (v37 >= v36 / v89)
  {
    if (v38 < 0) {
      goto LABEL_90;
    }
    uint64_t v88 = (char *)a1;
    uint64_t v40 = v38 * v89;
    uint64_t v41 = (uint64_t)v85;
    uint64_t v42 = (uint64_t)v86;
    if (a4 < a2 || a2 + v40 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a2)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v59 = a4 + v40;
    unint64_t v94 = a4 + v40;
    unint64_t v96 = a2;
    if (v40 < 1 || (unint64_t)v88 >= a2)
    {
LABEL_86:
      sub_100190894(&v96, &v95, (uint64_t *)&v94);
      return 1;
    }
    uint64_t v61 = -v89;
    uint64_t v82 = (void (**)(char *, uint64_t, uint64_t))(v17 + 32);
    unint64_t v83 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
    uint64_t v80 = (void (**)(char *, uint64_t))(v17 + 8);
    unint64_t v84 = a4;
    while (1)
    {
      unint64_t v62 = v90;
      sub_100270A18(v59 + v61, v90);
      unint64_t v63 = a2 + v61;
      sub_100270A18(a2 + v61, v92);
      sub_10021E8BC(v62 + *(int *)(v93 + 36), v42);
      uint64_t v64 = *v83;
      if ((*v83)(v42, 1, v16) == 1)
      {
        static Date.distantPast.getter();
        sub_10002B754(v42, (uint64_t *)&unk_1006A3E20);
      }
      else
      {
        (*v82)(v87, v42, v16);
      }
      sub_10021E8BC(v92 + *(int *)(v93 + 36), v41);
      if (v64(v41, 1, v16) == 1)
      {
        uint64_t v65 = v81;
        static Date.distantPast.getter();
        sub_10002B754(v41, (uint64_t *)&unk_1006A3E20);
      }
      else
      {
        uint64_t v65 = v81;
        (*v82)(v81, v41, v16);
      }
      sub_10026E084(&qword_10069FA10, (void (*)(uint64_t))&type metadata accessor for Date);
      uint64_t v66 = v87;
      char v67 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v89 = a2;
      if ((v67 & 1) == 0) {
        break;
      }
      if (*(void *)(v90 + 16) != *(void *)(v92 + 16) || *(void *)(v90 + 24) != *(void *)(v92 + 24))
      {
        char v69 = _stringCompareWithSmolCheck(_:_:expecting:)();
        goto LABEL_69;
      }
      char v68 = 0;
LABEL_70:
      unsigned int v70 = v65;
      unint64_t v71 = a3 + v61;
      unint64_t v72 = a3;
      uint64_t v73 = *v80;
      uint64_t v74 = v91;
      (*v80)(v70, v91);
      v73(v66, v74);
      sub_100270A7C(v92);
      sub_100270A7C(v90);
      if (v68)
      {
        unint64_t v75 = v84;
        if (v72 < v89 || v71 >= v89)
        {
          swift_arrayInitWithTakeFrontToBack();
          uint64_t v41 = (uint64_t)v85;
          uint64_t v42 = (uint64_t)v86;
          uint64_t v16 = v91;
        }
        else
        {
          BOOL v76 = v72 == v89;
          uint64_t v41 = (uint64_t)v85;
          uint64_t v42 = (uint64_t)v86;
          uint64_t v16 = v91;
          if (!v76) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        v96 += v61;
      }
      else
      {
        unint64_t v77 = v94;
        v94 += v61;
        unint64_t v75 = v84;
        if (v72 < v77 || v71 >= v77)
        {
          swift_arrayInitWithTakeFrontToBack();
          unint64_t v63 = v89;
          uint64_t v41 = (uint64_t)v85;
          uint64_t v42 = (uint64_t)v86;
        }
        else
        {
          uint64_t v42 = (uint64_t)v86;
          unint64_t v63 = v89;
          if (v72 != v77) {
            swift_arrayInitWithTakeBackToFront();
          }
          uint64_t v41 = (uint64_t)v85;
        }
        uint64_t v16 = v91;
      }
      unint64_t v59 = v94;
      if (v94 > v75)
      {
        a2 = v63;
        a3 = v71;
        if (v63 > (unint64_t)v88) {
          continue;
        }
      }
      goto LABEL_86;
    }
    char v69 = static Date.> infix(_:_:)();
LABEL_69:
    char v68 = v69;
    goto LABEL_70;
  }
  if ((v37 & 0x8000000000000000) == 0)
  {
    uint64_t v39 = v37 * v89;
    if (a4 < v35 || v35 + v39 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != v35)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v92 = a4 + v39;
    unint64_t v94 = a4 + v39;
    unint64_t v90 = a3;
    if (v39 >= 1 && a2 < a3)
    {
      uint64_t v44 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
      uint64_t v86 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
      uint64_t v87 = (char *)(v17 + 32);
      uint64_t v45 = (void (**)(void (**)(char *, uint64_t, uint64_t), uint64_t))(v17 + 8);
      while (1)
      {
        sub_100270A18(a2, (uint64_t)v33);
        sub_100270A18(a4, (uint64_t)v31);
        uint64_t v46 = v83;
        sub_10021E8BC((uint64_t)&v33[*(int *)(v93 + 36)], (uint64_t)v83);
        uint64_t v47 = *v44;
        if ((*v44)((uint64_t)v46, 1, v16) == 1)
        {
          static Date.distantPast.getter();
          sub_10002B754((uint64_t)v46, (uint64_t *)&unk_1006A3E20);
        }
        else
        {
          (*(void (**)(char *, unsigned int (**)(uint64_t, uint64_t, uint64_t), uint64_t))v87)(v88, v46, v16);
        }
        uint64_t v48 = v84;
        Swift::Int v49 = v82;
        sub_10021E8BC((uint64_t)&v31[*(int *)(v93 + 36)], v84);
        if (v47(v48, 1, v16) == 1)
        {
          static Date.distantPast.getter();
          sub_10002B754(v48, (uint64_t *)&unk_1006A3E20);
        }
        else
        {
          (*(void (**)(void, uint64_t, uint64_t))v87)(v49, v48, v16);
        }
        sub_10026E084(&qword_10069FA10, (void (*)(uint64_t))&type metadata accessor for Date);
        uint64_t v50 = v88;
        if (dispatch thunk of static Equatable.== infix(_:_:)())
        {
          if (*((void *)v33 + 2) == *((void *)v31 + 2) && *((void *)v33 + 3) == *((void *)v31 + 3))
          {
            uint64_t v51 = *v45;
            uint64_t v16 = v91;
            (*v45)(v49, v91);
            v51((void (**)(char *, uint64_t, uint64_t))v50, v16);
            sub_100270A7C((uint64_t)v31);
            sub_100270A7C((uint64_t)v33);
LABEL_40:
            unint64_t v56 = v96;
            unint64_t v58 = v95 + v89;
            if (v96 < v95 || v96 >= v58)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v96 != v95)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v95 = v58;
            unint64_t v57 = a2;
            goto LABEL_48;
          }
          char v52 = _stringCompareWithSmolCheck(_:_:expecting:)();
        }
        else
        {
          char v52 = static Date.> infix(_:_:)();
        }
        char v53 = v52;
        uint64_t v54 = v50;
        uint64_t v16 = v91;
        uint64_t v55 = *v45;
        (*v45)(v49, v91);
        v55((void (**)(char *, uint64_t, uint64_t))v54, v16);
        sub_100270A7C((uint64_t)v31);
        sub_100270A7C((uint64_t)v33);
        uint64_t v44 = v86;
        if ((v53 & 1) == 0) {
          goto LABEL_40;
        }
        unint64_t v56 = v96;
        unint64_t v57 = a2 + v89;
        if (v96 < a2 || v96 >= v57)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v96 == a2)
        {
          unint64_t v56 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
LABEL_48:
        unint64_t v96 = v56 + v89;
        a4 = v95;
        if (v95 < v92)
        {
          a2 = v57;
          if (v57 < v90) {
            continue;
          }
        }
        goto LABEL_86;
      }
    }
    goto LABEL_86;
  }
LABEL_90:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_100270654(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v22 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = _s6ObjectVMa(0);
  uint64_t v10 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::UInt v13 = *(void *)(a2 + 16);
  Hasher._combine(_:)(v13);
  if (v13)
  {
    uint64_t v14 = a2 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v23 = *(void *)(v10 + 72);
    uint64_t v15 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
    uint64_t v20 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v21 = (void (**)(char *, char *, uint64_t))(v5 + 32);
    do
    {
      sub_100270A18(v14, (uint64_t)v12);
      id v16 = *(id *)v12;
      NSObject.hash(into:)();

      uint64_t v17 = *((void *)v12 + 1);
      if (v17)
      {
        Hasher._combine(_:)(1u);
        swift_bridgeObjectRetain();
        sub_100270654(a1, v17);
        swift_bridgeObjectRelease();
      }
      else
      {
        Hasher._combine(_:)(0);
      }
      swift_bridgeObjectRetain();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      Hasher._combine(_:)(v12[48]);
      sub_10021E8BC((uint64_t)&v12[*(int *)(v24 + 36)], (uint64_t)v9);
      if ((*v15)(v9, 1, v4) == 1)
      {
        Hasher._combine(_:)(0);
      }
      else
      {
        uint64_t v18 = v22;
        (*v21)(v22, v9, v4);
        Hasher._combine(_:)(1u);
        sub_10026E084((unint64_t *)&unk_1006A4CF0, (void (*)(uint64_t))&type metadata accessor for Date);
        dispatch thunk of Hashable.hash(into:)();
        (*v20)(v18, v4);
      }
      if (*(void *)&v12[*(int *)(v24 + 40) + 8])
      {
        Hasher._combine(_:)(1u);
        swift_bridgeObjectRetain();
        String.hash(into:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        Hasher._combine(_:)(0);
      }
      sub_100270A7C((uint64_t)v12);
      v14 += v23;
      --v13;
    }
    while (v13);
  }
}

uint64_t sub_100270A18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s6ObjectVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100270A7C(uint64_t a1)
{
  uint64_t v2 = _s6ObjectVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL sub_100270AD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v43 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = &v38[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_10002F214((uint64_t *)&unk_1006A0050);
  __chkstk_darwin(v7);
  uint64_t v9 = &v38[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  Swift::UInt v13 = &v38[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = __chkstk_darwin(v11);
  id v16 = &v38[-v15];
  __chkstk_darwin(v14);
  uint64_t v18 = &v38[-v17];
  sub_100031418(0, (unint64_t *)&qword_1006A0020);
  if ((static NSObject.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v42 = v9;
  uint64_t v19 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8))
  {
    if (!v19) {
      return 0;
    }
    uint64_t v41 = v4;
    swift_bridgeObjectRetain();
    uint64_t v20 = swift_bridgeObjectRetain();
    char v21 = sub_10026E17C(v20, v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0) {
      return 0;
    }
  }
  else
  {
    uint64_t v41 = v4;
    if (v19) {
      return 0;
    }
  }
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)
    || (v22 = _stringCompareWithSmolCheck(_:_:expecting:)(), BOOL result = 0, (v22 & 1) != 0))
  {
    if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40)
      || (v24 = _stringCompareWithSmolCheck(_:_:expecting:)(), BOOL result = 0, (v24 & 1) != 0))
    {
      if (*(unsigned __int8 *)(a1 + 48) != *(unsigned __int8 *)(a2 + 48)) {
        return 0;
      }
      uint64_t v25 = _s6ObjectVMa(0);
      sub_10021E8BC(a1 + *(int *)(v25 + 36), (uint64_t)v18);
      uint64_t v40 = v25;
      sub_10021E8BC(a2 + *(int *)(v25 + 36), (uint64_t)v16);
      uint64_t v26 = (uint64_t)v42;
      uint64_t v27 = (uint64_t)&v42[*(int *)(v7 + 48)];
      sub_10021E8BC((uint64_t)v18, (uint64_t)v42);
      sub_10021E8BC((uint64_t)v16, v27);
      uint64_t v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48);
      if (v28(v26, 1, v41) == 1)
      {
        sub_10002B754((uint64_t)v16, (uint64_t *)&unk_1006A3E20);
        sub_10002B754((uint64_t)v18, (uint64_t *)&unk_1006A3E20);
        if (v28(v27, 1, v41) == 1)
        {
          sub_10002B754((uint64_t)v42, (uint64_t *)&unk_1006A3E20);
LABEL_21:
          uint64_t v33 = *(int *)(v40 + 40);
          uint64_t v34 = (void *)(a1 + v33);
          uint64_t v35 = *(void *)(a1 + v33 + 8);
          int64_t v36 = (void *)(a2 + v33);
          uint64_t v37 = v36[1];
          if (v35) {
            return v37 && (*v34 == *v36 && v35 == v37 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0);
          }
          return !v37;
        }
      }
      else
      {
        sub_10021E8BC(v26, (uint64_t)v13);
        if (v28(v27, 1, v41) != 1)
        {
          uint64_t v29 = v43;
          uint64_t v30 = v27;
          uint64_t v31 = v41;
          (*(void (**)(unsigned char *, uint64_t, uint64_t))(v43 + 32))(v6, v30, v41);
          sub_10026E084(&qword_10069FA10, (void (*)(uint64_t))&type metadata accessor for Date);
          int v39 = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v32 = *(void (**)(unsigned char *, uint64_t))(v29 + 8);
          v32(v6, v31);
          sub_10002B754((uint64_t)v16, (uint64_t *)&unk_1006A3E20);
          sub_10002B754((uint64_t)v18, (uint64_t *)&unk_1006A3E20);
          v32(v13, v31);
          sub_10002B754(v26, (uint64_t *)&unk_1006A3E20);
          if ((v39 & 1) == 0) {
            return 0;
          }
          goto LABEL_21;
        }
        sub_10002B754((uint64_t)v16, (uint64_t *)&unk_1006A3E20);
        sub_10002B754((uint64_t)v18, (uint64_t *)&unk_1006A3E20);
        (*(void (**)(unsigned char *, uint64_t))(v43 + 8))(v13, v41);
      }
      sub_10002B754((uint64_t)v42, (uint64_t *)&unk_1006A0050);
      return 0;
    }
  }
  return result;
}

uint64_t sub_100270FD0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100271008()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100271048()
{
  return sub_10026CCA0();
}

void sub_100271050()
{
  sub_10026CD28(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

unint64_t sub_10027106C(void *a1)
{
  self;
  uint64_t v2 = swift_dynamicCastObjCClass();
  if (v2)
  {
    int v3 = (void *)v2;
    id v4 = a1;
    id v5 = [v3 folders];
    sub_100031418(0, (unint64_t *)&unk_1006A53A0);
    sub_10002C8EC((unint64_t *)&qword_1006A0418, (unint64_t *)&unk_1006A53A0);
    uint64_t v6 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    id v7 = [v3 hashtags];
    sub_100031418(0, (unint64_t *)&qword_1006A49F0);
    sub_10002C8EC(&qword_1006A0480, (unint64_t *)&qword_1006A49F0);
    uint64_t v8 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v9 = (void *)sub_100332D30(v6);
    swift_bridgeObjectRelease();
    unint64_t v10 = sub_100332D54(v8);
    swift_bridgeObjectRelease();
    sub_1001766AC(v10, v9);
    unint64_t v12 = v11;

    return v12;
  }
  self;
  uint64_t v13 = swift_dynamicCastObjCClass();
  if (v13)
  {
    uint64_t v14 = (void *)v13;
    id v15 = a1;
    id v16 = [v14 foldersInFolder];
    sub_100031418(0, (unint64_t *)&unk_1006A53A0);
    unint64_t v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    id v18 = [v14 notes];
    uint64_t v19 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    unint64_t v20 = sub_10026C1C4(v19);
    swift_bridgeObjectRelease();
    if (v17 >> 62)
    {
      sub_100031418(0, (unint64_t *)&qword_1006A5380);
      swift_bridgeObjectRetain();
      unint64_t v21 = _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      sub_100031418(0, (unint64_t *)&qword_1006A5380);
      unint64_t v21 = v17;
    }
    swift_bridgeObjectRelease();
    uint64_t v22 = sub_1002699A4(v21);
    swift_bridgeObjectRelease();
    unint64_t v12 = sub_10017AB7C(v20, v22);

    swift_bridgeObjectRelease();
    return v12;
  }
  self;
  uint64_t v23 = swift_dynamicCastObjCClass();
  if (v23)
  {
    char v24 = (void *)v23;
    id v25 = a1;
    id v26 = [v24 attachments];
    if (v26)
    {
      uint64_t v27 = v26;
      sub_100031418(0, &qword_10069BDF0);
      sub_10002C8EC((unint64_t *)&qword_10069E008, &qword_10069BDF0);
      uint64_t v28 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      sub_10026BEC8(v28, &qword_10069BDF0, (uint64_t)ICAttachment_ptr, (unint64_t *)&qword_10069E008);
      unint64_t v30 = (unint64_t)v29;
    }
    else
    {
      unint64_t v30 = (unint64_t)_swiftEmptyArrayStorage;
    }
    id v38 = [v24 inlineAttachments];
    if (v38)
    {
      int v39 = v38;
      sub_100031418(0, &qword_10069BE00);
      sub_10002C8EC((unint64_t *)&qword_1006A0F38, &qword_10069BE00);
      uint64_t v40 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      sub_10026BEC8(v40, &qword_10069BE00, (uint64_t)ICInlineAttachment_ptr, (unint64_t *)&qword_1006A0F38);
      unint64_t v42 = (unint64_t)v41;
      if (!(v30 >> 62))
      {
LABEL_16:
        swift_bridgeObjectRetain();
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
        sub_100031418(0, (unint64_t *)&qword_1006A5380);
        unint64_t v43 = v30;
LABEL_17:
        swift_bridgeObjectRelease();
        uint64_t v44 = sub_1002699A4(v43);
        swift_bridgeObjectRelease();
        if (v42 >> 62)
        {
          sub_100031418(0, (unint64_t *)&qword_1006A5380);
          swift_bridgeObjectRetain();
          unint64_t v45 = _bridgeCocoaArray<A>(_:)();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRetain();
          dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
          sub_100031418(0, (unint64_t *)&qword_1006A5380);
          unint64_t v45 = v42;
        }
        swift_bridgeObjectRelease();
        unint64_t v12 = sub_10017AB7C(v45, v44);

        swift_bridgeObjectRelease();
        return v12;
      }
    }
    else
    {
      unint64_t v42 = (unint64_t)_swiftEmptyArrayStorage;
      if (!(v30 >> 62)) {
        goto LABEL_16;
      }
    }
    sub_100031418(0, (unint64_t *)&qword_1006A5380);
    swift_bridgeObjectRetain();
    unint64_t v43 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  self;
  uint64_t v31 = swift_dynamicCastObjCClass();
  if (!v31) {
    return 0;
  }
  uint64_t v32 = (void *)v31;
  id v33 = a1;
  id v34 = [v32 media];
  if (v34)
  {
    id v35 = v34;
    sub_10002F214(&qword_10069BA00);
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_100529F20;
    *(void *)(v36 + 32) = v35;
    char v69 = (void *)v36;
    specialized Array._endMutation()();
    unint64_t v37 = (unint64_t)v69;
  }
  else
  {
    unint64_t v37 = (unint64_t)_swiftEmptyArrayStorage;
  }
  id v46 = [v32 subAttachments:v69];
  if (v46)
  {
    uint64_t v47 = v46;
    sub_100031418(0, &qword_10069BDF0);
    sub_10002C8EC((unint64_t *)&qword_10069E008, &qword_10069BDF0);
    uint64_t v48 = (void *)static Set._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 {
         && _CocoaArrayWrapper.endIndex.getter())
  }
  {
    sub_1001581AC((unint64_t)_swiftEmptyArrayStorage);
    uint64_t v48 = v67;
  }
  else
  {
    uint64_t v48 = &_swiftEmptySetSingleton;
  }
  id v49 = [v32 inlineAttachments];
  if (v49)
  {
    uint64_t v50 = v49;
    sub_100031418(0, &qword_10069BE00);
    sub_10002C8EC((unint64_t *)&qword_1006A0F38, &qword_10069BE00);
    uint64_t v51 = (void *)static Set._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 {
         && _CocoaArrayWrapper.endIndex.getter())
  }
  {
    sub_10015852C((unint64_t)_swiftEmptyArrayStorage);
    uint64_t v51 = v68;
  }
  else
  {
    uint64_t v51 = &_swiftEmptySetSingleton;
  }
  id v52 = [v32 previewImages];
  if (v52)
  {
    char v53 = v52;
    uint64_t v54 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    unint64_t v55 = sub_10026C1C4(v54);
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v55 = (unint64_t)_swiftEmptyArrayStorage;
  }
  if (v37 >> 62)
  {
    sub_100031418(0, (unint64_t *)&qword_1006A5380);
    swift_bridgeObjectRetain();
    unint64_t v56 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_100031418(0, (unint64_t *)&qword_1006A5380);
    unint64_t v56 = v37;
  }
  swift_bridgeObjectRelease();
  unint64_t v57 = (void *)sub_1002699A4(v56);
  swift_bridgeObjectRelease();
  unint64_t v58 = sub_100332D78((uint64_t)v48);
  swift_bridgeObjectRelease();
  sub_1001766AC(v58, v57);
  Swift::Int v60 = v59;
  unint64_t v61 = sub_100332D9C((uint64_t)v51);
  swift_bridgeObjectRelease();
  sub_1001766AC(v61, v60);
  uint64_t v63 = v62;
  if (v55 >> 62)
  {
    sub_100031418(0, (unint64_t *)&qword_1006A5380);
    swift_bridgeObjectRetain();
    unint64_t v64 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_100031418(0, (unint64_t *)&qword_1006A5380);
    unint64_t v64 = v55;
  }
  swift_bridgeObjectRelease();
  unint64_t v12 = sub_10017AB7C(v64, v63);
  swift_bridgeObjectRelease();
  if ((v12 & 0xC000000000000001) != 0) {
    uint64_t v65 = __CocoaSet.count.getter();
  }
  else {
    uint64_t v65 = *(void *)(v12 + 16);
  }

  if (!v65)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v12;
}

uint64_t sub_100271A1C(void *a1)
{
  self;
  uint64_t v2 = swift_dynamicCastObjCClass();
  if (v2)
  {
    int v3 = (void *)v2;
    id v4 = a1;
    id v5 = [v3 localizedName];
LABEL_3:
    id v6 = v5;
    goto LABEL_4;
  }
  self;
  uint64_t v10 = swift_dynamicCastObjCClass();
  if (v10)
  {
    unint64_t v11 = (void *)v10;
    id v4 = a1;
    id v6 = [v11 displayText];
    if (!v6)
    {

      return 0x67617468736148;
    }
LABEL_4:
    id v7 = v6;
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();

    return v8;
  }
  self;
  uint64_t v12 = swift_dynamicCastObjCClass();
  if (v12)
  {
    uint64_t v13 = (void *)v12;
    id v4 = a1;
    id v5 = [v13 title];
    goto LABEL_3;
  }
  self;
  uint64_t v14 = swift_dynamicCastObjCClass();
  if (v14)
  {
    id v15 = (void *)v14;
    id v4 = a1;
    id v6 = [v15 title];
    if (!v6)
    {

      return 1702129486;
    }
    goto LABEL_4;
  }
  self;
  uint64_t v16 = swift_dynamicCastObjCClass();
  if (v16)
  {
    unint64_t v17 = (void *)v16;
    id v4 = a1;
    id v6 = [v17 title];
    if (v6) {
      goto LABEL_4;
    }
    id v5 = [v17 defaultTitle];
    goto LABEL_3;
  }
  self;
  uint64_t v18 = swift_dynamicCastObjCClass();
  if (v18)
  {
    uint64_t v19 = (void *)v18;
    id v4 = a1;
    id v5 = [v19 displayText];
    goto LABEL_3;
  }
  self;
  uint64_t v20 = swift_dynamicCastObjCClass();
  if (!v20)
  {
    self;
    if (swift_dynamicCastObjCClass()) {
      return 0x616964654DLL;
    }
    id v32 = [a1 shareTitle];
    if (!v32) {
      return 0x7463656A624FLL;
    }
    id v33 = v32;
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();

    return v8;
  }
  unint64_t v21 = (void *)v20;
  id v22 = a1;
  uint64_t result = (uint64_t)[v21 width];
  if ((~*(void *)&v23 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_36;
  }
  if (v23 <= -9.22337204e18)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if (v23 >= 9.22337204e18)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  uint64_t v34 = dispatch thunk of CustomStringConvertible.description.getter();
  v24._countAndFlagsBits = 120;
  v24._object = (void *)0xE100000000000000;
  String.append(_:)(v24);
  uint64_t result = (uint64_t)[v21 height];
  if ((~*(void *)&v25 & 0x7FF0000000000000) == 0)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  if (v25 <= -9.22337204e18)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  if (v25 >= 9.22337204e18)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v26._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v26);
  swift_bridgeObjectRelease();
  v27._countAndFlagsBits = 64;
  v27._object = (void *)0xE100000000000000;
  String.append(_:)(v27);
  uint64_t result = (uint64_t)[v21 scale];
  if ((~*(void *)&v28 & 0x7FF0000000000000) == 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (v28 <= -9.22337204e18)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  if (v28 < 9.22337204e18)
  {
    v29._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v29);
    swift_bridgeObjectRelease();
    v30._countAndFlagsBits = 11640;
    v30._object = (void *)0xE200000000000000;
    String.append(_:)(v30);
    [v21 appearanceType];
    v31._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v31);

    swift_bridgeObjectRelease();
    return v34;
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_100271ED8(void *a1)
{
  unint64_t v2 = 0xD000000000000013;
  if (([a1 needsInitialFetchFromCloud] & 1) != 0
    || ([a1 needsToBeFetchedFromCloud] & 1) != 0)
  {
    return 0xD000000000000015;
  }
  if (![a1 hasAllMandatoryFields]) {
    return 0x63692E6B72616D78;
  }
  if (([a1 needsToBePushedToCloud] & 1) == 0
    && ([a1 needsToBeDeletedFromCloud] & 1) == 0)
  {
    if ([a1 isSharedViaICloud]) {
      return 0x692E6E6F73726570;
    }
    else {
      return 0xD000000000000010;
    }
  }
  return v2;
}

uint64_t sub_10027200C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100272074(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s6ObjectVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1002720D8()
{
  return sub_1002721BC();
}

uint64_t type metadata accessor for FolderComposerFilterCellDateCreated()
{
  return self;
}

unint64_t sub_1002721BC()
{
  unint64_t result = qword_1006A0F68;
  if (!qword_1006A0F68)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1006A0F68);
  }
  return result;
}

uint64_t sub_1002721FC()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100032974(v0, qword_1006A0F70);
  sub_10003293C(v0, (uint64_t)qword_1006A0F70);
  return static Logger.hashtag.getter();
}

id sub_1002722D4(unint64_t a1, char a2)
{
  *(unsigned char *)(v2 + OBJC_IVAR____TtC11MobileNotes26TagDeletionAlertController_shouldSendNotification) = a2;
  sub_10044A28C(a1);
  if (v4)
  {
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v5 = 0;
  }
  id v6 = [self alertControllerWithTitle:v5 message:0 preferredStyle:0];

  id v7 = sub_10027431C(a1);
  [v6 addAction:v7];
  id v8 = sub_100274B28();
  [v6 addAction:v8];

  return v6;
}

uint64_t sub_100272434(unint64_t a1)
{
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  id v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v18 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v18 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v18 - v13;
  sub_10044A180(a1);
  LocalizedStringResource.init(stringLiteral:)();
  sub_10044A28C(a1);
  LocalizedStringResource.init(stringLiteral:)();
  id v15 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v15(v9, v14, v2);
  v15(v6, v12, v2);
  IntentDialog.init(full:supporting:)();
  uint64_t v16 = *(void (**)(char *, uint64_t))(v3 + 8);
  v16(v12, v2);
  return ((uint64_t (*)(char *, uint64_t))v16)(v14, v2);
}

uint64_t sub_1002725F8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v58 = a2;
  uint64_t v5 = type metadata accessor for LocalizedStringResource();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v63 = (char *)&v58 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v58 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v58 - v15;
  id v17 = [self sharedContext];
  if (v17)
  {
    uint64_t v18 = v17;
    id v19 = [v17 managedObjectContext];
  }
  else
  {
    id v19 = 0;
  }
  unint64_t v62 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v20 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  id v68 = v19;
  uint64_t v65 = v14;
  uint64_t v66 = v5;
  uint64_t v60 = a3;
  uint64_t v61 = v6;
  unint64_t v59 = v9;
  unint64_t v64 = v16;
  if (v20)
  {
    if (v20 >= 1)
    {
      uint64_t v21 = 0;
      unint64_t v22 = a1 & 0xC000000000000001;
      char v69 = _swiftEmptyArrayStorage;
      double v23 = &selRef_isShared;
      unint64_t v67 = a1;
      while (1)
      {
        if (v22)
        {
          id v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          if (v19) {
            goto LABEL_16;
          }
        }
        else
        {
          id v25 = *(id *)(a1 + 8 * v21 + 32);
          if (v19)
          {
LABEL_16:
            id v26 = [v19 v23[481] v25 v58];
            if (v26)
            {
              id v27 = v26;
              self;
              double v28 = (void *)swift_dynamicCastObjCClass();
              if (v28)
              {
                Swift::String v29 = v23;
                id v30 = [v28 title];
                uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                uint64_t v33 = v32;

                if (swift_isUniquelyReferenced_nonNull_native()) {
                  uint64_t v34 = v69;
                }
                else {
                  uint64_t v34 = sub_1001A847C(0, v69[2] + 1, 1, v69);
                }
                unint64_t v36 = v34[2];
                unint64_t v35 = v34[3];
                if (v36 >= v35 >> 1) {
                  uint64_t v34 = sub_1001A847C((void *)(v35 > 1), v36 + 1, 1, v34);
                }
                v34[2] = v36 + 1;
                char v69 = v34;
                unint64_t v37 = &v34[2 * v36];
                v37[4] = v31;
                v37[5] = v33;
                Swift::String v24 = v25;
                id v25 = v27;
                double v23 = v29;
                a1 = v67;
                id v19 = v68;
              }
              else
              {
                Swift::String v24 = v27;
              }
            }
          }
        }
        ++v21;

        if (v20 == v21) {
          goto LABEL_25;
        }
      }
    }
    __break(1u);
    goto LABEL_41;
  }
  char v69 = _swiftEmptyArrayStorage;
LABEL_25:
  swift_bridgeObjectRelease();
  if (v62)
  {
    swift_bridgeObjectRetain();
    uint64_t v38 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v38 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  a3 = v61;
  unint64_t v39 = v58;
  uint64_t v14 = v59;
  id v40 = [self mainBundle];
  if (v38 < 2)
  {
    NSString v44 = String._bridgeToObjectiveC()();
    id v45 = [v40 localizedStringForKey:v44 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    if (v69[2])
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      NSString v46 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v47 = [v46 ic_quotedString];

      uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v50 = v49;

      if (!(v39 >> 62))
      {
LABEL_34:
        uint64_t v51 = *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_35:
        sub_10044BA7C(v48, v50, v51);
        goto LABEL_36;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v48 = 0;
      uint64_t v50 = 0;
      if (!(v39 >> 62)) {
        goto LABEL_34;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v51 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  NSString v41 = String._bridgeToObjectiveC()();
  id v42 = [v40 localizedStringForKey:v41 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v39 >> 62)
  {
LABEL_41:
    swift_bridgeObjectRetain();
    uint64_t v43 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
  uint64_t v43 = *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_31:
  sub_10044B7C0((uint64_t)v69, v43, 1);
LABEL_36:
  swift_bridgeObjectRelease();
  id v52 = v64;
  LocalizedStringResource.init(stringLiteral:)();
  char v53 = v65;
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v54 = *(void (**)(char *, char *, uint64_t))(a3 + 16);
  uint64_t v55 = v66;
  v54(v63, v52, v66);
  v54(v14, v53, v55);
  IntentDialog.init(full:supporting:)();

  unint64_t v56 = *(void (**)(char *, uint64_t))(a3 + 8);
  v56(v53, v55);
  return ((uint64_t (*)(char *, uint64_t))v56)(v52, v55);
}

void sub_100272C5C(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)&v2[OBJC_IVAR____TtC11MobileNotes26TagDeletionAlertController_workerContext];
  if (!v4) {
    return;
  }
  uint64_t v5 = v2;
  id v45 = *(id *)&v2[OBJC_IVAR____TtC11MobileNotes26TagDeletionAlertController_workerContext];
  if (a1 >> 62)
  {
    id v43 = v4;
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_4;
    }
LABEL_32:

    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id v8 = v4;
  swift_bridgeObjectRetain();
  if (!v7) {
    goto LABEL_32;
  }
LABEL_4:
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_37;
    }
    id v9 = *(id *)(a1 + 32);
  }
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  id v11 = [v10 displayText];

  if (v11)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v13 = [v12 ic_withHashtagPrefix];

    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v16 = v15;

    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v17 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (v17 == 1)
    {
      id v18 = [self mainBundle];
      NSString v19 = String._bridgeToObjectiveC()();
      id v20 = [v18 localizedStringForKey:v19 value:0 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_10002F214((uint64_t *)&unk_1006A1950);
      uint64_t v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_100524D10;
      *(void *)(v21 + 56) = &type metadata for String;
      *(void *)(v21 + 64) = sub_1001BBFD8();
      *(void *)(v21 + 32) = v14;
      *(void *)(v21 + 40) = v16;
      static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      id v22 = [self mainBundle];
      NSString v23 = String._bridgeToObjectiveC()();
      id v24 = [v22 localizedStringForKey:v23 value:0 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    id v25 = [objc_allocWithZone((Class)ICLongRunningTaskController) init];
    id v26 = *(void **)&v5[OBJC_IVAR____TtC11MobileNotes26TagDeletionAlertController_viewControllerManager];
    if (v26 && (id v27 = [v26 window]) != 0)
    {
      double v28 = v27;
      id v29 = [v27 rootViewController];
    }
    else
    {
      id v29 = 0;
    }
    [v25 setViewControllerToPresentFrom:v29 a2];

    [v25 setShouldShowCancelButton:0];
    [v25 setIndeterminate:1];
    NSString v30 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v25 setProgressString:v30];

    uint64_t v31 = (void **)_swiftEmptyArrayStorage;
    if (!v17)
    {
LABEL_29:
      unint64_t v36 = (void *)swift_allocObject();
      v36[2] = v45;
      v36[3] = v5;
      v36[4] = a1;
      v36[5] = v44;
      uint64_t v50 = sub_100274DEC;
      uint64_t v51 = v36;
      aBlocid k = _NSConcreteStackBlock;
      uint64_t v47 = 1107296256;
      uint64_t v48 = sub_100384B64;
      uint64_t v49 = &unk_100632300;
      unint64_t v37 = _Block_copy(&aBlock);
      swift_bridgeObjectRetain();
      id v38 = v45;
      swift_bridgeObjectRetain();
      unint64_t v39 = v5;
      swift_release();
      uint64_t v40 = swift_allocObject();
      *(void *)(v40 + 16) = v39;
      *(void *)(v40 + 24) = v31;
      uint64_t v50 = sub_100274E38;
      uint64_t v51 = (void *)v40;
      aBlocid k = _NSConcreteStackBlock;
      uint64_t v47 = 1107296256;
      uint64_t v48 = sub_100289EA0;
      uint64_t v49 = &unk_100632350;
      NSString v41 = _Block_copy(&aBlock);
      id v42 = v39;
      swift_release();
      [v25 startTask:v37 completionBlock:v41];
      _Block_release(v41);
      _Block_release(v37);

      return;
    }
    aBlocid k = (void **)_swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    if ((v17 & 0x8000000000000000) == 0)
    {
      uint64_t v32 = 0;
      do
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v33 = *(id *)(a1 + 8 * v32 + 32);
        }
        uint64_t v34 = v33;
        ++v32;
        id v35 = [v33 objectID];

        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
      while (v17 != v32);
      uint64_t v31 = aBlock;
      goto LABEL_29;
    }
LABEL_37:
    __break(1u);
    return;
  }
}

uint64_t sub_1002732F8(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  id v9 = (void *)swift_allocObject();
  v9[2] = a3;
  v9[3] = a4;
  v9[4] = a2;
  v9[5] = a5;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_100274E90;
  *(void *)(v10 + 24) = v9;
  v15[4] = sub_100031D5C;
  v15[5] = v10;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  _OWORD v15[2] = sub_100031D30;
  v15[3] = &unk_1006323C8;
  id v11 = _Block_copy(v15);
  swift_bridgeObjectRetain();
  swift_retain();
  id v12 = a3;
  swift_bridgeObjectRetain();
  id v13 = a2;
  swift_release();
  [v13 performBlockAndWait:v11];
  _Block_release(v11);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v13) {
    __break(1u);
  }
  return result;
}

id sub_10027347C(uint64_t a1, unint64_t a2, void *a3, unint64_t a4)
{
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC11MobileNotes26TagDeletionAlertController_shouldSendNotification) == 1)
  {
    id v8 = [self defaultCenter];
    NSString v9 = String._bridgeToObjectiveC()();
    [v8 postNotificationName:v9 object:0];
  }
  unint64_t v34 = a4;
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    if (!v10) {
      goto LABEL_24;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v10) {
      goto LABEL_24;
    }
  }
  sub_100031418(0, (unint64_t *)&qword_1006A49F0);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  if (v10 < 1)
  {
    __break(1u);
    goto LABEL_37;
  }
  id v12 = (void *)ObjCClassFromMetadata;
  uint64_t v13 = 0;
  unint64_t v37 = (uint64_t *)(a1 + OBJC_IVAR____TtC11MobileNotes26TagDeletionAlertController_deletionMethod);
  uint64_t v38 = OBJC_IVAR____TtC11MobileNotes26TagDeletionAlertController_eventReporter;
  id v35 = (void *)ObjCClassFromMetadata;
  uint64_t v36 = v10;
  do
  {
    if ((a2 & 0xC000000000000001) != 0) {
      id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v14 = *(id *)(a2 + 8 * v13 + 32);
    }
    uint64_t v15 = v14;
    id v16 = [v14 objectID];
    id v17 = [v12 ic_existingObjectWithID:v16 context:a3];

    if (v17)
    {
      if (qword_10069ADE8 != -1) {
        swift_once();
      }
      uint64_t v18 = type metadata accessor for Logger();
      sub_10003293C(v18, (uint64_t)qword_1006A0F70);
      NSString v19 = v17;
      id v20 = Logger.logObject.getter();
      os_log_type_t v21 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = swift_slowAlloc();
        NSString v23 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v22 = 138412290;
        *(void *)(v22 + 4) = v19;
        *NSString v23 = v17;
        _os_log_impl((void *)&_mh_execute_header, v20, v21, "Removing hashtag usage {hashtag: %@}", (uint8_t *)v22, 0xCu);
        sub_10002F214(&qword_10069FD50);
        swift_arrayDestroy();
        id v12 = v35;
        swift_slowDealloc();
        uint64_t v10 = v36;
        swift_slowDealloc();
      }
      else
      {

        id v20 = v19;
      }

      [v19 removeUsage];
      [v19 markForDeletion];
      id v24 = *(void **)(a1 + v38);
      if (v24)
      {
        if (*((unsigned char *)v37 + 8)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = *v37;
        }
        [v24 submitHashtagDeleteEvent:0 approachEnum:v25];
      }
    }
    ++v13;
  }
  while (v10 != v13);
LABEL_24:
  swift_bridgeObjectRelease();
  unint64_t v4 = v34;
  if (v34)
  {
    if (!(v34 >> 62))
    {
      uint64_t v26 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id result = (id)swift_bridgeObjectRetain();
      if (v26)
      {
LABEL_27:
        if (v26 < 1)
        {
          __break(1u);
          return result;
        }
        for (uint64_t i = 0; i != v26; ++i)
        {
          if ((v4 & 0xC000000000000001) != 0) {
            id v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v31 = *(id *)(v4 + 8 * i + 32);
          }
          NSString v30 = v31;
          id v32 = [a3 objectWithID:v31];
          self;
          uint64_t v33 = swift_dynamicCastObjCClass();
          if (v33)
          {
            [self deleteFolder:v33];
            id v29 = v32;
          }
          else
          {
            id v29 = v30;
            NSString v30 = v32;
          }
        }
      }
LABEL_38:
      swift_bridgeObjectRelease();
      goto LABEL_39;
    }
LABEL_37:
    swift_bridgeObjectRetain();
    id result = (id)_CocoaArrayWrapper.endIndex.getter();
    uint64_t v26 = (uint64_t)result;
    if (result) {
      goto LABEL_27;
    }
    goto LABEL_38;
  }
LABEL_39:

  return [a3 ic_save];
}

void *NSNotification.TagCollectionViewWillDeleteTags.unsafeMutableAddressor()
{
  return &static NSNotification.TagCollectionViewWillDeleteTags;
}

void sub_100273920(uint64_t a1, uint64_t a2)
{
  id v3 = [self sharedContext];
  if (v3)
  {
    unint64_t v4 = v3;
    id v5 = [v3 managedObjectContext];

    [v5 ic_save];
  }
  if (*(unsigned char *)(a2 + OBJC_IVAR____TtC11MobileNotes26TagDeletionAlertController_shouldSendNotification) == 1)
  {
    id v6 = [self defaultCenter];
    NSString v7 = String._bridgeToObjectiveC()();
    sub_100031418(0, (unint64_t *)&qword_10069E810);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    [v6 postNotificationName:v7 object:isa];
  }
}

void *NSNotification.TagCollectionViewDidDeleteTags.unsafeMutableAddressor()
{
  return &static NSNotification.TagCollectionViewDidDeleteTags;
}

id sub_100273A80(unint64_t a1, unint64_t a2)
{
  unint64_t v4 = a1;
  unint64_t v71 = a1 >> 62;
  if (a1 >> 62) {
    goto LABEL_39;
  }
  uint64_t v75 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id v5 = v2;
  swift_bridgeObjectRetain();
  while (1)
  {
    unint64_t v72 = a2;
    uint64_t v73 = v2;
    unint64_t v74 = v4;
    if (!v75) {
      break;
    }
    a2 = v4 & 0xC000000000000001;
    id v6 = _swiftEmptyArrayStorage;
    uint64_t v7 = OBJC_IVAR____TtC11MobileNotes26TagDeletionAlertController_viewContext;
    uint64_t v8 = 4;
    while (1)
    {
      id v9 = a2 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v4 + 8 * v8);
      uint64_t v10 = v9;
      uint64_t v11 = v8 - 3;
      if (__OFADD__(v8 - 4, 1)) {
        break;
      }
      id v12 = *(void **)&v2[v7];
      if (v12 && (id v13 = [v12 objectWithID:v10]) != 0)
      {
        id v14 = v13;
        self;
        uint64_t v15 = (void *)swift_dynamicCastObjCClass();
        if (v15)
        {
          id v16 = v6;
          id v17 = [v15 title];
          uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v20 = v19;

          id v6 = v16;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v6 = sub_1001A847C(0, v16[2] + 1, 1, v16);
          }
          unint64_t v22 = v6[2];
          unint64_t v21 = v6[3];
          uint64_t v2 = v73;
          if (v22 >= v21 >> 1) {
            id v6 = sub_1001A847C((void *)(v21 > 1), v22 + 1, 1, v6);
          }
          uint64_t v6[2] = v22 + 1;
          NSString v23 = &v6[2 * v22];
          v23[4] = v18;
          v23[5] = v20;
          unint64_t v4 = v74;
        }
        else
        {
        }
      }
      else
      {
      }
      ++v8;
      if (v11 == v75) {
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_39:
    unsigned int v70 = v2;
    swift_bridgeObjectRetain();
    uint64_t v75 = _CocoaArrayWrapper.endIndex.getter();
  }
  id v6 = _swiftEmptyArrayStorage;
LABEL_21:

  swift_bridgeObjectRelease();
  uint64_t v24 = v6[2];
  if (v24)
  {
    uint64_t v25 = v6;
    uint64_t v26 = self;
    swift_bridgeObjectRetain();
    id v27 = [v26 mainBundle];
    NSString v28 = String._bridgeToObjectiveC()();
    id v30 = [v27 localizedStringForKey:v28 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    static String.localizedStringWithFormat(_:_:)();
    unint64_t v31 = v72;
    swift_bridgeObjectRelease();
    if (v71)
    {
      swift_bridgeObjectRetain();
      uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v32 = *(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (v32 < 2)
    {
      swift_bridgeObjectRelease();
      NSString v50 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v51 = [v50 ic_quotedString];

      uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v54 = v53;

      uint64_t v55 = self;
      swift_bridgeObjectRetain();
      id v56 = [v55 mainBundle];
      NSString v57 = String._bridgeToObjectiveC()();
      id v58 = [v56 localizedStringForKey:v57 value:0 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_10002F214((uint64_t *)&unk_1006A1950);
      uint64_t v59 = swift_allocObject();
      *(_OWORD *)(v59 + 16) = xmmword_100524D10;
      *(void *)(v59 + 56) = &type metadata for String;
      *(void *)(v59 + 64) = sub_1001BBFD8();
      *(void *)(v59 + 32) = v52;
      *(void *)(v59 + 40) = v54;
      static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      id v33 = [self mainBundle];
      NSString v34 = String._bridgeToObjectiveC()();
      id v35 = [v33 localizedStringForKey:v34 value:0 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v36 = static String.localizedStringWithFormat(_:_:)();
      uint64_t v38 = v37;
      swift_bridgeObjectRelease();
      sub_10002F214(&qword_10069D1E0);
      uint64_t v39 = swift_allocObject();
      *(_OWORD *)(v39 + 16) = xmmword_100524D10;
      *(void *)(v39 + 32) = v36;
      *(void *)(v39 + 40) = v38;
      uint64_t v40 = v25;
      swift_bridgeObjectRetain();
      uint64_t v41 = 0;
      unint64_t v42 = 0;
      do
      {
        unint64_t v43 = v42 + 1;
        uint64_t v44 = &v40[v41];
        uint64_t v46 = v40[v41 + 4];
        uint64_t v45 = v44[5];
        unint64_t v47 = *(void *)(v39 + 24);
        int64_t v48 = v42 + 2;
        swift_bridgeObjectRetain();
        if (v43 >= v47 >> 1) {
          uint64_t v39 = (uint64_t)sub_1001A847C((void *)(v47 > 1), v48, 1, (void *)v39);
        }
        *(void *)(v39 + 16) = v48;
        uint64_t v49 = v39 + v41 * 8;
        *(void *)(v49 + 48) = v46;
        *(void *)(v49 + 56) = v45;
        v41 += 2;
        unint64_t v42 = v43;
        uint64_t v40 = v25;
      }
      while (v24 != v43);
      swift_bridgeObjectRelease();
      aBlock[0] = v39;
      sub_10002F214(&qword_10069FCC8);
      sub_100274D40();
      BidirectionalCollection<>.joined(separator:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v31 = v72;
    }
    NSString v60 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v61 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v29 = [self alertControllerWithTitle:v60 message:v61 preferredStyle:1];

    if (v31 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v62 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v62 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    sub_10044BC24(v62, v32);
    uint64_t v63 = (void *)swift_allocObject();
    v63[2] = v73;
    v63[3] = v31;
    v63[4] = v74;
    unint64_t v64 = v73;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    NSString v65 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    aBlock[4] = sub_100274D14;
    aBlock[5] = v63;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_1002B6294;
    aBlock[3] = &unk_1006322B0;
    uint64_t v66 = _Block_copy(aBlock);
    swift_release();
    id v67 = [self actionWithTitle:v65 style:2 handler:v66];
    _Block_release(v66);

    [v29 addAction:v67];
    id v68 = sub_100274B28();
    [v29 addAction:v68];
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v29;
}

id sub_10027431C(uint64_t a1)
{
  id v3 = [self mainBundle];
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v3 localizedStringForKey:v4 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = v1;
  swift_bridgeObjectRetain();
  id v7 = v1;
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v12[4] = sub_100274C5C;
  v12[5] = v6;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  void v12[2] = sub_1002B6294;
  v12[3] = &unk_100632260;
  id v9 = _Block_copy(v12);
  swift_release();
  id v10 = [self actionWithTitle:v8 style:2 handler:v9];
  _Block_release(v9);

  return v10;
}

void sub_1002744C0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  NSString v4 = self;
  sub_100031418(0, (unint64_t *)&qword_1006A49F0);
  unint64_t v34 = a2;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  id v6 = [v4 smartFoldersThatWillBeDeletedAfterDeletingHashtags:isa];

  sub_100031418(0, (unint64_t *)&unk_1006A53A0);
  sub_100274C64();
  uint64_t v7 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v8 = v7 & 0xC000000000000001;
  if ((v7 & 0xC000000000000001) != 0)
  {
    uint64_t v9 = __CocoaSet.count.getter();
    id v10 = _swiftEmptyArrayStorage;
    if (!v9)
    {
LABEL_15:
      uint64_t v29 = __CocoaSet.count.getter();
      goto LABEL_17;
    }
    uint64_t v11 = v9;
    uint64_t v40 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v37 = __CocoaSet.startIndex.getter();
    uint64_t v38 = v12;
    unsigned __int8 v39 = 1;
    if ((v11 & 0x8000000000000000) == 0)
    {
LABEL_7:
      uint64_t v15 = v7 & 0xFFFFFFFFFFFFFF8;
      do
      {
        while (1)
        {
          uint64_t v21 = v15;
          uint64_t v22 = v37;
          uint64_t v23 = v38;
          uint64_t v24 = v39;
          sub_1002AEFC8(v37, v38, v39, v7);
          uint64_t v26 = v25;
          id v27 = [v25 objectID];

          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          if (v8) {
            break;
          }
          uint64_t v16 = sub_10048F4F4(v22, v23, v24, v7);
          uint64_t v18 = v17;
          char v20 = v19;
          sub_10002DA18(v22, v23, v24);
          uint64_t v37 = v16;
          uint64_t v38 = v18;
          unsigned __int8 v39 = v20 & 1;
          uint64_t v15 = v21;
          if (!--v11) {
            goto LABEL_14;
          }
        }
        if ((v24 & 1) == 0)
        {
          __break(1u);
          return;
        }
        if (__CocoaSet.Index.handleBitPattern.getter()) {
          swift_isUniquelyReferenced_nonNull_native();
        }
        sub_10002F214(&qword_1006A0FE8);
        NSString v28 = (void (*)(unsigned char *, void))Set.Index._asCocoa.modify();
        __CocoaSet.formIndex(after:isUnique:)();
        v28(v36, 0);
        --v11;
      }
      while (v11);
LABEL_14:
      sub_10002DA18(v37, v38, v39);
      id v10 = v40;
      if (!v8) {
        goto LABEL_16;
      }
      goto LABEL_15;
    }
    __break(1u);
  }
  uint64_t v11 = *(void *)(v7 + 16);
  id v10 = _swiftEmptyArrayStorage;
  if (v11)
  {
    uint64_t v40 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v37 = sub_1002AEEF8(v7);
    uint64_t v38 = v13;
    unsigned __int8 v39 = v14 & 1;
    goto LABEL_7;
  }
LABEL_16:
  uint64_t v29 = *(void *)(v7 + 16);
LABEL_17:
  swift_bridgeObjectRelease();
  if (v29)
  {
    id v30 = sub_100273A80((unint64_t)v10, v34);
    swift_bridgeObjectRelease();
    if (v30)
    {
      unint64_t v31 = *(void **)(a3 + OBJC_IVAR____TtC11MobileNotes26TagDeletionAlertController_window);
      if (v31)
      {
        id v32 = [v31 rootViewController];
        if (v32)
        {
          id v33 = v32;
          [v32 presentViewController:v30 animated:1 completion:0];
        }
      }
    }
  }
  else
  {
    sub_100272C5C(v34, (uint64_t)v10);
    swift_bridgeObjectRelease();
  }
}

void TagDeletionAlertController.init()()
{
}

id TagDeletionAlertController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TagDeletionAlertController();
  return [super dealloc];
}

uint64_t type metadata accessor for TagDeletionAlertController()
{
  return self;
}

unint64_t static NSNotification.TagCollectionViewWillDeleteTags.getter()
{
  return 0xD00000000000001FLL;
}

unint64_t static NSNotification.TagCollectionViewDidDeleteTags.getter()
{
  return 0xD00000000000001ELL;
}

id sub_1002749A8(void *a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v9 = self;
  id v10 = v4;
  id v11 = [v9 sharedContext];
  if (v11)
  {
    uint64_t v12 = v11;
    id v13 = [v11 workerManagedObjectContext];
  }
  else
  {
    id v13 = 0;
  }
  *(void *)&v10[OBJC_IVAR____TtC11MobileNotes26TagDeletionAlertController_workerContext] = v13;
  id v14 = [v9 sharedContext];
  if (v14)
  {
    uint64_t v15 = v14;
    id v16 = [v14 managedObjectContext];
  }
  else
  {
    id v16 = 0;
  }
  *(void *)&v10[OBJC_IVAR____TtC11MobileNotes26TagDeletionAlertController_viewContext] = v16;
  uint64_t v17 = &v10[OBJC_IVAR____TtC11MobileNotes26TagDeletionAlertController_deletionMethod];
  *(void *)uint64_t v17 = 0;
  v17[8] = 0;
  v10[OBJC_IVAR____TtC11MobileNotes26TagDeletionAlertController_shouldSendNotification] = 1;
  *(void *)&v10[OBJC_IVAR____TtC11MobileNotes26TagDeletionAlertController_viewControllerManager] = a1;
  *(void *)&v10[OBJC_IVAR____TtC11MobileNotes26TagDeletionAlertController_window] = a2;
  *(void *)&v10[OBJC_IVAR____TtC11MobileNotes26TagDeletionAlertController_eventReporter] = a3;
  *(void *)uint64_t v17 = a4;
  v17[8] = 0;
  id v18 = a3;
  id v19 = a1;
  id v20 = a2;

  v22.receiver = v10;
  v22.super_class = (Class)type metadata accessor for TagDeletionAlertController();
  return [super init];
}

id sub_100274B28()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 localizedStringForKey:v1 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v4 = [self actionWithTitle:v3 style:1 handler:0];

  return v4;
}

uint64_t sub_100274C1C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100274C5C(uint64_t a1)
{
  sub_1002744C0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_100274C64()
{
  unint64_t result = qword_1006A0418;
  if (!qword_1006A0418)
  {
    sub_100031418(255, (unint64_t *)&unk_1006A53A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0418);
  }
  return result;
}

uint64_t sub_100274CCC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100274D14()
{
  sub_100272C5C(*(void *)(v0 + 24), *(void *)(v0 + 32));
}

unint64_t sub_100274D40()
{
  unint64_t result = qword_10069FCD0;
  if (!qword_10069FCD0)
  {
    sub_10001DFF4(&qword_10069FCC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069FCD0);
  }
  return result;
}

uint64_t sub_100274D9C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100274DEC(uint64_t a1)
{
  return sub_1002732F8(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_100274DF8()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100274E38(uint64_t a1)
{
  sub_100273920(a1, *(void *)(v1 + 16));
}

uint64_t sub_100274E40()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

id sub_100274E90()
{
  return sub_10027347C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_100274E9C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100274ED0(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x6B636568636E75;
    }
    else {
      uint64_t v3 = 0x656C67676F74;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE700000000000000;
    }
    else {
      unint64_t v4 = 0xE600000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x6B636568636E75;
      }
      else {
        uint64_t v6 = 0x656C67676F74;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE700000000000000;
      }
      else {
        unint64_t v7 = 0xE600000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE500000000000000;
    uint64_t v3 = 0x6B63656863;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE500000000000000;
  if (v3 != 0x6B63656863)
  {
LABEL_21:
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_100274FDC(char a1, unsigned __int8 a2)
{
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v2 = 0x65766F6D6572;
    }
    else {
      uint64_t v2 = 0x656C67676F74;
    }
    unint64_t v3 = 0xE600000000000000;
    int v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1) {
        uint64_t v5 = 0x65766F6D6572;
      }
      else {
        uint64_t v5 = 0x656C67676F74;
      }
      unint64_t v6 = 0xE600000000000000;
      if (v2 != v5) {
        goto LABEL_15;
      }
      goto LABEL_13;
    }
  }
  else
  {
    unint64_t v3 = 0xE300000000000000;
    uint64_t v2 = 6579297;
    int v4 = a2;
    if (a2) {
      goto LABEL_6;
    }
  }
  unint64_t v6 = 0xE300000000000000;
  if (v2 != 6579297)
  {
LABEL_15:
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    goto LABEL_16;
  }
LABEL_13:
  if (v3 != v6) {
    goto LABEL_15;
  }
  char v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1002750D8(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 7105633;
  }
  else {
    uint64_t v2 = 7958113;
  }
  if (a2) {
    uint64_t v3 = 7105633;
  }
  else {
    uint64_t v3 = 7958113;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_100275148(char a1, char a2)
{
  unint64_t v3 = 0xE200000000000000;
  uint64_t v4 = 20565;
  switch(a1)
  {
    case 1:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v4 = 1314344772;
      break;
    case 2:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v4 = 1413891404;
      break;
    case 3:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v4 = 0x5448474952;
      break;
    default:
      break;
  }
  unint64_t v5 = 0xE200000000000000;
  uint64_t v6 = 20565;
  switch(a2)
  {
    case 1:
      unint64_t v5 = 0xE400000000000000;
      if (v4 == 1314344772) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v5 = 0xE400000000000000;
      uint64_t v6 = 1413891404;
      goto LABEL_9;
    case 3:
      unint64_t v5 = 0xE500000000000000;
      if (v4 == 0x5448474952) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v4 != v6) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v5) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_10027529C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x4F544F4850;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x4F544F4850;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x524F4C4F43;
      break;
    case 2:
      uint64_t v5 = 0x4C41435359415247;
      unint64_t v3 = 0xE900000000000045;
      break;
    case 3:
      uint64_t v5 = 0x4E415F4B43414C42;
      unint64_t v3 = 0xEF45544948575F44;
      break;
    case 4:
      uint64_t v5 = 0x414F424554494857;
      unint64_t v3 = 0xEA00000000004452;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      if (v5 == 0x524F4C4F43) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xE900000000000045;
      if (v5 != 0x4C41435359415247) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      uint64_t v2 = 0x4E415F4B43414C42;
      unint64_t v6 = 0xEF45544948575F44;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xEA00000000004452;
      if (v5 != 0x414F424554494857) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_100275478(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEF6E6F697463656CLL;
  unint64_t v3 = 0x65537463656A626FLL;
  uint64_t v4 = a1;
  unint64_t v5 = 0x65537463656A626FLL;
  unint64_t v6 = 0xEF6E6F697463656CLL;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0x8000000100548CD0;
      unint64_t v5 = 0xD000000000000012;
      break;
    case 2:
      unint64_t v5 = 0x6F697463656C6573;
      unint64_t v6 = 0xEF6E6F736165526ELL;
      break;
    case 3:
      unint64_t v5 = 0xD000000000000035;
      char v7 = "currentFirstVisibleObjectIDURLForContainerObjectIDURL";
      goto LABEL_6;
    case 4:
      unint64_t v5 = 0xD000000000000016;
      char v7 = "focusedNoteObjectIDURL";
LABEL_6:
      unint64_t v6 = (unint64_t)(v7 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0x8000000100548CD0;
      unint64_t v3 = 0xD000000000000012;
      break;
    case 2:
      unint64_t v3 = 0x6F697463656C6573;
      unint64_t v2 = 0xEF6E6F736165526ELL;
      break;
    case 3:
      unint64_t v3 = 0xD000000000000035;
      char v8 = "currentFirstVisibleObjectIDURLForContainerObjectIDURL";
      goto LABEL_12;
    case 4:
      unint64_t v3 = 0xD000000000000016;
      char v8 = "focusedNoteObjectIDURL";
LABEL_12:
      unint64_t v2 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v5 == v3 && v6 == v2) {
    char v9 = 1;
  }
  else {
    char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_100275660(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 0x4C41434F4CLL;
  }
  else {
    uint64_t v2 = 0x44554F4C43;
  }
  if (a2) {
    uint64_t v3 = 0x4C41434F4CLL;
  }
  else {
    uint64_t v3 = 0x44554F4C43;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_1002756D8(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x656C6261736964;
    }
    else {
      uint64_t v3 = 0x656C67676F74;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE700000000000000;
    }
    else {
      unint64_t v4 = 0xE600000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x656C6261736964;
      }
      else {
        uint64_t v6 = 0x656C67676F74;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE700000000000000;
      }
      else {
        unint64_t v7 = 0xE600000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE600000000000000;
    uint64_t v3 = 0x656C62616E65;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE600000000000000;
  if (v3 != 0x656C62616E65)
  {
LABEL_21:
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1002757E4(char a1, unsigned __int8 a2)
{
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v2 = 0x4853415254;
    }
    else {
      uint64_t v2 = 0x5452414D53;
    }
    unint64_t v3 = 0xE500000000000000;
    int v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1) {
        uint64_t v5 = 0x4853415254;
      }
      else {
        uint64_t v5 = 0x5452414D53;
      }
      unint64_t v6 = 0xE500000000000000;
      if (v2 != v5) {
        goto LABEL_15;
      }
      goto LABEL_13;
    }
  }
  else
  {
    unint64_t v3 = 0xE600000000000000;
    uint64_t v2 = 0x4C414D524F4ELL;
    int v4 = a2;
    if (a2) {
      goto LABEL_6;
    }
  }
  unint64_t v6 = 0xE600000000000000;
  if (v2 != 0x4C414D524F4ELL)
  {
LABEL_15:
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    goto LABEL_16;
  }
LABEL_13:
  if (v3 != v6) {
    goto LABEL_15;
  }
  char v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1002758E8(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x49444E4543534544;
  }
  else {
    uint64_t v3 = 0x4E49444E45435341;
  }
  if (v2) {
    unint64_t v4 = 0xE900000000000047;
  }
  else {
    unint64_t v4 = 0xEA0000000000474ELL;
  }
  if (a2) {
    uint64_t v5 = 0x49444E4543534544;
  }
  else {
    uint64_t v5 = 0x4E49444E45435341;
  }
  if (a2) {
    unint64_t v6 = 0xEA0000000000474ELL;
  }
  else {
    unint64_t v6 = 0xE900000000000047;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_100275998(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xEA00000000005441;
  uint64_t v3 = 0x5F44455441455243;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x4445494649444F4DLL;
    }
    else {
      uint64_t v5 = 0x454C544954;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xEB0000000054415FLL;
    }
    else {
      unint64_t v6 = 0xE500000000000000;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  uint64_t v5 = 0x5F44455441455243;
  unint64_t v6 = 0xEA00000000005441;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      uint64_t v3 = 0x4445494649444F4DLL;
    }
    else {
      uint64_t v3 = 0x454C544954;
    }
    if (v7 == 1) {
      unint64_t v2 = 0xEB0000000054415FLL;
    }
    else {
      unint64_t v2 = 0xE500000000000000;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_100275ABC(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x49414E424D554854;
    }
    else {
      uint64_t v3 = 0x4D554944454DLL;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE90000000000004CLL;
    }
    else {
      unint64_t v4 = 0xE600000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x49414E424D554854;
      }
      else {
        uint64_t v6 = 0x4D554944454DLL;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE90000000000004CLL;
      }
      else {
        unint64_t v7 = 0xE600000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x57454956455250;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x57454956455250)
  {
LABEL_21:
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_100275BD8(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1162760014;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 1162760014;
  switch(v4)
  {
    case 1:
      uint64_t v6 = 0x5F4C4C414D53;
      goto LABEL_5;
    case 2:
      uint64_t v5 = 0x475F4D554944454DLL;
      uint64_t v7 = 4475218;
      goto LABEL_10;
    case 3:
      uint64_t v6 = 0x5F454752414CLL;
LABEL_5:
      uint64_t v5 = v6 & 0xFFFFFFFFFFFFLL | 0x5247000000000000;
      unint64_t v3 = 0xEA00000000004449;
      break;
    case 4:
      uint64_t v8 = 0x5F4C4C414D53;
      goto LABEL_9;
    case 5:
      uint64_t v5 = 0x4C5F4D554944454DLL;
      unint64_t v3 = 0xEC00000053454E49;
      break;
    case 6:
      uint64_t v8 = 0x5F454752414CLL;
LABEL_9:
      uint64_t v5 = v8 & 0xFFFFFFFFFFFFLL | 0x494C000000000000;
      uint64_t v7 = 5457230;
LABEL_10:
      unint64_t v3 = v7 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
      break;
    default:
      break;
  }
  unint64_t v9 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      uint64_t v10 = 0x5F4C4C414D53;
      goto LABEL_15;
    case 2:
      uint64_t v2 = 0x475F4D554944454DLL;
      uint64_t v11 = 4475218;
      goto LABEL_20;
    case 3:
      uint64_t v10 = 0x5F454752414CLL;
LABEL_15:
      uint64_t v2 = v10 & 0xFFFFFFFFFFFFLL | 0x5247000000000000;
      unint64_t v9 = 0xEA00000000004449;
      break;
    case 4:
      uint64_t v12 = 0x5F4C4C414D53;
      goto LABEL_19;
    case 5:
      uint64_t v2 = 0x4C5F4D554944454DLL;
      unint64_t v9 = 0xEC00000053454E49;
      break;
    case 6:
      uint64_t v12 = 0x5F454752414CLL;
LABEL_19:
      uint64_t v2 = v12 & 0xFFFFFFFFFFFFLL | 0x494C000000000000;
      uint64_t v11 = 5457230;
LABEL_20:
      unint64_t v9 = v11 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
      break;
    default:
      break;
  }
  if (v5 == v2 && v3 == v9) {
    char v13 = 1;
  }
  else {
    char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13 & 1;
}

uint64_t sub_100275E00(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x544847494CLL;
  }
  else {
    uint64_t v3 = 0x544C5541464544;
  }
  if (v2) {
    unint64_t v4 = 0xE700000000000000;
  }
  else {
    unint64_t v4 = 0xE500000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x544847494CLL;
  }
  else {
    uint64_t v5 = 0x544C5541464544;
  }
  if (a2) {
    unint64_t v6 = 0xE500000000000000;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_100275EA4(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x65766F6D6572;
  }
  else {
    uint64_t v3 = 6579297;
  }
  if (v2) {
    unint64_t v4 = 0xE300000000000000;
  }
  else {
    unint64_t v4 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x65766F6D6572;
  }
  else {
    uint64_t v5 = 6579297;
  }
  if (a2) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xE300000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_100275F40(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEB00000000657A69;
  uint64_t v3 = 0x53746C7561666564;
  uint64_t v4 = a1;
  uint64_t v5 = 0x53746C7561666564;
  unint64_t v6 = 0xEB00000000657A69;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v5 = 0x6C6C616D73;
      break;
    case 2:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v5 = 0x6D756964656DLL;
      break;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v5 = 0x656772616CLL;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      if (v5 == 0x6C6C616D73) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x6D756964656DLL;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0xE500000000000000;
      if (v5 == 0x656772616CLL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1002760C8(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x776569567473696CLL;
  }
  else {
    uint64_t v3 = 0x567972656C6C6167;
  }
  if (v2) {
    unint64_t v4 = 0xEB00000000776569;
  }
  else {
    unint64_t v4 = 0xE800000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x776569567473696CLL;
  }
  else {
    uint64_t v5 = 0x567972656C6C6167;
  }
  if (a2) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xEB00000000776569;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_100276178(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000017;
  unint64_t v3 = 0x8000000100549030;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000017;
  switch(v4)
  {
    case 1:
      unint64_t v6 = "com.apple.notes.account";
      goto LABEL_6;
    case 2:
      unint64_t v5 = 0xD000000000000016;
      unint64_t v6 = "com.apple.notes.folder";
      goto LABEL_6;
    case 3:
      unint64_t v5 = 0xD000000000000014;
      unint64_t v6 = "com.apple.notes.note";
      goto LABEL_6;
    case 4:
      unint64_t v5 = 0xD00000000000001ALL;
      unint64_t v6 = "com.apple.notes.attachment";
LABEL_6:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0x8000000100549030;
  switch(a2)
  {
    case 1:
      uint64_t v8 = "com.apple.notes.account";
      goto LABEL_12;
    case 2:
      unint64_t v2 = 0xD000000000000016;
      uint64_t v8 = "com.apple.notes.folder";
      goto LABEL_12;
    case 3:
      unint64_t v2 = 0xD000000000000014;
      uint64_t v8 = "com.apple.notes.note";
      goto LABEL_12;
    case 4:
      unint64_t v2 = 0xD00000000000001ALL;
      uint64_t v8 = "com.apple.notes.attachment";
LABEL_12:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v5 == v2 && v3 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_1002762F4(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xE900000000000073;
  uint64_t v3 = 0x65746F4E6C6C6163;
  uint64_t v4 = a1;
  uint64_t v5 = 0x65746F4E6C6C6163;
  unint64_t v6 = 0xE900000000000073;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x65746F4E6874616DLL;
      break;
    case 2:
      uint64_t v5 = 0x746F4E6B63697571;
      unint64_t v6 = 0xEA00000000007365;
      break;
    case 3:
      uint64_t v5 = 0x6957646572616873;
      unint64_t v6 = 0xED0000756F596874;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      if (v5 == 0x65746F4E6874616DLL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v3 = 0x746F4E6B63697571;
      unint64_t v2 = 0xEA00000000007365;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0xED0000756F596874;
      if (v5 == 0x6957646572616873) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1002764A4(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x4C41525554414ELL;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x4C41525554414ELL;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x5F4F545F5446454CLL;
      unsigned int v6 = 1212631378;
      goto LABEL_5;
    case 2:
      char v7 = "LEFT_TO_RIGHT_OVERRIDE";
      goto LABEL_7;
    case 3:
      unint64_t v5 = 0x4F545F5448474952;
      unsigned int v6 = 1178946655;
LABEL_5:
      unint64_t v3 = v6 | 0xED00005400000000;
      break;
    case 4:
      char v7 = "RIGHT_TO_LEFT_OVERRIDE";
LABEL_7:
      unint64_t v3 = (unint64_t)(v7 - 32) | 0x8000000000000000;
      unint64_t v5 = 0xD000000000000016;
      break;
    default:
      break;
  }
  unint64_t v8 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      uint64_t v2 = 0x5F4F545F5446454CLL;
      unsigned int v9 = 1212631378;
      goto LABEL_12;
    case 2:
      uint64_t v10 = "LEFT_TO_RIGHT_OVERRIDE";
      goto LABEL_16;
    case 3:
      uint64_t v2 = 0x4F545F5448474952;
      unsigned int v9 = 1178946655;
LABEL_12:
      unint64_t v8 = v9 | 0xED00005400000000;
      goto LABEL_13;
    case 4:
      uint64_t v10 = "RIGHT_TO_LEFT_OVERRIDE";
LABEL_16:
      unint64_t v8 = (unint64_t)(v10 - 32) | 0x8000000000000000;
      if (v5 == 0xD000000000000016) {
        goto LABEL_17;
      }
      goto LABEL_19;
    default:
LABEL_13:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_17:
      if (v3 == v8) {
        char v11 = 1;
      }
      else {
LABEL_19:
      }
        char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v11 & 1;
  }
}

uint64_t sub_100276674(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x454C50525550;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x454C50525550;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1263421776;
      break;
    case 2:
      uint64_t v5 = 0x45474E41524FLL;
      break;
    case 3:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1414416717;
      break;
    case 4:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1163217986;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE400000000000000;
      if (v5 == 1263421776) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      if (v5 != 0x45474E41524FLL) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v2 = 1414416717;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1163217986) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1002767F8(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1413891404;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 1413891404;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x5245544E4543;
      break;
    case 2:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x5448474952;
      break;
    case 3:
      uint64_t v5 = 0x454946495453554ALL;
      unint64_t v3 = 0xE900000000000044;
      break;
    case 4:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x4C41525554414ELL;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE600000000000000;
      if (v5 == 0x5245544E4543) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x5448474952) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      uint64_t v2 = 0x454946495453554ALL;
      unint64_t v6 = 0xE900000000000044;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xE700000000000000;
      if (v5 != 0x4C41525554414ELL) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1002769AC(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000010;
  unint64_t v3 = 0x8000000100548E40;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000010;
  switch(v4)
  {
    case 1:
      unint64_t v6 = "autoSortCheckedItems";
      goto LABEL_5;
    case 2:
      unint64_t v5 = 0x6363416C61636F6CLL;
      unint64_t v3 = 0xEC000000746E756FLL;
      break;
    case 3:
      unint64_t v6 = "mentionNotifications";
LABEL_5:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      unint64_t v5 = 0xD000000000000014;
      break;
    case 4:
      unint64_t v5 = 0xD000000000000013;
      unint64_t v3 = 0x8000000100548EB0;
      break;
    default:
      break;
  }
  unint64_t v7 = 0x8000000100548E40;
  switch(a2)
  {
    case 1:
      unint64_t v8 = "autoSortCheckedItems";
      goto LABEL_12;
    case 2:
      unint64_t v7 = 0xEC000000746E756FLL;
      if (v5 != 0x6363416C61636F6CLL) {
        goto LABEL_17;
      }
      goto LABEL_14;
    case 3:
      unint64_t v8 = "mentionNotifications";
LABEL_12:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      unint64_t v2 = 0xD000000000000014;
      goto LABEL_13;
    case 4:
      unint64_t v7 = 0x8000000100548EB0;
      if (v5 != 0xD000000000000013) {
        goto LABEL_17;
      }
      goto LABEL_14;
    default:
LABEL_13:
      if (v5 != v2) {
        goto LABEL_17;
      }
LABEL_14:
      if (v3 == v7) {
        char v9 = 1;
      }
      else {
LABEL_17:
      }
        char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t sub_100276B70(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0x694C7265646C6F66;
  }
  else {
    unint64_t v3 = 0xD000000000000011;
  }
  if (v2) {
    unint64_t v4 = 0x80000001005490D0;
  }
  else {
    unint64_t v4 = 0xEA00000000007473;
  }
  if (a2) {
    unint64_t v5 = 0x694C7265646C6F66;
  }
  else {
    unint64_t v5 = 0xD000000000000011;
  }
  if (a2) {
    unint64_t v6 = 0xEA00000000007473;
  }
  else {
    unint64_t v6 = 0x80000001005490D0;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void *sub_100276C20(uint64_t a1, void *a2, void *a3, uint64_t (**a4)(void, void, int64_t, id, uint64_t, uint64_t, double), void *a5)
{
  unint64_t v8 = sub_100281880(a1, (uint64_t)a2, a3, a4, a5);

  return v8;
}

double static ICArchiveImporter.Configuration.default.getter()
{
  return 0.0;
}

uint64_t sub_100276CBC()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100032974(v0, qword_1006A0FF0);
  sub_10003293C(v0, (uint64_t)qword_1006A0FF0);
  return static Logger.archiving.getter();
}

uint64_t sub_100276D08()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OSSignposter();
  sub_100032974(v4, qword_1006A1008);
  sub_10003293C(v4, (uint64_t)qword_1006A1008);
  if (qword_10069ADF0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_10003293C(v0, (uint64_t)qword_1006A0FF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  return OSSignposter.init(logger:)();
}

uint64_t ICArchiveImporter.Configuration.retainsIdentifiers.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t ICArchiveImporter.Configuration.importsRelativeTimestamps.getter(unsigned int a1)
{
  return (a1 >> 8) & 1;
}

uint64_t ICArchiveImporter.Configuration.importsRelativeTimestamps.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result;
  return result;
}

uint64_t (*ICArchiveImporter.Configuration.importsRelativeTimestamps.modify())()
{
  return ICCloudSyncingObject.MoveAction.Types.rawValue.getter;
}

void ICArchiveImporter.Configuration.timestampOffset.setter(double a1)
{
  *(double *)(v1 + 8) = a1;
}

uint64_t (*InsertAllMentionIntent.insertionRange.modify())()
{
  return ICCloudSyncingObject.MoveAction.Types.rawValue.getter;
}

id ICArchiveImporter.context.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC11MobileNotes17ICArchiveImporter_context);
}

double ICArchiveImporter.configuration.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MobileNotes17ICArchiveImporter_configuration;
  swift_beginAccess();
  double v2 = *(double *)(v1 + 8);
  id v3 = *(id *)(v1 + 16);
  return v2;
}

uint64_t ICArchiveImporter.fileManager.getter()
{
  return swift_unknownObjectRetain();
}

id ICArchiveImporter.__allocating_init(context:configuration:fileManager:)(void *a1, __int16 a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  uint64_t ObjectType = swift_getObjectType();

  return sub_1002807A0(a1, a2 & 0x101, a3, a4, a5, v7, ObjectType, a6, a7);
}

id ICArchiveImporter.init(context:configuration:fileManager:)(void *a1, __int16 a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  uint64_t ObjectType = swift_getObjectType();

  return sub_1002809A4(a1, a2 & 0x101, a3, a4, a5, v7, a7, ObjectType, a6);
}

uint64_t sub_1002770A0()
{
  id v1 = [self defaultCenter];
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  char v9 = sub_100282BA0;
  uint64_t v10 = v2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_10040928C;
  uint64_t ObjectType = &unk_1006324C0;
  id v3 = _Block_copy(aBlock);
  swift_release();
  id v4 = [v1 addObserverForName:UIApplicationDidReceiveMemoryWarningNotification object:0 queue:0 usingBlock:v3];
  _Block_release(v3);

  uint64_t ObjectType = (void *)swift_getObjectType();
  aBlock[0] = v4;
  uint64_t v5 = v0 + OBJC_IVAR____TtC11MobileNotes17ICArchiveImporter_didReceiveMemoryWarningObserver;
  swift_beginAccess();
  sub_100282BA8((uint64_t)aBlock, v5);
  return swift_endAccess();
}

void ICArchiveImporter.init()()
{
  id v1 = [self sharedContext];
  if (v1
    && (uint64_t v2 = v1,
        id v3 = [v1 snapshotManagedObjectContext],
        v2,
        v3))
  {
    [v0 initWithContext:v3];
  }
  else
  {
    __break(1u);
  }
}

id ICArchiveImporter.__allocating_init(context:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = [self defaultManager];
  __int16 IsAlexandriaDemoModeEnabled = ICInternalSettingsIsAlexandriaDemoModeEnabled();
  int v6 = ICInternalSettingsIsAlexandriaDemoModeEnabled();
  uint64_t v7 = objc_allocWithZone(v1);
  if (v6) {
    __int16 v8 = 256;
  }
  else {
    __int16 v8 = 0;
  }
  id v9 = sub_10028083C(a1, v8 | IsAlexandriaDemoModeEnabled, 0, 0, v4, v7, 0.0);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v9;
}

id ICArchiveImporter.init(context:)(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v3 = [self defaultManager];
  __int16 IsAlexandriaDemoModeEnabled = ICInternalSettingsIsAlexandriaDemoModeEnabled();
  int v5 = ICInternalSettingsIsAlexandriaDemoModeEnabled();
  int v6 = objc_allocWithZone(ObjectType);
  if (v5) {
    __int16 v7 = 256;
  }
  else {
    __int16 v7 = 0;
  }
  id v8 = sub_10028083C(a1, v7 | IsAlexandriaDemoModeEnabled, 0, 0, v3, v6, 0.0);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v8;
}

id ICArchiveImporter.__deallocating_deinit()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = (uint64_t)v0 + OBJC_IVAR____TtC11MobileNotes17ICArchiveImporter_didReceiveMemoryWarningObserver;
  swift_beginAccess();
  sub_10002F034(v2, (uint64_t)v6, &qword_10069B4D0);
  id v3 = [self defaultCenter];
  sub_100280B0C((uint64_t)v6, v3);

  sub_10002B754((uint64_t)v6, &qword_10069B4D0);
  v5.receiver = v0;
  v5.super_class = ObjectType;
  return [super dealloc];
}

uint64_t ICArchiveImporter.Errors.errorDescription.getter(uint64_t a1)
{
  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      id v1 = [self mainBundle];
      NSString v2 = String._bridgeToObjectiveC()();
      id v3 = [v1 localizedStringForKey:v2 value:0 table:0];

      uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      return v4;
    default:
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
      __break(1u);
      JUMPOUT(0x1002779D8);
  }
}

unint64_t ICCloudSyncingObject.MoveAction.Types.init(rawValue:)(unint64_t a1)
{
  return sub_100282538(a1);
}

unint64_t static ICArchiveImporter.Errors._nsErrorDomain.getter()
{
  return 0xD000000000000024;
}

Swift::Int sub_100277A24()
{
  return Hasher._finalize()();
}

uint64_t sub_100277A88(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100282900();

  return _BridgedNSError.hash(into:)(a1, a2, v4);
}

unint64_t sub_100277AD4@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_100282538(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_100277B08()
{
  return ICArchiveImporter.Errors.errorDescription.getter(*v0);
}

uint64_t sub_100277B10(uint64_t a1)
{
  unint64_t v2 = sub_100282900();

  return _BridgedNSError._domain.getter(a1, v2);
}

uint64_t sub_100277B4C(uint64_t a1)
{
  unint64_t v2 = sub_100282900();

  return _BridgedNSError._code.getter(a1, v2);
}

uint64_t sub_100277B88(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100282900();

  return _BridgedNSError.init(_bridgedNSError:)(a1, a2, v4);
}

uint64_t ICArchiveImporter.errors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ICArchiveImporter.objects(forArchiveAt:)(char *a1)
{
  uint64_t v123 = type metadata accessor for OSSignpostError();
  uint64_t v122 = *(void *)(v123 - 8);
  uint64_t v3 = __chkstk_darwin(v123);
  unint64_t v140 = (unsigned int (**)(char *, uint64_t, uint64_t))((char *)v115 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v119 = (char *)v115 - v6;
  __chkstk_darwin(v5);
  unint64_t v117 = (char *)v115 - v7;
  uint64_t v8 = sub_10002F214(&qword_10069DD18);
  __chkstk_darwin(v8 - 8);
  uint64_t v130 = (void *)((char *)v115 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_10002F214(&qword_10069D190);
  uint64_t v129 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v145 = (char *)v115 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  unint64_t v127 = (char *)v115 - v13;
  uint64_t v133 = type metadata accessor for URL();
  uint64_t v141 = *(void *)(v133 - 8);
  __chkstk_darwin(v133);
  uint64_t v15 = (char *)v115 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10002F214(&qword_10069B310);
  __chkstk_darwin(v16 - 8);
  id v18 = (char *)v115 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for OSSignpostID();
  uint64_t v143 = *(void *)(v19 - 8);
  uint64_t v144 = v19;
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v142 = (char *)v115 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = (char *)v115 - v23;
  uint64_t v25 = __chkstk_darwin(v22);
  id v27 = (char *)v115 - v26;
  uint64_t v28 = __chkstk_darwin(v25);
  id v30 = (char *)v115 - v29;
  __chkstk_darwin(v28);
  id v32 = (char *)v115 - v31;
  if (qword_10069ADF8 != -1) {
    swift_once();
  }
  id v146 = v15;
  uint64_t v149 = v10;
  uint64_t v118 = v27;
  id v128 = v1;
  unint64_t v124 = v24;
  uint64_t v33 = type metadata accessor for OSSignposter();
  uint64_t v34 = sub_10003293C(v33, (uint64_t)qword_1006A1008);
  uint64_t v147 = a1;
  URL._bridgeToObjectiveC()(v35);
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:object:)();
  uint64_t v36 = OSSignposter.logHandle.getter();
  os_signpost_type_t v37 = static os_signpost_type_t.begin.getter();
  char v38 = OS_os_log.signpostsEnabled.getter();
  v126 = v30;
  uint64_t v125 = v34;
  if (v38)
  {
    uint64_t v39 = v143;
    uint64_t v131 = *(void (**)(void, void, void))(v143 + 16);
    unint64_t v40 = (v143 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v41 = v32;
    unint64_t v42 = v32;
    uint64_t v43 = v144;
    v131(v30, v41, v144);
    uint64_t v44 = v18;
    uint64_t v45 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v45 = 0;
    os_signpost_id_t v46 = OSSignpostID.rawValue.getter();
    os_signpost_type_t v47 = v37;
    int64_t v48 = v42;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v36, v47, v46, "Objects for Archive", "", v45, 2u);
    id v18 = v44;
    id v30 = v126;
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v39 + 8))(v30, v43);
    uint64_t v49 = v131;
  }
  else
  {

    uint64_t v49 = *(void (**)(void, void, void))(v143 + 16);
    unint64_t v40 = (v143 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    int64_t v48 = v32;
    uint64_t v43 = v144;
  }
  uint64_t v131 = v49;
  unint64_t v121 = v40;
  v49(v30, v48, v43);
  type metadata accessor for OSSignpostIntervalState();
  swift_allocObject();
  uint64_t v50 = OSSignpostIntervalState.init(id:isOpen:)();
  id v51 = v128;
  swift_getObjectType();
  uint64_t v52 = v148;
  uint64_t v53 = dispatch thunk of ICFileManaging.subdirectoriesOfDirectory(at:)();
  uint64_t v54 = v52;
  if (v52)
  {
    uint64_t v55 = v30;
    uint64_t v148 = v52;
    id v56 = OSSignposter.logHandle.getter();
    NSString v57 = v142;
    OSSignpostIntervalState.signpostID.getter();
    os_signpost_type_t v58 = static os_signpost_type_t.end.getter();
    uint64_t v59 = v50;
    if (OS_os_log.signpostsEnabled.getter())
    {
      uint64_t v60 = v144;
      swift_retain();
      NSString v61 = (char *)v140;
      checkForErrorAndConsumeState(state:)();
      uint64_t v120 = v59;
      swift_release();
      uint64_t v62 = v122;
      uint64_t v63 = v123;
      unint64_t v64 = v48;
      if ((*(unsigned int (**)(char *, uint64_t))(v122 + 88))(v61, v123) == enum case for OSSignpostError.doubleEnd(_:))
      {
        NSString v65 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v62 + 8))(v61, v63);
        NSString v65 = "";
      }
      unint64_t v83 = v142;
      v131(v55, v142, v60);
      unint64_t v84 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v84 = 0;
      os_signpost_id_t v85 = OSSignpostID.rawValue.getter();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v56, v58, v85, "Objects for Archive", v65, v84, 2u);
      swift_slowDealloc();

      uint64_t v81 = *(char **)(v143 + 8);
      ((void (*)(char *, uint64_t))v81)(v83, v60);
      ((void (*)(char *, uint64_t))v81)(v55, v60);
      uint64_t v82 = v64;
    }
    else
    {

      uint64_t v60 = v144;
      uint64_t v81 = *(char **)(v143 + 8);
      ((void (*)(char *, uint64_t))v81)(v57, v144);
      uint64_t v82 = v48;
    }
LABEL_25:
    swift_release();
    ((void (*)(char *, uint64_t))v81)(v82, v60);
    return (uint64_t)v81;
  }
  uint64_t v120 = v50;
  uint64_t v116 = v48;
  uint64_t v66 = *(void *)(v53 + 16);
  v115[2] = v53;
  if (v66)
  {
    uint64_t v142 = *(char **)(v141 + 16);
    unint64_t v67 = v53 + ((*(unsigned __int8 *)(v141 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v141 + 80));
    uint64_t v68 = v141 + 56;
    unint64_t v140 = (unsigned int (**)(char *, uint64_t, uint64_t))(v141 + 48);
    uint64_t v136 = *(void *)(v141 + 72);
    uint64_t v137 = (void (**)(uint64_t, char *, uint64_t))(v141 + 32);
    uint64_t v138 = (void (**)(uint64_t, uint64_t))(v141 + 8);
    uint64_t v134 = (void (**)(char *, uint64_t *, uint64_t))(v129 + 32);
    uint64_t v135 = (unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v129 + 48);
    id v139 = v51;
    swift_bridgeObjectRetain();
    uint64_t v147 = (char *)_swiftEmptyArrayStorage;
    uint64_t v141 = v68;
    v115[1] = v68 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    char v69 = v130;
    uint64_t v70 = v133;
    uint64_t v71 = (uint64_t)v146;
    while (1)
    {
      ((void (*)(char *, unint64_t, uint64_t))v142)(v18, v67, v70);
      unint64_t v72 = *(void (**)(char *, void, uint64_t, uint64_t))v141;
      (*(void (**)(char *, void, uint64_t, uint64_t))v141)(v18, 0, 1, v70);
      if ((*v140)(v18, 1, v70) == 1) {
        break;
      }
      char v132 = (void (*)(void, void, void, void))v72;
      uint64_t v73 = v18;
      (*v137)(v71, v18, v70);
      sub_100278CF0(v71, v69);
      if (v54)
      {
        uint64_t v148 = v54;
        (*v138)(v71, v70);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        uint64_t v88 = OSSignposter.logHandle.getter();
        uint64_t v89 = v118;
        OSSignpostIntervalState.signpostID.getter();
        os_signpost_type_t v90 = static os_signpost_type_t.end.getter();
        if (OS_os_log.signpostsEnabled.getter())
        {
          swift_retain();
          uint64_t v91 = v117;
          checkForErrorAndConsumeState(state:)();
          swift_release();
          uint64_t v92 = v122;
          uint64_t v93 = v123;
          if ((*(unsigned int (**)(char *, uint64_t))(v122 + 88))(v91, v123) == enum case for OSSignpostError.doubleEnd(_:))
          {
            unint64_t v94 = "[Error] Interval already ended";
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v92 + 8))(v91, v93);
            unint64_t v94 = "";
          }
          uint64_t v110 = v126;
          uint64_t v111 = v144;
          v131(v126, v89, v144);
          uint64_t v112 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v112 = 0;
          os_signpost_id_t v113 = OSSignpostID.rawValue.getter();
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v88, v90, v113, "Objects for Archive", v94, v112, 2u);
          swift_slowDealloc();

          uint64_t v81 = *(char **)(v143 + 8);
          char v114 = v89;
          uint64_t v60 = v111;
          ((void (*)(char *, uint64_t))v81)(v114, v111);
          ((void (*)(char *, uint64_t))v81)(v110, v111);
        }
        else
        {

          uint64_t v81 = *(char **)(v143 + 8);
          uint64_t v109 = v89;
          uint64_t v60 = v144;
          ((void (*)(char *, uint64_t))v81)(v109, v144);
        }
        uint64_t v82 = v116;
        goto LABEL_25;
      }
      (*v138)(v71, v70);
      uint64_t v74 = v149;
      if ((*v135)(v69, 1, v149) == 1)
      {
        sub_10002B754((uint64_t)v69, &qword_10069DD18);
        uint64_t v71 = (uint64_t)v146;
      }
      else
      {
        uint64_t v148 = 0;
        uint64_t v75 = *v134;
        BOOL v76 = v127;
        (*v134)(v127, v69, v74);
        v75(v145, (uint64_t *)v76, v74);
        unint64_t v77 = (unint64_t)v147;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v77 = sub_1001A8358(0, *(void *)(v77 + 16) + 1, 1, v77);
        }
        uint64_t v71 = (uint64_t)v146;
        unint64_t v79 = *(void *)(v77 + 16);
        unint64_t v78 = *(void *)(v77 + 24);
        uint64_t v147 = (char *)v77;
        if (v79 >= v78 >> 1) {
          uint64_t v147 = (char *)sub_1001A8358(v78 > 1, v79 + 1, 1, (unint64_t)v147);
        }
        uint64_t v80 = v147;
        *((void *)v147 + 2) = v79 + 1;
        v75(&v80[((*(unsigned __int8 *)(v129 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v129 + 80))+ *(void *)(v129 + 72) * v79], (uint64_t *)v145, v149);
        uint64_t v54 = v148;
        char v69 = v130;
        uint64_t v70 = v133;
      }
      v67 += v136;
      --v66;
      id v18 = v73;
      if (!v66)
      {
        v132(v73, 1, 1, v70);
        break;
      }
    }
  }
  else
  {
    uint64_t v86 = *(void (**)(void, void, void, void))(v141 + 56);
    id v87 = v51;
    swift_bridgeObjectRetain();
    uint64_t v147 = (char *)_swiftEmptyArrayStorage;
    v86(v18, 1, 1, v133);
  }
  unint64_t v95 = v116;
  swift_bridgeObjectRelease_n();

  uint64_t v150 = v147;
  swift_bridgeObjectRetain();
  sub_10027F2E0((void **)&v150);
  uint64_t v148 = v54;
  if (!v54)
  {
    swift_bridgeObjectRelease();
    uint64_t v81 = v150;
    unint64_t v96 = OSSignposter.logHandle.getter();
    uint64_t v97 = v124;
    OSSignpostIntervalState.signpostID.getter();
    os_signpost_type_t v98 = static os_signpost_type_t.end.getter();
    if (OS_os_log.signpostsEnabled.getter())
    {
      swift_retain();
      Swift::Int v99 = v119;
      checkForErrorAndConsumeState(state:)();
      swift_release();
      uint64_t v100 = v122;
      uint64_t v101 = v123;
      if ((*(unsigned int (**)(char *, uint64_t))(v122 + 88))(v99, v123) == enum case for OSSignpostError.doubleEnd(_:))
      {
        uint64_t v102 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v100 + 8))(v99, v101);
        uint64_t v102 = "";
      }
      uint64_t v105 = v126;
      uint64_t v103 = v144;
      v131(v126, v124, v144);
      uint64_t v106 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v106 = 0;
      os_signpost_id_t v107 = OSSignpostID.rawValue.getter();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v96, v98, v107, "Objects for Archive", v102, v106, 2u);
      swift_slowDealloc();

      uint64_t v104 = *(void (**)(void, void))(v143 + 8);
      v104(v124, v103);
      v104(v105, v103);
      unint64_t v95 = v116;
    }
    else
    {

      uint64_t v103 = v144;
      uint64_t v104 = *(void (**)(void, void))(v143 + 8);
      v104(v97, v144);
    }
    swift_release();
    v104(v95, v103);
    return (uint64_t)v81;
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_100278CF0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v137 = a2;
  uint64_t v4 = sub_10002F214(&qword_10069DD18);
  __chkstk_darwin(v4 - 8);
  uint64_t v143 = (char *)v131 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v161 = sub_10002F214(&qword_10069D190);
  uint64_t v156 = *(void *)(v161 - 8);
  uint64_t v6 = __chkstk_darwin(v161);
  uint64_t v159 = (char *)v131 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v141 = (char *)v131 - v8;
  uint64_t v9 = sub_10002F214(&qword_10069B310);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v131 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v134 = (char *)v131 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v136 = (char *)v131 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v142 = (char *)v131 - v19;
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)v131 - v20;
  URL.deletingPathExtension()();
  uint64_t v135 = URL.lastPathComponent.getter();
  uint64_t v23 = v22;
  uint64_t v140 = v13;
  uint64_t v26 = *(void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v24 = v13 + 8;
  uint64_t v25 = v26;
  uint64_t v145 = v12;
  v26(v21, v12);
  id v139 = v2;
  uint64_t v27 = *(void *)&v2[OBJC_IVAR____TtC11MobileNotes17ICArchiveImporter_fileManager];
  uint64_t v28 = *(void *)&v139[OBJC_IVAR____TtC11MobileNotes17ICArchiveImporter_fileManager + 8];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v138 = a1;
  id v30 = v160;
  uint64_t v31 = dispatch thunk of ICFileManaging.subdirectoriesOfDirectory(at:)();
  if (v30) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v157 = v25;
  uint64_t v158 = v24;
  v131[1] = ObjectType;
  v131[2] = v27;
  v131[3] = v28;
  uint64_t v132 = v23;
  uint64_t v33 = *(void *)(v31 + 16);
  uint64_t v133 = v31;
  if (v33)
  {
    uint64_t v154 = *(void (**)(char *, unint64_t, uint64_t))(v140 + 16);
    uint64_t v155 = v140 + 16;
    unint64_t v34 = v31 + ((*(unsigned __int8 *)(v140 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v140 + 80));
    unint64_t v35 = v140 + 56;
    uint64_t v36 = *(void *)(v140 + 72);
    v152 = (unsigned int (**)(char *, uint64_t, uint64_t))(v140 + 48);
    uint64_t v149 = v36;
    uint64_t v150 = (void (**)(char *, char *, uint64_t))(v140 + 32);
    uint64_t v147 = (void (**)(char *, uint64_t, uint64_t))(v156 + 32);
    uint64_t v148 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v156 + 48);
    char v151 = v139;
    swift_bridgeObjectRetain();
    uint64_t v160 = _swiftEmptyArrayStorage;
    uint64_t v153 = (void (**)(char *, uint64_t, uint64_t, uint64_t))v35;
    v131[0] = v35 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v37 = v145;
    uint64_t v39 = v142;
    uint64_t v38 = (uint64_t)v143;
    id v146 = v11;
    do
    {
      v154(v11, v34, v37);
      unint64_t v40 = *v153;
      (*v153)(v11, 0, 1, v37);
      if ((*v152)(v11, 1, v37) == 1)
      {
        uint64_t v53 = v138;
        uint64_t v48 = v140;
        id v50 = v139;
        uint64_t v52 = v161;
        goto LABEL_19;
      }
      (*v150)(v39, v11, v37);
      sub_100278CF0(v39);
      uint64_t v144 = v40;
      v157(v39, v37);
      uint64_t v41 = v161;
      if ((*v148)(v38, 1, v161) == 1)
      {
        sub_10002B754(v38, &qword_10069DD18);
        uint64_t v11 = v146;
      }
      else
      {
        unint64_t v42 = *v147;
        uint64_t v43 = v141;
        (*v147)(v141, v38, v41);
        v42(v159, (uint64_t)v43, v41);
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          uint64_t v11 = v146;
          unint64_t v44 = (unint64_t)v160;
        }
        else
        {
          unint64_t v44 = sub_1001A8358(0, v160[2] + 1, 1, (unint64_t)v160);
          uint64_t v11 = v146;
        }
        unint64_t v46 = *(void *)(v44 + 16);
        unint64_t v45 = *(void *)(v44 + 24);
        if (v46 >= v45 >> 1) {
          unint64_t v44 = sub_1001A8358(v45 > 1, v46 + 1, 1, v44);
        }
        *(void *)(v44 + 16) = v46 + 1;
        unint64_t v47 = (*(unsigned __int8 *)(v156 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v156 + 80);
        uint64_t v160 = (void *)v44;
        ((void (*)(unint64_t))v42)(v44 + v47 + *(void *)(v156 + 72) * v46);
        uint64_t v37 = v145;
        uint64_t v39 = v142;
        uint64_t v38 = (uint64_t)v143;
      }
      v34 += v149;
      --v33;
    }
    while (v33);
    uint64_t v48 = v140;
    id v50 = v139;
    uint64_t v52 = v161;
    uint64_t v49 = v144;
  }
  else
  {
    uint64_t v48 = v140;
    uint64_t v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v140 + 56);
    id v50 = v139;
    id v51 = v139;
    swift_bridgeObjectRetain();
    uint64_t v160 = _swiftEmptyArrayStorage;
    uint64_t v52 = v161;
    uint64_t v37 = v145;
  }
  v49(v11, 1, 1, v37);
  uint64_t v53 = v138;
LABEL_19:
  swift_bridgeObjectRelease_n();

  v163 = v160;
  swift_bridgeObjectRetain();
  sub_10027F2E0(&v163);
  uint64_t v159 = 0;
  swift_bridgeObjectRelease();
  uint64_t v160 = v163;
  uint64_t v55 = URL.pathExtension.getter();
  uint64_t v56 = v54;
  if (v55 == 0x6372617365746F6ELL && v54 == 0xEC00000065766968
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_10069ADF0 != -1) {
      swift_once();
    }
    uint64_t v57 = type metadata accessor for Logger();
    sub_10003293C(v57, (uint64_t)qword_1006A0FF0);
    os_signpost_type_t v58 = v136;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v136, v53, v37);
    uint64_t v59 = Logger.logObject.getter();
    os_log_type_t v60 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v59, v60))
    {
      NSString v61 = (uint8_t *)swift_slowAlloc();
      v163 = (void *)swift_slowAlloc();
      *(_DWORD *)NSString v61 = 136315138;
      uint64_t v62 = URL.pathExtension.getter();
      unint64_t v162 = sub_10045DA1C(v62, v63, (uint64_t *)&v163);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v157(v58, v37);
      _os_log_impl((void *)&_mh_execute_header, v59, v60, "Archive object type not supported inside archive — skipping {pathExtension: %s}", v61, 0xCu);
      swift_arrayDestroy();
LABEL_26:
      swift_slowDealloc();
      uint64_t v52 = v161;
      swift_slowDealloc();
LABEL_50:

      return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v156 + 56))(v137, 1, 1, v52);
    }
    goto LABEL_49;
  }
  if (v55 == 0x746E756F636361 && v56 == 0xE700000000000000
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v64 = sub_10002F214(&qword_1006A10E8);
    uint64_t v65 = swift_allocBox();
    uint64_t v67 = v66;
    uint64_t v68 = (uint64_t *)(v66 + *(int *)(v64 + 48));
    uint64_t v69 = *(int *)(v64 + 64);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v66, v53, v37);
    uint64_t v70 = v132;
    *uint64_t v68 = v135;
    v68[1] = v70;
    *(void *)(v67 + v69) = v160;
    uint64_t v71 = v137;
    *uint64_t v137 = v65;
    unint64_t v72 = (unsigned int *)&enum case for ICObjectReferences.account<A>(_:);
LABEL_31:
    uint64_t v73 = v156;
    uint64_t v74 = v161;
    (*(void (**)(uint64_t *, void, uint64_t))(v156 + 104))(v71, *v72, v161);
    return (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(v73 + 56))(v71, 0, 1, v74);
  }
  if (v55 == 0x7265646C6F66 && v56 == 0xE600000000000000
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v75 = sub_10002F214(&qword_1006A10E8);
    uint64_t v76 = swift_allocBox();
    uint64_t v78 = v77;
    unint64_t v79 = (uint64_t *)(v77 + *(int *)(v75 + 48));
    uint64_t v80 = *(int *)(v75 + 64);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v77, v53, v37);
    uint64_t v81 = v132;
    *unint64_t v79 = v135;
    v79[1] = v81;
    *(void *)(v78 + v80) = v160;
    uint64_t v71 = v137;
    *uint64_t v137 = v76;
    unint64_t v72 = (unsigned int *)&enum case for ICObjectReferences.folder<A>(_:);
    goto LABEL_31;
  }
  if (v55 == 1702129518 && v56 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v82 = sub_10002F214(&qword_1006A10D8);
    uint64_t v83 = swift_allocBox();
    uint64_t v85 = v84;
    uint64_t v86 = (uint64_t *)(v84 + *(int *)(v82 + 48));
    uint64_t v87 = *(int *)(v82 + 64);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v84, v53, v37);
    uint64_t v88 = v132;
    uint64_t *v86 = v135;
    v86[1] = v88;
    *(void *)(v85 + v87) = v160;
    uint64_t v71 = v137;
    *uint64_t v137 = v83;
    unint64_t v72 = (unsigned int *)&enum case for ICObjectReferences.note<A>(_:);
    goto LABEL_31;
  }
  if (v55 == 0x656D686361747461 && v56 == 0xEA0000000000746ELL)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v89 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v89 & 1) == 0)
    {
      swift_release();
      swift_bridgeObjectRelease();
      if (qword_10069ADF0 != -1) {
        swift_once();
      }
      uint64_t v91 = type metadata accessor for Logger();
      sub_10003293C(v91, (uint64_t)qword_1006A0FF0);
      os_signpost_type_t v58 = v134;
      uint64_t v37 = v145;
      (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v134, v53, v145);
      uint64_t v59 = Logger.logObject.getter();
      os_log_type_t v92 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v59, v92))
      {
        uint64_t v93 = (uint8_t *)swift_slowAlloc();
        v163 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v93 = 136315138;
        uint64_t v94 = URL.pathExtension.getter();
        unint64_t v162 = sub_10045DA1C(v94, v95, (uint64_t *)&v163);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        v157(v58, v37);
        _os_log_impl((void *)&_mh_execute_header, v59, v92, "Unknown object type — skipping {pathExtension: %s}", v93, 0xCu);
        swift_arrayDestroy();
        goto LABEL_26;
      }
LABEL_49:
      v157(v58, v37);
      goto LABEL_50;
    }
  }
  v163 = _swiftEmptyArrayStorage;
  sub_100169AAC(0, 5, 0);
  os_signpost_type_t v90 = v163;
  unint64_t v97 = v163[2];
  unint64_t v96 = v163[3];
  unint64_t v98 = v97 + 1;
  if (v97 >= v96 >> 1)
  {
    sub_100169AAC(v96 > 1, v97 + 1, 1);
    os_signpost_type_t v90 = v163;
  }
  v90[2] = v98;
  Swift::Int v99 = (char *)&v90[2 * v97];
  strcpy(v99 + 32, "notesarchive");
  v99[45] = 0;
  *((_WORD *)v99 + 23) = -5120;
  v163 = v90;
  unint64_t v100 = v90[3];
  int64_t v101 = v97 + 2;
  if (v98 >= v100 >> 1)
  {
    sub_100169AAC(v100 > 1, v101, 1);
    os_signpost_type_t v90 = v163;
  }
  v90[2] = v101;
  uint64_t v102 = &v90[2 * v98];
  v102[4] = 0x746E756F636361;
  v102[5] = 0xE700000000000000;
  v163 = v90;
  unint64_t v104 = v90[2];
  unint64_t v103 = v90[3];
  unint64_t v105 = v104 + 1;
  if (v104 >= v103 >> 1)
  {
    sub_100169AAC(v103 > 1, v104 + 1, 1);
    os_signpost_type_t v90 = v163;
  }
  v90[2] = v105;
  uint64_t v106 = &v90[2 * v104];
  v106[4] = 0x7265646C6F66;
  v106[5] = 0xE600000000000000;
  v163 = v90;
  unint64_t v107 = v90[3];
  int64_t v108 = v104 + 2;
  if (v105 >= v107 >> 1)
  {
    sub_100169AAC(v107 > 1, v108, 1);
    os_signpost_type_t v90 = v163;
  }
  v90[2] = v108;
  uint64_t v109 = &v90[2 * v105];
  v109[4] = 1702129518;
  v109[5] = 0xE400000000000000;
  uint64_t v110 = v138;
  uint64_t v111 = v132;
  v163 = v90;
  unint64_t v113 = v90[2];
  unint64_t v112 = v90[3];
  if (v113 >= v112 >> 1)
  {
    sub_100169AAC(v112 > 1, v113 + 1, 1);
    os_signpost_type_t v90 = v163;
  }
  v90[2] = v113 + 1;
  char v114 = &v90[2 * v113];
  v114[4] = 0x656D686361747461;
  v114[5] = 0xEA0000000000746ELL;
  uint64_t v115 = v159;
  uint64_t v116 = dispatch thunk of ICFileManaging.contentsOfDirectory(at:)();
  if (v115)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v117 = sub_100281A10(v116, (uint64_t)v90);
    swift_release();
    unint64_t v118 = *(void *)(v117 + 16);
    swift_bridgeObjectRelease();
    BOOL v119 = v118 > 1;
    uint64_t v120 = (int *)sub_10002F214(&qword_1006A10D0);
    uint64_t v121 = swift_allocBox();
    uint64_t v123 = v122;
    uint64_t v124 = v111;
    uint64_t v125 = (uint64_t *)(v122 + v120[12]);
    uint64_t v126 = v120[16];
    uint64_t v127 = v120[20];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v140 + 16))(v122, v110, v145);
    *uint64_t v125 = v135;
    v125[1] = v124;
    *(unsigned char *)(v123 + v126) = v119;
    *(void *)(v123 + v127) = v160;
    id v128 = v137;
    *uint64_t v137 = v121;
    uint64_t v129 = v156;
    uint64_t v130 = v161;
    (*(void (**)(uint64_t *, void, uint64_t))(v156 + 104))(v128, enum case for ICObjectReferences.attachment<A>(_:), v161);
    return (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(v129 + 56))(v128, 0, 1, v130);
  }
}

uint64_t ICArchiveImporter.importArchive(at:intoNoteContainerWithId:progress:)()
{
  return NSManagedObjectContext.performAndWait<A>(_:)();
}

void sub_10027A1D8(uint64_t a1, uint64_t a2, char *a3, void *a4)
{
  id v7 = [*(id *)(a1 + OBJC_IVAR____TtC11MobileNotes17ICArchiveImporter_context) ic_existingObjectWithID:a2];
  if (!v7) {
    goto LABEL_10;
  }
  uint64_t v8 = v7;
  self;
  uint64_t v9 = swift_dynamicCastObjCClass();
  if (!v9)
  {

LABEL_10:
    __break(1u);
    return;
  }
  uint64_t v10 = (void (*)(void, void, void))v9;
  uint64_t v11 = ICArchiveImporter.objects(forArchiveAt:)(a3);
  if (!v4)
  {
    uint64_t v12 = v11;
    if (a4) {
      id v13 = a4;
    }
    else {
      id v13 = [objc_allocWithZone((Class)NSProgress) init];
    }
    id v14 = a4;
    ICArchiveImporter.importObjects(_:fromArchiveAt:into:progress:)(v12, (uint64_t)a3, v10, v13);

    swift_bridgeObjectRelease();
  }
}

uint64_t ICArchiveImporter.importObjects(_:fromArchiveAt:into:progress:)(uint64_t a1, uint64_t a2, void (*a3)(void, void, void), void *a4)
{
  uint64_t v5 = v4;
  v282 = a4;
  v283 = (int64_t *)a1;
  uint64_t v284 = a2;
  uint64_t v275 = type metadata accessor for OSSignpostError();
  uint64_t v274 = *(void *)(v275 - 8);
  uint64_t v7 = __chkstk_darwin(v275);
  v244 = (char *)&v243 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  v248 = (char *)&v243 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  id v13 = (char *)&v243 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  v250 = (char *)&v243 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  v262 = (char *)&v243 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  v263 = (char *)&v243 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  v267 = (char *)&v243 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  v254 = (char *)&v243 - v23;
  __chkstk_darwin(v22);
  v243 = (char *)&v243 - v24;
  uint64_t v25 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  __chkstk_darwin(v25 - 8);
  v293 = (char *)&v243 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v258 = type metadata accessor for Date();
  uint64_t v27 = *(void *)(v258 - 8);
  uint64_t v28 = __chkstk_darwin(v258);
  v253 = (char *)&v243 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v252 = (char *)&v243 - v30;
  uint64_t v31 = type metadata accessor for ICArchiveModel();
  __chkstk_darwin(v31);
  v265 = (char *)&v243 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v270 = type metadata accessor for URL();
  uint64_t v269 = *(void *)(v270 - 8);
  __chkstk_darwin(v270);
  v271 = (char *)&v243 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v292 = (void *)sub_10002F214(&qword_10069D190);
  uint64_t v289 = *(v292 - 1);
  __chkstk_darwin(v292);
  v291 = (char *)&v243 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for OSSignpostID();
  uint64_t v286 = *(void *)(v35 - 8);
  uint64_t v36 = __chkstk_darwin(v35);
  v246 = (char *)&v243 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __chkstk_darwin(v36);
  v251 = (char *)&v243 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  v257 = (char *)&v243 - v41;
  uint64_t v42 = __chkstk_darwin(v40);
  v264 = (char *)&v243 - v43;
  uint64_t v44 = __chkstk_darwin(v42);
  v268 = (char *)&v243 - v45;
  uint64_t v46 = __chkstk_darwin(v44);
  v276 = (char *)&v243 - v47;
  uint64_t v48 = __chkstk_darwin(v46);
  v259 = (char *)&v243 - v49;
  uint64_t v50 = __chkstk_darwin(v48);
  v245 = (char *)&v243 - v51;
  uint64_t v52 = __chkstk_darwin(v50);
  uint64_t v54 = (char *)&v243 - v53;
  uint64_t v55 = __chkstk_darwin(v52);
  uint64_t v57 = (char *)&v243 - v56;
  __chkstk_darwin(v55);
  uint64_t v59 = (char *)&v243 - v58;
  uint64_t v287 = OBJC_IVAR____TtC11MobileNotes17ICArchiveImporter_isImporting;
  v288 = v5;
  if (v5[OBJC_IVAR____TtC11MobileNotes17ICArchiveImporter_isImporting])
  {
    __break(1u);
  }
  else
  {
    uint64_t v256 = v27;
    uint64_t v266 = v31;
    v290 = a3;
    id v60 = [a3 managedObjectContext];
    if (!v60)
    {
      __break(1u);
      goto LABEL_122;
    }
    NSString v61 = v60;
    a3 = (void (*)(void, void, void))v288;
    uint64_t v62 = *(void **)&v288[OBJC_IVAR____TtC11MobileNotes17ICArchiveImporter_context];
    sub_100031418(0, (unint64_t *)&unk_10069FCF0);
    id v63 = v62;
    id v64 = v61;
    char v65 = static NSObject.== infix(_:_:)();

    id v247 = v63;
    if (v65)
    {
      *((unsigned char *)a3 + v287) = 1;
      if (qword_10069ADF8 == -1) {
        goto LABEL_5;
      }
      goto LABEL_95;
    }
  }
  __break(1u);
LABEL_95:
  swift_once();
LABEL_5:
  v255 = v54;
  v249 = v13;
  uint64_t v66 = type metadata accessor for OSSignposter();
  uint64_t v67 = sub_10003293C(v66, (uint64_t)qword_1006A1008);
  URL._bridgeToObjectiveC()(v68);
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:object:)();
  uint64_t v277 = v67;
  uint64_t v69 = OSSignposter.logHandle.getter();
  os_signpost_type_t v70 = static os_signpost_type_t.begin.getter();
  char v71 = OS_os_log.signpostsEnabled.getter();
  v285 = v57;
  if (v71)
  {
    uint64_t v72 = v286;
    uint64_t v73 = *(void (**)(char *, char *, uint64_t))(v286 + 16);
    unint64_t v74 = (v286 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v73(v57, v59, v35);
    uint64_t v75 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v75 = 0;
    os_signpost_id_t v76 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v69, v70, v76, "Import Objects from Archive", "", v75, 2u);
    uint64_t v57 = v285;
    swift_slowDealloc();

    uint64_t v77 = *(void (**)(char *, uint64_t))(v72 + 8);
    a3 = (void (*)(void, void, void))(v72 + 8);
    v77(v57, v35);
  }
  else
  {

    uint64_t v73 = *(void (**)(char *, char *, uint64_t))(v286 + 16);
    unint64_t v74 = (v286 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v78 = v290;
  uint64_t v280 = v35;
  v273 = v73;
  unint64_t v272 = v74;
  v73(v57, v59, v35);
  type metadata accessor for OSSignpostIntervalState();
  swift_allocObject();
  uint64_t v281 = OSSignpostIntervalState.init(id:isOpen:)();
  unint64_t v79 = v288;
  uint64_t v80 = &v288[OBJC_IVAR____TtC11MobileNotes17ICArchiveImporter_errors];
  swift_beginAccess();
  *(void *)uint64_t v80 = &_swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease();
  v295[3] = sub_100031418(0, &qword_1006A1050);
  v295[0] = v78;
  id v81 = v78;
  uint64_t v82 = (void *)sub_1001A76FC((uint64_t)v295);
  uint64_t v84 = v83;
  sub_100018FE8((uint64_t)v295);
  uint64_t v85 = &v79[OBJC_IVAR____TtC11MobileNotes17ICArchiveImporter_configuration];
  swift_beginAccess();
  uint64_t v86 = (void *)*((void *)v85 + 2);
  *((void *)v85 + 2) = v82;
  *((void *)v85 + 3) = v84;
  v260 = (uint64_t (**)(void, void, int64_t, id, uint64_t, uint64_t, double))v84;
  v261 = v85;
  id v279 = v82;

  uint64_t v87 = v283;
  int64_t v88 = v283[2];
  v278 = v59;
  if (v88)
  {
    v294 = (char *)_swiftEmptyArrayStorage;
    sub_100169D0C(0, v88, 0);
    uint64_t v89 = v289 + 16;
    os_signpost_type_t v90 = *(void (**)(void, void, void))(v289 + 16);
    uint64_t v87 = (int64_t *)((char *)v87
                           + ((*(unsigned __int8 *)(v289 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v289 + 80)));
    uint64_t v289 = *(void *)(v289 + 72);
    v290 = v90;
    uint64_t v91 = (void (**)(char *, void *))(v89 - 8);
    os_log_type_t v92 = v294;
    do
    {
      uint64_t v93 = v291;
      uint64_t v94 = v292;
      v290(v291, v87, v292);
      a3 = (void (*)(void, void, void))ICObjectReferences.recursiveNoteCount.getter();
      (*v91)(v93, v94);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100169D0C(0, *((void *)v92 + 2) + 1, 1);
        os_log_type_t v92 = v294;
      }
      unint64_t v96 = *((void *)v92 + 2);
      unint64_t v95 = *((void *)v92 + 3);
      unint64_t v97 = (unsigned char *)(v96 + 1);
      if (v96 >= v95 >> 1)
      {
        sub_100169D0C(v95 > 1, v96 + 1, 1);
        os_log_type_t v92 = v294;
      }
      *((void *)v92 + 2) = v97;
      *(void *)&v92[8 * v96 + 32] = a3;
      uint64_t v87 = (int64_t *)((char *)v87 + v289);
      --v88;
      uint64_t v98 = (uint64_t)v293;
    }
    while (v88);
  }
  else
  {
    os_log_type_t v92 = (char *)_swiftEmptyArrayStorage;
    unint64_t v97 = (unsigned char *)_swiftEmptyArrayStorage[2];
    uint64_t v98 = (uint64_t)v293;
    if (!v97)
    {
      int64_t v101 = 0;
      uint64_t v99 = v280;
LABEL_20:
      swift_bridgeObjectRelease();
      if (qword_10069ADF0 != -1) {
        swift_once();
      }
      uint64_t v104 = type metadata accessor for Logger();
      sub_10003293C(v104, (uint64_t)qword_1006A0FF0);
      unint64_t v105 = Logger.logObject.getter();
      os_log_type_t v106 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v105, v106))
      {
        unint64_t v107 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)unint64_t v107 = 134217984;
        v294 = v101;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v105, v106, "Importing archive… {noteCount: %ld}", v107, 0xCu);
        swift_slowDealloc();
      }

      int64_t v108 = v282;
      NSProgress.throwIfCancelled()();
      if (v109)
      {

        uint64_t v110 = OSSignposter.logHandle.getter();
        uint64_t v111 = v276;
        OSSignpostIntervalState.signpostID.getter();
        os_signpost_type_t v112 = static os_signpost_type_t.end.getter();
        if (OS_os_log.signpostsEnabled.getter())
        {
          swift_retain();
          unint64_t v113 = v267;
          checkForErrorAndConsumeState(state:)();
          swift_release();
          uint64_t v114 = v274;
          uint64_t v115 = v275;
          int v116 = (*(uint64_t (**)(char *, uint64_t))(v274 + 88))(v113, v275);
          v293 = v109;
          if (v116 == enum case for OSSignpostError.doubleEnd(_:))
          {
            uint64_t v121 = "[Error] Interval already ended";
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v114 + 8))(v113, v115);
            uint64_t v121 = "";
          }
          uint64_t v122 = v285;
          uint64_t v123 = v276;
          v273(v285, v276, v99);
          uint64_t v124 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v124 = 0;
          os_signpost_id_t v125 = OSSignpostID.rawValue.getter();
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v110, v112, v125, "Import Objects from Archive", v121, v124, 2u);
          swift_slowDealloc();

          uint64_t v120 = *(void (**)(char *, uint64_t))(v286 + 8);
          v120(v123, v99);
          v120(v122, v99);
        }
        else
        {

          uint64_t v120 = *(void (**)(char *, uint64_t))(v286 + 8);
          v120(v111, v99);
        }
        int64_t v101 = v288;
        goto LABEL_33;
      }
      [v108 setTotalUnitCount:v101];
      swift_getObjectType();
      uint64_t v117 = v271;
      URL.appendingPathComponent(_:isDirectory:)();
      uint64_t v118 = dispatch thunk of ICFileManaging.contents(of:)();
      v293 = 0;
      a3 = (void (*)(void, void, void))v118;
      uint64_t v87 = v119;
      (*(void (**)(char *, uint64_t))(v269 + 8))(v117, v270);
      if (qword_10069AFB8 != -1) {
        swift_once();
      }
      sub_1002828B8(&qword_1006A1058, (void (*)(uint64_t))type metadata accessor for ICArchiveModel);
      unint64_t v97 = v265;
      uint64_t v127 = v293;
      dispatch thunk of JSONDecoder.decode<A>(_:from:)();
      v293 = v127;
      if (v127)
      {

        sub_10017253C((uint64_t)a3, (unint64_t)v87);
        id v128 = OSSignposter.logHandle.getter();
        uint64_t v129 = v264;
        OSSignpostIntervalState.signpostID.getter();
        int v130 = static os_signpost_type_t.end.getter();
        char v131 = OS_os_log.signpostsEnabled.getter();
        int64_t v101 = v288;
        if (v131)
        {
          LODWORD(v292) = v130;
          swift_retain();
          uint64_t v132 = v262;
          checkForErrorAndConsumeState(state:)();
          swift_release();
          uint64_t v133 = v274;
          uint64_t v134 = v275;
          if ((*(unsigned int (**)(char *, uint64_t))(v274 + 88))(v132, v275) == enum case for OSSignpostError.doubleEnd(_:))
          {
            uint64_t v135 = "[Error] Interval already ended";
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v133 + 8))(v132, v134);
            uint64_t v135 = "";
          }
          uint64_t v136 = v285;
          uint64_t v137 = v264;
          v273(v285, v264, v99);
          uint64_t v138 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v138 = 0;
          os_signpost_id_t v139 = OSSignpostID.rawValue.getter();
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v128, (os_signpost_type_t)v292, v139, "Import Objects from Archive", v135, v138, 2u);
          swift_slowDealloc();

          uint64_t v120 = *(void (**)(char *, uint64_t))(v286 + 8);
          v120(v137, v99);
          v120(v136, v99);
          goto LABEL_33;
        }
LABEL_72:

        uint64_t v120 = *(void (**)(char *, uint64_t))(v286 + 8);
        v120(v129, v99);
        goto LABEL_33;
      }
      int64_t v101 = v288;
      switch(*v97)
      {
        case 1:
          if (0x8000000100549050 == 0x8000000100549030) {
            goto LABEL_43;
          }
          goto LABEL_47;
        case 2:
        case 3:
        case 4:
          goto LABEL_47;
        default:
LABEL_43:
          swift_bridgeObjectRelease();
          break;
      }
      goto LABEL_48;
    }
  }
  uint64_t v99 = v280;
  uint64_t v100 = 0;
  int64_t v101 = 0;
  while (1)
  {
    uint64_t v102 = *(void *)&v92[8 * v100 + 32];
    BOOL v103 = __OFADD__(v101, v102);
    v101 += v102;
    if (v103) {
      break;
    }
    if (v97 == (unsigned char *)++v100) {
      goto LABEL_20;
    }
  }
  __break(1u);
LABEL_47:
  char v140 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if ((v140 & 1) == 0)
  {
    uint64_t v148 = Logger.logObject.getter();
    os_log_type_t v149 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v148, v149))
    {
      uint64_t v150 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v150 = 0;
      _os_log_impl((void *)&_mh_execute_header, v148, v149, "Notes archive specifies unknown type identifier — aborting", v150, 2u);
      unint64_t v97 = v265;
      swift_slowDealloc();
    }

    sub_1001ACB38();
    uint64_t v151 = swift_allocError();
    void *v152 = 0;
    v293 = (char *)v151;
    swift_willThrow();
    sub_10017253C((uint64_t)a3, (unint64_t)v87);

    sub_1002829B8((uint64_t)v97, (uint64_t (*)(void))type metadata accessor for ICArchiveModel);
    uint64_t v153 = OSSignposter.logHandle.getter();
    uint64_t v154 = v259;
    OSSignpostIntervalState.signpostID.getter();
    os_signpost_type_t v155 = static os_signpost_type_t.end.getter();
    char v156 = OS_os_log.signpostsEnabled.getter();
    uint64_t v157 = v275;
    if (v156)
    {
      swift_retain();
      uint64_t v158 = v254;
      checkForErrorAndConsumeState(state:)();
      swift_release();
      uint64_t v159 = v274;
      if ((*(unsigned int (**)(char *, uint64_t))(v274 + 88))(v158, v157) == enum case for OSSignpostError.doubleEnd(_:))
      {
        uint64_t v160 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v159 + 8))(v158, v157);
        uint64_t v160 = "";
      }
      uint64_t v198 = v285;
      Swift::Int v199 = v259;
      v273(v285, v259, v99);
      v200 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v200 = 0;
      os_signpost_id_t v201 = OSSignpostID.rawValue.getter();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v153, v155, v201, "Import Objects from Archive", v160, v200, 2u);
      swift_slowDealloc();

      uint64_t v161 = *(void (**)(char *, uint64_t))(v286 + 8);
      v161(v199, v99);
      v161(v198, v99);
    }
    else
    {

      uint64_t v161 = *(void (**)(char *, uint64_t))(v286 + 8);
      v161(v154, v99);
    }
    goto LABEL_103;
  }
LABEL_48:
  uint64_t v141 = v266;
  if (v261[1] == 1)
  {
    v292 = v87;
    sub_10002F034((uint64_t)&v97[*(int *)(v266 + 24)], v98, (uint64_t *)&unk_1006A3E20);
    uint64_t v142 = v98;
    uint64_t v143 = v256;
    uint64_t v144 = v258;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v256 + 48))(v142, 1, v258) == 1)
    {
      sub_10002B754(v142, (uint64_t *)&unk_1006A3E20);
      uint64_t v145 = Logger.logObject.getter();
      os_log_type_t v146 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v145, v146))
      {
        uint64_t v147 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v147 = 0;
        _os_log_impl((void *)&_mh_execute_header, v145, v146, "Notes archive doesn't have a creation date — fallback back to configuration's timestamp offset", v147, 2u);
        unint64_t v97 = v265;
        swift_slowDealloc();
      }

      uint64_t v141 = v266;
    }
    else
    {
      unint64_t v162 = v252;
      (*(void (**)(char *, uint64_t, uint64_t))(v143 + 32))(v252, v142, v144);
      v163 = v253;
      Date.init()();
      Date.timeIntervalSince(_:)();
      uint64_t v165 = v164;
      uint64_t v166 = *(void (**)(char *, uint64_t))(v143 + 8);
      unint64_t v167 = v163;
      uint64_t v168 = v258;
      v166(v167, v258);
      v166(v162, v168);
      *((void *)v261 + 1) = v165;
    }
    uint64_t v87 = v292;
  }
  if (*(void *)&v97[*(int *)(v141 + 32)])
  {
    id v169 = v279;
    uint64_t v170 = v101;
    uint64_t v171 = swift_bridgeObjectRetain();
    uint64_t v172 = (uint64_t)v260;
    unint64_t v173 = v293;
    sub_100281E40(v171, (uint64_t)v169, (uint64_t)v260, (uint64_t)v170);
    v293 = v173;
    if (v173)
    {

      sub_10017253C((uint64_t)a3, (unint64_t)v87);
      swift_bridgeObjectRelease();
      sub_1002829B8((uint64_t)v265, (uint64_t (*)(void))type metadata accessor for ICArchiveModel);
      id v128 = OSSignposter.logHandle.getter();
      v174 = v255;
      OSSignpostIntervalState.signpostID.getter();
      os_signpost_type_t v175 = static os_signpost_type_t.end.getter();
      if (OS_os_log.signpostsEnabled.getter())
      {
        swift_retain();
        unint64_t v176 = v250;
        checkForErrorAndConsumeState(state:)();
        swift_release();
        uint64_t v177 = v274;
        uint64_t v178 = v275;
        if ((*(unsigned int (**)(char *, uint64_t))(v274 + 88))(v176, v275) == enum case for OSSignpostError.doubleEnd(_:))
        {
          uint64_t v179 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v177 + 8))(v176, v178);
          uint64_t v179 = "";
        }
        uint64_t v202 = v285;
        v273(v285, v174, v99);
LABEL_90:
        v203 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v203 = 0;
        os_signpost_id_t v204 = OSSignpostID.rawValue.getter();
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v128, v175, v204, "Import Objects from Archive", v179, v203, 2u);
        swift_slowDealloc();

        uint64_t v120 = *(void (**)(char *, uint64_t))(v286 + 8);
        v120(v174, v99);
        v120(v202, v99);
        goto LABEL_33;
      }

      uint64_t v120 = *(void (**)(char *, uint64_t))(v286 + 8);
      v120(v174, v99);
LABEL_33:
      swift_release();
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v120)(v278, v99);
LABEL_104:
      v101[v287] = 0;
      return result;
    }
    swift_bridgeObjectRelease();

    unint64_t v97 = v265;
    uint64_t v141 = v266;
    uint64_t v180 = (uint64_t (**)(void, void, int64_t, id, uint64_t, uint64_t, double))v172;
  }
  else
  {
    uint64_t v180 = v260;
  }
  uint64_t v181 = v279;
  unint64_t v182 = v293;
  uint64_t v183 = sub_10027C8B8((uint64_t)v283, v279, v180, v282);
  v293 = v182;
  if (v182)
  {
    sub_1002829B8((uint64_t)v97, (uint64_t (*)(void))type metadata accessor for ICArchiveModel);

    sub_10017253C((uint64_t)a3, (unint64_t)v87);
    id v128 = OSSignposter.logHandle.getter();
    uint64_t v129 = v257;
    OSSignpostIntervalState.signpostID.getter();
    os_signpost_type_t v175 = static os_signpost_type_t.end.getter();
    if (OS_os_log.signpostsEnabled.getter())
    {
      swift_retain();
      id v184 = v249;
      checkForErrorAndConsumeState(state:)();
      swift_release();
      uint64_t v185 = v274;
      uint64_t v186 = v275;
      if ((*(unsigned int (**)(char *, uint64_t))(v274 + 88))(v184, v275) == enum case for OSSignpostError.doubleEnd(_:))
      {
        uint64_t v179 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v185 + 8))(v184, v186);
        uint64_t v179 = "";
      }
      uint64_t v202 = v285;
      v174 = v257;
      v273(v285, v257, v99);
      goto LABEL_90;
    }
    goto LABEL_72;
  }
  uint64_t v187 = (uint64_t)v183;
  self;
  v292 = (void *)swift_dynamicCastObjCClass();
  if (!v292)
  {
    swift_bridgeObjectRelease();
    goto LABEL_98;
  }
  if (!*(void *)&v97[*(int *)(v141 + 36)])
  {
    swift_bridgeObjectRelease();
    uint64_t v99 = v280;
    goto LABEL_98;
  }
  v291 = v181;
  swift_bridgeObjectRetain();
  uint64_t v188 = swift_bridgeObjectRetain();
  uint64_t v189 = v293;
  unint64_t v190 = (unint64_t)sub_100259FD8(v188, v187);
  v293 = v189;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  id v191 = [v292 subFolderIdentifiersOrderedSet];
  uint64_t v192 = v191;
  if (v190 >> 62)
  {
    id v205 = v191;
    swift_bridgeObjectRetain();
    uint64_t v193 = _CocoaArrayWrapper.endIndex.getter();
    if (v193)
    {
LABEL_77:
      if (v193 >= 1)
      {
        for (uint64_t i = 0; i != v193; ++i)
        {
          if ((v190 & 0xC000000000000001) != 0) {
            id v196 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v196 = *(id *)(v190 + 8 * i + 32);
          }
          uint64_t v197 = v196;
          [v192 addObject:v196];
        }
        goto LABEL_97;
      }
LABEL_122:
      __break(1u);
    }
  }
  else
  {
    uint64_t v193 = *(void *)((v190 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v194 = v191;
    swift_bridgeObjectRetain();
    if (v193) {
      goto LABEL_77;
    }
  }
LABEL_97:

  swift_bridgeObjectRelease_n();
  id v206 = v292;
  [v292 setSubFolderOrderMergeableDataDirty:1];
  [v206 saveSubFolderMergeableDataIfNeeded];

  uint64_t v99 = v280;
  unint64_t v97 = v265;
  uint64_t v181 = v279;
LABEL_98:
  NSProgress.throwIfCancelled()();
  v293 = v207;
  if (v207)
  {
    sub_1002829B8((uint64_t)v97, (uint64_t (*)(void))type metadata accessor for ICArchiveModel);

    sub_10017253C((uint64_t)a3, (unint64_t)v87);
    uint64_t v208 = OSSignposter.logHandle.getter();
    Swift::Int v209 = v251;
    OSSignpostIntervalState.signpostID.getter();
    os_signpost_type_t v210 = static os_signpost_type_t.end.getter();
    if (OS_os_log.signpostsEnabled.getter())
    {
      swift_retain();
      v211 = v248;
      checkForErrorAndConsumeState(state:)();
      swift_release();
      uint64_t v212 = v274;
      uint64_t v213 = v275;
      if ((*(unsigned int (**)(char *, uint64_t))(v274 + 88))(v211, v275) == enum case for OSSignpostError.doubleEnd(_:))
      {
        v214 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v212 + 8))(v211, v213);
        v214 = "";
      }
      v230 = v285;
      v231 = v251;
      v273(v285, v251, v99);
      v232 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v232 = 0;
      os_signpost_id_t v233 = OSSignpostID.rawValue.getter();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v208, v210, v233, "Import Objects from Archive", v214, v232, 2u);
      swift_slowDealloc();

      uint64_t v161 = *(void (**)(char *, uint64_t))(v286 + 8);
      v161(v231, v99);
      v161(v230, v99);
      goto LABEL_103;
    }
LABEL_102:

    uint64_t v161 = *(void (**)(char *, uint64_t))(v286 + 8);
    v161(v209, v99);
LABEL_103:
    swift_release();
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v161)(v278, v99);
    int64_t v101 = v288;
    goto LABEL_104;
  }
  v294 = 0;
  if (![v247 save:&v294])
  {
    v223 = v294;
    uint64_t v224 = _convertNSErrorToError(_:)();

    v293 = (char *)v224;
    swift_willThrow();
    sub_10017253C((uint64_t)a3, (unint64_t)v87);

    sub_1002829B8((uint64_t)v97, (uint64_t (*)(void))type metadata accessor for ICArchiveModel);
    uint64_t v208 = OSSignposter.logHandle.getter();
    Swift::Int v209 = v246;
    OSSignpostIntervalState.signpostID.getter();
    os_signpost_type_t v225 = static os_signpost_type_t.end.getter();
    if (OS_os_log.signpostsEnabled.getter())
    {
      swift_retain();
      v226 = v244;
      checkForErrorAndConsumeState(state:)();
      swift_release();
      uint64_t v227 = v274;
      uint64_t v228 = v275;
      if ((*(unsigned int (**)(char *, uint64_t))(v274 + 88))(v226, v275) == enum case for OSSignpostError.doubleEnd(_:))
      {
        v229 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v227 + 8))(v226, v228);
        v229 = "";
      }
      v239 = v285;
      v240 = v246;
      v273(v285, v246, v99);
      v241 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v241 = 0;
      os_signpost_id_t v242 = OSSignpostID.rawValue.getter();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v208, v225, v242, "Import Objects from Archive", v229, v241, 2u);
      swift_slowDealloc();

      uint64_t v161 = *(void (**)(char *, uint64_t))(v286 + 8);
      v161(v240, v99);
      v161(v239, v99);
      goto LABEL_103;
    }
    goto LABEL_102;
  }
  uint64_t v215 = v294;
  sub_1002829B8((uint64_t)v97, (uint64_t (*)(void))type metadata accessor for ICArchiveModel);

  sub_10017253C((uint64_t)a3, (unint64_t)v87);
  v216 = OSSignposter.logHandle.getter();
  v217 = v245;
  OSSignpostIntervalState.signpostID.getter();
  os_signpost_type_t v218 = static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    swift_retain();
    uint64_t v219 = v243;
    checkForErrorAndConsumeState(state:)();
    swift_release();
    uint64_t v220 = v274;
    uint64_t v221 = v275;
    if ((*(unsigned int (**)(char *, uint64_t))(v274 + 88))(v219, v275) == enum case for OSSignpostError.doubleEnd(_:))
    {
      uint64_t v222 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v220 + 8))(v219, v221);
      uint64_t v222 = "";
    }
    v235 = v285;
    v236 = v245;
    v273(v285, v245, v99);
    v237 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v237 = 0;
    os_signpost_id_t v238 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v216, v218, v238, "Import Objects from Archive", v222, v237, 2u);
    swift_slowDealloc();

    v234 = *(void (**)(char *, uint64_t))(v286 + 8);
    v234(v236, v99);
    v234(v235, v99);
  }
  else
  {

    v234 = *(void (**)(char *, uint64_t))(v286 + 8);
    v234(v217, v99);
  }
  swift_release();
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v234)(v278, v99);
  v288[v287] = 0;
  return result;
}

void *sub_10027C8B8(uint64_t a1, void *a2, uint64_t (**a3)(void, void, int64_t, id, uint64_t, uint64_t, double), void *a4)
{
  uint64_t result = sub_100276C20(a1, v4, a2, a3, a4);
  uint64_t v7 = result;
  if (!v5)
  {
    uint64_t v8 = result[2];
    if (v8)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = _swiftEmptyArrayStorage;
      uint64_t v10 = v7 + 7;
      do
      {
        uint64_t v11 = *((void *)v10 - 3);
        if (*v10)
        {
          uint64_t v20 = (void *)*((void *)v10 - 3);
          sub_10002F214(&qword_1006A3D90);
          swift_willThrowTypedImpl();
        }
        else
        {
          uint64_t v13 = *((void *)v10 - 2);
          uint64_t v12 = (void *)*((void *)v10 - 1);
          swift_bridgeObjectRetain();
          id v14 = v12;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v9 = sub_1001A8970(0, v9[2] + 1, 1, v9);
          }
          unint64_t v16 = v9[2];
          unint64_t v15 = v9[3];
          if (v16 >= v15 >> 1) {
            uint64_t v9 = sub_1001A8970((void *)(v15 > 1), v16 + 1, 1, v9);
          }
          v9[2] = v16 + 1;
          uint64_t v17 = &v9[3 * v16];
          v17[4] = v11;
          v17[5] = v13;
          v17[6] = v14;
        }
        v10 += 32;
        --v8;
      }
      while (v8);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v9 = _swiftEmptyArrayStorage;
    }
    uint64_t v18 = sub_100330CF8((uint64_t)v9);
    swift_bridgeObjectRelease();
    if (v18[2])
    {
      sub_10002F214(&qword_1006A10C0);
      uint64_t v19 = (void *)static _DictionaryStorage.allocate(capacity:)();
    }
    else
    {
      uint64_t v19 = &_swiftEmptyDictionarySingleton;
    }
    uint64_t v20 = v19;
    sub_100280BB0((uint64_t)v18, 1, &v20);
    swift_bridgeObjectRelease();
    return v20;
  }
  return result;
}

uint64_t sub_10027CADC(uint64_t a1, void *a2, uint64_t (**a3)(void, void, int64_t, id, uint64_t, uint64_t, double), void *a4)
{
  unint64_t v95 = a3;
  uint64_t v94 = a2;
  uint64_t v100 = a1;
  uint64_t v89 = type metadata accessor for ICAttachmentArchiveModel();
  __chkstk_darwin(v89);
  uint64_t v91 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = type metadata accessor for ICNoteArchiveModel();
  __chkstk_darwin(v88);
  os_signpost_type_t v90 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = type metadata accessor for ICFolderArchiveModel(0);
  __chkstk_darwin(v92);
  uint64_t v93 = (uint64_t)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_10002F214(&qword_10069D190);
  uint64_t v97 = *(void *)(v101 - 8);
  uint64_t v8 = __chkstk_darwin(v101);
  uint64_t v10 = (char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char **)((char *)&v76 - v11);
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v96 = *(void *)(v13 - 8);
  uint64_t v14 = __chkstk_darwin(v13);
  unint64_t v16 = (char *)&v76 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v76 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)&v76 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v25 = (char *)&v76 - v24;
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v76 - v26;
  NSProgress.throwIfCancelled()();
  if (v28) {
    return (uint64_t)v10;
  }
  id v81 = v12;
  uint64_t v80 = v22;
  uint64_t v78 = v19;
  unint64_t v79 = v16;
  uint64_t v86 = v10;
  uint64_t v87 = a4;
  unint64_t v84 = *(void *)(v98 + OBJC_IVAR____TtC11MobileNotes17ICArchiveImporter_fileManager + 8);
  swift_getObjectType();
  ICObjectReferences.identifier.getter();
  URL.appendingPathComponent(_:isDirectory:)();
  uint64_t v29 = v96;
  uint64_t v30 = *(void (**)(char *, uint64_t))(v96 + 8);
  uint64_t v83 = v25;
  uint64_t v31 = v25;
  uint64_t v32 = v96 + 8;
  v30(v31, v13);
  uint64_t v33 = dispatch thunk of ICFileManaging.contents(of:)();
  uint64_t v99 = v32;
  uint64_t v85 = v30;
  uint64_t v34 = v33;
  unint64_t v84 = v35;
  v30(v27, v13);
  uint64_t v36 = v97;
  uint64_t v37 = v81;
  uint64_t v38 = v101;
  (*(void (**)(char **, uint64_t, uint64_t))(v97 + 16))(v81, v100, v101);
  int v39 = (*(uint64_t (**)(char **, uint64_t))(v36 + 88))(v37, v38);
  uint64_t v77 = v34;
  if (v39 == enum case for ICObjectReferences.account<A>(_:))
  {
    (*(void (**)(char **, uint64_t))(v36 + 96))(v37, v101);
    uint64_t v40 = sub_10002F214(&qword_1006A10E8);
    uint64_t v41 = swift_projectBox();
    uint64_t v93 = *(void *)(v41 + *(int *)(v40 + 64));
    (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v80, v41, v13);
    uint64_t v42 = (uint64_t)v87;
    if (qword_10069AFB8 != -1) {
      swift_once();
    }
    sub_10025B030();
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    v108[0] = v102;
    v108[1] = v103;
    v108[2] = v104;
    v108[3] = v105;
    uint64_t v10 = (char *)sub_10027E024((uint64_t)v108, v93, v52, v94, (uint64_t)v95, v42);
    v85(v80, v13);
    sub_10017253C(v77, v84);
    sub_100282A18((uint64_t)v108);
    goto LABEL_24;
  }
  uint64_t v43 = v87;
  if (v39 == enum case for ICObjectReferences.folder<A>(_:))
  {
    (*(void (**)(char **, uint64_t))(v36 + 96))(v37, v101);
    uint64_t v44 = *v37;
    uint64_t v45 = sub_10002F214(&qword_1006A10E8);
    uint64_t v91 = v44;
    uint64_t v96 = *(void *)(swift_projectBox() + *(int *)(v45 + 64));
    if (qword_10069AFB8 != -1) {
      swift_once();
    }
    sub_1002828B8(&qword_1006A10F0, (void (*)(uint64_t))type metadata accessor for ICFolderArchiveModel);
    uint64_t v46 = v93;
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    uint64_t v82 = v13;
    uint64_t v58 = (unsigned __int8 *)(v98 + OBJC_IVAR____TtC11MobileNotes17ICArchiveImporter_configuration);
    swift_beginAccess();
    __int16 v59 = *v58;
    int v60 = v58[1];
    double v61 = *((double *)v58 + 1);
    id v63 = (void *)*((void *)v58 + 2);
    uint64_t v62 = *((void *)v58 + 3);
    if (v60) {
      __int16 v64 = 256;
    }
    else {
      __int16 v64 = 0;
    }
    __int16 v65 = v64 | v59;
    id v66 = v63;
    uint64_t v69 = sub_1003D6108(v61, (uint64_t)v94, (uint64_t)v95, v65, (uint64_t)v63, v62);

    id v70 = v69;
    uint64_t v72 = sub_10027C8B8(v96, v70, &off_100636F60, v87);

    sub_10027ED20(v72, (uint64_t)ICFolder_ptr, (void (*)(unint64_t, uint64_t))sub_1002BA074);
    uint64_t v74 = v73;
    swift_bridgeObjectRelease();
    id v75 = sub_1003D6500(v70, v74);
    swift_bridgeObjectRelease();

    sub_1003D66CC((uint64_t)v70);
    swift_bridgeObjectRelease();
    uint64_t v10 = *(char **)(v46 + 8);
    swift_bridgeObjectRetain();
    sub_10017253C(v77, v84);
    sub_1002829B8(v46, type metadata accessor for ICFolderArchiveModel);
    goto LABEL_24;
  }
  if (v39 == enum case for ICObjectReferences.note<A>(_:))
  {
    uint64_t v47 = (uint64_t *)v81;
    (*(void (**)(char **, uint64_t))(v36 + 96))(v81, v101);
    uint64_t v48 = *v47;
    uint64_t v49 = sub_10002F214(&qword_1006A10D8);
    uint64_t v93 = v48;
    uint64_t v50 = swift_projectBox();
    uint64_t v92 = *(void *)(v50 + *(int *)(v49 + 64));
    (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v78, v50, v13);
    if (qword_10069AFB8 != -1) {
      swift_once();
    }
    sub_1002828B8(&qword_1006A10E0, (void (*)(uint64_t))type metadata accessor for ICNoteArchiveModel);
    uint64_t v51 = (uint64_t)v90;
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    uint64_t v10 = sub_10027E358(v51, v92, v67, (uint64_t)v94, v95, v43);
    sub_10017253C(v77, v84);
    sub_1002829B8(v51, (uint64_t (*)(void))type metadata accessor for ICNoteArchiveModel);
    char v71 = &v106;
LABEL_23:
    v85(*((char **)v71 - 32), v13);
LABEL_24:
    swift_release();
    return (uint64_t)v10;
  }
  if (v39 == enum case for ICObjectReferences.attachment<A>(_:))
  {
    uint64_t v53 = (uint64_t *)v81;
    (*(void (**)(char **, uint64_t))(v36 + 96))(v81, v101);
    uint64_t v54 = *v53;
    uint64_t v55 = sub_10002F214(&qword_1006A10D0);
    uint64_t v93 = v54;
    uint64_t v56 = swift_projectBox();
    uint64_t v92 = *(void *)(v56 + *(int *)(v55 + 80));
    (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v79, v56, v13);
    uint64_t v57 = v91;
    if (qword_10069AFB8 != -1) {
      swift_once();
    }
    sub_1002828B8(&qword_1006A0600, (void (*)(uint64_t))type metadata accessor for ICAttachmentArchiveModel);
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    uint64_t v10 = sub_10027E94C(v57, v92, (int64_t)v79, (uint64_t)v94, (uint64_t)v95, v43);
    sub_10017253C(v77, v84);
    sub_1002829B8((uint64_t)v57, (uint64_t (*)(void))type metadata accessor for ICAttachmentArchiveModel);
    char v71 = &v107;
    goto LABEL_23;
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_10027E024(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = v6;
  uint64_t v12 = (double *)&v8[OBJC_IVAR____TtC11MobileNotes17ICArchiveImporter_configuration];
  swift_beginAccess();
  double v13 = v12[1];
  uint64_t v15 = (void *)*((void *)v12 + 2);
  uint64_t v14 = *((void *)v12 + 3);
  if (*((unsigned char *)v12 + 1)) {
    __int16 v16 = 256;
  }
  else {
    __int16 v16 = 0;
  }
  __int16 v17 = v16 | *(unsigned __int8 *)v12;
  id v18 = v15;
  uint64_t v19 = v14;
  uint64_t v20 = a1;
  id v21 = sub_100259884(a4, a5, v17, (uint64_t)v15, v19, v13);
  if (v7)
  {
  }
  else
  {
    uint64_t v23 = v21;

    self;
    uint64_t v24 = swift_dynamicCastObjCClass();
    if (v24)
    {
      uint64_t v25 = (void *)v24;
      id v26 = v23;
      uint64_t v27 = sub_10027C8B8(a2, v25, &off_100636F28, a6);
      sub_10027ED20(v27, (uint64_t)ICFolder_ptr, (void (*)(unint64_t, uint64_t))sub_1002BA074);
      uint64_t v33 = v32;
      swift_bridgeObjectRelease();
      id v37 = sub_100259A84(v25, v33);
      swift_bridgeObjectRelease();

      sub_100282A6C(a1 + 48, (uint64_t)v43);
      sub_100282A6C((uint64_t)v43, (uint64_t)&v44);
      uint64_t v38 = v44;
      if (v44)
      {
        id v39 = v26;
        uint64_t v40 = v8;
        sub_100282AD4((uint64_t)v43);
        sub_100280E74(v38, v25, (uint64_t)v40);

        sub_1001DA3A0((uint64_t)v43);
      }
      else
      {
      }
    }
    else
    {
      self;
      uint64_t v28 = swift_dynamicCastObjCClass();
      if (v28)
      {
        uint64_t v29 = (void *)v28;
        id v30 = v23;
        uint64_t v31 = sub_10027C8B8(a2, v29, &off_100636F60, a6);
        sub_10027ED20(v31, (uint64_t)ICFolder_ptr, (void (*)(unint64_t, uint64_t))sub_1002BA074);
        uint64_t v35 = v34;
        swift_bridgeObjectRelease();
        id v36 = sub_100259A84(v29, v35);

        swift_bridgeObjectRelease();
      }
    }
    uint64_t v7 = *(void *)(v20 + 8);
    swift_bridgeObjectRetain();
  }
  return v7;
}

char *sub_10027E358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (**a5)(void, void, int64_t, id, uint64_t, uint64_t, double), void *a6)
{
  id v62 = a6;
  uint64_t v7 = v6;
  uint64_t v59 = a4;
  int v60 = a5;
  Class isa = (void *)sub_10002F214(&qword_10069D190);
  uint64_t v11 = *(isa - 1);
  __chkstk_darwin(isa);
  double v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v14 = *(void *)(a2 + 16);
  uint64_t v56 = a2;
  if (v14)
  {
    uint64_t v57 = v6;
    uint64_t v58 = a1;
    uint64_t v67 = (char **)_swiftEmptyArrayStorage;
    sub_100169D0C(0, v14, 0);
    __int16 v16 = *(void (**)(char *, uint64_t, void *))(v11 + 16);
    uint64_t v15 = v11 + 16;
    uint64_t v17 = a2 + ((*(unsigned __int8 *)(v15 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 64));
    uint64_t v64 = *(void *)(v15 + 56);
    __int16 v65 = v16;
    id v63 = (void (**)(char *, void *))(v15 - 8);
    id v18 = v67;
    uint64_t v66 = v15;
    do
    {
      v65(v13, v17, isa);
      a1 = ICObjectReferences.recursiveAttachmentCount.getter();
      (*v63)(v13, isa);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100169D0C(0, (int64_t)(v18[2] + 1), 1);
        id v18 = v67;
      }
      unint64_t v20 = (unint64_t)v18[2];
      unint64_t v19 = (unint64_t)v18[3];
      id v21 = (char *)(v20 + 1);
      if (v20 >= v19 >> 1)
      {
        sub_100169D0C(v19 > 1, v20 + 1, 1);
        id v18 = v67;
      }
      void v18[2] = v21;
      v18[v20 + 4] = (char *)a1;
      v17 += v64;
      --v14;
    }
    while (v14);
    uint64_t v7 = v57;
  }
  else
  {
    id v18 = (char **)_swiftEmptyArrayStorage;
    id v21 = (char *)_swiftEmptyArrayStorage[2];
    if (!v21) {
      goto LABEL_31;
    }
    uint64_t v58 = a1;
  }
  uint64_t v22 = 0;
  uint64_t v23 = 0;
  do
  {
    uint64_t v24 = v18[(void)v22 + 4];
    BOOL v25 = __OFADD__(v23, v24);
    uint64_t v23 = &v24[(void)v23];
    if (v25)
    {
      __break(1u);
      goto LABEL_39;
    }
    ++v22;
  }
  while (v21 != v22);
  a1 = v58;
  while (1)
  {
    swift_bridgeObjectRelease();
    if (qword_10069ADF0 != -1) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for Logger();
    sub_10003293C(v26, (uint64_t)qword_1006A0FF0);
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 134217984;
      uint64_t v67 = (char **)v23;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Importing note… {attachmentCount: %ld}", v29, 0xCu);
      swift_slowDealloc();
    }

    uint64_t result = v23 + 1;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
      __break(1u);
      goto LABEL_42;
    }
    Class isa = NSProgress.addingChild(totalUnitCount:pendingUnitCount:)((Swift::Int64)result, 1).super.isa;
    uint64_t v31 = (unsigned __int8 *)(v7 + OBJC_IVAR____TtC11MobileNotes17ICArchiveImporter_configuration);
    swift_beginAccess();
    double v32 = *((double *)v31 + 1);
    uint64_t v33 = (void *)*((void *)v31 + 2);
    uint64_t v34 = *((void *)v31 + 3);
    if (v31[1]) {
      int v35 = 256;
    }
    else {
      int v35 = 0;
    }
    uint64_t v36 = v7;
    int v37 = v35 | *v31;
    id v38 = v33;
    uint64_t v39 = v61;
    uint64_t v40 = (char *)sub_1004B12C4(v32, v59, v60, v37, v33, v34);
    uint64_t v7 = v39;
    if (v39)
    {

      uint64_t v40 = (char *)[isa completedUnitCount];
      uint64_t v41 = v40 + 1;
      if (!__OFADD__(v40, 1)) {
        goto LABEL_36;
      }
      __break(1u);
    }
    uint64_t v42 = v40;

    uint64_t v43 = v42;
    uint64_t v44 = sub_10027C8B8(v56, v43, &off_100636F98, isa);
    if (!v39) {
      break;
    }

    uint64_t v45 = (char *)[isa completedUnitCount];
    uint64_t v41 = v45 + 1;
    if (!__OFADD__(v45, 1))
    {
LABEL_36:
      [isa setCompletedUnitCount:v41, v56];

      return (char *)v31;
    }
    __break(1u);
LABEL_31:
    uint64_t v23 = 0;
  }
  uint64_t v46 = v44;
  uint64_t v57 = v36;

  sub_10027ED20(v46, (uint64_t)ICAttachment_ptr, (void (*)(unint64_t, uint64_t))sub_1002BA080);
  uint64_t v48 = v47;
  swift_bridgeObjectRelease();
  double v49 = *((double *)v31 + 1);
  uint64_t v50 = (void *)*((void *)v31 + 2);
  uint64_t v51 = (char *)*((void *)v31 + 3);
  if (v31[1]) {
    __int16 v52 = 256;
  }
  else {
    __int16 v52 = 0;
  }
  __int16 v53 = v52 | *v31;
  id v54 = v50;
  id v55 = sub_1004B2678(v43, v48, v53, (uint64_t)v50, v51, v49);

  swift_bridgeObjectRelease();
  sub_1004B2B4C((uint64_t)v43);
  swift_bridgeObjectRelease();
  id v18 = &selRef_setSymbolConfiguration_;
  sub_10027F070((char)[v62 completedUnitCount]);
LABEL_39:
  uint64_t v31 = *(unsigned __int8 **)(a1 + 8);
  swift_bridgeObjectRetain();
  uint64_t result = (char *)[isa v18[204]];
  if (__OFADD__(result, 1))
  {
LABEL_42:
    __break(1u);
  }
  else
  {
    [isa setCompletedUnitCount:result + 1];

    return (char *)v31;
  }
  return result;
}

char *sub_10027E94C(void *a1, uint64_t a2, int64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v55 = a5;
  id v53 = a6;
  id v54 = a1;
  int64_t v50 = a3;
  uint64_t v51 = a2;
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v49 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = v6;
  uint64_t v11 = (unsigned __int8 *)(v6 + OBJC_IVAR____TtC11MobileNotes17ICArchiveImporter_configuration);
  swift_beginAccess();
  double v12 = *((double *)v11 + 1);
  double v13 = (void *)*((void *)v11 + 2);
  int64_t v14 = (void *)*((void *)v11 + 3);
  if (v11[1]) {
    int v15 = 256;
  }
  else {
    int v15 = 0;
  }
  uint64_t v16 = v15 | *v11;
  id v17 = v13;
  id v18 = (int *)v13;
  unint64_t v19 = v54;
  uint64_t v20 = v56;
  id v21 = (char *)sub_100247FF4(v12, a4, v55, v16, v18, v14);
  if (v20)
  {

    id v22 = v53;
    id v21 = (char *)[v53 completedUnitCount];
    uint64_t v23 = v21 + 1;
    if (!__OFADD__(v21, 1)) {
      goto LABEL_21;
    }
    __break(1u);
  }
  uint64_t v24 = v21;

  BOOL v25 = v24;
  id v22 = v53;
  uint64_t v26 = (char *)sub_10027C8B8(v51, v25, &off_100636FD0, v53);
  if (v20)
  {

    uint64_t v26 = (char *)[v22 completedUnitCount];
    uint64_t v23 = v26 + 1;
    if (!__OFADD__(v26, 1)) {
      goto LABEL_21;
    }
    __break(1u);
  }
  uint64_t v27 = (uint64_t)v26;

  sub_10027ED20(v27, (uint64_t)ICAttachment_ptr, (void (*)(unint64_t, uint64_t))sub_1002BA080);
  uint64_t v29 = v28;
  uint64_t v55 = v20;
  swift_bridgeObjectRelease();
  uint64_t v30 = v19[11];
  uint64_t v56 = v29;
  if (v30)
  {
    URL.appendingPathComponent(_:isDirectory:)();
    URL._bridgeToObjectiveC()(v31);
    uint64_t v33 = v32;
    id v34 = [v25 addMediaWithURL:v32];

    (*(void (**)(char *, uint64_t))(v49 + 8))(v10, v8);
  }
  int v35 = v19;
  uint64_t v36 = (double *)((char *)v19 + *(int *)(type metadata accessor for ICAttachmentArchiveModel() + 88));
  if (((_BYTE)v36[2] & 1) == 0) {

  }
  int v37 = *(void **)(v52 + OBJC_IVAR____TtC11MobileNotes17ICArchiveImporter_fileManager);
  uint64_t v38 = *(void *)(v52 + OBJC_IVAR____TtC11MobileNotes17ICArchiveImporter_fileManager + 8);
  double v39 = *((double *)v11 + 1);
  uint64_t v40 = (void *)*((void *)v11 + 2);
  uint64_t v41 = (char *)*((void *)v11 + 3);
  if (v11[1]) {
    int v42 = 256;
  }
  else {
    int v42 = 0;
  }
  int v43 = v42 | *v11;
  id v54 = v40;
  uint64_t v44 = v55;
  uint64_t v16 = v56;
  sub_100248780(v25, v50, v56, v37, v38, v43, (uint64_t)v40, v41, v39);
  if (v44)
  {

    swift_bridgeObjectRelease();
    uint64_t result = (char *)[v22 completedUnitCount];
    uint64_t v23 = result + 1;
    if (!__OFADD__(result, 1))
    {
LABEL_21:
      [v22 setCompletedUnitCount:v23];
      return (char *)v16;
    }
    __break(1u);
  }
  else
  {
    uint64_t v47 = v45;

    swift_bridgeObjectRelease();
    uint64_t v16 = v35[1];
    swift_bridgeObjectRetain();
    uint64_t result = (char *)[v22 completedUnitCount];
    uint64_t v23 = result + 1;
    if (!__OFADD__(result, 1)) {
      goto LABEL_21;
    }
  }
  __break(1u);
  return result;
}

void sub_10027ED20(uint64_t a1, uint64_t a2, void (*a3)(unint64_t, uint64_t))
{
  uint64_t v4 = a1 + 64;
  uint64_t v38 = (char *)&_swiftEmptyDictionarySingleton;
  uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
  if (-v5 < 64) {
    uint64_t v6 = ~(-1 << -(char)v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v40 = (unint64_t)(63 - v5) >> 6;
  swift_bridgeObjectRetain();
  int64_t v8 = 0;
  uint64_t v37 = v4;
  if (!v7) {
    goto LABEL_8;
  }
LABEL_5:
  unint64_t v9 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  unint64_t v10 = v9 | (v8 << 6);
  while (1)
  {
    uint64_t v11 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    int64_t v14 = *(void **)(*(void *)(a1 + 56) + 8 * v10);
    self;
    uint64_t v15 = swift_dynamicCastObjCClass();
    if (v15)
    {
      uint64_t v20 = v15;
      unint64_t v21 = *((void *)v38 + 2);
      if (*((void *)v38 + 3) <= v21)
      {
        unint64_t v39 = v21 + 1;
        id v24 = v14;
        swift_bridgeObjectRetain();
        a3(v39, 1);
        uint64_t v23 = (char *)&_swiftEmptyDictionarySingleton;
      }
      else
      {
        id v22 = v14;
        swift_bridgeObjectRetain();
        uint64_t v23 = v38;
      }
      uint64_t v38 = v23;
      Hasher.init(_seed:)();
      String.hash(into:)();
      Swift::Int v25 = Hasher._finalize()();
      uint64_t v26 = v38 + 64;
      uint64_t v27 = -1 << v38[32];
      unint64_t v28 = v25 & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)&v38[8 * (v28 >> 6) + 64]) == 0)
      {
        char v31 = 0;
        unint64_t v32 = (unint64_t)(63 - v27) >> 6;
        uint64_t v4 = v37;
        while (++v29 != v32 || (v31 & 1) == 0)
        {
          BOOL v33 = v29 == v32;
          if (v29 == v32) {
            unint64_t v29 = 0;
          }
          v31 |= v33;
          uint64_t v34 = *(void *)&v26[8 * v29];
          if (v34 != -1)
          {
            unint64_t v30 = __clz(__rbit64(~v34)) + (v29 << 6);
            goto LABEL_37;
          }
        }
        goto LABEL_41;
      }
      unint64_t v30 = __clz(__rbit64((-1 << v28) & ~*(void *)&v38[8 * (v28 >> 6) + 64])) | v28 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v4 = v37;
LABEL_37:
      *(void *)&v26[(v30 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v30;
      int v35 = (void *)(*((void *)v38 + 6) + 16 * v30);
      void *v35 = v12;
      v35[1] = v13;
      *(void *)(*((void *)v38 + 7) + 8 * v30) = v20;
      ++*((void *)v38 + 2);

      if (v7) {
        goto LABEL_5;
      }
    }
    else if (v7)
    {
      goto LABEL_5;
    }
LABEL_8:
    int64_t v16 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v16 >= v40) {
      goto LABEL_39;
    }
    unint64_t v17 = *(void *)(v4 + 8 * v16);
    int64_t v18 = v8 + 1;
    if (!v17)
    {
      int64_t v18 = v8 + 2;
      if (v8 + 2 >= v40) {
        goto LABEL_39;
      }
      unint64_t v17 = *(void *)(v4 + 8 * v18);
      if (!v17)
      {
        int64_t v18 = v8 + 3;
        if (v8 + 3 >= v40) {
          goto LABEL_39;
        }
        unint64_t v17 = *(void *)(v4 + 8 * v18);
        if (!v17)
        {
          int64_t v18 = v8 + 4;
          if (v8 + 4 >= v40) {
            goto LABEL_39;
          }
          unint64_t v17 = *(void *)(v4 + 8 * v18);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v17 - 1) & v17;
    unint64_t v10 = __clz(__rbit64(v17)) + (v18 << 6);
    int64_t v8 = v18;
  }
  int64_t v19 = v8 + 5;
  if (v8 + 5 >= v40)
  {
LABEL_39:
    sub_10017B518();
    return;
  }
  unint64_t v17 = *(void *)(v4 + 8 * v19);
  if (v17)
  {
    int64_t v18 = v8 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v18 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v18 >= v40) {
      goto LABEL_39;
    }
    unint64_t v17 = *(void *)(v4 + 8 * v18);
    ++v19;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_42:
  __break(1u);
}

void sub_10027F070(char a1)
{
  unint64_t v2 = v1;
  uint64_t v3 = OBJC_IVAR____TtC11MobileNotes17ICArchiveImporter_didReceiveMemoryWarning;
  if ((v1[OBJC_IVAR____TtC11MobileNotes17ICArchiveImporter_didReceiveMemoryWarning] & 1) != 0 || (a1 & 0x1F) == 0)
  {
    if (qword_10069ADF0 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10003293C(v4, (uint64_t)qword_1006A0FF0);
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v5, v6))
    {
      unint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Saving batch of imported notes and resetting inserted objects…", v7, 2u);
      swift_slowDealloc();
    }

    int64_t v8 = *(void **)&v2[OBJC_IVAR____TtC11MobileNotes17ICArchiveImporter_context];
    id v9 = [v8 insertedObjects];
    sub_100031418(0, (unint64_t *)&qword_1006A2780);
    sub_100282B00();
    uint64_t v10 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    id v16 = 0;
    unsigned int v11 = [v8 save:&v16];
    id v12 = v16;
    if (v11)
    {
      uint64_t v13 = v2;
      id v14 = v12;
      sub_10028159C(v10, (uint64_t)v13);
      swift_bridgeObjectRelease();

      v2[v3] = 0;
    }
    else
    {
      id v15 = v16;
      swift_bridgeObjectRelease();
      _convertNSErrorToError(_:)();

      swift_willThrow();
    }
  }
}

void sub_10027F284()
{
  swift_beginAccess();
  uint64_t Strong = (unsigned char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Strong[OBJC_IVAR____TtC11MobileNotes17ICArchiveImporter_didReceiveMemoryWarning] = 1;
  }
}

Swift::Int sub_10027F2E0(void **a1)
{
  uint64_t v2 = *(void *)(sub_10002F214(&qword_10069D190) - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_100190D5C(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_10027F38C(v6);
  *a1 = v3;
  return result;
}

Swift::Int sub_10027F38C(void *a1)
{
  uint64_t v3 = sub_10002F214(&qword_10069D190);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v136 = (char *)&v132 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v151 = (char *)&v132 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  os_log_type_t v146 = (char *)&v132 - v10;
  __chkstk_darwin(v9);
  uint64_t v147 = (char *)&v132 - v11;
  Swift::Int v12 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v12);
  if (result >= v12)
  {
    if (v12 < 0) {
      goto LABEL_141;
    }
    if (v12) {
      return sub_10027FEE4(0, v12, 1, a1);
    }
    return result;
  }
  if (v12 >= 0) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v12 + 1;
  }
  if (v12 < -1) {
    goto LABEL_149;
  }
  Swift::Int v133 = result;
  uint64_t v140 = v1;
  if (v12 < 2)
  {
    int64_t v18 = _swiftEmptyArrayStorage;
    unint64_t v139 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    if (v12 != 1)
    {
      unint64_t v21 = _swiftEmptyArrayStorage[2];
      uint64_t v20 = (char *)_swiftEmptyArrayStorage;
LABEL_106:
      uint64_t v132 = v18;
      if (v21 >= 2)
      {
        Swift::Int v125 = *a1;
        do
        {
          unint64_t v126 = v21 - 2;
          if (v21 < 2) {
            goto LABEL_136;
          }
          if (!v125) {
            goto LABEL_148;
          }
          uint64_t v127 = *(void *)&v20[16 * v126 + 32];
          uint64_t v128 = *(void *)&v20[16 * v21 + 24];
          uint64_t v129 = v140;
          sub_1002801D8(v125 + *(void *)(v4 + 72) * v127, v125 + *(void *)(v4 + 72) * *(void *)&v20[16 * v21 + 16], v125 + *(void *)(v4 + 72) * v128, v139);
          uint64_t v140 = v129;
          if (v129) {
            break;
          }
          if (v128 < v127) {
            goto LABEL_137;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v20 = sub_100190A20((uint64_t)v20);
          }
          if (v126 >= *((void *)v20 + 2)) {
            goto LABEL_138;
          }
          int v130 = &v20[16 * v126 + 32];
          *(void *)int v130 = v127;
          *((void *)v130 + 1) = v128;
          unint64_t v131 = *((void *)v20 + 2);
          if (v21 > v131) {
            goto LABEL_139;
          }
          memmove(&v20[16 * v21 + 16], &v20[16 * v21 + 32], 16 * (v131 - v21));
          *((void *)v20 + 2) = v131 - 1;
          unint64_t v21 = v131 - 1;
        }
        while (v131 > 2);
      }
LABEL_117:
      swift_bridgeObjectRelease();
      v132[2] = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v132 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v15 = v14 >> 1;
    uint64_t v16 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v16 + 16) = v15;
    unint64_t v17 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v132 = (void *)v16;
    unint64_t v139 = v16 + v17;
  }
  int64_t v19 = 0;
  uint64_t v144 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v145 = v4 + 16;
  uint64_t v154 = (char **)(v4 + 32);
  uint64_t v20 = (char *)_swiftEmptyArrayStorage;
  uint64_t v138 = v4;
  uint64_t v148 = a1;
  uint64_t v150 = v3;
  while (1)
  {
    id v22 = v19;
    uint64_t v23 = v19 + 1;
    Swift::Int v137 = (Swift::Int)v19;
    if ((uint64_t)(v19 + 1) >= v12)
    {
      Swift::Int v36 = (Swift::Int)(v19 + 1);
      uint64_t v44 = v140;
    }
    else
    {
      Swift::Int v143 = *a1;
      Swift::Int v24 = v143;
      uint64_t v25 = v4;
      uint64_t v26 = *(void *)(v4 + 72);
      uint64_t v155 = v26;
      Swift::Int v153 = v12;
      uint64_t v27 = v19;
      unint64_t v28 = *(void (**)(char *, Swift::Int, uint64_t))(v25 + 16);
      v28(v147, v143 + v26 * (void)v23, v3);
      Swift::Int v29 = v24 + v26 * (void)v27;
      uint64_t v30 = v25;
      char v31 = v146;
      v28(v146, v29, v3);
      unint64_t v32 = sub_1001ACB8C();
      BOOL v33 = v147;
      os_log_type_t v149 = (char *)v32;
      int v34 = dispatch thunk of static Comparable.< infix(_:_:)();
      uint64_t v3 = v150;
      LODWORD(v152) = v34;
      int v35 = *(void (**)(char *, uint64_t))(v30 + 8);
      v35(v31, v150);
      v35(v33, v3);
      Swift::Int v36 = (Swift::Int)(v27 + 2);
      Swift::Int v12 = v153;
      if (v36 >= v153)
      {
        uint64_t v44 = v140;
      }
      else
      {
        uint64_t v134 = v20;
        uint64_t v142 = v155 * (void)v23;
        Swift::Int v37 = v143;
        uint64_t v38 = v155 * v36;
        while (1)
        {
          Swift::Int v39 = v36;
          int64_t v40 = v147;
          v28(v147, v37 + v38, v3);
          uint64_t v41 = v146;
          v28(v146, v37 + v142, v3);
          int v42 = dispatch thunk of static Comparable.< infix(_:_:)();
          uint64_t v3 = v150;
          int v43 = v42;
          v35(v41, v150);
          v35(v40, v3);
          if ((v152 ^ v43)) {
            break;
          }
          Swift::Int v36 = v39 + 1;
          v37 += v155;
          Swift::Int v12 = v153;
          if (v153 == v36)
          {
            Swift::Int v36 = v153;
            uint64_t v44 = v140;
            uint64_t v20 = v134;
            goto LABEL_25;
          }
        }
        uint64_t v44 = v140;
        uint64_t v20 = v134;
        Swift::Int v36 = v39;
        Swift::Int v12 = v153;
      }
LABEL_25:
      a1 = v148;
      id v22 = (char *)v137;
      if (v152)
      {
        if (v36 < v137) {
          goto LABEL_142;
        }
        if (v137 < v36)
        {
          uint64_t v134 = v20;
          uint64_t v45 = 0;
          uint64_t v46 = v155;
          uint64_t v47 = v155 * (v36 - 1);
          uint64_t v48 = v36 * v155;
          Swift::Int v49 = v137;
          uint64_t v50 = v137 * v155;
          os_log_type_t v149 = (char *)v36;
          do
          {
            if (v49 != v36 + v45 - 1)
            {
              if (!v143) {
                goto LABEL_147;
              }
              uint64_t v51 = v44;
              unint64_t v52 = v143 + v50;
              Swift::Int v53 = v143 + v47;
              v152 = *v154;
              ((void (*)(char *, Swift::Int, uint64_t))v152)(v136, v143 + v50, v3);
              if (v50 < v47 || v52 >= v143 + v48)
              {
                swift_arrayInitWithTakeFrontToBack();
              }
              else if (v50 != v47)
              {
                swift_arrayInitWithTakeBackToFront();
              }
              ((void (*)(Swift::Int, char *, uint64_t))v152)(v53, v136, v3);
              uint64_t v44 = v51;
              a1 = v148;
              Swift::Int v36 = (Swift::Int)v149;
              uint64_t v46 = v155;
            }
            ++v49;
            --v45;
            v47 -= v46;
            v48 -= v46;
            v50 += v46;
          }
          while (v49 < v36 + v45);
          uint64_t v20 = v134;
          id v22 = (char *)v137;
          Swift::Int v12 = v153;
        }
      }
    }
    if (v36 >= v12) {
      goto LABEL_57;
    }
    if (__OFSUB__(v36, v22)) {
      goto LABEL_140;
    }
    if (v36 - (uint64_t)v22 >= v133) {
      goto LABEL_57;
    }
    if (__OFADD__(v22, v133)) {
      goto LABEL_143;
    }
    Swift::Int v54 = (uint64_t)&v22[v133] >= v12 ? v12 : (Swift::Int)&v22[v133];
    if (v54 < (uint64_t)v22) {
      break;
    }
    if (v36 != v54)
    {
      uint64_t v134 = v20;
      Swift::Int v135 = v54;
      uint64_t v55 = *(void *)(v138 + 72);
      uint64_t v56 = *(void (**)(char *, uint64_t, uint64_t))(v138 + 16);
      uint64_t v140 = v44;
      uint64_t v141 = v56;
      uint64_t v155 = v55 * (v36 - 1);
      uint64_t v142 = v55;
      Swift::Int v57 = v36 * v55;
      do
      {
        uint64_t v59 = 0;
        os_log_type_t v149 = (char *)v36;
        Swift::Int v143 = v57;
        while (1)
        {
          v152 = v22;
          Swift::Int v60 = *a1;
          Swift::Int v61 = v57 + v59 + *a1;
          id v62 = v147;
          id v63 = v141;
          v141(v147, v61, v3);
          uint64_t v64 = v155 + v59 + v60;
          __int16 v65 = a1;
          uint64_t v66 = v146;
          v63(v146, v64, v3);
          sub_1001ACB8C();
          LODWORD(v153) = dispatch thunk of static Comparable.< infix(_:_:)();
          uint64_t v67 = *v144;
          (*v144)(v66, v3);
          v67(v62, v3);
          if ((v153 & 1) == 0) {
            break;
          }
          uint64_t v68 = *v65;
          if (!*v65) {
            goto LABEL_145;
          }
          Swift::Int v57 = v143;
          uint64_t v69 = v68 + v155 + v59;
          id v70 = *v154;
          uint64_t v3 = v150;
          ((void (*)(char *, uint64_t, uint64_t))*v154)(v151, v68 + v143 + v59, v150);
          swift_arrayInitWithTakeFrontToBack();
          ((void (*)(uint64_t, char *, uint64_t))v70)(v69, v151, v3);
          v59 -= v142;
          id v22 = v152 + 1;
          a1 = v148;
          uint64_t v58 = v149;
          if (v149 == v152 + 1) {
            goto LABEL_50;
          }
        }
        uint64_t v58 = v149;
        uint64_t v3 = v150;
        a1 = v65;
        Swift::Int v57 = v143;
LABEL_50:
        Swift::Int v36 = (Swift::Int)(v58 + 1);
        v155 += v142;
        v57 += v142;
        id v22 = (char *)v137;
      }
      while (v36 != v135);
      Swift::Int v36 = v135;
      uint64_t v44 = v140;
      uint64_t v20 = v134;
    }
LABEL_57:
    if (v36 < (uint64_t)v22) {
      goto LABEL_135;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v140 = v44;
    os_log_type_t v149 = (char *)v36;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v20 = sub_1001904C8(0, *((void *)v20 + 2) + 1, 1, v20);
    }
    unint64_t v73 = *((void *)v20 + 2);
    unint64_t v72 = *((void *)v20 + 3);
    unint64_t v21 = v73 + 1;
    if (v73 >= v72 >> 1) {
      uint64_t v20 = sub_1001904C8((char *)(v72 > 1), v73 + 1, 1, v20);
    }
    *((void *)v20 + 2) = v21;
    uint64_t v74 = v20 + 32;
    id v75 = &v20[16 * v73 + 32];
    uint64_t v76 = v149;
    *(void *)id v75 = v137;
    *((void *)v75 + 1) = v76;
    if (v73)
    {
      while (1)
      {
        unint64_t v77 = v21 - 1;
        if (v21 >= 4)
        {
          uint64_t v82 = &v74[16 * v21];
          uint64_t v83 = *((void *)v82 - 8);
          uint64_t v84 = *((void *)v82 - 7);
          BOOL v88 = __OFSUB__(v84, v83);
          uint64_t v85 = v84 - v83;
          if (v88) {
            goto LABEL_124;
          }
          uint64_t v87 = *((void *)v82 - 6);
          uint64_t v86 = *((void *)v82 - 5);
          BOOL v88 = __OFSUB__(v86, v87);
          uint64_t v80 = v86 - v87;
          char v81 = v88;
          if (v88) {
            goto LABEL_125;
          }
          unint64_t v89 = v21 - 2;
          os_signpost_type_t v90 = &v74[16 * v21 - 32];
          uint64_t v92 = *(void *)v90;
          uint64_t v91 = *((void *)v90 + 1);
          BOOL v88 = __OFSUB__(v91, v92);
          uint64_t v93 = v91 - v92;
          if (v88) {
            goto LABEL_127;
          }
          BOOL v88 = __OFADD__(v80, v93);
          uint64_t v94 = v80 + v93;
          if (v88) {
            goto LABEL_130;
          }
          if (v94 >= v85)
          {
            os_signpost_type_t v112 = &v74[16 * v77];
            uint64_t v114 = *(void *)v112;
            uint64_t v113 = *((void *)v112 + 1);
            BOOL v88 = __OFSUB__(v113, v114);
            uint64_t v115 = v113 - v114;
            if (v88) {
              goto LABEL_134;
            }
            BOOL v105 = v80 < v115;
            goto LABEL_94;
          }
        }
        else
        {
          if (v21 != 3)
          {
            uint64_t v106 = *((void *)v20 + 4);
            uint64_t v107 = *((void *)v20 + 5);
            BOOL v88 = __OFSUB__(v107, v106);
            uint64_t v99 = v107 - v106;
            char v100 = v88;
            goto LABEL_88;
          }
          uint64_t v79 = *((void *)v20 + 4);
          uint64_t v78 = *((void *)v20 + 5);
          BOOL v88 = __OFSUB__(v78, v79);
          uint64_t v80 = v78 - v79;
          char v81 = v88;
        }
        if (v81) {
          goto LABEL_126;
        }
        unint64_t v89 = v21 - 2;
        unint64_t v95 = &v74[16 * v21 - 32];
        uint64_t v97 = *(void *)v95;
        uint64_t v96 = *((void *)v95 + 1);
        BOOL v98 = __OFSUB__(v96, v97);
        uint64_t v99 = v96 - v97;
        char v100 = v98;
        if (v98) {
          goto LABEL_129;
        }
        uint64_t v101 = &v74[16 * v77];
        uint64_t v103 = *(void *)v101;
        uint64_t v102 = *((void *)v101 + 1);
        BOOL v88 = __OFSUB__(v102, v103);
        uint64_t v104 = v102 - v103;
        if (v88) {
          goto LABEL_132;
        }
        if (__OFADD__(v99, v104)) {
          goto LABEL_133;
        }
        if (v99 + v104 >= v80)
        {
          BOOL v105 = v80 < v104;
LABEL_94:
          if (v105) {
            unint64_t v77 = v89;
          }
          goto LABEL_96;
        }
LABEL_88:
        if (v100) {
          goto LABEL_128;
        }
        int64_t v108 = &v74[16 * v77];
        uint64_t v110 = *(void *)v108;
        uint64_t v109 = *((void *)v108 + 1);
        BOOL v88 = __OFSUB__(v109, v110);
        uint64_t v111 = v109 - v110;
        if (v88) {
          goto LABEL_131;
        }
        if (v111 < v99) {
          goto LABEL_15;
        }
LABEL_96:
        unint64_t v116 = v77 - 1;
        if (v77 - 1 >= v21)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        Swift::Int v117 = *a1;
        if (!*a1) {
          goto LABEL_146;
        }
        uint64_t v118 = v20;
        BOOL v119 = &v74[16 * v116];
        uint64_t v120 = *(void *)v119;
        uint64_t v121 = &v74[16 * v77];
        uint64_t v122 = *((void *)v121 + 1);
        uint64_t v123 = v140;
        sub_1002801D8(v117 + *(void *)(v138 + 72) * *(void *)v119, v117 + *(void *)(v138 + 72) * *(void *)v121, v117 + *(void *)(v138 + 72) * v122, v139);
        uint64_t v140 = v123;
        if (v123) {
          goto LABEL_117;
        }
        if (v122 < v120) {
          goto LABEL_121;
        }
        if (v77 > *((void *)v118 + 2)) {
          goto LABEL_122;
        }
        *(void *)BOOL v119 = v120;
        *(void *)&v74[16 * v116 + 8] = v122;
        unint64_t v124 = *((void *)v118 + 2);
        if (v77 >= v124) {
          goto LABEL_123;
        }
        uint64_t v20 = v118;
        unint64_t v21 = v124 - 1;
        memmove(&v74[16 * v77], v121 + 16, 16 * (v124 - 1 - v77));
        *((void *)v118 + 2) = v124 - 1;
        a1 = v148;
        if (v124 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v21 = 1;
LABEL_15:
    Swift::Int v12 = a1[1];
    int64_t v19 = v149;
    uint64_t v4 = v138;
    if ((uint64_t)v149 >= v12)
    {
      int64_t v18 = v132;
      goto LABEL_106;
    }
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10027FEE4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v31 = a1;
  uint64_t v7 = sub_10002F214(&qword_10069D190);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v41 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  Swift::Int v37 = (char *)&v29 - v11;
  uint64_t result = __chkstk_darwin(v10);
  Swift::Int v36 = (char *)&v29 - v14;
  uint64_t v39 = a3;
  uint64_t v30 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    uint64_t v15 = v13 + 16;
    uint64_t v17 = *(void *)(v15 + 56);
    unint64_t v32 = (uint64_t (**)(char *, uint64_t))(v15 - 8);
    BOOL v33 = v16;
    int v34 = a4;
    uint64_t v35 = v15;
    int64_t v40 = (void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    uint64_t v44 = v17 * (v39 - 1);
    uint64_t v38 = v17;
    uint64_t v43 = v17 * v39;
LABEL_5:
    uint64_t v18 = 0;
    uint64_t v42 = v31;
    while (1)
    {
      uint64_t v19 = *a4;
      uint64_t v20 = v43 + v18 + *a4;
      unint64_t v21 = v36;
      id v22 = v33;
      v33(v36, v20, v7);
      uint64_t v23 = v37;
      v22(v37, v44 + v18 + v19, v7);
      sub_1001ACB8C();
      LOBYTE(v19) = dispatch thunk of static Comparable.< infix(_:_:)();
      Swift::Int v24 = *v32;
      (*v32)(v23, v7);
      uint64_t v25 = v21;
      a4 = v34;
      uint64_t result = v24(v25, v7);
      if ((v19 & 1) == 0)
      {
LABEL_4:
        v44 += v38;
        v43 += v38;
        if (++v39 == v30) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v26 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v27 = v26 + v44 + v18;
      unint64_t v28 = *v40;
      (*v40)(v41, v26 + v43 + v18, v7);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v28)(v27, v41, v7);
      v18 -= v38;
      if (v39 == ++v42) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1002801D8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v57 = sub_10002F214(&qword_10069D190);
  uint64_t v8 = *(void *)(v57 - 8);
  uint64_t v9 = __chkstk_darwin(v57);
  uint64_t v56 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v55 = (char *)&v47 - v11;
  uint64_t v13 = *(void *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_71;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_72;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v13;
  unint64_t v60 = a1;
  unint64_t v59 = a4;
  uint64_t v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v32 = a4 + v18;
      unint64_t v58 = a4 + v18;
      unint64_t v60 = a2;
      unint64_t v52 = (void (*)(char *, unint64_t, uint64_t))a1;
      if (v18 >= 1 && a1 < a2)
      {
        int v34 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
        uint64_t v54 = v8 + 16;
        Swift::Int v49 = (void (**)(char *, uint64_t))(v8 + 8);
        uint64_t v50 = v34;
        uint64_t v35 = -v13;
        unint64_t v51 = a4;
        uint64_t v48 = -v13;
        uint64_t v36 = v57;
        do
        {
          unint64_t v53 = a3 + v35;
          unint64_t v37 = a3;
          uint64_t v38 = v55;
          uint64_t v39 = v50;
          v50(v55, v32 + v35, v36);
          unint64_t v40 = a2 + v35;
          uint64_t v41 = v56;
          v39(v56, v40, v36);
          sub_1001ACB8C();
          LOBYTE(v39) = dispatch thunk of static Comparable.< infix(_:_:)();
          uint64_t v42 = *v49;
          (*v49)(v41, v36);
          v42(v38, v36);
          if (v39)
          {
            uint64_t v35 = v48;
            a3 = v53;
            if (v37 < a2 || v53 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v43 = v51;
            }
            else
            {
              unint64_t v43 = v51;
              if (v37 != a2) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v60 += v35;
          }
          else
          {
            unint64_t v44 = v58;
            v58 += v48;
            a3 = v53;
            BOOL v45 = v37 < v44 || v53 >= v44;
            uint64_t v35 = v48;
            if (v45)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v40 = a2;
              unint64_t v43 = v51;
            }
            else
            {
              unint64_t v43 = v51;
              if (v37 != v44) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v40 = a2;
            }
          }
          unint64_t v32 = v58;
          if (v58 <= v43) {
            break;
          }
          a2 = v40;
        }
        while (v40 > (unint64_t)v52);
      }
      goto LABEL_69;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v53 = a4 + v17;
    unint64_t v58 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      unint64_t v52 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
      uint64_t v54 = v8 + 16;
      uint64_t v50 = (void (*)(char *, unint64_t, uint64_t))(v8 + 8);
      uint64_t v20 = v57;
      do
      {
        uint64_t v21 = v13;
        unint64_t v22 = a3;
        uint64_t v23 = v55;
        Swift::Int v24 = v52;
        v52(v55, a2, v20);
        uint64_t v25 = v56;
        v24(v56, a4, v20);
        sub_1001ACB8C();
        LOBYTE(v24) = dispatch thunk of static Comparable.< infix(_:_:)();
        uint64_t v26 = *(void (**)(char *, uint64_t))v50;
        (*(void (**)(char *, uint64_t))v50)(v25, v20);
        v26(v23, v20);
        unint64_t v27 = v60;
        if (v24)
        {
          uint64_t v13 = v21;
          unint64_t v28 = a2 + v21;
          if (v60 < a2 || v60 >= v28)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v22;
          }
          else
          {
            a3 = v22;
            if (v60 == a2) {
              unint64_t v27 = a2;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        else
        {
          uint64_t v13 = v21;
          unint64_t v30 = v59 + v21;
          if (v60 < v59 || v60 >= v30)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v22;
          }
          else
          {
            a3 = v22;
            if (v60 != v59) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v59 = v30;
          unint64_t v28 = a2;
        }
        unint64_t v60 = v27 + v13;
        a4 = v59;
        if (v59 >= v53) {
          break;
        }
        a2 = v28;
      }
      while (v28 < a3);
    }
LABEL_69:
    sub_100190694(&v60, &v59, (uint64_t *)&v58);
    return 1;
  }
LABEL_73:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

id sub_1002807A0(void *a1, __int16 a2, void *a3, uint64_t a4, uint64_t a5, Class a6, uint64_t a7, uint64_t a8, double a9)
{
  uint64_t v17 = objc_allocWithZone(a6);

  return sub_1002809A4(a1, a2 & 0x101, a3, a4, a5, v17, a9, a7, a8);
}

id sub_10028083C(void *a1, __int16 a2, void *a3, uint64_t a4, void *a5, unsigned char *a6, double a7)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  a6[OBJC_IVAR____TtC11MobileNotes17ICArchiveImporter_isImporting] = 0;
  uint64_t v15 = OBJC_IVAR____TtC11MobileNotes17ICArchiveImporter_errors;
  uint64_t v16 = a6;
  *(void *)&a6[v15] = sub_10016807C((uint64_t)_swiftEmptyArrayStorage);
  *(void *)&v16[OBJC_IVAR____TtC11MobileNotes17ICArchiveImporter_saveBatchSize] = 32;
  v16[OBJC_IVAR____TtC11MobileNotes17ICArchiveImporter_didReceiveMemoryWarning] = 0;
  uint64_t v17 = &v16[OBJC_IVAR____TtC11MobileNotes17ICArchiveImporter_didReceiveMemoryWarningObserver];
  _OWORD *v17 = 0u;
  v17[1] = 0u;
  *(void *)&v16[OBJC_IVAR____TtC11MobileNotes17ICArchiveImporter_context] = a1;
  uint64_t v18 = (double *)&v16[OBJC_IVAR____TtC11MobileNotes17ICArchiveImporter_configuration];
  *(unsigned char *)uint64_t v18 = a2 & 1;
  *((unsigned char *)v18 + 1) = HIBYTE(a2) & 1;
  v18[1] = a7;
  *((void *)v18 + 2) = a3;
  *((void *)v18 + 3) = a4;
  uint64_t v19 = &v16[OBJC_IVAR____TtC11MobileNotes17ICArchiveImporter_fileManager];
  *uint64_t v19 = a5;
  v19[1] = &protocol witness table for NSFileManager;
  id v20 = a3;
  id v21 = a5;
  id v22 = a1;

  v25.receiver = v16;
  v25.super_class = ObjectType;
  id v23 = [super init];
  sub_1002770A0();

  return v23;
}

id sub_1002809A4(void *a1, __int16 a2, void *a3, uint64_t a4, uint64_t a5, unsigned char *a6, double a7, uint64_t a8, uint64_t a9)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  a6[OBJC_IVAR____TtC11MobileNotes17ICArchiveImporter_isImporting] = 0;
  uint64_t v18 = OBJC_IVAR____TtC11MobileNotes17ICArchiveImporter_errors;
  uint64_t v19 = a6;
  *(void *)&a6[v18] = sub_10016807C((uint64_t)_swiftEmptyArrayStorage);
  *(void *)&v19[OBJC_IVAR____TtC11MobileNotes17ICArchiveImporter_saveBatchSize] = 32;
  v19[OBJC_IVAR____TtC11MobileNotes17ICArchiveImporter_didReceiveMemoryWarning] = 0;
  id v20 = &v19[OBJC_IVAR____TtC11MobileNotes17ICArchiveImporter_didReceiveMemoryWarningObserver];
  *id v20 = 0u;
  v20[1] = 0u;
  *(void *)&v19[OBJC_IVAR____TtC11MobileNotes17ICArchiveImporter_context] = a1;
  id v21 = (double *)&v19[OBJC_IVAR____TtC11MobileNotes17ICArchiveImporter_configuration];
  *(unsigned char *)id v21 = a2 & 1;
  *((unsigned char *)v21 + 1) = HIBYTE(a2) & 1;
  v21[1] = a7;
  *((void *)v21 + 2) = a3;
  *((void *)v21 + 3) = a4;
  id v22 = &v19[OBJC_IVAR____TtC11MobileNotes17ICArchiveImporter_fileManager];
  void *v22 = a5;
  v22[1] = a9;
  id v23 = a3;
  swift_unknownObjectRetain();
  id v24 = a1;

  v27.receiver = v19;
  v27.super_class = ObjectType;
  id v25 = [super init];
  sub_1002770A0();

  swift_unknownObjectRelease();
  return v25;
}

BOOL sub_100280B0C(uint64_t a1, void *a2)
{
  sub_10002F034(a1, (uint64_t)&v7, &qword_10069B4D0);
  uint64_t v3 = v8;
  if (v8)
  {
    sub_100032E84(&v7, &v5);
    sub_10015E154(&v5, v6);
    [a2 removeObserver:_bridgeAnythingToObjectiveC<A>(_:)()];
    swift_unknownObjectRelease();
    sub_100018FE8((uint64_t)&v5);
  }
  return v3 == 0;
}

uint64_t sub_100280BB0(uint64_t result, char a2, void *a3)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v6 = result;
    long long v7 = (void *)swift_bridgeObjectRetain();
    uint64_t v9 = v7[4];
    uint64_t v8 = v7[5];
    uint64_t v10 = (void *)v7[6];
    uint64_t v11 = (void *)*a3;
    swift_bridgeObjectRetain();
    id v48 = v10;
    unint64_t v13 = sub_1002B63D4(v9, v8);
    uint64_t v14 = v11[2];
    BOOL v15 = (v12 & 1) == 0;
    uint64_t v16 = v14 + v15;
    if (__OFADD__(v14, v15))
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    char v17 = v12;
    if (v11[3] < v16)
    {
      sub_1002BA068(v16, a2 & 1);
      unint64_t v18 = sub_1002B63D4(v9, v8);
      if ((v17 & 1) != (v19 & 1))
      {
LABEL_27:
        uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
        __break(1u);
        return result;
      }
      unint64_t v13 = v18;
      id v20 = (void *)*a3;
      if ((v17 & 1) == 0) {
        goto LABEL_12;
      }
LABEL_9:
      id v21 = *(id *)(v20[7] + 8 * v13);
      swift_bridgeObjectRelease();

      uint64_t v22 = v20[7];
      *(void *)(v22 + 8 * v13) = v21;
      uint64_t v23 = v3 - 1;
      if (v3 == 1) {
        return swift_bridgeObjectRelease();
      }
LABEL_16:
      for (uint64_t i = (void **)(v6 + 72); ; i += 3)
      {
        uint64_t v33 = (uint64_t)*(i - 2);
        uint64_t v32 = (uint64_t)*(i - 1);
        int v34 = *i;
        uint64_t v35 = (void *)*a3;
        swift_bridgeObjectRetain();
        id v36 = v34;
        unint64_t v37 = sub_1002B63D4(v33, v32);
        uint64_t v39 = v35[2];
        BOOL v40 = (v38 & 1) == 0;
        BOOL v26 = __OFADD__(v39, v40);
        uint64_t v41 = v39 + v40;
        if (v26) {
          break;
        }
        char v42 = v38;
        if (v35[3] < v41)
        {
          sub_1002BA068(v41, 1);
          unint64_t v37 = sub_1002B63D4(v33, v32);
          if ((v42 & 1) != (v43 & 1)) {
            goto LABEL_27;
          }
        }
        unint64_t v44 = (void *)*a3;
        if (v42)
        {
          uint64_t v29 = 8 * v37;
          id v30 = *(id *)(v44[7] + 8 * v37);
          swift_bridgeObjectRelease();

          uint64_t v31 = v44[7];
          *(void *)(v31 + v29) = v30;
        }
        else
        {
          v44[(v37 >> 6) + 8] |= 1 << v37;
          BOOL v45 = (uint64_t *)(v44[6] + 16 * v37);
          *BOOL v45 = v33;
          v45[1] = v32;
          *(void *)(v44[7] + 8 * v37) = v36;
          uint64_t v46 = v44[2];
          BOOL v26 = __OFADD__(v46, 1);
          uint64_t v47 = v46 + 1;
          if (v26) {
            goto LABEL_26;
          }
          v44[2] = v47;
        }
        if (!--v23) {
          return swift_bridgeObjectRelease();
        }
      }
      goto LABEL_25;
    }
    if (a2)
    {
      id v20 = (void *)*a3;
      if (v12) {
        goto LABEL_9;
      }
    }
    else
    {
      sub_1002BE448();
      id v20 = (void *)*a3;
      if (v17) {
        goto LABEL_9;
      }
    }
LABEL_12:
    v20[(v13 >> 6) + 8] |= 1 << v13;
    id v24 = (uint64_t *)(v20[6] + 16 * v13);
    *id v24 = v9;
    v24[1] = v8;
    *(void *)(v20[7] + 8 * v13) = v48;
    uint64_t v25 = v20[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    void v20[2] = v27;
    uint64_t v23 = v3 - 1;
    if (v3 == 1) {
      return swift_bridgeObjectRelease();
    }
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_100280E74(uint64_t a1, void *a2, uint64_t a3)
{
  id v65 = a2;
  uint64_t v5 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v55 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v64 = (char *)&v51 - v8;
  uint64_t v68 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v68 - 8);
  uint64_t v10 = __chkstk_darwin(v68 - 8);
  unint64_t v52 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  char v71 = (char *)&v51 - v12;
  uint64_t v13 = _s3TagVMa();
  uint64_t v62 = *(void *)(v13 - 8);
  uint64_t v63 = v13;
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v61 = (uint64_t)&v51 - v17;
  uint64_t v18 = *(void *)(a1 + 56);
  uint64_t v56 = a1 + 56;
  uint64_t v19 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & v18;
  uint64_t v22 = (id *)(a3 + OBJC_IVAR____TtC11MobileNotes17ICArchiveImporter_configuration);
  uint64_t v66 = a1;
  swift_bridgeObjectRetain();
  unint64_t v60 = v22;
  swift_beginAccess();
  int64_t v23 = 0;
  uint64_t v67 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  int64_t v57 = (unint64_t)(v19 + 63) >> 6;
  unint64_t v58 = (void (**)(char *, uint64_t, uint64_t))(v9 + 32);
  unint64_t v59 = (void (**)(char *, uint64_t))(v9 + 8);
  unint64_t v53 = 0x8000000100555FE0;
  uint64_t v54 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  while (1)
  {
    if (v21)
    {
      uint64_t v69 = (v21 - 1) & v21;
      int64_t v70 = v23;
      unint64_t v26 = __clz(__rbit64(v21)) | (v23 << 6);
      goto LABEL_24;
    }
    int64_t v27 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v27 >= v57) {
      return swift_release();
    }
    unint64_t v28 = *(void *)(v56 + 8 * v27);
    int64_t v29 = v23 + 1;
    if (!v28)
    {
      int64_t v29 = v23 + 2;
      if (v23 + 2 >= v57) {
        return swift_release();
      }
      unint64_t v28 = *(void *)(v56 + 8 * v29);
      if (!v28)
      {
        int64_t v29 = v23 + 3;
        if (v23 + 3 >= v57) {
          return swift_release();
        }
        unint64_t v28 = *(void *)(v56 + 8 * v29);
        if (!v28)
        {
          int64_t v29 = v23 + 4;
          if (v23 + 4 >= v57) {
            return swift_release();
          }
          unint64_t v28 = *(void *)(v56 + 8 * v29);
          if (!v28) {
            break;
          }
        }
      }
    }
LABEL_23:
    uint64_t v69 = (v28 - 1) & v28;
    int64_t v70 = v29;
    unint64_t v26 = __clz(__rbit64(v28)) + (v29 << 6);
LABEL_24:
    uint64_t v31 = v61;
    sub_1002252C0(*(void *)(v66 + 48) + *(void *)(v62 + 72) * v26, v61);
    sub_100282954(v31, (uint64_t)v16);
    char v32 = *(unsigned char *)v60;
    id v33 = v60[2];
    swift_bridgeObjectRetain();
    id v34 = v65;
    NSString v35 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v36 = [self hashtagWithDisplayText:v35 account:v34 createIfNecessary:1];

    if (!v36) {
      goto LABEL_37;
    }
    uint64_t v37 = (uint64_t)v64;
    if (v32)
    {
      NSString v38 = String._bridgeToObjectiveC()();
      [v36 setDisplayText:v38];

      [v36 unmarkForDeletion];
      NSString v39 = String._bridgeToObjectiveC()();
      [v36 updateChangeCountWithReason:v39];
    }
    BOOL v40 = v16;
    sub_10002F034((uint64_t)v16, v37, (uint64_t *)&unk_1006A3E20);
    uint64_t v41 = v68;
    char v42 = *v67;
    if ((*v67)(v37, 1, v68) != 1)
    {
      (*v58)(v71, v37, v41);
      uint64_t v16 = v40;
      int64_t v23 = v70;
      goto LABEL_5;
    }
    id v43 = [v36 creationDate];
    if (!v43)
    {
      uint64_t v46 = (uint64_t)v55;
      uint64_t v41 = v68;
      (*v54)(v55, 1, 1, v68);
      uint64_t v16 = v40;
      int64_t v23 = v70;
LABEL_32:
      static Date.now.getter();
      sub_10002B754(v46, (uint64_t *)&unk_1006A3E20);
      goto LABEL_33;
    }
    unint64_t v44 = v43;
    BOOL v45 = v52;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v46 = (uint64_t)v55;
    uint64_t v47 = v45;
    uint64_t v41 = v68;
    id v48 = *v58;
    (*v58)(v55, (uint64_t)v47, v68);
    (*v54)((char *)v46, 0, 1, v41);
    unsigned int v49 = v42(v46, 1, v41);
    uint64_t v16 = v40;
    int64_t v23 = v70;
    if (v49 == 1) {
      goto LABEL_32;
    }
    v48(v71, v46, v41);
LABEL_33:
    sub_10002B754(v37, (uint64_t *)&unk_1006A3E20);
LABEL_5:
    id v24 = v71;
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    (*v59)(v24, v41);
    [v36 setCreationDate:isa];

    sub_1002829B8((uint64_t)v16, (uint64_t (*)(void))_s3TagVMa);
    unint64_t v21 = v69;
  }
  uint64_t v30 = v23 + 5;
  if (v23 + 5 >= v57) {
    return swift_release();
  }
  unint64_t v28 = *(void *)(v56 + 8 * v30);
  if (v28)
  {
    int64_t v29 = v23 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v29 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v29 >= v57) {
      return swift_release();
    }
    unint64_t v28 = *(void *)(v56 + 8 * v29);
    ++v30;
    if (v28) {
      goto LABEL_23;
    }
  }
LABEL_36:
  __break(1u);
LABEL_37:
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_10028159C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_100031418(0, (unint64_t *)&qword_1006A2780);
    sub_100282B00();
    Set.Iterator.init(_cocoa:)();
    uint64_t v3 = v19;
    uint64_t v18 = v20;
    uint64_t v4 = v21;
    uint64_t v5 = v22;
    unint64_t v6 = v23;
  }
  else
  {
    uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v18 = a1 + 56;
    uint64_t v4 = ~v7;
    uint64_t v8 = -v7;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v6 = v9 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
  }
  int64_t v17 = (unint64_t)(v4 + 64) >> 6;
  if (v3 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v6)
    {
      uint64_t v10 = (v6 - 1) & v6;
      unint64_t v11 = __clz(__rbit64(v6)) | (v5 << 6);
      uint64_t v12 = v5;
      goto LABEL_29;
    }
    int64_t v14 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      break;
    }
    if (v14 >= v17) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v18 + 8 * v14);
    uint64_t v12 = v5 + 1;
    if (!v15)
    {
      uint64_t v12 = v5 + 2;
      if (v5 + 2 >= v17) {
        goto LABEL_32;
      }
      unint64_t v15 = *(void *)(v18 + 8 * v12);
      if (!v15)
      {
        uint64_t v12 = v5 + 3;
        if (v5 + 3 >= v17) {
          goto LABEL_32;
        }
        unint64_t v15 = *(void *)(v18 + 8 * v12);
        if (!v15)
        {
          uint64_t v12 = v5 + 4;
          if (v5 + 4 >= v17) {
            goto LABEL_32;
          }
          unint64_t v15 = *(void *)(v18 + 8 * v12);
          if (!v15)
          {
            uint64_t v12 = v5 + 5;
            if (v5 + 5 >= v17) {
              goto LABEL_32;
            }
            unint64_t v15 = *(void *)(v18 + 8 * v12);
            if (!v15)
            {
              uint64_t v16 = v5 + 6;
              while (v17 != v16)
              {
                unint64_t v15 = *(void *)(v18 + 8 * v16++);
                if (v15)
                {
                  uint64_t v12 = v16 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_10017B518();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v10 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + (v12 << 6);
LABEL_29:
    id v13 = *(id *)(*(void *)(v3 + 48) + 8 * v11);
    if (!v13) {
      goto LABEL_32;
    }
    while (1)
    {
      [*(id *)(a2 + OBJC_IVAR____TtC11MobileNotes17ICArchiveImporter_context) refreshObject:v13 mergeChanges:0];

      uint64_t v5 = v12;
      unint64_t v6 = v10;
      if ((v3 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (__CocoaSet.Iterator.next()())
      {
        sub_100031418(0, (unint64_t *)&qword_1006A2780);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v13 = v24;
        swift_unknownObjectRelease();
        uint64_t v12 = v5;
        uint64_t v10 = v6;
        if (v24) {
          continue;
        }
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

void *sub_100281880(uint64_t a1, uint64_t a2, void *a3, uint64_t (**a4)(void, void, int64_t, id, uint64_t, uint64_t, double), void *a5)
{
  int64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    sub_100169CEC(0, v6, 0);
    uint64_t v8 = *(void *)(sub_10002F214(&qword_10069D190) - 8);
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v23 = *(void *)(v8 + 72);
    while (1)
    {
      uint64_t v10 = sub_10027CADC(v9, a3, a4, a5);
      if (v5) {
        break;
      }
      uint64_t v14 = v10;
      uint64_t v15 = v11;
      uint64_t v16 = v12;
      char v17 = v13;
      unint64_t v19 = _swiftEmptyArrayStorage[2];
      unint64_t v18 = _swiftEmptyArrayStorage[3];
      unint64_t v20 = v19 + 1;
      if (v19 >= v18 >> 1)
      {
        sub_100169CEC(v18 > 1, v19 + 1, 1);
        unint64_t v20 = v19 + 1;
      }
      _swiftEmptyArrayStorage[2] = v20;
      uint64_t v21 = &_swiftEmptyArrayStorage[4 * v19];
      v21[4] = v14;
      v21[5] = v15;
      void v21[6] = v16;
      *((unsigned char *)v21 + 56) = v17 & 1;
      v9 += v23;
      if (!--v6) {
        return _swiftEmptyArrayStorage;
      }
    }
    swift_release();
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100281A10(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_10002F214(&qword_10069B310);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  id v33 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v10);
  uint64_t v46 = (char *)v30 - v13;
  uint64_t v47 = (char *)_swiftEmptyArrayStorage;
  uint64_t v42 = *(void *)(a1 + 16);
  if (!v42)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    sub_10002B754((uint64_t)v7, &qword_10069B310);
    return (uint64_t)v47;
  }
  unint64_t v14 = 0;
  NSString v38 = v7;
  uint64_t v39 = v9 + 48;
  uint64_t v44 = a2;
  BOOL v45 = (void (**)(char *, char *, uint64_t))(v9 + 32);
  char v32 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  v30[1] = v2;
  uint64_t v31 = (void *)(a2 + 56);
  uint64_t v40 = v9 + 56;
  uint64_t v41 = v9 + 16;
  v30[0] = (v9 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  uint64_t v36 = v8;
  uint64_t v37 = a1;
  uint64_t v35 = v9;
  while (1)
  {
    if (v14 >= *(void *)(a1 + 16))
    {
      __break(1u);
      goto LABEL_30;
    }
    unint64_t v15 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v16 = *(void *)(v9 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v7, a1 + v15 + v16 * v14, v8);
    id v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v34(v7, 0, 1, v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
      goto LABEL_28;
    }
    id v43 = *v45;
    v43(v46, v7, v8);
    uint64_t v17 = URL.pathExtension.getter();
    uint64_t v19 = v18;
    uint64_t v20 = *(void *)(a2 + 16);
    if (!v20) {
      goto LABEL_20;
    }
    uint64_t v21 = v17;
    if (*(void *)(v44 + 32) != v17 || *(void *)(v44 + 40) != v18)
    {
      uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
      if ((result & 1) == 0) {
        break;
      }
    }
LABEL_3:
    swift_bridgeObjectRelease();
    uint64_t v8 = v36;
    uint64_t result = (*v32)(v46, v36);
    uint64_t v7 = v38;
LABEL_4:
    a2 = v44;
    ++v14;
    a1 = v37;
    uint64_t v9 = v35;
    if (v14 == v42)
    {
      v34(v7, 1, 1, v8);
      goto LABEL_28;
    }
  }
  if (v20 == 1)
  {
LABEL_20:
    swift_bridgeObjectRelease();
    uint64_t v8 = v36;
    unint64_t v26 = (uint64_t (*)(char *, char *, uint64_t))v43;
    v43(v33, v46, v36);
    int64_t v27 = v47;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_100169BAC(0, *((void *)v27 + 2) + 1, 1);
      int64_t v27 = v47;
    }
    uint64_t v7 = v38;
    unint64_t v29 = *((void *)v27 + 2);
    unint64_t v28 = *((void *)v27 + 3);
    if (v29 >= v28 >> 1)
    {
      sub_100169BAC(v28 > 1, v29 + 1, 1);
      int64_t v27 = v47;
    }
    *((void *)v27 + 2) = v29 + 1;
    uint64_t result = v26(&v27[v15 + v29 * v16], v33, v8);
    uint64_t v47 = v27;
    goto LABEL_4;
  }
  uint64_t v22 = v31;
  uint64_t v23 = 1;
  while (1)
  {
    uint64_t v24 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (*(v22 - 1) == v21 && *v22 == v19) {
      goto LABEL_3;
    }
    uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
    if (result) {
      goto LABEL_3;
    }
    v22 += 2;
    ++v23;
    if (v24 == v20) {
      goto LABEL_20;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_100281E40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v77 = a2;
  uint64_t v7 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v64 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v71 = (uint64_t)&v62 - v10;
  uint64_t v70 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v70 - 8);
  uint64_t v12 = __chkstk_darwin(v70 - 8);
  uint64_t v62 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v68 = (char *)&v62 - v14;
  uint64_t v15 = _s3TagVMa();
  uint64_t v75 = *(void *)(v15 - 8);
  uint64_t v76 = v15;
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v74 = (uint64_t)&v62 - v19;
  uint64_t v20 = *(void *)(a1 + 56);
  uint64_t v65 = a1 + 56;
  uint64_t v21 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v22 = -1;
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  unint64_t v23 = v22 & v20;
  uint64_t v24 = (double *)(a4 + OBJC_IVAR____TtC11MobileNotes17ICArchiveImporter_configuration);
  uint64_t v79 = a1;
  swift_bridgeObjectRetain();
  unint64_t v73 = v24;
  uint64_t result = swift_beginAccess();
  int64_t v26 = 0;
  int64_t v66 = (unint64_t)(v21 + 63) >> 6;
  uint64_t v78 = a3;
  uint64_t v72 = a3 + 8;
  uint64_t v27 = (uint64_t)v18;
  uint64_t v80 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  uint64_t v67 = (void (**)(char *, uint64_t, uint64_t))(v11 + 32);
  uint64_t v63 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  uint64_t v69 = (void (**)(char *, uint64_t))(v11 + 8);
  while (1)
  {
    if (v23)
    {
      int64_t v81 = v26;
      uint64_t v82 = (v23 - 1) & v23;
      unint64_t v30 = __clz(__rbit64(v23)) | (v26 << 6);
      goto LABEL_21;
    }
    BOOL v31 = __OFADD__(v26, 1);
    int64_t v32 = v26 + 1;
    if (v31)
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v32 >= v66) {
      return swift_release();
    }
    unint64_t v33 = *(void *)(v65 + 8 * v32);
    if (!v33) {
      break;
    }
LABEL_20:
    int64_t v81 = v32;
    uint64_t v82 = (v33 - 1) & v33;
    unint64_t v30 = __clz(__rbit64(v33)) + (v32 << 6);
LABEL_21:
    uint64_t v35 = v74;
    sub_1002252C0(*(void *)(v79 + 48) + *(void *)(v75 + 72) * v30, v74);
    sub_100282954(v35, v27);
    unsigned int v36 = *(unsigned __int8 *)v73;
    int v37 = *((unsigned __int8 *)v73 + 1);
    double v38 = v73[1];
    uint64_t v39 = (void *)*((void *)v73 + 2);
    uint64_t v84 = *((void *)v73 + 3);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v40 = (uint64_t *)(v27 + *(int *)(v76 + 20));
    uint64_t v41 = *v40;
    uint64_t v42 = v40[1];
    uint64_t v43 = v78;
    uint64_t v44 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t, double))(v78 + 8);
    if (v37) {
      int v45 = 256;
    }
    else {
      int v45 = 0;
    }
    uint64_t v46 = v45 | v36;
    id v47 = v39;
    uint64_t v48 = v85;
    uint64_t v49 = v44(v41, v42, v46, v39, v84, ObjectType, v43, v38);
    uint64_t v85 = v48;
    if (v48)
    {

      sub_1002829B8(v27, (uint64_t (*)(void))_s3TagVMa);
      return swift_release();
    }
    uint64_t v50 = (void *)v49;
    uint64_t v51 = v71;
    sub_10002F034(v27, v71, (uint64_t *)&unk_1006A3E20);
    unint64_t v52 = *v80;
    uint64_t v53 = v70;
    if ((*v80)(v51, 1, v70) != 1)
    {
      unint64_t v28 = v68;
      (*v67)(v68, v51, v53);
      int64_t v26 = v81;
      goto LABEL_5;
    }
    id v54 = [v50 creationDate];
    if (!v54)
    {
      uint64_t v61 = (uint64_t)v64;
      (*v63)(v64, 1, 1, v53);
      int64_t v26 = v81;
LABEL_30:
      unint64_t v28 = v68;
      static Date.now.getter();
      sub_10002B754(v61, (uint64_t *)&unk_1006A3E20);
      goto LABEL_31;
    }
    uint64_t v55 = v54;
    uint64_t v56 = v62;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    int64_t v57 = *v67;
    uint64_t v58 = v27;
    unint64_t v59 = v64;
    (*v67)(v64, (uint64_t)v56, v53);
    (*v63)(v59, 0, 1, v53);
    unsigned int v60 = v52((uint64_t)v59, 1, v53);
    uint64_t v61 = (uint64_t)v59;
    uint64_t v27 = v58;
    int64_t v26 = v81;
    if (v60 == 1) {
      goto LABEL_30;
    }
    unint64_t v28 = v68;
    v57(v68, v61, v53);
LABEL_31:
    sub_10002B754(v51, (uint64_t *)&unk_1006A3E20);
LABEL_5:
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    (*v69)(v28, v53);
    [v50 setCreationDate:isa];

    uint64_t result = sub_1002829B8(v27, (uint64_t (*)(void))_s3TagVMa);
    unint64_t v23 = v82;
  }
  int64_t v34 = v32 + 1;
  if (v32 + 1 >= v66) {
    return swift_release();
  }
  unint64_t v33 = *(void *)(v65 + 8 * v34);
  if (v33) {
    goto LABEL_19;
  }
  int64_t v34 = v32 + 2;
  if (v32 + 2 >= v66) {
    return swift_release();
  }
  unint64_t v33 = *(void *)(v65 + 8 * v34);
  if (v33) {
    goto LABEL_19;
  }
  int64_t v34 = v32 + 3;
  if (v32 + 3 >= v66) {
    return swift_release();
  }
  unint64_t v33 = *(void *)(v65 + 8 * v34);
  if (v33) {
    goto LABEL_19;
  }
  int64_t v34 = v32 + 4;
  if (v32 + 4 >= v66) {
    return swift_release();
  }
  unint64_t v33 = *(void *)(v65 + 8 * v34);
  if (v33)
  {
LABEL_19:
    int64_t v32 = v34;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v32 = v34 + 1;
    if (__OFADD__(v34, 1)) {
      break;
    }
    if (v32 >= v66) {
      return swift_release();
    }
    unint64_t v33 = *(void *)(v65 + 8 * v32);
    ++v34;
    if (v33) {
      goto LABEL_20;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

unint64_t sub_100282538(unint64_t result)
{
  if (result > 4) {
    return 0;
  }
  return result;
}

void sub_100282548()
{
  sub_10027A1D8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(char **)(v0 + 32), *(void **)(v0 + 40));
}

unint64_t sub_10028256C()
{
  unint64_t result = qword_1006A1060;
  if (!qword_1006A1060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A1060);
  }
  return result;
}

unint64_t sub_1002825C8()
{
  unint64_t result = qword_1006A1068;
  if (!qword_1006A1068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A1068);
  }
  return result;
}

unint64_t sub_100282620()
{
  unint64_t result = qword_1006A1070;
  if (!qword_1006A1070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A1070);
  }
  return result;
}

unint64_t sub_100282678()
{
  unint64_t result = qword_1006A1078;
  if (!qword_1006A1078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A1078);
  }
  return result;
}

uint64_t type metadata accessor for ICArchiveImporter()
{
  return self;
}

void destroy for ICArchiveImporter.Configuration(uint64_t a1)
{
}

uint64_t initializeWithCopy for ICArchiveImporter.Configuration(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 16) = v3;
  id v4 = (id)v3;
  return a1;
}

uint64_t assignWithCopy for ICArchiveImporter.Configuration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  long long v3 = *(void **)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  uint64_t v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v3;
  id v6 = v3;

  *(void *)(a1 + 24) = v4;
  return a1;
}

uint64_t assignWithTake for ICArchiveImporter.Configuration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ICArchiveImporter.Configuration(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ICArchiveImporter.Configuration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICArchiveImporter.Configuration()
{
  return &type metadata for ICArchiveImporter.Configuration;
}

ValueMetadata *type metadata accessor for ICArchiveImporter.Errors()
{
  return &type metadata for ICArchiveImporter.Errors;
}

uint64_t sub_1002828B8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100282900()
{
  unint64_t result = qword_1006A10B8;
  if (!qword_1006A10B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A10B8);
  }
  return result;
}

uint64_t sub_100282954(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s3TagVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002829B8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100282A18(uint64_t a1)
{
  return a1;
}

uint64_t sub_100282A6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002F214(&qword_1006A0AC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100282AD4(uint64_t a1)
{
  return a1;
}

unint64_t sub_100282B00()
{
  unint64_t result = qword_1006A0DF0;
  if (!qword_1006A0DF0)
  {
    sub_100031418(255, (unint64_t *)&qword_1006A2780);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0DF0);
  }
  return result;
}

uint64_t sub_100282B68()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100282BA0()
{
}

uint64_t sub_100282BA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002F214(&qword_10069B4D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_100282C10()
{
}

uint64_t sub_100282C28@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v192 = a1;
  uint64_t v3 = sub_10002F214(&qword_1006A10F8);
  __chkstk_darwin(v3 - 8);
  uint64_t v186 = (char *)&v149 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002F214(&qword_1006A1100);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v168 = (char *)&v149 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  os_signpost_type_t v175 = (char *)&v149 - v8;
  uint64_t v9 = sub_10002F214(&qword_1006A1108);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v190 = (uint64_t)&v149 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v158 = (char *)&v149 - v12;
  uint64_t v13 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v178 = (uint64_t)&v149 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v154 = (char *)&v149 - v16;
  uint64_t v17 = sub_10002F214(&qword_1006A1110);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v171 = (char *)&v149 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v176 = (uint64_t)&v149 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  id v169 = (char *)&v149 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  v163 = (char *)&v149 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v185 = (char *)&v149 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v151 = (uint64_t)&v149 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  char v156 = (char *)&v149 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v150 = (uint64_t)&v149 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  Swift::Int v153 = (char *)&v149 - v35;
  __chkstk_darwin(v34);
  int v37 = (char *)&v149 - v36;
  uint64_t v38 = sub_10002F214(&qword_1006A1118);
  uint64_t v39 = __chkstk_darwin(v38 - 8);
  uint64_t v165 = (char *)&v149 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __chkstk_darwin(v39);
  v174 = (char *)&v149 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  int v45 = (char *)&v149 - v44;
  uint64_t v46 = __chkstk_darwin(v43);
  uint64_t v48 = (char *)&v149 - v47;
  __chkstk_darwin(v46);
  uint64_t v50 = (char *)&v149 - v49;
  uint64_t v51 = type metadata accessor for Date();
  uint64_t v52 = *(void *)(v51 - 8);
  uint64_t v177 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 56);
  v177(a2, 1, 1, v51);
  uint64_t v53 = (int *)_s8ActivityVMa();
  uint64_t v54 = a2 + v53[5];
  uint64_t v55 = type metadata accessor for ActivityEventObject();
  uint64_t v172 = *(void *)(v55 - 8);
  uint64_t v56 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v172 + 56);
  uint64_t v155 = v54;
  uint64_t v187 = v55;
  uint64_t v179 = v56;
  uint64_t v180 = v172 + 56;
  ((void (*)(uint64_t, uint64_t, uint64_t))v56)(v54, 1, 1);
  uint64_t v57 = a2 + v53[6];
  uint64_t v58 = type metadata accessor for ActivityEventParticipant();
  uint64_t v173 = *(void *)(v58 - 8);
  unint64_t v59 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v173 + 56);
  uint64_t v157 = v57;
  uint64_t v183 = v173 + 56;
  uint64_t v184 = v58;
  unint64_t v182 = v59;
  ((void (*)(uint64_t, uint64_t, uint64_t))v59)(v57, 1, 1);
  uint64_t v60 = a2 + v53[7];
  uint64_t v61 = type metadata accessor for PersistedActivityEvent.Activities();
  uint64_t v62 = *(void *)(v61 - 8);
  uint64_t v63 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v62 + 56);
  uint64_t v162 = v60;
  uint64_t v161 = v61;
  uint64_t v160 = v63;
  uint64_t v159 = v62 + 56;
  ((void (*)(uint64_t, uint64_t, uint64_t))v63)(v60, 1, 1);
  uint64_t v64 = (uint64_t *)(a2 + v53[8]);
  uint64_t *v64 = 0;
  v64[1] = 0;
  uint64_t v164 = v64;
  uint64_t v65 = a2 + v53[9];
  *(void *)uint64_t v65 = 0;
  uint64_t v166 = (uint64_t *)v65;
  *(unsigned char *)(v65 + 8) = 1;
  uint64_t v170 = v53;
  uint64_t v66 = v53[10];
  uint64_t v193 = a2;
  uint64_t v67 = (uint64_t *)(a2 + v66);
  sub_100171C30();
  *uint64_t v67 = 0;
  v67[1] = 0;
  static ICCloudSyncingObject.persistedActivityEvent(for:)();
  id v191 = v37;
  static ICCloudSyncingObject.fallbackActivityEvent(for:)();
  uint64_t v188 = v50;
  sub_10002F034((uint64_t)v50, (uint64_t)v48, &qword_1006A1118);
  uint64_t v68 = type metadata accessor for PersistedActivityEvent();
  uint64_t v69 = *(void *)(v68 - 8);
  id v194 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v69 + 48);
  uint64_t v195 = v69 + 48;
  int v70 = v194(v48, 1, v68);
  uint64_t v189 = v68;
  unint64_t v167 = v67;
  v152 = v45;
  if (v70 == 1)
  {
    sub_10002B754((uint64_t)v48, &qword_1006A1118);
    uint64_t v71 = 1;
    uint64_t v72 = v190;
    uint64_t v73 = (uint64_t)v154;
    uint64_t v74 = v178;
  }
  else
  {
    uint64_t v74 = v178;
    PersistedActivityEvent.timestamp.getter();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v48, v68);
    uint64_t v71 = 0;
    uint64_t v72 = v190;
    uint64_t v73 = (uint64_t)v154;
  }
  uint64_t v75 = (uint64_t)v153;
  uint64_t v76 = v177;
  v177(v74, v71, 1, v51);
  sub_10002F034((uint64_t)v191, v75, &qword_1006A1110);
  int v77 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v52 + 48))(v74, 1, v51);
  uint64_t v181 = v69;
  if (v77 == 1)
  {
    uint64_t v78 = v150;
    sub_10002F034(v75, v150, &qword_1006A1110);
    uint64_t v79 = type metadata accessor for FallbackActivityEvent();
    uint64_t v80 = *(void *)(v79 - 8);
    int v81 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v80 + 48))(v78, 1, v79);
    uint64_t v82 = (uint64_t)v152;
    if (v81 == 1)
    {
      sub_10002B754(v75, &qword_1006A1110);
      sub_10002B754(v78, &qword_1006A1110);
      uint64_t v83 = 1;
    }
    else
    {
      FallbackActivityEvent.timestamp.getter();
      sub_10002B754(v75, &qword_1006A1110);
      (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v78, v79);
      uint64_t v83 = 0;
    }
    uint64_t v87 = (uint64_t)v185;
    uint64_t v72 = v190;
    v177(v73, v83, 1, v51);
    sub_10002B754(v178, (uint64_t *)&unk_1006A3E20);
    uint64_t v84 = v193;
    uint64_t v85 = (uint64_t)v188;
    uint64_t v86 = v189;
    uint64_t v88 = (uint64_t)v158;
  }
  else
  {
    sub_10002B754(v75, &qword_1006A1110);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 32))(v73, v74, v51);
    v76(v73, 0, 1, v51);
    uint64_t v84 = v193;
    uint64_t v85 = (uint64_t)v188;
    uint64_t v86 = v189;
    uint64_t v87 = (uint64_t)v185;
    uint64_t v88 = (uint64_t)v158;
    uint64_t v82 = (uint64_t)v152;
  }
  sub_10002B660(v73, v84, (uint64_t *)&unk_1006A3E20);
  sub_10002F034(v85, v82, &qword_1006A1118);
  if (v194((char *)v82, 1, v86) == 1)
  {
    sub_10002B754(v82, &qword_1006A1118);
    uint64_t v89 = 1;
  }
  else
  {
    PersistedActivityEvent.object.getter();
    (*(void (**)(uint64_t, uint64_t))(v181 + 8))(v82, v86);
    uint64_t v89 = 0;
  }
  uint64_t v90 = (uint64_t)v191;
  uint64_t v91 = (uint64_t)v156;
  uint64_t v92 = v179;
  uint64_t v93 = v187;
  v179(v72, v89, 1, v187);
  uint64_t v94 = v90;
  sub_10002F034(v90, v91, &qword_1006A1110);
  uint64_t v95 = v172;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v172 + 48))(v72, 1, v93) == 1)
  {
    uint64_t v96 = v151;
    sub_10002F034(v91, v151, &qword_1006A1110);
    uint64_t v97 = type metadata accessor for FallbackActivityEvent();
    uint64_t v98 = *(void *)(v97 - 8);
    int v99 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v98 + 48))(v96, 1, v97);
    uint64_t v100 = (uint64_t)v188;
    uint64_t v101 = v94;
    if (v99 == 1)
    {
      sub_10002B754(v91, &qword_1006A1110);
      sub_10002B754(v96, &qword_1006A1110);
      uint64_t v102 = 1;
      uint64_t v103 = (uint64_t)v174;
      uint64_t v104 = (uint64_t)v175;
      uint64_t v105 = v187;
    }
    else
    {
      FallbackActivityEvent.object.getter();
      uint64_t v105 = v187;
      sub_10002B754(v91, &qword_1006A1110);
      (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v96, v97);
      uint64_t v102 = 0;
      uint64_t v103 = (uint64_t)v174;
      uint64_t v104 = (uint64_t)v175;
    }
    v179(v88, v102, 1, v105);
    sub_10002B754(v190, &qword_1006A1108);
    uint64_t v87 = (uint64_t)v185;
    uint64_t v106 = v155;
  }
  else
  {
    sub_10002B754(v91, &qword_1006A1110);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v95 + 32))(v88, v72, v93);
    v92(v88, 0, 1, v93);
    uint64_t v103 = (uint64_t)v174;
    uint64_t v106 = v155;
    uint64_t v100 = (uint64_t)v188;
    uint64_t v104 = (uint64_t)v175;
    uint64_t v101 = v94;
  }
  sub_10002B660(v88, v106, &qword_1006A1108);
  sub_10002F034(v100, v103, &qword_1006A1118);
  if (v194((char *)v103, 1, v86) == 1)
  {
    sub_10002B754(v103, &qword_1006A1118);
    uint64_t v107 = (uint64_t)v163;
    uint64_t v108 = v184;
    uint64_t v109 = v182;
    uint64_t v110 = v168;
    v182((uint64_t)v168, 1, 1, v184);
  }
  else
  {
    uint64_t v110 = v168;
    PersistedActivityEvent.participant.getter();
    (*(void (**)(uint64_t, uint64_t))(v181 + 8))(v103, v86);
    uint64_t v107 = (uint64_t)v163;
    uint64_t v108 = v184;
    uint64_t v109 = v182;
    v182((uint64_t)v110, 0, 1, v184);
  }
  sub_10002F034(v101, v87, &qword_1006A1110);
  uint64_t v111 = v173;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v173 + 48))(v110, 1, v108) == 1)
  {
    uint64_t v112 = (uint64_t)v110;
    sub_10002F034(v87, v107, &qword_1006A1110);
    uint64_t v113 = v87;
    uint64_t v114 = type metadata accessor for FallbackActivityEvent();
    uint64_t v115 = *(void *)(v114 - 8);
    int v116 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v115 + 48))(v107, 1, v114);
    uint64_t v117 = (uint64_t)v169;
    if (v116 == 1)
    {
      sub_10002B754(v113, &qword_1006A1110);
      sub_10002B754(v107, &qword_1006A1110);
      uint64_t v118 = 1;
    }
    else
    {
      FallbackActivityEvent.participant.getter();
      sub_10002B754(v113, &qword_1006A1110);
      (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v107, v114);
      uint64_t v118 = 0;
    }
    v182(v104, v118, 1, v184);
    sub_10002B754(v112, &qword_1006A1100);
    uint64_t v119 = (uint64_t)v165;
    uint64_t v120 = v162;
    uint64_t v121 = v157;
    uint64_t v122 = v189;
  }
  else
  {
    sub_10002B754(v87, &qword_1006A1110);
    (*(void (**)(uint64_t, char *, uint64_t))(v111 + 32))(v104, v110, v108);
    v109(v104, 0, 1, v108);
    uint64_t v119 = (uint64_t)v165;
    uint64_t v120 = v162;
    uint64_t v121 = v157;
    uint64_t v122 = v189;
    uint64_t v117 = (uint64_t)v169;
  }
  sub_10002B660(v104, v121, &qword_1006A1100);
  sub_10002F034(v100, v119, &qword_1006A1118);
  if (v194((char *)v119, 1, v122) == 1)
  {
    sub_10002B754(v119, &qword_1006A1118);
    uint64_t v123 = 1;
  }
  else
  {
    PersistedActivityEvent.activity.getter();
    (*(void (**)(uint64_t, uint64_t))(v181 + 8))(v119, v122);
    uint64_t v123 = 0;
  }
  uint64_t v124 = (uint64_t)v186;
  v160(v186, v123, 1, v161);
  sub_10002B660(v124, v120, &qword_1006A10F8);
  sub_10002F034(v101, v117, &qword_1006A1110);
  uint64_t v125 = type metadata accessor for FallbackActivityEvent();
  uint64_t v126 = *(void *)(v125 - 8);
  uint64_t v127 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v126 + 48);
  if (v127(v117, 1, v125) == 1)
  {
    sub_10002B754(v117, &qword_1006A1110);
    uint64_t v128 = 0;
    uint64_t v129 = 0;
  }
  else
  {
    uint64_t v128 = FallbackActivityEvent.typeName.getter();
    uint64_t v129 = v130;
    (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v117, v125);
  }
  unint64_t v131 = v164;
  swift_bridgeObjectRelease();
  uint64_t *v131 = v128;
  v131[1] = v129;
  uint64_t v132 = v176;
  sub_10002F034(v101, v176, &qword_1006A1110);
  unsigned int v133 = v127(v132, 1, v125);
  if (v133 == 1)
  {
    sub_10002B754(v132, &qword_1006A1110);
    uint64_t v134 = 0;
  }
  else
  {
    uint64_t v134 = FallbackActivityEvent.minimumSupportedNotesVersion.getter();
    (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v132, v125);
  }
  Swift::Int v135 = v166;
  uint64_t v136 = (uint64_t)v171;
  *uint64_t v166 = v134;
  *((unsigned char *)v135 + 8) = v133 == 1;
  sub_10002F034(v101, v136, &qword_1006A1110);
  if (v127(v136, 1, v125) == 1)
  {
    sub_10002B754(v136, &qword_1006A1110);
    uint64_t v137 = 0;
    uint64_t v138 = 0;
  }
  else
  {
    uint64_t v137 = FallbackActivityEvent.localizedFallbackTitle.getter();
    uint64_t v138 = v139;
    (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v136, v125);
  }
  uint64_t v140 = v192;
  uint64_t v141 = v170;
  uint64_t v142 = v167;
  swift_bridgeObjectRelease();
  *uint64_t v142 = v137;
  v142[1] = v138;
  id v143 = [v140 data];
  uint64_t v144 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v146 = v145;

  sub_10002B754(v101, &qword_1006A1110);
  uint64_t result = sub_10002B754(v100, &qword_1006A1118);
  uint64_t v148 = (uint64_t *)(v193 + v141[11]);
  uint64_t *v148 = v144;
  v148[1] = v146;
  return result;
}

uint64_t _s8ActivityVMa()
{
  uint64_t result = qword_1006A1178;
  if (!qword_1006A1178) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100283E8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v62 = a1;
  uint64_t v2 = sub_10002F214(&qword_1006A10F8);
  __chkstk_darwin(v2 - 8);
  uint64_t v54 = (uint64_t)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PersistedActivityEvent.Activities();
  uint64_t v55 = *(void *)(v4 - 8);
  uint64_t v56 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v50 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v53 = (char *)&v47 - v7;
  uint64_t v8 = sub_10002F214(&qword_1006A1100);
  __chkstk_darwin(v8 - 8);
  uint64_t v58 = (uint64_t)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for ActivityEventParticipant();
  uint64_t v59 = *(void *)(v61 - 8);
  uint64_t v10 = __chkstk_darwin(v61);
  uint64_t v49 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v57 = (char *)&v47 - v12;
  uint64_t v13 = sub_10002F214(&qword_1006A1108);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for ActivityEventObject();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v52 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v60 = (char *)&v47 - v20;
  uint64_t v21 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)&v47 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for Date();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v51 = (char *)&v47 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v47 - v28;
  sub_10002F034(v1, (uint64_t)v23, (uint64_t *)&unk_1006A3E20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) == 1)
  {
    uint64_t v30 = (uint64_t *)&unk_1006A3E20;
    uint64_t v31 = (uint64_t)v23;
LABEL_9:
    sub_10002B754(v31, v30);
    uint64_t v42 = type metadata accessor for PersistedActivityEvent();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v62, 1, 1, v42);
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v29, v23, v24);
  uint64_t v32 = (int *)_s8ActivityVMa();
  sub_10002F034(v1 + v32[5], (uint64_t)v15, &qword_1006A1108);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v29, v24);
    uint64_t v30 = &qword_1006A1108;
    uint64_t v31 = (uint64_t)v15;
    goto LABEL_9;
  }
  uint64_t v33 = v60;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v60, v15, v16);
  uint64_t v34 = v58;
  sub_10002F034(v1 + v32[6], v58, &qword_1006A1100);
  uint64_t v35 = v59;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v34, 1, v61) == 1)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v33, v16);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v29, v24);
    uint64_t v30 = &qword_1006A1100;
    uint64_t v31 = v34;
    goto LABEL_9;
  }
  uint64_t v47 = v17;
  uint64_t v48 = v16;
  uint64_t v36 = v57;
  uint64_t v37 = v34;
  uint64_t v38 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v57, v37, v61);
  uint64_t v39 = v54;
  sub_10002F034(v1 + v32[7], v54, &qword_1006A10F8);
  uint64_t v40 = v55;
  uint64_t v41 = v56;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v39, 1, v56) == 1)
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v38);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v60, v48);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v29, v24);
    uint64_t v30 = &qword_1006A10F8;
    uint64_t v31 = v39;
    goto LABEL_9;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))(v53, v39, v41);
  Date.addingTimeInterval(_:)();
  uint64_t v44 = v47;
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v52, v60, v48);
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v49, v36, v38);
  int v45 = v53;
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v50, v53, v41);
  PersistedActivityEvent.init(timestamp:object:participant:activity:)();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v45, v41);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v57, v61);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v60, v48);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v29, v24);
  uint64_t v46 = type metadata accessor for PersistedActivityEvent();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v62, 0, 1, v46);
}

uint64_t sub_100284660@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v59 = a1;
  uint64_t v3 = sub_10002F214(&qword_1006A1100);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ActivityEventParticipant();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v56 = v6;
  uint64_t v57 = v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v53 = (char *)v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v55 = (char *)v49 - v10;
  uint64_t v11 = sub_10002F214(&qword_1006A1108);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ActivityEventObject();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v52 = (char *)v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v58 = (char *)v49 - v18;
  uint64_t v19 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for Date();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v54 = (char *)v49 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)v49 - v26;
  sub_10002F034(v2, (uint64_t)v21, (uint64_t *)&unk_1006A3E20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
  {
    sub_10002B754((uint64_t)v21, (uint64_t *)&unk_1006A3E20);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v27, v21, v22);
    uint64_t v28 = (int *)_s8ActivityVMa();
    sub_10002F034(v2 + v28[5], (uint64_t)v13, &qword_1006A1108);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    {
      (*(void (**)(char *, uint64_t))(v23 + 8))(v27, v22);
      sub_10002B754((uint64_t)v13, &qword_1006A1108);
    }
    else
    {
      uint64_t v29 = v2;
      uint64_t v30 = v58;
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v58, v13, v14);
      uint64_t v31 = v28[6];
      uint64_t v51 = v29;
      sub_10002F034(v29 + v31, (uint64_t)v5, &qword_1006A1100);
      uint64_t v32 = v56;
      uint64_t v33 = v57;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v5, 1, v56) == 1)
      {
        (*(void (**)(char *, uint64_t))(v15 + 8))(v30, v14);
        (*(void (**)(char *, uint64_t))(v23 + 8))(v27, v22);
        sub_10002B754((uint64_t)v5, &qword_1006A1100);
      }
      else
      {
        uint64_t v50 = v14;
        uint64_t v34 = v55;
        (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v55, v5, v32);
        uint64_t v35 = v51 + v28[9];
        if (*(unsigned char *)(v35 + 8) == 1)
        {
          (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v32);
          (*(void (**)(char *, uint64_t))(v15 + 8))(v58, v50);
        }
        else
        {
          uint64_t v36 = (uint64_t *)(v51 + v28[8]);
          uint64_t v37 = v58;
          if (v36[1])
          {
            uint64_t v38 = (void *)(v51 + v28[10]);
            uint64_t v39 = v38[1];
            if (v39)
            {
              uint64_t v51 = *(void *)v35;
              uint64_t v40 = *v36;
              v49[2] = *v38;
              v49[3] = v40;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              Date.addingTimeInterval(_:)();
              (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v52, v37, v50);
              uint64_t v41 = v57;
              uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
              v49[1] = v39;
              uint64_t v43 = v55;
              v42(v53, v55, v32);
              uint64_t v44 = v59;
              FallbackActivityEvent.init(timestamp:object:participant:minimumSupportedNotesVersion:typeName:localizedFallbackTitle:)();
              (*(void (**)(char *, uint64_t))(v41 + 8))(v43, v56);
              (*(void (**)(char *, uint64_t))(v15 + 8))(v58, v50);
              (*(void (**)(char *, uint64_t))(v23 + 8))(v27, v22);
              uint64_t v45 = type metadata accessor for FallbackActivityEvent();
              return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v44, 0, 1, v45);
            }
          }
          (*(void (**)(char *, uint64_t))(v57 + 8))(v55, v32);
          (*(void (**)(char *, uint64_t))(v15 + 8))(v37, v50);
        }
        (*(void (**)(char *, uint64_t))(v23 + 8))(v27, v22);
      }
    }
  }
  uint64_t v47 = v59;
  uint64_t v48 = type metadata accessor for FallbackActivityEvent();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v47, 1, 1, v48);
}

uint64_t *sub_100284D48(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_10002F214((uint64_t *)&unk_1006A3E20);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = a3[5];
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = type metadata accessor for ActivityEventObject();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      uint64_t v16 = sub_10002F214(&qword_1006A1108);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    uint64_t v17 = a3[6];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = type metadata accessor for ActivityEventParticipant();
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      uint64_t v22 = sub_10002F214(&qword_1006A1100);
      memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    uint64_t v23 = a3[7];
    uint64_t v24 = (char *)a1 + v23;
    uint64_t v25 = (char *)a2 + v23;
    uint64_t v26 = type metadata accessor for PersistedActivityEvent.Activities();
    uint64_t v27 = *(void *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      uint64_t v28 = sub_10002F214(&qword_1006A10F8);
      memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    uint64_t v29 = a3[8];
    uint64_t v30 = a3[9];
    uint64_t v31 = (uint64_t *)((char *)a1 + v29);
    uint64_t v32 = (uint64_t *)((char *)a2 + v29);
    uint64_t v33 = v32[1];
    *uint64_t v31 = *v32;
    v31[1] = v33;
    uint64_t v34 = (char *)a1 + v30;
    uint64_t v35 = (char *)a2 + v30;
    v34[8] = v35[8];
    *(void *)uint64_t v34 = *(void *)v35;
    uint64_t v36 = a3[10];
    uint64_t v37 = a3[11];
    uint64_t v38 = (uint64_t *)((char *)a1 + v36);
    uint64_t v39 = (uint64_t *)((char *)a2 + v36);
    uint64_t v40 = v39[1];
    *uint64_t v38 = *v39;
    v38[1] = v40;
    uint64_t v41 = (uint64_t *)((char *)a1 + v37);
    uint64_t v42 = (char *)a2 + v37;
    uint64_t v43 = *(uint64_t *)((char *)a2 + v37);
    unint64_t v44 = *((void *)v42 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100172484(v43, v44);
    uint64_t *v41 = v43;
    v41[1] = v44;
  }
  return a1;
}

uint64_t sub_1002851E8(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + a2[5];
  uint64_t v7 = type metadata accessor for ActivityEventObject();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  uint64_t v9 = a1 + a2[6];
  uint64_t v10 = type metadata accessor for ActivityEventParticipant();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = a1 + a2[7];
  uint64_t v13 = type metadata accessor for PersistedActivityEvent.Activities();
  uint64_t v14 = *(void *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = (uint64_t *)(a1 + a2[11]);
  uint64_t v16 = *v15;
  unint64_t v17 = v15[1];

  return sub_10017253C(v16, v17);
}

char *sub_100285490(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = type metadata accessor for ActivityEventObject();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = sub_10002F214(&qword_1006A1108);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  unint64_t v17 = &a2[v15];
  uint64_t v18 = type metadata accessor for ActivityEventParticipant();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    uint64_t v20 = sub_10002F214(&qword_1006A1100);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  uint64_t v21 = a3[7];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = type metadata accessor for PersistedActivityEvent.Activities();
  uint64_t v25 = *(void *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    uint64_t v26 = sub_10002F214(&qword_1006A10F8);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  uint64_t v27 = a3[8];
  uint64_t v28 = a3[9];
  uint64_t v29 = &a1[v27];
  uint64_t v30 = &a2[v27];
  uint64_t v31 = *((void *)v30 + 1);
  *(void *)uint64_t v29 = *(void *)v30;
  *((void *)v29 + 1) = v31;
  uint64_t v32 = &a1[v28];
  uint64_t v33 = &a2[v28];
  v32[8] = v33[8];
  *(void *)uint64_t v32 = *(void *)v33;
  uint64_t v34 = a3[10];
  uint64_t v35 = a3[11];
  uint64_t v36 = &a1[v34];
  uint64_t v37 = &a2[v34];
  uint64_t v38 = *((void *)v37 + 1);
  *(void *)uint64_t v36 = *(void *)v37;
  *((void *)v36 + 1) = v38;
  uint64_t v39 = (uint64_t *)&a1[v35];
  uint64_t v40 = &a2[v35];
  uint64_t v41 = *(void *)&a2[v35];
  unint64_t v42 = *((void *)v40 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100172484(v41, v42);
  *uint64_t v39 = v41;
  v39[1] = v42;
  return a1;
}

char *sub_1002858E0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = type metadata accessor for ActivityEventObject();
  uint64_t v16 = *(void *)(v15 - 8);
  unint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
LABEL_12:
    uint64_t v20 = sub_10002F214(&qword_1006A1108);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v13, v14, v15);
LABEL_13:
  uint64_t v21 = a3[6];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = type metadata accessor for ActivityEventParticipant();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  int v27 = v26(v22, 1, v24);
  int v28 = v26(v23, 1, v24);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
LABEL_18:
    uint64_t v29 = sub_10002F214(&qword_1006A1100);
    memcpy(v22, v23, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 24))(v22, v23, v24);
LABEL_19:
  uint64_t v30 = a3[7];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  uint64_t v33 = type metadata accessor for PersistedActivityEvent.Activities();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48);
  int v36 = v35(v31, 1, v33);
  int v37 = v35(v32, 1, v33);
  if (!v36)
  {
    if (!v37)
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 24))(v31, v32, v33);
      goto LABEL_25;
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v31, v33);
    goto LABEL_24;
  }
  if (v37)
  {
LABEL_24:
    uint64_t v38 = sub_10002F214(&qword_1006A10F8);
    memcpy(v31, v32, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
LABEL_25:
  uint64_t v39 = a3[8];
  uint64_t v40 = &a1[v39];
  uint64_t v41 = &a2[v39];
  *(void *)uint64_t v40 = *(void *)v41;
  *((void *)v40 + 1) = *((void *)v41 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v42 = a3[9];
  uint64_t v43 = &a1[v42];
  unint64_t v44 = &a2[v42];
  uint64_t v45 = *(void *)v44;
  char v43[8] = v44[8];
  *(void *)uint64_t v43 = v45;
  uint64_t v46 = a3[10];
  uint64_t v47 = &a1[v46];
  uint64_t v48 = &a2[v46];
  *(void *)uint64_t v47 = *(void *)v48;
  *((void *)v47 + 1) = *((void *)v48 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v49 = a3[11];
  uint64_t v50 = (uint64_t *)&a1[v49];
  uint64_t v51 = (uint64_t *)&a2[v49];
  uint64_t v52 = *v51;
  unint64_t v53 = v51[1];
  sub_100172484(*v51, v53);
  uint64_t v54 = *v50;
  unint64_t v55 = v50[1];
  *uint64_t v50 = v52;
  v50[1] = v53;
  sub_10017253C(v54, v55);
  return a1;
}

char *sub_100285EDC(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  int v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = type metadata accessor for ActivityEventObject();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = sub_10002F214(&qword_1006A1108);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  unint64_t v17 = &a2[v15];
  uint64_t v18 = type metadata accessor for ActivityEventParticipant();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    uint64_t v20 = sub_10002F214(&qword_1006A1100);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  uint64_t v21 = a3[7];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = type metadata accessor for PersistedActivityEvent.Activities();
  uint64_t v25 = *(void *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    uint64_t v26 = sub_10002F214(&qword_1006A10F8);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  uint64_t v27 = a3[9];
  *(_OWORD *)&a1[a3[8]] = *(_OWORD *)&a2[a3[8]];
  int v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  *(void *)int v28 = *(void *)v29;
  v28[8] = v29[8];
  uint64_t v30 = a3[11];
  *(_OWORD *)&a1[a3[10]] = *(_OWORD *)&a2[a3[10]];
  *(_OWORD *)&a1[v30] = *(_OWORD *)&a2[v30];
  return a1;
}

char *sub_1002862FC(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = type metadata accessor for ActivityEventObject();
  uint64_t v16 = *(void *)(v15 - 8);
  unint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
LABEL_12:
    uint64_t v20 = sub_10002F214(&qword_1006A1108);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v14, v15);
LABEL_13:
  uint64_t v21 = a3[6];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = type metadata accessor for ActivityEventParticipant();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  int v27 = v26(v22, 1, v24);
  int v28 = v26(v23, 1, v24);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
LABEL_18:
    uint64_t v29 = sub_10002F214(&qword_1006A1100);
    memcpy(v22, v23, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 40))(v22, v23, v24);
LABEL_19:
  uint64_t v30 = a3[7];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  uint64_t v33 = type metadata accessor for PersistedActivityEvent.Activities();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48);
  int v36 = v35(v31, 1, v33);
  int v37 = v35(v32, 1, v33);
  if (!v36)
  {
    if (!v37)
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 40))(v31, v32, v33);
      goto LABEL_25;
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v31, v33);
    goto LABEL_24;
  }
  if (v37)
  {
LABEL_24:
    uint64_t v38 = sub_10002F214(&qword_1006A10F8);
    memcpy(v31, v32, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v31, v32, v33);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
LABEL_25:
  uint64_t v39 = a3[8];
  uint64_t v40 = &a1[v39];
  uint64_t v41 = &a2[v39];
  uint64_t v43 = *(void *)v41;
  uint64_t v42 = *((void *)v41 + 1);
  *(void *)uint64_t v40 = v43;
  *((void *)v40 + 1) = v42;
  swift_bridgeObjectRelease();
  uint64_t v44 = a3[9];
  uint64_t v45 = a3[10];
  uint64_t v46 = &a1[v44];
  uint64_t v47 = &a2[v44];
  *(void *)uint64_t v46 = *(void *)v47;
  v46[8] = v47[8];
  uint64_t v48 = &a1[v45];
  uint64_t v49 = &a2[v45];
  uint64_t v51 = *(void *)v49;
  uint64_t v50 = *((void *)v49 + 1);
  *(void *)uint64_t v48 = v51;
  *((void *)v48 + 1) = v50;
  swift_bridgeObjectRelease();
  uint64_t v52 = a3[11];
  uint64_t v53 = *(void *)&a1[v52];
  unint64_t v54 = *(void *)&a1[v52 + 8];
  *(_OWORD *)&a1[v52] = *(_OWORD *)&a2[v52];
  sub_10017253C(v53, v54);
  return a1;
}

uint64_t sub_1002868C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002868D8);
}

uint64_t sub_1002868D8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_10002F214(&qword_1006A1108);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v10 = a1 + v13;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  uint64_t v14 = sub_10002F214(&qword_1006A1100);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_9;
  }
  uint64_t v15 = sub_10002F214(&qword_1006A10F8);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_9;
  }
  unint64_t v17 = *(void *)(a1 + a3[8] + 8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  int v18 = v17 - 1;
  if (v18 < 0) {
    int v18 = -1;
  }
  return (v18 + 1);
}

uint64_t sub_100286AA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100286AB8);
}

uint64_t sub_100286AB8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = sub_10002F214(&qword_1006A1108);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      uint64_t v16 = sub_10002F214(&qword_1006A1100);
      if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
      {
        uint64_t v10 = v16;
        uint64_t v14 = *(void *)(v16 - 8);
        uint64_t v15 = a4[6];
      }
      else
      {
        uint64_t result = sub_10002F214(&qword_1006A10F8);
        if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
        {
          *(void *)(a1 + a4[8] + 8) = a2;
          return result;
        }
        uint64_t v10 = result;
        uint64_t v14 = *(void *)(result - 8);
        uint64_t v15 = a4[7];
      }
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_100286C74()
{
  sub_100286E44(319, (unint64_t *)&qword_1006A6C30, (void (*)(uint64_t))&type metadata accessor for Date);
  if (v0 <= 0x3F)
  {
    sub_100286E44(319, &qword_1006A1188, (void (*)(uint64_t))&type metadata accessor for ActivityEventObject);
    if (v1 <= 0x3F)
    {
      sub_100286E44(319, &qword_1006A1190, (void (*)(uint64_t))&type metadata accessor for ActivityEventParticipant);
      if (v2 <= 0x3F)
      {
        sub_100286E44(319, (unint64_t *)&unk_1006A1198, (void (*)(uint64_t))&type metadata accessor for PersistedActivityEvent.Activities);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_100286E44(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_100286E98(char a1)
{
  unint64_t result = 0x6D617473656D6974;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7463656A626FLL;
      break;
    case 2:
      unint64_t result = 0x7069636974726170;
      break;
    case 3:
      unint64_t result = 0x7974697669746361;
      break;
    case 4:
    case 6:
    case 7:
      unint64_t result = 0x6B6361626C6C6166;
      break;
    case 5:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100286FA0(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10002F214(&qword_1006A1210);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10015E154(a1, a1[3]);
  sub_100287CE4();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v13) = 0;
  type metadata accessor for Date();
  sub_100287DF8(&qword_10069FAD0, (void (*)(uint64_t))&type metadata accessor for Date);
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  if (!v2)
  {
    uint64_t v9 = _s8ActivityVMa();
    LOBYTE(v13) = 1;
    type metadata accessor for ActivityEventObject();
    sub_100287DF8(&qword_1006A1218, (void (*)(uint64_t))&type metadata accessor for ActivityEventObject);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v13) = 2;
    type metadata accessor for ActivityEventParticipant();
    sub_100287DF8(&qword_1006A1220, (void (*)(uint64_t))&type metadata accessor for ActivityEventParticipant);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v13) = 3;
    type metadata accessor for PersistedActivityEvent.Activities();
    sub_100287DF8(&qword_1006A1228, (void (*)(uint64_t))&type metadata accessor for PersistedActivityEvent.Activities);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v13) = 4;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    uint64_t v10 = (uint64_t *)(v3 + *(int *)(v9 + 36));
    uint64_t v11 = *v10;
    LOBYTE(v10) = *((unsigned char *)v10 + 8);
    *(void *)&long long v13 = v11;
    BYTE8(v13) = (_BYTE)v10;
    char v14 = 5;
    type metadata accessor for NotesVersion(0);
    sub_100287DF8(&qword_1006A1230, type metadata accessor for NotesVersion);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v13) = 6;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    long long v13 = *(_OWORD *)(v3 + *(int *)(v9 + 44));
    char v14 = 7;
    sub_10017326C();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1002873C0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v59 = a2;
  uint64_t v3 = sub_10002F214(&qword_1006A10F8);
  __chkstk_darwin(v3 - 8);
  uint64_t v60 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002F214(&qword_1006A1100);
  __chkstk_darwin(v5 - 8);
  uint64_t v61 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10002F214(&qword_1006A1108);
  __chkstk_darwin(v7 - 8);
  uint64_t v64 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  __chkstk_darwin(v9 - 8);
  uint64_t v65 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_10002F214(&qword_1006A11E0);
  uint64_t v63 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v13 = (int *)_s8ActivityVMa();
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Date();
  unint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v62 = v16;
  v17(v15, 1, 1);
  uint64_t v18 = (uint64_t)&v15[v13[5]];
  uint64_t v19 = type metadata accessor for ActivityEventObject();
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  uint64_t v71 = v18;
  v20(v18, 1, 1, v19);
  uint64_t v21 = (uint64_t)&v15[v13[6]];
  uint64_t v22 = type metadata accessor for ActivityEventParticipant();
  uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  uint64_t v69 = v21;
  v23(v21, 1, 1, v22);
  uint64_t v24 = &v15[v13[7]];
  uint64_t v25 = type metadata accessor for PersistedActivityEvent.Activities();
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
  uint64_t v70 = (uint64_t)v24;
  v26(v24, 1, 1, v25);
  int v27 = &v15[v13[8]];
  *(void *)int v27 = 0;
  *((void *)v27 + 1) = 0;
  uint64_t v74 = v27;
  uint64_t v75 = v15;
  int v28 = &v15[v13[9]];
  *(void *)int v28 = 0;
  v28[8] = 1;
  uint64_t v29 = &v15[v13[10]];
  *(void *)uint64_t v29 = 0;
  *((void *)v29 + 1) = 0;
  uint64_t v73 = v29;
  uint64_t v30 = a1[3];
  uint64_t v68 = a1;
  sub_10015E154(a1, v30);
  sub_100287CE4();
  uint64_t v66 = v12;
  uint64_t v31 = v72;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v31)
  {
    uint64_t v32 = v69;
    uint64_t v34 = v70;
    uint64_t v33 = v71;
    sub_100018FE8((uint64_t)v68);
    sub_10002B754((uint64_t)v75, (uint64_t *)&unk_1006A3E20);
    sub_10002B754(v33, &qword_1006A1108);
    sub_10002B754(v32, &qword_1006A1100);
    sub_10002B754(v34, &qword_1006A10F8);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v58 = v13;
    uint64_t v72 = v28;
    uint64_t v35 = v63;
    uint64_t v36 = (uint64_t)v64;
    LOBYTE(v76) = 0;
    sub_100287DF8(&qword_10069FA08, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v37 = (uint64_t)v65;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v38 = v70;
    sub_10002B660(v37, (uint64_t)v75, (uint64_t *)&unk_1006A3E20);
    LOBYTE(v76) = 1;
    sub_100287DF8(&qword_1006A11F0, (void (*)(uint64_t))&type metadata accessor for ActivityEventObject);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    sub_10002B660(v36, v71, &qword_1006A1108);
    LOBYTE(v76) = 2;
    sub_100287DF8(&qword_1006A11F8, (void (*)(uint64_t))&type metadata accessor for ActivityEventParticipant);
    uint64_t v39 = (uint64_t)v61;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    sub_10002B660(v39, v69, &qword_1006A1100);
    LOBYTE(v76) = 3;
    sub_100287DF8(&qword_1006A1200, (void (*)(uint64_t))&type metadata accessor for PersistedActivityEvent.Activities);
    uint64_t v41 = (uint64_t)v60;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    sub_10002B660(v41, v38, &qword_1006A10F8);
    LOBYTE(v76) = 4;
    uint64_t v42 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v65 = v43;
    uint64_t v44 = v42;
    uint64_t v45 = v74;
    swift_bridgeObjectRelease();
    uint64_t v46 = v65;
    *uint64_t v45 = v44;
    v45[1] = v46;
    type metadata accessor for NotesVersion(0);
    char v77 = 5;
    sub_100287DF8(&qword_1006A1208, type metadata accessor for NotesVersion);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    char v47 = BYTE8(v76);
    uint64_t v48 = v72;
    *(void *)uint64_t v72 = v76;
    v48[8] = v47;
    LOBYTE(v76) = 6;
    uint64_t v49 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v72 = v50;
    uint64_t v51 = v49;
    uint64_t v52 = v73;
    swift_bridgeObjectRelease();
    uint64_t v53 = v72;
    *uint64_t v52 = v51;
    v52[1] = v53;
    char v77 = 7;
    sub_100173218();
    unint64_t v54 = v66;
    uint64_t v55 = v67;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v54, v55);
    uint64_t v56 = v59;
    uint64_t v57 = (uint64_t)v75;
    *(_OWORD *)&v75[v58[11]] = v76;
    sub_100287D38(v57, v56);
    sub_100018FE8((uint64_t)v68);
    return sub_100287D9C(v57);
  }
}

unint64_t sub_100287C00()
{
  return sub_100286E98(*v0);
}

uint64_t sub_100287C08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1002880DC(a1, a2);
  *a3 = result;
  return result;
}

void sub_100287C30(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_100287C3C(uint64_t a1)
{
  unint64_t v2 = sub_100287CE4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100287C78(uint64_t a1)
{
  unint64_t v2 = sub_100287CE4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100287CB4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002873C0(a1, a2);
}

uint64_t sub_100287CCC(void *a1)
{
  return sub_100286FA0(a1);
}

unint64_t sub_100287CE4()
{
  unint64_t result = qword_1006A11E8;
  if (!qword_1006A11E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A11E8);
  }
  return result;
}

uint64_t sub_100287D38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s8ActivityVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100287D9C(uint64_t a1)
{
  uint64_t v2 = _s8ActivityVMa();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100287DF8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s8ActivityV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s8ActivityV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100287F9CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *_s8ActivityV10CodingKeysOMa()
{
  return &_s8ActivityV10CodingKeysON;
}

unint64_t sub_100287FD8()
{
  unint64_t result = qword_1006A1238;
  if (!qword_1006A1238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A1238);
  }
  return result;
}

unint64_t sub_100288030()
{
  unint64_t result = qword_1006A1240;
  if (!qword_1006A1240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A1240);
  }
  return result;
}

unint64_t sub_100288088()
{
  unint64_t result = qword_1006A1248;
  if (!qword_1006A1248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A1248);
  }
  return result;
}

uint64_t sub_1002880DC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7463656A626FLL && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7069636974726170 && a2 == 0xEB00000000746E61 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7974697669746361 && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6B6361626C6C6166 && a2 == 0xEC00000065707954 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000100556000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6B6361626C6C6166 && a2 == 0xED0000656C746954 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6B6361626C6C6166 && a2 == 0xEC00000061746144)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t destroy for PasswordProtectionDebugSection(uint64_t a1)
{
  return swift_release();
}

uint64_t initializeWithCopy for PasswordProtectionDebugSection(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  id v4 = v3;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for PasswordProtectionDebugSection(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  id v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  id v6 = v4;

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for PasswordProtectionDebugSection(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void **)(a1 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupActivityDebugStatusController.GroupActivityIdentifier(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GroupActivityDebugStatusController.GroupActivityIdentifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PasswordProtectionDebugSection()
{
  return &type metadata for PasswordProtectionDebugSection;
}

uint64_t sub_100288650()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10028866C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v35 = a5;
  uint64_t v9 = sub_10002F214(&qword_1006A1250);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10002F214(&qword_1006A1258);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10002F214(&qword_1006A1260);
  uint64_t v17 = v16 - 8;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v11 = static HorizontalAlignment.leading.getter();
  *((void *)v11 + 1) = 0;
  v11[16] = 1;
  uint64_t v20 = sub_10002F214(&qword_1006A1268);
  sub_1002888BC(a1, a2, a3, a4, (uint64_t)&v11[*(int *)(v20 + 44)]);
  uint64_t v21 = static Font.caption.getter();
  uint64_t KeyPath = swift_getKeyPath();
  sub_10002F034((uint64_t)v11, (uint64_t)v15, &qword_1006A1250);
  uint64_t v23 = (uint64_t *)&v15[*(int *)(v13 + 44)];
  *uint64_t v23 = KeyPath;
  v23[1] = v21;
  sub_10002B754((uint64_t)v11, &qword_1006A1250);
  LOBYTE(v21) = static Edge.Set.horizontal.getter();
  [self deviceIsMac];
  EdgeInsets.init(_all:)();
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  sub_10002F034((uint64_t)v15, (uint64_t)v19, &qword_1006A1258);
  uint64_t v32 = &v19[*(int *)(v17 + 44)];
  *uint64_t v32 = v21;
  *((void *)v32 + 1) = v25;
  *((void *)v32 + 2) = v27;
  *((void *)v32 + 3) = v29;
  *((void *)v32 + 4) = v31;
  v32[40] = 0;
  sub_10002B754((uint64_t)v15, &qword_1006A1258);
  return sub_10028A038((uint64_t)v19, v35);
}

uint64_t sub_1002888BC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v163 = a4;
  int v152 = a3;
  uint64_t v171 = a2;
  uint64_t v151 = a1;
  uint64_t v170 = a5;
  uint64_t v6 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v6 - 8);
  uint64_t v162 = (char *)&v146 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v161 = sub_10002F214(&qword_10069F4F0);
  uint64_t v154 = *(void *)(v161 - 8);
  __chkstk_darwin(v161);
  uint64_t v160 = (char *)&v146 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = sub_10002F214(&qword_1006A1270);
  uint64_t v150 = *(void *)(v158 - 8);
  uint64_t v9 = __chkstk_darwin(v158);
  Swift::Int v153 = (char *)&v146 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v155 = (char *)&v146 - v11;
  uint64_t v156 = sub_10002F214(&qword_1006A1278);
  __chkstk_darwin(v156);
  uint64_t v157 = (uint64_t *)((char *)&v146 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v172 = sub_10002F214(&qword_1006A1280);
  __chkstk_darwin(v172);
  uint64_t v159 = (char *)&v146 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v165 = sub_10002F214(&qword_1006A1288);
  __chkstk_darwin(v165);
  uint64_t v164 = (_OWORD *)((char *)&v146 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_10002F214(&qword_1006A1290);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  id v169 = (char *)&v146 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  unint64_t v167 = (char *)&v146 - v18;
  uint64_t v19 = self;
  [v19 cipherVersionForObject:a2];
  id v20 = (id)ICCipherNameForCipherVersion();
  uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v23 = v22;

  *(void *)&long long v176 = v21;
  *((void *)&v176 + 1) = v23;
  sub_10017B588();
  uint64_t v24 = Text.init<A>(_:)();
  uint64_t v26 = v25;
  char v28 = v27 & 1;
  static Font.subheadline.getter();
  uint64_t v29 = Text.font(_:)();
  uint64_t v31 = v30;
  char v33 = v32;
  swift_release();
  uint64_t v34 = v24;
  uint64_t v35 = v19;
  uint64_t v36 = v26;
  uint64_t v37 = v171;
  sub_1001839EC(v34, v36, v28);
  swift_bridgeObjectRelease();
  static Font.Weight.medium.getter();
  uint64_t v38 = Text.fontWeight(_:)();
  uint64_t v40 = v39;
  int v166 = v41;
  uint64_t v43 = v42;
  sub_1001839EC(v29, v31, v33 & 1);
  swift_bridgeObjectRelease();
  id v44 = [v35 cipherVersionForObject:v37];
  id v45 = [v35 userSelectedCipherVersionForObject:v37];
  uint64_t v168 = v40;
  if (v44 != v45)
  {
    uint64_t v148 = v38;
    uint64_t v65 = v163;
    uint64_t v66 = v160;
    uint64_t v67 = v161;
    uint64_t v149 = v43;
    id v147 = v35;
    uint64_t v68 = v37;
    if ([v35 userSelectedCipherVersionForObject:v37] == (id)2)
    {
      id v69 = [v37 account];
      if (!v69
        || (uint64_t v70 = v69,
            id v71 = [v69 accountData],
            v70,
            !v71)
        || (unsigned __int8 v72 = [v71 supportsV1Neo], v71, (v72 & 1) == 0))
      {
        static Color.secondary.getter();
        uint64_t v104 = Text.foregroundColor(_:)();
        uint64_t v106 = v105;
        char v108 = v107;
        uint64_t v110 = v109;
        swift_release();
        char v111 = v108 & 1;
        *(void *)&long long v173 = v104;
        *((void *)&v173 + 1) = v106;
        *(void *)&long long v174 = v108 & 1;
        *((void *)&v174 + 1) = v110;
        LOBYTE(v175) = 1;
        sub_1001839DC(v104, v106, v108 & 1);
        swift_bridgeObjectRetain();
        _ConditionalContent<>.init(storage:)();
        long long v173 = v176;
        long long v174 = v177;
        __int16 v175 = v178;
        sub_10002F214(&qword_1006A12B0);
        sub_10028A114();
        _ConditionalContent<>.init(storage:)();
        unsigned __int8 v112 = v178;
        char v113 = v179;
        long long v114 = v177;
        uint64_t v115 = v164;
        _OWORD *v164 = v176;
        v115[1] = v114;
        *((unsigned char *)v115 + 32) = v112;
        *((unsigned char *)v115 + 33) = v113;
        swift_storeEnumTagMultiPayload();
        sub_10002F214(&qword_1006A1298);
        sub_10028A0A0();
        sub_10028A180();
        uint64_t v58 = (uint64_t)v167;
LABEL_24:
        _ConditionalContent<>.init(storage:)();
        uint64_t v141 = v104;
        uint64_t v60 = v148;
        sub_1001839EC(v141, v106, v111);
        swift_bridgeObjectRelease();
        uint64_t v63 = v170;
        uint64_t v64 = (uint64_t)v169;
        uint64_t v43 = v149;
LABEL_25:
        uint64_t v62 = v168;
        goto LABEL_26;
      }
    }
    id v73 = v147;
    uint64_t v74 = v67;
    if ([v147 userSelectedCipherVersionForObject:v68] == (id)2)
    {
      id v75 = [v68 account];
      if (!v75
        || (long long v76 = v75,
            id v77 = [v75 accountData],
            v76,
            !v77)
        || (id v78 = [v77 cryptoPassphraseVerifier],
            v77,
            !v78))
      {
        static Color.secondary.getter();
        uint64_t v104 = Text.foregroundColor(_:)();
        uint64_t v106 = v116;
        char v118 = v117;
        uint64_t v120 = v119;
        swift_release();
        char v111 = v118 & 1;
        *(void *)&long long v173 = v104;
        *((void *)&v173 + 1) = v106;
        *(void *)&long long v174 = v118 & 1;
        *((void *)&v174 + 1) = v120;
        LOBYTE(v175) = 0;
        sub_1001839DC(v104, v106, v118 & 1);
        swift_bridgeObjectRetain();
        _ConditionalContent<>.init(storage:)();
        long long v173 = v176;
        long long v174 = v177;
        LOBYTE(v175) = v178;
        HIBYTE(v175) = 1;
LABEL_23:
        sub_10002F214(&qword_1006A12B0);
        sub_10028A114();
        _ConditionalContent<>.init(storage:)();
        unsigned __int8 v137 = v178;
        char v138 = v179;
        long long v139 = v177;
        uint64_t v140 = v164;
        _OWORD *v164 = v176;
        v140[1] = v139;
        *((unsigned char *)v140 + 32) = v137;
        *((unsigned char *)v140 + 33) = v138;
        swift_storeEnumTagMultiPayload();
        sub_10002F214(&qword_1006A1298);
        sub_10028A0A0();
        sub_10028A180();
        uint64_t v58 = (uint64_t)v167;
        goto LABEL_24;
      }
      uint64_t v79 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v81 = v80;

      sub_10017253C(v79, v81);
      id v73 = v147;
    }
    if ([v73 userSelectedCipherVersionForObject:v68])
    {
LABEL_16:
      if ([v68 isAuthenticated])
      {
        LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v88._object = (void *)0x8000000100556050;
        v88._countAndFlagsBits = 0xD000000000000010;
        uint64_t v89 = v68;
        LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v88);
        [v73 userSelectedCipherVersionForObject:v68];
        id v90 = (id)ICCipherNameForCipherVersion();
        uint64_t v91 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v93 = v92;

        v94._countAndFlagsBits = v91;
        v94._object = v93;
        LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v94);
        swift_bridgeObjectRelease();
        v95._countAndFlagsBits = 0;
        v95._object = (void *)0xE000000000000000;
        LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v95);
        LocalizedStringKey.init(stringInterpolation:)();
        uint64_t v96 = swift_allocObject();
        *(void *)(v96 + 16) = v151;
        *(void *)(v96 + 24) = v89;
        char v97 = v152 & 1;
        *(unsigned char *)(v96 + 32) = v152 & 1;
        *(void *)(v96 + 40) = v65;
        swift_retain();
        id v98 = v89;
        Button<>.init(_:action:)();
        LocalizedStringKey.init(stringLiteral:)();
        LOBYTE(v173) = v97;
        *((void *)&v173 + 1) = v65;
        sub_10002F214(&qword_10069CCD8);
        State.projectedValue.getter();
        uint64_t v145 = sub_10001DFB0(&qword_10069F510, &qword_10069F4F0);
        int v99 = v153;
        View.alert<A>(_:isPresented:actions:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v154 + 8))(v66, v67);
        uint64_t v100 = v150;
        uint64_t v101 = v155;
        uint64_t v102 = v158;
        (*(void (**)(char *, char *, uint64_t))(v150 + 32))(v155, v99, v158);
        (*(void (**)(uint64_t *, char *, uint64_t))(v100 + 16))(v157, v101, v102);
        swift_storeEnumTagMultiPayload();
        *(void *)&long long v176 = v74;
        *((void *)&v176 + 1) = v74;
        *(void *)&long long v177 = v145;
        *((void *)&v177 + 1) = v145;
        swift_getOpaqueTypeConformance2();
        uint64_t v103 = (uint64_t)v159;
        _ConditionalContent<>.init(storage:)();
        sub_10002F034(v103, (uint64_t)v164, &qword_1006A1280);
        swift_storeEnumTagMultiPayload();
        sub_10002F214(&qword_1006A1298);
        sub_10028A0A0();
        sub_10028A180();
        uint64_t v58 = (uint64_t)v167;
        _ConditionalContent<>.init(storage:)();
        sub_10002B754(v103, &qword_1006A1280);
        (*(void (**)(char *, uint64_t))(v100 + 8))(v101, v102);
      }
      else
      {
        static Color.secondary.getter();
        uint64_t v121 = Text.foregroundColor(_:)();
        uint64_t v123 = v122;
        char v125 = v124;
        uint64_t v127 = v126;
        swift_release();
        char v128 = v125 & 1;
        uint64_t v129 = v157;
        *uint64_t v157 = v121;
        v129[1] = v123;
        *((unsigned char *)v129 + 16) = v128;
        v129[3] = v127;
        swift_storeEnumTagMultiPayload();
        sub_1001839DC(v121, v123, v128);
        uint64_t v130 = sub_10001DFB0(&qword_10069F510, &qword_10069F4F0);
        swift_bridgeObjectRetain();
        *(void *)&long long v176 = v67;
        *((void *)&v176 + 1) = v67;
        *(void *)&long long v177 = v130;
        *((void *)&v177 + 1) = v130;
        swift_getOpaqueTypeConformance2();
        uint64_t v131 = (uint64_t)v159;
        _ConditionalContent<>.init(storage:)();
        sub_10002F034(v131, (uint64_t)v164, &qword_1006A1280);
        swift_storeEnumTagMultiPayload();
        sub_10002F214(&qword_1006A1298);
        sub_10028A0A0();
        sub_10028A180();
        uint64_t v58 = (uint64_t)v167;
        _ConditionalContent<>.init(storage:)();
        sub_10002B754(v131, &qword_1006A1280);
        sub_1001839EC(v121, v123, v128);
        swift_bridgeObjectRelease();
      }
      uint64_t v63 = v170;
      uint64_t v64 = (uint64_t)v169;
      uint64_t v43 = v149;
      uint64_t v60 = v148;
      goto LABEL_25;
    }
    id v82 = [v68 account];
    if (v82)
    {
      uint64_t v83 = v82;
      id v84 = [v82 cryptoVerifier];

      if (v84)
      {
        uint64_t v85 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v87 = v86;

        sub_10017253C(v85, v87);
        id v73 = v147;
        goto LABEL_16;
      }
    }
    static Color.secondary.getter();
    uint64_t v104 = Text.foregroundColor(_:)();
    uint64_t v106 = v132;
    char v134 = v133;
    uint64_t v136 = v135;
    swift_release();
    char v111 = v134 & 1;
    *(void *)&long long v173 = v104;
    *((void *)&v173 + 1) = v106;
    *(void *)&long long v174 = v134 & 1;
    *((void *)&v174 + 1) = v136;
    LOBYTE(v175) = 1;
    sub_1001839DC(v104, v106, v134 & 1);
    swift_bridgeObjectRetain();
    _ConditionalContent<>.init(storage:)();
    long long v173 = v176;
    long long v174 = v177;
    LOBYTE(v175) = v178;
    HIBYTE(v175) = 1;
    goto LABEL_23;
  }
  static Color.secondary.getter();
  uint64_t v46 = v38;
  uint64_t v47 = Text.foregroundColor(_:)();
  uint64_t v49 = v48;
  char v51 = v50;
  uint64_t v53 = v52;
  swift_release();
  *(void *)&long long v173 = v47;
  *((void *)&v173 + 1) = v49;
  *(void *)&long long v174 = v51 & 1;
  *((void *)&v174 + 1) = v53;
  LOBYTE(v175) = 0;
  sub_1001839DC(v47, v49, v51 & 1);
  swift_bridgeObjectRetain();
  _ConditionalContent<>.init(storage:)();
  long long v173 = v176;
  long long v174 = v177;
  __int16 v175 = v178;
  sub_10002F214(&qword_1006A12B0);
  sub_10028A114();
  _ConditionalContent<>.init(storage:)();
  unsigned __int8 v54 = v178;
  char v55 = v179;
  long long v56 = v177;
  uint64_t v57 = v164;
  _OWORD *v164 = v176;
  v57[1] = v56;
  *((unsigned char *)v57 + 32) = v54;
  *((unsigned char *)v57 + 33) = v55;
  swift_storeEnumTagMultiPayload();
  sub_10002F214(&qword_1006A1298);
  sub_10028A0A0();
  sub_10028A180();
  uint64_t v58 = (uint64_t)v167;
  _ConditionalContent<>.init(storage:)();
  uint64_t v59 = v47;
  uint64_t v60 = v46;
  uint64_t v61 = v49;
  uint64_t v62 = v168;
  sub_1001839EC(v59, v61, v51 & 1);
  swift_bridgeObjectRelease();
  uint64_t v63 = v170;
  uint64_t v64 = (uint64_t)v169;
LABEL_26:
  char v142 = v166 & 1;
  sub_10002F034(v58, v64, &qword_1006A1290);
  *(void *)uint64_t v63 = v60;
  *(void *)(v63 + 8) = v62;
  *(unsigned char *)(v63 + 16) = v142;
  *(void *)(v63 + 24) = v43;
  uint64_t v143 = sub_10002F214(&qword_1006A12C0);
  sub_10002F034(v64, v63 + *(int *)(v143 + 48), &qword_1006A1290);
  sub_1001839DC(v60, v62, v142);
  swift_bridgeObjectRetain();
  sub_10002B754(v58, &qword_1006A1290);
  sub_10002B754(v64, &qword_1006A1290);
  sub_1001839EC(v60, v62, v142);
  return swift_bridgeObjectRelease();
}

void sub_100289AA0(uint64_t a1, void *a2, char a3, uint64_t a4)
{
  id v8 = [self sharedMigrator];
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  *(unsigned char *)(v9 + 32) = a3;
  *(void *)(v9 + 40) = a4;
  v12[4] = sub_10028A2B8;
  v12[5] = v9;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  void v12[2] = sub_100289EA0;
  v12[3] = &unk_100632648;
  uint64_t v10 = _Block_copy(v12);
  swift_retain();
  id v11 = a2;
  swift_release();
  [v8 migrateNote:v11 completionHandler:v10];
  _Block_release(v10);
}

uint64_t sub_100289BD4(void *a1, uint64_t a2, void *a3, int a4, uint64_t a5)
{
  int v22 = a4;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v24 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v11 = &v21[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v23 = type metadata accessor for DispatchQoS();
  uint64_t v12 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v14 = &v21[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100190F20();
  uint64_t v15 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a2;
  *(void *)(v16 + 24) = a3;
  *(unsigned char *)(v16 + 32) = v22;
  *(void *)(v16 + 40) = a5;
  *(void *)(v16 + 48) = a1;
  aBlock[4] = sub_10028A310;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100262E2C;
  void aBlock[3] = &unk_100632698;
  uint64_t v17 = _Block_copy(aBlock);
  id v18 = a1;
  id v19 = a3;
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10028A36C();
  sub_10002F214((uint64_t *)&unk_1006A4830);
  sub_10001DFB0((unint64_t *)&qword_1006A26B0, (uint64_t *)&unk_1006A4830);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);

  (*(void (**)(unsigned char *, uint64_t))(v24 + 8))(v11, v9);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v12 + 8))(v14, v23);
}

void sub_100289EA0(uint64_t a1, void *a2)
{
  int v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t sub_100289F0C()
{
  uint64_t v0 = sub_10002F214(&qword_1006A12C8);
  __chkstk_darwin(v0 - 8);
  unint64_t v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  static ButtonRole.cancel.getter();
  uint64_t v3 = type metadata accessor for ButtonRole();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 0, 1, v3);
  return Button<>.init(_:role:action:)();
}

uint64_t sub_10028A020@<X0>(uint64_t a1@<X8>)
{
  return sub_10028866C(*(void *)v1, *(void **)(v1 + 8), *(unsigned __int8 *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_10028A038(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002F214(&qword_1006A1260);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10028A0A0()
{
  unint64_t result = qword_1006A12A0;
  if (!qword_1006A12A0)
  {
    sub_10001DFF4(&qword_1006A1298);
    sub_10028A114();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A12A0);
  }
  return result;
}

unint64_t sub_10028A114()
{
  unint64_t result = qword_1006A12A8;
  if (!qword_1006A12A8)
  {
    sub_10001DFF4(&qword_1006A12B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A12A8);
  }
  return result;
}

unint64_t sub_10028A180()
{
  unint64_t result = qword_1006A12B8;
  if (!qword_1006A12B8)
  {
    sub_10001DFF4(&qword_1006A1280);
    sub_10001DFF4(&qword_10069F4F0);
    sub_10001DFB0(&qword_10069F510, &qword_10069F4F0);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A12B8);
  }
  return result;
}

void sub_10028A264()
{
  sub_100289AA0(*(void *)(v0 + 16), *(void **)(v0 + 24), *(unsigned char *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_10028A278()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10028A2B8(void *a1)
{
  return sub_100289BD4(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_10028A2C8()
{
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10028A310()
{
  return State.wrappedValue.setter();
}

unint64_t sub_10028A36C()
{
  unint64_t result = qword_1006A26A0;
  if (!qword_1006A26A0)
  {
    type metadata accessor for DispatchWorkItemFlags();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A26A0);
  }
  return result;
}

unint64_t sub_10028A3C8()
{
  unint64_t result = qword_1006A12D0;
  if (!qword_1006A12D0)
  {
    sub_10001DFF4(&qword_1006A1260);
    sub_10028A444();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A12D0);
  }
  return result;
}

unint64_t sub_10028A444()
{
  unint64_t result = qword_1006A12D8;
  if (!qword_1006A12D8)
  {
    sub_10001DFF4(&qword_1006A1258);
    sub_10001DFB0((unint64_t *)&unk_1006A12E0, &qword_1006A1250);
    sub_10001DFB0(&qword_10069CC48, &qword_10069CC38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A12D8);
  }
  return result;
}

uint64_t sub_10028A510()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100032974(v0, qword_1006A12F0);
  sub_10003293C(v0, (uint64_t)qword_1006A12F0);
  return static Logger.application.getter();
}

uint64_t ICSearchSuggestion.id.getter()
{
  return v0;
}

void *sub_10028A564()
{
  return &protocol witness table for ObjectIdentifier;
}

char *sub_10028A580(void *a1, uint64_t a2)
{
  uint64_t v45 = a2;
  int v41 = a1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = sub_10002F214((uint64_t *)&unk_1006A1360);
  uint64_t v37 = *(void *)(v3 - 8);
  uint64_t v38 = v3;
  __chkstk_darwin(v3);
  uint64_t v36 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002F214((uint64_t *)&unk_1006A1380);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v11 = (char *)&v36 - v10;
  uint64_t v12 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for UICollectionLayoutListConfiguration();
  uint64_t v39 = *(void *)(v16 - 8);
  uint64_t v40 = v16;
  __chkstk_darwin(v16);
  id v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v2[OBJC_IVAR___ICSearchSuggestionController_sectionId] = 0;
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, enum case for UICollectionLayoutListConfiguration.Appearance.plain(_:), v12);
  id v19 = v2;
  UICollectionLayoutListConfiguration.init(appearance:)();
  UICollectionLayoutListConfiguration.itemSeparatorHandler.setter();
  sub_100031418(0, &qword_10069C190);
  UICollectionView.CellRegistration.init(handler:)();
  sub_100031418(0, (unint64_t *)&qword_1006A1390);
  id v20 = (void *)static UICollectionViewCompositionalLayout.list(using:)();
  id v21 = [objc_allocWithZone((Class)UICollectionView) initWithFrame:v20 collectionViewLayout:0.0, 0.0, 0.0, 0.0];
  *(void *)&v19[OBJC_IVAR___ICSearchSuggestionController_collectionView] = v21;
  int v22 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  uint64_t v43 = v11;
  v22(v9, v11, v5);
  unint64_t v23 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v24 = swift_allocObject();
  uint64_t v25 = *(void (**)(unint64_t, char *, uint64_t))(v6 + 32);
  uint64_t v44 = v5;
  v25(v24 + v23, v9, v5);
  objc_allocWithZone((Class)sub_10002F214(&qword_1006A1398));
  id v26 = v21;
  *(void *)&v19[OBJC_IVAR___ICSearchSuggestionController_dataSource] = UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)();
  unint64_t result = (char *)[self orderedDefaultSearchSuggestions];
  if (result)
  {
    char v28 = result;
    sub_100031418(0, (unint64_t *)&unk_1006A3630);
    unint64_t v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v30 = v36;
    sub_10028AFEC(v29, 0);
    swift_bridgeObjectRelease();
    dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v30, v38);
    *(void *)&v19[OBJC_IVAR___ICSearchSuggestionController_delegate] = v45;
    uint64_t v31 = v41;
    *(void *)&v19[OBJC_IVAR___ICSearchSuggestionController_parentView] = v41;
    swift_unknownObjectRetain();
    id v32 = v31;

    v46.receiver = v19;
    v46.super_class = ObjectType;
    char v33 = (char *)[super init];
    uint64_t v34 = *(void **)&v33[OBJC_IVAR___ICSearchSuggestionController_collectionView];
    uint64_t v35 = v33;
    [v34 setDelegate:v35];
    [v34 setKeyboardDismissMode:1];

    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v43, v44);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v18, v40);
    return v35;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10028AB08@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for UIListSeparatorConfiguration.Visibility();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UIListSeparatorConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a2, a1, v8);
  uint64_t result = IndexPath.row.getter();
  if (!result)
  {
    uint64_t v10 = enum case for UIListSeparatorConfiguration.Visibility.hidden(_:);
    id v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
    v11(v7, enum case for UIListSeparatorConfiguration.Visibility.hidden(_:), v4);
    UIListSeparatorConfiguration.bottomSeparatorVisibility.setter();
    v11(v7, v10, v4);
    return UIListSeparatorConfiguration.topSeparatorVisibility.setter();
  }
  return result;
}

id sub_10028AC60(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for UIListContentConfiguration();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0) + 8;
  UICollectionViewListCell.defaultContentConfiguration()();
  v9.Class isa = AnyHashable._bridgeToObjectiveC()().isa;
  self;
  uint64_t v10 = (void *)swift_dynamicCastObjCClass();
  if (v10)
  {
    id v11 = v10;
    id v12 = [v10 suggestionItemTitle];
    if (v12)
    {
      uint64_t v13 = v12;
      static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    UIListContentConfiguration.text.setter();
    id v19 = [self configurationWithTextStyle:UIFontTextStyleBody];
    id v20 = (void (*)(uint64_t *, void))UIListContentConfiguration.imageProperties.modify();
    UIListContentConfiguration.ImageProperties.preferredSymbolConfiguration.setter();
    v20(v24, 0);
    id v21 = [v11 iconImage];
    UIListContentConfiguration.image.setter();

    goto LABEL_11;
  }

  sub_100033188(a3, (uint64_t)v24);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_11:
    v24[3] = v5;
    v24[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
    int v22 = sub_10015E0F0(v24);
    (*(void (**)(uint64_t *, char *, uint64_t))(v6 + 16))(v22, v8, v5);
    UICollectionViewCell.contentConfiguration.setter();
    return (id)(*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  UIListContentConfiguration.text.setter();
  id result = [self ic_groupInsetHeaderFont];
  if (result)
  {
    uint64_t v15 = (void (*)(uint64_t *, void))UIListContentConfiguration.textProperties.modify();
    UIListContentConfiguration.TextProperties.font.setter();
    v15(v24, 0);
    UIAccessibilityTraits v16 = UIAccessibilityTraitHeader;
    unint64_t v17 = (unint64_t)[a1 accessibilityTraits];
    if ((v16 & ~v17) != 0) {
      UIAccessibilityTraits v18 = v16;
    }
    else {
      UIAccessibilityTraits v18 = 0;
    }
    [a1 setAccessibilityTraits:v18 | v17];
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_10028AF60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100033188(a3, (uint64_t)v5);
  sub_100031418(0, &qword_10069C190);
  uint64_t v3 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();
  sub_100010470((uint64_t)v5);
  return v3;
}

uint64_t sub_10028AFEC(unint64_t a1, uint64_t a2)
{
  NSDiffableDataSourceSnapshot.init()();
  sub_10002F214((uint64_t *)&unk_1006A1370);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100524D10;
  *(void *)(v4 + 32) = a2;
  sub_10002F214((uint64_t *)&unk_1006A1360);
  NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)v4);
  swift_bridgeObjectRelease();
  sub_10002F214((uint64_t *)&unk_10069E4E0);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100524D10;
  id v5 = [self mainBundle];
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v5 localizedStringForKey:v6 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  AnyHashable.init<A>(_:)();
  NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
  swift_bridgeObjectRelease();
  sub_100330E70(a1);
  NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
  return swift_bridgeObjectRelease();
}

void sub_10028B214(char a1, void *a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  uint64_t v13 = *(void **)&v6[OBJC_IVAR___ICSearchSuggestionController_collectionView];
  id v14 = [v13 superview];
  if (!v14
    || (v15 = v14, id v16 = *(id *)&v6[OBJC_IVAR___ICSearchSuggestionController_parentView], v14, v15 != v16))
  {
    [*(id *)&v6[OBJC_IVAR___ICSearchSuggestionController_parentView] addSubview:v13];
    [v13 setHidden:0];
    [v13 ic_addConstraintsToFillSuperview];
  }
  if ((a1 & 1) != 0 && a2)
  {
    swift_unknownObjectRetain();
    id v17 = [v13 superview];
    if (v17)
    {
      UIAccessibilityTraits v18 = v17;
      [v17 bounds];
      CGFloat v20 = v19;
      CGFloat v22 = v21;
      CGFloat v24 = v23;
      CGFloat v26 = v25;
      v58.origin.x = a3;
      v58.origin.y = a4;
      v58.size.width = a5;
      v58.size.height = a6;
      CGFloat v27 = CGRectGetMaxY(v58) + a4;
      [v13 adjustedContentInset];
      CGFloat v29 = v27 + v28;
      v59.origin.x = v20;
      v59.origin.y = v22;
      v59.size.width = v24;
      v59.size.height = v26;
      CGRect v60 = CGRectOffset(v59, 0.0, v29);
      [v13 setFrame:v60.origin.x, v60.origin.y, v60.size.width, v60.size.height];
      [a2 transitionDuration];
      if (v30 == 0.0)
      {
        uint64_t v31 = (CGFloat *)swift_allocObject();
        *((void *)v31 + 2) = v6;
        v31[3] = v20;
        v31[4] = v22;
        v31[5] = v24;
        v31[6] = v26;
        unsigned __int8 v54 = sub_10028BE4C;
        char v55 = v31;
        aBlocid k = _NSConcreteStackBlock;
        uint64_t v51 = 1107296256;
        uint64_t v52 = sub_100196704;
        uint64_t v53 = &unk_100632738;
        id v32 = _Block_copy(&aBlock);
        char v33 = v6;
        swift_release();
        [a2 animateAlongsideTransition:v32 completion:0];

        _Block_release(v32);
        swift_unknownObjectRelease();
      }
      else
      {
        double v45 = v30;
        objc_super v46 = self;
        uint64_t v47 = (CGFloat *)swift_allocObject();
        *((void *)v47 + 2) = v6;
        v47[3] = v20;
        v47[4] = v22;
        v47[5] = v24;
        v47[6] = v26;
        unsigned __int8 v54 = sub_10028BE4C;
        char v55 = v47;
        aBlocid k = _NSConcreteStackBlock;
        uint64_t v51 = 1107296256;
        uint64_t v52 = sub_100262E2C;
        uint64_t v53 = &unk_1006326E8;
        uint64_t v48 = _Block_copy(&aBlock);
        uint64_t v49 = v6;
        swift_release();
        [v46 animateWithDuration:v48 animations:v45];
        swift_unknownObjectRelease();

        _Block_release(v48);
      }
    }
    else
    {
      if (qword_10069AE00 != -1) {
        swift_once();
      }
      uint64_t v34 = type metadata accessor for Logger();
      sub_10003293C(v34, (uint64_t)qword_1006A12F0);
      uint64_t v35 = v6;
      uint64_t v36 = Logger.logObject.getter();
      os_log_type_t v37 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v36, v37))
      {
        uint64_t v38 = (uint8_t *)swift_slowAlloc();
        uint64_t v39 = (void **)swift_slowAlloc();
        *(_DWORD *)uint64_t v38 = 136315138;
        aBlocid k = v39;
        uint64_t v40 = v35;
        id v41 = [v40 description];
        uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v44 = v43;

        unint64_t v56 = sub_10045DA1C(v42, v44, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v36, v37, "An instance of %s doesn't have a superview", v38, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        swift_unknownObjectRelease();
      }
      else
      {

        swift_unknownObjectRelease();
      }
    }
  }
}

uint64_t type metadata accessor for SearchSuggestionController()
{
  return self;
}

void sub_10028BB98(void *a1)
{
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();
  if (v7)
  {
    v3.Class isa = AnyHashable._bridgeToObjectiveC()().isa;
    sub_100033134((uint64_t)v6);
    self;
    uint64_t v4 = swift_dynamicCastObjCClass();
    if (v4)
    {
      [*(id *)(v1 + OBJC_IVAR___ICSearchSuggestionController_delegate) didSelectSearchSuggestion:v4];
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      [a1 deselectItemAtIndexPath:isa animated:1];
    }
    else
    {
    }
  }
  else
  {
    sub_100010470((uint64_t)v6);
  }
}

BOOL sub_10028BD80()
{
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();
  if (!v5)
  {
    sub_100010470((uint64_t)v4);
    goto LABEL_5;
  }
  v0.Class isa = AnyHashable._bridgeToObjectiveC()().isa;
  sub_100033134((uint64_t)v4);
  self;
  uint64_t v1 = (void *)swift_dynamicCastObjCClass();
  if (!v1)
  {

LABEL_5:
    uint64_t v1 = 0;
  }
  BOOL v2 = v1 != 0;

  return v2;
}

uint64_t sub_10028BE14()
{
  return _swift_deallocObject(v0, 56, 7);
}

id sub_10028BE4C()
{
  return [*(id *)(*(void *)(v0 + 16) + OBJC_IVAR___ICSearchSuggestionController_collectionView) setFrame:*(double *)(v0 + 24) *(double *)(v0 + 32) *(double *)(v0 + 40) *(double *)(v0 + 48)];
}

uint64_t sub_10028BE70()
{
  uint64_t v1 = sub_10002F214((uint64_t *)&unk_1006A1380);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10028BF04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10002F214((uint64_t *)&unk_1006A1380);

  return sub_10028AF60(a1, a2, a3);
}

id sub_10028BF9C(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = &v1[OBJC_IVAR___ICFolderComposerFilterViewController_completion];
  *(void *)uint64_t v4 = 0;
  *((void *)v4 + 1) = 0;
  *(void *)&v1[OBJC_IVAR___ICFolderComposerFilterViewController_filterSelectionObservation] = 0;
  *(void *)&v1[OBJC_IVAR___ICFolderComposerFilterViewController____lazy_storage___folderComposerFilterDataSource] = 0;
  *(void *)&v1[OBJC_IVAR___ICFolderComposerFilterViewController____lazy_storage___collectionView] = 0;
  *(void *)&v1[OBJC_IVAR___ICFolderComposerFilterViewController_verticalInset] = 0x4030000000000000;
  *(void *)&v1[OBJC_IVAR___ICFolderComposerFilterViewController_estimatedHeaderHeight] = 0x4046000000000000;
  *(void *)&v1[OBJC_IVAR___ICFolderComposerFilterViewController_account] = a1;
  v6.receiver = v1;
  v6.super_class = ObjectType;
  return [super initWithNibName:0 bundle:0];
}

void sub_10028C070(void *a1)
{
  uint64_t v2 = &v1[OBJC_IVAR___ICFolderComposerFilterViewController_completion];
  *(void *)uint64_t v2 = 0;
  *((void *)v2 + 1) = 0;
  *(void *)&v1[OBJC_IVAR___ICFolderComposerFilterViewController_filterSelectionObservation] = 0;
  *(void *)&v1[OBJC_IVAR___ICFolderComposerFilterViewController____lazy_storage___folderComposerFilterDataSource] = 0;
  *(void *)&v1[OBJC_IVAR___ICFolderComposerFilterViewController____lazy_storage___collectionView] = 0;
  *(void *)&v1[OBJC_IVAR___ICFolderComposerFilterViewController_verticalInset] = 0x4030000000000000;
  *(void *)&v1[OBJC_IVAR___ICFolderComposerFilterViewController_estimatedHeaderHeight] = 0x4046000000000000;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_10028C144()
{
  v21.receiver = v0;
  v21.super_class = (Class)swift_getObjectType();
  [super viewDidLoad];
  id v1 = [v0 view];
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = sub_10028C45C();
    [v2 addSubview:v3];

    id v4 = sub_10028C45C();
    [v4 ic_addAnchorsToFillSuperview];

    id v5 = [v0 navigationItem];
    objc_super v6 = self;
    id v7 = [v6 mainBundle];
    NSString v8 = String._bridgeToObjectiveC()();
    id v9 = [v7 localizedStringForKey:v8 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v5 setTitle:v10];

    id v11 = [v0 navigationItem];
    id v12 = [v6 mainBundle];
    NSString v13 = String._bridgeToObjectiveC()();
    id v14 = [v12 localizedStringForKey:v13 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v11 setBackButtonTitle:v15];

    id v16 = [v0 navigationItem];
    id v17 = sub_1004BC840();
    [v16 setLeftBarButtonItem:v17];

    id v18 = [v0 navigationItem];
    id v19 = sub_1004BC858();
    [v18 setRightBarButtonItem:v19];

    id v20 = [self defaultCenter];
    [v20 addObserver:v0 selector:"splitViewWillTransitionToSizeWithNotification:" name:@"ICSplitViewControllerWillTransitionToSizeNotification" object:0];
  }
  else
  {
    __break(1u);
  }
}

id sub_10028C45C()
{
  uint64_t v1 = OBJC_IVAR___ICFolderComposerFilterViewController____lazy_storage___collectionView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR___ICFolderComposerFilterViewController____lazy_storage___collectionView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR___ICFolderComposerFilterViewController____lazy_storage___collectionView);
  }
  else
  {
    uint64_t v4 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v5 = [objc_allocWithZone((Class)UICollectionViewCompositionalLayoutConfiguration) init];
    id v6 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
    v13[4] = sub_10028D9B0;
    v13[5] = v4;
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 1107296256;
    void v13[2] = sub_10028D8FC;
    v13[3] = &unk_1006327D8;
    id v7 = _Block_copy(v13);
    id v8 = [v6 initWithSectionProvider:v7 configuration:v5];

    _Block_release(v7);
    swift_release();
    id v9 = [objc_allocWithZone((Class)UICollectionView) initWithFrame:v8 collectionViewLayout:0.0, 0.0, 0.0, 0.0];

    NSString v10 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v9;
    id v3 = v9;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

void sub_10028C628(char a1)
{
  uint64_t v2 = v1;
  v21.receiver = v2;
  v21.super_class = (Class)swift_getObjectType();
  [super viewWillAppear:a1 & 1];
  uint64_t v4 = sub_10028C9F8();
  id v5 = *(id *)&v4[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_filterSelection];

  id v6 = [v5 filterTypeSelections];
  sub_100031418(0, &qword_1006A2680);
  unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v8 >= 1)
  {
    id v9 = sub_10028C9F8();
    id v10 = *(id *)&v9[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_filterSelection];

    [v10 copy];
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    sub_100031418(0, (unint64_t *)&unk_1006A1410);
    int v11 = swift_dynamicCast();
    uint64_t v12 = v20;
    if (!v11) {
      uint64_t v12 = 0;
    }
    NSString v13 = *(void **)&v2[OBJC_IVAR____TtC11MobileNotes32FolderComposerBaseViewController_initialFilterSelection];
    *(void *)&v2[OBJC_IVAR____TtC11MobileNotes32FolderComposerBaseViewController_initialFilterSelection] = v12;
  }
  sub_10028C8C8();
  id v14 = sub_10028C9F8();
  sub_1002D67A0(0, 0, 0);

  NSString v15 = sub_10028C9F8();
  id v16 = *(id *)&v15[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_filterSelection];

  swift_getKeyPath();
  *(void *)(swift_allocObject() + 16) = v2;
  id v17 = v2;
  uint64_t v18 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
  swift_release();
  swift_release();

  id v19 = *(void **)&v17[OBJC_IVAR___ICFolderComposerFilterViewController_filterSelectionObservation];
  *(void *)&v17[OBJC_IVAR___ICFolderComposerFilterViewController_filterSelectionObservation] = v18;
}

void sub_10028C8C8()
{
  id v1 = [v0 presentingViewController];
  if (!v1) {
    goto LABEL_5;
  }
  uint64_t v2 = v1;
  id v3 = [v1 view];

  if (!v3)
  {
    __break(1u);
    return;
  }
  id v4 = [v3 window];

  if (v4)
  {
    unsigned int v5 = [v4 ic_hasCompactSize];

    int v6 = v5 ^ 1;
  }
  else
  {
LABEL_5:
    int v6 = 0;
  }
  unint64_t v7 = sub_10028C9F8();
  int v8 = v7[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_prefersPopoverEntries];

  if (v6 != v8)
  {
    id v9 = sub_10028C9F8();
    v9[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_prefersPopoverEntries] = v6;

    id v10 = sub_10028C9F8();
    sub_1002D67A0(0, 0, 0);
  }
}

char *sub_10028C9F8()
{
  uint64_t v1 = OBJC_IVAR___ICFolderComposerFilterViewController____lazy_storage___folderComposerFilterDataSource;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR___ICFolderComposerFilterViewController____lazy_storage___folderComposerFilterDataSource];
  if (v2)
  {
    id v3 = *(char **)&v0[OBJC_IVAR___ICFolderComposerFilterViewController____lazy_storage___folderComposerFilterDataSource];
  }
  else
  {
    id v4 = v0;
    unsigned int v5 = (void *)sub_10028C45C();
    int v6 = *(void **)&v4[OBJC_IVAR___ICFolderComposerFilterViewController_account];
    id v7 = [v6 objectID];
    id v8 = [v6 managedObjectContext];
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v4;
    objc_allocWithZone((Class)type metadata accessor for FolderComposerFilterDataSource());
    id v10 = v4;
    int v11 = (char *)sub_1002DAF04(v5, v7, v8, (uint64_t)sub_10028D8F4, v9);
    uint64_t v12 = *(void **)&v11[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_presentingViewController];
    *(void *)&v11[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_presentingViewController] = v10;

    NSString v13 = *(void **)&v4[v1];
    *(void *)&v4[v1] = v11;
    id v14 = v10;
    id v3 = v11;

    uint64_t v2 = 0;
  }
  id v15 = v2;
  return v3;
}

void sub_10028CB88(void *a1)
{
  uint64_t v2 = sub_10028C9F8();
  id v3 = *(void **)&v2[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_filterSelection];
  *(void *)&v2[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_filterSelection] = a1;
  id v4 = a1;

  sub_1002D67A0(0, 0, 0);
}

uint64_t sub_10028CC08()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC11MobileNotes32FolderComposerBaseViewController_initialFilterSelection;
  id v3 = *(void **)(v0 + OBJC_IVAR____TtC11MobileNotes32FolderComposerBaseViewController_initialFilterSelection);
  id v4 = v3;
  unsigned int v5 = sub_10028C9F8();
  id v6 = *(id *)&v5[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_filterSelection];

  if (v3)
  {
    sub_100031418(0, (unint64_t *)&unk_1006A1410);
    id v7 = v4;
    char v8 = static NSObject.== infix(_:_:)();

    if (v8) {
      return 0;
    }
  }
  else
  {
  }
  id v10 = *(void **)(v1 + v2);
  if (v10 && ![v10 isEmpty]) {
    return 1;
  }
  int v11 = sub_10028C9F8();
  id v12 = *(id *)&v11[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_filterSelection];

  LODWORD(v11) = [v12 isEmpty];
  return v11 ^ 1;
}

void sub_10028CD84(void *a1, void *a2, id a3)
{
  if (a2)
  {
    id v16 = a2;
    [a1 setModalPresentationStyle:7];
    id v5 = [a1 popoverPresentationController];
    if (v5)
    {
      id v6 = v5;
      [v5 setSourceView:v16];
    }
    id v7 = [a1 popoverPresentationController];
    if (v7)
    {
      char v8 = v7;
      [v7 setPermittedArrowDirections:3];
    }
    [v16 frame];
    double v10 = v9;
    double v12 = v11;
    id v13 = [a1 popoverPresentationController];
    if (v13)
    {
      id v14 = v13;
      [v13 setSourceRect:v10 + -44.0, 0.0, 44.0, v12];
    }
    [a3 presentViewController:a1 animated:1 completion:0];
  }
  else
  {
    id v15 = [a3 navigationController];
    if (!v15) {
      return;
    }
    id v16 = v15;
    [v15 pushViewController:a1 animated:1];
  }
}

void sub_10028CF24(char *a1)
{
  uint64_t v2 = sub_10002F214(&qword_1006A1400);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  double v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UICollectionLayoutListConfiguration();
  uint64_t v33 = *(void *)(v10 - 8);
  uint64_t v34 = v10;
  __chkstk_darwin(v10);
  double v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v14 = (void *)Strong;
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for UICollectionLayoutListConfiguration.Appearance.insetGrouped(_:), v6);
    UICollectionLayoutListConfiguration.init(appearance:)();
    sub_100031418(0, (unint64_t *)&qword_1006A1408);
    id v15 = (void *)static NSCollectionLayoutSection.list(using:layoutEnvironment:)();
    [v15 contentInsets];
    [v15 setContentInsets:0.0];
    id v16 = sub_10028C9F8();
    id v17 = sub_1002D8868();

    dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();
    uint64_t v18 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    unsigned __int8 v19 = sub_1002D64D8(12, v18);
    uint64_t v20 = swift_bridgeObjectRelease();
    if (a1 == (char *)1)
    {
LABEL_5:
      double v23 = self;
      id v24 = [v23 fractionalWidthDimension:1.0];
      id v25 = [v23 estimatedDimension:44.0];
      id v26 = [self sizeWithWidthDimension:v24 heightDimension:v25];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v27 = v26;
      NSString v28 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v29 = [self boundarySupplementaryItemWithLayoutSize:v27 elementKind:v28 alignment:1];

      sub_10002F214(&qword_10069BA00);
      uint64_t v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = xmmword_100529F20;
      *(void *)(v30 + 32) = v29;
      uint64_t v35 = v30;
      specialized Array._endMutation()();
      sub_100031418(0, &qword_1006A5750);
      id v31 = v29;
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v15 setBoundarySupplementaryItems:isa];

      (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v34);
      return;
    }
    objc_super v21 = (void *)sub_10028C45C(v20);
    CGFloat v22 = (char *)[v21 numberOfSections];

    if (__OFSUB__(v22, 1))
    {
      __break(1u);
    }
    else
    {
      if (((v22 - 1 == a1) & v19) == 1) {
        goto LABEL_5;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v34);
    }
  }
}

void sub_10028D404()
{
  id v2 = sub_1004BC858();
  uint64_t v0 = sub_10028C9F8();
  id v1 = *(id *)&v0[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_filterSelection];

  LODWORD(v0) = [v1 isEmpty];
  [v2 setEnabled:v0 ^ 1];
}

uint64_t sub_10028D498(void *a1)
{
  id v2 = v1;
  id v4 = [v2 navigationController];
  if (v4)
  {
    id v5 = v4;
  }
  id v6 = [v2 presentedViewController];
  if (v6)
  {
    uint64_t v7 = v6;
    [v6 dismissViewControllerAnimated:0 completion:0];
  }
  id v8 = [a1 userInfo];
  if (!v8)
  {
    long long v20 = 0u;
    long long v21 = 0u;
    return sub_100015BE0((uint64_t)&v20);
  }
  double v9 = v8;
  uint64_t v10 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  v19[6] = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v19[7] = v11;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v10 + 16) && (unint64_t v12 = sub_100033028((uint64_t)v19), (v13 & 1) != 0))
  {
    sub_100032E28(*(void *)(v10 + 56) + 32 * v12, (uint64_t)&v20);
  }
  else
  {
    long long v20 = 0u;
    long long v21 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_100033134((uint64_t)v19);
  if (!*((void *)&v21 + 1)) {
    return sub_100015BE0((uint64_t)&v20);
  }
  sub_10002F214(&qword_1006A1480);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    id v15 = (void *)v19[0];
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = v2;
    v19[4] = sub_10028D9B8;
    v19[5] = v16;
    v19[0] = _NSConcreteStackBlock;
    v19[1] = 1107296256;
    v19[2] = sub_100196704;
    v19[3] = &unk_100632828;
    id v17 = _Block_copy(v19);
    swift_unknownObjectRetain();
    id v18 = v2;
    swift_release();
    [v15 animateAlongsideTransition:0 completion:v17];
    swift_unknownObjectRelease();
    _Block_release(v17);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_10028D7A4()
{
  sub_10002E70C(*(void *)(v0 + OBJC_IVAR___ICFolderComposerFilterViewController_completion));

  objc_release(*(id *)(v0
                     + OBJC_IVAR___ICFolderComposerFilterViewController____lazy_storage___folderComposerFilterDataSource));
  id v1 = *(void **)(v0 + OBJC_IVAR___ICFolderComposerFilterViewController____lazy_storage___collectionView);
}

uint64_t type metadata accessor for FolderComposerFilterViewController()
{
  return self;
}

uint64_t sub_10028D8BC()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10028D8F4(void *a1, void *a2)
{
  sub_10028CD84(a1, a2, *(id *)(v2 + 16));
}

id sub_10028D8FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  id v6 = (void *)v5(a2, a3);
  swift_release();
  swift_unknownObjectRelease();

  return v6;
}

uint64_t sub_10028D978()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10028D9B0(char *a1)
{
}

void sub_10028D9B8()
{
}

void sub_10028D9DC()
{
  id v1 = v0;
  uint64_t v2 = sub_10028C9F8();
  id v3 = *(id *)&v2[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_filterSelection];

  unsigned int v4 = [v3 isValid];
  id v5 = sub_10028C9F8();
  id v6 = *(id *)&v5[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_filterSelection];

  if (v4)
  {
    [v6 copy];

    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    sub_100031418(0, (unint64_t *)&unk_1006A1410);
    int v7 = swift_dynamicCast();
    uint64_t v8 = v35;
    if (!v7) {
      uint64_t v8 = 0;
    }
    double v9 = *(void **)&v1[OBJC_IVAR____TtC11MobileNotes32FolderComposerBaseViewController_initialFilterSelection];
    *(void *)&v1[OBJC_IVAR____TtC11MobileNotes32FolderComposerBaseViewController_initialFilterSelection] = v8;

    uint64_t v10 = *(void (**)(id))&v1[OBJC_IVAR___ICFolderComposerFilterViewController_completion];
    if (v10)
    {
      swift_retain();
      uint64_t v11 = sub_10028C9F8();
      id v12 = *(id *)&v11[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_filterSelection];

      v10(v12);
      sub_10002E70C((uint64_t)v10);
    }
    id v13 = [v1 navigationController];
    if (v13)
    {
      id v14 = v13;
      [v13 dismissViewControllerAnimated:1 completion:0];
    }
    return;
  }
  id v15 = [v6 invalidSummaryTitle];

  if (v15)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v17 = v16;
  }
  else
  {
    uint64_t v17 = 0;
  }
  id v18 = sub_10028C9F8();
  id v19 = *(id *)&v18[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_filterSelection];

  id v20 = [v19 invalidSummary];
  if (v20)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v22 = v21;

    if (v17) {
      goto LABEL_14;
    }
LABEL_17:
    NSString v23 = 0;
    if (v22) {
      goto LABEL_15;
    }
LABEL_18:
    NSString v24 = 0;
    goto LABEL_19;
  }
  uint64_t v22 = 0;
  if (!v17) {
    goto LABEL_17;
  }
LABEL_14:
  NSString v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (!v22) {
    goto LABEL_18;
  }
LABEL_15:
  NSString v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
LABEL_19:
  id v25 = [self alertControllerWithTitle:v23 message:v24 preferredStyle:1];

  id v26 = [self mainBundle];
  NSString v27 = String._bridgeToObjectiveC()();
  id v28 = [v26 localizedStringForKey:v27 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v33 = [self actionWithTitle:v29 style:1 handler:0];

  [v25 addAction:v33];
  id v30 = [v25 popoverPresentationController];
  if (v30)
  {
    id v31 = v30;
    id v32 = sub_1004BC858();
    [v31 setBarButtonItem:v32];
  }
  [v1 presentViewController:v25 animated:1 completion:0 v33];
}

const char *sub_10028DE28()
{
  return "isEmpty";
}

id sub_10028DE34@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 isEmpty];
  *a2 = (_BYTE)result;
  return result;
}

void sub_10028DE68()
{
}

char *sub_10028DF24()
{
  uint64_t v1 = OBJC_IVAR___ICTagContainerCell____lazy_storage___collectionView;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR___ICTagContainerCell____lazy_storage___collectionView];
  if (v2)
  {
    id v3 = *(char **)&v0[OBJC_IVAR___ICTagContainerCell____lazy_storage___collectionView];
  }
  else
  {
    unsigned int v4 = v0;
    uint64_t ObjectType = swift_getObjectType();
    id v6 = &v0[OBJC_IVAR___ICTagContainerCell_tagRowLimit];
    uint64_t v7 = *(void *)&v0[OBJC_IVAR___ICTagContainerCell_tagRowLimit];
    char v8 = v6[8];
    id v9 = objc_allocWithZone((Class)type metadata accessor for TagCollectionView());
    uint64_t v10 = sub_10038E8B4(0x10001010000uLL, v7, v8);
    v16[3] = ObjectType;
    v16[4] = &off_100632878;
    v16[0] = v4;
    uint64_t v11 = (uint64_t)&v10[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_accessibilityProvider];
    swift_beginAccess();
    id v12 = v4;
    sub_10028FF74((uint64_t)v16, v11);
    swift_endAccess();
    [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v13 = *(void **)&v4[v1];
    *(void *)&v4[v1] = v10;
    id v3 = v10;

    uint64_t v2 = 0;
  }
  id v14 = v2;
  return v3;
}

id sub_10028E1D4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10028DF24();
  uint64_t v3 = *(void *)&v1[OBJC_IVAR___ICTagContainerCell_selectionDidChange];
  uint64_t v4 = *(void *)&v1[OBJC_IVAR___ICTagContainerCell_selectionDidChange + 8];
  id v5 = (uint64_t *)&v2[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_selectionDidChange];
  swift_beginAccess();
  uint64_t v6 = *v5;
  *id v5 = v3;
  v5[1] = v4;
  sub_10002E71C(v3);
  sub_10002E70C(v6);

  uint64_t v7 = sub_10028DF24();
  uint64_t v8 = *(void *)&v1[OBJC_IVAR___ICTagContainerCell_dataDidChange];
  uint64_t v9 = *(void *)&v1[OBJC_IVAR___ICTagContainerCell_dataDidChange + 8];
  uint64_t v10 = (uint64_t *)&v7[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_dataDidChange];
  uint64_t v11 = *(void *)&v7[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_dataDidChange];
  uint64_t *v10 = v8;
  v10[1] = v9;
  sub_10002E71C(v8);
  sub_10002E70C(v11);

  id v12 = sub_10028DF24();
  char v13 = v1[OBJC_IVAR___ICTagContainerCell_includesNewTagItem];
  char v14 = v1[OBJC_IVAR___ICTagContainerCell_includesAllTagsItem];
  char v15 = v1[OBJC_IVAR___ICTagContainerCell_hasGroupInset];
  unsigned __int8 v16 = v1[OBJC_IVAR___ICTagContainerCell_allowsExclusion];
  uint64_t v17 = *(void *)&v1[OBJC_IVAR___ICTagContainerCell_tagRowLimit];
  char v18 = v1[OBJC_IVAR___ICTagContainerCell_tagRowLimit + 8];
  id v19 = &v12[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_configuration];
  uint64_t v20 = v12[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_configuration];
  int v21 = v12[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_configuration + 1];
  int v22 = v12[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_configuration + 2];
  int v23 = v12[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_configuration + 3];
  int v24 = v12[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_configuration + 4];
  int v25 = v12[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_configuration + 5];
  uint64_t v26 = *(void *)&v12[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_configuration + 8];
  char v27 = v12[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_configuration + 16];
  *id v19 = v1[OBJC_IVAR___ICTagContainerCell_hasHorizontalScrolling];
  v19[1] = v13;
  v19[2] = v14;
  v19[3] = v15;
  *((_WORD *)v19 + 2) = v16;
  *((void *)v19 + 1) = v17;
  v19[16] = v18;
  uint64_t v28 = 256;
  if (!v21) {
    uint64_t v28 = 0;
  }
  uint64_t v29 = v28 | v20;
  uint64_t v30 = 0x10000;
  if (!v22) {
    uint64_t v30 = 0;
  }
  uint64_t v31 = 0x1000000;
  if (!v23) {
    uint64_t v31 = 0;
  }
  uint64_t v32 = v29 | v30 | v31;
  id v33 = &_mh_execute_header;
  if (!v24) {
    id v33 = 0;
  }
  uint64_t v34 = 0x10000000000;
  if (!v25) {
    uint64_t v34 = 0;
  }
  sub_10038C354(v32 | (unint64_t)v33 | v34, v26, v27);

  return [v1 invalidateIntrinsicContentSize];
}

unsigned char *sub_10028E424(unsigned char *result, uint64_t a2, int a3, void *a4)
{
  int v4 = result[*a4];
  result[*a4] = a3;
  if (v4 != a3) {
    return [result setNeedsUpdateConfiguration];
  }
  return result;
}

void sub_10028E770(char a1)
{
  uint64_t v2 = type metadata accessor for IndexPath();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214((uint64_t *)&unk_1006A2670);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_10028DF24();
  id v9 = [v31 indexPathsForVisibleItems];
  uint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v11 = *(void *)(v10 + 16);
  v24[2] = v10;
  if (v11)
  {
    id v12 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
    uint64_t v13 = v3 + 16;
    unint64_t v14 = v10 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v28 = *(void *)(v13 + 56);
    uint64_t v29 = v12;
    char v15 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 40);
    unsigned __int8 v16 = (unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 32);
    uint64_t v30 = v13;
    uint64_t v26 = (void (**)(char *, uint64_t))(v13 - 8);
    char v27 = (void (**)(char *, char *, uint64_t))(v13 + 16);
    v24[1] = (v13 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    unsigned int v25 = a1 & 1;
    v12(v8, v14, v2);
    while (1)
    {
      uint64_t v17 = *v15;
      (*v15)(v8, 0, 1, v2);
      if ((*v16)(v8, 1, v2) == 1) {
        break;
      }
      (*v27)(v5, v8, v2);
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      id v19 = v31;
      [v31 deselectItemAtIndexPath:isa animated:v25];

      Class v20 = IndexPath._bridgeToObjectiveC()().super.isa;
      id v21 = [v19 cellForItemAtIndexPath:v20];

      if (v21)
      {
        type metadata accessor for TagCell();
        uint64_t v22 = swift_dynamicCastClass();
        if (v22)
        {
          *(unsigned char *)(v22 + OBJC_IVAR___ICTagCell_isExcluded) = 0;
          sub_100474ED8();
        }
      }
      (*v26)(v5, v2);
      v14 += v28;
      if (!--v11)
      {
        v17(v8, 1, 1, v2);
        break;
      }
      v29(v8, v14, v2);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v8, 1, 1, v2);
  }
  swift_bridgeObjectRelease();
  int v23 = v31;
  [*(id *)&v31[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagSelection] clear];
}

void sub_10028EAEC(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10028DF24();
  uint64_t v7 = *(void **)&v6[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagDataSource];
  if (v7)
  {
    id v12 = v6;
    uint64_t v8 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v9 = (void *)swift_allocObject();
    v9[2] = v8;
    v9[3] = a2;
    v9[4] = a3;
    aBlock[4] = sub_100290018;
    aBlock[5] = v9;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_100262E2C;
    void aBlock[3] = &unk_1006328D8;
    uint64_t v10 = _Block_copy(aBlock);
    id v11 = v7;
    sub_10002E71C(a2);
    swift_release();
    [v11 reloadDataAnimated:a1 & 1 dataIndexedBlock:0 dataRenderedBlock:v10];
    _Block_release(v10);
  }
  else
  {
  }
}

void sub_10028EF24(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UIBackgroundConfiguration();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214(&qword_1006A38E0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v76 = (void *)type metadata accessor for UIListContentConfiguration();
  id v77 = (void (*)())&protocol witness table for UIListContentConfiguration;
  sub_10015E0F0(aBlock);
  static UIListContentConfiguration.cell()();
  UICollectionViewCell.contentConfiguration.setter();
  if (v1[OBJC_IVAR___ICTagContainerCell_hasHorizontalScrolling] == 1)
  {
    static UIBackgroundConfiguration.clear()();
    uint64_t v11 = type metadata accessor for UICellConfigurationState();
    long long v76 = (void *)v11;
    id v77 = (void (*)())&protocol witness table for UICellConfigurationState;
    id v12 = sub_10015E0F0(aBlock);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v12, a1, v11);
    UIBackgroundConfiguration.updated(for:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_100018FE8((uint64_t)aBlock);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v4);
    UICollectionViewCell.backgroundConfiguration.setter();
  }
  uint64_t v13 = sub_10028DF24();
  char v14 = UICellConfigurationState.isEditing.getter();
  char v15 = (objc_class *)type metadata accessor for TagCollectionView();
  v80.receiver = v13;
  v80.super_class = v15;
  char v16 = [super isEditing];
  v79.receiver = v13;
  v79.super_class = v15;
  [super setEditing:v14 & 1];
  sub_10038E55C(v16);

  if ((UICellConfigurationState.isEditing.getter() & 1) == 0) {
    sub_10028E1D4();
  }
  uint64_t v17 = OBJC_IVAR___ICTagContainerCell_preservesSuperviewHorizontalLayoutMargins;
  double v18 = 0.0;
  if (v2[OBJC_IVAR___ICTagContainerCell_preservesSuperviewHorizontalLayoutMargins] == 1)
  {
    [v2 layoutMargins];
    double v20 = v19;
    double v21 = 16.0;
    if ((v2[OBJC_IVAR___ICTagContainerCell_hasGroupInset] & 1) == 0)
    {
      unsigned int v22 = [self ic_isVision];
      double v21 = 0.0;
      if (v22) {
        double v21 = 12.0;
      }
    }
    double v23 = v20 - v21;
    if (v2[v17] == 1)
    {
      [v2 layoutMargins];
      double v25 = v24;
      double v26 = 16.0;
      if ((v2[OBJC_IVAR___ICTagContainerCell_hasGroupInset] & 1) == 0)
      {
        unsigned int v27 = [self ic_isVision];
        double v26 = 0.0;
        if (v27) {
          double v26 = 12.0;
        }
      }
      double v18 = -(v25 - v26);
    }
  }
  else
  {
    double v23 = 0.0;
  }
  uint64_t v28 = sub_10028DF24();
  int v29 = v28[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_configuration];

  if (v29 == 2)
  {
    id v30 = [v2 ic_viewControllerManager];
    if (v30)
    {
      uint64_t v31 = v30;
      unsigned int v32 = [v30 hasCompactWidth];

      if (!v32)
      {
        double v23 = -16.0;
        double v18 = 16.0;
      }
    }
  }
  id v33 = sub_10028DF24();
  id v34 = [v33 superview];

  if (v34)
  {
    uint64_t v35 = *(void **)&v2[OBJC_IVAR___ICTagContainerCell_leadingConstraint];
    if (v35) {
      [v35 setConstant:v23];
    }
    uint64_t v36 = *(void **)&v2[OBJC_IVAR___ICTagContainerCell_trailingConstraint];
    if (v36) {
      [v36 setConstant:v18];
    }
  }
  else
  {
    id v37 = [v2 contentView];
    uint64_t v38 = sub_10028DF24();
    [v37 addSubview:v38];

    uint64_t v39 = sub_10028DF24();
    id v40 = [v39 leadingAnchor];

    id v41 = [v2 contentView];
    id v42 = [v41 leadingAnchor];

    id v43 = [v40 constraintEqualToAnchor:v42 constant:v23];
    uint64_t v44 = OBJC_IVAR___ICTagContainerCell_leadingConstraint;
    double v45 = *(void **)&v2[OBJC_IVAR___ICTagContainerCell_leadingConstraint];
    *(void *)&v2[OBJC_IVAR___ICTagContainerCell_leadingConstraint] = v43;

    objc_super v46 = *(void **)&v2[v44];
    if (v46) {
      [v46 setActive:1];
    }
    uint64_t v47 = sub_10028DF24();
    id v48 = [v47 trailingAnchor];

    id v49 = [v2 contentView];
    id v50 = [v49 trailingAnchor];

    id v51 = [v48 constraintEqualToAnchor:v50 constant:v18];
    uint64_t v52 = OBJC_IVAR___ICTagContainerCell_trailingConstraint;
    uint64_t v53 = *(void **)&v2[OBJC_IVAR___ICTagContainerCell_trailingConstraint];
    *(void *)&v2[OBJC_IVAR___ICTagContainerCell_trailingConstraint] = v51;

    unsigned __int8 v54 = *(void **)&v2[v52];
    if (v54) {
      [v54 setActive:1];
    }
    char v55 = self;
    sub_10002F214(&qword_10069BA00);
    uint64_t v56 = swift_allocObject();
    *(_OWORD *)(v56 + 16) = xmmword_100524CE0;
    uint64_t v57 = sub_10028DF24();
    id v58 = [v57 topAnchor];

    id v59 = [v2 contentView];
    id v60 = [v59 topAnchor];

    id v61 = [v58 constraintEqualToAnchor:v60];
    *(void *)(v56 + 32) = v61;
    uint64_t v62 = sub_10028DF24();
    id v63 = [v62 bottomAnchor];

    id v64 = [v2 contentView];
    id v65 = [v64 bottomAnchor];

    id v66 = [v63 constraintEqualToAnchor:v65];
    *(void *)(v56 + 40) = v66;
    aBlock[0] = v56;
    specialized Array._endMutation()();
    sub_100290024();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v55 activateConstraints:isa];

    uint64_t v68 = sub_10028DF24();
    id v69 = v68;
    uint64_t v70 = *(void **)&v68[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagDataSource];
    if (v70)
    {
      uint64_t v71 = swift_allocObject();
      swift_unknownObjectWeakInit();
      unsigned __int8 v72 = (void *)swift_allocObject();
      void v72[3] = 0;
      v72[4] = 0;
      v72[2] = v71;
      id v77 = sub_100290194;
      id v78 = v72;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      void aBlock[2] = (uint64_t)sub_100262E2C;
      long long v76 = &unk_100632928;
      id v73 = _Block_copy(aBlock);
      id v74 = v70;
      swift_release();
      [v74 reloadDataAnimated:0 dataIndexedBlock:0 dataRenderedBlock:v73];
      _Block_release(v73);
    }
    else
    {
    }
  }
}

void sub_10028F8C8()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v17.receiver = v0;
  v17.super_class = ObjectType;
  [super prepareForReuse];
  uint64_t v3 = sub_10028DF24();
  [v3 removeFromSuperview];

  uint64_t v4 = *(void *)&v1[OBJC_IVAR___ICTagContainerCell_tagRowLimit];
  char v5 = v1[OBJC_IVAR___ICTagContainerCell_tagRowLimit + 8];
  id v6 = objc_allocWithZone((Class)type metadata accessor for TagCollectionView());
  uint64_t v7 = sub_10038E8B4(0x10001010000uLL, v4, v5);
  v16[3] = ObjectType;
  v16[4] = &off_100632878;
  v16[0] = v1;
  uint64_t v8 = (uint64_t)&v7[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_accessibilityProvider];
  swift_beginAccess();
  uint64_t v9 = v1;
  sub_10028FF74((uint64_t)v16, v8);
  swift_endAccess();
  [v7 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v10 = *(void **)&v9[OBJC_IVAR___ICTagContainerCell____lazy_storage___collectionView];
  *(void *)&v9[OBJC_IVAR___ICTagContainerCell____lazy_storage___collectionView] = v7;

  char v11 = v9[OBJC_IVAR___ICTagContainerCell_hasGroupInset];
  v9[OBJC_IVAR___ICTagContainerCell_hasGroupInset] = 1;
  if ((v11 & 1) == 0)
  {
    [v9 setNeedsLayout];
    [v9 layoutIfNeeded];
    [v9 setNeedsUpdateConfiguration];
  }
  int v12 = v9[OBJC_IVAR___ICTagContainerCell_hasHorizontalScrolling];
  v9[OBJC_IVAR___ICTagContainerCell_hasHorizontalScrolling] = 0;
  if (v12 == 1) {
    sub_10028E1D4();
  }
  int v13 = v9[OBJC_IVAR___ICTagContainerCell_includesNewTagItem];
  v9[OBJC_IVAR___ICTagContainerCell_includesNewTagItem] = 0;
  if (v13 == 1) {
    [v9 setNeedsUpdateConfiguration];
  }
  char v14 = v9[OBJC_IVAR___ICTagContainerCell_includesAllTagsItem];
  v9[OBJC_IVAR___ICTagContainerCell_includesAllTagsItem] = 1;
  if ((v14 & 1) == 0) {
    [v9 setNeedsUpdateConfiguration];
  }
  int v15 = v9[OBJC_IVAR___ICTagContainerCell_allowsExclusion];
  v9[OBJC_IVAR___ICTagContainerCell_allowsExclusion] = 0;
  if (v15 == 1) {
    [v9 setNeedsUpdateConfiguration];
  }
}

id sub_10028FC14(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v4[OBJC_IVAR___ICTagContainerCell_preservesSuperviewHorizontalLayoutMargins] = 0;
  *(void *)&v4[OBJC_IVAR___ICTagContainerCell_presentingViewController] = 0;
  *(void *)&v4[OBJC_IVAR___ICTagContainerCell_defaultAccountObjectID] = 0;
  v4[OBJC_IVAR___ICTagContainerCell_hasGroupInset] = 1;
  v4[OBJC_IVAR___ICTagContainerCell_hasHorizontalScrolling] = 0;
  v4[OBJC_IVAR___ICTagContainerCell_includesNewTagItem] = 0;
  v4[OBJC_IVAR___ICTagContainerCell_includesAllTagsItem] = 1;
  v4[OBJC_IVAR___ICTagContainerCell_allowsExclusion] = 0;
  uint64_t v10 = &v4[OBJC_IVAR___ICTagContainerCell_selectionDidChange];
  void *v10 = 0;
  v10[1] = 0;
  char v11 = &v4[OBJC_IVAR___ICTagContainerCell_dataDidChange];
  *char v11 = 0;
  v11[1] = 0;
  v4[OBJC_IVAR___ICTagContainerCell_allowsContextualMenu] = 1;
  int v12 = &v4[OBJC_IVAR___ICTagContainerCell_tagRowLimit];
  *(void *)int v12 = 0;
  v12[8] = 1;
  *(void *)&v4[OBJC_IVAR___ICTagContainerCell____lazy_storage___collectionView] = 0;
  *(void *)&v4[OBJC_IVAR___ICTagContainerCell_leadingConstraint] = 0;
  *(void *)&v4[OBJC_IVAR___ICTagContainerCell_trailingConstraint] = 0;
  v14.receiver = v4;
  v14.super_class = ObjectType;
  return [super initWithFrame:a1, a2, a3, a4];
}

id sub_10028FD68(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v1[OBJC_IVAR___ICTagContainerCell_preservesSuperviewHorizontalLayoutMargins] = 0;
  *(void *)&v1[OBJC_IVAR___ICTagContainerCell_presentingViewController] = 0;
  *(void *)&v1[OBJC_IVAR___ICTagContainerCell_defaultAccountObjectID] = 0;
  v1[OBJC_IVAR___ICTagContainerCell_hasGroupInset] = 1;
  v1[OBJC_IVAR___ICTagContainerCell_hasHorizontalScrolling] = 0;
  v1[OBJC_IVAR___ICTagContainerCell_includesNewTagItem] = 0;
  v1[OBJC_IVAR___ICTagContainerCell_includesAllTagsItem] = 1;
  v1[OBJC_IVAR___ICTagContainerCell_allowsExclusion] = 0;
  uint64_t v4 = &v1[OBJC_IVAR___ICTagContainerCell_selectionDidChange];
  *uint64_t v4 = 0;
  v4[1] = 0;
  char v5 = &v1[OBJC_IVAR___ICTagContainerCell_dataDidChange];
  *char v5 = 0;
  v5[1] = 0;
  v1[OBJC_IVAR___ICTagContainerCell_allowsContextualMenu] = 1;
  id v6 = &v1[OBJC_IVAR___ICTagContainerCell_tagRowLimit];
  *(void *)id v6 = 0;
  v6[8] = 1;
  *(void *)&v1[OBJC_IVAR___ICTagContainerCell____lazy_storage___collectionView] = 0;
  *(void *)&v1[OBJC_IVAR___ICTagContainerCell_leadingConstraint] = 0;
  *(void *)&v1[OBJC_IVAR___ICTagContainerCell_trailingConstraint] = 0;
  v9.receiver = v1;
  v9.super_class = ObjectType;
  [super initWithCoder:a1];

  return v7;
}

uint64_t type metadata accessor for TagContainerCell()
{
  return self;
}

uint64_t sub_10028FF74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002F214(&qword_1006A1528);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10028FFDC()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100290018()
{
  sub_10038F688(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24));
}

unint64_t sub_100290024()
{
  unint64_t result = qword_1006A5260;
  if (!qword_1006A5260)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1006A5260);
  }
  return result;
}

uint64_t sub_100290068()
{
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002900B0()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002900E8(uint64_t a1)
{
  return sub_10038AD80(a1, *(void *)(v1 + 16));
}

void sub_1002900F0(void *a1, uint64_t *a2, void *a3)
{
  uint64_t v5 = *a2;
  id v6 = *(void **)(v3 + *a2);
  *(void *)(v3 + *a2) = a1;
  id v7 = a1;

  uint64_t v8 = sub_10028DF24();
  objc_super v9 = *(void **)(v3 + v5);
  id v11 = *(id *)&v8[*a3];
  *(void *)&v8[*a3] = v9;
  id v10 = v9;
}

uint64_t sub_100290198(unint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for AttachmentID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    objc_super v9 = _swiftEmptyArrayStorage;
    if (!v8) {
      return (uint64_t)v9;
    }
    double v18 = _swiftEmptyArrayStorage;
    uint64_t result = sub_100169D6C(0, v8 & ~(v8 >> 63), 0);
    if (v8 < 0) {
      break;
    }
    uint64_t v11 = 0;
    objc_super v9 = v18;
    unint64_t v16 = a1 & 0xC000000000000001;
    unint64_t v17 = a1;
    v15[0] = v2;
    v15[1] = v5 + 32;
    while (v8 != v11)
    {
      if (v16) {
        id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v12 = *(id *)(a1 + 8 * v11 + 32);
      }
      int v13 = v12;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, (uint64_t)v12 + OBJC_IVAR____TtC11MobileNotesP33_F583289AB4A4398FFA2D9CF750E5A2EB22AttachmentSearchResult_id, v4);

      double v18 = v9;
      unint64_t v2 = v9[2];
      unint64_t v14 = v9[3];
      if (v2 >= v14 >> 1)
      {
        sub_100169D6C(v14 > 1, v2 + 1, 1);
        objc_super v9 = v18;
      }
      ++v11;
      v9[2] = v2 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))((unint64_t)v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v2, v7, v4);
      a1 = v17;
      if (v8 == v11) {
        return (uint64_t)v9;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void *sub_1002903C8(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for VisibleAttachmentsQuery.Comparator(0);
  __chkstk_darwin(v3);
  uint64_t v6 = (void *)((char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7) {
    return _swiftEmptyArrayStorage;
  }
  v23[0] = a1;
  v23[1] = v1;
  uint64_t v8 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = *(void *)(v4 + 72);
  swift_bridgeObjectRetain();
  id v10 = _swiftEmptyArrayStorage;
  v23[3] = v3;
  do
  {
    sub_10029D2C0(v8, (uint64_t)v6, type metadata accessor for VisibleAttachmentsQuery.Comparator);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      unint64_t v11 = v6[1];
      uint64_t v12 = HIBYTE(v11) & 0xF;
      if ((v11 & 0x2000000000000000) == 0) {
        uint64_t v12 = *v6 & 0xFFFFFFFFFFFFLL;
      }
      if (v12)
      {
        int v13 = self;
        NSString v14 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v15 = [v13 prefixMatchingQueryStringForSearchString:v14];

        uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v18 = v17;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v10 = sub_1001A847C(0, v10[2] + 1, 1, v10);
        }
        unint64_t v20 = v10[2];
        unint64_t v19 = v10[3];
        if (v20 >= v19 >> 1) {
          id v10 = sub_1001A847C((void *)(v19 > 1), v20 + 1, 1, v10);
        }
        void v10[2] = v20 + 1;
        double v21 = &v10[2 * v20];
        v21[4] = v16;
        v21[5] = v18;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      sub_10029F0E4((uint64_t)v6, type metadata accessor for VisibleAttachmentsQuery.Comparator);
    }
    v8 += v9;
    --v7;
  }
  while (v7);
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_100290638(uint64_t a1)
{
  uint64_t v2 = sub_10002F214(&qword_10069D370);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002F034(a1, (uint64_t)v4, &qword_10069D370);
  uint64_t v5 = type metadata accessor for ManagedEntityContextType();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1
    || (int v7 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v4, v5),
        v7 == enum case for ManagedEntityContextType.modern(_:)))
  {
    swift_retain();
    uint64_t v8 = dispatch thunk of AnyKeyPath._kvcKeyPathString.getter();
    uint64_t v10 = v9;
    int v7 = swift_release();
    if (v10) {
      return v8;
    }
    __break(1u);
  }
  if (v7 == enum case for ManagedEntityContextType.html(_:))
  {
    swift_retain();
    uint64_t v8 = dispatch thunk of AnyKeyPath._kvcKeyPathString.getter();
    uint64_t v12 = v11;
    swift_release();
    if (v12) {
      return v8;
    }
    __break(1u);
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_1002907DC@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for AttachmentEntity();
  uint64_t result = EntityProperty.projectedValue.getter();
  *a1 = result;
  return result;
}

void *sub_100290820@<X0>(void *result@<X0>, BOOL *a2@<X8>)
{
  unint64_t v2 = result[1];
  uint64_t v3 = *result & 0xFFFFFFFFFFFFLL;
  if ((v2 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(v2) & 0xF;
  }
  *a2 = v3 == 0;
  return result;
}

uint64_t sub_100290844()
{
  uint64_t v0 = sub_10002F214((uint64_t *)&unk_1006A63F0);
  sub_100032974(v0, static ICAttachment.hasValidEntityIdentifier);
  sub_10003293C(v0, (uint64_t)static ICAttachment.hasValidEntityIdentifier);
  sub_100031418(0, &qword_10069BDF0);
  return Predicate.init(_:)();
}

uint64_t sub_1002908DC@<X0>(uint64_t *a1@<X8>)
{
  double v24 = a1;
  uint64_t v1 = sub_10002F214(&qword_1006A02B0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v25 = v1;
  uint64_t v26 = v2;
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002F214(&qword_1006A1968);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10002F214(&qword_1006A1970);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10002F214(&qword_1006A1978);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v22 = v13;
  uint64_t v23 = v14;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001DFB0(&qword_1006A1980, &qword_1006A1968);
  static PredicateExpressions.build_Arg<A>(_:)();
  swift_getKeyPath();
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_10002F214(&qword_1006A02D8);
  sub_10001DFB0(&qword_1006A1988, &qword_1006A1970);
  sub_10001DFB0(&qword_1006A02E8, &qword_1006A02D8);
  static PredicateExpressions.build_flatMap<A, B, C, D>(_:_:)();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  char v27 = 0;
  sub_10002F214(&qword_1006A02F0);
  static PredicateExpressions.build_Arg<A>(_:)();
  uint64_t v17 = sub_10002F214(&qword_1006A1990);
  uint64_t v18 = v24;
  void v24[3] = v17;
  v18[4] = sub_10029F89C(&qword_1006A1998, &qword_1006A1990, (void (*)(void))sub_10029F91C);
  sub_10015E0F0(v18);
  sub_10001DFB0(&qword_1006A19B8, &qword_1006A1978);
  sub_10001DFB0(&qword_1006A0358, &qword_1006A02B0);
  sub_100242DF4(&qword_1006A0360);
  uint64_t v19 = v22;
  uint64_t v20 = v25;
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v4, v20);
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v16, v19);
}

uint64_t ICAttachment.hasValidEntityIdentifier.unsafeMutableAddressor()
{
  return sub_10023944C(&qword_10069AE08, (uint64_t *)&unk_1006A63F0, (uint64_t)static ICAttachment.hasValidEntityIdentifier);
}

uint64_t static ICAttachment.hasValidEntityIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_10069AE08 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_1006A63F0);
  uint64_t v3 = sub_10003293C(v2, (uint64_t)static ICAttachment.hasValidEntityIdentifier);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_100290E80()
{
  uint64_t v0 = sub_10002F214((uint64_t *)&unk_1006A1898);
  sub_100032974(v0, qword_1006A1530);
  sub_10003293C(v0, (uint64_t)qword_1006A1530);
  sub_100031418(0, &qword_1006A1568);
  return Predicate.init(_:)();
}

uint64_t sub_100290F18@<X0>(uint64_t *a1@<X8>)
{
  double v24 = a1;
  uint64_t v1 = sub_10002F214(&qword_1006A02B0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v25 = v1;
  uint64_t v26 = v2;
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002F214(&qword_1006A18A8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10002F214(&qword_1006A18B0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10002F214(&qword_1006A18B8);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v22 = v13;
  uint64_t v23 = v14;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001DFB0((unint64_t *)&unk_1006A18C0, &qword_1006A18A8);
  static PredicateExpressions.build_Arg<A>(_:)();
  swift_getKeyPath();
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_10002F214(&qword_1006A02D8);
  sub_10001DFB0(&qword_1006A18D0, &qword_1006A18B0);
  sub_10001DFB0(&qword_1006A02E8, &qword_1006A02D8);
  static PredicateExpressions.build_flatMap<A, B, C, D>(_:_:)();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  char v27 = 0;
  sub_10002F214(&qword_1006A02F0);
  static PredicateExpressions.build_Arg<A>(_:)();
  uint64_t v17 = sub_10002F214(&qword_1006A18D8);
  uint64_t v18 = v24;
  void v24[3] = v17;
  v18[4] = sub_10029F89C(&qword_1006A18E0, &qword_1006A18D8, (void (*)(void))sub_10029F5A4);
  sub_10015E0F0(v18);
  sub_10001DFB0(&qword_1006A1900, &qword_1006A18B8);
  sub_10001DFB0(&qword_1006A0358, &qword_1006A02B0);
  sub_100242DF4(&qword_1006A0360);
  uint64_t v19 = v22;
  uint64_t v20 = v25;
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v4, v20);
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v16, v19);
}

void sub_1002913E0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v6 = *a2;
  if (*(void *)(a1 + 8)) {
    NSString v7 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v7 = 0;
  }
  id v8 = v7;
  [v6 *a5];
}

uint64_t sub_100291450()
{
  uint64_t v0 = sub_10002F214(&qword_1006A0330);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001DFB0(&qword_1006A0368, &qword_1006A0330);
  static PredicateExpressions.build_Arg<A>(_:)();
  swift_getKeyPath();
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_10029158C()
{
  uint64_t v0 = sub_10002F214((uint64_t *)&unk_1006A1898);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = &v18[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_10002F214((uint64_t *)&unk_1006A63F0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  NSString v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  self;
  uint64_t v8 = swift_dynamicCastObjCClass();
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    uint64_t v10 = qword_10069AE08;
    swift_unknownObjectRetain();
    if (v10 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_10003293C(v4, (uint64_t)static ICAttachment.hasValidEntityIdentifier);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v7, v11, v4);
    id v19 = v9;
    uint64_t v20 = &v19;
    swift_unknownObjectRetain();
    char v16 = Predicate.evaluate(_:)();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
LABEL_10:
    swift_unknownObjectRelease();

    return v16 & 1;
  }
  self;
  uint64_t v12 = swift_dynamicCastObjCClass();
  if (v12)
  {
    uint64_t v13 = (void *)v12;
    uint64_t v14 = qword_10069AE10;
    swift_unknownObjectRetain();
    if (v14 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_10003293C(v0, (uint64_t)qword_1006A1530);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v1 + 16))(v3, v15, v0);
    id v19 = v13;
    uint64_t v20 = &v19;
    swift_unknownObjectRetain();
    char v16 = Predicate.evaluate(_:)();
    (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v0);
    goto LABEL_10;
  }
  char v16 = 0;
  return v16 & 1;
}

uint64_t sub_100291A44(uint64_t a1)
{
  swift_getObjectType();
  sub_10002F034(a1, (uint64_t)v7, &qword_10069B4D0);
  if (!v8)
  {
    sub_10002B754((uint64_t)v7, &qword_10069B4D0);
    goto LABEL_11;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_11:
    char v4 = 0;
    return v4 & 1;
  }
  if ((static AttachmentID.== infix(_:_:)() & 1) == 0)
  {

    goto LABEL_11;
  }
  if (*(void *)&v6[OBJC_IVAR____TtC11MobileNotesP33_F583289AB4A4398FFA2D9CF750E5A2EB22AttachmentSearchResult_title] == *(void *)(v1 + OBJC_IVAR____TtC11MobileNotesP33_F583289AB4A4398FFA2D9CF750E5A2EB22AttachmentSearchResult_title)
    && *(void *)&v6[OBJC_IVAR____TtC11MobileNotesP33_F583289AB4A4398FFA2D9CF750E5A2EB22AttachmentSearchResult_title
                    + 8] == *(void *)(v1
                                      + OBJC_IVAR____TtC11MobileNotesP33_F583289AB4A4398FFA2D9CF750E5A2EB22AttachmentSearchResult_title
                                      + 8))
  {

    char v4 = 1;
  }
  else
  {
    char v4 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  return v4 & 1;
}

void *sub_100291C74(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v18 = a4;
  sub_1003E8254((void (*)(char *))sub_1002920C4, 0, a1, (uint64_t)v17);
  sub_10002F214((uint64_t *)&unk_1006A00D0);
  sub_10002F214(&qword_1006A1908);
  sub_10002F214(&qword_10069D160);
  sub_10001DFB0(&qword_1006A1960, (uint64_t *)&unk_1006A00D0);
  sub_10001DFB0(&qword_1006A1910, &qword_1006A1908);
  sub_10001DFB0(&qword_1006A1918, &qword_10069D160);
  uint64_t v5 = (void *)Sequence.sorted<A, B>(using:)();
  swift_bridgeObjectRelease();
  if ((a3 & 1) == 0)
  {
    uint64_t v6 = sub_10041AAA4(a2, (unint64_t)v5);
    uint64_t v8 = v7;
    uint64_t v10 = v9;
    unint64_t v12 = v11;
    swift_bridgeObjectRelease();
    if (v12)
    {
      type metadata accessor for __ContiguousArrayStorageBase();
      swift_unknownObjectRetain_n();
      uint64_t v13 = (void *)swift_dynamicCastClass();
      if (!v13)
      {
        swift_unknownObjectRelease();
        uint64_t v13 = _swiftEmptyArrayStorage;
      }
      uint64_t v14 = v13[2];
      swift_release();
      if (__OFSUB__(v12 >> 1, v10))
      {
        __break(1u);
      }
      else if (v14 == (v12 >> 1) - v10)
      {
        uint64_t v5 = (void *)swift_dynamicCastClass();
        if (!v5)
        {
          swift_unknownObjectRelease();
          uint64_t v5 = _swiftEmptyArrayStorage;
        }
        goto LABEL_10;
      }
      swift_unknownObjectRelease();
    }
    uint64_t v5 = sub_1001A9C44(v6, v8, v10, v12);
LABEL_10:
    swift_unknownObjectRelease();
  }
  return v5;
}

void *sub_100291E9C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unint64_t v11 = (char *)sub_10002F214(&qword_10069D160);
  sub_10022F274((void (*)(char *, char *))sub_1002920C4, 0, a5, v11, (uint64_t)&type metadata for Never, a7, (uint64_t)&protocol witness table for Never, v12);
  sub_10002F214(&qword_1006A1908);
  sub_10001DFB0(&qword_1006A1910, &qword_1006A1908);
  sub_10001DFB0(&qword_1006A1918, &qword_10069D160);
  uint64_t v13 = (void *)Sequence.sorted<A, B>(using:)();
  swift_bridgeObjectRelease();
  if (a3) {
    return v13;
  }
  uint64_t v14 = sub_10041AAA4(a2, (unint64_t)v13);
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  unint64_t v20 = v19;
  swift_bridgeObjectRelease();
  if ((v20 & 1) == 0)
  {
LABEL_3:
    uint64_t v13 = sub_1001A9C44(v14, v16, v18, v20);
LABEL_10:
    swift_unknownObjectRelease();
    return v13;
  }
  type metadata accessor for __ContiguousArrayStorageBase();
  swift_unknownObjectRetain_n();
  double v21 = (void *)swift_dynamicCastClass();
  if (!v21)
  {
    swift_unknownObjectRelease();
    double v21 = _swiftEmptyArrayStorage;
  }
  uint64_t v22 = v21[2];
  swift_release();
  if (__OFSUB__(v20 >> 1, v18))
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v22 != (v20 >> 1) - v18)
  {
LABEL_13:
    swift_unknownObjectRelease();
    goto LABEL_3;
  }
  uint64_t v13 = (void *)swift_dynamicCastClass();
  swift_unknownObjectRelease();
  if (!v13)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_10;
  }
  return v13;
}

uint64_t sub_1002920C4()
{
  uint64_t v0 = type metadata accessor for String.StandardComparator();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  char v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v8 - v5;
  swift_getKeyPath();
  static String.StandardComparator.localizedStandard.getter();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v6, v0);
  SortDescriptor.init<A>(_:comparator:order:)();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v6, v0);
}

uint64_t VisibleAttachmentsQuery.entities(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 24) = a1;
  *(void *)(v3 + 32) = a3;
  return _swift_task_switch(sub_100292230, 0, 0);
}

uint64_t sub_100292230()
{
  AppDependency.wrappedValue.getter();
  uint64_t v1 = v0[2];
  v0[5] = v1;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t, char))((char *)&dword_10069C560 + dword_10069C560);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[6] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100163BE4;
  uint64_t v3 = v0[3];
  return v5(v3, v1, 1);
}

uint64_t VisibleAttachmentsQuery.suggestedEntities()(uint64_t a1, uint64_t a2, char a3)
{
  *(unsigned char *)(v3 + 2136) = a3;
  *(void *)(v3 + 1904) = a2;
  *(void *)(v3 + 1896) = a1;
  uint64_t v4 = type metadata accessor for Logger();
  *(void *)(v3 + 1912) = v4;
  *(void *)(v3 + 1920) = *(void *)(v4 - 8);
  *(void *)(v3 + 1928) = swift_task_alloc();
  *(void *)(v3 + 1936) = swift_task_alloc();
  *(void *)(v3 + 1944) = swift_task_alloc();
  *(void *)(v3 + 1952) = swift_task_alloc();
  uint64_t v5 = sub_10002F214((uint64_t *)&unk_1006A63F0);
  *(void *)(v3 + 1960) = v5;
  *(void *)(v3 + 1968) = *(void *)(v5 - 8);
  *(void *)(v3 + 1976) = swift_task_alloc();
  uint64_t v6 = type metadata accessor for ManagedEntityContextType();
  *(void *)(v3 + 1984) = v6;
  *(void *)(v3 + 1992) = *(void *)(v6 - 8);
  *(void *)(v3 + 2000) = swift_task_alloc();
  return _swift_task_switch(sub_1002924A0, 0, 0);
}

uint64_t sub_1002924A0()
{
  uint64_t v1 = *(void *)(v0 + 2000);
  uint64_t v2 = *(void *)(v0 + 1992);
  uint64_t v3 = *(void *)(v0 + 1984);
  AppDependency.wrappedValue.getter();
  uint64_t v4 = *(void **)(v0 + 1512);
  id v5 = [v4 modernManagedObjectContext];
  *(void *)(v0 + 2008) = v5;

  AppDependency.wrappedValue.getter();
  uint64_t v6 = *(void **)(v0 + 1752);
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, enum case for ManagedEntityContextType.html(_:), v3);
  uint64_t v7 = (void *)ICUnifiedNoteContext.managedObjectContext(for:)();
  *(void *)(v0 + 2016) = v7;
  (*(void (**)(void, void))(*(void *)(v0 + 1992) + 8))(*(void *)(v0 + 2000), *(void *)(v0 + 1984));

  sub_100031418(0, &qword_10069BDF0);
  id v36 = (id)static NSObject<>.ic_fetchRequest()();
  *(void *)(v0 + 2024) = v36;
  sub_10002F214(&qword_10069BA00);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_100524CE0;
  *(void *)(v8 + 32) = [(id)swift_getObjCClassFromMetadata() predicateForVisibleAttachmentsInContext:v5];
  sub_100031418(0, &qword_1006A1560);
  if (qword_10069AE08 != -1) {
    swift_once();
  }
  uint64_t v9 = *(void *)(v0 + 1976);
  uint64_t v10 = *(void *)(v0 + 1968);
  uint64_t v11 = *(void *)(v0 + 1960);
  uint64_t v12 = sub_10003293C(v11, (uint64_t)static ICAttachment.hasValidEntityIdentifier);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v9, v12, v11);
  uint64_t v13 = NSPredicate.init<A>(_:)();
  if (v13)
  {
    char v17 = *(unsigned char *)(v0 + 2136);
    *(void *)(v8 + 40) = v13;
    specialized Array._endMutation()();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v19 = [self andPredicateWithSubpredicates:isa];

    [v36 setPredicate:v19];
    sub_100031418(0, &qword_1006A1568);
    unint64_t v20 = (void *)static NSObject<>.ic_fetchRequest()();
    *(void *)(v0 + 2032) = v20;
    if ((v17 & 1) == 0)
    {
      id v21 = [self predicateWithValue:0];
      [v20 setPredicate:v21];
    }
    [v36 setFetchLimit:25];
    [v20 setFetchLimit:25];
    swift_retain();
    swift_retain();
    AppDependency.wrappedValue.getter();
    Logger.init(subsystem:category:)();
    swift_release();
    swift_release();
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v22, v23))
    {
      double v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)double v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "VisibleAttachmentsQuery: suggested entities", v24, 2u);
      swift_slowDealloc();
    }
    uint64_t v25 = *(void *)(v0 + 1952);
    uint64_t v26 = *(void *)(v0 + 1920);
    uint64_t v27 = *(void *)(v0 + 1912);

    uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
    *(void *)(v0 + 2040) = v28;
    *(void *)(v0 + 2048) = (v26 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v28(v25, v27);
    uint64_t v29 = swift_allocObject();
    *(void *)(v0 + 2056) = v29;
    *(void *)(v29 + 16) = v5;
    *(void *)(v29 + 24) = v36;
    id v30 = v5;
    id v31 = v36;
    swift_retain();
    sub_10001DFF4((uint64_t *)&unk_1006A00D0);
    swift_asyncLet_begin();
    uint64_t v32 = swift_allocObject();
    *(void *)(v0 + 2064) = v32;
    *(void *)(v32 + 16) = v7;
    *(void *)(v32 + 24) = v20;
    id v33 = v7;
    id v34 = v20;
    swift_retain();
    swift_asyncLet_begin();
    uint64_t v15 = sub_100292A58;
    uint64_t v13 = v0 + 656;
    uint64_t v14 = v0 + 1704;
    uint64_t v16 = v0 + 1664;
  }
  else
  {
    __break(1u);
  }
  return _swift_asyncLet_get_throwing(v13, v14, v15, v16);
}

uint64_t sub_100292A58()
{
  v1[259] = v0;
  if (v0)
  {
    return _swift_asyncLet_finish(v1 + 2, v1 + 207, sub_1002932E8, v1 + 162);
  }
  else
  {
    v1[260] = v1[213];
    swift_bridgeObjectRetain();
    return _swift_asyncLet_get_throwing(v1 + 2, v1 + 207, sub_100292B24, v1 + 202);
  }
}

uint64_t sub_100292B24()
{
  *(void *)(v1 + 2088) = v0;
  if (v0) {
    uint64_t v2 = sub_10029362C;
  }
  else {
    uint64_t v2 = sub_100292B58;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100292B58()
{
  uint64_t v24 = v0;
  uint64_t v23 = *(void *)(v0 + 2080);
  unint64_t v1 = swift_bridgeObjectRetain();
  sub_10022B820(v1);
  uint64_t v2 = sub_100291C74((uint64_t)&off_10062C3E0, 25, 0, v23);
  swift_bridgeObjectRelease();
  uint64_t v3 = sub_100290198((unint64_t)v2);
  *(void *)(v0 + 2096) = v3;
  swift_bridgeObjectRelease();
  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  swift_bridgeObjectRetain();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 134217984;
    *(void *)(v0 + 1848) = *(void *)(v3 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "VisibleAttachmentsQuery: found %ld suggested attachment(s)", v6, 0xCu);
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  (*(void (**)(void, void))(v0 + 2040))(*(void *)(v0 + 1944), *(void *)(v0 + 1912));
  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  swift_bridgeObjectRetain_n();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.debug.getter();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v0 + 2040);
  uint64_t v11 = *(void *)(v0 + 1936);
  uint64_t v12 = *(void *)(v0 + 1912);
  if (v9)
  {
    uint64_t v21 = *(void *)(v0 + 1936);
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315138;
    type metadata accessor for AttachmentID();
    swift_bridgeObjectRetain();
    uint64_t v14 = Array.description.getter();
    unint64_t v20 = v10;
    unint64_t v16 = v15;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 1800) = sub_10045DA1C(v14, v16, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "VisibleAttachmentsQuery: matching attachment IDs: %s", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v20(v21, v12);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    v10(v11, v12);
  }
  AppDependency.wrappedValue.getter();
  uint64_t v17 = *(void *)(v0 + 1560);
  *(void *)(v0 + 2104) = v17;
  uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, char))((char *)&dword_10069C560 + dword_10069C560);
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v0 + 2112) = v18;
  *uint64_t v18 = v0;
  v18[1] = sub_100292F98;
  return v22(v3, v17, 1);
}

uint64_t sub_100292F98(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 2120) = v1;
  swift_task_dealloc();
  if (v1)
  {

    return _swift_task_switch(sub_1002939F0, 0, 0);
  }
  else
  {

    swift_bridgeObjectRelease();
    *(void *)(v4 + 2128) = a1;
    return _swift_asyncLet_finish(v4 + 16, v4 + 1656, sub_100293128, v4 + 1472);
  }
}

uint64_t sub_100293128()
{
  return _swift_task_switch(sub_100293144, 0, 0);
}

uint64_t sub_100293144()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 656, v0 + 1704, sub_1002931C4, v0 + 1520);
}

uint64_t sub_1002931C4()
{
  return _swift_task_switch(sub_1002931E0, 0, 0);
}

uint64_t sub_1002931E0()
{
  uint64_t v1 = *(void **)(v0 + 2032);
  uint64_t v2 = *(void **)(v0 + 2024);
  uint64_t v3 = *(void **)(v0 + 2016);

  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v5 = *(void *)(v0 + 2128);
  return v4(v5);
}

uint64_t sub_1002932E8()
{
  return _swift_task_switch(sub_100293304, 0, 0);
}

uint64_t sub_100293304()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 656, v0 + 1704, sub_100293384, v0 + 1760);
}

uint64_t sub_100293384()
{
  return _swift_task_switch(sub_1002933A0, 0, 0);
}

uint64_t sub_1002933A0()
{
  swift_release();
  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    uint64_t v5 = _convertErrorToNSError(_:)();
    *(void *)(v0 + 1608) = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "VisibleAttachmentsQuery: error fetching notes: %@", v3, 0xCu);
    sub_10002F214(&qword_10069FD50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
  }
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v0 + 2040);
  uint64_t v7 = *(void **)(v0 + 2032);
  os_log_type_t v8 = *(void **)(v0 + 2024);
  uint64_t v9 = *(void *)(v0 + 1928);
  uint64_t v10 = *(void *)(v0 + 1912);

  v6(v9, v10);
  swift_willThrow();

  swift_release();
  swift_release();
  uint64_t v11 = *(void **)(v0 + 2016);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_10029362C()
{
  swift_bridgeObjectRelease();
  return _swift_asyncLet_finish(v0 + 16, v0 + 1656, sub_1002936AC, v0 + 1808);
}

uint64_t sub_1002936AC()
{
  return _swift_task_switch(sub_1002936C8, 0, 0);
}

uint64_t sub_1002936C8()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 656, v0 + 1704, sub_100293748, v0 + 1712);
}

uint64_t sub_100293748()
{
  return _swift_task_switch(sub_100293764, 0, 0);
}

uint64_t sub_100293764()
{
  swift_release();
  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    uint64_t v5 = _convertErrorToNSError(_:)();
    *(void *)(v0 + 1608) = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "VisibleAttachmentsQuery: error fetching notes: %@", v3, 0xCu);
    sub_10002F214(&qword_10069FD50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
  }
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v0 + 2040);
  uint64_t v7 = *(void **)(v0 + 2032);
  os_log_type_t v8 = *(void **)(v0 + 2024);
  uint64_t v9 = *(void *)(v0 + 1928);
  uint64_t v10 = *(void *)(v0 + 1912);

  v6(v9, v10);
  swift_willThrow();

  swift_release();
  swift_release();
  uint64_t v11 = *(void **)(v0 + 2016);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_1002939F0()
{
  swift_bridgeObjectRelease();
  return _swift_asyncLet_finish(v0 + 16, v0 + 1656, sub_100293A70, v0 + 1856);
}

uint64_t sub_100293A70()
{
  return _swift_task_switch(sub_100293A8C, 0, 0);
}

uint64_t sub_100293A8C()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 656, v0 + 1704, sub_100293B0C, v0 + 1568);
}

uint64_t sub_100293B0C()
{
  return _swift_task_switch(sub_100293B28, 0, 0);
}

uint64_t sub_100293B28()
{
  swift_release();
  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    uint64_t v5 = _convertErrorToNSError(_:)();
    *(void *)(v0 + 1608) = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "VisibleAttachmentsQuery: error fetching notes: %@", v3, 0xCu);
    sub_10002F214(&qword_10069FD50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
  }
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v0 + 2040);
  uint64_t v7 = *(void **)(v0 + 2032);
  os_log_type_t v8 = *(void **)(v0 + 2024);
  uint64_t v9 = *(void *)(v0 + 1928);
  uint64_t v10 = *(void *)(v0 + 1912);

  v6(v9, v10);
  swift_willThrow();

  swift_release();
  swift_release();
  uint64_t v11 = *(void **)(v0 + 2016);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_100293DB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return _swift_task_switch(sub_100293DD8, 0, 0);
}

uint64_t sub_100293DD8()
{
  os_log_type_t v2 = (void *)v0[3];
  uint64_t v1 = (void *)v0[4];
  uint64_t v3 = swift_allocObject();
  v0[5] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  id v4 = v2;
  id v5 = v1;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[6] = v6;
  uint64_t v7 = sub_10002F214((uint64_t *)&unk_1006A00D0);
  *uint64_t v6 = v0;
  v6[1] = sub_100239B50;
  uint64_t v8 = v0[2];
  return NSManagedObjectContext.perform<A>(_:)(v8, sub_10029F830, v3, v7);
}

uint64_t sub_100293ED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return _swift_task_switch(sub_100293EF4, 0, 0);
}

uint64_t sub_100293EF4()
{
  os_log_type_t v2 = (void *)v0[3];
  uint64_t v1 = (void *)v0[4];
  uint64_t v3 = swift_allocObject();
  v0[5] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  id v4 = v2;
  id v5 = v1;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[6] = v6;
  uint64_t v7 = sub_10002F214((uint64_t *)&unk_1006A00D0);
  *uint64_t v6 = v0;
  v6[1] = sub_1002397FC;
  uint64_t v8 = v0[2];
  return NSManagedObjectContext.perform<A>(_:)(v8, sub_10029F804, v3, v7);
}

unint64_t sub_100293FEC@<X0>(unint64_t *a1@<X2>, void *a2@<X8>)
{
  uint64_t v5 = type metadata accessor for AttachmentID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100031418(0, a1);
  unint64_t result = NSManagedObjectContext.fetch<A>(_:)();
  if (!v2)
  {
    unint64_t v11 = result;
    id v36 = v8;
    uint64_t v37 = v9;
    uint64_t v32 = 0;
    unint64_t v39 = (unint64_t)_swiftEmptyArrayStorage;
    if (result >> 62)
    {
      swift_bridgeObjectRetain();
      unint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v12 = result;
      if (result) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v12 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
      unint64_t result = swift_bridgeObjectRetain();
      if (v12)
      {
LABEL_4:
        if (v12 < 1)
        {
          __break(1u);
          return result;
        }
        unint64_t v34 = v11;
        uint64_t v35 = v5;
        id v31 = a2;
        uint64_t v13 = 0;
        unint64_t v14 = v11 & 0xC000000000000001;
        id v33 = (void (**)(uint64_t, char *, uint64_t))(v6 + 32);
        unint64_t v15 = &selRef_ic_whitespaceAndNewlineCoalescedString;
        do
        {
          if (v14) {
            id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v16 = *(id *)(v11 + 8 * v13 + 32);
          }
          uint64_t v17 = v16;
          if ([v16 v15[433]])
          {
          }
          else
          {
            uint64_t v18 = (objc_class *)type metadata accessor for AttachmentSearchResult(0);
            id v19 = objc_allocWithZone(v18);
            unint64_t v20 = v36;
            ICAttachmentObject<>.entityIdentifier.getter();
            (*v33)((uint64_t)&v19[OBJC_IVAR____TtC11MobileNotesP33_F583289AB4A4398FFA2D9CF750E5A2EB22AttachmentSearchResult_id], v20, v35);
            id v21 = [v17 title];
            if (v21)
            {
              uint64_t v22 = v21;
              uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              unint64_t v25 = v24;
            }
            else
            {
              uint64_t v23 = 0;
              unint64_t v25 = 0xE000000000000000;
            }
            uint64_t v26 = (uint64_t *)&v19[OBJC_IVAR____TtC11MobileNotesP33_F583289AB4A4398FFA2D9CF750E5A2EB22AttachmentSearchResult_title];
            *uint64_t v26 = v23;
            v26[1] = v25;
            id v27 = [v17 objectID];
            unsigned __int8 v28 = [v27 ic_isAttachmentType];

            v19[OBJC_IVAR____TtC11MobileNotesP33_F583289AB4A4398FFA2D9CF750E5A2EB22AttachmentSearchResult_isModernAttachment] = v28;
            v38.receiver = v19;
            v38.super_class = v18;
            [super init];

            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            unint64_t v11 = v34;
            unint64_t v15 = &selRef_ic_whitespaceAndNewlineCoalescedString;
          }
          ++v13;
        }
        while (v12 != v13);
        swift_bridgeObjectRelease();
        uint64_t v29 = (void *)v39;
        a2 = v31;
        goto LABEL_21;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v29 = _swiftEmptyArrayStorage;
LABEL_21:
    unint64_t result = swift_bridgeObjectRelease();
    *a2 = v29;
  }
  return result;
}

uint64_t sub_100294334@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = _s11MobileNotes23VisibleAttachmentsQueryVACycfC_0();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  return result;
}

uint64_t sub_100294364(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 8);
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v3;
  return _swift_task_switch(sub_100292230, 0, 0);
}

uint64_t sub_100294388(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v3 = *(void *)v1;
  uint64_t v4 = *(void *)(v1 + 8);
  char v5 = *(unsigned char *)(v1 + 16);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_10016F18C;
  return VisibleAttachmentsQuery.suggestedEntities()(v3, v4, v5);
}

uint64_t sub_100294434(uint64_t a1, uint64_t a2)
{
  char v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100158104();
  *char v5 = v2;
  v5[1] = sub_100161724;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t VisibleAttachmentsQuery.entities(matching:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 72) = a5;
  *(void *)(v5 + 32) = a3;
  *(void *)(v5 + 40) = a4;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  return _swift_task_switch(sub_100294510, 0, 0);
}

uint64_t sub_100294510()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  sub_10002F214(&qword_1006A15A8);
  uint64_t v3 = *(void *)(type metadata accessor for VisibleAttachmentsQuery.Comparator(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = swift_allocObject();
  *(void *)(v0 + 48) = v5;
  *(_OWORD *)(v5 + 16) = xmmword_100524D10;
  unint64_t v6 = (uint64_t *)(v5 + v4);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v8 = swift_getKeyPath();
  *unint64_t v6 = KeyPath;
  v6[1] = v8;
  void v6[2] = v2;
  v6[3] = v1;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1002946A4;
  char v10 = *(unsigned char *)(v0 + 72);
  uint64_t v11 = *(void *)(v0 + 32);
  uint64_t v12 = *(void *)(v0 + 40);
  return VisibleAttachmentsQuery.entities(matching:mode:sortedBy:limit:)(v5, 0, (uint64_t)_swiftEmptyArrayStorage, 0, 1, v11, v12, v10);
}

uint64_t sub_1002946A4(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 64) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_1002947FC, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t sub_1002947FC()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t static VisibleAttachmentsQuery.ComparatorKeyPath.title.getter()
{
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  return KeyPath;
}

uint64_t VisibleAttachmentsQuery.entities(matching:mode:sortedBy:limit:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, char a8)
{
  *(unsigned char *)(v8 + 2594) = a8;
  *(void *)(v8 + 2184) = a7;
  *(void *)(v8 + 2176) = a6;
  *(unsigned char *)(v8 + 2593) = a5;
  *(void *)(v8 + 2168) = a4;
  *(void *)(v8 + 2160) = a3;
  *(unsigned char *)(v8 + 2592) = a2;
  *(void *)(v8 + 2152) = a1;
  uint64_t v9 = type metadata accessor for Logger();
  *(void *)(v8 + 2192) = v9;
  *(void *)(v8 + 2200) = *(void *)(v9 - 8);
  *(void *)(v8 + 2208) = swift_task_alloc();
  *(void *)(v8 + 2216) = swift_task_alloc();
  *(void *)(v8 + 2224) = swift_task_alloc();
  *(void *)(v8 + 2232) = swift_task_alloc();
  uint64_t v10 = sub_10002F214((uint64_t *)&unk_1006A63F0);
  *(void *)(v8 + 2240) = v10;
  *(void *)(v8 + 2248) = *(void *)(v10 - 8);
  *(void *)(v8 + 2256) = swift_task_alloc();
  uint64_t v11 = type metadata accessor for AttachmentID();
  *(void *)(v8 + 2264) = v11;
  *(void *)(v8 + 2272) = *(void *)(v11 - 8);
  *(void *)(v8 + 2280) = swift_task_alloc();
  sub_10002F214(&qword_10069D370);
  *(void *)(v8 + 2288) = swift_task_alloc();
  *(void *)(v8 + 2296) = swift_task_alloc();
  uint64_t v12 = type metadata accessor for ManagedEntityContextType();
  *(void *)(v8 + 2304) = v12;
  *(void *)(v8 + 2312) = *(void *)(v12 - 8);
  *(void *)(v8 + 2320) = swift_task_alloc();
  return _swift_task_switch(sub_100294AFC, 0, 0);
}

uint64_t sub_100294AFC()
{
  uint64_t v103 = v0;
  uint64_t v1 = *(void *)(v0 + 2320);
  uint64_t v2 = *(void *)(v0 + 2312);
  uint64_t v3 = *(void *)(v0 + 2304);
  AppDependency.wrappedValue.getter();
  uint64_t v4 = *(void **)(v0 + 1848);
  *(void *)(v0 + 2328) = [v4 modernManagedObjectContext];

  AppDependency.wrappedValue.getter();
  uint64_t v5 = *(void **)(v0 + 2136);
  uint64_t v6 = enum case for ManagedEntityContextType.html(_:);
  uint64_t v7 = *(void (**)(void))(v2 + 104);
  ((void (*)(uint64_t, void, uint64_t))v7)(v1, enum case for ManagedEntityContextType.html(_:), v3);
  *(void *)(v0 + 2336) = ICUnifiedNoteContext.managedObjectContext(for:)();
  uint64_t v8 = *(void *)(v0 + 2312);
  uint64_t v9 = *(void *)(v0 + 2304);
  uint64_t v10 = *(void *)(v0 + 2296);
  uint64_t v11 = *(void *)(v0 + 2288);
  uint64_t v96 = *(void *)(v0 + 2160);
  int v99 = *(unsigned char *)(v0 + 2592) & 1;
  (*(void (**)(void, uint64_t))(v8 + 8))(*(void *)(v0 + 2320), v9);

  unsigned int v95 = enum case for ManagedEntityContextType.modern(_:);
  v7(v10);
  uint64_t v12 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56);
  v12(v10, 0, 1, v9);
  sub_10002F034(v10, v11, &qword_10069D370);
  uint64_t v13 = swift_bridgeObjectRetain();
  *(void *)(v0 + 2344) = sub_10029B388(v13, v99, v11, 0);
  sub_10002B754(v10, &qword_10069D370);
  ((void (*)(uint64_t, uint64_t, uint64_t))v7)(v10, v6, v9);
  v12(v10, 0, 1, v9);
  sub_10002F034(v10, v11, &qword_10069D370);
  uint64_t v14 = swift_bridgeObjectRetain();
  *(void *)(v0 + 2352) = sub_10029B388(v14, v99, v11, 0);
  sub_10002B754(v10, &qword_10069D370);
  ((void (*)(uint64_t, void, uint64_t))v7)(v10, v95, v9);
  v12(v10, 0, 1, v9);
  sub_10002F034(v10, v11, &qword_10069D370);
  uint64_t v15 = swift_bridgeObjectRetain();
  *(void *)(v0 + 2360) = sub_10029B388(v15, v99, v11, 1);
  sub_10002B754(v10, &qword_10069D370);
  ((void (*)(uint64_t, void, uint64_t))v7)(v10, v6, v9);
  v12(v10, 0, 1, v9);
  sub_10002F034(v10, v11, &qword_10069D370);
  uint64_t v16 = swift_bridgeObjectRetain();
  *(void *)(v0 + 2368) = sub_10029B388(v16, v99, v11, 1);
  sub_10002B754(v10, &qword_10069D370);
  if (*(void *)(v96 + 16))
  {
    uint64_t v17 = *(void **)(v0 + 2160);
    uint64_t v18 = sub_10002F214(&qword_1006A15C0);
    uint64_t v19 = sub_10001DFB0(&qword_1006A15C8, &qword_1006A15C0);
    unint64_t v20 = (_UNKNOWN **)swift_allocObject();
    void v20[2] = v17;
    v20[3] = sub_1002038B0;
    v20[4] = 0;
    v20[5] = sub_10029C698;
    v20[6] = 0;
    v20[7] = sub_10029C6A8;
    v20[8] = 0;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v18 = sub_10002F214(&qword_1006A1610);
    uint64_t v19 = sub_10001DFB0(&qword_1006A1618, &qword_1006A1610);
    unint64_t v20 = &off_10062C408;
  }
  uint64_t v21 = *(void *)(v0 + 2152);
  *(void *)(v0 + 1360) = v18;
  *(void *)(v0 + 1368) = v19;
  *(void *)(v0 + 1336) = v20;
  sub_10015E154((void *)(v0 + 1336), v18);
  uint64_t v22 = (char *)sub_100031418(0, &qword_10069FCC0);
  *(void *)(v0 + 2376) = v22;
  *(void *)(v0 + 2384) = sub_10022F274((void (*)(char *, char *))sub_100299888, 0, v18, v22, (uint64_t)&type metadata for Never, v19, (uint64_t)&protocol witness table for Never, v23);
  unint64_t v24 = sub_1002903C8(v21);
  int64_t v25 = v24[2];
  if (v25)
  {
    sub_100169AAC(0, v25, 0);
    uint64_t v26 = (void **)(v24 + 5);
    do
    {
      uint64_t v27 = (uint64_t)*(v26 - 1);
      unsigned __int8 v28 = *v26;
      uint64_t v101 = 40;
      unint64_t v102 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      v29._countAndFlagsBits = v27;
      v29._object = v28;
      String.append(_:)(v29);
      v30._countAndFlagsBits = 41;
      v30._object = (void *)0xE100000000000000;
      String.append(_:)(v30);
      swift_bridgeObjectRelease();
      unint64_t v32 = _swiftEmptyArrayStorage[2];
      unint64_t v31 = _swiftEmptyArrayStorage[3];
      if (v32 >= v31 >> 1) {
        sub_100169AAC(v31 > 1, v32 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v32 + 1;
      id v33 = &_swiftEmptyArrayStorage[2 * v32];
      v33[4] = 40;
      v33[5] = 0xE100000000000000;
      v26 += 2;
      --v25;
    }
    while (v25);
    char v34 = *(unsigned char *)(v0 + 2592);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 2128) = _swiftEmptyArrayStorage;
    uint64_t v101 = 32;
    unint64_t v102 = 0xE100000000000000;
    if (v34) {
      uint64_t v35 = 31868;
    }
    else {
      uint64_t v35 = 9766;
    }
    unint64_t v36 = 0xE200000000000000;
    String.append(_:)(*(Swift::String *)&v35);
    swift_bridgeObjectRelease();
    v37._countAndFlagsBits = 32;
    v37._object = (void *)0xE100000000000000;
    String.append(_:)(v37);
    sub_10002F214(&qword_10069FCC8);
    sub_10001DFB0((unint64_t *)&qword_10069FCD0, &qword_10069FCC8);
    uint64_t v38 = BidirectionalCollection<>.joined(separator:)();
    uint64_t v40 = v39;
    swift_bridgeObjectRelease();
    swift_release();
    *(void *)(v0 + 2392) = v40;
    sub_100031418(0, (unint64_t *)&unk_1006A4F40);
    id v41 = (void *)swift_task_alloc();
    *(void *)(v0 + 2400) = v41;
    void *v41 = v0;
    v41[1] = sub_10029586C;
    id v42 = _swiftEmptyArrayStorage;
    uint64_t v43 = v38;
    uint64_t v44 = v40;
    return static ICSearchQueryOperation.searchResults(queryString:rankingQueries:)(v43, v44, v42);
  }
  double v45 = (char *)(v0 + 2594);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 2488) = 0;
  uint64_t v46 = *(void *)(v0 + 2152);
  unint64_t v47 = *(void *)(v46 + 16);
  if (v47)
  {
    uint64_t v48 = v0;
    unint64_t v49 = sub_1002903C8(v46)[2];
    swift_bridgeObjectRelease();
    BOOL v50 = v49 >= v47;
    uint64_t v0 = v48;
    char v51 = !v50;
  }
  else
  {
    char v51 = 1;
  }
  v45[1] = v51;
  uint64_t v52 = *(void *)(v0 + 2328);
  sub_100031418(0, &qword_10069BDF0);
  uint64_t v53 = (void *)static NSObject<>.ic_fetchRequest()();
  *(void *)(v0 + 2496) = v53;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v53 setSortDescriptors:isa];

  sub_10002F214(&qword_10069BA00);
  uint64_t v55 = swift_allocObject();
  *(_OWORD *)(v55 + 16) = xmmword_100527150;
  *(void *)(v55 + 32) = [(id)swift_getObjCClassFromMetadata() predicateForVisibleAttachmentsInContext:v52];
  sub_100031418(0, &qword_1006A1560);
  if (qword_10069AE08 != -1) {
    swift_once();
  }
  uint64_t v56 = *(void *)(v0 + 2256);
  uint64_t v57 = v0;
  uint64_t v58 = *(void *)(v0 + 2248);
  uint64_t v59 = *(void *)(v57 + 2240);
  uint64_t v60 = sub_10003293C(v59, (uint64_t)static ICAttachment.hasValidEntityIdentifier);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 16))(v56, v60, v59);
  uint64_t v61 = NSPredicate.init<A>(_:)();
  if (!v61)
  {
    uint64_t v43 = swift_bridgeObjectRelease();
    __break(1u);
    return static ICSearchQueryOperation.searchResults(queryString:rankingQueries:)(v43, v44, v42);
  }
  uint64_t v62 = *(void **)(v57 + 2344);
  char v63 = *v45;
  *(void *)(v55 + 40) = v61;
  *(void *)(v55 + 48) = v62;
  uint64_t v101 = v55;
  specialized Array._endMutation()();
  id v64 = v62;
  Class v65 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v66 = [self andPredicateWithSubpredicates:v65];

  [v53 setPredicate:v66];
  sub_100031418(0, &qword_1006A1568);
  uint64_t v67 = (void *)static NSObject<>.ic_fetchRequest()();
  *(void *)(v57 + 2504) = v67;
  if ((v63 & 1) == 0)
  {
    id v68 = [self predicateWithValue:0];
    [v67 setPredicate:v68];
  }
  if ((*(unsigned char *)(v57 + 2593) & 1) == 0)
  {
    uint64_t v69 = *(void *)(v57 + 2168);
    [v53 setFetchLimit:v69];
    [v67 setFetchLimit:v69];
  }
  uint64_t v100 = v67;
  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  swift_bridgeObjectRetain_n();
  uint64_t v70 = Logger.logObject.getter();
  os_log_type_t v71 = static os_log_type_t.info.getter();
  BOOL v72 = os_log_type_enabled(v70, v71);
  uint64_t v73 = *(void *)(v57 + 2232);
  uint64_t v74 = *(void *)(v57 + 2200);
  uint64_t v75 = *(void *)(v57 + 2192);
  if (v72)
  {
    long long v76 = (void *)v57;
    uint64_t v98 = *(void *)(v57 + 2232);
    uint64_t v97 = *(void *)(v57 + 2192);
    id v77 = (uint8_t *)swift_slowAlloc();
    uint64_t v101 = swift_slowAlloc();
    *(_DWORD *)id v77 = 136315138;
    type metadata accessor for VisibleAttachmentsQuery.Comparator(0);
    swift_bridgeObjectRetain();
    uint64_t v78 = Array.description.getter();
    unint64_t v80 = v79;
    swift_bridgeObjectRelease();
    *(void *)(v57 + 2088) = sub_10045DA1C(v78, v80, &v101);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v70, v71, "VisibleAttachmentsQuery: performing with filters %s", v77, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    unint64_t v81 = *(void (**)(uint64_t, uint64_t))(v74 + 8);
    v81(v98, v97);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    long long v76 = (void *)v57;
    unint64_t v81 = *(void (**)(uint64_t, uint64_t))(v74 + 8);
    v81(v73, v75);
  }
  v76[314] = v81;
  id v82 = (void *)v76[294];
  uint64_t v83 = (void *)v76[293];
  id v84 = (void *)v76[292];
  uint64_t v85 = (void *)v76[291];
  unint64_t v86 = (void *)swift_allocObject();
  v76[315] = v86;
  v86[2] = v85;
  v86[3] = v53;
  v86[4] = v83;
  id v87 = v85;
  id v88 = v83;
  id v89 = v53;
  swift_retain();
  sub_10001DFF4((uint64_t *)&unk_1006A00D0);
  swift_asyncLet_begin();
  id v90 = (void *)swift_allocObject();
  v76[316] = v90;
  v90[2] = v84;
  v90[3] = v100;
  v90[4] = v82;
  id v91 = v84;
  id v92 = v100;
  id v93 = v82;
  swift_retain();
  swift_asyncLet_begin();
  return _swift_asyncLet_get_throwing(v76 + 82, v76 + 262, sub_1002974CC, v76 + 244);
}

uint64_t sub_10029586C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 2408) = a1;
  *(void *)(v3 + 2416) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_100297EA4;
  }
  else
  {
    uint64_t v4 = sub_1002959BC;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1002959BC()
{
  uint64_t v59 = v0;
  unint64_t v1 = *(void *)(v0 + 2408);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_3;
    }
  }
  else if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    *(void *)(v0 + 2424) = type metadata accessor for MainActor();
    *(void *)(v0 + 2432) = static MainActor.shared.getter();
    uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_100296094, v3, v2);
  }
  swift_bridgeObjectRelease();
  *(void *)(v0 + 2488) = 0;
  uint64_t v5 = *(void *)(v0 + 2152);
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    unint64_t v7 = sub_1002903C8(v5)[2];
    swift_bridgeObjectRelease();
    BOOL v8 = v7 < v6;
  }
  else
  {
    BOOL v8 = 1;
  }
  *(unsigned char *)(v0 + 2595) = v8;
  uint64_t v9 = *(void *)(v0 + 2328);
  sub_100031418(0, &qword_10069BDF0);
  uint64_t v10 = (void *)static NSObject<>.ic_fetchRequest()();
  *(void *)(v0 + 2496) = v10;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v10 setSortDescriptors:isa];

  sub_10002F214(&qword_10069BA00);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_100527150;
  *(void *)(v12 + 32) = [(id)swift_getObjCClassFromMetadata() predicateForVisibleAttachmentsInContext:v9];
  sub_100031418(0, &qword_1006A1560);
  if (qword_10069AE08 != -1) {
    swift_once();
  }
  uint64_t v13 = *(void *)(v0 + 2256);
  uint64_t v14 = *(void *)(v0 + 2248);
  uint64_t v15 = *(void *)(v0 + 2240);
  uint64_t v16 = sub_10003293C(v15, (uint64_t)static ICAttachment.hasValidEntityIdentifier);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v13, v16, v15);
  uint64_t v17 = NSPredicate.init<A>(_:)();
  if (v17)
  {
    uint64_t v18 = *(void **)(v0 + 2344);
    char v19 = *(unsigned char *)(v0 + 2594);
    *(void *)(v12 + 40) = v17;
    *(void *)(v12 + 48) = v18;
    uint64_t v58 = v12;
    specialized Array._endMutation()();
    id v20 = v18;
    Class v21 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v22 = [self andPredicateWithSubpredicates:v21];

    [v10 setPredicate:v22];
    sub_100031418(0, &qword_1006A1568);
    uint64_t v23 = (void *)static NSObject<>.ic_fetchRequest()();
    *(void *)(v0 + 2504) = v23;
    if ((v19 & 1) == 0)
    {
      id v24 = [self predicateWithValue:0];
      [v23 setPredicate:v24];
    }
    if ((*(unsigned char *)(v0 + 2593) & 1) == 0)
    {
      uint64_t v25 = *(void *)(v0 + 2168);
      [v10 setFetchLimit:v25];
      [v23 setFetchLimit:v25];
    }
    uint64_t v56 = v23;
    uint64_t v57 = v10;
    swift_retain();
    swift_retain();
    AppDependency.wrappedValue.getter();
    Logger.init(subsystem:category:)();
    swift_release();
    swift_release();
    swift_bridgeObjectRetain_n();
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.info.getter();
    BOOL v28 = os_log_type_enabled(v26, v27);
    uint64_t v29 = *(void *)(v0 + 2232);
    uint64_t v30 = *(void *)(v0 + 2200);
    uint64_t v31 = *(void *)(v0 + 2192);
    if (v28)
    {
      uint64_t v55 = *(void *)(v0 + 2232);
      unint64_t v32 = (uint8_t *)swift_slowAlloc();
      uint64_t v58 = swift_slowAlloc();
      *(_DWORD *)unint64_t v32 = 136315138;
      type metadata accessor for VisibleAttachmentsQuery.Comparator(0);
      uint64_t v54 = v31;
      swift_bridgeObjectRetain();
      uint64_t v33 = Array.description.getter();
      unint64_t v35 = v34;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 2088) = sub_10045DA1C(v33, v35, &v58);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "VisibleAttachmentsQuery: performing with filters %s", v32, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      unint64_t v36 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
      v36(v55, v54);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      unint64_t v36 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
      v36(v29, v31);
    }
    *(void *)(v0 + 2512) = v36;
    Swift::String v37 = *(void **)(v0 + 2352);
    uint64_t v38 = *(void **)(v0 + 2344);
    uint64_t v39 = *(void **)(v0 + 2336);
    uint64_t v40 = *(void **)(v0 + 2328);
    id v41 = (void *)swift_allocObject();
    *(void *)(v0 + 2520) = v41;
    v41[2] = v40;
    v41[3] = v57;
    v41[4] = v38;
    id v42 = v40;
    id v43 = v38;
    id v44 = v57;
    swift_retain();
    sub_10001DFF4((uint64_t *)&unk_1006A00D0);
    swift_asyncLet_begin();
    double v45 = (void *)swift_allocObject();
    *(void *)(v0 + 2528) = v45;
    v45[2] = v39;
    v45[3] = v56;
    v45[4] = v37;
    id v46 = v39;
    id v47 = v56;
    id v48 = v37;
    swift_retain();
    swift_asyncLet_begin();
    unint64_t v49 = sub_1002974CC;
    uint64_t v50 = v0 + 656;
    uint64_t v51 = v0 + 2096;
    uint64_t v52 = v0 + 1952;
  }
  else
  {
    uint64_t v50 = swift_bridgeObjectRelease();
    __break(1u);
  }
  return _swift_asyncLet_get_throwing(v50, v51, v49, v52);
}

uint64_t sub_100296094()
{
  unint64_t v1 = (void *)v0[292];
  uint64_t v2 = (void *)v0[291];
  swift_release();
  id v3 = [self sharedIndexer];
  sub_100031418(0, (unint64_t *)&unk_10069FCE0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  sub_10002F214(&qword_10069BA00);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100524CE0;
  *(void *)(v5 + 32) = v2;
  *(void *)(v5 + 40) = v1;
  specialized Array._endMutation()();
  sub_100031418(0, (unint64_t *)&unk_10069FCF0);
  id v6 = v2;
  id v7 = v1;
  Class v8 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v9 = [v3 objectsForSearchableItems:isa inContexts:v8];

  sub_10002F214((uint64_t *)&unk_10069FD00);
  unint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v11 = v12;
    if (!v12) {
      goto LABEL_24;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v12 = swift_bridgeObjectRetain();
    if (!v11) {
      goto LABEL_24;
    }
  }
  if (v11 < 1)
  {
    __break(1u);
    return _swift_task_switch(v12, v13, v14);
  }
  for (uint64_t i = 0; i != v11; ++i)
  {
    if ((v10 & 0xC000000000000001) != 0) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      swift_unknownObjectRetain();
    }
    v0[263] = &OBJC_PROTOCOL___ICAttachmentObject;
    uint64_t v16 = swift_dynamicCastObjCProtocolConditional();
    if (!v16) {
      goto LABEL_5;
    }
    uint64_t v17 = (void *)v16;
    swift_getObjectType();
    sub_100031418(0, (unint64_t *)&qword_1006A2780);
    if (!swift_dynamicCastMetatype()) {
      uint64_t v17 = 0;
    }
    if (v17)
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      if ((sub_10029158C() & 1) == 0
        || (v0[268] = &OBJC_PROTOCOL___ICSearchIndexable,
            (uint64_t v18 = (void *)swift_dynamicCastObjCProtocolConditional()) != 0)
        && ([v18 isHiddenFromSearch] & 1) != 0
        || ([v17 isDeletedOrInTrash] & 1) != 0)
      {
        swift_unknownObjectRelease_n();
      }
      else
      {
        id v19 = objc_allocWithZone((Class)type metadata accessor for AttachmentSearchResult(0));
        sub_10029D050(v17, v19);
        swift_unknownObjectRelease_n();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
    }
    else
    {
LABEL_5:
      swift_unknownObjectRelease();
    }
  }
LABEL_24:
  swift_bridgeObjectRelease();
  v0[305] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = (uint64_t)sub_100296470;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  return _swift_task_switch(v12, v13, v14);
}

uint64_t sub_100296470()
{
  uint64_t v57 = v0;
  if (static EntityQueryComparatorMode.== infix(_:_:)())
  {
    swift_bridgeObjectRelease();
    *(void *)(v0 + 2448) = static MainActor.shared.getter();
    uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_100296B14, v2, v1);
  }
  else
  {
    *(void *)(v0 + 2488) = *(void *)(v0 + 2440);
    uint64_t v3 = *(void *)(v0 + 2152);
    unint64_t v4 = *(void *)(v3 + 16);
    if (v4)
    {
      unint64_t v5 = sub_1002903C8(v3)[2];
      swift_bridgeObjectRelease();
      BOOL v6 = v5 < v4;
    }
    else
    {
      BOOL v6 = 1;
    }
    *(unsigned char *)(v0 + 2595) = v6;
    uint64_t v7 = *(void *)(v0 + 2328);
    sub_100031418(0, &qword_10069BDF0);
    Class v8 = (void *)static NSObject<>.ic_fetchRequest()();
    *(void *)(v0 + 2496) = v8;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v8 setSortDescriptors:isa];

    sub_10002F214(&qword_10069BA00);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_100527150;
    *(void *)(v10 + 32) = [(id)swift_getObjCClassFromMetadata() predicateForVisibleAttachmentsInContext:v7];
    sub_100031418(0, &qword_1006A1560);
    if (qword_10069AE08 != -1) {
      swift_once();
    }
    uint64_t v11 = *(void *)(v0 + 2256);
    uint64_t v12 = *(void *)(v0 + 2248);
    uint64_t v13 = *(void *)(v0 + 2240);
    uint64_t v14 = sub_10003293C(v13, (uint64_t)static ICAttachment.hasValidEntityIdentifier);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v11, v14, v13);
    uint64_t v15 = NSPredicate.init<A>(_:)();
    if (v15)
    {
      uint64_t v16 = *(void **)(v0 + 2344);
      char v17 = *(unsigned char *)(v0 + 2594);
      *(void *)(v10 + 40) = v15;
      *(void *)(v10 + 48) = v16;
      uint64_t v56 = v10;
      specialized Array._endMutation()();
      id v18 = v16;
      Class v19 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v20 = [self andPredicateWithSubpredicates:v19];

      [v8 setPredicate:v20];
      sub_100031418(0, &qword_1006A1568);
      uint64_t v21 = (void *)static NSObject<>.ic_fetchRequest()();
      *(void *)(v0 + 2504) = v21;
      if ((v17 & 1) == 0)
      {
        id v22 = [self predicateWithValue:0];
        [v21 setPredicate:v22];
      }
      if ((*(unsigned char *)(v0 + 2593) & 1) == 0)
      {
        uint64_t v23 = *(void *)(v0 + 2168);
        [v8 setFetchLimit:v23];
        [v21 setFetchLimit:v23];
      }
      uint64_t v54 = v21;
      uint64_t v55 = v8;
      swift_retain();
      swift_retain();
      AppDependency.wrappedValue.getter();
      Logger.init(subsystem:category:)();
      swift_release();
      swift_release();
      swift_bridgeObjectRetain_n();
      id v24 = Logger.logObject.getter();
      os_log_type_t v25 = static os_log_type_t.info.getter();
      BOOL v26 = os_log_type_enabled(v24, v25);
      uint64_t v27 = *(void *)(v0 + 2232);
      uint64_t v28 = *(void *)(v0 + 2200);
      uint64_t v29 = *(void *)(v0 + 2192);
      if (v26)
      {
        uint64_t v53 = *(void *)(v0 + 2232);
        uint64_t v30 = (uint8_t *)swift_slowAlloc();
        uint64_t v56 = swift_slowAlloc();
        *(_DWORD *)uint64_t v30 = 136315138;
        type metadata accessor for VisibleAttachmentsQuery.Comparator(0);
        uint64_t v52 = v29;
        swift_bridgeObjectRetain();
        uint64_t v31 = Array.description.getter();
        unint64_t v33 = v32;
        swift_bridgeObjectRelease();
        *(void *)(v0 + 2088) = sub_10045DA1C(v31, v33, &v56);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v24, v25, "VisibleAttachmentsQuery: performing with filters %s", v30, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        unint64_t v34 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
        v34(v53, v52);
      }
      else
      {
        swift_bridgeObjectRelease_n();

        unint64_t v34 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
        v34(v27, v29);
      }
      *(void *)(v0 + 2512) = v34;
      unint64_t v35 = *(void **)(v0 + 2352);
      unint64_t v36 = *(void **)(v0 + 2344);
      Swift::String v37 = *(void **)(v0 + 2336);
      uint64_t v38 = *(void **)(v0 + 2328);
      uint64_t v39 = (void *)swift_allocObject();
      *(void *)(v0 + 2520) = v39;
      v39[2] = v38;
      v39[3] = v55;
      v39[4] = v36;
      id v40 = v38;
      id v41 = v36;
      id v42 = v55;
      swift_retain();
      sub_10001DFF4((uint64_t *)&unk_1006A00D0);
      swift_asyncLet_begin();
      id v43 = (void *)swift_allocObject();
      *(void *)(v0 + 2528) = v43;
      void v43[2] = v37;
      void v43[3] = v54;
      v43[4] = v35;
      id v44 = v37;
      id v45 = v54;
      id v46 = v35;
      swift_retain();
      swift_asyncLet_begin();
      id v47 = sub_1002974CC;
      uint64_t v48 = v0 + 656;
      uint64_t v49 = v0 + 2096;
      uint64_t v50 = v0 + 1952;
    }
    else
    {
      uint64_t v48 = swift_bridgeObjectRelease();
      __break(1u);
    }
    return _swift_asyncLet_get_throwing(v48, v49, v47, v50);
  }
}

uint64_t sub_100296B14()
{
  unint64_t v1 = *(void *)(v0 + 2440);
  swift_release();
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v2 = v3;
    if (v3) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v3 = swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      if (v2 >= 1)
      {
        uint64_t v6 = 0;
        uint64_t v7 = (void *)(v0 + 1448);
        uint64_t v8 = v0 + 1480;
        id v9 = (void *)(v0 + 1544);
        unint64_t v54 = v1 & 0xC000000000000001;
        uint64_t v55 = v0 + 1640;
        uint64_t v52 = *(void *)(v0 + 2440) + 32;
        uint64_t v53 = v2;
        uint64_t v51 = (void *)(v0 + 1544);
        while (1)
        {
          if (v54) {
            id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v10 = *(id *)(v52 + 8 * v6);
          }
          uint64_t v11 = v10;
          uint64_t v12 = OBJC_IVAR____TtC11MobileNotesP33_F583289AB4A4398FFA2D9CF750E5A2EB22AttachmentSearchResult_isModernAttachment;
          if (*((unsigned char *)v10
               + OBJC_IVAR____TtC11MobileNotesP33_F583289AB4A4398FFA2D9CF750E5A2EB22AttachmentSearchResult_isModernAttachment) == 1)
          {
            *(void *)(v0 + 1664) = type metadata accessor for AttachmentSearchResult(0);
            *(void *)(v0 + 1640) = v11;
            sub_10002F034(v55, (uint64_t)v7, &qword_10069B4D0);
            uint64_t v13 = *(void *)(v0 + 1472);
            if (v13)
            {
              uint64_t v14 = v8;
              uint64_t v15 = v7;
              uint64_t v16 = sub_10015E154(v7, *(void *)(v0 + 1472));
              uint64_t v17 = *(void *)(v13 - 8);
              uint64_t v18 = swift_task_alloc();
              (*(void (**)(uint64_t, void *, uint64_t))(v17 + 16))(v18, v16, v13);
              id v19 = v11;
              uint64_t v20 = _bridgeAnythingToObjectiveC<A>(_:)();
              (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v18, v13);
              uint64_t v2 = v53;
              swift_task_dealloc();
              uint64_t v21 = (uint64_t)v15;
              uint64_t v8 = v14;
              id v9 = v51;
              sub_100018FE8(v21);
            }
            else
            {
              id v22 = v11;
              uint64_t v20 = 0;
            }
            unsigned __int8 v23 = [*(id *)(v0 + 2360) evaluateWithObject:v20 v51];
            swift_unknownObjectRelease();
            sub_10002B754(v55, &qword_10069B4D0);
            if (v23) {
              goto LABEL_5;
            }
            uint64_t v7 = (void *)(v0 + 1448);
            if (*((unsigned char *)v11 + v12))
            {

              goto LABEL_7;
            }
          }
          *(void *)(v0 + 1504) = type metadata accessor for AttachmentSearchResult(0);
          *(void *)(v0 + 1480) = v11;
          sub_10002F034(v8, (uint64_t)v9, &qword_10069B4D0);
          uint64_t v24 = *(void *)(v0 + 1568);
          if (v24)
          {
            os_log_type_t v25 = sub_10015E154(v9, *(void *)(v0 + 1568));
            uint64_t v26 = *(void *)(v24 - 8);
            uint64_t v27 = swift_task_alloc();
            (*(void (**)(uint64_t, void *, uint64_t))(v26 + 16))(v27, v25, v24);
            id v28 = v11;
            uint64_t v29 = _bridgeAnythingToObjectiveC<A>(_:)();
            (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v27, v24);
            uint64_t v2 = v53;
            swift_task_dealloc();
            sub_100018FE8((uint64_t)v9);
          }
          else
          {
            id v30 = v11;
            uint64_t v29 = 0;
          }
          unsigned __int8 v31 = [*(id *)(v0 + 2368) evaluateWithObject:v29 v51];
          swift_unknownObjectRelease();
          sub_10002B754(v8, &qword_10069B4D0);
          if ((v31 & 1) == 0)
          {

            goto LABEL_6;
          }
LABEL_5:
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
LABEL_6:
          uint64_t v7 = (void *)(v0 + 1448);
LABEL_7:
          if (v2 == ++v6) {
            goto LABEL_25;
          }
        }
      }
      __break(1u);
      goto LABEL_41;
    }
  }
LABEL_25:
  swift_bridgeObjectRelease();
  uint64_t v32 = *(void *)(v0 + 2168);
  char v33 = *(unsigned char *)(v0 + 2593) & 1;
  uint64_t v34 = *(void *)(v0 + 1360);
  uint64_t v35 = *(void *)(v0 + 1368);
  unint64_t v36 = sub_10015E154((void *)(v0 + 1336), v34);
  *(void *)(v0 + 2112) = _swiftEmptyArrayStorage;
  uint64_t v37 = sub_10002F214((uint64_t *)&unk_1006A00D0);
  uint64_t v38 = sub_10001DFB0(&qword_1006A1600, (uint64_t *)&unk_1006A00D0);
  unint64_t v39 = (unint64_t)sub_100291E9C((uint64_t)v36, v32, v33, v37, v34, v38, v35);
  swift_release();
  if (v39 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v40 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v40) {
      goto LABEL_37;
    }
  }
  else
  {
    uint64_t v40 = *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v40) {
      goto LABEL_37;
    }
  }
  uint64_t v3 = sub_100169D6C(0, v40 & ~(v40 >> 63), 0);
  if (v40 < 0)
  {
LABEL_41:
    __break(1u);
    return _swift_task_switch(v3, v4, v5);
  }
  uint64_t v41 = 0;
  uint64_t v42 = *(void *)(v0 + 2272);
  unint64_t v56 = v39 & 0xC000000000000001;
  id v43 = (void *)v39;
  do
  {
    if (v56) {
      id v44 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v44 = *(id *)(v39 + 8 * v41 + 32);
    }
    id v45 = v44;
    (*(void (**)(void, uint64_t, void))(v42 + 16))(*(void *)(v0 + 2280), (uint64_t)v44 + OBJC_IVAR____TtC11MobileNotesP33_F583289AB4A4398FFA2D9CF750E5A2EB22AttachmentSearchResult_id, *(void *)(v0 + 2264));

    unint64_t v47 = _swiftEmptyArrayStorage[2];
    unint64_t v46 = _swiftEmptyArrayStorage[3];
    if (v47 >= v46 >> 1) {
      sub_100169D6C(v46 > 1, v47 + 1, 1);
    }
    uint64_t v48 = *(void *)(v0 + 2280);
    uint64_t v49 = *(void *)(v0 + 2264);
    ++v41;
    _swiftEmptyArrayStorage[2] = v47 + 1;
    (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))((char *)_swiftEmptyArrayStorage+ ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ *(void *)(v42 + 72) * v47, v48, v49);
    unint64_t v39 = (unint64_t)v43;
  }
  while (v40 != v41);
LABEL_37:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 2456) = _swiftEmptyArrayStorage;
  uint64_t v3 = (uint64_t)sub_100297170;
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_100297170()
{
  AppDependency.wrappedValue.getter();
  uint64_t v1 = v0[265];
  v0[308] = v1;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t, char))((char *)&dword_10069C560 + dword_10069C560);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[309] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100297234;
  uint64_t v3 = v0[307];
  return v5(v3, v1, 1);
}

uint64_t sub_100297234(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v4[209] = v2;
  v4[210] = a1;
  v4[211] = v1;
  v4[310] = v1;
  swift_task_dealloc();

  if (v1)
  {
    uint64_t v5 = sub_100297FC4;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_100297384;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100297384()
{
  uint64_t v1 = *(void **)(v0 + 2368);
  uint64_t v2 = *(void **)(v0 + 2360);
  uint64_t v3 = *(void **)(v0 + 2352);
  uint64_t v4 = *(void **)(v0 + 2344);
  uint64_t v5 = *(void **)(v0 + 2336);

  uint64_t v8 = *(void *)(v0 + 1680);
  sub_100018FE8(v0 + 1336);
  sub_10002E70C(0);
  sub_10002E70C(0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v6(v8);
}

uint64_t sub_1002974CC()
{
  v1[317] = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    return _swift_asyncLet_finish(v1 + 2, v1 + 243, sub_1002980F0, v1 + 250);
  }
  else
  {
    v1[318] = v1[262];
    swift_bridgeObjectRetain();
    return _swift_asyncLet_get_throwing(v1 + 2, v1 + 243, sub_1002975A4, v1 + 220);
  }
}

uint64_t sub_1002975A4()
{
  *(void *)(v1 + 2552) = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return _swift_asyncLet_finish(v1 + 16, v1 + 1944, sub_1002984AC, v1 + 1696);
  }
  else
  {
    return _swift_task_switch(sub_100297674, 0, 0);
  }
}

uint64_t sub_100297674()
{
  uint64_t v28 = v0;
  unint64_t v27 = *(void *)(v0 + 2544);
  char v1 = *(unsigned char *)(v0 + 2595);
  unint64_t v2 = *(void *)(v0 + 2488);
  uint64_t v3 = *(void *)(v0 + 2168);
  uint64_t v4 = *(unsigned char *)(v0 + 2592) & 1;
  char v5 = *(unsigned char *)(v0 + 2593) & 1;
  unint64_t v6 = swift_bridgeObjectRetain();
  sub_10022B820(v6);
  uint64_t v7 = sub_10029A060(v1, v27, v4, v2, (void *)(v0 + 1336), v3, v5);
  *(void *)(v0 + 2560) = v7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  swift_bridgeObjectRetain();
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v8, v9))
  {
    id v10 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v10 = 134217984;
    *(void *)(v0 + 2040) = *(void *)(v7 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "VisibleAttachmentsQuery: found %ld matching attachment(s)", v10, 0xCu);
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  (*(void (**)(void, void))(v0 + 2512))(*(void *)(v0 + 2224), *(void *)(v0 + 2192));
  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  swift_bridgeObjectRetain_n();
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.debug.getter();
  BOOL v13 = os_log_type_enabled(v11, v12);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v0 + 2512);
  if (v13)
  {
    uint64_t v24 = *(void *)(v0 + 2192);
    uint64_t v25 = *(void *)(v0 + 2216);
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    unint64_t v27 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v16 = Array.description.getter();
    unint64_t v18 = v17;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 1992) = sub_10045DA1C(v16, v18, (uint64_t *)&v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "VisibleAttachmentsQuery: matching note IDs: %s", v15, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v14(v25, v24);
  }
  else
  {
    uint64_t v19 = *(void *)(v0 + 2216);
    uint64_t v20 = *(void *)(v0 + 2192);
    swift_bridgeObjectRelease_n();

    v14(v19, v20);
  }
  AppDependency.wrappedValue.getter();
  uint64_t v21 = *(void *)(v0 + 1800);
  *(void *)(v0 + 2568) = v21;
  uint64_t v26 = (uint64_t (*)(uint64_t, uint64_t, char))((char *)&dword_10069C560 + dword_10069C560);
  id v22 = (void *)swift_task_alloc();
  *(void *)(v0 + 2576) = v22;
  void *v22 = v0;
  v22[1] = sub_100297AD8;
  return v26(v7, v21, 1);
}

uint64_t sub_100297AD8(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 1736) = v2;
  *(void *)(v3 + 1744) = a1;
  *(void *)(v3 + 1752) = v1;
  *(void *)(v3 + 2584) = v1;
  swift_task_dealloc();
  if (v1)
  {

    return _swift_task_switch(sub_100298868, 0, 0);
  }
  else
  {

    swift_bridgeObjectRelease();
    return _swift_asyncLet_finish(v3 + 16, v3 + 1944, sub_100297C58, v3 + 1808);
  }
}

uint64_t sub_100297C58()
{
  return _swift_task_switch(sub_100297C74, 0, 0);
}

uint64_t sub_100297C74()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 656, v0 + 2096, sub_100297CF4, v0 + 1856);
}

uint64_t sub_100297CF4()
{
  return _swift_task_switch(sub_100297D10, 0, 0);
}

uint64_t sub_100297D10()
{
  uint64_t v1 = *(void **)(v0 + 2504);
  uint64_t v2 = *(void **)(v0 + 2496);
  uint64_t v3 = *(void **)(v0 + 2368);
  uint64_t v4 = *(void **)(v0 + 2360);
  uint64_t v5 = *(void **)(v0 + 2352);
  unint64_t v6 = *(void **)(v0 + 2344);
  uint64_t v7 = *(void **)(v0 + 2336);

  swift_release();
  uint64_t v10 = *(void *)(v0 + 1744);
  sub_100018FE8(v0 + 1336);
  sub_10002E70C((uint64_t)&unk_1006A15D8);
  sub_10002E70C((uint64_t)&unk_1006A15E8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v8(v10);
}

uint64_t sub_100297EA4()
{
  uint64_t v1 = *(void **)(v0 + 2368);
  uint64_t v2 = *(void **)(v0 + 2360);
  uint64_t v3 = *(void **)(v0 + 2352);
  uint64_t v4 = *(void **)(v0 + 2344);
  uint64_t v5 = *(void **)(v0 + 2336);

  sub_100018FE8(v0 + 1336);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_100297FC4()
{
  uint64_t v1 = *(void **)(v0 + 2368);
  uint64_t v2 = *(void **)(v0 + 2360);
  uint64_t v3 = *(void **)(v0 + 2352);
  uint64_t v4 = *(void **)(v0 + 2344);
  uint64_t v5 = *(void **)(v0 + 2336);

  swift_bridgeObjectRelease();
  sub_100018FE8(v0 + 1336);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1002980F0()
{
  return _swift_task_switch(sub_10029810C, 0, 0);
}

uint64_t sub_10029810C()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 656, v0 + 2096, sub_10029818C, v0 + 1296);
}

uint64_t sub_10029818C()
{
  return _swift_task_switch(sub_1002981A8, 0, 0);
}

uint64_t sub_1002981A8()
{
  swift_release();
  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    uint64_t v5 = _convertErrorToNSError(_:)();
    v0[237] = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "VisibleAttachmentsQuery: error fetching notes: %@", v3, 0xCu);
    sub_10002F214(&qword_10069FD50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
  }
  unint64_t v6 = (void (*)(uint64_t, uint64_t))v0[314];
  unint64_t v17 = (void *)v0[313];
  unint64_t v18 = (void *)v0[312];
  uint64_t v7 = (void *)v0[296];
  uint64_t v8 = (void *)v0[295];
  os_log_type_t v9 = (void *)v0[294];
  uint64_t v16 = (void *)v0[293];
  uint64_t v10 = (void *)v0[292];
  uint64_t v11 = (void *)v0[291];
  uint64_t v12 = v0[276];
  uint64_t v13 = v0[274];

  v6(v12, v13);
  swift_willThrow();

  sub_100018FE8((uint64_t)(v0 + 167));
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_1002984AC()
{
  return _swift_task_switch(sub_1002984C8, 0, 0);
}

uint64_t sub_1002984C8()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 656, v0 + 2096, sub_100298548, v0 + 1904);
}

uint64_t sub_100298548()
{
  return _swift_task_switch(sub_100298564, 0, 0);
}

uint64_t sub_100298564()
{
  swift_release();
  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    uint64_t v5 = _convertErrorToNSError(_:)();
    v0[237] = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "VisibleAttachmentsQuery: error fetching notes: %@", v3, 0xCu);
    sub_10002F214(&qword_10069FD50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
  }
  unint64_t v6 = (void (*)(uint64_t, uint64_t))v0[314];
  unint64_t v17 = (void *)v0[313];
  unint64_t v18 = (void *)v0[312];
  uint64_t v7 = (void *)v0[296];
  uint64_t v8 = (void *)v0[295];
  os_log_type_t v9 = (void *)v0[294];
  uint64_t v16 = (void *)v0[293];
  uint64_t v10 = (void *)v0[292];
  uint64_t v11 = (void *)v0[291];
  uint64_t v12 = v0[276];
  uint64_t v13 = v0[274];

  v6(v12, v13);
  swift_willThrow();

  sub_100018FE8((uint64_t)(v0 + 167));
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_100298868()
{
  swift_bridgeObjectRelease();
  return _swift_asyncLet_finish(v0 + 16, v0 + 1944, sub_1002988E8, v0 + 2048);
}

uint64_t sub_1002988E8()
{
  return _swift_task_switch(sub_100298904, 0, 0);
}

uint64_t sub_100298904()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 656, v0 + 2096, sub_100298984, v0 + 1376);
}

uint64_t sub_100298984()
{
  return _swift_task_switch(sub_1002989A0, 0, 0);
}

uint64_t sub_1002989A0()
{
  swift_release();
  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    uint64_t v5 = _convertErrorToNSError(_:)();
    v0[237] = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "VisibleAttachmentsQuery: error fetching notes: %@", v3, 0xCu);
    sub_10002F214(&qword_10069FD50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
  }
  unint64_t v6 = (void (*)(uint64_t, uint64_t))v0[314];
  unint64_t v17 = (void *)v0[313];
  unint64_t v18 = (void *)v0[312];
  uint64_t v7 = (void *)v0[296];
  uint64_t v8 = (void *)v0[295];
  os_log_type_t v9 = (void *)v0[294];
  uint64_t v16 = (void *)v0[293];
  uint64_t v10 = (void *)v0[292];
  uint64_t v11 = (void *)v0[291];
  uint64_t v12 = v0[276];
  uint64_t v13 = v0[274];

  v6(v12, v13);
  swift_willThrow();

  sub_100018FE8((uint64_t)(v0 + 167));
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_100298CA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 32) = a3;
  *(void *)(v4 + 16) = a1;
  *(_OWORD *)(v4 + 40) = *(_OWORD *)v3;
  *(unsigned char *)(v4 + 80) = *(unsigned char *)(v3 + 16);
  return _swift_task_switch(sub_100298CD8, 0, 0);
}

uint64_t sub_100298CD8()
{
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v1 = *(void *)(v0 + 32);
  sub_10002F214(&qword_1006A15A8);
  uint64_t v3 = *(void *)(type metadata accessor for VisibleAttachmentsQuery.Comparator(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = swift_allocObject();
  *(void *)(v0 + 56) = v5;
  *(_OWORD *)(v5 + 16) = xmmword_100524D10;
  unint64_t v6 = (uint64_t *)(v5 + v4);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v8 = swift_getKeyPath();
  *unint64_t v6 = KeyPath;
  v6[1] = v8;
  void v6[2] = v2;
  v6[3] = v1;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  os_log_type_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v9;
  *os_log_type_t v9 = v0;
  v9[1] = sub_100298E6C;
  char v10 = *(unsigned char *)(v0 + 80);
  uint64_t v11 = *(void *)(v0 + 40);
  uint64_t v12 = *(void *)(v0 + 48);
  return VisibleAttachmentsQuery.entities(matching:mode:sortedBy:limit:)(v5, 0, (uint64_t)_swiftEmptyArrayStorage, 0, 1, v11, v12, v10);
}

uint64_t sub_100298E6C(uint64_t a1)
{
  unint64_t v4 = (void *)*v2;
  v4[9] = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_100298FC4, 0, 0);
  }
  else
  {
    uint64_t v5 = (void *)v4[2];
    swift_bridgeObjectRelease();
    *uint64_t v5 = a1;
    unint64_t v6 = (uint64_t (*)(void))v4[1];
    return v6();
  }
}

uint64_t sub_100298FC4()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100299028()
{
  uint64_t v0 = sub_10002F214(&qword_1006A1620);
  sub_100032974(v0, static VisibleAttachmentsQuery.sortingOptions);
  sub_10003293C(v0, (uint64_t)static VisibleAttachmentsQuery.sortingOptions);
  type metadata accessor for AttachmentEntity();
  sub_10029F7BC((unint64_t *)&qword_10069EF80, (void (*)(uint64_t))type metadata accessor for AttachmentEntity);
  return EntityQuerySortingOptions.init(content:)();
}

uint64_t sub_1002990DC()
{
  uint64_t v0 = sub_10002F214((uint64_t *)&unk_1006A1880);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  unint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  unint64_t v6 = (char *)&v12 - v5;
  swift_getKeyPath();
  sub_10029F7BC((unint64_t *)&qword_10069EF80, (void (*)(uint64_t))type metadata accessor for AttachmentEntity);
  sub_10001DFB0(&qword_1006A0268, (uint64_t *)&unk_10069EE20);
  EntityQuerySortableByProperty.init<A>(_:)();
  type metadata accessor for AttachmentEntity();
  static EntityQuerySortingOptionsBuilder.buildExpression(_:)();
  uint64_t v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v4, v0);
  sub_10002F214(&qword_1006A1890);
  unint64_t v8 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_100524D10;
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 16))(v9 + v8, v6, v0);
  uint64_t v10 = static EntityQuerySortingOptionsBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  v7(v6, v0);
  return v10;
}

uint64_t VisibleAttachmentsQuery.sortingOptions.unsafeMutableAddressor()
{
  return sub_10023944C(&qword_10069AE18, &qword_1006A1620, (uint64_t)static VisibleAttachmentsQuery.sortingOptions);
}

uint64_t static VisibleAttachmentsQuery.sortingOptions.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1002394D0(&qword_10069AE18, &qword_1006A1620, (uint64_t)static VisibleAttachmentsQuery.sortingOptions, a1);
}

uint64_t sub_100299368()
{
  uint64_t v0 = sub_10002F214((uint64_t *)&unk_1006A1628);
  sub_100032974(v0, static VisibleAttachmentsQuery.properties);
  sub_10003293C(v0, (uint64_t)static VisibleAttachmentsQuery.properties);
  type metadata accessor for AttachmentEntity();
  type metadata accessor for VisibleAttachmentsQuery.Comparator(0);
  sub_10029F7BC((unint64_t *)&qword_10069EF80, (void (*)(uint64_t))type metadata accessor for AttachmentEntity);
  return EntityQueryProperties.init(properties:)();
}

uint64_t sub_100299434()
{
  sub_10002F214(&qword_1006A1860);
  swift_getKeyPath();
  EntityQueryProperty.__allocating_init<>(_:comparators:)();
  sub_10029F7BC((unint64_t *)&qword_10069EF80, (void (*)(uint64_t))type metadata accessor for AttachmentEntity);
  uint64_t v0 = static EntityQueryPropertiesBuilder.buildExpression(_:)();
  swift_release();
  sub_10002F214(&qword_10069BA00);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100529F20;
  *(void *)(v1 + 32) = v0;
  specialized Array._endMutation()();
  type metadata accessor for AttachmentEntity();
  type metadata accessor for VisibleAttachmentsQuery.Comparator(0);
  swift_retain();
  uint64_t v2 = static EntityQueryPropertiesBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  swift_release();
  return v2;
}

uint64_t sub_100299578()
{
  uint64_t v0 = sub_10002F214(&qword_1006A1868);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002F214(&qword_1006A1870);
  swift_allocObject();
  ContainsComparator.init<>(mappingTransform:)();
  type metadata accessor for AttachmentEntity();
  sub_10029F7BC((unint64_t *)&qword_10069EF80, (void (*)(uint64_t))type metadata accessor for AttachmentEntity);
  static EntityQueryComparatorsBuilder.buildExpression(_:)();
  swift_release();
  sub_10002F214(&qword_1006A1878);
  unint64_t v4 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100524D10;
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 16))(v5 + v4, v3, v0);
  sub_10002F214((uint64_t *)&unk_10069EE20);
  type metadata accessor for VisibleAttachmentsQuery.Comparator(0);
  sub_1001FDDB8();
  uint64_t v6 = static EntityQueryComparatorsBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v6;
}

uint64_t sub_1002997B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v7 = swift_getKeyPath();
  *a3 = KeyPath;
  a3[1] = v7;
  a3[2] = a1;
  a3[3] = a2;
  type metadata accessor for VisibleAttachmentsQuery.Comparator(0);
  swift_storeEnumTagMultiPayload();

  return swift_bridgeObjectRetain();
}

uint64_t VisibleAttachmentsQuery.properties.unsafeMutableAddressor()
{
  return sub_10023944C(&qword_10069AE20, (uint64_t *)&unk_1006A1628, (uint64_t)static VisibleAttachmentsQuery.properties);
}

uint64_t static VisibleAttachmentsQuery.properties.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1002394D0(&qword_10069AE20, (uint64_t *)&unk_1006A1628, (uint64_t)static VisibleAttachmentsQuery.properties, a1);
}

uint64_t sub_100299888@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for String.StandardComparator();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v11 - v7;
  uint64_t v9 = sub_10002F214((uint64_t *)&unk_1006A1920);
  __chkstk_darwin(v9 - 8);
  sub_100031418(0, &qword_10069FCC0);
  swift_getKeyPath();
  static String.StandardComparator.localizedStandard.getter();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
  SortDescriptor.init<A>(_:comparator:order:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  sub_100031418(0, &qword_10069BDF0);
  uint64_t result = NSSortDescriptor.init<A>(_:)();
  *a1 = result;
  return result;
}

uint64_t sub_100299A68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return _swift_task_switch(sub_100299A8C, 0, 0);
}

uint64_t sub_100299A8C()
{
  uint64_t v2 = (void *)v0[4];
  uint64_t v1 = (void *)v0[5];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)swift_allocObject();
  v0[6] = v4;
  v4[2] = v3;
  v4[3] = v2;
  v4[4] = v1;
  id v5 = v3;
  id v6 = v2;
  id v7 = v1;
  uint64_t v8 = (void *)swift_task_alloc();
  v0[7] = v8;
  uint64_t v9 = sub_10002F214((uint64_t *)&unk_1006A00D0);
  *uint64_t v8 = v0;
  v8[1] = sub_100299B98;
  uint64_t v10 = v0[2];
  return NSManagedObjectContext.perform<A>(_:)(v10, sub_10029F704, v4, v9);
}

uint64_t sub_100299B98()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_100299CD4, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_100299CD4()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100299D38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return _swift_task_switch(sub_100299D5C, 0, 0);
}

uint64_t sub_100299D5C()
{
  uint64_t v2 = (void *)v0[4];
  uint64_t v1 = (void *)v0[5];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)swift_allocObject();
  v0[6] = v4;
  v4[2] = v3;
  v4[3] = v2;
  v4[4] = v1;
  id v5 = v3;
  id v6 = v2;
  id v7 = v1;
  uint64_t v8 = (void *)swift_task_alloc();
  v0[7] = v8;
  uint64_t v9 = sub_10002F214((uint64_t *)&unk_1006A00D0);
  *uint64_t v8 = v0;
  v8[1] = sub_100299E68;
  uint64_t v10 = v0[2];
  return NSManagedObjectContext.perform<A>(_:)(v10, sub_10029F688, v4, v9);
}

uint64_t sub_100299E68()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_10029F9DC, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

void sub_100299FA4(void *a1@<X2>, unint64_t *a2@<X3>, uint64_t a3@<X4>, void *a4@<X8>)
{
  sub_100031418(0, a2);
  uint64_t v9 = NSManagedObjectContext.fetch<A>(_:)();
  if (!v4)
  {
    unint64_t v10 = v9;
    id v11 = a1;
    uint64_t v12 = sub_10029C6C4(v10, v11, a2, a3);
    swift_bridgeObjectRelease();

    *a4 = v12;
  }
}

uint64_t sub_10029A060(char a1, unint64_t a2, uint64_t a3, unint64_t a4, void *a5, uint64_t a6, char a7)
{
  if (a1) {
    swift_bridgeObjectRetain();
  }
  if ((static EntityQueryComparatorMode.== infix(_:_:)() & 1) != 0 && a4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10022B820(a2);
    uint64_t v12 = sub_100269C7C(a4);
    swift_bridgeObjectRelease();
    sub_1001A9C5C(v12);
    swift_bridgeObjectRelease();
  }
  uint64_t v13 = a5[3];
  uint64_t v14 = a5[4];
  uint64_t v15 = sub_10015E154(a5, v13);
  uint64_t v16 = sub_10002F214((uint64_t *)&unk_1006A00D0);
  uint64_t v17 = sub_10001DFB0(&qword_1006A1600, (uint64_t *)&unk_1006A00D0);
  unint64_t v18 = sub_100291E9C((uint64_t)v15, a6, a7 & 1, v16, v13, v17, v14);
  swift_bridgeObjectRelease();
  uint64_t v19 = sub_100290198((unint64_t)v18);
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_10029A1DC@<X0>(uint64_t a1@<X8>)
{
  return sub_10023A08C(&qword_10069AE20, (uint64_t *)&unk_1006A1628, (uint64_t)static VisibleAttachmentsQuery.properties, a1);
}

uint64_t sub_10029A208@<X0>(uint64_t a1@<X8>)
{
  return sub_10023A08C(&qword_10069AE18, &qword_1006A1620, (uint64_t)static VisibleAttachmentsQuery.sortingOptions, a1);
}

uint64_t sub_10029A234(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  *(void *)(v7 + 16) = a1;
  uint64_t v11 = *(void *)v6;
  uint64_t v12 = *(void *)(v6 + 8);
  char v13 = *(unsigned char *)(v6 + 16);
  char v14 = a3 & 1;
  char v15 = a6 & 1;
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v7 + 24) = v16;
  *uint64_t v16 = v7;
  v16[1] = sub_10016997C;
  return VisibleAttachmentsQuery.entities(matching:mode:sortedBy:limit:)(a2, v14, a4, a5, v15, v11, v12, v13);
}

id sub_10029A318(uint64_t a1, char a2)
{
  uint64_t v5 = type metadata accessor for ICQueryType();
  uint64_t v79 = *(void *)(v5 - 8);
  uint64_t v80 = v5;
  __chkstk_darwin(v5);
  uint64_t v78 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FolderEntity();
  uint64_t v81 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v77 = (uint64_t)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10002F214(&qword_10069D370);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  char v14 = (char *)&v76 - v13;
  uint64_t v15 = sub_10002F214(&qword_1006A1938);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v18 = (char *)&v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = (uint64_t)&v18[*(int *)(v16 + 56)];
  uint64_t v20 = *(int *)(v16 + 72);
  sub_10029D2C0(v2, (uint64_t)v18, type metadata accessor for VisibleAttachmentsQuery.Comparator);
  uint64_t v82 = a1;
  uint64_t v83 = v19;
  sub_10002F034(a1, v19, &qword_10069D370);
  v18[v20] = a2;
  type metadata accessor for VisibleAttachmentsQuery.Comparator(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v47 = type metadata accessor for ManagedEntityContextType();
      uint64_t v48 = *(void *)(v47 - 8);
      uint64_t v49 = v83;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v83, 1, v47) == 1) {
        goto LABEL_23;
      }
      sub_10002F034(v49, (uint64_t)v12, &qword_10069D370);
      if ((*(unsigned int (**)(char *, uint64_t))(v48 + 88))(v12, v47) == enum case for ManagedEntityContextType.html(_:))
      {
        id v26 = [self predicateWithValue:0];
        (*(void (**)(char *, uint64_t))(v79 + 8))(v18, v80);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v48 + 8))(v12, v47);
LABEL_23:
        uint64_t v69 = v78;
        uint64_t v68 = v79;
        uint64_t v70 = v80;
        (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v78, v18, v80);
        id v26 = (id)ICQueryType.predicate.getter();
        (*(void (**)(char *, uint64_t))(v68 + 8))(v69, v70);
      }
      goto LABEL_18;
    case 2u:
      uint64_t v27 = *(void *)v18;
      sub_10002F214((uint64_t *)&unk_1006A1940);
      uint64_t v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_100524D10;
      *(void *)(v28 + 56) = sub_10002F214((uint64_t *)&unk_1006A03A0);
      *(void *)(v28 + 32) = v27;
      NSString v29 = String._bridgeToObjectiveC()();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v26 = [self predicateWithFormat:v29 argumentArray:isa];

      goto LABEL_17;
    case 3u:
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 4u:
      uint64_t v31 = *((void *)v18 + 2);
      uint64_t v32 = *((void *)v18 + 3);
      uint64_t v33 = sub_100290638(v82);
      uint64_t v35 = v34;
      sub_10002F214((uint64_t *)&unk_1006A1940);
      uint64_t v36 = swift_allocObject();
      *(_OWORD *)(v36 + 16) = xmmword_100527F30;
      *(void *)(v36 + 32) = v33;
      *(void *)(v36 + 40) = v35;
      *(void *)(v36 + 88) = &type metadata for String;
      *(void *)(v36 + 56) = &type metadata for String;
      *(void *)(v36 + 64) = v31;
      *(void *)(v36 + 72) = v32;
      NSString v37 = String._bridgeToObjectiveC()();
      Class v38 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v26 = [self predicateWithFormat:v37 argumentArray:v38];
      swift_release();
      swift_release();

      goto LABEL_17;
    case 5u:
    case 6u:
      sub_10016EFCC((long long *)v18, (uint64_t)v86);
      sub_100032E84(v18 + 40, v85);
      uint64_t v50 = v87;
      uint64_t v51 = v88;
      sub_10015E154(v86, v87);
      uint64_t v52 = sub_1002036D0(v82, v50, v51);
      uint64_t v54 = v53;
      sub_10002F214((uint64_t *)&unk_1006A1940);
      uint64_t v55 = swift_allocObject();
      *(_OWORD *)(v55 + 16) = xmmword_100527F30;
      *(void *)(v55 + 56) = &type metadata for String;
      *(void *)(v55 + 32) = v52;
      *(void *)(v55 + 40) = v54;
      sub_100032E28((uint64_t)v85, v55 + 64);
      NSString v56 = String._bridgeToObjectiveC()();
      v57.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v58 = [self predicateWithFormat:v56 argumentArray:v57.super.isa];
      goto LABEL_15;
    case 7u:
    case 8u:
    case 9u:
    case 0xAu:
      sub_10016EFCC((long long *)v18, (uint64_t)v86);
      sub_100032E84(v18 + 40, v85);
      uint64_t v59 = v87;
      uint64_t v60 = v88;
      sub_10015E154(v86, v87);
      uint64_t v61 = sub_1002036D0(v82, v59, v60);
      uint64_t v63 = v62;
      sub_10002F214((uint64_t *)&unk_1006A1940);
      uint64_t v64 = swift_allocObject();
      *(_OWORD *)(v64 + 16) = xmmword_100529A00;
      *(void *)(v64 + 32) = v61;
      *(void *)(v64 + 40) = v63;
      *(void *)(v64 + 88) = &type metadata for String;
      *(void *)(v64 + 56) = &type metadata for String;
      *(void *)(v64 + 64) = v61;
      *(void *)(v64 + 72) = v63;
      sub_100032E28((uint64_t)v85, v64 + 96);
      swift_bridgeObjectRetain();
      NSString v56 = String._bridgeToObjectiveC()();
      v57.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v58 = [self predicateWithFormat:v56 argumentArray:v57.super.isa];
LABEL_15:
      id v26 = v58;

      goto LABEL_16;
    case 0xBu:
      sub_10016EFCC((long long *)v18, (uint64_t)v86);
      sub_100032E84(v18 + 40, v85);
      sub_100032E84(v18 + 72, v84);
      uint64_t v39 = v87;
      uint64_t v40 = v88;
      sub_10015E154(v86, v87);
      uint64_t v41 = sub_1002036D0(v82, v39, v40);
      uint64_t v43 = v42;
      sub_10002F214((uint64_t *)&unk_1006A1940);
      uint64_t v44 = swift_allocObject();
      *(_OWORD *)(v44 + 16) = xmmword_10052AC40;
      *(void *)(v44 + 32) = v41;
      *(void *)(v44 + 40) = v43;
      *(void *)(v44 + 88) = &type metadata for String;
      *(void *)(v44 + 56) = &type metadata for String;
      *(void *)(v44 + 64) = v41;
      *(void *)(v44 + 72) = v43;
      sub_100032E28((uint64_t)v85, v44 + 96);
      *(void *)(v44 + 152) = &type metadata for String;
      *(void *)(v44 + 128) = v41;
      *(void *)(v44 + 136) = v43;
      sub_100032E28((uint64_t)v84, v44 + 160);
      swift_bridgeObjectRetain_n();
      NSString v45 = String._bridgeToObjectiveC()();
      Class v46 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v26 = [self predicateWithFormat:v45 argumentArray:v46];

      sub_100018FE8((uint64_t)v84);
LABEL_16:
      sub_100018FE8((uint64_t)v85);
      sub_100018FE8((uint64_t)v86);
      goto LABEL_17;
    default:
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48))(v18, 1, v7) == 1)
      {
LABEL_7:
        id v26 = 0;
        goto LABEL_17;
      }
      if (a2)
      {
        uint64_t v21 = v77;
        sub_10029D25C((uint64_t)v18, v77);
        sub_100031418(0, &qword_1006A1560);
        sub_10002F214((uint64_t *)&unk_1006A1950);
        uint64_t v22 = swift_allocObject();
        *(_OWORD *)(v22 + 16) = xmmword_100524D10;
        uint64_t v23 = FolderID.managedIdentifier.getter();
        uint64_t v25 = v24;
        *(void *)(v22 + 56) = &type metadata for String;
        *(void *)(v22 + 64) = sub_1001BBFD8();
        *(void *)(v22 + 32) = v23;
        *(void *)(v22 + 40) = v25;
        id v26 = (id)NSPredicate.init(format:_:)();
        sub_10029F0E4(v21, (uint64_t (*)(void))type metadata accessor for FolderEntity);
LABEL_17:
        uint64_t v49 = v83;
        goto LABEL_18;
      }
      uint64_t v66 = type metadata accessor for ManagedEntityContextType();
      uint64_t v67 = *(void *)(v66 - 8);
      uint64_t v49 = v83;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48))(v83, 1, v66) != 1)
      {
        sub_10002F034(v49, (uint64_t)v14, &qword_10069D370);
        if ((*(unsigned int (**)(char *, uint64_t))(v67 + 88))(v14, v66) != enum case for ManagedEntityContextType.html(_:)) {
          (*(void (**)(char *, uint64_t))(v67 + 8))(v14, v66);
        }
      }
      uint64_t v71 = v77;
      sub_10029D25C((uint64_t)v18, v77);
      sub_100031418(0, &qword_1006A1560);
      sub_10002F214((uint64_t *)&unk_1006A1950);
      uint64_t v72 = swift_allocObject();
      *(_OWORD *)(v72 + 16) = xmmword_100524D10;
      uint64_t v73 = FolderID.managedIdentifier.getter();
      uint64_t v75 = v74;
      *(void *)(v72 + 56) = &type metadata for String;
      *(void *)(v72 + 64) = sub_1001BBFD8();
      *(void *)(v72 + 32) = v73;
      *(void *)(v72 + 40) = v75;
      id v26 = (id)NSPredicate.init(format:_:)();
      sub_10029F0E4(v71, (uint64_t (*)(void))type metadata accessor for FolderEntity);
LABEL_18:
      sub_10002B754(v49, &qword_10069D370);
      return v26;
  }
}

id sub_10029B388(uint64_t a1, int a2, uint64_t a3, int a4)
{
  int v67 = a4;
  int v62 = a2;
  uint64_t v63 = a1;
  uint64_t v73 = type metadata accessor for ICQueryType();
  uint64_t v68 = *(void *)(v73 - 8);
  uint64_t v5 = __chkstk_darwin(v73);
  uint64_t v61 = (uint64_t *)((char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v72 = (char *)&v60 - v8;
  __chkstk_darwin(v7);
  uint64_t v71 = (char *)&v60 - v9;
  uint64_t v70 = type metadata accessor for VisibleAttachmentsQuery.Comparator(0);
  uint64_t v66 = *(void *)(v70 - 8);
  uint64_t v10 = __chkstk_darwin(v70);
  uint64_t v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  char v14 = (char *)&v60 - v13;
  uint64_t v15 = type metadata accessor for ManagedEntityContextType();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  Class v65 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10002F214((uint64_t *)&unk_1006A0380);
  uint64_t v19 = v18 - 8;
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10002F214(&qword_10069D370);
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  uint64_t v25 = (char *)&v60 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v60 - v26;
  (*(void (**)(char *, void, uint64_t))(v16 + 104))((char *)&v60 - v26, enum case for ManagedEntityContextType.html(_:), v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v27, 0, 1, v15);
  uint64_t v28 = (uint64_t)&v21[*(int *)(v19 + 56)];
  uint64_t v69 = a3;
  sub_10002F034(a3, (uint64_t)v21, &qword_10069D370);
  sub_10002F034((uint64_t)v27, v28, &qword_10069D370);
  NSString v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (v29((uint64_t)v21, 1, v15) == 1)
  {
    sub_10002B754((uint64_t)v27, &qword_10069D370);
    int v30 = v29(v28, 1, v15);
    uint64_t v31 = v63;
    if (v30 == 1)
    {
      uint64_t v32 = sub_10002B754((uint64_t)v21, &qword_10069D370);
      goto LABEL_26;
    }
    goto LABEL_6;
  }
  sub_10002F034((uint64_t)v21, (uint64_t)v25, &qword_10069D370);
  if (v29(v28, 1, v15) == 1)
  {
    sub_10002B754((uint64_t)v27, &qword_10069D370);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v25, v15);
    uint64_t v31 = v63;
LABEL_6:
    sub_10002B754((uint64_t)v21, (uint64_t *)&unk_1006A0380);
    goto LABEL_7;
  }
  uint64_t v52 = v65;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 32))(v65, v28, v15);
  sub_10029F7BC(&qword_1006A1930, (void (*)(uint64_t))&type metadata accessor for ManagedEntityContextType);
  char v53 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v54 = *(void (**)(char *, uint64_t))(v16 + 8);
  v54(v52, v15);
  sub_10002B754((uint64_t)v27, &qword_10069D370);
  v54(v25, v15);
  uint64_t v32 = sub_10002B754((uint64_t)v21, &qword_10069D370);
  uint64_t v31 = v63;
  if ((v53 & 1) == 0)
  {
LABEL_7:
    uint64_t v33 = (char *)_swiftEmptyArrayStorage;
    unint64_t v74 = (unint64_t)_swiftEmptyArrayStorage;
    uint64_t v34 = *(void *)(v31 + 16);
    if (v34)
    {
      uint64_t v35 = v31 + ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80));
      uint64_t v36 = *(void *)(v66 + 72);
      NSString v37 = (void (**)(char *, char *, uint64_t))(v68 + 32);
      uint64_t v64 = v68 + 8;
      Class v65 = (char *)(v68 + 16);
      swift_bridgeObjectRetain();
      uint64_t v66 = v36;
      do
      {
        sub_10029D2C0(v35, (uint64_t)v14, type metadata accessor for VisibleAttachmentsQuery.Comparator);
        sub_10029D2C0((uint64_t)v14, (uint64_t)v12, type metadata accessor for VisibleAttachmentsQuery.Comparator);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v40 = *v37;
          uint64_t v41 = v71;
          uint64_t v42 = v73;
          (*v37)(v71, v12, v73);
          (*(void (**)(char *, char *, uint64_t))v65)(v72, v41, v42);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v33 = (char *)sub_1001A86B0(0, *((void *)v33 + 2) + 1, 1, (unint64_t)v33);
          }
          unint64_t v44 = *((void *)v33 + 2);
          unint64_t v43 = *((void *)v33 + 3);
          if (v44 >= v43 >> 1) {
            uint64_t v33 = (char *)sub_1001A86B0(v43 > 1, v44 + 1, 1, (unint64_t)v33);
          }
          *((void *)v33 + 2) = v44 + 1;
          uint64_t v38 = v68;
          uint64_t v39 = v73;
          v40(&v33[((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v68 + 72) * v44], v72, v73);
          (*(void (**)(char *, uint64_t))(v38 + 8))(v71, v39);
          uint64_t v36 = v66;
        }
        else
        {
          sub_10029F0E4((uint64_t)v12, type metadata accessor for VisibleAttachmentsQuery.Comparator);
          id v45 = sub_10029A318(v69, v67 & 1);
          if (v45)
          {
            id v46 = v45;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
          }
        }
        sub_10029F0E4((uint64_t)v14, type metadata accessor for VisibleAttachmentsQuery.Comparator);
        v35 += v36;
        --v34;
      }
      while (v34);
      swift_bridgeObjectRelease();
    }
    uint64_t v47 = v69;
    if (*((void *)v33 + 2))
    {
      uint64_t v48 = swift_allocObject();
      *(void *)(v48 + 16) = v33;
      uint64_t v49 = v61;
      uint64_t *v61 = v48;
      uint64_t v50 = v68;
      uint64_t v51 = v73;
      (*(void (**)(uint64_t *, void, uint64_t))(v68 + 104))(v49, enum case for ICQueryType.and(_:), v73);
      ICQueryType.predicate.getter();
      (*(void (**)(uint64_t *, uint64_t))(v50 + 8))(v49, v51);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_100031418(0, &qword_1006A1560);
    swift_bridgeObjectRetain();
    v55.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    NSString v56 = self;
    if ((v62 & 1) == 0) {
      goto LABEL_27;
    }
LABEL_30:
    id v57 = [v56 orPredicateWithSubpredicates:v55.super.isa];
    goto LABEL_31;
  }
LABEL_26:
  __chkstk_darwin(v32);
  uint64_t v47 = v69;
  *(&v60 - 2) = v69;
  *((unsigned char *)&v60 - 8) = v67 & 1;
  sub_1003E7ACC((void (*)(uint64_t *__return_ptr, uint64_t))sub_10029F774, (uint64_t)(&v60 - 4), v31);
  sub_100031418(0, &qword_1006A1560);
  v55.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  NSString v56 = self;
  if (v62) {
    goto LABEL_30;
  }
LABEL_27:
  id v57 = [v56 andPredicateWithSubpredicates:v55.super.isa];
LABEL_31:
  id v58 = v57;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_10002B754(v47, &qword_10069D370);
  return v58;
}

uint64_t VisibleAttachmentsQuery.Comparator.description.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ICQueryType();
  uint64_t v54 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FolderEntity();
  uint64_t v53 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v53 - v9;
  uint64_t v11 = sub_10002F214(&qword_10069B260);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  char v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v53 - v15;
  uint64_t v17 = type metadata accessor for VisibleAttachmentsQuery.Comparator(0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10029D2C0(v1, (uint64_t)v19, type metadata accessor for VisibleAttachmentsQuery.Comparator);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v43 = v54;
      (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v4, v19, v2);
      v59[0] = 0;
      v59[1] = 0xE000000000000000;
      v44._countAndFlagsBits = 0x2879726575516369;
      v44._object = (void *)0xE800000000000000;
      String.append(_:)(v44);
      _print_unlocked<A, B>(_:_:)();
      v45._countAndFlagsBits = 41;
      v45._object = (void *)0xE100000000000000;
      String.append(_:)(v45);
      uint64_t v27 = v59[0];
      (*(void (**)(char *, uint64_t))(v43 + 8))(v4, v2);
      return v27;
    case 2u:
      v59[0] = 0;
      v59[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(23);
      swift_bridgeObjectRelease();
      v59[0] = 0xD000000000000014;
      v59[1] = 0x8000000100554BD0;
      sub_100031418(0, (unint64_t *)&qword_10069E810);
      v22._countAndFlagsBits = Array.description.getter();
      String.append(_:)(v22);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 3u:
      uint64_t v23 = *(void *)v19;
      uint64_t v24 = *((void *)v19 + 1);
      strcpy((char *)v59, "textSearch(");
      HIDWORD(v59[1]) = -352321536;
      *(void *)&v58[0] = v23;
      *((void *)&v58[0] + 1) = v24;
      v25._countAndFlagsBits = String.init<A>(reflecting:)();
      String.append(_:)(v25);
LABEL_6:
      swift_bridgeObjectRelease();
      v26._countAndFlagsBits = 41;
      v26._object = (void *)0xE100000000000000;
      String.append(_:)(v26);
      return v59[0];
    case 4u:
      uint64_t v28 = *(void *)v19;
      uint64_t v29 = *((void *)v19 + 1);
      uint64_t v30 = *((void *)v19 + 2);
      uint64_t v31 = *((void *)v19 + 3);
      v59[0] = 0;
      v59[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(16);
      v32._countAndFlagsBits = 0x736E6961746E6F63;
      v32._object = (void *)0xE900000000000028;
      String.append(_:)(v32);
      *(void *)&v58[0] = v28;
      *((void *)&v58[0] + 1) = v29;
      sub_10002F214((uint64_t *)&unk_1006A1640);
      _print_unlocked<A, B>(_:_:)();
      v33._countAndFlagsBits = 8236;
      v33._object = (void *)0xE200000000000000;
      String.append(_:)(v33);
      *(void *)&v58[0] = v30;
      *((void *)&v58[0] + 1) = v31;
      v34._countAndFlagsBits = String.init<A>(reflecting:)();
      String.append(_:)(v34);
      swift_bridgeObjectRelease();
      v35._countAndFlagsBits = 41;
      v35._object = (void *)0xE100000000000000;
      String.append(_:)(v35);
      uint64_t v27 = v59[0];
      swift_release();
      swift_release();
      return v27;
    case 5u:
      sub_10016EFCC((long long *)v19, (uint64_t)v59);
      sub_100032E84(v19 + 40, v58);
      *(void *)&v55[0] = 0;
      *((void *)&v55[0] + 1) = 0xE000000000000000;
      unint64_t v36 = 0x286F546C61757165;
      unint64_t v37 = 0xE800000000000000;
      goto LABEL_16;
    case 6u:
      sub_10016EFCC((long long *)v19, (uint64_t)v59);
      sub_100032E84(v19 + 40, v58);
      *(void *)&v57[0] = 0;
      *((void *)&v57[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(18);
      v55[0] = v57[0];
      unint64_t v37 = 0xEB00000000286F54;
      unint64_t v36 = 0x6C61757145746F6ELL;
      goto LABEL_16;
    case 7u:
      sub_10016EFCC((long long *)v19, (uint64_t)v59);
      sub_100032E84(v19 + 40, v58);
      *(void *)&v57[0] = 0;
      *((void *)&v57[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(16);
      v55[0] = v57[0];
      unint64_t v36 = 0x6E6168547373656CLL;
      unint64_t v37 = 0xE900000000000028;
      goto LABEL_16;
    case 8u:
      sub_10016EFCC((long long *)v19, (uint64_t)v59);
      sub_100032E84(v19 + 40, v58);
      *(void *)&v57[0] = 0;
      *((void *)&v57[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(25);
      v55[0] = v57[0];
      unint64_t v37 = 0x8000000100554BB0;
      unint64_t v36 = 0xD000000000000012;
      goto LABEL_16;
    case 9u:
      sub_10016EFCC((long long *)v19, (uint64_t)v59);
      sub_100032E84(v19 + 40, v58);
      *(void *)&v57[0] = 0;
      *((void *)&v57[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(19);
      v55[0] = v57[0];
      unint64_t v36 = 0x5472657461657267;
      unint64_t v37 = 0xEC000000286E6168;
      goto LABEL_16;
    case 0xAu:
      sub_10016EFCC((long long *)v19, (uint64_t)v59);
      sub_100032E84(v19 + 40, v58);
      *(void *)&v57[0] = 0;
      *((void *)&v57[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(28);
      v55[0] = v57[0];
      unint64_t v36 = 0xD000000000000015;
      unint64_t v37 = 0x8000000100554B90;
LABEL_16:
      String.append(_:)(*(Swift::String *)&v36);
      sub_10002F214(&qword_1006A1638);
      _print_unlocked<A, B>(_:_:)();
      v46._countAndFlagsBits = 8236;
      v46._object = (void *)0xE200000000000000;
      String.append(_:)(v46);
      sub_100032E28((uint64_t)v58, (uint64_t)v57);
      v47._countAndFlagsBits = String.init<A>(reflecting:)();
      String.append(_:)(v47);
      swift_bridgeObjectRelease();
      v48._countAndFlagsBits = 41;
      v48._object = (void *)0xE100000000000000;
      String.append(_:)(v48);
      uint64_t v27 = *(void *)&v55[0];
      goto LABEL_17;
    case 0xBu:
      sub_10016EFCC((long long *)v19, (uint64_t)v59);
      sub_100032E84(v19 + 40, v58);
      sub_100032E84(v19 + 72, v57);
      *(void *)&v55[0] = 0;
      *((void *)&v55[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(18);
      long long v56 = v55[0];
      v38._countAndFlagsBits = 0x286E656577746562;
      v38._object = (void *)0xE800000000000000;
      String.append(_:)(v38);
      sub_10002F214(&qword_1006A1638);
      _print_unlocked<A, B>(_:_:)();
      v39._countAndFlagsBits = 8236;
      v39._object = (void *)0xE200000000000000;
      String.append(_:)(v39);
      sub_100032E28((uint64_t)v58, (uint64_t)v55);
      v40._countAndFlagsBits = String.init<A>(reflecting:)();
      String.append(_:)(v40);
      swift_bridgeObjectRelease();
      v41._countAndFlagsBits = 8236;
      v41._object = (void *)0xE200000000000000;
      String.append(_:)(v41);
      sub_100032E28((uint64_t)v57, (uint64_t)v55);
      v42._countAndFlagsBits = String.init<A>(reflecting:)();
      String.append(_:)(v42);
      swift_bridgeObjectRelease();
      uint64_t v27 = v56;
      sub_100018FE8((uint64_t)v57);
LABEL_17:
      sub_100018FE8((uint64_t)v58);
      sub_100018FE8((uint64_t)v59);
      break;
    default:
      sub_10029D1F4((uint64_t)v19, (uint64_t)v16);
      sub_10002F034((uint64_t)v16, (uint64_t)v14, &qword_10069B260);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v14, 1, v5) == 1)
      {
        uint64_t v20 = (void *)0xE300000000000000;
        uint64_t v21 = 7104878;
      }
      else
      {
        sub_10029D25C((uint64_t)v14, (uint64_t)v10);
        sub_10029D2C0((uint64_t)v10, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FolderEntity);
        uint64_t v21 = String.init<A>(describing:)();
        uint64_t v20 = v50;
        sub_10029F0E4((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FolderEntity);
      }
      strcpy((char *)v59, "containedIn(");
      BYTE5(v59[1]) = 0;
      HIWORD(v59[1]) = -5120;
      v51._countAndFlagsBits = v21;
      v51._object = v20;
      String.append(_:)(v51);
      swift_bridgeObjectRelease();
      v52._countAndFlagsBits = 41;
      v52._object = (void *)0xE100000000000000;
      String.append(_:)(v52);
      uint64_t v27 = v59[0];
      sub_10002B754((uint64_t)v16, &qword_10069B260);
      break;
  }
  return v27;
}

BOOL sub_10029C698(unsigned __int8 *a1)
{
  return *a1 != 2;
}

unsigned __int8 *sub_10029C6A8@<X0>(unsigned __int8 *result@<X0>, unsigned char *a2@<X8>)
{
  int v2 = *result;
  if (v2 == 2) {
    __break(1u);
  }
  else {
    *a2 = v2 & 1;
  }
  return result;
}

void *sub_10029C6C4(unint64_t a1, void *a2, unint64_t *a3, uint64_t a4)
{
  Swift::String v44 = a3;
  uint64_t v45 = a4;
  uint64_t v5 = v4;
  id v43 = a2;
  uint64_t v41 = type metadata accessor for AttachmentID();
  uint64_t v7 = *(char ***)(v41 - 8);
  __chkstk_darwin(v41);
  Swift::String v40 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v52 = (unint64_t)_swiftEmptyArrayStorage;
  if (a1 >> 62) {
    goto LABEL_25;
  }
  uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v9; uint64_t v9 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v47 = a1 & 0xC000000000000001;
    v38[1] = v5;
    Swift::String v39 = (void (**)(char *, char *, uint64_t))(v7 + 4);
    uint64_t v10 = 4;
    uint64_t v7 = &selRef_ic_whitespaceAndNewlineCoalescedString;
    uint64_t v42 = v9;
    while (1)
    {
      id v11 = v47 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(a1 + 8 * v10);
      uint64_t v5 = v11;
      uint64_t v12 = v10 - 3;
      if (__OFADD__(v10 - 4, 1)) {
        break;
      }
      if ([v11 v7[433]])
      {
      }
      else
      {
        uint64_t v13 = sub_100031418(0, v44);
        v51[3] = v13;
        v51[0] = v5;
        sub_10002F034((uint64_t)v51, (uint64_t)v49, &qword_10069B4D0);
        uint64_t v14 = v50;
        if (v50)
        {
          uint64_t v15 = sub_10015E154(v49, v50);
          uint64_t v46 = v13;
          unint64_t v16 = a1;
          uint64_t v17 = *(void *)(v14 - 8);
          __chkstk_darwin(v15);
          uint64_t v19 = (char *)v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *))(v17 + 16))(v19);
          id v20 = v5;
          uint64_t v21 = _bridgeAnythingToObjectiveC<A>(_:)();
          (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v14);
          a1 = v16;
          sub_100018FE8((uint64_t)v49);
        }
        else
        {
          id v22 = v5;
          uint64_t v21 = 0;
        }
        unsigned __int8 v23 = [v43 evaluateWithObject:v21];
        swift_unknownObjectRelease();
        sub_10002B754((uint64_t)v51, &qword_10069B4D0);
        if (v23)
        {
          uint64_t v24 = (objc_class *)type metadata accessor for AttachmentSearchResult(0);
          id v25 = objc_allocWithZone(v24);
          id v26 = v5;
          uint64_t v27 = v25;
          uint64_t v28 = v40;
          ICAttachmentObject<>.entityIdentifier.getter();
          (*v39)(&v27[OBJC_IVAR____TtC11MobileNotesP33_F583289AB4A4398FFA2D9CF750E5A2EB22AttachmentSearchResult_id], v28, v41);
          id v29 = [v26 title];
          if (v29)
          {
            uint64_t v30 = v29;
            uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v33 = v32;
          }
          else
          {
            uint64_t v31 = 0;
            unint64_t v33 = 0xE000000000000000;
          }
          Swift::String v34 = (uint64_t *)&v27[OBJC_IVAR____TtC11MobileNotesP33_F583289AB4A4398FFA2D9CF750E5A2EB22AttachmentSearchResult_title];
          *Swift::String v34 = v31;
          v34[1] = v33;
          id v35 = [v26 objectID];
          unsigned __int8 v36 = [v35 ic_isAttachmentType];

          v27[OBJC_IVAR____TtC11MobileNotesP33_F583289AB4A4398FFA2D9CF750E5A2EB22AttachmentSearchResult_isModernAttachment] = v36;
          v48.receiver = v27;
          v48.super_class = v24;
          [super init];

          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        else
        {
        }
        uint64_t v9 = v42;
        uint64_t v7 = &selRef_ic_whitespaceAndNewlineCoalescedString;
      }
      ++v10;
      if (v12 == v9)
      {
        swift_bridgeObjectRelease();
        return (void *)v52;
      }
    }
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t _s11MobileNotes23VisibleAttachmentsQueryVACycfC_0()
{
  sub_10002F214((uint64_t *)&unk_10069B130);
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t v0 = AppDependency.__allocating_init(key:manager:)();
  sub_10002F214((uint64_t *)&unk_10069CE60);
  AnyHashable.init<A>(_:)();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  return v0;
}

uint64_t sub_10029CC48()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10029CC88(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_10017B61C;
  *(_OWORD *)(v4 + 24) = v5;
  *(void *)(v4 + 16) = a1;
  return _swift_task_switch(sub_100293DD8, 0, 0);
}

uint64_t sub_10029CD3C(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_100161724;
  *(_OWORD *)(v4 + 24) = v5;
  *(void *)(v4 + 16) = a1;
  return _swift_task_switch(sub_100293EF4, 0, 0);
}

uint64_t type metadata accessor for VisibleAttachmentsQuery.Comparator(uint64_t a1)
{
  return sub_10002EFBC(a1, qword_1006A1818);
}

void sub_10029CE10(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_10029CE30(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

uint64_t sub_10029CE50()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10029CEA4(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = swift_task_alloc();
  long long v6 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v5;
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = sub_10017B61C;
  *(void *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v6;
  *(void *)(v5 + 16) = a1;
  return _swift_task_switch(sub_100299A8C, 0, 0);
}

uint64_t sub_10029CF6C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = swift_task_alloc();
  long long v6 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v5;
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = sub_10017B61C;
  *(void *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v6;
  *(void *)(v5 + 16) = a1;
  return _swift_task_switch(sub_100299D5C, 0, 0);
}

uint64_t type metadata accessor for AttachmentSearchResult(uint64_t a1)
{
  return sub_10002EFBC(a1, qword_1006A1718);
}

id sub_10029D050(void *a1, void *a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = type metadata accessor for AttachmentID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a2;
  ICAttachmentObject<>.entityIdentifier.getter();
  (*(void (**)(unsigned char *, char *, uint64_t))(v6 + 32))(&v9[OBJC_IVAR____TtC11MobileNotesP33_F583289AB4A4398FFA2D9CF750E5A2EB22AttachmentSearchResult_id], v8, v5);
  id v10 = [a1 title];
  if (v10)
  {
    id v11 = v10;
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v14 = v13;
  }
  else
  {
    uint64_t v12 = 0;
    unint64_t v14 = 0xE000000000000000;
  }
  uint64_t v15 = (uint64_t *)&v9[OBJC_IVAR____TtC11MobileNotesP33_F583289AB4A4398FFA2D9CF750E5A2EB22AttachmentSearchResult_title];
  uint64_t *v15 = v12;
  v15[1] = v14;
  id v16 = [a1 objectID];
  unsigned __int8 v17 = [v16 ic_isAttachmentType];

  v9[OBJC_IVAR____TtC11MobileNotesP33_F583289AB4A4398FFA2D9CF750E5A2EB22AttachmentSearchResult_isModernAttachment] = v17;
  v19.receiver = v9;
  v19.super_class = ObjectType;
  return [super init];
}

uint64_t sub_10029D1F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002F214(&qword_10069B260);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10029D25C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FolderEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10029D2C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_10029D32C()
{
  unint64_t result = qword_1006A1650;
  if (!qword_1006A1650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A1650);
  }
  return result;
}

unint64_t sub_10029D384()
{
  unint64_t result = qword_1006A1658[0];
  if (!qword_1006A1658[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1006A1658);
  }
  return result;
}

uint64_t sub_10029D3D8()
{
  return sub_10029F7BC((unint64_t *)&qword_10069EF80, (void (*)(uint64_t))type metadata accessor for AttachmentEntity);
}

unint64_t sub_10029D424()
{
  unint64_t result = qword_1006A1678;
  if (!qword_1006A1678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A1678);
  }
  return result;
}

uint64_t sub_10029D478()
{
  return sub_10029F7BC(&qword_10069EEF0, (void (*)(uint64_t))type metadata accessor for AttachmentEntity);
}

unint64_t sub_10029D4C4()
{
  unint64_t result = qword_1006A1688;
  if (!qword_1006A1688)
  {
    sub_10001DFF4(qword_1006A1690);
    sub_10029F7BC(&qword_10069EEF0, (void (*)(uint64_t))type metadata accessor for AttachmentEntity);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A1688);
  }
  return result;
}

uint64_t sub_10029D568()
{
  return type metadata accessor for AttachmentSearchResult(0);
}

uint64_t sub_10029D570()
{
  uint64_t result = type metadata accessor for AttachmentID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10029D618(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for VisibleAttachmentsQuery(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for VisibleAttachmentsQuery(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for VisibleAttachmentsQuery(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VisibleAttachmentsQuery(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisibleAttachmentsQuery()
{
  return &type metadata for VisibleAttachmentsQuery;
}

uint64_t type metadata accessor for VisibleAttachmentsQuery.ComparatorKeyPath()
{
  return sub_100183A74();
}

void *initializeBufferWithCopyOfBuffer for VisibleAttachmentsQuery.Comparator(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v10 = type metadata accessor for ICQueryType();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        break;
      case 2u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        break;
      case 3u:
        uint64_t v11 = a2[1];
        *a1 = *a2;
        a1[1] = v11;
        swift_bridgeObjectRetain();
        break;
      case 4u:
        uint64_t v12 = a2[1];
        *a1 = *a2;
        a1[1] = v12;
        uint64_t v13 = a2[2];
        uint64_t v14 = a2[3];
        a1[2] = v13;
        a1[3] = v14;
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        break;
      case 5u:
      case 6u:
      case 7u:
      case 8u:
      case 9u:
      case 0xAu:
        long long v15 = *(_OWORD *)(a2 + 3);
        *(_OWORD *)(a1 + 3) = v15;
        (**(void (***)(void *, void *))(v15 - 8))(a1, a2);
        uint64_t v16 = a2[8];
        a1[8] = v16;
        (**(void (***)(uint64_t, uint64_t))(v16 - 8))((uint64_t)(a1 + 5), (uint64_t)(a2 + 5));
        break;
      case 0xBu:
        long long v17 = *(_OWORD *)(a2 + 3);
        *(_OWORD *)(a1 + 3) = v17;
        (**(void (***)(void *, void *))(v17 - 8))(a1, a2);
        uint64_t v18 = a2[8];
        a1[8] = v18;
        (**(void (***)(uint64_t, uint64_t))(v18 - 8))((uint64_t)(a1 + 5), (uint64_t)(a2 + 5));
        uint64_t v19 = a2[12];
        a1[12] = v19;
        (**(void (***)(uint64_t, uint64_t))(v19 - 8))((uint64_t)(a1 + 9), (uint64_t)(a2 + 9));
        break;
      default:
        uint64_t v6 = (int *)type metadata accessor for FolderEntity();
        uint64_t v7 = *((void *)v6 - 1);
        if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
        {
          uint64_t v8 = sub_10002F214(&qword_10069B260);
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
        }
        else
        {
          uint64_t v20 = type metadata accessor for FolderID();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
          uint64_t v21 = v6[5];
          id v22 = (char *)a1 + v21;
          unsigned __int8 v23 = (char *)a2 + v21;
          uint64_t v24 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
          uint64_t v25 = v6[6];
          id v26 = (void *)((char *)a1 + v25);
          uint64_t v27 = (void *)((char *)a2 + v25);
          uint64_t v28 = v27[1];
          *id v26 = *v27;
          v26[1] = v28;
          uint64_t v29 = v6[7];
          uint64_t v30 = (void *)((char *)a1 + v29);
          uint64_t v31 = (void *)((char *)a2 + v29);
          uint64_t v32 = v31[1];
          *uint64_t v30 = *v31;
          v30[1] = v32;
          *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
          *((unsigned char *)a1 + v6[9]) = *((unsigned char *)a2 + v6[9]);
          unint64_t v33 = *(void (**)(void *, void, uint64_t, int *))(v7 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v33(a1, 0, 1, v6);
        }
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for VisibleAttachmentsQuery.Comparator(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v4 = type metadata accessor for FolderEntity();
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4);
      if (!result)
      {
        uint64_t v5 = type metadata accessor for FolderID();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
        uint64_t v6 = a1 + *(int *)(v4 + 20);
        uint64_t v7 = type metadata accessor for URL();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
        swift_bridgeObjectRelease();
        goto LABEL_11;
      }
      return result;
    case 1:
      uint64_t v8 = type metadata accessor for ICQueryType();
      uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
      return v9(a1, v8);
    case 2:
    case 3:
      goto LABEL_11;
    case 4:
      swift_release();
      swift_release();
LABEL_11:
      return swift_bridgeObjectRelease();
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      sub_100018FE8(a1);
      uint64_t v3 = a1 + 40;
      goto LABEL_3;
    case 11:
      sub_100018FE8(a1);
      sub_100018FE8(a1 + 40);
      uint64_t v3 = a1 + 72;
LABEL_3:
      uint64_t result = sub_100018FE8(v3);
      break;
    default:
      return result;
  }
  return result;
}

void *initializeWithCopy for VisibleAttachmentsQuery.Comparator(void *a1, void *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v7 = type metadata accessor for ICQueryType();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      break;
    case 2u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      break;
    case 3u:
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
      break;
    case 4u:
      uint64_t v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      uint64_t v10 = a2[2];
      uint64_t v11 = a2[3];
      a1[2] = v10;
      a1[3] = v11;
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      break;
    case 5u:
    case 6u:
    case 7u:
    case 8u:
    case 9u:
    case 0xAu:
      long long v12 = *(_OWORD *)(a2 + 3);
      *(_OWORD *)(a1 + 3) = v12;
      (**(void (***)(void *, void *))(v12 - 8))(a1, a2);
      uint64_t v13 = a2[8];
      a1[8] = v13;
      (**(void (***)(uint64_t, uint64_t))(v13 - 8))((uint64_t)(a1 + 5), (uint64_t)(a2 + 5));
      break;
    case 0xBu:
      long long v14 = *(_OWORD *)(a2 + 3);
      *(_OWORD *)(a1 + 3) = v14;
      (**(void (***)(void *, void *))(v14 - 8))(a1, a2);
      uint64_t v15 = a2[8];
      a1[8] = v15;
      (**(void (***)(uint64_t, uint64_t))(v15 - 8))((uint64_t)(a1 + 5), (uint64_t)(a2 + 5));
      uint64_t v16 = a2[12];
      a1[12] = v16;
      (**(void (***)(uint64_t, uint64_t))(v16 - 8))((uint64_t)(a1 + 9), (uint64_t)(a2 + 9));
      break;
    default:
      uint64_t v4 = (int *)type metadata accessor for FolderEntity();
      uint64_t v5 = *((void *)v4 - 1);
      if ((*(unsigned int (**)(void *, uint64_t, int *))(v5 + 48))(a2, 1, v4))
      {
        uint64_t v6 = sub_10002F214(&qword_10069B260);
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      }
      else
      {
        uint64_t v17 = type metadata accessor for FolderID();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
        uint64_t v18 = v4[5];
        uint64_t v19 = (char *)a1 + v18;
        uint64_t v20 = (char *)a2 + v18;
        uint64_t v21 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
        uint64_t v22 = v4[6];
        unsigned __int8 v23 = (void *)((char *)a1 + v22);
        uint64_t v24 = (void *)((char *)a2 + v22);
        uint64_t v25 = v24[1];
        *unsigned __int8 v23 = *v24;
        v23[1] = v25;
        uint64_t v26 = v4[7];
        uint64_t v27 = (void *)((char *)a1 + v26);
        uint64_t v28 = (void *)((char *)a2 + v26);
        uint64_t v29 = v28[1];
        *uint64_t v27 = *v28;
        v27[1] = v29;
        *((unsigned char *)a1 + v4[8]) = *((unsigned char *)a2 + v4[8]);
        *((unsigned char *)a1 + v4[9]) = *((unsigned char *)a2 + v4[9]);
        uint64_t v30 = *(void (**)(void *, void, uint64_t, int *))(v5 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v30(a1, 0, 1, v4);
      }
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for VisibleAttachmentsQuery.Comparator(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_10029F0E4((uint64_t)a1, type metadata accessor for VisibleAttachmentsQuery.Comparator);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v7 = type metadata accessor for ICQueryType();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        break;
      case 2u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        break;
      case 3u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        break;
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        break;
      case 5u:
      case 6u:
      case 7u:
      case 8u:
      case 9u:
      case 0xAu:
        uint64_t v8 = a2[3];
        a1[3] = v8;
        a1[4] = a2[4];
        (**(void (***)(void *, void *))(v8 - 8))(a1, a2);
        uint64_t v9 = a2[8];
        a1[8] = v9;
        (**(void (***)(uint64_t, uint64_t))(v9 - 8))((uint64_t)(a1 + 5), (uint64_t)(a2 + 5));
        break;
      case 0xBu:
        uint64_t v10 = a2[3];
        a1[3] = v10;
        a1[4] = a2[4];
        (**(void (***)(void *, void *))(v10 - 8))(a1, a2);
        uint64_t v11 = a2[8];
        a1[8] = v11;
        (**(void (***)(uint64_t, uint64_t))(v11 - 8))((uint64_t)(a1 + 5), (uint64_t)(a2 + 5));
        uint64_t v12 = a2[12];
        a1[12] = v12;
        (**(void (***)(uint64_t, uint64_t))(v12 - 8))((uint64_t)(a1 + 9), (uint64_t)(a2 + 9));
        break;
      default:
        uint64_t v4 = (int *)type metadata accessor for FolderEntity();
        uint64_t v5 = *((void *)v4 - 1);
        if ((*(unsigned int (**)(void *, uint64_t, int *))(v5 + 48))(a2, 1, v4))
        {
          uint64_t v6 = sub_10002F214(&qword_10069B260);
          memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        }
        else
        {
          uint64_t v13 = type metadata accessor for FolderID();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
          uint64_t v14 = v4[5];
          uint64_t v15 = (char *)a1 + v14;
          uint64_t v16 = (char *)a2 + v14;
          uint64_t v17 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
          uint64_t v18 = v4[6];
          uint64_t v19 = (void *)((char *)a1 + v18);
          uint64_t v20 = (void *)((char *)a2 + v18);
          *uint64_t v19 = *v20;
          v19[1] = v20[1];
          uint64_t v21 = v4[7];
          uint64_t v22 = (void *)((char *)a1 + v21);
          unsigned __int8 v23 = (void *)((char *)a2 + v21);
          void *v22 = *v23;
          v22[1] = v23[1];
          *((unsigned char *)a1 + v4[8]) = *((unsigned char *)a2 + v4[8]);
          *((unsigned char *)a1 + v4[9]) = *((unsigned char *)a2 + v4[9]);
          uint64_t v24 = *(void (**)(void *, void, uint64_t, int *))(v5 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v24(a1, 0, 1, v4);
        }
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10029F0E4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

char *assignWithTake for VisibleAttachmentsQuery.Comparator(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10029F0E4((uint64_t)a1, type metadata accessor for VisibleAttachmentsQuery.Comparator);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = type metadata accessor for ICQueryType();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
LABEL_9:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v7 = (int *)type metadata accessor for FolderEntity();
      uint64_t v8 = *((void *)v7 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
      {
        uint64_t v9 = sub_10002F214(&qword_10069B260);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        uint64_t v11 = type metadata accessor for FolderID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
        uint64_t v12 = v7[5];
        uint64_t v13 = &a1[v12];
        uint64_t v14 = &a2[v12];
        uint64_t v15 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
        *(_OWORD *)&a1[v7[6]] = *(_OWORD *)&a2[v7[6]];
        *(_OWORD *)&a1[v7[7]] = *(_OWORD *)&a2[v7[7]];
        a1[v7[8]] = a2[v7[8]];
        a1[v7[9]] = a2[v7[9]];
        (*(void (**)(char *, void, uint64_t, int *))(v8 + 56))(a1, 0, 1, v7);
      }
      goto LABEL_9;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void sub_10029F3B8()
{
  sub_10029F4BC();
  if (v0 <= 0x3F)
  {
    type metadata accessor for ICQueryType();
    if (v1 <= 0x3F) {
      swift_initEnumMetadataMultiPayload();
    }
  }
}

void sub_10029F4BC()
{
  if (!qword_10069FFB0)
  {
    type metadata accessor for FolderEntity();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10069FFB0);
    }
  }
}

uint64_t sub_10029F514@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for AttachmentEntity();
  uint64_t result = EntityProperty.projectedValue.getter();
  *a1 = result;
  return result;
}

const char *sub_10029F558()
{
  return "contentID";
}

void sub_10029F564(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_10029F584(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

unint64_t sub_10029F5A4()
{
  unint64_t result = qword_1006A18E8;
  if (!qword_1006A18E8)
  {
    sub_10001DFF4(&qword_1006A18B8);
    sub_100242C9C(&qword_1006A18F0, &qword_1006A18B0, &qword_1006A18F8, &qword_1006A18A8);
    sub_100242C9C(&qword_1006A0320, &qword_1006A02D8, &qword_1006A0328, &qword_1006A0330);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A18E8);
  }
  return result;
}

void *sub_10029F660@<X0>(void *result@<X0>, BOOL *a2@<X8>)
{
  unint64_t v2 = result[1];
  uint64_t v3 = *result & 0xFFFFFFFFFFFFLL;
  if ((v2 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(v2) & 0xF;
  }
  *a2 = v3 == 0;
  return result;
}

void sub_10029F688(void *a1@<X8>)
{
  sub_100299FA4(*(void **)(v1 + 32), &qword_1006A1568, (uint64_t)NoteAttachmentObject_ptr, a1);
}

uint64_t sub_10029F6BC()
{
  return _swift_deallocObject(v0, 40, 7);
}

void sub_10029F704(void *a1@<X8>)
{
  sub_100299FA4(*(void **)(v1 + 32), &qword_10069BDF0, (uint64_t)ICAttachment_ptr, a1);
}

uint64_t sub_10029F73C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

id sub_10029F774@<X0>(void *a1@<X8>)
{
  id result = sub_10029A318(*(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
  *a1 = result;
  return result;
}

uint64_t sub_10029F7BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10029F804@<X0>(void *a1@<X8>)
{
  return sub_100293FEC(&qword_1006A1568, a1);
}

unint64_t sub_10029F830@<X0>(void *a1@<X8>)
{
  return sub_100293FEC(&qword_10069BDF0, a1);
}

void sub_10029F85C(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_10029F87C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_10029F89C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001DFF4(a2);
    a3();
    sub_100242D30();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10029F91C()
{
  unint64_t result = qword_1006A19A0;
  if (!qword_1006A19A0)
  {
    sub_10001DFF4(&qword_1006A1978);
    sub_100242C9C(&qword_1006A19A8, &qword_1006A1970, &qword_1006A19B0, &qword_1006A1968);
    sub_100242C9C(&qword_1006A0320, &qword_1006A02D8, &qword_1006A0328, &qword_1006A0330);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A19A0);
  }
  return result;
}

void destroy for SyncingDebugSection(uint64_t a1)
{
}

uint64_t _s11MobileNotes19SyncingDebugSectionVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_100182A6C(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for SyncingDebugSection(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_100182A6C(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void **)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_100182AC4(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for SyncingDebugSection(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  char v5 = *(void **)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_100182AC4(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for SyncingDebugSection()
{
  return &type metadata for SyncingDebugSection;
}

uint64_t sub_10029FAFC()
{
  return swift_getOpaqueTypeConformance2();
}

char *sub_10029FB18(void *a1)
{
  id v2 = objc_allocWithZone((Class)_s10ControllerCMa(0));
  return sub_10026C45C(a1);
}

uint64_t sub_10029FB50@<X0>(char a1@<W2>, uint64_t a2@<X8>)
{
  uint64_t v61 = a2;
  v48[3] = a1 & 1;
  uint64_t v60 = type metadata accessor for RoundedRectangle() - 8;
  __chkstk_darwin(v60);
  uint64_t v59 = (char *)v48 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for PlainListStyle();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v55 = v3;
  uint64_t v56 = v4;
  __chkstk_darwin(v3);
  uint64_t v49 = (char *)v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_10002F214(&qword_1006A19C0);
  uint64_t v53 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v7 = (char *)v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_10002F214(&qword_1006A19C8);
  uint64_t v52 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v9 = (char *)v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10002F214(&qword_1006A19D0);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10002F214(&qword_1006A19D8);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  uint64_t v50 = (char *)v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_10002F214(&qword_1006A19E0) - 8;
  __chkstk_darwin(v58);
  uint64_t v57 = (uint64_t)v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002F214(&qword_10069D200);
  _s6ObjectVMa(0);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_100524D10;
  _s10ControllerCMa(0);
  sub_1002A1124(&qword_1006A19E8, (void (*)(uint64_t))_s10ControllerCMa);
  uint64_t v19 = (void *)StateObject.wrappedValue.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();

  swift_release();
  swift_release();
  *(void *)&long long v62 = v18;
  swift_getKeyPath();
  type metadata accessor for SyncingDebugSection.SyncStatusLabel();
  sub_10001DFB0(&qword_1006A19F0, &qword_1006A19F8);
  sub_1002A1124(&qword_1006A1A00, (void (*)(uint64_t))type metadata accessor for SyncingDebugSection.SyncStatusLabel);
  sub_1002A1124(&qword_1006A1A08, (void (*)(uint64_t))_s6ObjectVMa);
  List<>.init<A, B>(_:children:rowContent:)();
  uint64_t v20 = v49;
  PlainListStyle.init()();
  sub_10001DFB0(&qword_1006A1A10, &qword_1006A19C0);
  uint64_t v21 = v51;
  uint64_t v22 = v55;
  View.listStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v20, v22);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v7, v21);
  uint64_t v23 = static Alignment.center.getter();
  uint64_t v25 = v24;
  uint64_t v26 = static Color.white.getter();
  uint64_t v27 = v52;
  uint64_t v28 = v54;
  (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v13, v9, v54);
  uint64_t v29 = (uint64_t *)&v13[*(int *)(v11 + 44)];
  *uint64_t v29 = v26;
  v29[1] = v23;
  v29[2] = v25;
  (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v28);
  uint64_t v30 = v59;
  uint64_t v31 = &v59[*(int *)(v60 + 28)];
  uint64_t v32 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v33 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 104))(v31, v32, v33);
  __asm { FMOV            V0.2D, #8.0 }
  uint64_t v39 = (uint64_t)v30;
  *uint64_t v30 = _Q0;
  uint64_t v40 = (uint64_t)v50;
  uint64_t v41 = (uint64_t)&v50[*(int *)(v15 + 44)];
  sub_1002A116C(v39, v41, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v41 + *(int *)(sub_10002F214(&qword_1006A1A18) + 36)) = 256;
  sub_10002F034((uint64_t)v13, v40, &qword_1006A19D0);
  sub_1002A11D4(v39, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_10002B754((uint64_t)v13, &qword_1006A19D0);
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  uint64_t v42 = v57;
  sub_10002F034(v40, v57, &qword_1006A19D8);
  id v43 = (_OWORD *)(v42 + *(int *)(v58 + 44));
  long long v44 = v67;
  v43[4] = v66;
  v43[5] = v44;
  v43[6] = v68;
  long long v45 = v63;
  *id v43 = v62;
  v43[1] = v45;
  long long v46 = v65;
  void v43[2] = v64;
  void v43[3] = v46;
  sub_10002B754(v40, &qword_1006A19D8);
  return sub_10002F1B0(v42, v61, &qword_1006A19E0);
}

uint64_t sub_1002A0338@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002A116C(a1, a2, _s6ObjectVMa);
}

uint64_t sub_1002A0368@<X0>(uint64_t a1@<X8>)
{
  return sub_10029FB50(*(unsigned char *)(v1 + 16), a1);
}

uint64_t sub_1002A0374@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v3 = sub_10002F214(&qword_1006A1AF8);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v22 - v7;
  *(void *)uint64_t v8 = static VerticalAlignment.center.getter();
  *((void *)v8 + 1) = 0;
  v8[16] = 1;
  uint64_t v9 = sub_10002F214(&qword_1006A1B00);
  sub_1002A0584(a1, (uint64_t)&v8[*(int *)(v9 + 44)]);
  sub_1002A0914(a1, v27);
  uint64_t v10 = v27[0];
  uint64_t v11 = v27[1];
  uint64_t v12 = v27[2];
  uint64_t v13 = v27[3];
  uint64_t v14 = v28;
  uint64_t v24 = static Font.footnote.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v15 = static Color.secondary.getter();
  uint64_t v16 = swift_getKeyPath();
  uint64_t v25 = v6;
  sub_10002F034((uint64_t)v8, (uint64_t)v6, &qword_1006A1AF8);
  uint64_t v17 = (uint64_t)v6;
  uint64_t v18 = v26;
  sub_10002F034(v17, v26, &qword_1006A1AF8);
  uint64_t v19 = v18 + *(int *)(sub_10002F214(&qword_1006A1B08) + 48);
  *(void *)uint64_t v19 = v10;
  *(void *)(v19 + 8) = v11;
  *(void *)(v19 + 16) = v12;
  *(void *)(v19 + 24) = v13;
  *(_WORD *)(v19 + 32) = v14;
  uint64_t v20 = v24;
  *(void *)(v19 + 40) = KeyPath;
  *(void *)(v19 + 48) = v20;
  *(void *)(v19 + 56) = v16;
  *(void *)(v19 + 64) = v15;
  sub_1002A21B0(v10, v11, v12, v13, v14);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10002B754((uint64_t)v8, &qword_1006A1AF8);
  sub_1002A2268(v10, v11, v12, v13, v14);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return sub_10002B754((uint64_t)v25, &qword_1006A1AF8);
}

uint64_t sub_1002A0584@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v3 = sub_10002F214(&qword_10069CCC8);
  uint64_t v4 = v3 - 8;
  __chkstk_darwin(v3);
  uint64_t v6 = (uint64_t *)((char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for Image.Scale();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10002F214(&qword_1006A1B10);
  uint64_t v12 = v11 - 8;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (uint64_t *)((char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  uint64_t v32 = (uint64_t)&v30 - v16;
  uint64_t v33 = a1;
  swift_bridgeObjectRetain();
  uint64_t v31 = Image.init(systemName:)();
  uint64_t v17 = static Color.secondary.getter();
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for Image.Scale.medium(_:), v7);
  uint64_t v19 = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))((char *)v6 + *(int *)(v4 + 36), v10, v7);
  *uint64_t v6 = v19;
  sub_10002F034((uint64_t)v6, (uint64_t)v15 + *(int *)(v12 + 44), &qword_10069CCC8);
  uint64_t *v15 = v31;
  v15[1] = KeyPath;
  void v15[2] = v17;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10002B754((uint64_t)v6, &qword_10069CCC8);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v20 = v32;
  sub_10002F1B0((uint64_t)v15, v32, &qword_1006A1B10);
  swift_bridgeObjectRetain();
  uint64_t v21 = Text.strikethrough(_:color:)();
  uint64_t v23 = v22;
  LOBYTE(KeyPath) = v24;
  uint64_t v26 = v25;
  swift_bridgeObjectRelease();
  LOBYTE(v17) = KeyPath & 1;
  sub_10002F034(v20, (uint64_t)v15, &qword_1006A1B10);
  uint64_t v27 = v34;
  sub_10002F034((uint64_t)v15, v34, &qword_1006A1B10);
  uint64_t v28 = v27 + *(int *)(sub_10002F214(&qword_1006A1B18) + 48);
  *(void *)uint64_t v28 = v21;
  *(void *)(v28 + 8) = v23;
  *(unsigned char *)(v28 + 16) = v17;
  *(void *)(v28 + 24) = v26;
  sub_1001839DC(v21, v23, v17);
  swift_bridgeObjectRetain();
  sub_10002B754(v20, &qword_1006A1B10);
  sub_1001839EC(v21, v23, v17);
  swift_bridgeObjectRelease();
  return sub_10002B754((uint64_t)v15, &qword_1006A1B10);
}

uint64_t sub_1002A0914@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  long long v45 = a2;
  uint64_t v3 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v42 - v7;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v42 - v14;
  uint64_t v16 = _s6ObjectVMa(0);
  uint64_t v17 = v16;
  uint64_t v18 = (uint64_t *)(a1 + *(int *)(v16 + 40));
  uint64_t v19 = v18[1];
  if (!v19)
  {
LABEL_8:
    sub_10002F034(a1 + *(int *)(v17 + 36), (uint64_t)v6, (uint64_t *)&unk_1006A3E20);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) == 1)
    {
      uint64_t result = sub_10002B754((uint64_t)v6, (uint64_t *)&unk_1006A3E20);
      uint64_t v23 = 0;
      uint64_t v24 = 0;
      uint64_t v25 = 0;
      uint64_t v26 = 0;
      __int16 v28 = -256;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v6, v9);
      *(void *)&long long v49 = 0x2064657461647055;
      *((void *)&v49 + 1) = 0xEB00000000206E6FLL;
      Swift::String v36 = Date.formatted()();
      String.append(_:)(v36);
      swift_bridgeObjectRelease();
      long long v46 = v49;
      *(void *)&long long v47 = 0;
      *((void *)&v47 + 1) = _swiftEmptyArrayStorage;
      __int16 v48 = 256;
      sub_10002F214(&qword_1006A12B0);
      sub_10028A114();
      _ConditionalContent<>.init(storage:)();
      uint64_t v24 = *((void *)&v49 + 1);
      uint64_t v23 = v49;
      uint64_t v26 = *((void *)&v50 + 1);
      uint64_t v25 = v50;
      uint64_t v37 = v9;
      __int16 v38 = v51;
      int v39 = v52;
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v37);
      if (v39) {
        __int16 v40 = 256;
      }
      else {
        __int16 v40 = 0;
      }
      __int16 v28 = v40 | v38;
    }
    goto LABEL_18;
  }
  uint64_t v43 = *v18;
  long long v44 = v15;
  sub_10002F034(a1 + *(int *)(v16 + 36), (uint64_t)v8, (uint64_t *)&unk_1006A3E20);
  uint64_t v20 = v9;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10002B754((uint64_t)v8, (uint64_t *)&unk_1006A3E20);
    uint64_t v21 = v18[1];
    if (v21)
    {
      *(void *)&long long v46 = *v18;
      *((void *)&v46 + 1) = v21;
      *(void *)&long long v47 = 0;
      *((void *)&v47 + 1) = _swiftEmptyArrayStorage;
      LOBYTE(v48) = 1;
      swift_bridgeObjectRetain_n();
      _ConditionalContent<>.init(storage:)();
      long long v46 = v49;
      long long v47 = v50;
      __int16 v48 = v51;
      sub_10002F214(&qword_1006A12B0);
      sub_10028A114();
      _ConditionalContent<>.init(storage:)();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v24 = *((void *)&v49 + 1);
      uint64_t v23 = v49;
      uint64_t v26 = *((void *)&v50 + 1);
      uint64_t v25 = v50;
      if (v52) {
        __int16 v27 = 256;
      }
      else {
        __int16 v27 = 0;
      }
      __int16 v28 = v27 | v51;
      goto LABEL_18;
    }
    goto LABEL_8;
  }
  uint64_t v29 = v44;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v44, v8, v9);
  *(void *)&long long v49 = v43;
  *((void *)&v49 + 1) = v19;
  swift_bridgeObjectRetain();
  v30._countAndFlagsBits = 544108320;
  v30._object = (void *)0xE400000000000000;
  String.append(_:)(v30);
  uint64_t v31 = v29;
  Swift::String v32 = Date.formatted()();
  String.append(_:)(v32);
  swift_bridgeObjectRelease();
  long long v46 = v49;
  *(void *)&long long v47 = 0;
  *((void *)&v47 + 1) = _swiftEmptyArrayStorage;
  LOBYTE(v48) = 0;
  swift_bridgeObjectRetain();
  _ConditionalContent<>.init(storage:)();
  long long v46 = v49;
  long long v47 = v50;
  __int16 v48 = v51;
  sub_10002F214(&qword_1006A12B0);
  sub_10028A114();
  _ConditionalContent<>.init(storage:)();
  swift_bridgeObjectRelease();
  uint64_t v24 = *((void *)&v49 + 1);
  uint64_t v23 = v49;
  uint64_t v26 = *((void *)&v50 + 1);
  uint64_t v25 = v50;
  __int16 v33 = v51;
  int v34 = v52;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v31, v20);
  if (v34) {
    __int16 v35 = 256;
  }
  else {
    __int16 v35 = 0;
  }
  __int16 v28 = v35 | v33;
LABEL_18:
  uint64_t v41 = v45;
  *long long v45 = v23;
  v41[1] = v24;
  v41[2] = v25;
  v41[3] = v26;
  *((_WORD *)v41 + 16) = v28;
  return result;
}

uint64_t sub_1002A0E44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10002F214(&qword_1006A1AE0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = static HorizontalAlignment.leading.getter();
  *((void *)v6 + 1) = 0;
  v6[16] = 1;
  uint64_t v7 = sub_10002F214(&qword_1006A1AE8);
  sub_1002A0374(v2, (uint64_t)&v6[*(int *)(v7 + 44)]);
  uint64_t KeyPath = swift_getKeyPath();
  sub_10002F034((uint64_t)v6, a1, &qword_1006A1AE0);
  uint64_t v9 = a1 + *(int *)(sub_10002F214(&qword_1006A1AF0) + 36);
  *(void *)uint64_t v9 = KeyPath;
  *(void *)(v9 + 8) = 1;
  *(unsigned char *)(v9 + 16) = 0;
  return sub_10002B754((uint64_t)v6, &qword_1006A1AE0);
}

uint64_t sub_1002A0F3C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();

  return swift_release();
}

uint64_t sub_1002A0FBC(uint64_t a1, void **a2)
{
  uint64_t v4 = _s6ObjectVMa(0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v13 - v8;
  sub_1002A116C(a1, (uint64_t)&v13 - v8, _s6ObjectVMa);
  uint64_t v10 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1002A116C((uint64_t)v9, (uint64_t)v7, _s6ObjectVMa);
  id v11 = v10;
  static Published.subscript.setter();
  return sub_1002A11D4((uint64_t)v9, _s6ObjectVMa);
}

uint64_t type metadata accessor for SyncingDebugSection.SyncStatusLabel()
{
  uint64_t result = qword_1006A1A78;
  if (!qword_1006A1A78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1002A1124(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002A116C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1002A11D4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

char *sub_1002A1234(char *a1, char **a2)
{
  uint64_t v4 = _s6ObjectVMa(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  uint64_t v6 = *a2;
  *(void *)a1 = *a2;
  if ((v5 & 0x20000) != 0)
  {
    a1 = &v6[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[2];
    *((void *)a1 + 1) = a2[1];
    *((void *)a1 + 2) = v7;
    uint64_t v8 = a2[4];
    *((void *)a1 + 3) = a2[3];
    *((void *)a1 + 4) = v8;
    *((void *)a1 + 5) = a2[5];
    a1[48] = *((unsigned char *)a2 + 48);
    uint64_t v9 = *(int *)(v4 + 36);
    uint64_t v21 = v4;
    __dst = &a1[v9];
    uint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = type metadata accessor for Date();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    uint64_t v13 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v20(v10, 1, v11))
    {
      uint64_t v14 = sub_10002F214((uint64_t *)&unk_1006A3E20);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v15 = *(int *)(v21 + 40);
    uint64_t v16 = &a1[v15];
    uint64_t v17 = (char **)((char *)a2 + v15);
    uint64_t v18 = v17[1];
    *(void *)uint64_t v16 = *v17;
    *((void *)v16 + 1) = v18;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1002A1420(id *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = (char *)a1 + *(int *)(_s6ObjectVMa(0) + 36);
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3)) {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v2, v3);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002A1514(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v8 = _s6ObjectVMa(0);
  uint64_t v9 = *(int *)(v8 + 36);
  __dst = (void *)(a1 + v9);
  uint64_t v22 = v8;
  uint64_t v10 = (const void *)(a2 + v9);
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v20 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  id v13 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v20(v10, 1, v11))
  {
    uint64_t v14 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(__dst, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
  }
  uint64_t v15 = *(int *)(v22 + 40);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1002A16AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v7 = _s6ObjectVMa(0);
  uint64_t v8 = *(int *)(v7 + 36);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  id v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 24))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v9, v10, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  uint64_t v17 = *(int *)(v7 + 40);
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1002A18D4(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v5 = _s6ObjectVMa(0);
  uint64_t v6 = *(int *)(v5 + 36);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_OWORD *)(a1 + *(int *)(v5 + 40)) = *(_OWORD *)(a2 + *(int *)(v5 + 40));
  return a1;
}

uint64_t sub_1002A1A1C(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v7 = _s6ObjectVMa(0);
  uint64_t v8 = *(int *)(v7 + 36);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  id v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  uint64_t v17 = *(int *)(v7 + 40);
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1002A1C08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002A1C1C);
}

uint64_t sub_1002A1C1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s6ObjectVMa(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1002A1C88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002A1C9C);
}

uint64_t sub_1002A1C9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s6ObjectVMa(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_1002A1D0C()
{
  uint64_t result = _s6ObjectVMa(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1002A1D9C()
{
  unint64_t result = qword_1006A1AB0;
  if (!qword_1006A1AB0)
  {
    sub_10001DFF4(&qword_1006A19E0);
    sub_1002A1E18();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A1AB0);
  }
  return result;
}

unint64_t sub_1002A1E18()
{
  unint64_t result = qword_1006A1AB8;
  if (!qword_1006A1AB8)
  {
    sub_10001DFF4(&qword_1006A19D8);
    sub_1002A1EB8();
    sub_10001DFB0(&qword_1006A1AD8, &qword_1006A1A18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A1AB8);
  }
  return result;
}

unint64_t sub_1002A1EB8()
{
  unint64_t result = qword_1006A1AC0;
  if (!qword_1006A1AC0)
  {
    sub_10001DFF4(&qword_1006A19D0);
    sub_10001DFF4(&qword_1006A19C0);
    type metadata accessor for PlainListStyle();
    sub_10001DFB0(&qword_1006A1A10, &qword_1006A19C0);
    swift_getOpaqueTypeConformance2();
    sub_10001DFB0(&qword_1006A1AC8, &qword_1006A1AD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A1AC0);
  }
  return result;
}

uint64_t sub_1002A1FD0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002A1FEC()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t sub_1002A2010(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Image.Scale();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return EnvironmentValues.imageScale.setter();
}

uint64_t sub_1002A20D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = EnvironmentValues.lineLimit.getter();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1002A210C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = EnvironmentValues.lineLimit.getter();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1002A2140()
{
  return EnvironmentValues.lineLimit.setter();
}

uint64_t sub_1002A2170()
{
  return EnvironmentValues.lineLimit.setter();
}

uint64_t sub_1002A21B0(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  if (BYTE1(a5) != 255) {
    return sub_1002A21C8(result, a2, a3, a4, a5, BYTE1(a5) & 1);
  }
  return result;
}

uint64_t sub_1002A21C8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6)
  {
    sub_1001839DC(a1, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  else
  {
    return sub_1002A222C(a1, a2, a3);
  }
}

uint64_t sub_1002A222C(uint64_t a1, uint64_t a2, char a3)
{
  sub_1001839DC(a1, a2, a3 & 1);

  return swift_bridgeObjectRetain();
}

uint64_t sub_1002A2268(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  if (BYTE1(a5) != 255) {
    return sub_1002A2280(result, a2, a3, a4, a5, BYTE1(a5) & 1);
  }
  return result;
}

uint64_t sub_1002A2280(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6)
  {
    sub_1001839EC(a1, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    return sub_1002A22E4(a1, a2, a3);
  }
}

uint64_t sub_1002A22E4(uint64_t a1, uint64_t a2, char a3)
{
  sub_1001839EC(a1, a2, a3 & 1);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002A2320()
{
  return EnvironmentValues.imageScale.getter();
}

unint64_t sub_1002A234C()
{
  unint64_t result = qword_1006A1B20;
  if (!qword_1006A1B20)
  {
    sub_10001DFF4(&qword_1006A1AF0);
    sub_10001DFB0(&qword_1006A1B28, &qword_1006A1AE0);
    sub_10001DFB0(&qword_1006A1B30, &qword_1006A1B38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A1B20);
  }
  return result;
}

void *sub_1002A2B08()
{
  unint64_t v1 = *(void **)(v0 + OBJC_IVAR___ICTagsActionMenu_viewControllerManager);
  id v2 = sub_1002A2D2C(v1);
  sub_10002F214(&qword_1006A1B98);
  Array.appendNonNil(_:)();

  id v6 = sub_1002A3954(v1, (uint64_t)&OBJC_IVAR___ICTagsActionMenu_presentingViewController, &OBJC_IVAR___ICTagsActionMenu_completion, (uint64_t)&unk_100632E20);
  Array.appendNonNil(_:)();

  sub_1002A3B30();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v3 = sub_1002A3C50();
  Array.appendNonNil(_:)();

  id v7 = sub_1002A3D74();
  Array.appendNonNil(_:)();

  if (objc_msgSend(*(id *)(v0 + OBJC_IVAR___ICTagsActionMenu_tagSelection), "isEmpty", v7)) {
    swift_bridgeObjectRelease();
  }
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    sub_100031418(0, (unint64_t *)&qword_1006A4D30);
    swift_bridgeObjectRetain();
    uint64_t v4 = (void *)_bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_100031418(0, (unint64_t *)&qword_1006A4D30);
    uint64_t v4 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  return v4;
}

id sub_1002A2D2C(void *a1)
{
  if ([a1 noteContainerViewMode] != (id)1) {
    return 0;
  }
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  uint64_t v4 = Strong;
  id result = [Strong view];
  if (result)
  {
    id v6 = result;
    unsigned int v7 = [result ic_hasCompactWidth];

    if (!v7)
    {
      uint64_t v8 = self;
      if ((objc_msgSend(v8, "ic_isiPad") & 1) != 0
        || (objc_msgSend(v8, "ic_isVision") & 1) != 0
        && ([a1 isMainSplitViewDisplayModeSecondaryOnly] & 1) == 0)
      {
        uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v11 = v10;
        long long v47 = @"ICNoteBrowseCollectionViewGalleryWideModeNumberOfColumnsKey";
        NSString v12 = String._bridgeToObjectiveC()();
        id v46 = self;
        id v44 = [v46 systemImageNamed:v12];

        id v45 = self;
        id v13 = [v45 mainBundle];
        NSString v14 = String._bridgeToObjectiveC()();
        id v15 = [v13 localizedStringForKey:v14 value:0 table:0];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        sub_100031418(0, (unint64_t *)&unk_10069B9F0);
        uint64_t v16 = (void *)swift_allocObject();
        v16[2] = v49;
        v16[3] = v11;
        v16[4] = 6;
        v16[5] = v1;
        id v48 = v44;
        swift_bridgeObjectRetain();
        id v17 = v1;
        uint64_t v42 = v16;
        uint64_t v18 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
        NSString v19 = String._bridgeToObjectiveC()();
        id v20 = [v46 systemImageNamed:v19];

        id v21 = [v45 mainBundle];
        NSString v22 = String._bridgeToObjectiveC()();
        id v23 = [v21 localizedStringForKey:v22 value:0 table:0];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v24 = (void *)swift_allocObject();
        v24[2] = v49;
        void v24[3] = v11;
        v24[4] = 3;
        uint64_t v24[5] = v17;
        id v25 = v17;
        id v26 = v20;
        uint64_t v43 = v24;
        __int16 v27 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
        id v28 = [a1 adjustedNumberOfGalleryViewColumns:0:8:0:sub_1002A5040:v43];
        id v29 = [self standardUserDefaults];
        id v30 = [v29 integerForKey:v47];

        BOOL v32 = v30 == (id)3 || v28 == (id)3;
        [v27 setIc_disabled:v32];
        BOOL v34 = v30 == (id)6 || v28 == (id)6;
        [v18 setIc_disabled:v34];
        sub_10002F214(&qword_10069BA00);
        uint64_t v35 = swift_allocObject();
        *(_OWORD *)(v35 + 16) = xmmword_100524CE0;
        *(void *)(v35 + 32) = v18;
        *(void *)(v35 + 40) = v27;
        unint64_t v50 = v35;
        specialized Array._endMutation()();
        if (v50 >> 62)
        {
          sub_100031418(0, (unint64_t *)&qword_1006A4D30);
          id v40 = v18;
          id v41 = v27;
          swift_bridgeObjectRetain();
          _bridgeCocoaArray<A>(_:)();
          swift_bridgeObjectRelease();
        }
        else
        {
          id v36 = v18;
          id v37 = v27;
          swift_bridgeObjectRetain();
          dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
          sub_100031418(0, (unint64_t *)&qword_1006A4D30);
        }
        swift_bridgeObjectRelease();
        __int16 v38 = self;
        sub_100031418(0, (unint64_t *)&qword_1006A4D30);
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        id v9 = [v38 ic_inlineMenuWithElementSize:1 children:isa];

        return v9;
      }
    }

    return 0;
  }
  __break(1u);
  return result;
}

id sub_1002A3330(void *a1)
{
  if ([a1 noteContainerViewMode] != (id)1) {
    return 0;
  }
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  uint64_t v4 = Strong;
  id result = [Strong view];
  if (result)
  {
    id v6 = result;
    unsigned int v7 = [result ic_hasCompactWidth];

    if (!v7)
    {
      uint64_t v8 = self;
      if ((objc_msgSend(v8, "ic_isiPad") & 1) != 0
        || (objc_msgSend(v8, "ic_isVision") & 1) != 0
        && ([a1 isMainSplitViewDisplayModeSecondaryOnly] & 1) == 0)
      {
        uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v11 = v10;
        long long v47 = @"ICNoteBrowseCollectionViewGalleryWideModeNumberOfColumnsKey";
        NSString v12 = String._bridgeToObjectiveC()();
        id v46 = self;
        id v44 = [v46 systemImageNamed:v12];

        id v45 = self;
        id v13 = [v45 mainBundle];
        NSString v14 = String._bridgeToObjectiveC()();
        id v15 = [v13 localizedStringForKey:v14 value:0 table:0];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        sub_100031418(0, (unint64_t *)&unk_10069B9F0);
        uint64_t v16 = (void *)swift_allocObject();
        v16[2] = v49;
        v16[3] = v11;
        v16[4] = 6;
        v16[5] = v1;
        id v48 = v44;
        swift_bridgeObjectRetain();
        id v17 = v1;
        uint64_t v42 = v16;
        uint64_t v18 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
        NSString v19 = String._bridgeToObjectiveC()();
        id v20 = [v46 systemImageNamed:v19];

        id v21 = [v45 mainBundle];
        NSString v22 = String._bridgeToObjectiveC()();
        id v23 = [v21 localizedStringForKey:v22 value:0 table:0];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v24 = (void *)swift_allocObject();
        v24[2] = v49;
        void v24[3] = v11;
        v24[4] = 3;
        uint64_t v24[5] = v17;
        id v25 = v17;
        id v26 = v20;
        uint64_t v43 = v24;
        __int16 v27 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
        id v28 = [a1 adjustedNumberOfGalleryViewColumns:0:8:0:sub_1002A50D8:v43];
        id v29 = [self standardUserDefaults];
        id v30 = [v29 integerForKey:v47];

        BOOL v32 = v30 == (id)3 || v28 == (id)3;
        [v27 setIc_disabled:v32];
        BOOL v34 = v30 == (id)6 || v28 == (id)6;
        [v18 setIc_disabled:v34];
        sub_10002F214(&qword_10069BA00);
        uint64_t v35 = swift_allocObject();
        *(_OWORD *)(v35 + 16) = xmmword_100524CE0;
        *(void *)(v35 + 32) = v18;
        *(void *)(v35 + 40) = v27;
        unint64_t v50 = v35;
        specialized Array._endMutation()();
        if (v50 >> 62)
        {
          sub_100031418(0, (unint64_t *)&qword_1006A4D30);
          id v40 = v18;
          id v41 = v27;
          swift_bridgeObjectRetain();
          _bridgeCocoaArray<A>(_:)();
          swift_bridgeObjectRelease();
        }
        else
        {
          id v36 = v18;
          id v37 = v27;
          swift_bridgeObjectRetain();
          dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
          sub_100031418(0, (unint64_t *)&qword_1006A4D30);
        }
        swift_bridgeObjectRelease();
        __int16 v38 = self;
        sub_100031418(0, (unint64_t *)&qword_1006A4D30);
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        id v9 = [v38 ic_inlineMenuWithElementSize:1 children:isa];

        return v9;
      }
    }

    return 0;
  }
  __break(1u);
  return result;
}

id sub_1002A3938(void *a1)
{
  return sub_1002A3954(a1, (uint64_t)&OBJC_IVAR___ICNoteContainerActionMenu_presentingViewController, &OBJC_IVAR___ICNoteContainerActionMenu_completion, (uint64_t)&unk_100632E98);
}

id sub_1002A3954(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  if ([a1 behavior] == (id)1) {
    return 0;
  }
  void aBlock[6] = _swiftEmptyArrayStorage;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  id v10 = [objc_allocWithZone((Class)ICNoteContainerViewModeActivity) initWithPresentingViewController:Strong viewControllerManager:a1];

  uint64_t v11 = (void *)(v4 + *a3);
  if (*v11)
  {
    uint64_t v12 = v11[1];
    aBlock[4] = *v11;
    aBlock[5] = v12;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_1002A43E4;
    uint64_t aBlock[3] = a4;
    id v13 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
  }
  else
  {
    id v13 = 0;
  }
  id v14 = [v10 actionWithCompletion:v13];
  _Block_release(v13);
  aBlock[0] = v14;
  sub_10002F214(&qword_1006A1BA0);
  Array.appendNonNil(_:)();
  id v15 = self;
  sub_100031418(0, (unint64_t *)&qword_1006A4D30);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v8 = [v15 ic_inlineMenuWithChildren:isa];

  return v8;
}

id sub_1002A3B30()
{
  id v0 = sub_1002A3EF8();
  sub_10002F214(&qword_1006A1BA0);
  Array.appendNonNil(_:)();

  id v1 = sub_1002A4070();
  Array.appendNonNil(_:)();

  id v6 = sub_1002A4218();
  Array.appendNonNil(_:)();

  id v2 = self;
  sub_100031418(0, (unint64_t *)&qword_1006A4D30);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v4 = [v2 ic_inlineMenuWithChildren:isa v6 _swiftEmptyArrayStorage];

  return v4;
}

id sub_1002A3C50()
{
  if ([*(id *)(v0 + OBJC_IVAR___ICTagsActionMenu_tagSelection) mode]) {
    return 0;
  }
  id v2 = sub_1002A4604();
  sub_10002F214(&qword_1006A1BA0);
  Array.appendNonNil(_:)();

  id v6 = sub_1002A4460();
  Array.appendNonNil(_:)();

  id v3 = self;
  sub_100031418(0, (unint64_t *)&qword_1006A4D30);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v1 = [v3 ic_inlineMenuWithChildren:isa, v6, _swiftEmptyArrayStorage];

  return v1;
}

id sub_1002A3D74()
{
  if ([*(id *)(v0 + OBJC_IVAR___ICTagsActionMenu_tagSelection) mode]) {
    return 0;
  }
  id v2 = sub_1002A48A8();
  id v3 = self;
  sub_10002F214(&qword_10069BA00);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100529F20;
  *(void *)(v4 + 32) = v2;
  specialized Array._endMutation()();
  sub_100031418(0, (unint64_t *)&qword_1006A4D30);
  id v5 = v2;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v1 = [v3 ic_inlineMenuWithChildren:isa];

  return v1;
}

id sub_1002A3EF8()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v2 = [Strong tagsActionMenuNoteCount:v0];
    swift_unknownObjectRelease();
  }
  else
  {
    id v2 = 0;
  }
  id v3 = (void *)swift_unknownObjectWeakLoadStrong();
  id v4 = [objc_allocWithZone((Class)ICSelectNotesActivity) initWithPresentingViewController:v3];

  if (*(void *)(v0 + OBJC_IVAR___ICTagsActionMenu_completion))
  {
    uint64_t v5 = *(void *)(v0 + OBJC_IVAR___ICTagsActionMenu_completion + 8);
    v9[4] = *(void *)(v0 + OBJC_IVAR___ICTagsActionMenu_completion);
    v9[5] = v5;
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 1107296256;
    v9[2] = sub_1002A43E4;
    v9[3] = &unk_100632DF8;
    id v6 = _Block_copy(v9);
    swift_retain();
    swift_release();
  }
  else
  {
    id v6 = 0;
  }
  id v7 = [v4 actionWithCompletion:v6];
  _Block_release(v6);
  [v7 setIc_disabled:v2 == 0];

  return v7;
}

id sub_1002A4070()
{
  id v1 = [*(id *)(v0 + OBJC_IVAR___ICTagsActionMenu_viewControllerManager) noteContainerViewMode];
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  uint64_t v3 = swift_unknownObjectWeakLoadStrong();
  if (v3)
  {
    id v4 = (void *)v3;
    self;
    uint64_t v5 = (void *)swift_dynamicCastObjCClass();
    if (v5) {
      id v6 = [v5 eventReporter];
    }
    else {
      id v6 = 0;
    }
  }
  else
  {
    id v6 = 0;
  }
  id v7 = [objc_allocWithZone((Class)ICSortQueryActivity) initWithPresentingViewController:Strong noteContainerViewMode:v1 eventReporter:v6];

  if (*(void *)(v0 + OBJC_IVAR___ICTagsActionMenu_completion))
  {
    uint64_t v8 = *(void *)(v0 + OBJC_IVAR___ICTagsActionMenu_completion + 8);
    v12[4] = *(void *)(v0 + OBJC_IVAR___ICTagsActionMenu_completion);
    v12[5] = v8;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    void v12[2] = sub_1002A43E4;
    v12[3] = &unk_100632DD0;
    id v9 = _Block_copy(v12);
    swift_retain();
    swift_release();
  }
  else
  {
    id v9 = 0;
  }
  id v10 = [v7 menuWithCompletion:v9];
  _Block_release(v9);

  return v10;
}

id sub_1002A4218()
{
  if (![self supportsQueryDateHeaders]) {
    return 0;
  }
  id v1 = [*(id *)(v0 + OBJC_IVAR___ICTagsActionMenu_viewControllerManager) noteContainerViewMode];
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  uint64_t v3 = swift_unknownObjectWeakLoadStrong();
  if (v3)
  {
    id v4 = (void *)v3;
    self;
    uint64_t v5 = (void *)swift_dynamicCastObjCClass();
    if (v5) {
      id v6 = [v5 eventReporter];
    }
    else {
      id v6 = 0;
    }
  }
  else
  {
    id v6 = 0;
  }
  id v8 = [objc_allocWithZone((Class)ICQueryDateHeadersActivity) initWithPresentingViewController:Strong noteContainerViewMode:v1 eventReporter:v6];

  if (*(void *)(v0 + OBJC_IVAR___ICTagsActionMenu_completion))
  {
    uint64_t v9 = *(void *)(v0 + OBJC_IVAR___ICTagsActionMenu_completion + 8);
    v12[4] = *(void *)(v0 + OBJC_IVAR___ICTagsActionMenu_completion);
    v12[5] = v9;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    void v12[2] = sub_1002A43E4;
    v12[3] = &unk_100632DA8;
    id v10 = _Block_copy(v12);
    swift_retain();
    swift_release();
  }
  else
  {
    id v10 = 0;
  }
  id v7 = [v8 menuWithCompletion:v10];
  _Block_release(v10);

  return v7;
}

uint64_t sub_1002A43E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;
  swift_retain();
  v3(a2, v4, v6);
  swift_release();

  return swift_bridgeObjectRelease();
}

id sub_1002A4460()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  id v2 = *(void **)(v0 + OBJC_IVAR___ICTagsActionMenu_tagSelection);
  uint64_t v3 = swift_unknownObjectWeakLoadStrong();
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    self;
    id v5 = (id)swift_dynamicCastObjCClass();
    id v6 = v2;
    if (v5) {
      id v5 = [v5 eventReporter];
    }
  }
  else
  {
    id v7 = v2;
    id v5 = 0;
  }
  id v8 = [objc_allocWithZone((Class)ICDeleteTagActivity) initWithPresentingViewController:Strong tagSelection:v2 eventReporter:v5];

  uint64_t v9 = *(void *)(v0 + OBJC_IVAR___ICTagsActionMenu_completion);
  if (v9)
  {
    uint64_t v10 = *(void *)(v0 + OBJC_IVAR___ICTagsActionMenu_completion + 8);
    v14[4] = v9;
    v14[5] = v10;
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 1107296256;
    v14[2] = sub_1002A43E4;
    v14[3] = &unk_100632D58;
    uint64_t v11 = _Block_copy(v14);
    swift_retain();
    swift_release();
  }
  else
  {
    uint64_t v11 = 0;
  }
  id v12 = [v8 actionWithCompletion:v11];
  _Block_release(v11);

  return v12;
}

id sub_1002A4604()
{
  id v1 = *(void **)(v0 + OBJC_IVAR___ICTagsActionMenu_tagSelection);
  id v2 = [v1 objectIDs];
  sub_100031418(0, (unint64_t *)&qword_10069E810);
  sub_1001A3EEC();
  uint64_t v3 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  if ((v3 & 0xC000000000000001) != 0) {
    uint64_t v4 = __CocoaSet.count.getter();
  }
  else {
    uint64_t v4 = *(void *)(v3 + 16);
  }
  swift_bridgeObjectRelease();
  if (v4 != 1) {
    return 0;
  }
  id v5 = [v1 objectIDs];
  uint64_t v6 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  id v7 = (void *)sub_1002AAF58(v6);
  swift_bridgeObjectRelease();
  if (!v7) {
    return 0;
  }
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  uint64_t v9 = *(void **)(v0 + OBJC_IVAR___ICTagsActionMenu_viewControllerManager);
  uint64_t v10 = swift_unknownObjectWeakLoadStrong();
  if (v10)
  {
    uint64_t v11 = (void *)v10;
    self;
    id v12 = (id)swift_dynamicCastObjCClass();
    id v13 = v9;
    id v14 = v7;
    if (v12) {
      id v12 = [v12 eventReporter];
    }
  }
  else
  {
    id v16 = v9;
    id v17 = v7;
    id v12 = 0;
  }
  id v18 = [objc_allocWithZone((Class)ICRenameTagActivity) initWithPresentingViewController:Strong viewControllerManager:v9 tagObjectID:v7 eventReporter:v12];

  if (*(void *)(v0 + OBJC_IVAR___ICTagsActionMenu_completion))
  {
    uint64_t v19 = *(void *)(v0 + OBJC_IVAR___ICTagsActionMenu_completion + 8);
    v22[4] = *(void *)(v0 + OBJC_IVAR___ICTagsActionMenu_completion);
    v22[5] = v19;
    v22[0] = _NSConcreteStackBlock;
    v22[1] = 1107296256;
    v22[2] = sub_1002A43E4;
    v22[3] = &unk_100632D80;
    id v20 = _Block_copy(v22);
    swift_retain();
    swift_release();
  }
  else
  {
    id v20 = 0;
  }
  id v15 = [v18 actionWithCompletion:v20];

  _Block_release(v20);
  return v15;
}

id sub_1002A48A8()
{
  id v1 = *(void **)(v0 + OBJC_IVAR___ICTagsActionMenu_tagSelection);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  uint64_t v3 = swift_unknownObjectWeakLoadStrong();
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    self;
    id v5 = (id)swift_dynamicCastObjCClass();
    id v6 = v1;
    if (v5) {
      id v5 = [v5 eventReporter];
    }
  }
  else
  {
    id v7 = v1;
    id v5 = 0;
  }
  id v8 = [objc_allocWithZone((Class)ICCreateSmartFolderActivity) initWithTagSelection:v1 presentingViewController:Strong eventReporter:v5];

  uint64_t v9 = *(void *)(v0 + OBJC_IVAR___ICTagsActionMenu_completion);
  if (v9)
  {
    uint64_t v10 = *(void *)(v0 + OBJC_IVAR___ICTagsActionMenu_completion + 8);
    v14[4] = v9;
    v14[5] = v10;
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 1107296256;
    v14[2] = sub_1002A43E4;
    v14[3] = &unk_100632D30;
    uint64_t v11 = _Block_copy(v14);
    swift_retain();
    swift_release();
  }
  else
  {
    uint64_t v11 = 0;
  }
  id v12 = [v8 actionWithCompletion:v11];
  _Block_release(v11);

  return v12;
}

uint64_t type metadata accessor for TagsActionMenu()
{
  return self;
}

uint64_t sub_1002A4B30()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___ICTagsActionMenu_completion);
  sub_10002E71C(v1);
  return v1;
}

uint64_t sub_1002A4B70()
{
  return swift_unknownObjectWeakLoadStrong();
}

void *sub_1002A4B80()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___ICTagsActionMenu_presentingBarButtonItem);
  id v2 = v1;
  return v1;
}

uint64_t sub_1002A4BB0()
{
  swift_getObjectType();

  return ActionMenuProvider.title.getter();
}

void sub_1002A4BF0()
{
  swift_getObjectType();

  ActionMenuProvider.willShowMenu()();
}

UIMenu sub_1002A4C2C(Swift::Bool a1)
{
  swift_getObjectType();

  return ActionMenuProvider.makeMenu(deferredChildren:)(a1);
}

UIDeferredMenuElement sub_1002A4C7C()
{
  swift_getObjectType();

  return ActionMenuProvider.makeDeferredMenuElement()();
}

void sub_1002A4CB8(void *a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, void *a6)
{
  uint64_t v9 = self;
  id v10 = [v9 standardUserDefaults];
  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = (char *)[v10 integerForKey:v11];

  if (__OFADD__(v12, 1))
  {
    __break(1u);
  }
  else
  {
    if ((uint64_t)(v12 + 1) < (uint64_t)a4) {
      a4 = v12 + 1;
    }
    id v13 = [v9 standardUserDefaults];
    NSString v14 = String._bridgeToObjectiveC()();
    [v13 setInteger:a4 forKey:v14];

    id v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(a5 + *a6);
    if (v15)
    {
      swift_retain();
      id v16 = [a1 identifier];
      uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v19 = v18;

      v15(1, v17, v19);
      sub_10002E70C((uint64_t)v15);
      swift_bridgeObjectRelease();
    }
  }
}

void sub_1002A4E64(void *a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, void *a6)
{
  uint64_t v9 = self;
  id v10 = [v9 standardUserDefaults];
  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = (char *)[v10 integerForKey:v11];

  if (__OFSUB__(v12, 1))
  {
    __break(1u);
  }
  else
  {
    if ((uint64_t)(v12 - 1) > (uint64_t)a4) {
      a4 = v12 - 1;
    }
    id v13 = [v9 standardUserDefaults];
    NSString v14 = String._bridgeToObjectiveC()();
    [v13 setInteger:a4 forKey:v14];

    id v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(a5 + *a6);
    if (v15)
    {
      swift_retain();
      id v16 = [a1 identifier];
      uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v19 = v18;

      v15(1, v17, v19);
      sub_10002E70C((uint64_t)v15);
      swift_bridgeObjectRelease();
    }
  }
}

void sub_1002A5014(void *a1)
{
  sub_1002A4CB8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(char **)(v1 + 32), *(void *)(v1 + 40), &OBJC_IVAR___ICTagsActionMenu_completion);
}

void sub_1002A5040(void *a1)
{
  sub_1002A4E64(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(char **)(v1 + 32), *(void *)(v1 + 40), &OBJC_IVAR___ICTagsActionMenu_completion);
}

void sub_1002A506C(void *a1)
{
  sub_1002A4CB8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(char **)(v1 + 32), *(void *)(v1 + 40), &OBJC_IVAR___ICNoteContainerActionMenu_completion);
}

uint64_t sub_1002A5098()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_1002A50D8(void *a1)
{
  sub_1002A4E64(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(char **)(v1 + 32), *(void *)(v1 + 40), &OBJC_IVAR___ICNoteContainerActionMenu_completion);
}

uint64_t sub_1002A5100()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

id sub_1002A5138(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v8 = v7;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  swift_unknownObjectWeakInit();
  NSString v14 = (uint64_t *)&v8[OBJC_IVAR___ICTagsActionMenu_completion];
  *NSString v14 = 0;
  v14[1] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v15 = OBJC_IVAR___ICTagsActionMenu_presentingBarButtonItem;
  *(void *)&v8[OBJC_IVAR___ICTagsActionMenu_presentingBarButtonItem] = 0;
  *(void *)&v8[OBJC_IVAR___ICTagsActionMenu_tagSelection] = a1;
  swift_unknownObjectWeakAssign();
  id v16 = *(void **)&v8[v15];
  *(void *)&v8[v15] = a3;
  uint64_t v17 = v8;
  id v18 = a1;
  id v19 = a3;

  *(void *)&v17[OBJC_IVAR___ICTagsActionMenu_viewControllerManager] = a4;
  swift_unknownObjectWeakAssign();
  uint64_t v20 = *v14;
  *NSString v14 = a6;
  v14[1] = a7;
  id v21 = a4;
  sub_10002E71C(a6);
  sub_10002E70C(v20);

  v24.receiver = v17;
  v24.super_class = ObjectType;
  return [super init];
}

unint64_t sub_1002A5278()
{
  unint64_t result = qword_1006A1BA8;
  if (!qword_1006A1BA8)
  {
    type metadata accessor for TagsActionMenu();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A1BA8);
  }
  return result;
}

id sub_1002A531C()
{
  uint64_t v1 = v0;
  id result = [v0 workerContext];
  if (result)
  {
    uint64_t v3 = result;
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v1;
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = sub_1002A5934;
    *(void *)(v5 + 24) = v4;
    v8[4] = sub_100031D5C;
    v8[5] = v5;
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 1107296256;
    v8[2] = sub_100031D30;
    v8[3] = &unk_100633028;
    id v6 = _Block_copy(v8);
    id v7 = v1;
    swift_retain();
    swift_release();
    [v3 performBlockAndWait:v6];

    _Block_release(v6);
    LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    id result = (id)swift_release();
    if ((v3 & 1) == 0) {
      return result;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_1002A5498(void *a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214(&qword_10069B310);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = [a1 workerContext];
  if (!result) {
    goto LABEL_27;
  }
  id v10 = result;
  id v11 = [self allActiveAccountsInContext:result];

  sub_1002A594C();
  unint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  id v13 = a1;
  NSString v14 = sub_1002A598C(v12);
  swift_bridgeObjectRelease();

  uint64_t v15 = sub_100269E50((uint64_t)v14);
  id result = (id)swift_bridgeObjectRelease();
  int64_t v16 = 0;
  uint64_t v17 = *(void *)(v15 + 56);
  uint64_t v27 = v15 + 56;
  uint64_t v18 = 1 << *(unsigned char *)(v15 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & v17;
  int64_t v28 = (unint64_t)(v18 + 63) >> 6;
  uint64_t v29 = v3 + 16;
  uint64_t v30 = v15;
  if ((v19 & v17) == 0) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v21 = __clz(__rbit64(v20));
  v20 &= v20 - 1;
  for (unint64_t i = v21 | (v16 << 6); ; unint64_t i = __clz(__rbit64(v24)) + (v16 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v8, *(void *)(v30 + 48) + *(void *)(v3 + 72) * i, v2);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v8, 0, 1, v2);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1) {
      return (id)swift_release();
    }
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_1002A6030();
    id result = (id)(*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if (v20) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v23 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v23 >= v28) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v27 + 8 * v23);
    ++v16;
    if (!v24)
    {
      int64_t v16 = v23 + 1;
      if (v23 + 1 >= v28) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v27 + 8 * v16);
      if (!v24)
      {
        int64_t v16 = v23 + 2;
        if (v23 + 2 >= v28) {
          goto LABEL_23;
        }
        unint64_t v24 = *(void *)(v27 + 8 * v16);
        if (!v24) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v20 = (v24 - 1) & v24;
  }
  int64_t v25 = v23 + 3;
  if (v25 >= v28)
  {
LABEL_23:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v8, 1, 1, v2);
    return (id)swift_release();
  }
  unint64_t v24 = *(void *)(v27 + 8 * v25);
  if (v24)
  {
    int64_t v16 = v25;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v16 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v16 >= v28) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v27 + 8 * v16);
    ++v25;
    if (v24) {
      goto LABEL_19;
    }
  }
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for RemoveTemporaryPaperKitBundlesLaunchTask()
{
  return self;
}

uint64_t sub_1002A58FC()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_1002A5934()
{
  return sub_1002A5498(*(void **)(v0 + 16));
}

uint64_t sub_1002A593C()
{
  return _swift_deallocObject(v0, 32, 7);
}

unint64_t sub_1002A594C()
{
  unint64_t result = qword_1006A1BD8;
  if (!qword_1006A1BD8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1006A1BD8);
  }
  return result;
}

void *sub_1002A598C(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v49 = type metadata accessor for URL.DirectoryHint();
  uint64_t v4 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  id v48 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214(&qword_10069B310);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v69 = (char *)&v42 - v10;
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v51 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v61 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v53 = (char *)&v42 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  long long v47 = (char *)&v42 - v17;
  __chkstk_darwin(v16);
  unint64_t v50 = (char *)&v42 - v18;
  if (a1 >> 62)
  {
LABEL_25:
    swift_bridgeObjectRetain();
    uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
    if (v19) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v19 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v19)
    {
LABEL_3:
      uint64_t v42 = v2;
      unint64_t v60 = a1 & 0xC000000000000001;
      long long v65 = (void (**)(char *, char *, uint64_t))(v51 + 32);
      unsigned int v46 = enum case for URL.DirectoryHint.isDirectory(_:);
      id v45 = (void (**)(char *, void, uint64_t))(v4 + 104);
      id v44 = (void (**)(char *, uint64_t))(v4 + 8);
      uint64_t v43 = (void (**)(char *, uint64_t))(v51 + 8);
      long long v63 = (uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 48);
      long long v64 = _swiftEmptyArrayStorage;
      uint64_t v20 = 4;
      uint64_t v55 = v19;
      uint64_t v56 = (void (**)(char *, char *, uint64_t))(v51 + 56);
      unint64_t v54 = (v51 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      uint64_t v57 = (v51 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
      uint64_t v58 = v9;
      unint64_t v59 = a1;
      uint64_t v52 = v11;
      while (1)
      {
        if (v60) {
          id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v21 = *(id *)(a1 + 8 * v20);
        }
        id v22 = v21;
        if (__OFADD__(v20 - 4, 1))
        {
          __break(1u);
          goto LABEL_25;
        }
        uint64_t v66 = v20 - 3;
        id v23 = [v21 identifier];
        if (v23)
        {
          unint64_t v24 = v23;
          id v62 = v22;
          id v25 = [self sharedInstance];
          id v26 = [v25 applicationDocumentsURLForAccountIdentifier:v24];

          uint64_t v27 = v53;
          static URL._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v4 = (uint64_t)v65;
          int64_t v28 = *v65;
          (*v65)(v9, v27, v11);
          uint64_t v2 = *v56;
          ((void (*)(char *, void, uint64_t, uint64_t))*v56)(v9, 0, 1, v11);
          uint64_t v29 = *v63;
          if ((*v63)(v9, 1, v11) != 1)
          {
            uint64_t v31 = v47;
            v28(v47, v9, v52);
            uint64_t v67 = 7368052;
            unint64_t v68 = 0xE300000000000000;
            BOOL v32 = v48;
            uint64_t v33 = v49;
            uint64_t v4 = (uint64_t)v69;
            (*v45)(v48, v46, v49);
            sub_10017B588();
            URL.appending<A>(path:directoryHint:)();
            (*v44)(v32, v33);
            swift_bridgeObjectRelease();
            BOOL v34 = v31;
            uint64_t v11 = v52;
            uint64_t v19 = v55;
            (*v43)(v34, v52);
            ((void (*)(uint64_t, void, uint64_t, uint64_t))v2)(v4, 0, 1, v11);

            int v30 = v29(v69, 1, v11);
            goto LABEL_16;
          }
          sub_10002B754((uint64_t)v9, &qword_10069B310);
          id v22 = v62;
        }
        else
        {
          uint64_t v2 = *v56;
        }
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v2)(v69, 1, 1, v11);

        int v30 = (*v63)(v69, 1, v11);
LABEL_16:
        if (v30 == 1)
        {
          sub_10002B754((uint64_t)v69, &qword_10069B310);
          uint64_t v9 = v58;
          a1 = v59;
        }
        else
        {
          uint64_t v4 = (uint64_t)v65;
          uint64_t v2 = *v65;
          uint64_t v35 = v50;
          (*v65)(v50, v69, v11);
          v2(v61, v35, v11);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v9 = v58;
          a1 = v59;
          if (isUniquelyReferenced_nonNull_native) {
            unint64_t v37 = (unint64_t)v64;
          }
          else {
            unint64_t v37 = sub_1001A8BDC(0, v64[2] + 1, 1, (unint64_t)v64);
          }
          unint64_t v39 = *(void *)(v37 + 16);
          unint64_t v38 = *(void *)(v37 + 24);
          if (v39 >= v38 >> 1) {
            unint64_t v37 = sub_1001A8BDC(v38 > 1, v39 + 1, 1, v37);
          }
          *(void *)(v37 + 16) = v39 + 1;
          unint64_t v40 = (*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
          long long v64 = (void *)v37;
          v2((char *)(v37 + v40 + *(void *)(v51 + 72) * v39), v61, v11);
          uint64_t v19 = v55;
        }
        ++v20;
        if (v66 == v19)
        {
          swift_bridgeObjectRelease();
          return v64;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1002A6030()
{
  uint64_t v66 = type metadata accessor for Logger();
  uint64_t v0 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  uint64_t v2 = (char *)&v56 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = type metadata accessor for CocoaError.Code();
  uint64_t v3 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v72 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002F214((uint64_t *)&unk_10069C990);
  __chkstk_darwin(v5 - 8);
  uint64_t v77 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10002F214(&qword_10069B310);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v67 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v76 = (char *)&v56 - v15;
  __chkstk_darwin(v14);
  uint64_t v81 = (char *)&v56 - v16;
  id v74 = [self defaultManager];
  uint64_t v17 = NSFileManager.enumerator(at:includingPropertiesForKeys:options:errorHandler:)();
  uint64_t v71 = v11;
  if (v17)
  {
    uint64_t v69 = v2;
    uint64_t v68 = 0;
    uint64_t v19 = (void (**)(char *, void, uint64_t, uint64_t))(v11 + 56);
    uint64_t v79 = (void (**)(char *, char *, uint64_t))(v11 + 32);
    uint64_t v20 = v11;
    id v21 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    id v22 = (void (**)(void, void))(v20 + 8);
    uint64_t v70 = (void (**)(char *, uint64_t))(v3 + 8);
    long long v65 = (void (**)(char *, char *, uint64_t))(v20 + 16);
    long long v64 = (void (**)(char *, uint64_t))(v0 + 8);
    long long v63 = (char *)v82 + 8;
    uint64_t v80 = (char *)&type metadata for Any + 8;
    *(void *)&long long v18 = 136315394;
    long long v62 = v18;
    id v23 = v81;
    uint64_t v75 = v21;
    while (1)
    {
      if ([v17 nextObject])
      {
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v82, 0, sizeof(v82));
      }
      sub_1001BC02C((uint64_t)v82, (uint64_t)&v83);
      if (!*((void *)&v84 + 1)) {
        goto LABEL_22;
      }
      int v25 = swift_dynamicCast();
      (*v19)(v9, v25 ^ 1u, 1, v10);
      if ((*v21)(v9, 1, v10) == 1) {
        goto LABEL_23;
      }
      id v26 = v22;
      (*v79)(v23, v9, v10);
      *(void *)&long long v83 = URL.pathExtension.getter();
      *((void *)&v83 + 1) = v27;
      *(void *)&v82[0] = 0x656C646E7562;
      *((void *)&v82[0] + 1) = 0xE600000000000000;
      sub_10017B588();
      uint64_t v28 = StringProtocol.caseInsensitiveCompare<A>(_:)();
      swift_bridgeObjectRelease();
      if (v28) {
        break;
      }
      uint64_t v29 = v19;
      int v30 = v17;
      uint64_t v31 = v76;
      URL.deletingPathExtension()();
      URL.lastPathComponent.getter();
      uint64_t v78 = (void (*)(char *, uint64_t))*v22;
      v78(v31, v10);
      uint64_t v32 = (uint64_t)v77;
      UUID.init(uuidString:)();
      swift_bridgeObjectRelease();
      uint64_t v33 = type metadata accessor for UUID();
      int v34 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 48))(v32, 1, v33);
      sub_10002B754(v32, (uint64_t *)&unk_10069C990);
      if (v34 == 1)
      {
        uint64_t v17 = v30;
        uint64_t v19 = v29;
        id v21 = v75;
        unint64_t v24 = v78;
LABEL_4:
        id v23 = v81;
        v24(v81, v10);
      }
      else
      {
        URL._bridgeToObjectiveC()(v35);
        unint64_t v37 = v36;
        *(void *)&long long v83 = 0;
        unsigned int v38 = [v74 removeItemAtURL:v36 error:&v83];

        uint64_t v17 = v30;
        if (v38)
        {
          id v39 = (id)v83;
          v78(v23, v10);
          uint64_t v19 = v29;
          id v21 = v75;
        }
        else
        {
          id v40 = (id)v83;
          uint64_t v41 = _convertNSErrorToError(_:)();

          swift_willThrow();
          swift_errorRetain();
          uint64_t v42 = v72;
          static CocoaError.fileNoSuchFile.getter();
          sub_1002A6B40(&qword_1006A1BE0, (void (*)(uint64_t))&type metadata accessor for CocoaError.Code);
          uint64_t v43 = v73;
          LOBYTE(v40) = static _ErrorCodeProtocol.~= infix(_:_:)();
          swift_errorRelease();
          (*v70)(v42, v43);
          uint64_t v19 = v29;
          if (v40)
          {
            id v23 = v81;
            id v22 = v26;
            v78(v81, v10);
            swift_errorRelease();
            uint64_t v68 = 0;
            id v21 = v75;
          }
          else
          {
            Logger.init(subsystem:category:)();
            id v44 = v67;
            id v23 = v81;
            (*v65)(v67, v81, v10);
            swift_errorRetain();
            swift_errorRetain();
            id v45 = Logger.logObject.getter();
            os_log_type_t v46 = static os_log_type_t.error.getter();
            int v61 = v46;
            BOOL v47 = os_log_type_enabled(v45, v46);
            id v21 = v75;
            if (v47)
            {
              uint64_t v48 = swift_slowAlloc();
              unint64_t v59 = (void *)swift_slowAlloc();
              uint64_t v60 = swift_slowAlloc();
              *(void *)&long long v83 = v60;
              *(_DWORD *)uint64_t v48 = v62;
              uint64_t v57 = v48 + 4;
              sub_1002A6B40(&qword_1006A10C8, (void (*)(uint64_t))&type metadata accessor for URL);
              os_log_t v58 = v45;
              uint64_t v49 = dispatch thunk of CustomStringConvertible.description.getter();
              *(void *)&v82[0] = sub_10045DA1C(v49, v50, (uint64_t *)&v83);
              uint64_t v68 = v41;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              v78(v44, v10);
              *(_WORD *)(v48 + 12) = 2112;
              uint64_t v57 = v48 + 14;
              swift_errorRetain();
              uint64_t v51 = _swift_stdlib_bridgeErrorToNSError();
              *(void *)&v82[0] = v51;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              *unint64_t v59 = v51;
              id v22 = v26;
              swift_errorRelease();
              swift_errorRelease();
              os_log_t v52 = v58;
              _os_log_impl((void *)&_mh_execute_header, v58, (os_log_type_t)v61, "RemoveTemporaryPaperKitBundlesLaunchTask failed to remove %s - error: %@", (uint8_t *)v48, 0x16u);
              sub_10002F214(&qword_10069FD50);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              swift_errorRelease();
              (*v64)(v69, v66);
              id v23 = v81;
              v78(v81, v10);
            }
            else
            {

              swift_errorRelease();
              swift_errorRelease();
              uint64_t v53 = v44;
              id v22 = v26;
              unint64_t v54 = v78;
              v78(v53, v10);
              swift_errorRelease();
              (*v64)(v69, v66);
              v54(v23, v10);
            }
            uint64_t v68 = 0;
          }
        }
      }
    }
    unint64_t v24 = (void (*)(char *, uint64_t))*v22;
    goto LABEL_4;
  }
  long long v83 = 0u;
  long long v84 = 0u;
LABEL_22:
  sub_10002B754((uint64_t)&v83, &qword_10069B4D0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v71 + 56))(v9, 1, 1, v10);
LABEL_23:

  return sub_10002B754((uint64_t)v9, &qword_10069B310);
}

uint64_t sub_1002A6B40(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL FastSync.JoinActivityAction.isRelatedTo(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3 == a1;
}

uint64_t FastSync.JoinActivityAction.activity.getter()
{
  return dispatch thunk of GroupSessionProvider.activity.getter();
}

uint64_t FastSync.LeaveActivityAction.isRelatedTo(_:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for EditNoteActivity();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FastSync.LeaveActivityAction(0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v1 + *(int *)(v9 + 28);
  char v13 = *(unsigned char *)(v12 + 16);
  long long v17 = *(_OWORD *)v12;
  char v18 = v13;
  sub_10002F214(&qword_1006A1BE8);
  Result.value.getter();
  uint64_t v14 = v19;
  swift_getObjectType();
  if (!v14)
  {
    sub_1002A9E28(v2, (uint64_t)v11, type metadata accessor for FastSync.LeaveActivityAction);
    goto LABEL_5;
  }
  swift_unknownObjectRelease();
  sub_1002A9E28(v2, (uint64_t)v11, type metadata accessor for FastSync.LeaveActivityAction);
  if (v14 != a1)
  {
LABEL_5:
    dispatch thunk of GroupSessionProvider.activity.getter();
    char v15 = static EditNoteActivity.== infix(_:_:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    goto LABEL_6;
  }
  char v15 = 1;
LABEL_6:
  sub_1002A9E90((uint64_t)v11, type metadata accessor for FastSync.LeaveActivityAction);
  return v15 & 1;
}

uint64_t type metadata accessor for FastSync.LeaveActivityAction(uint64_t a1)
{
  return sub_10002EFBC(a1, qword_1006A1C70);
}

uint64_t FastSync.JoinActivityAction.perform()()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1006A1BF8 + dword_1006A1BF8);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1002A6E98;
  return v3();
}

uint64_t sub_1002A6E98(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v3;
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
  if (v2)
  {
    return v6();
  }
  else
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    uint64_t v8 = swift_unknownObjectRetain();
    return v9(v8, a2);
  }
}

uint64_t FastSync.LeaveActivityAction.activity.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for EditNoteActivity();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t FastSync.LeaveActivityAction.perform()()
{
  v1[22] = v0;
  v1[23] = sub_10002F214(&qword_1006A1C08);
  v1[24] = swift_task_alloc();
  v1[25] = swift_task_alloc();
  v1[26] = swift_task_alloc();
  v1[27] = swift_task_alloc();
  v1[28] = swift_task_alloc();
  v1[29] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for CancellationError();
  v1[30] = v2;
  v1[31] = *(void *)(v2 - 8);
  v1[32] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for GroupSessionProviderState();
  v1[33] = v3;
  v1[34] = *(void *)(v3 - 8);
  v1[35] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for EditNoteActivity();
  v1[36] = v4;
  v1[37] = *(void *)(v4 - 8);
  v1[38] = swift_task_alloc();
  v1[39] = swift_task_alloc();
  v1[40] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Logger();
  v1[41] = v5;
  v1[42] = *(void *)(v5 - 8);
  v1[43] = swift_task_alloc();
  v1[44] = swift_task_alloc();
  v1[45] = swift_task_alloc();
  return _swift_task_switch(sub_1002A72C8, 0, 0);
}

uint64_t sub_1002A72C8()
{
  uint64_t v114 = v0;
  uint64_t v1 = (void *)v0;
  uint64_t v3 = v0 + 176;
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v4 = type metadata accessor for FastSync.LeaveActivityAction(0);
  uint64_t v5 = *(int *)(v4 + 24);
  *(_DWORD *)(v0 + 392) = v5;
  if ((*(unsigned char *)(v2 + v5) & 1) == 0)
  {
    uint64_t v8 = (void *)(v0 + 88);
    *(void *)(v0 + 88) = 0;
    *(void *)(v0 + 96) = 0;
    uint64_t v9 = (long long *)(v2 + *(int *)(v4 + 20));
    long long v10 = *v9;
    uint64_t v11 = *(void *)v9;
    if (*((unsigned char *)v9 + 16) == 1)
    {
      *(void *)(v0 + 152) = v10;
      swift_errorRetain();
      sub_10002F214(&qword_1006A3D90);
      swift_willThrowTypedImpl();
      *(void *)(v0 + 144) = v11;
      swift_errorRetain();
      sub_10002F214(&qword_1006A3D90);
      if ((swift_dynamicCast() & 1) == 0)
      {
        uint64_t v28 = *(int *)(v0 + 392);
        uint64_t v29 = *(void *)(v0 + 176);
        swift_errorRelease();
        swift_unknownObjectRelease();
        *(unsigned char *)(v29 + v28) = 1;
        goto LABEL_12;
      }
      swift_errorRelease();
      swift_beginAccess();
      if (*v8)
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        dispatch thunk of GroupSessionProvider.state.getter();
        swift_unknownObjectRelease();
        CurrentValueSubject.value.getter();
        swift_release();
        uint64_t v12 = 0;
      }
      else
      {
        uint64_t v12 = 1;
      }
      uint64_t v39 = *(void *)(v0 + 264);
      uint64_t v40 = *(void *)(v0 + 272);
      uint64_t v42 = v1[28];
      uint64_t v41 = v1[29];
      (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v1[34] + 56))(v41, v12, 1, v1[33]);
      sub_1002A9D40(v41, v42);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v42, 1, v39) == 1)
      {
        uint64_t v43 = v1[28];
        sub_1002A9DA8(v1[29]);
        uint64_t v44 = v43;
LABEL_37:
        sub_1002A9DA8(v44);
        (*(void (**)(void, void))(v1[31] + 8))(v1[32], v1[30]);
        swift_errorRelease();
        swift_unknownObjectRelease();
        *(unsigned char *)(v1[22] + *((int *)v1 + 98)) = 1;
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        int v30 = (uint64_t (*)(void))v1[1];
        goto LABEL_13;
      }
      uint64_t v45 = v1[33];
      uint64_t v46 = v1[34];
      uint64_t v47 = v1[27];
      sub_1002A9D40(v1[28], v47);
      int v48 = (*(uint64_t (**)(uint64_t, uint64_t))(v46 + 88))(v47, v45);
      if (v48 == enum case for GroupSessionProviderState.invalidated(_:))
      {
        uint64_t v49 = v1[33];
        uint64_t v50 = v1[34];
        uint64_t v51 = v1[28];
        uint64_t v52 = v1[27];
        sub_1002A9DA8(v1[29]);
        (*(void (**)(uint64_t, uint64_t))(v50 + 96))(v52, v49);
        swift_errorRelease();
        uint64_t v44 = v51;
        goto LABEL_37;
      }
      uint64_t v53 = (unint64_t *)(v3 - 56);
      if (v48 != enum case for GroupSessionProviderState.waiting(_:)
        && v48 != enum case for GroupSessionProviderState.joined(_:))
      {
        uint64_t v54 = v1[29];
        uint64_t v55 = v1[24];
        (*(void (**)(void, void))(v1[34] + 8))(v1[27], v1[33]);
        static Logger.realtimeCollaboration.getter();
        sub_1002A9D40(v54, v55);
        uint64_t v56 = Logger.logObject.getter();
        os_log_type_t v57 = static os_log_type_t.error.getter();
        if (!os_log_type_enabled(v56, v57))
        {
          uint64_t v90 = v1[42];
          uint64_t v89 = v1[43];
          uint64_t v91 = v1[41];
          uint64_t v92 = v1[29];
          uint64_t v93 = v1[24];

          sub_1002A9DA8(v93);
          (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v89, v91);
          uint64_t v68 = v92;
          goto LABEL_36;
        }
        os_log_type_t v108 = v57;
        uint64_t v58 = swift_slowAlloc();
        uint64_t v16 = swift_slowAlloc();
        uint64_t v112 = v16;
        *(_DWORD *)uint64_t v58 = 136315394;
        if (*v8)
        {
          uint64_t v98 = v1[42];
          uint64_t v103 = v1[41];
          uint64_t v106 = v1[43];
          uint64_t v60 = v1[37];
          uint64_t v59 = v1[38];
          uint64_t v61 = v1[36];
          uint64_t v101 = v1[29];
          uint64_t v62 = v1[25];
          uint64_t v95 = v1[24];
          swift_getObjectType();
          swift_unknownObjectRetain();
          dispatch thunk of GroupSessionProvider.activity.getter();
          swift_unknownObjectRelease();
          sub_1001D3F74(&qword_10069E5C8, (void (*)(uint64_t))&type metadata accessor for EditNoteActivity);
          uint64_t v63 = dispatch thunk of CustomStringConvertible.description.getter();
          unint64_t v65 = v64;
          (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v59, v61);
          v1[13] = sub_10045DA1C(v63, v65, &v112);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          *(_WORD *)(v58 + 12) = 2080;
          sub_1002A9D40(v95, v62);
          uint64_t v66 = String.init<A>(reflecting:)();
          v1[14] = sub_10045DA1C(v66, v67, &v112);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_1002A9DA8(v95);
          _os_log_impl((void *)&_mh_execute_header, v56, v108, "%s: GroupSessionProvider is in an unknown state: %s", (uint8_t *)v58, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v106, v103);
          uint64_t v68 = v101;
LABEL_36:
          sub_1002A9DA8(v68);
          uint64_t v44 = v1[28];
          goto LABEL_37;
        }
        goto LABEL_42;
      }
      uint64_t v69 = v1[29];
      uint64_t v70 = v1[26];
      sub_1002A9DA8(v1[28]);
      sub_1002A9D40(v69, v70);
      static Logger.realtimeCollaboration.getter();
      os_log_type_t v71 = static os_log_type_t.fault.getter();
      uint64_t v72 = Logger.logObject.getter();
      if (!os_log_type_enabled(v72, v71))
      {
        uint64_t v84 = v1[44];
        uint64_t v85 = v1[41];
        uint64_t v86 = v1[42];
        uint64_t v87 = v1[29];
        uint64_t v88 = v1[26];

        sub_1002A9DA8(v88);
        (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v84, v85);
        uint64_t v44 = v87;
        goto LABEL_37;
      }
      os_log_type_t v109 = v71;
      uint64_t v110 = v72;
      uint64_t v73 = (void *)(v3 - 48);
      uint64_t v74 = swift_slowAlloc();
      uint64_t v111 = swift_slowAlloc();
      *(_DWORD *)uint64_t v74 = 136315650;
      uint64_t v75 = StaticString.description.getter();
      *uint64_t v53 = sub_10045DA1C(v75, v76, &v111);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v74 + 12) = 2048;
      *uint64_t v73 = 117;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v74 + 22) = 2080;
      uint64_t v112 = 0;
      unint64_t v113 = 0xE000000000000000;
      _StringGuts.grow(_:)(78);
      if (*v8)
      {
        uint64_t v102 = v1[41];
        uint64_t v104 = v1[44];
        uint64_t v77 = v1[39];
        uint64_t v78 = v1[37];
        uint64_t v79 = v1[36];
        uint64_t v96 = v1[42];
        uint64_t v99 = v1[29];
        uint64_t v80 = v1[25];
        uint64_t v94 = v1[26];
        swift_getObjectType();
        swift_unknownObjectRetain();
        dispatch thunk of GroupSessionProvider.activity.getter();
        swift_unknownObjectRelease();
        sub_1001D3F74(&qword_10069E5C8, (void (*)(uint64_t))&type metadata accessor for EditNoteActivity);
        v81._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v81);
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v77, v79);
        v82._object = (void *)0x8000000100556C10;
        v82._countAndFlagsBits = 0xD00000000000004ALL;
        String.append(_:)(v82);
        sub_1002A9D40(v94, v80);
        v83._countAndFlagsBits = String.init<A>(reflecting:)();
        String.append(_:)(v83);
        swift_bridgeObjectRelease();
        v1[17] = sub_10045DA1C(v112, v113, &v111);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v110, v109, "Failed assertion at %s:%lu: %s", (uint8_t *)v74, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        sub_1002A9DA8(v94);
        (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v104, v102);
        uint64_t v44 = v99;
        goto LABEL_37;
      }
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return GroupSessionProvider.leave()(v16, v17);
    }
    *(_OWORD *)(v0 + 88) = v10;
    swift_unknownObjectRetain();
    static Logger.realtimeCollaboration.getter();
    char v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v13, v14))
    {
      os_log_type_t v105 = v14;
      log = v13;
      uint64_t v15 = swift_slowAlloc();
      uint64_t v112 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136315394;
      uint64_t v16 = swift_beginAccess();
      if (!*v8)
      {
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
      uint64_t v18 = *(void *)(v0 + 320);
      uint64_t v19 = (void *)v0;
      uint64_t v21 = *(void *)(v0 + 288);
      uint64_t v20 = *(void *)(v0 + 296);
      swift_getObjectType();
      swift_unknownObjectRetain();
      dispatch thunk of GroupSessionProvider.activity.getter();
      swift_unknownObjectRelease();
      sub_1001D3F74(&qword_10069E5C8, (void (*)(uint64_t))&type metadata accessor for EditNoteActivity);
      uint64_t v22 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v24 = v23;
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v21);
      v19[20] = sub_10045DA1C(v22, v24, &v112);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v16 = swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 12) = 2080;
      if (!v19[11])
      {
LABEL_40:
        __break(1u);
        goto LABEL_41;
      }
      uint64_t v25 = v19[42];
      uint64_t v97 = v19[41];
      uint64_t v100 = v19[45];
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v1 = v19;
      dispatch thunk of GroupSessionProvider.state.getter();
      swift_unknownObjectRelease();
      CurrentValueSubject.value.getter();
      swift_release();
      uint64_t v26 = String.init<A>(reflecting:)();
      v19[21] = sub_10045DA1C(v26, v27, &v112);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, log, v105, "%s: About to leave group session provider in state: %s", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v100, v97);
    }
    else
    {
      uint64_t v32 = *(void *)(v0 + 360);
      uint64_t v34 = *(void *)(v0 + 328);
      uint64_t v33 = *(void *)(v0 + 336);

      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
    }
    uint64_t v16 = swift_beginAccess();
    uint64_t v35 = v1[11];
    v1[46] = v35;
    if (v35)
    {
      uint64_t v36 = v1[12];
      uint64_t ObjectType = swift_getObjectType();
      swift_unknownObjectRetain();
      unsigned int v38 = (void *)swift_task_alloc();
      v1[47] = v38;
      *unsigned int v38 = v1;
      v38[1] = sub_1002A817C;
      uint64_t v16 = ObjectType;
      uint64_t v17 = v36;
      return GroupSessionProvider.leave()(v16, v17);
    }
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v6 = type metadata accessor for FastSyncError();
  sub_1001D3F74(&qword_1006A76A0, (void (*)(uint64_t))&type metadata accessor for FastSyncError);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v6 - 8) + 104))(v7, enum case for FastSyncError.leaveSessionMoreThanOnce(_:), v6);
  swift_willThrow();
LABEL_12:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int v30 = (uint64_t (*)(void))v1[1];
LABEL_13:
  return v30();
}

uint64_t sub_1002A817C()
{
  *(void *)(*(void *)v1 + 384) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1002A83CC;
  }
  else {
    uint64_t v2 = sub_1002A8290;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002A8290()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  *(unsigned char *)(*(void *)(v0 + 176) + *(int *)(v0 + 392)) = 1;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1002A83CC()
{
  uint64_t v75 = v0;
  swift_unknownObjectRelease();
  *(void *)(v0 + 144) = *(void *)(v0 + 384);
  swift_errorRetain();
  sub_10002F214(&qword_1006A3D90);
  if (swift_dynamicCast())
  {
    uint64_t v1 = (void *)(v0 + 88);
    swift_errorRelease();
    swift_beginAccess();
    if (*(void *)(v0 + 88))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      dispatch thunk of GroupSessionProvider.state.getter();
      swift_unknownObjectRelease();
      CurrentValueSubject.value.getter();
      swift_release();
      uint64_t v2 = 0;
    }
    else
    {
      uint64_t v2 = 1;
    }
    uint64_t v6 = *(void *)(v0 + 264);
    uint64_t v7 = *(void *)(v0 + 272);
    uint64_t v9 = *(void *)(v0 + 224);
    uint64_t v8 = *(void *)(v0 + 232);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v8, v2, 1, v6);
    sub_1002A9D40(v8, v9);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6) == 1)
    {
      uint64_t v10 = *(void *)(v0 + 224);
      sub_1002A9DA8(*(void *)(v0 + 232));
      uint64_t v11 = v10;
LABEL_21:
      sub_1002A9DA8(v11);
      (*(void (**)(void, void))(*(void *)(v0 + 248) + 8))(*(void *)(v0 + 256), *(void *)(v0 + 240));
      swift_errorRelease();
      swift_unknownObjectRelease();
      *(unsigned char *)(*(void *)(v0 + 176) + *(int *)(v0 + 392)) = 1;
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v5 = *(void (**)(void))(v0 + 8);
      goto LABEL_22;
    }
    uint64_t v12 = *(void *)(v0 + 264);
    uint64_t v13 = *(void *)(v0 + 272);
    uint64_t v14 = *(void *)(v0 + 216);
    sub_1002A9D40(*(void *)(v0 + 224), v14);
    int v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 88))(v14, v12);
    if (v15 == enum case for GroupSessionProviderState.invalidated(_:))
    {
      uint64_t v16 = *(void *)(v0 + 264);
      uint64_t v17 = *(void *)(v0 + 272);
      uint64_t v18 = *(void *)(v0 + 224);
      uint64_t v19 = *(void *)(v0 + 216);
      sub_1002A9DA8(*(void *)(v0 + 232));
      (*(void (**)(uint64_t, uint64_t))(v17 + 96))(v19, v16);
      swift_errorRelease();
      uint64_t v11 = v18;
      goto LABEL_21;
    }
    if (v15 == enum case for GroupSessionProviderState.waiting(_:)
      || v15 == enum case for GroupSessionProviderState.joined(_:))
    {
      uint64_t v35 = *(void *)(v0 + 232);
      uint64_t v36 = *(void *)(v0 + 208);
      sub_1002A9DA8(*(void *)(v0 + 224));
      sub_1002A9D40(v35, v36);
      static Logger.realtimeCollaboration.getter();
      os_log_type_t v37 = static os_log_type_t.fault.getter();
      unsigned int v38 = Logger.logObject.getter();
      if (!os_log_type_enabled(v38, v37))
      {
        uint64_t v49 = *(void *)(v0 + 352);
        uint64_t v50 = *(void *)(v0 + 328);
        uint64_t v51 = *(void *)(v0 + 336);
        uint64_t v52 = *(void *)(v0 + 232);
        uint64_t v53 = *(void *)(v0 + 208);

        sub_1002A9DA8(v53);
        (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v49, v50);
        uint64_t v11 = v52;
        goto LABEL_21;
      }
      os_log_type_t v70 = v37;
      log = v38;
      uint64_t v39 = swift_slowAlloc();
      uint64_t v72 = swift_slowAlloc();
      *(_DWORD *)uint64_t v39 = 136315650;
      uint64_t v40 = StaticString.description.getter();
      *(void *)(v0 + 120) = sub_10045DA1C(v40, v41, &v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 12) = 2048;
      *(void *)(v0 + 128) = 117;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v39 + 22) = 2080;
      uint64_t v73 = 0;
      unint64_t v74 = 0xE000000000000000;
      _StringGuts.grow(_:)(78);
      if (*v1)
      {
        uint64_t v65 = *(void *)(v0 + 328);
        uint64_t v67 = *(void *)(v0 + 352);
        uint64_t v42 = *(void *)(v0 + 312);
        uint64_t v43 = *(void *)(v0 + 288);
        uint64_t v44 = *(void *)(v0 + 296);
        uint64_t v61 = *(void *)(v0 + 336);
        uint64_t v63 = *(void *)(v0 + 232);
        uint64_t v45 = *(void *)(v0 + 200);
        uint64_t v59 = *(void *)(v0 + 208);
        swift_getObjectType();
        swift_unknownObjectRetain();
        dispatch thunk of GroupSessionProvider.activity.getter();
        swift_unknownObjectRelease();
        sub_1001D3F74(&qword_10069E5C8, (void (*)(uint64_t))&type metadata accessor for EditNoteActivity);
        v46._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v46);
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v42, v43);
        v47._object = (void *)0x8000000100556C10;
        v47._countAndFlagsBits = 0xD00000000000004ALL;
        String.append(_:)(v47);
        sub_1002A9D40(v59, v45);
        v48._countAndFlagsBits = String.init<A>(reflecting:)();
        String.append(_:)(v48);
        swift_bridgeObjectRelease();
        *(void *)(v0 + 136) = sub_10045DA1C(v73, v74, &v72);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, log, v70, "Failed assertion at %s:%lu: %s", (uint8_t *)v39, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        sub_1002A9DA8(v59);
        (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v67, v65);
        uint64_t v11 = v63;
        goto LABEL_21;
      }
      __break(1u);
    }
    else
    {
      uint64_t v20 = *(void *)(v0 + 232);
      uint64_t v21 = *(void *)(v0 + 192);
      (*(void (**)(void, void))(*(void *)(v0 + 272) + 8))(*(void *)(v0 + 216), *(void *)(v0 + 264));
      static Logger.realtimeCollaboration.getter();
      sub_1002A9D40(v20, v21);
      uint64_t v22 = Logger.logObject.getter();
      os_log_type_t v23 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v22, v23))
      {
        uint64_t v55 = *(void *)(v0 + 336);
        uint64_t v54 = *(void *)(v0 + 344);
        uint64_t v56 = *(void *)(v0 + 328);
        uint64_t v57 = *(void *)(v0 + 232);
        uint64_t v58 = *(void *)(v0 + 192);

        sub_1002A9DA8(v58);
        (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v54, v56);
        uint64_t v34 = v57;
        goto LABEL_20;
      }
      os_log_type_t v69 = v23;
      uint64_t v24 = swift_slowAlloc();
      uint64_t v73 = swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 136315394;
      if (*v1)
      {
        uint64_t v62 = *(void *)(v0 + 336);
        uint64_t v66 = *(void *)(v0 + 328);
        uint64_t v68 = *(void *)(v0 + 344);
        uint64_t v26 = *(void *)(v0 + 296);
        uint64_t v25 = *(void *)(v0 + 304);
        uint64_t v27 = *(void *)(v0 + 288);
        uint64_t v64 = *(void *)(v0 + 232);
        uint64_t v28 = *(void *)(v0 + 200);
        uint64_t v60 = *(void *)(v0 + 192);
        swift_getObjectType();
        swift_unknownObjectRetain();
        dispatch thunk of GroupSessionProvider.activity.getter();
        swift_unknownObjectRelease();
        sub_1001D3F74(&qword_10069E5C8, (void (*)(uint64_t))&type metadata accessor for EditNoteActivity);
        uint64_t v29 = dispatch thunk of CustomStringConvertible.description.getter();
        unint64_t v31 = v30;
        (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
        *(void *)(v0 + 104) = sub_10045DA1C(v29, v31, &v73);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v24 + 12) = 2080;
        sub_1002A9D40(v60, v28);
        uint64_t v32 = String.init<A>(reflecting:)();
        *(void *)(v0 + 112) = sub_10045DA1C(v32, v33, &v73);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_1002A9DA8(v60);
        _os_log_impl((void *)&_mh_execute_header, v22, v69, "%s: GroupSessionProvider is in an unknown state: %s", (uint8_t *)v24, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v68, v66);
        uint64_t v34 = v64;
LABEL_20:
        sub_1002A9DA8(v34);
        uint64_t v11 = *(void *)(v0 + 224);
        goto LABEL_21;
      }
    }
    __break(1u);
    return;
  }
  uint64_t v3 = *(int *)(v0 + 392);
  uint64_t v4 = *(void *)(v0 + 176);
  swift_errorRelease();
  swift_unknownObjectRelease();
  *(unsigned char *)(v4 + v3) = 1;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(void (**)(void))(v0 + 8);
LABEL_22:
  v5();
}

uint64_t FastSync.PresenceAction.perform(onJoinActivity:onLeaveActivity:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[8] = a4;
  v5[9] = v4;
  v5[6] = a2;
  v5[7] = a3;
  v5[5] = a1;
  type metadata accessor for FastSync.LeaveActivityAction(0);
  v5[10] = swift_task_alloc();
  v5[11] = type metadata accessor for FastSync.PresenceAction(0);
  v5[12] = swift_task_alloc();
  return _swift_task_switch(sub_1002A8E90, 0, 0);
}

uint64_t sub_1002A8E90()
{
  sub_1002A9E28(*(void *)(v0 + 72), *(void *)(v0 + 96), type metadata accessor for FastSync.PresenceAction);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v1 = *(int **)(v0 + 56);
    sub_1001D3B78(*(void *)(v0 + 96), *(void *)(v0 + 80));
    uint64_t v9 = (uint64_t (*)(uint64_t))((char *)v1 + *v1);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 120) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1002A9214;
    uint64_t v3 = *(void *)(v0 + 80);
  }
  else
  {
    uint64_t v4 = *(void *)(v0 + 96);
    char v5 = *(unsigned char *)(v4 + 16);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)v4;
    uint64_t v6 = *(int **)(v0 + 40);
    *(unsigned char *)(v0 + 32) = v5;
    uint64_t v9 = (uint64_t (*)(uint64_t))((char *)v6 + *v6);
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_1002A904C;
    uint64_t v3 = v0 + 16;
  }
  return v9(v3);
}

uint64_t sub_1002A904C()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1002A9404;
  }
  else {
    uint64_t v2 = sub_1002A9160;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002A9160()
{
  uint64_t v1 = *(void *)(v0 + 72);
  sub_1002A9E90(v1, type metadata accessor for FastSync.PresenceAction);
  char v2 = *(unsigned char *)(v0 + 32);
  *(_OWORD *)uint64_t v1 = *(_OWORD *)(v0 + 16);
  *(unsigned char *)(v1 + 16) = v2;
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1002A9214()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0) {
    char v2 = sub_1002A94B8;
  }
  else {
    char v2 = sub_1002A9328;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002A9328()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[9];
  sub_1002A9E90(v2, type metadata accessor for FastSync.PresenceAction);
  sub_1002A9E28(v1, v2, type metadata accessor for FastSync.LeaveActivityAction);
  swift_storeEnumTagMultiPayload();
  sub_1002A9E90(v1, type metadata accessor for FastSync.LeaveActivityAction);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1002A9404()
{
  uint64_t v1 = *(void *)(v0 + 72);
  sub_1002A9E90(v1, type metadata accessor for FastSync.PresenceAction);
  char v2 = *(unsigned char *)(v0 + 32);
  *(_OWORD *)uint64_t v1 = *(_OWORD *)(v0 + 16);
  *(unsigned char *)(v1 + 16) = v2;
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1002A94B8()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[9];
  sub_1002A9E90(v2, type metadata accessor for FastSync.PresenceAction);
  sub_1002A9E28(v1, v2, type metadata accessor for FastSync.LeaveActivityAction);
  swift_storeEnumTagMultiPayload();
  sub_1002A9E90(v1, type metadata accessor for FastSync.LeaveActivityAction);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1002A9594()
{
  v1[7] = v0;
  uint64_t v2 = type metadata accessor for Logger();
  v1[8] = v2;
  v1[9] = *(void *)(v2 - 8);
  v1[10] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for FastSyncError();
  v1[11] = v3;
  v1[12] = *(void *)(v3 - 8);
  v1[13] = swift_task_alloc();
  v1[14] = swift_task_alloc();
  return _swift_task_switch(sub_1002A96C0, 0, 0);
}

uint64_t sub_1002A96C0()
{
  unint64_t v30 = v0;
  uint64_t v1 = v0[7];
  if (*(unsigned char *)(v1 + 16))
  {
    uint64_t v2 = v0[13];
    uint64_t v3 = v0[14];
    uint64_t v4 = v0[11];
    uint64_t v5 = v0[12];
    (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v3, enum case for FastSyncError.joinSessionMoreThanOnce(_:), v4);
    uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    v6(v2, v3, v4);
    static Logger.realtimeCollaboration.getter();
    LOBYTE(v2) = static os_log_type_t.fault.getter();
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t type = v2;
    BOOL v8 = os_log_type_enabled(v7, (os_log_type_t)v2);
    uint64_t v10 = v0[12];
    uint64_t v9 = v0[13];
    uint64_t v11 = v0[10];
    uint64_t v28 = v0[11];
    uint64_t v12 = v0[8];
    uint64_t v13 = v0[9];
    if (v8)
    {
      uint64_t v26 = v6;
      uint64_t v14 = swift_slowAlloc();
      v29[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136315650;
      uint64_t v15 = StaticString.description.getter();
      v0[4] = sub_10045DA1C(v15, v16, v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2048;
      v0[5] = 49;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v14 + 22) = 2080;
      v0[2] = 0;
      v0[3] = 0xE000000000000000;
      _print_unlocked<A, B>(_:_:)();
      v0[6] = sub_10045DA1C(v0[2], v0[3], v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v7, type, "Failed assertion at %s:%lu: %s", (uint8_t *)v14, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v6 = v26;
      swift_slowDealloc();

      uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
      v17(v9, v28);
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    }
    else
    {

      uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
      v17(v9, v28);
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    }
    uint64_t v21 = v0[14];
    uint64_t v22 = v0[11];
    sub_1001D3F74(&qword_1006A76A0, (void (*)(uint64_t))&type metadata accessor for FastSyncError);
    swift_allocError();
    v6(v23, v21, v22);
    swift_willThrow();
    v17(v21, v22);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v24 = (uint64_t (*)(void))v0[1];
    return v24();
  }
  else
  {
    uint64_t v18 = *(void *)(v1 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v20 = (void *)swift_task_alloc();
    v0[15] = v20;
    *uint64_t v20 = v0;
    v20[1] = sub_1002A9B08;
    return GroupSessionProvider.join()(ObjectType, v18);
  }
}

uint64_t sub_1002A9B08()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1002A9CB4;
  }
  else {
    uint64_t v2 = sub_1002A9C1C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002A9C1C()
{
  uint64_t v1 = *(uint64_t **)(v0 + 56);
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  *((unsigned char *)v1 + 16) = 1;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v4(v2, v3);
}

uint64_t sub_1002A9CB4()
{
  *(unsigned char *)(*(void *)(v0 + 56) + 16) = 1;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002A9D40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002F214(&qword_1006A1C08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002A9DA8(uint64_t a1)
{
  uint64_t v2 = sub_10002F214(&qword_1006A1C08);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for FastSync.PresenceAction(uint64_t a1)
{
  return sub_10002EFBC(a1, qword_1006A1D20);
}

uint64_t sub_1002A9E28(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1002A9E90(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t _s18JoinActivityActionVwCP(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_unknownObjectRetain();
  return a1;
}

uint64_t _s18JoinActivityActionVwxx()
{
  return swift_unknownObjectRelease();
}

uint64_t _s18JoinActivityActionVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t _s18JoinActivityActionVwta(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for FastSync.JoinActivityAction()
{
  return &type metadata for FastSync.JoinActivityAction;
}

void *_s19LeaveActivityActionVwCP(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for EditNoteActivity();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(void *)v10;
    uint64_t v12 = *((void *)v10 + 1);
    char v13 = v10[16];
    sub_1001D3564(*(void *)v10, v12, v13);
    *(void *)uint64_t v9 = v11;
    *((void *)v9 + 1) = v12;
    v9[16] = v13;
    *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t _s19LeaveActivityActionVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EditNoteActivity();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = *(void *)v5;
  uint64_t v7 = *(void *)(v5 + 8);
  char v8 = *(unsigned char *)(v5 + 16);

  return sub_1001D3570(v6, v7, v8);
}

uint64_t _s19LeaveActivityActionVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for EditNoteActivity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  char v12 = *(unsigned char *)(v9 + 16);
  sub_1001D3564(*(void *)v9, v11, v12);
  *(void *)uint64_t v8 = v10;
  *(void *)(v8 + 8) = v11;
  *(unsigned char *)(v8 + 16) = v12;
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t _s19LeaveActivityActionVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for EditNoteActivity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  char v12 = *(unsigned char *)(v9 + 16);
  sub_1001D3564(*(void *)v9, v11, v12);
  uint64_t v13 = *(void *)v8;
  uint64_t v14 = *(void *)(v8 + 8);
  char v15 = *(unsigned char *)(v8 + 16);
  *(void *)uint64_t v8 = v10;
  *(void *)(v8 + 8) = v11;
  *(unsigned char *)(v8 + 16) = v12;
  sub_1001D3570(v13, v14, v15);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t _s19LeaveActivityActionVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for EditNoteActivity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(unsigned char *)(v9 + 16) = *(unsigned char *)(v10 + 16);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  return a1;
}

uint64_t _s19LeaveActivityActionVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for EditNoteActivity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 16);
  uint64_t v11 = *(void *)v8;
  uint64_t v12 = *(void *)(v8 + 8);
  char v13 = *(unsigned char *)(v8 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(unsigned char *)(v8 + 16) = v10;
  sub_1001D3570(v11, v12, v13);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t _s19LeaveActivityActionVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002AA424);
}

uint64_t sub_1002AA424(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for EditNoteActivity();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 16);
    if (v10 > 1) {
      return (v10 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t _s19LeaveActivityActionVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002AA4F8);
}

uint64_t sub_1002AA4F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for EditNoteActivity();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20) + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1002AA5B8()
{
  uint64_t result = type metadata accessor for EditNoteActivity();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s14PresenceActionOwCP(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *(void *)a1 = *a2;
    a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for EditNoteActivity();
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = type metadata accessor for FastSync.LeaveActivityAction(0);
      uint64_t v8 = *(int *)(v7 + 20);
      uint64_t v9 = a1 + v8;
      uint64_t v10 = (uint64_t)a2 + v8;
      uint64_t v11 = *(void *)v10;
      uint64_t v12 = *(void *)(v10 + 8);
      char v13 = *(unsigned char *)(v10 + 16);
      sub_1001D3564(*(void *)v10, v12, v13);
      *(void *)uint64_t v9 = v11;
      *(void *)(v9 + 8) = v12;
      *(unsigned char *)(v9 + 16) = v13;
      *(unsigned char *)(a1 + *(int *)(v7 + 24)) = *((unsigned char *)a2 + *(int *)(v7 + 24));
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
      swift_unknownObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t _s14PresenceActionOwxx(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = type metadata accessor for EditNoteActivity();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
    uint64_t v3 = a1 + *(int *)(type metadata accessor for FastSync.LeaveActivityAction(0) + 20);
    uint64_t v4 = *(void *)v3;
    uint64_t v5 = *(void *)(v3 + 8);
    char v6 = *(unsigned char *)(v3 + 16);
    return sub_1001D3570(v4, v5, v6);
  }
  else
  {
    return swift_unknownObjectRelease();
  }
}

uint64_t _s14PresenceActionOwcp(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for EditNoteActivity();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    uint64_t v5 = type metadata accessor for FastSync.LeaveActivityAction(0);
    uint64_t v6 = *(int *)(v5 + 20);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = a2 + v6;
    uint64_t v9 = *(void *)v8;
    uint64_t v10 = *(void *)(v8 + 8);
    char v11 = *(unsigned char *)(v8 + 16);
    sub_1001D3564(*(void *)v8, v10, v11);
    *(void *)uint64_t v7 = v9;
    *(void *)(v7 + 8) = v10;
    *(unsigned char *)(v7 + 16) = v11;
    *(unsigned char *)(a1 + *(int *)(v5 + 24)) = *(unsigned char *)(a2 + *(int *)(v5 + 24));
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    swift_unknownObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t _s14PresenceActionOwca(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1002A9E90(a1, type metadata accessor for FastSync.PresenceAction);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = type metadata accessor for EditNoteActivity();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      uint64_t v5 = type metadata accessor for FastSync.LeaveActivityAction(0);
      uint64_t v6 = *(int *)(v5 + 20);
      uint64_t v7 = a1 + v6;
      uint64_t v8 = a2 + v6;
      uint64_t v9 = *(void *)v8;
      uint64_t v10 = *(void *)(v8 + 8);
      char v11 = *(unsigned char *)(v8 + 16);
      sub_1001D3564(*(void *)v8, v10, v11);
      *(void *)uint64_t v7 = v9;
      *(void *)(v7 + 8) = v10;
      *(unsigned char *)(v7 + 16) = v11;
      *(unsigned char *)(a1 + *(int *)(v5 + 24)) = *(unsigned char *)(a2 + *(int *)(v5 + 24));
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      swift_unknownObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

unsigned char *_s14PresenceActionOwtk(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for EditNoteActivity();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = type metadata accessor for FastSync.LeaveActivityAction(0);
    uint64_t v8 = *(int *)(v7 + 20);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    v9[16] = v10[16];
    a1[*(int *)(v7 + 24)] = a2[*(int *)(v7 + 24)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

unsigned char *_s14PresenceActionOwta(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1002A9E90((uint64_t)a1, type metadata accessor for FastSync.PresenceAction);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for EditNoteActivity();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = type metadata accessor for FastSync.LeaveActivityAction(0);
      uint64_t v8 = *(int *)(v7 + 20);
      uint64_t v9 = &a1[v8];
      uint64_t v10 = &a2[v8];
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      v9[16] = v10[16];
      a1[*(int *)(v7 + 24)] = a2[*(int *)(v7 + 24)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1002AAC9C()
{
  uint64_t result = type metadata accessor for FastSync.LeaveActivityAction(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1002AAD34()
{
  return 8;
}

unint64_t sub_1002AAD3C()
{
  return sub_1002AAE20();
}

uint64_t type metadata accessor for FolderComposerFilterCellQuickNotes()
{
  return self;
}

unint64_t sub_1002AAE20()
{
  unint64_t result = qword_1006A1D80;
  if (!qword_1006A1D80)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1006A1D80);
  }
  return result;
}

uint64_t sub_1002AAE60(uint64_t a1)
{
  return sub_10002D5F8(a1, &qword_10069BDF0);
}

uint64_t sub_1002AAE74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1002AEF00(a1);
  if (v6) {
    goto LABEL_10;
  }
  if (*(_DWORD *)(a1 + 36) != v5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32))
  {
    uint64_t v7 = type metadata accessor for IndexPath();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = a2;
    uint64_t v11 = 1;
  }
  else
  {
    sub_1002AEFDC(result, v5, a1, a2);
    uint64_t v12 = type metadata accessor for IndexPath();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v9 = v12;
    uint64_t v10 = a2;
    uint64_t v11 = 0;
  }

  return v8(v10, v11, 1, v9);
}

uint64_t sub_1002AAF58(uint64_t a1)
{
  return sub_10002D5F8(a1, (unint64_t *)&qword_10069E810);
}

void sub_1002AAF6C(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_100031418(0, &qword_1006A4840);
    sub_1002AFCAC();
    Set.Iterator.init(_cocoa:)();
    uint64_t v1 = v27;
    uint64_t v26 = v28;
    uint64_t v3 = v29;
    uint64_t v2 = v30;
    unint64_t v4 = v31;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v26 = a1 + 56;
    uint64_t v3 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v2 = 0;
  }
  uint64_t v23 = v3;
  int64_t v25 = (unint64_t)(v3 + 64) >> 6;
  uint64_t v24 = _swiftEmptyArrayStorage;
  while (1)
  {
    uint64_t v8 = v2;
    if ((v1 & 0x8000000000000000) == 0) {
      break;
    }
    if (!__CocoaSet.Iterator.next()()) {
      goto LABEL_38;
    }
    sub_100031418(0, &qword_1006A4840);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v11 = v32;
    swift_unknownObjectRelease();
    if (!v32) {
      goto LABEL_38;
    }
LABEL_31:
    id v15 = [v11 ic_participantName:v23];
    if (v15)
    {
      unint64_t v16 = v15;
      uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v19 = v18;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v24 = sub_1001A847C(0, v24[2] + 1, 1, v24);
      }
      unint64_t v21 = v24[2];
      unint64_t v20 = v24[3];
      if (v21 >= v20 >> 1) {
        uint64_t v24 = sub_1001A847C((void *)(v20 > 1), v21 + 1, 1, v24);
      }
      v24[2] = v21 + 1;
      uint64_t v22 = &v24[2 * v21];
      v22[4] = v17;
      v22[5] = v19;
    }
    else
    {
    }
  }
  if (v4)
  {
    unint64_t v9 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    unint64_t v10 = v9 | (v2 << 6);
LABEL_30:
    id v11 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
    if (!v11) {
      goto LABEL_38;
    }
    goto LABEL_31;
  }
  int64_t v12 = v2 + 1;
  if (!__OFADD__(v2, 1))
  {
    if (v12 >= v25) {
      goto LABEL_38;
    }
    unint64_t v13 = *(void *)(v26 + 8 * v12);
    ++v2;
    if (!v13)
    {
      uint64_t v2 = v8 + 2;
      if (v8 + 2 >= v25) {
        goto LABEL_38;
      }
      unint64_t v13 = *(void *)(v26 + 8 * v2);
      if (!v13)
      {
        uint64_t v2 = v8 + 3;
        if (v8 + 3 >= v25) {
          goto LABEL_38;
        }
        unint64_t v13 = *(void *)(v26 + 8 * v2);
        if (!v13)
        {
          uint64_t v2 = v8 + 4;
          if (v8 + 4 >= v25) {
            goto LABEL_38;
          }
          unint64_t v13 = *(void *)(v26 + 8 * v2);
          if (!v13)
          {
            uint64_t v2 = v8 + 5;
            if (v8 + 5 >= v25) {
              goto LABEL_38;
            }
            unint64_t v13 = *(void *)(v26 + 8 * v2);
            if (!v13)
            {
              uint64_t v14 = v8 + 6;
              while (v25 != v14)
              {
                unint64_t v13 = *(void *)(v26 + 8 * v14++);
                if (v13)
                {
                  uint64_t v2 = v14 - 1;
                  goto LABEL_29;
                }
              }
LABEL_38:
              sub_10017B518();
              return;
            }
          }
        }
      }
    }
LABEL_29:
    unint64_t v4 = (v13 - 1) & v13;
    unint64_t v10 = __clz(__rbit64(v13)) + (v2 << 6);
    goto LABEL_30;
  }
  __break(1u);
}

double InsertMentionIntent.init()@<D0>(_OWORD *a1@<X8>)
{
  sub_1002AF0B0(v4);
  long long v2 = v4[1];
  *a1 = v4[0];
  a1[1] = v2;
  double result = *(double *)&v5;
  a1[2] = v5;
  return result;
}

uint64_t InsertMentionIntent.mentionText.getter()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t InsertMentionIntent.mentionText.setter()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t InsertMentionIntent.target.setter(uint64_t a1)
{
  uint64_t v2 = sub_10002F214(&qword_10069B1D0);
  __chkstk_darwin(v2 - 8);
  sub_1002AF970(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  IntentParameter.wrappedValue.setter();
  return sub_10002B754(a1, &qword_10069B1D0);
}

void *InsertMentionIntent.persistentIdentifier.unsafeMutableAddressor()
{
  return &static InsertMentionIntent.persistentIdentifier;
}

unint64_t static InsertMentionIntent.persistentIdentifier.getter()
{
  return 0xD000000000000017;
}

uint64_t sub_1002AB448()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  sub_100032974(v6, static InsertMentionIntent.title);
  sub_10003293C(v6, (uint64_t)static InsertMentionIntent.title);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t InsertMentionIntent.title.unsafeMutableAddressor()
{
  if (qword_10069AE28 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for LocalizedStringResource();

  return sub_10003293C(v0, (uint64_t)static InsertMentionIntent.title);
}

uint64_t static InsertMentionIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_10069AE28 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_10003293C(v2, (uint64_t)static InsertMentionIntent.title);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t static InsertMentionIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for Locale();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = type metadata accessor for LocalizedStringResource();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v4, 1, 1, v11);
  IntentDescription.init(_:categoryName:searchKeywords:)();
  uint64_t v13 = type metadata accessor for IntentDescription();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 0, 1, v13);
}

uint64_t static InsertMentionIntent.parameterSummary.getter()
{
  uint64_t v0 = sub_10002F214(&qword_1006A1D88);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10002F214(&qword_1006A1D90);
  __chkstk_darwin(v1);
  sub_1001FD4C8();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._object = (void *)0x8000000100556D10;
  v2._countAndFlagsBits = 0xD000000000000013;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_10002F214(&qword_1006A1D98);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._countAndFlagsBits = 544106784;
  v3._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  swift_getKeyPath();
  sub_10002F214(&qword_1006A1DA0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v4);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t InsertNoteLinkIntent.insertionRange.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t InsertNoteLinkIntent.insertionRange.setter(uint64_t result, uint64_t a2, char a3)
{
  *(void *)(v3 + 16) = result;
  *(void *)(v3 + 24) = a2;
  *(unsigned char *)(v3 + 32) = a3 & 1;
  return result;
}

uint64_t (*InsertNoteLinkIntent.insertionRange.modify())()
{
  return ICCloudSyncingObject.MoveAction.Types.rawValue.getter;
}

uint64_t InsertMentionIntent.perform()(uint64_t a1)
{
  v2[19] = a1;
  v2[20] = v1;
  uint64_t v3 = type metadata accessor for LocalizedStringResource.BundleDescription();
  v2[21] = v3;
  v2[22] = *(void *)(v3 - 8);
  v2[23] = swift_task_alloc();
  type metadata accessor for Locale();
  v2[24] = swift_task_alloc();
  type metadata accessor for String.LocalizationValue();
  v2[25] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for LocalizedStringResource();
  v2[26] = v4;
  v2[27] = *(void *)(v4 - 8);
  v2[28] = swift_task_alloc();
  v2[29] = swift_task_alloc();
  sub_10002F214((uint64_t *)&unk_10069C9B0);
  v2[30] = swift_task_alloc();
  sub_10002F214(&qword_10069B1D0);
  v2[31] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for NoteEntity(0);
  v2[32] = v5;
  v2[33] = *(void *)(v5 - 8);
  v2[34] = swift_task_alloc();
  v2[35] = swift_task_alloc();
  return _swift_task_switch(sub_1002ABE98, 0, 0);
}

uint64_t sub_1002ABE98()
{
  uint64_t v1 = v0[32];
  uint64_t v2 = v0[33];
  uint64_t v3 = v0[31];
  uint64_t v4 = (void *)v0[20];
  uint64_t v5 = swift_allocObject();
  v0[36] = v5;
  *(void *)(v5 + 16) = 0;
  uint64_t v6 = swift_allocObject();
  v0[37] = v6;
  *(void *)(v6 + 16) = 0;
  v0[38] = *v4;
  IntentParameter.wrappedValue.getter();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    uint64_t v7 = v0[30];
    uint64_t v18 = v0[29];
    uint64_t v19 = v0[27];
    uint64_t v20 = v0[28];
    uint64_t v21 = v0[26];
    uint64_t v8 = v0[23];
    uint64_t v9 = v0[21];
    uint64_t v10 = v0[22];
    sub_10002B754(v0[31], &qword_10069B1D0);
    String.LocalizationValue.init(stringLiteral:)();
    static Locale.current.getter();
    (*(void (**)(uint64_t, void, uint64_t))(v10 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v9);
    LocalizedStringResource.init(_:table:locale:bundle:comment:)();
    IntentParameter.projectedValue.getter();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v20, v18, v21);
    IntentDialog.init(_:)();
    uint64_t v11 = type metadata accessor for IntentDialog();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v7, 0, 1, v11);
    type metadata accessor for AppIntentError();
    sub_1002AFB7C((unint64_t *)&unk_1006A2DB0, (void (*)(uint64_t))&type metadata accessor for AppIntentError);
    swift_allocError();
    IntentParameter.needsValueError(_:)();
    swift_release();
    sub_10002B754(v7, (uint64_t *)&unk_10069C9B0);
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v21);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = (uint64_t (*)(void))v0[1];
    return v12();
  }
  else
  {
    uint64_t v14 = v0[20];
    sub_1002AFA68(v0[31], v0[35]);
    v0[39] = *(void *)(v14 + 40);
    AppDependency.wrappedValue.getter();
    uint64_t v15 = v0[13];
    v0[40] = v15;
    uint64_t v16 = swift_allocObject();
    v0[41] = v16;
    *(void *)(v16 + 16) = v5;
    *(void *)(v16 + 24) = v6;
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10069CE40 + dword_10069CE40);
    swift_retain();
    swift_retain();
    uint64_t v17 = (void *)swift_task_alloc();
    v0[42] = v17;
    void *v17 = v0;
    v17[1] = sub_1002AC2D4;
    return v22((uint64_t)v22, v15, (uint64_t)sub_1002AFB0C, v16);
  }
}

uint64_t sub_1002AC2D4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 344) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void **)(v2 + 320);
  swift_release();

  if (v0) {
    uint64_t v4 = sub_1002AE5B8;
  }
  else {
    uint64_t v4 = sub_1002AC420;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1002AC420()
{
  uint64_t v1 = *(void *)(v0 + 288);
  swift_beginAccess();
  uint64_t v2 = *(void **)(v1 + 16);
  *(void *)(v0 + 352) = v2;
  if (v2)
  {
    id v3 = v2;
    id v4 = [v3 managedObjectContext];
    *(void *)(v0 + 360) = v4;
    if (v4)
    {
      uint64_t v5 = swift_allocObject();
      *(void *)(v0 + 368) = v5;
      *(void *)(v5 + 16) = v3;
      id v6 = v3;
      uint64_t v7 = (void *)swift_task_alloc();
      *(void *)(v0 + 376) = v7;
      uint64_t v8 = sub_100031418(0, &qword_1006A1DB0);
      *uint64_t v7 = v0;
      v7[1] = sub_1002ACAF0;
      uint64_t v9 = sub_1002AFC58;
      uint64_t v10 = v0 + 112;
      uint64_t v11 = v5;
LABEL_16:
      return NSManagedObjectContext.perform<A>(_:)(v10, v9, v11, v8);
    }
    *(void *)(v0 + 488) = 0;
    id v16 = [*(id *)(v0 + 352) managedObjectContext];
    *(void *)(v0 + 496) = v16;
    if (v16)
    {
      uint64_t v17 = v0 + 96;
      uint64_t v18 = swift_allocObject();
      *(void *)(v0 + 504) = v18;
      *(void *)(v18 + 16) = 0;
      uint64_t v19 = (void *)swift_task_alloc();
      *(void *)(v0 + 512) = v19;
      uint64_t v8 = sub_10002F214(&qword_1006A0A38);
      *uint64_t v19 = v0;
      v19[1] = sub_1002ADB00;
      uint64_t v20 = (id (*)@<X0>(void *@<X8>))sub_1002B04D8;
LABEL_15:
      uint64_t v9 = v20;
      uint64_t v10 = v17;
      uint64_t v11 = v18;
      goto LABEL_16;
    }
    swift_bridgeObjectRelease();
    *(void *)(v0 + 520) = 0;
    id v29 = [*(id *)(v0 + 352) managedObjectContext];
    *(void *)(v0 + 528) = v29;
    if (v29)
    {
      uint64_t v17 = v0 + 144;
      uint64_t v30 = *(void **)(v0 + 352);
      uint64_t v18 = swift_allocObject();
      *(void *)(v0 + 536) = v18;
      *(void *)(v18 + 16) = v30;
      id v31 = v30;
      uint64_t v32 = (void *)swift_task_alloc();
      *(void *)(v0 + 544) = v32;
      uint64_t v8 = sub_10002F214(&qword_1006A0A38);
      *uint64_t v32 = v0;
      v32[1] = sub_1002AE02C;
      uint64_t v20 = sub_1002AFB28;
      goto LABEL_15;
    }
    swift_bridgeObjectRelease();
    unint64_t v33 = *(void **)(v0 + 488);
    uint64_t v34 = *(void **)(v0 + 352);
    uint64_t v35 = *(void *)(v0 + 280);
    uint64_t v36 = *(void *)(v0 + 240);
    IntentParameter.projectedValue.getter();
    uint64_t v37 = type metadata accessor for IntentDialog();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v36, 1, 1, v37);
    type metadata accessor for AppIntentError();
    sub_1002AFB7C((unint64_t *)&unk_1006A2DB0, (void (*)(uint64_t))&type metadata accessor for AppIntentError);
    swift_allocError();
    IntentParameter.needsValueError(_:)();
    swift_release();
    sub_10002B754(v36, (uint64_t *)&unk_10069C9B0);
    swift_willThrow();

    sub_100189980(v35);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = *(void *)(v0 + 296);
    swift_beginAccess();
    if (*(void *)(v12 + 16))
    {
      uint64_t v13 = *(void *)(v0 + 280);
      sub_100173F8C();
      swift_allocError();
      *uint64_t v14 = 3;
      swift_willThrow();
      uint64_t v15 = v13;
    }
    else
    {
      uint64_t v41 = *(void *)(v0 + 280);
      uint64_t v21 = *(void *)(v0 + 240);
      uint64_t v22 = *(void *)(v0 + 224);
      uint64_t v38 = *(void *)(v0 + 232);
      uint64_t v39 = *(void *)(v0 + 216);
      uint64_t v40 = *(void *)(v0 + 208);
      uint64_t v23 = *(void *)(v0 + 184);
      uint64_t v24 = *(void *)(v0 + 168);
      uint64_t v25 = *(void *)(v0 + 176);
      String.LocalizationValue.init(stringLiteral:)();
      static Locale.current.getter();
      (*(void (**)(uint64_t, void, uint64_t))(v25 + 104))(v23, enum case for LocalizedStringResource.BundleDescription.main(_:), v24);
      LocalizedStringResource.init(_:table:locale:bundle:comment:)();
      IntentParameter.projectedValue.getter();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(v22, v38, v40);
      IntentDialog.init(_:)();
      uint64_t v26 = type metadata accessor for IntentDialog();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v21, 0, 1, v26);
      type metadata accessor for AppIntentError();
      sub_1002AFB7C((unint64_t *)&unk_1006A2DB0, (void (*)(uint64_t))&type metadata accessor for AppIntentError);
      swift_allocError();
      IntentParameter.needsValueError(_:)();
      swift_release();
      sub_10002B754(v21, (uint64_t *)&unk_10069C9B0);
      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
      uint64_t v15 = v41;
    }
    sub_100189980(v15);
  }
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
  return v27();
}

uint64_t sub_1002ACAF0()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 360);
  swift_task_dealloc();
  swift_release();

  return _swift_task_switch(sub_1002ACC20, 0, 0);
}

uint64_t sub_1002ACC20()
{
  uint64_t v1 = *(void **)(v0 + 112);
  *(void *)(v0 + 384) = v1;
  id v2 = v1;
  IntentParameter.wrappedValue.getter();
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v4 = [v2 participantsForKey:v3];

  if (!v4)
  {
    uint64_t v5 = 0;
LABEL_10:
    *(void *)(v0 + 488) = v2;
    id v23 = [*(id *)(v0 + 352) managedObjectContext];
    *(void *)(v0 + 496) = v23;
    if (v23)
    {
      uint64_t v24 = v0 + 96;
      uint64_t v25 = swift_allocObject();
      *(void *)(v0 + 504) = v25;
      *(void *)(v25 + 16) = v5;
      uint64_t v26 = (void *)swift_task_alloc();
      *(void *)(v0 + 512) = v26;
      uint64_t v19 = sub_10002F214(&qword_1006A0A38);
      *uint64_t v26 = v0;
      v26[1] = sub_1002ADB00;
      uint64_t v27 = sub_1002B04D8;
LABEL_17:
      uint64_t v20 = v27;
      uint64_t v21 = v24;
      uint64_t v22 = v25;
      goto LABEL_18;
    }
    swift_bridgeObjectRelease();
    *(void *)(v0 + 520) = 0;
    id v28 = [*(id *)(v0 + 352) managedObjectContext];
    *(void *)(v0 + 528) = v28;
    if (v28)
    {
      id v29 = *(void **)(v0 + 352);
      uint64_t v30 = swift_allocObject();
      *(void *)(v0 + 536) = v30;
      *(void *)(v30 + 16) = v29;
      id v31 = v29;
      uint64_t v32 = (void *)swift_task_alloc();
      *(void *)(v0 + 544) = v32;
      uint64_t v19 = sub_10002F214(&qword_1006A0A38);
      *uint64_t v32 = v0;
      v32[1] = sub_1002AE02C;
      uint64_t v20 = sub_1002AFB28;
      uint64_t v21 = v0 + 144;
      uint64_t v22 = v30;
      goto LABEL_18;
    }
    swift_bridgeObjectRelease();
    uint64_t v35 = *(void **)(v0 + 488);
    goto LABEL_23;
  }
  sub_100031418(0, &qword_1006A4840);
  sub_1002AFCAC();
  uint64_t v5 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  if ((v5 & 0xC000000000000001) == 0)
  {
    uint64_t v6 = *(void *)(v5 + 16);
    if (v6) {
      goto LABEL_4;
    }
LABEL_15:
    id v33 = [*(id *)(v0 + 352) managedObjectContext];
    *(void *)(v0 + 392) = v33;
    if (v33)
    {
      uint64_t v24 = v0 + 136;
      uint64_t v25 = swift_allocObject();
      *(void *)(v0 + 400) = v25;
      *(void *)(v25 + 16) = v5;
      uint64_t v34 = (void *)swift_task_alloc();
      *(void *)(v0 + 408) = v34;
      uint64_t v19 = sub_10002F214(&qword_1006A0A38);
      *uint64_t v34 = v0;
      v34[1] = sub_1002AD374;
      uint64_t v27 = sub_1002AFC3C;
      goto LABEL_17;
    }
    swift_bridgeObjectRelease();
    uint64_t v35 = *(void **)(v0 + 384);
LABEL_23:
    uint64_t v36 = *(void **)(v0 + 352);
    uint64_t v37 = *(void *)(v0 + 280);
    uint64_t v38 = *(void *)(v0 + 240);
    IntentParameter.projectedValue.getter();
    uint64_t v39 = type metadata accessor for IntentDialog();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v38, 1, 1, v39);
    type metadata accessor for AppIntentError();
    sub_1002AFB7C((unint64_t *)&unk_1006A2DB0, (void (*)(uint64_t))&type metadata accessor for AppIntentError);
    swift_allocError();
    IntentParameter.needsValueError(_:)();
    swift_release();
    sub_10002B754(v38, (uint64_t *)&unk_10069C9B0);
    swift_willThrow();

    sub_100189980(v37);
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = __CocoaSet.count.getter();
  swift_bridgeObjectRelease();
  if (!v6) {
    goto LABEL_15;
  }
LABEL_4:
  if (!v5) {
    goto LABEL_10;
  }
  if (v6 != 1) {
    goto LABEL_10;
  }
  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v8 = (void *)sub_10002D5F8(v7, &qword_1006A4840);
  *(void *)(v0 + 416) = v8;
  swift_bridgeObjectRelease();
  if (!v8) {
    goto LABEL_10;
  }
  uint64_t v9 = *(void **)(v0 + 352);
  swift_bridgeObjectRelease();
  id v10 = [v9 managedObjectContext];
  *(void *)(v0 + 424) = v10;
  uint64_t v11 = *(void **)(v0 + 352);
  if (v10)
  {
    uint64_t v12 = *(_OWORD **)(v0 + 160);
    uint64_t v13 = swift_allocObject();
    *(void *)(v0 + 432) = v13;
    long long v15 = v12[1];
    long long v14 = v12[2];
    *(_OWORD *)(v13 + 16) = *v12;
    *(_OWORD *)(v13 + 32) = v15;
    *(_OWORD *)(v13 + 48) = v14;
    *(void *)(v13 + 64) = v11;
    *(void *)(v13 + 72) = v8;
    id v16 = v11;
    swift_retain();
    swift_retain();
    swift_retain();
    id v17 = v8;
    uint64_t v18 = (void *)swift_task_alloc();
    *(void *)(v0 + 440) = v18;
    uint64_t v19 = sub_10002F214(&qword_10069CE08);
    *uint64_t v18 = v0;
    v18[1] = sub_1002AD7C4;
    uint64_t v20 = sub_1002AFC1C;
    uint64_t v21 = v0 + 80;
    uint64_t v22 = v13;
LABEL_18:
    return NSManagedObjectContext.perform<A>(_:)(v21, v20, v22, v19);
  }
  uint64_t v40 = *(void *)(v0 + 280);

  type metadata accessor for ICError(0);
  *(void *)(v0 + 128) = 227;
  sub_1001B50CC((uint64_t)_swiftEmptyArrayStorage);
  sub_1002AFB7C((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);
  _BridgedStoredNSError.init(_:userInfo:)();
  swift_willThrow();
  sub_100189980(v40);
LABEL_25:
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v41 = *(uint64_t (**)(void))(v0 + 8);
  return v41();
}

uint64_t sub_1002AD374()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 392);
  swift_task_dealloc();
  swift_release();

  return _swift_task_switch(sub_1002AD4A4, 0, 0);
}

uint64_t sub_1002AD4A4()
{
  uint64_t v1 = v0[17];
  if (v1 && *(void *)(v1 + 16) >= 2uLL)
  {
    id v2 = (void *)v0[48];
    uint64_t v3 = (void *)v0[44];
    uint64_t v4 = v0[35];
    uint64_t v5 = v0[30];
    swift_bridgeObjectRetain();
    IntentParameter.projectedValue.getter();
    uint64_t v6 = type metadata accessor for IntentDialog();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
    type metadata accessor for AppIntentError();
    sub_1002AFB7C((unint64_t *)&unk_1006A2DB0, (void (*)(uint64_t))&type metadata accessor for AppIntentError);
    swift_allocError();
    IntentParameter.needsDisambiguationError(among:dialog:)();
    swift_release();
    swift_bridgeObjectRelease();
    sub_10002B754(v5, (uint64_t *)&unk_10069C9B0);
    swift_willThrow();

    sub_100189980(v4);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v7 = (void *)v0[48];
    uint64_t v8 = (void *)v0[44];
    uint64_t v9 = v0[35];
    uint64_t v10 = v0[30];
    IntentParameter.projectedValue.getter();
    uint64_t v11 = type metadata accessor for IntentDialog();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
    type metadata accessor for AppIntentError();
    sub_1002AFB7C((unint64_t *)&unk_1006A2DB0, (void (*)(uint64_t))&type metadata accessor for AppIntentError);
    swift_allocError();
    IntentParameter.needsValueError(_:)();
    swift_release();
    sub_10002B754(v10, (uint64_t *)&unk_10069C9B0);
    swift_willThrow();

    sub_100189980(v9);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_1002AD7C4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 448) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void **)(v2 + 424);
  swift_release();

  if (v0) {
    uint64_t v4 = sub_1002AE6A8;
  }
  else {
    uint64_t v4 = sub_1002AD910;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1002AD910()
{
  uint64_t v1 = *(void **)(v0 + 416);
  uint64_t v2 = *(void **)(v0 + 352);

  uint64_t v3 = *(void **)(v0 + 80);
  uint64_t v4 = *(void **)(v0 + 88);
  *(void *)(v0 + 456) = v3;
  *(void *)(v0 + 464) = v4;
  id v5 = v3;
  id v6 = v4;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 472) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1002AD9EC;
  uint64_t v8 = *(void *)(v0 + 272);
  return NoteEntity.init(for:in:)(v8, (uint64_t)v5, (uint64_t)v6);
}

uint64_t sub_1002AD9EC()
{
  *(void *)(*(void *)v1 + 480) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1002AE7B4;
  }
  else {
    uint64_t v2 = sub_1002AE44C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002ADB00()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 496);
  swift_task_dealloc();
  swift_release();

  return _swift_task_switch(sub_1002ADC30, 0, 0);
}

uint64_t sub_1002ADC30()
{
  uint64_t v1 = *(void *)(v0 + 96);
  if (v1)
  {
    uint64_t v2 = *(void *)(v1 + 16);
    if (v2)
    {
      swift_bridgeObjectRetain();
      if (v2 != 1)
      {
        uint64_t v9 = *(void **)(v0 + 488);
        uint64_t v10 = *(void **)(v0 + 352);
        uint64_t v11 = *(void *)(v0 + 280);
        uint64_t v12 = *(void *)(v0 + 240);
        IntentParameter.projectedValue.getter();
        uint64_t v14 = type metadata accessor for IntentDialog();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v12, 1, 1, v14);
        type metadata accessor for AppIntentError();
        sub_1002AFB7C((unint64_t *)&unk_1006A2DB0, (void (*)(uint64_t))&type metadata accessor for AppIntentError);
        swift_allocError();
        IntentParameter.needsDisambiguationError(among:dialog:)();
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_11;
      }
LABEL_9:
      swift_bridgeObjectRelease();
      uint64_t v9 = *(void **)(v0 + 488);
      uint64_t v10 = *(void **)(v0 + 352);
      uint64_t v11 = *(void *)(v0 + 280);
      uint64_t v12 = *(void *)(v0 + 240);
      IntentParameter.projectedValue.getter();
      uint64_t v13 = type metadata accessor for IntentDialog();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
      type metadata accessor for AppIntentError();
      sub_1002AFB7C((unint64_t *)&unk_1006A2DB0, (void (*)(uint64_t))&type metadata accessor for AppIntentError);
      swift_allocError();
      IntentParameter.needsValueError(_:)();
      swift_release();
LABEL_11:
      sub_10002B754(v12, (uint64_t *)&unk_10069C9B0);
      swift_willThrow();

      sub_100189980(v11);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      long long v15 = *(uint64_t (**)(void))(v0 + 8);
      return v15();
    }
  }
  *(void *)(v0 + 520) = v1;
  id v3 = [*(id *)(v0 + 352) managedObjectContext];
  *(void *)(v0 + 528) = v3;
  if (!v3) {
    goto LABEL_9;
  }
  uint64_t v4 = *(void **)(v0 + 352);
  uint64_t v5 = swift_allocObject();
  *(void *)(v0 + 536) = v5;
  *(void *)(v5 + 16) = v4;
  id v6 = v4;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 544) = v7;
  uint64_t v8 = sub_10002F214(&qword_1006A0A38);
  *uint64_t v7 = v0;
  v7[1] = sub_1002AE02C;
  return NSManagedObjectContext.perform<A>(_:)(v0 + 144, sub_1002AFB28, v5, v8);
}

uint64_t sub_1002AE02C()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 528);
  swift_task_dealloc();
  swift_release();

  return _swift_task_switch(sub_1002AE15C, 0, 0);
}

uint64_t sub_1002AE15C()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0[18];
  if (v1)
  {
    unint64_t v2 = *(void *)(v1 + 16);
    swift_bridgeObjectRetain();
    if (v2 >= 2)
    {
      uint64_t v3 = (void *)v0[61];
      uint64_t v4 = (void *)v0[44];
      uint64_t v5 = v0[35];
      uint64_t v6 = v0[30];
      IntentParameter.projectedValue.getter();
      uint64_t v7 = type metadata accessor for IntentDialog();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
      type metadata accessor for AppIntentError();
      sub_1002AFB7C((unint64_t *)&unk_1006A2DB0, (void (*)(uint64_t))&type metadata accessor for AppIntentError);
      swift_allocError();
      IntentParameter.needsDisambiguationError(among:dialog:)();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v3 = (void *)v0[61];
  uint64_t v4 = (void *)v0[44];
  uint64_t v5 = v0[35];
  uint64_t v6 = v0[30];
  IntentParameter.projectedValue.getter();
  uint64_t v8 = type metadata accessor for IntentDialog();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 1, 1, v8);
  type metadata accessor for AppIntentError();
  sub_1002AFB7C((unint64_t *)&unk_1006A2DB0, (void (*)(uint64_t))&type metadata accessor for AppIntentError);
  swift_allocError();
  IntentParameter.needsValueError(_:)();
  swift_release();
LABEL_6:
  sub_10002B754(v6, (uint64_t *)&unk_10069C9B0);
  swift_willThrow();

  sub_100189980(v5);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_1002AE44C()
{
  unint64_t v2 = (void *)v0[57];
  uint64_t v1 = (void *)v0[58];
  uint64_t v3 = v0[34];
  uint64_t v4 = v0[35];
  sub_1002AFB7C((unint64_t *)&qword_10069CD70, (void (*)(uint64_t))type metadata accessor for NoteEntity);
  static IntentResult.result<A>(value:)();

  sub_100189980(v3);
  sub_100189980(v4);
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1002AE5B8()
{
  sub_100189980(*(void *)(v0 + 280));
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002AE6A8()
{
  uint64_t v1 = *(void **)(v0 + 416);
  unint64_t v2 = *(void **)(v0 + 352);
  uint64_t v3 = *(void *)(v0 + 280);

  sub_100189980(v3);
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1002AE7B4()
{
  uint64_t v1 = *(void **)(v0 + 464);
  uint64_t v2 = *(void *)(v0 + 280);

  sub_100189980(v2);
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

void sub_1002AE8B4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void **)(a2 + 16);
  self;
  uint64_t v6 = swift_dynamicCastObjCClass();
  if (v6) {
    id v7 = a1;
  }
  swift_beginAccess();
  uint64_t v8 = *v5;
  *uint64_t v5 = (void *)v6;

  self;
  uint64_t v9 = swift_dynamicCastObjCClass();
  if (v9) {
    id v10 = a1;
  }
  swift_beginAccess();
  uint64_t v11 = *(void **)(a3 + 16);
  *(void *)(a3 + 16) = v9;
}

uint64_t sub_1002AE984@<X0>(void *a1@<X1>, void *a2@<X2>, void *a3@<X8>)
{
  IntentParameter.wrappedValue.getter();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v8 = [a2 ic_participantNameMatchingString:v7];

  if (v8)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    IntentParameter.wrappedValue.getter();
  }
  id v9 = [a2 ic_userRecordNameInNote:a1];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v10 = sub_1002B00BC(a1);
  if (v3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    id v13 = v10;
    uint64_t v14 = v11;
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    *a3 = v13;
    a3[1] = v14;
  }
  return result;
}

uint64_t sub_1002AEACC@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  if (result)
  {
    uint64_t v3 = swift_bridgeObjectRetain();
    sub_1002AAF6C(v3);
    uint64_t v5 = v4;
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = 0;
  }
  *a2 = v5;
  return result;
}

id sub_1002AEB2C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id result = [a1 serverShare];
  if (!result)
  {
    id v9 = 0;
LABEL_21:
    *a2 = v9;
    return result;
  }
  uint64_t v4 = result;
  uint64_t v20 = a2;
  id v5 = [result participants];

  sub_100031418(0, &qword_1006A4840);
  unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v6 >> 62))
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id result = (id)swift_bridgeObjectRetain();
    if (v7) {
      goto LABEL_4;
    }
LABEL_19:
    id v9 = _swiftEmptyArrayStorage;
LABEL_20:
    id result = (id)swift_bridgeObjectRelease_n();
    a2 = v20;
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  id result = (id)_CocoaArrayWrapper.endIndex.getter();
  uint64_t v7 = (uint64_t)result;
  if (!result) {
    goto LABEL_19;
  }
LABEL_4:
  if (v7 >= 1)
  {
    uint64_t v8 = 0;
    id v9 = _swiftEmptyArrayStorage;
    do
    {
      if ((v6 & 0xC000000000000001) != 0) {
        id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v10 = *(id *)(v6 + 8 * v8 + 32);
      }
      uint64_t v11 = v10;
      id v12 = [v10 ic_participantName];
      if (v12)
      {
        id v13 = v12;
        uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v16 = v15;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v9 = sub_1001A847C(0, v9[2] + 1, 1, v9);
        }
        unint64_t v18 = v9[2];
        unint64_t v17 = v9[3];
        if (v18 >= v17 >> 1) {
          id v9 = sub_1001A847C((void *)(v17 > 1), v18 + 1, 1, v9);
        }
        v9[2] = v18 + 1;
        uint64_t v19 = &v9[2 * v18];
        v19[4] = v14;
        v19[5] = v16;
      }
      else
      {
      }
      ++v8;
    }
    while (v7 != v8);
    goto LABEL_20;
  }
  __break(1u);
  return result;
}

uint64_t sub_1002AED4C(uint64_t a1)
{
  long long v4 = v1[1];
  *(_OWORD *)(v2 + 16) = *v1;
  *(_OWORD *)(v2 + 32) = v4;
  *(_OWORD *)(v2 + 48) = v1[2];
  id v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 64) = v5;
  *id v5 = v2;
  v5[1] = sub_1002AEE04;
  return InsertMentionIntent.perform()(a1);
}

uint64_t sub_1002AEE04()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1002AEF00(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  id v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

void sub_1002AEFA0(uint64_t a1, int a2, char a3, uint64_t a4)
{
}

void sub_1002AEFB4(uint64_t a1, int a2, char a3, uint64_t a4)
{
}

void sub_1002AEFC8(uint64_t a1, int a2, char a3, uint64_t a4)
{
}

uint64_t sub_1002AEFDC@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  if (result < 0 || (uint64_t v4 = result, 1 << *(unsigned char *)(a3 + 32) <= result))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (((*(void *)(a3 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (*(_DWORD *)(a3 + 36) != a2)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v6 = *(void *)(a3 + 48);
  uint64_t v7 = type metadata accessor for IndexPath();
  uint64_t v8 = *(void *)(v7 - 8);
  id v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  uint64_t v10 = v6 + *(void *)(v8 + 72) * v4;

  return v9(a4, v10, v7);
}

void sub_1002AF09C(uint64_t a1, int a2, char a3, uint64_t a4)
{
}

uint64_t sub_1002AF0B0@<X0>(void *a1@<X8>)
{
  uint64_t v60 = a1;
  uint64_t v1 = sub_10002F214((uint64_t *)&unk_10069E280);
  __chkstk_darwin(v1 - 8);
  uint64_t v59 = &v44[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = type metadata accessor for InputConnectionBehavior();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v64 = v3;
  uint64_t v65 = v4;
  __chkstk_darwin(v3);
  uint64_t v63 = &v44[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v58 = &v44[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v61 = &v44[-v9];
  uint64_t v10 = sub_10002F214(&qword_10069B1D0);
  __chkstk_darwin(v10 - 8);
  uint64_t v62 = &v44[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v12 - 8);
  Swift::String v47 = &v44[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  unint64_t v17 = &v44[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = type metadata accessor for Locale();
  __chkstk_darwin(v18 - 8);
  uint64_t v19 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v19 - 8);
  uint64_t v20 = type metadata accessor for LocalizedStringResource();
  uint64_t v55 = v20;
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v57 = sub_10002F214(&qword_10069B210);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v22 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v24 = v15 + 104;
  id v23 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v15 + 104);
  unsigned int v49 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v50 = v14;
  v23(v17, enum case for LocalizedStringResource.BundleDescription.main(_:), v14);
  uint64_t v51 = v24;
  Swift::String v48 = v23;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v23(v17, v22, v14);
  uint64_t v25 = v47;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v26 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v21 + 56);
  uint64_t v54 = v21 + 56;
  uint64_t v56 = v26;
  v26(v25, 0, 1, v20);
  uint64_t v27 = type metadata accessor for NoteEntity(0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v62, 1, 1, v27);
  uint64_t v28 = type metadata accessor for IntentDialog();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v29 + 56);
  uint64_t v52 = v30;
  uint64_t v53 = v29 + 56;
  v30(v61, 1, 1, v28);
  v30(v58, 1, 1, v28);
  uint64_t v68 = sub_10023ED64();
  uint64_t v69 = v31;
  uint64_t v70 = v32;
  uint64x2_t v34 = (uint64x2_t)vdupq_n_s64(v33);
  char v71 = v33 & 1;
  int16x8_t v35 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v34, (uint64x2_t)xmmword_100524D00), (int32x4_t)vshlq_u64(v34, (uint64x2_t)xmmword_100524CF0));
  *(int8x8_t *)v35.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v35), (int8x8_t)0x1000100010001);
  unsigned __int32 v72 = vmovn_s16(v35).u32[0];
  unsigned int v45 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v36 = *(void (**)(void))(v65 + 104);
  v65 += 104;
  Swift::String v46 = (void (*)(unsigned char *, void, uint64_t))v36;
  v36(v63);
  sub_1001579C0();
  uint64_t v62 = (unsigned char *)IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:query:)();
  uint64_t v58 = (unsigned char *)sub_10002F214(&qword_10069B3B0);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v37 = v49;
  uint64_t v38 = v50;
  uint64_t v39 = v48;
  v48(v17, v49, v50);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v39(v17, v37, v38);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v56(v25, 0, 1, v55);
  uint64_t v40 = type metadata accessor for String.IntentInputOptions();
  uint64_t v68 = 0;
  uint64_t v69 = 0;
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v59, 1, 1, v40);
  v52(v61, 1, 1, v28);
  v46(v63, v45, v64);
  uint64_t v41 = IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)();
  sub_10002F214((uint64_t *)&unk_10069CE60);
  unint64_t v66 = 0xD000000000000021;
  unint64_t v67 = 0x8000000100549290;
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t result = AppDependency.__allocating_init(key:manager:)();
  uint64_t v43 = v60;
  *uint64_t v60 = v62;
  v43[1] = v41;
  void v43[2] = 0;
  void v43[3] = 0;
  *((unsigned char *)v43 + 32) = 1;
  v43[5] = result;
  return result;
}

uint64_t sub_1002AF970(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002F214(&qword_10069B1D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002AF9D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1002AFA04@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1002AFA30()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002AFA68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NoteEntity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002AFACC()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1002AFB0C(void *a1)
{
  sub_1002AE8B4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

id sub_1002AFB28@<X0>(void *a1@<X8>)
{
  return sub_1002AEB2C(*(void **)(v1 + 16), a1);
}

uint64_t sub_1002AFB44()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002AFB7C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002AFBC4()
{
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1002AFC1C@<X0>(void *a1@<X8>)
{
  return sub_1002AE984(*(void **)(v1 + 64), *(void **)(v1 + 72), a1);
}

uint64_t sub_1002AFC3C@<X0>(void *a1@<X8>)
{
  return sub_1002AEACC(*(void *)(v1 + 16), a1);
}

id sub_1002AFC58@<X0>(void *a1@<X8>)
{
  id result = [objc_allocWithZone((Class)ICMentionsController) initWithNote:*(void *)(v1 + 16)];
  *a1 = result;
  return result;
}

unint64_t sub_1002AFCAC()
{
  unint64_t result = qword_1006A0DE8;
  if (!qword_1006A0DE8)
  {
    sub_100031418(255, &qword_1006A4840);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0DE8);
  }
  return result;
}

unint64_t sub_1002AFD18()
{
  unint64_t result = qword_1006A1DB8;
  if (!qword_1006A1DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A1DB8);
  }
  return result;
}

unint64_t sub_1002AFD70()
{
  unint64_t result = qword_1006A1DC0;
  if (!qword_1006A1DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A1DC0);
  }
  return result;
}

uint64_t sub_1002AFDC4()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1002AFDF8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for InsertMentionIntent()
{
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for InsertMentionIntent(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for InsertMentionIntent(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  long long v4 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for InsertMentionIntent(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for InsertMentionIntent(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InsertMentionIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InsertMentionIntent()
{
  return &type metadata for InsertMentionIntent;
}

uint64_t sub_1002B0044()
{
  return sub_10001DFB0(&qword_1006A1DD0, &qword_1006A1DD8);
}

uint64_t sub_1002B0080()
{
  return sub_10001DFB0((unint64_t *)&qword_10069CDA0, (uint64_t *)&unk_10069E270);
}

id sub_1002B00BC(void *a1)
{
  id v1 = a1;
  id v2 = [a1 managedObjectContext];
  if (v2)
  {
    uint64_t v3 = v2;
    if (![v1 isSharedViaICloud])
    {
      sub_100173F8C();
      swift_allocError();
      char v5 = 4;
      goto LABEL_7;
    }
    if ([v1 isPasswordProtectedAndLocked])
    {
      sub_100173F8C();
      swift_allocError();
      char v5 = 11;
LABEL_7:
      *long long v4 = v5;
LABEL_8:
      swift_willThrow();

      return v1;
    }
    if (![v1 isEditable])
    {
      sub_100173F8C();
      swift_allocError();
      char v5 = 12;
      goto LABEL_7;
    }
    id v7 = [v1 textStorage];
    if (!v7)
    {
      type metadata accessor for ICError(0);
      id v1 = (id)sub_1001B50CC((uint64_t)_swiftEmptyArrayStorage);
      sub_1002AFB7C((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);
      _BridgedStoredNSError.init(_:userInfo:)();
      goto LABEL_8;
    }
    uint64_t v16 = v7;
    id v15 = [v7 length];
    id v8 = [objc_allocWithZone((Class)ICAttachmentInsertionController) initWithNote:v1];
    uint64_t v9 = self;
    NSString v10 = String._bridgeToObjectiveC()();
    NSString v11 = String._bridgeToObjectiveC()();
    id v12 = [v9 createMentionAttachmentIfApplicableWithMentionText:v10 userRecordName:v11 note:v1 parentAttachment:0];

    if (v12)
    {

      NSString v13 = String._bridgeToObjectiveC()();
      [v12 updateChangeCountWithReason:v13];
    }
    [v1 updateModificationDateAndChangeCountAndSaveImmediately];
    id v17 = 0;
    if ([v3 save:&v17])
    {
      id v14 = v17;
      id v1 = [v1 objectID];
    }
    else
    {
      id v1 = v17;
      _convertNSErrorToError(_:)();

      swift_willThrow();
    }
  }
  else
  {
    type metadata accessor for ICError(0);
    sub_1001B50CC((uint64_t)_swiftEmptyArrayStorage);
    sub_1002AFB7C((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_willThrow();
  }
  return v1;
}

uint64_t sub_1002B04D8@<X0>(void *a1@<X8>)
{
  return sub_1002AFC3C(a1);
}

uint64_t RemoveLockFromNoteIntent.perform()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[20] = a3;
  v5[21] = a5;
  v5[18] = a1;
  v5[19] = a2;
  sub_10002F214((uint64_t *)&unk_10069C9B0);
  v5[22] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for LocalizedStringResource.BundleDescription();
  v5[23] = v6;
  v5[24] = *(void *)(v6 - 8);
  v5[25] = swift_task_alloc();
  type metadata accessor for Locale();
  v5[26] = swift_task_alloc();
  type metadata accessor for String.LocalizationValue();
  v5[27] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for LocalizedStringResource();
  v5[28] = v7;
  v5[29] = *(void *)(v7 - 8);
  v5[30] = swift_task_alloc();
  v5[31] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for NoteEntity(0);
  v5[32] = v8;
  v5[33] = *(void *)(v8 - 8);
  v5[34] = swift_task_alloc();
  sub_10002F214(&qword_10069B1D0);
  v5[35] = swift_task_alloc();
  return _swift_task_switch(sub_1002B0744, 0, 0);
}

uint64_t sub_1002B0744()
{
  id v1 = *(void **)(v0 + 168);
  if (!v1)
  {
    type metadata accessor for ICError(0);
    *(void *)(v0 + 128) = 222;
    sub_1001B50CC((uint64_t)_swiftEmptyArrayStorage);
    sub_1001B58CC((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_willThrow();
LABEL_14:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v28 = *(uint64_t (**)(void))(v0 + 8);
    return v28();
  }
  uint64_t v2 = *(void *)(v0 + 280);
  uint64_t v3 = *(void *)(v0 + 256);
  uint64_t v4 = *(void *)(v0 + 264);
  id v5 = v1;
  AppDependency.wrappedValue.getter();
  uint64_t v6 = *(void **)(v0 + 104);
  *(void *)(v0 + 288) = [v6 modernManagedObjectContext];

  uint64_t v7 = swift_allocObject();
  *(void *)(v0 + 296) = v7;
  *(void *)(v7 + 16) = 0;
  IntentParameter.wrappedValue.getter();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3))
  {
    sub_10002B754(*(void *)(v0 + 280), &qword_10069B1D0);
    *(void *)(v0 + 328) = 0;
    uint64_t v8 = *(void *)(v0 + 296);
    swift_beginAccess();
    uint64_t v9 = *(void **)(v8 + 16);
    *(void *)(v0 + 336) = v9;
    if (v9)
    {
      id v10 = v9;
      if (objc_msgSend(v10, "ic_isModernNoteType"))
      {
        NSString v11 = *(void **)(v0 + 288);
        id v12 = *(id *)(v0 + 168);
        id v13 = v10;
        id v14 = v11;
        return _swift_task_switch(sub_1002B1218, 0, 0);
      }
      uint64_t v25 = *(void **)(v0 + 288);
      uint64_t v26 = *(void **)(v0 + 168);
      sub_100173F8C();
      swift_allocError();
      *uint64_t v27 = 20;
      swift_willThrow();

      swift_release();
    }
    else
    {
      unint64_t v33 = *(void **)(v0 + 288);
      uint64_t v19 = *(void *)(v0 + 240);
      uint64_t v18 = *(void *)(v0 + 248);
      uint64_t v30 = *(void *)(v0 + 232);
      uint64_t v31 = *(void *)(v0 + 224);
      uint64_t v20 = *(void *)(v0 + 200);
      uint64_t v22 = *(void *)(v0 + 184);
      uint64_t v21 = *(void *)(v0 + 192);
      uint64_t v23 = *(void *)(v0 + 176);
      uint64_t v32 = *(void **)(v0 + 168);
      String.LocalizationValue.init(stringLiteral:)();
      static Locale.current.getter();
      (*(void (**)(uint64_t, void, uint64_t))(v21 + 104))(v20, enum case for LocalizedStringResource.BundleDescription.main(_:), v22);
      LocalizedStringResource.init(_:table:locale:bundle:comment:)();
      IntentParameter.projectedValue.getter();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v19, v18, v31);
      IntentDialog.init(_:)();
      uint64_t v24 = type metadata accessor for IntentDialog();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 0, 1, v24);
      type metadata accessor for AppIntentError();
      sub_1001B58CC((unint64_t *)&unk_1006A2DB0, (void (*)(uint64_t))&type metadata accessor for AppIntentError);
      swift_allocError();
      IntentParameter.needsValueError(_:)();
      swift_release();
      sub_10002B754(v23, (uint64_t *)&unk_10069C9B0);
      swift_willThrow();

      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v18, v31);
      swift_release();
    }
    goto LABEL_14;
  }
  uint64_t v15 = *(void *)(v0 + 280);
  sub_10018991C(v15, *(void *)(v0 + 272));
  sub_10002B754(v15, &qword_10069B1D0);
  AppDependency.wrappedValue.getter();
  uint64_t v16 = *(void *)(v0 + 136);
  *(void *)(v0 + 304) = v16;
  uint64x2_t v34 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10069CE40 + dword_10069CE40);
  swift_retain();
  id v17 = (void *)swift_task_alloc();
  *(void *)(v0 + 312) = v17;
  void *v17 = v0;
  v17[1] = sub_1002B0D00;
  return v34((uint64_t)v34, v16, (uint64_t)sub_1001B5934, v7);
}

uint64_t sub_1002B0D00()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 320) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void **)(v2 + 304);
  sub_100189980(*(void *)(v2 + 272));
  swift_release();

  if (v0) {
    uint64_t v4 = sub_1001B4C7C;
  }
  else {
    uint64_t v4 = sub_1002B0E70;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1002B0E70()
{
  *(void *)(v0 + 328) = *(void *)(v0 + 320);
  uint64_t v1 = *(void *)(v0 + 296);
  swift_beginAccess();
  uint64_t v2 = *(void **)(v1 + 16);
  *(void *)(v0 + 336) = v2;
  if (v2)
  {
    id v3 = v2;
    if (objc_msgSend(v3, "ic_isModernNoteType"))
    {
      uint64_t v4 = *(void **)(v0 + 288);
      id v5 = *(id *)(v0 + 168);
      id v6 = v3;
      id v7 = v4;
      return _swift_task_switch(sub_1002B1218, 0, 0);
    }
    uint64_t v15 = *(void **)(v0 + 288);
    uint64_t v16 = *(void **)(v0 + 168);
    sub_100173F8C();
    swift_allocError();
    unsigned char *v17 = 20;
    swift_willThrow();

    swift_release();
  }
  else
  {
    uint64_t v23 = *(void **)(v0 + 288);
    uint64_t v9 = *(void *)(v0 + 240);
    uint64_t v8 = *(void *)(v0 + 248);
    uint64_t v20 = *(void *)(v0 + 232);
    uint64_t v21 = *(void *)(v0 + 224);
    uint64_t v10 = *(void *)(v0 + 200);
    uint64_t v12 = *(void *)(v0 + 184);
    uint64_t v11 = *(void *)(v0 + 192);
    uint64_t v13 = *(void *)(v0 + 176);
    uint64_t v22 = *(void **)(v0 + 168);
    String.LocalizationValue.init(stringLiteral:)();
    static Locale.current.getter();
    (*(void (**)(uint64_t, void, uint64_t))(v11 + 104))(v10, enum case for LocalizedStringResource.BundleDescription.main(_:), v12);
    LocalizedStringResource.init(_:table:locale:bundle:comment:)();
    IntentParameter.projectedValue.getter();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v9, v8, v21);
    IntentDialog.init(_:)();
    uint64_t v14 = type metadata accessor for IntentDialog();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 0, 1, v14);
    type metadata accessor for AppIntentError();
    sub_1001B58CC((unint64_t *)&unk_1006A2DB0, (void (*)(uint64_t))&type metadata accessor for AppIntentError);
    swift_allocError();
    IntentParameter.needsValueError(_:)();
    swift_release();
    sub_10002B754(v13, (uint64_t *)&unk_10069C9B0);
    swift_willThrow();

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v8, v21);
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t sub_1002B1218()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0;
  id v3 = v0 + 2;
  uint64_t v4 = v1[41];
  uint64_t v5 = v1[42];
  uint64_t v6 = v1[36];
  uint64_t v7 = v1[21];
  v1[2] = v2;
  v1[7] = v1 + 15;
  v1[3] = sub_1001B4944;
  uint64_t v8 = swift_continuation_init();
  uint64_t v9 = (void *)swift_task_alloc();
  v9[2] = v6;
  v9[3] = v5;
  v9[4] = v7;
  v9[5] = v8;
  NSManagedObjectContext.performAndWait<A>(_:)();
  swift_task_dealloc();
  if (v4)
  {
    sub_10002F214(&qword_1006A3D90);
    swift_allocError();
    void *v10 = v4;
    swift_continuation_throwingResumeWithError();
  }
  return _swift_continuation_await(v3);
}

void *RemoveLockFromNoteIntent.persistentIdentifier.unsafeMutableAddressor()
{
  return &static RemoveLockFromNoteIntent.persistentIdentifier;
}

uint64_t sub_1002B1360()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  sub_100032974(v6, static RemoveLockFromNoteIntent.title);
  sub_10003293C(v6, (uint64_t)static RemoveLockFromNoteIntent.title);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t RemoveLockFromNoteIntent.title.unsafeMutableAddressor()
{
  if (qword_10069AE30 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for LocalizedStringResource();

  return sub_10003293C(v0, (uint64_t)static RemoveLockFromNoteIntent.title);
}

uint64_t static RemoveLockFromNoteIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_10069AE30 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_10003293C(v2, (uint64_t)static RemoveLockFromNoteIntent.title);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

void *RemoveLockFromNoteIntent.openAppWhenRun.unsafeMutableAddressor()
{
  return &static RemoveLockFromNoteIntent.openAppWhenRun;
}

void *RemoveLockFromNoteIntent.assistantOnly.unsafeMutableAddressor()
{
  return &static RemoveLockFromNoteIntent.assistantOnly;
}

uint64_t static RemoveLockFromNoteIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for Locale();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = type metadata accessor for LocalizedStringResource();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v4, 1, 1, v11);
  IntentDescription.init(_:categoryName:searchKeywords:)();
  uint64_t v13 = type metadata accessor for IntentDescription();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 0, 1, v13);
}

uint64_t RemoveLockFromNoteIntent.target.setter(uint64_t a1)
{
  uint64_t v2 = sub_10002F214(&qword_10069B1D0);
  __chkstk_darwin(v2 - 8);
  sub_1002AF970(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  IntentParameter.wrappedValue.setter();
  return sub_10002B754(a1, &qword_10069B1D0);
}

void sub_1002B19FC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6 = [a1 ic_existingObjectWithID:a2];
  if (v6)
  {
    uint64_t v7 = v6;
    self;
    uint64_t v8 = (void *)swift_dynamicCastObjCClass();
    if (v8)
    {
      uint64_t v9 = v8;
      if ([v8 isPasswordProtected])
      {
        id v10 = [objc_allocWithZone((Class)ICNoteLockManager) initWithNote:v9];
        [v10 setWindow:a3];
        uint64_t v11 = swift_allocObject();
        *(void *)(v11 + 16) = a4;
        *(void *)(v11 + 24) = v10;
        v15[4] = sub_1001B5BE8;
        v15[5] = v11;
        v15[0] = _NSConcreteStackBlock;
        v15[1] = 1107296256;
        void v15[2] = sub_10048354C;
        v15[3] = &unk_100633390;
        uint64_t v12 = _Block_copy(v15);
        id v13 = v10;
        swift_release();
        [v13 removeLockWithCompletionHandler:v12];
        _Block_release(v12);

        return;
      }
      sub_100173F8C();
      swift_allocError();
      *uint64_t v14 = 19;
      swift_willThrow();
    }
  }
}

uint64_t sub_1002B1BB0(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  uint64_t v6 = v1[3];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100161724;
  return RemoveLockFromNoteIntent.perform()(a1, v4, v5, v7, v6);
}

uint64_t sub_1002B1C64@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = _s11MobileNotes24RemoveLockFromNoteIntentVACycfC_0();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return result;
}

uint64_t sub_1002B1C90()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1002B1CC8()
{
  sub_1002B19FC(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t _s11MobileNotes24RemoveLockFromNoteIntentVACycfC_0()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v36 = *(void *)(v0 - 8);
  uint64_t v37 = v0;
  __chkstk_darwin(v0);
  uint64_t v35 = (char *)v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64x2_t v34 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  unint64_t v33 = (char *)v31 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069B1D0);
  __chkstk_darwin(v6 - 8);
  uint64_t v32 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v8 - 8);
  v31[0] = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Locale();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = type metadata accessor for LocalizedStringResource();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  v31[1] = sub_10002F214(&qword_10069B210);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v18 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v19(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v19(v13, v18, v10);
  uint64_t v20 = v31[0];
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
  uint64_t v21 = type metadata accessor for NoteEntity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v32, 1, 1, v21);
  uint64_t v22 = type metadata accessor for IntentDialog();
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(v33, 1, 1, v22);
  v23(v34, 1, 1, v22);
  uint64_t v40 = sub_10023F838();
  uint64_t v41 = v24;
  uint64_t v42 = v25;
  uint64x2_t v27 = (uint64x2_t)vdupq_n_s64(v26);
  char v43 = v26 & 1;
  int16x8_t v28 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v27, (uint64x2_t)xmmword_100524D00), (int32x4_t)vshlq_u64(v27, (uint64x2_t)xmmword_100524CF0));
  *(int8x8_t *)v28.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v28), (int8x8_t)0x1000100010001);
  unsigned __int32 v44 = vmovn_s16(v28).u32[0];
  (*(void (**)(char *, void, uint64_t))(v36 + 104))(v35, enum case for InputConnectionBehavior.default(_:), v37);
  sub_1001579C0();
  uint64_t v29 = IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:query:)();
  sub_10002F214((uint64_t *)&unk_10069CE60);
  unint64_t v38 = 0xD000000000000021;
  unint64_t v39 = 0x8000000100549290;
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  sub_10002F214((uint64_t *)&unk_10069B130);
  unint64_t v38 = 0xD000000000000024;
  unint64_t v39 = 0x8000000100549260;
  AnyHashable.init<A>(_:)();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  return v29;
}

uint64_t sub_1002B2374()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002B2390()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for RemoveLockFromNoteIntent()
{
  return &type metadata for RemoveLockFromNoteIntent;
}

uint64_t sub_1002B23F0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t OpenNotesViewIntent.target.setter()
{
  return IntentParameter.wrappedValue.setter();
}

void *OpenNotesViewIntent.persistentIdentifier.unsafeMutableAddressor()
{
  return &static OpenNotesViewIntent.persistentIdentifier;
}

uint64_t sub_1002B2470()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  sub_100032974(v6, static OpenNotesViewIntent.title);
  sub_10003293C(v6, (uint64_t)static OpenNotesViewIntent.title);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t OpenNotesViewIntent.title.unsafeMutableAddressor()
{
  if (qword_10069AE38 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for LocalizedStringResource();

  return sub_10003293C(v0, (uint64_t)static OpenNotesViewIntent.title);
}

uint64_t static OpenNotesViewIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_10069AE38 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_10003293C(v2, (uint64_t)static OpenNotesViewIntent.title);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

void *OpenNotesViewIntent.openAppWhenRun.unsafeMutableAddressor()
{
  return &static OpenNotesViewIntent.openAppWhenRun;
}

uint64_t static OpenNotesViewIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for Locale();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = type metadata accessor for LocalizedStringResource();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v4, 1, 1, v11);
  IntentDescription.init(_:categoryName:searchKeywords:)();
  uint64_t v13 = type metadata accessor for IntentDescription();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 0, 1, v13);
}

uint64_t static OpenNotesViewIntent.parameterSummary.getter()
{
  uint64_t v0 = sub_10002F214(&qword_1006A1E08);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10002F214(&qword_1006A1E10);
  __chkstk_darwin(v1);
  sub_100035F0C();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._countAndFlagsBits = 0x656874206E65704FLL;
  v2._object = (void *)0xE900000000000020;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_10002F214(&qword_1006A1E18);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._countAndFlagsBits = 0x7765697620;
  v3._object = (void *)0xE500000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_1002B2C00@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_1002B2C3C()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t sub_1002B2C74()
{
  uint64_t v0 = sub_10002F214(&qword_1006A1E08);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10002F214(&qword_1006A1E10);
  __chkstk_darwin(v1);
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._countAndFlagsBits = 0x656874206E65704FLL;
  v2._object = (void *)0xE900000000000020;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_10002F214(&qword_1006A1E18);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._countAndFlagsBits = 0x7765697620;
  v3._object = (void *)0xE500000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_1002B2E08@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = _s11MobileNotes04OpenB10ViewIntentVACycfC_0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t _s11MobileNotes04OpenB10ViewIntentVACycfC_0()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v28 = *(void *)(v0 - 8);
  uint64_t v29 = v0;
  __chkstk_darwin(v0);
  uint64x2_t v27 = (char *)v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  unint64_t v26 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v25 = (char *)v23 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  uint64_t v24 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  v23[1] = sub_10002F214(&qword_10069B3B8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  uint64_t v18 = v24;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  char v32 = 2;
  uint64_t v19 = type metadata accessor for IntentDialog();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v25, 1, 1, v19);
  v20(v26, 1, 1, v19);
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v27, enum case for InputConnectionBehavior.default(_:), v29);
  sub_10015805C();
  uint64_t v21 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
  sub_10002F214((uint64_t *)&unk_10069B130);
  unint64_t v30 = 0xD000000000000024;
  unint64_t v31 = 0x8000000100549260;
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  return v21;
}

uint64_t sub_1002B3370@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unint64_t sub_1002B33A0()
{
  unint64_t result = qword_1006A1E20;
  if (!qword_1006A1E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A1E20);
  }
  return result;
}

unint64_t sub_1002B33F8()
{
  unint64_t result = qword_1006A1E28;
  if (!qword_1006A1E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A1E28);
  }
  return result;
}

uint64_t sub_1002B3450()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002B346C()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for OpenNotesViewIntent()
{
  return &type metadata for OpenNotesViewIntent;
}

uint64_t sub_1002B3498()
{
  return sub_10001DFB0(&qword_1006A1E48, &qword_1006A1E50);
}

uint64_t ICArchivePreviewer.__allocating_init(forArchiveAt:)(char *a1)
{
  uint64_t v2 = swift_allocObject();
  ICArchivePreviewer.init(forArchiveAt:)(a1);
  return v2;
}

id ICArchivePreviewer.startPreviewing(_:completion:)(uint64_t a1, void (*a2)(void *, uint64_t), void *a3)
{
  uint64_t v4 = v3;
  uint64_t v77 = a2;
  id v78 = a3;
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v75 = *(void *)(v6 - 8);
  uint64_t v76 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10002F214(&qword_10069D190);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v73 = (char *)&v72 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v72 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v72 - v19;
  uint64_t v74 = v3 + 24;
  swift_beginAccess();
  uint64_t v21 = *(void *)(v3 + 24);
  if (*(void *)(v21 + 16) && (unint64_t v22 = sub_1002B66E0(a1), (v23 & 1) != 0))
  {
    uint64_t v76 = v10;
    uint64_t v24 = *(void *)(v21 + 56) + 24 * v22;
    unint64_t v26 = *(void **)v24;
    uint64_t v25 = *(void **)(v24 + 8);
    uint64_t v27 = *(unsigned __int8 *)(v24 + 16);
    swift_endAccess();
    uint64_t v28 = v27;
    uint64_t v29 = a1;
    switch(v28)
    {
      case 1:
        Swift::String v48 = self;
        id v49 = v26;
        id v32 = [v48 progressWithTotalUnitCount:1];
        [v32 setCompletedUnitCount:[v32 totalUnitCount]];
        id v50 = v49;
        v77(v26, 0);
        sub_1002BC868(v26, (uint64_t)v25, 1);
        sub_1002BC868(v26, (uint64_t)v25, 1);
        return v32;
      case 2:
        swift_errorRetain();
        v77(v26, 1);
        id v32 = [objc_allocWithZone((Class)NSProgress) init];
        sub_1002BC868(v26, (uint64_t)v25, 2);
        return v32;
      case 3:
        id v51 = [self progressWithTotalUnitCount:1];
        uint64_t v52 = v76;
        uint64_t v53 = *(void (**)(char *, uint64_t, uint64_t))(v76 + 16);
        uint64_t v75 = v76 + 16;
        v53(v18, v29, v9);
        sub_10002F214(&qword_10069DD00);
        uint64_t v54 = v29;
        uint64_t v55 = swift_allocObject();
        *(_OWORD *)(v55 + 16) = xmmword_100524D10;
        uint64_t v56 = swift_allocObject();
        id v57 = v78;
        *(void *)(v56 + 16) = v77;
        *(void *)(v56 + 24) = v57;
        *(void *)(v55 + 32) = sub_1002B8E78;
        *(void *)(v55 + 40) = v56;
        swift_beginAccess();
        swift_retain();
        id v78 = v51;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v80 = *(void *)(v4 + 24);
        *(void *)(v4 + 24) = 0x8000000000000000;
        sub_1002BC684((uint64_t)v51, v55, 0, (uint64_t)v18, isUniquelyReferenced_nonNull_native);
        *(void *)(v4 + 24) = v80;
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v52 + 8))(v18, v9);
        swift_endAccess();
        v53(v18, v54, v9);
        uint64_t v59 = *(unsigned __int8 *)(v52 + 80);
        uint64_t v72 = v59 | 7;
        uint64_t v60 = swift_allocObject();
        uint64_t v74 = v60;
        *(void *)(v60 + 16) = v4;
        uint64_t v61 = *(void (**)(uint64_t, char *, uint64_t))(v52 + 32);
        v61(v60 + ((v59 + 24) & ~v59), v18, v9);
        uint64_t v77 = *(void (**)(void *, uint64_t))(v4 + 16);
        uint64_t v62 = v73;
        v53(v73, v54, v9);
        uint64_t v63 = (v59 + 16) & ~v59;
        unint64_t v64 = (v11 + v63 + 7) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v65 = (v64 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v66 = swift_allocObject();
        v61(v66 + v63, v62, v9);
        unint64_t v67 = v78;
        *(void *)(v66 + v64) = v78;
        *(void *)(v66 + v65) = v4;
        uint64_t v68 = (void *)(v66 + ((v65 + 15) & 0xFFFFFFFFFFFFFFF8));
        uint64_t v69 = v74;
        *uint64_t v68 = sub_1002BC85C;
        v68[1] = v69;
        aBlock[4] = (uint64_t)sub_1002BC864;
        aBlock[5] = v66;
        aBlock[0] = (uint64_t)_NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        void aBlock[2] = (uint64_t)sub_1002B6294;
        uint64_t aBlock[3] = (uint64_t)&unk_1006334C0;
        uint64_t v70 = _Block_copy(aBlock);
        swift_retain_n();
        id v71 = v67;
        swift_retain();
        swift_release();
        [v77 performBackgroundTask:v70];
        _Block_release(v70);
        swift_release();
        id result = v71;
        break;
      default:
        (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v20, a1, v9);
        uint64_t v30 = swift_allocObject();
        id v31 = v78;
        *(void *)(v30 + 16) = v77;
        *(void *)(v30 + 24) = v31;
        sub_1001AB8D0(v26, (uint64_t)v25, 0);
        id v32 = v26;
        swift_retain();
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v25 = sub_1001A836C(0, v25[2] + 1, 1, v25);
        }
        unint64_t v34 = v25[2];
        unint64_t v33 = v25[3];
        if (v34 >= v33 >> 1) {
          uint64_t v25 = sub_1001A836C((void *)(v33 > 1), v34 + 1, 1, v25);
        }
        v25[2] = v34 + 1;
        uint64_t v35 = &v25[2 * v34];
        void v35[4] = sub_1002B8E78;
        v35[5] = v30;
        swift_release();
        uint64_t v36 = (unint64_t *)v74;
        swift_beginAccess();
        char v37 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v80 = *v36;
        *uint64_t v36 = 0x8000000000000000;
        sub_1002BC684((uint64_t)v26, (uint64_t)v25, 0, (uint64_t)v20, v37);
        *uint64_t v36 = v80;
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v76 + 8))(v20, v9);
        swift_endAccess();
        return v32;
    }
  }
  else
  {
    swift_endAccess();
    if (qword_10069AE40 != -1) {
      swift_once();
    }
    uint64_t v38 = type metadata accessor for Logger();
    sub_10003293C(v38, (uint64_t)qword_1006A1E58);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a1, v9);
    unint64_t v39 = Logger.logObject.getter();
    os_log_type_t v40 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      uint64_t v74 = swift_slowAlloc();
      aBlock[0] = v74;
      *(_DWORD *)uint64_t v41 = 136315138;
      uint64_t v73 = (char *)(v41 + 4);
      ICObjectReferences.identifier.getter();
      sub_1002C063C(&qword_1006A10C8, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v42 = v76;
      uint64_t v43 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v72 = v9;
      unint64_t v45 = v44;
      (*(void (**)(char *, uint64_t))(v75 + 8))(v8, v42);
      unint64_t v80 = sub_10045DA1C(v43, v45, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v72);
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "Object to be previewed does not exist {url: %s}", v41, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    }

    sub_1001ACB38();
    swift_allocError();
    *Swift::String v46 = 4;
    ((void (*)(void))v77)();
    swift_errorRelease();
    return [objc_allocWithZone((Class)NSProgress) init];
  }
  return result;
}

void ICArchivePreviewer.stopPreviewing(_:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10002F214(&qword_10069D190);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v44 - v12;
  uint64_t v14 = (unint64_t *)(v1 + 24);
  swift_beginAccess();
  uint64_t v15 = *(void *)(v1 + 24);
  if (*(void *)(v15 + 16))
  {
    unint64_t v16 = sub_1002B66E0(a1);
    if (v17)
    {
      uint64_t v18 = *(void *)(v15 + 56) + 24 * v16;
      uint64_t v20 = *(void **)v18;
      uint64_t v19 = *(void *)(v18 + 8);
      uint64_t v21 = *(unsigned __int8 *)(v18 + 16);
      swift_endAccess();
      switch(v21)
      {
        case 1:
          [v20 setMarkedForDeletion:1];
          (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v13, a1, v7);
          swift_beginAccess();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v53 = *v14;
          *uint64_t v14 = 0x8000000000000000;
          sub_1002BC684(0, 0, 3, (uint64_t)v13, isUniquelyReferenced_nonNull_native);
          *uint64_t v14 = v53;
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
          swift_endAccess();
          sub_1002BC868(v20, v19, 1);
          return;
        case 2:
          (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v13, a1, v7);
          swift_beginAccess();
          char v41 = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v53 = *v14;
          *uint64_t v14 = 0x8000000000000000;
          uint64_t v42 = 0;
          uint64_t v43 = 0;
          goto LABEL_19;
        case 3:
          (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v13, a1, v7);
          swift_beginAccess();
          char v41 = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v53 = *v14;
          *uint64_t v14 = 0x8000000000000000;
          uint64_t v42 = (uint64_t)v20;
          uint64_t v43 = v19;
LABEL_19:
          sub_1002BC684(v42, v43, 3, (uint64_t)v13, v41);
          *uint64_t v14 = v53;
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
          goto LABEL_14;
        default:
          id v22 = v20;
          swift_bridgeObjectRetain();
          [v22 cancel];
          (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v13, a1, v7);
          swift_beginAccess();
          char v23 = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v53 = *v14;
          *uint64_t v14 = 0x8000000000000000;
          sub_1002BC684(0, 0, 3, (uint64_t)v13, v23);
          *uint64_t v14 = v53;
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
          swift_endAccess();
          static String._unconditionallyBridgeFromObjectiveC(_:)();
          id v24 = objc_allocWithZone((Class)NSError);
          NSString v25 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v26 = [v24 initWithDomain:v25 code:3072 userInfo:0];

          uint64_t v27 = *(void *)(v19 + 16);
          if (v27)
          {
            swift_bridgeObjectRetain();
            uint64_t v28 = v19 + 40;
            do
            {
              uint64_t v29 = *(void (**)(uint64_t *))(v28 - 8);
              uint64_t v54 = (uint64_t)v26;
              char v55 = 1;
              swift_retain();
              v29(&v54);
              swift_release();
              v28 += 16;
              --v27;
            }
            while (v27);

            swift_bridgeObjectRelease();
          }
          else
          {
          }
          swift_bridgeObjectRelease();
          return;
      }
    }
  }
  uint64_t v51 = v4;
  swift_endAccess();
  if (qword_10069AE40 != -1) {
    swift_once();
  }
  uint64_t v30 = type metadata accessor for Logger();
  sub_10003293C(v30, (uint64_t)qword_1006A1E58);
  uint64_t v52 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v52(v11, a1, v7);
  id v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.fault.getter();
  int v50 = v32;
  if (os_log_type_enabled(v31, v32))
  {
    os_log_t v47 = v31;
    unint64_t v33 = (uint8_t *)swift_slowAlloc();
    uint64_t v46 = swift_slowAlloc();
    uint64_t v54 = v46;
    id v49 = v13;
    *(_DWORD *)unint64_t v33 = 136315138;
    v44[1] = v33 + 4;
    unint64_t v45 = v33;
    ICObjectReferences.identifier.getter();
    sub_1002C063C(&qword_1006A10C8, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v34 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v48 = a1;
    uint64_t v35 = v8;
    unint64_t v37 = v36;
    (*(void (**)(char *, uint64_t))(v51 + 8))(v6, v3);
    unint64_t v53 = sub_10045DA1C(v34, v37, &v54);
    uint64_t v13 = v49;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v38 = *(void (**)(char *, uint64_t))(v35 + 8);
    v38(v11, v7);
    id v31 = v47;
    a1 = v48;
    _os_log_impl((void *)&_mh_execute_header, v47, (os_log_type_t)v50, "Object to be previewed does not exist {url: %s}", v45, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v38 = *(void (**)(char *, uint64_t))(v8 + 8);
    v38(v11, v7);
  }

  v52(v13, a1, v7);
  swift_beginAccess();
  char v39 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v53 = *v14;
  *uint64_t v14 = 0x8000000000000000;
  sub_1002BC684(0, 0, 3, (uint64_t)v13, v39);
  *uint64_t v14 = v53;
  swift_bridgeObjectRelease();
  v38(v13, v7);
LABEL_14:
  swift_endAccess();
}

uint64_t sub_1002B471C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100032974(v0, qword_1006A1E58);
  sub_10003293C(v0, (uint64_t)qword_1006A1E58);
  return static Logger.archiving.getter();
}

uint64_t ICArchivePreviewer.init(forArchiveAt:)(char *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10002F214(&qword_10069C550);
  uint64_t v71 = *(void *)(v4 - 8);
  uint64_t v72 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10002F214(&qword_10069D190);
  uint64_t v74 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v1 + 24) = sub_100168270((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v10 = (void *)(v1 + 24);
  id v11 = [self sharedContext];
  if (!v11
    || (uint64_t v12 = v11,
        id v13 = [v11 persistentContainer],
        v12,
        !v13))
  {
    if (qword_10069AE40 != -1) {
      swift_once();
    }
    uint64_t v28 = type metadata accessor for Logger();
    sub_10003293C(v28, (uint64_t)qword_1006A1E58);
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v29, v30))
    {
      id v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v31 = 0;
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "No shared note context has been set up", v31, 2u);
      swift_slowDealloc();
    }

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v32 = objc_allocWithZone((Class)NSError);
    NSString v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v32 initWithDomain:v33 code:134060 userInfo:0];

    swift_willThrow();
    uint64_t v34 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t))(*(void *)(v34 - 8) + 8))(a1, v34);
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
    return v2;
  }
  uint64_t v70 = v6;
  uint64_t v66 = v10;
  *(void *)(v2 + 16) = v13;
  id v14 = v13;
  uint64_t v68 = (char *)[v14 viewContext];
  uint64_t v15 = (objc_class *)type metadata accessor for ICArchiveImporter();
  id v16 = objc_allocWithZone(v15);
  id v17 = [self defaultManager];
  __int16 IsAlexandriaDemoModeEnabled = ICInternalSettingsIsAlexandriaDemoModeEnabled();
  unint64_t v67 = a1;
  __int16 v19 = IsAlexandriaDemoModeEnabled;
  int v20 = ICInternalSettingsIsAlexandriaDemoModeEnabled();
  uint64_t v21 = objc_allocWithZone(v15);
  if (v20) {
    __int16 v22 = 256;
  }
  else {
    __int16 v22 = 0;
  }
  char v23 = v67;
  id v24 = sub_10028083C(v68, v22 | v19, 0, 0, v17, v21, 0.0);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  NSString v25 = v69;
  id v26 = (char *)ICArchiveImporter.objects(forArchiveAt:)(v23);
  if (v25)
  {
    swift_release();

    uint64_t v27 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t))(*(void *)(v27 - 8) + 8))(v23, v27);
    return v2;
  }
  id v62 = v24;
  id v63 = v14;
  uint64_t v64 = 0;
  uint64_t v73 = _swiftEmptyArrayStorage;
  uint64_t v36 = *((void *)v26 + 2);
  uint64_t v65 = v2;
  if (v36)
  {
    unint64_t v37 = *(void (**)(void, void, void))(v74 + 16);
    uint64_t v68 = v26;
    uint64_t v69 = v37;
    uint64_t v38 = &v26[(*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80)];
    uint64_t v39 = *(void *)(v74 + 72);
    os_log_type_t v40 = (void (**)(char *, uint64_t))(v74 + 8);
    swift_bridgeObjectRetain();
    do
    {
      v69(v9, v38, v7);
      uint64_t v41 = ICObjectReferences.recursiveChildren.getter();
      (*v40)(v9, v7);
      sub_10022AB90(v41);
      v38 += v39;
      --v36;
    }
    while (v36);
    swift_bridgeObjectRelease_n();
    uint64_t v42 = v73;
    uint64_t v2 = v65;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v42 = _swiftEmptyArrayStorage;
  }
  int64_t v43 = v42[2];
  uint64_t v44 = (uint64_t)v70;
  if (v43)
  {
    uint64_t v73 = _swiftEmptyArrayStorage;
    sub_100169B4C(0, v43, 0);
    unint64_t v45 = *(void (**)(void, void, void))(v74 + 16);
    uint64_t v46 = *(unsigned __int8 *)(v74 + 80);
    v61[1] = v42;
    os_log_t v47 = (char *)v42 + ((v46 + 32) & ~v46);
    uint64_t v68 = *(char **)(v74 + 72);
    uint64_t v69 = v45;
    v74 += 16;
    uint64_t v48 = (void (**)(char *, uint64_t))(v74 - 8);
    do
    {
      id v49 = (void (*)(uint64_t, char *, uint64_t))v69;
      v69(v9, v47, v7);
      uint64_t v50 = v44 + *(int *)(v72 + 48);
      v49(v44, v9, v7);
      *(void *)uint64_t v50 = 0;
      *(void *)(v50 + 8) = 0;
      *(unsigned char *)(v50 + 16) = 3;
      (*v48)(v9, v7);
      uint64_t v51 = v73;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100169B4C(0, v51[2] + 1, 1);
        uint64_t v51 = v73;
      }
      unint64_t v53 = v51[2];
      unint64_t v52 = v51[3];
      if (v53 >= v52 >> 1)
      {
        sub_100169B4C(v52 > 1, v53 + 1, 1);
        uint64_t v51 = v73;
      }
      v51[2] = v53 + 1;
      uint64_t v44 = (uint64_t)v70;
      sub_1002BFF64((uint64_t)v70, (uint64_t)v51+ ((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80))+ *(void *)(v71 + 72) * v53);
      os_log_t v47 = &v68[(void)v47];
      --v43;
    }
    while (v43);
    swift_bridgeObjectRelease();
    uint64_t v2 = v65;
    if (v51[2]) {
      goto LABEL_27;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    if (_swiftEmptyArrayStorage[2])
    {
LABEL_27:
      sub_10002F214(&qword_10069C558);
      uint64_t v54 = (void *)static _DictionaryStorage.allocate(capacity:)();
      goto LABEL_30;
    }
  }
  uint64_t v54 = &_swiftEmptyDictionarySingleton;
LABEL_30:
  char v55 = v63;
  uint64_t v73 = v54;
  uint64_t v56 = swift_bridgeObjectRetain();
  uint64_t v57 = v64;
  sub_1002BF9F0(v56, 1, &v73);
  if (!v57)
  {

    swift_bridgeObjectRelease();
    uint64_t v58 = v73;
    uint64_t v59 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t))(*(void *)(v59 - 8) + 8))(v67, v59);
    uint64_t v60 = v66;
    swift_beginAccess();
    *uint64_t v60 = v58;
    swift_bridgeObjectRelease();
    return v2;
  }
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t ICArchivePreviewer.deinit()
{
  uint64_t v1 = sub_10002F214(&qword_10069D190);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v0 + 24);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v18 = v5 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v6;
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v12 << 6);
      goto LABEL_5;
    }
    int64_t v15 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v15 >= v10) {
      goto LABEL_25;
    }
    unint64_t v16 = *(void *)(v18 + 8 * v15);
    ++v12;
    if (!v16)
    {
      int64_t v12 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_25;
      }
      unint64_t v16 = *(void *)(v18 + 8 * v12);
      if (!v16)
      {
        int64_t v12 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_25;
        }
        unint64_t v16 = *(void *)(v18 + 8 * v12);
        if (!v16)
        {
          int64_t v12 = v15 + 3;
          if (v15 + 3 >= v10) {
            goto LABEL_25;
          }
          unint64_t v16 = *(void *)(v18 + 8 * v12);
          if (!v16)
          {
            int64_t v12 = v15 + 4;
            if (v15 + 4 >= v10) {
              goto LABEL_25;
            }
            unint64_t v16 = *(void *)(v18 + 8 * v12);
            if (!v16) {
              break;
            }
          }
        }
      }
    }
LABEL_24:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v12 << 6);
LABEL_5:
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + *(void *)(v2 + 72) * v14, v1);
    ICArchivePreviewer.stopPreviewing(_:)((uint64_t)v4);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  int64_t v17 = v15 + 5;
  if (v17 >= v10)
  {
LABEL_25:
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    *(void *)(v0 + 24) = &_swiftEmptyDictionarySingleton;
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    return v0;
  }
  unint64_t v16 = *(void *)(v18 + 8 * v17);
  if (v16)
  {
    int64_t v12 = v17;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v10) {
      goto LABEL_25;
    }
    unint64_t v16 = *(void *)(v18 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_24;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t ICArchivePreviewer.__deallocating_deinit()
{
  ICArchivePreviewer.deinit();

  return swift_deallocClassInstance();
}

uint64_t ICArchivePreviewer.Errors.errorDescription.getter(uint64_t a1)
{
  if (a1)
  {
    uint64_t result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
    __break(1u);
  }
  else
  {
    id v1 = [self mainBundle];
    NSString v2 = String._bridgeToObjectiveC()();
    id v3 = [v1 localizedStringForKey:v2 value:0 table:0];

    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    return v4;
  }
  return result;
}

uint64_t ICArchivePreviewer.Errors.init(rawValue:)()
{
  return 0;
}

unint64_t static ICArchivePreviewer.Errors._nsErrorDomain.getter()
{
  return 0xD000000000000025;
}

uint64_t sub_1002B5304(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1002C03E0();

  return _BridgedNSError.hash(into:)(a1, a2, v4);
}

void *sub_1002B5350@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2 = *result != 0;
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_1002B5368()
{
  return ICArchivePreviewer.Errors.errorDescription.getter(*v0);
}

uint64_t sub_1002B5370(uint64_t a1)
{
  unint64_t v2 = sub_1002C03E0();

  return _BridgedNSError._domain.getter(a1, v2);
}

uint64_t sub_1002B53AC(uint64_t a1)
{
  unint64_t v2 = sub_1002C03E0();

  return _BridgedNSError._code.getter(a1, v2);
}

uint64_t sub_1002B53E8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1002C03E0();

  return _BridgedNSError.init(_bridgedNSError:)(a1, a2, v4);
}

uint64_t ICArchivePreviewer.objects.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_1002B5474(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v48 = *(void *)(v8 - 8);
  uint64_t v49 = v8;
  __chkstk_darwin(v8);
  os_log_t v47 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10002F214(&qword_10069D190);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v51 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  int64_t v15 = (char *)&v45 - v14;
  unint64_t v16 = (unint64_t *)(a3 + 24);
  swift_beginAccess();
  uint64_t v17 = *(void *)(a3 + 24);
  if (*(void *)(v17 + 16) && (unint64_t v18 = sub_1002B66E0(a4), (v19 & 1) != 0))
  {
    uint64_t v20 = *(void *)(v17 + 56) + 24 * v18;
    uint64_t v21 = *(void *)(v20 + 8);
    int v22 = *(unsigned __int8 *)(v20 + 16);
    unint64_t v52 = *(void **)v20;
    uint64_t v53 = v21;
    int v54 = v22;
    sub_1001AB8D0(v52, v21, v22);
  }
  else
  {
    unint64_t v52 = 0;
    uint64_t v53 = 0;
    int v54 = 255;
  }
  swift_endAccess();
  char v23 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v50 = a4;
  v23(v15, a4, v10);
  swift_beginAccess();
  uint64_t v24 = v11;
  uint64_t v25 = v10;
  if (a2) {
    int v26 = 2;
  }
  else {
    int v26 = 1;
  }
  sub_1002C0794(a1, a2 & 1);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v55 = *v16;
  *unint64_t v16 = 0x8000000000000000;
  sub_1002BC684((uint64_t)a1, 0, v26, (uint64_t)v15, isUniquelyReferenced_nonNull_native);
  *unint64_t v16 = v55;
  swift_bridgeObjectRelease();
  uint64_t v28 = *(void (**)(char *, uint64_t))(v24 + 8);
  v28(v15, v25);
  swift_endAccess();
  char v29 = v54;
  if (v54)
  {
    if (qword_10069AE40 != -1) {
      swift_once();
    }
    uint64_t v30 = type metadata accessor for Logger();
    sub_10003293C(v30, (uint64_t)qword_1006A1E58);
    id v31 = v51;
    v23(v51, v50, v25);
    id v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v50 = swift_slowAlloc();
      uint64_t v56 = v50;
      uint64_t v46 = v25;
      *(_DWORD *)uint64_t v34 = 136315138;
      unint64_t v45 = v34 + 4;
      uint64_t v35 = v47;
      ICObjectReferences.identifier.getter();
      sub_1002C063C(&qword_1006A10C8, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v36 = v49;
      uint64_t v37 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v39 = v38;
      (*(void (**)(char *, uint64_t))(v48 + 8))(v35, v36);
      unint64_t v55 = sub_10045DA1C(v37, v39, &v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v28(v51, v46);
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "Preview object is in unexpected state {url: %s}", v34, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_1002C07A0(v52, v53, v54);
    }
    else
    {
      sub_1002C07A0(v52, v53, v29);
      v28(v31, v25);
    }
  }
  else
  {
    uint64_t v41 = v52;
    uint64_t v40 = v53;
    sub_1001AB8D0(v52, v53, 0);

    uint64_t v42 = *(void *)(v40 + 16);
    if (v42)
    {
      swift_bridgeObjectRetain();
      uint64_t v43 = v40 + 40;
      do
      {
        uint64_t v44 = *(void (**)(uint64_t *))(v43 - 8);
        uint64_t v56 = (uint64_t)a1;
        char v57 = a2 & 1;
        swift_retain();
        v44(&v56);
        swift_release();
        v43 += 16;
        --v42;
      }
      while (v42);
      swift_bridgeObjectRelease();
    }
    sub_1002C07A0(v41, v40, 0);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1002B59BC(void *a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v60 = a5;
  uint64_t v61 = a6;
  uint64_t v58 = a4;
  uint64_t v59 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v65 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchQoS();
  uint64_t v63 = *(void *)(v11 - 8);
  uint64_t v64 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (objc_class *)type metadata accessor for ICArchiveImporter();
  id v15 = objc_allocWithZone(v14);
  unint64_t v16 = self;
  id v17 = a1;
  id v18 = [v16 defaultManager];
  __int16 IsAlexandriaDemoModeEnabled = ICInternalSettingsIsAlexandriaDemoModeEnabled();
  int v20 = ICInternalSettingsIsAlexandriaDemoModeEnabled();
  uint64_t v21 = objc_allocWithZone(v14);
  if (v20) {
    __int16 v22 = 256;
  }
  else {
    __int16 v22 = 0;
  }
  id v23 = sub_10028083C(v17, v22 | IsAlexandriaDemoModeEnabled, 0, 0, v18, v21, 0.0);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  id v24 = [self inMemoryAccountInContext:v17];
  id v25 = [v24 defaultFolder];
  id v62 = v23;
  uint64_t v26 = sub_10027CADC(a2, v25, (uint64_t (**)(void, void, int64_t, id, uint64_t, uint64_t, double))&off_100636F60, a3);
  char v28 = v27;
  uint64_t v55 = v26;
  uint64_t v56 = v29;
  char v57 = v30;

  aBlocid k = 0;
  unsigned int v31 = [v17 save:&aBlock];
  id v32 = aBlock;
  if (v31)
  {
    sub_100031418(0, (unint64_t *)&qword_10069D2D0);
    os_log_type_t v33 = v32;
    uint64_t v54 = static OS_dispatch_queue.main.getter();
    uint64_t v34 = swift_allocObject();
    uint64_t v36 = v55;
    uint64_t v35 = v56;
    *(void *)(v34 + 16) = v55;
    *(void *)(v34 + 24) = v35;
    uint64_t v37 = v58;
    *(void *)(v34 + 32) = v57;
    char v38 = v28 & 1;
    *(unsigned char *)(v34 + 40) = v38;
    *(void *)(v34 + 48) = v37;
    *(void *)(v34 + 56) = a3;
    uint64_t v39 = v61;
    *(void *)(v34 + 64) = v60;
    *(void *)(v34 + 72) = v39;
    uint64_t v70 = sub_1002C072C;
    uint64_t v71 = (void *)v34;
    aBlocid k = _NSConcreteStackBlock;
    uint64_t v67 = 1107296256;
    uint64_t v68 = sub_100262E2C;
    uint64_t v69 = &unk_100633638;
    uint64_t v60 = _Block_copy(&aBlock);
    uint64_t v40 = v35;
    uint64_t v41 = v57;
    sub_1002C0744(v36, v40, v57, v38);
    swift_retain();
    id v42 = a3;
    swift_retain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlocid k = (void **)_swiftEmptyArrayStorage;
    sub_1002C063C((unint64_t *)&qword_1006A26A0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10002F214((uint64_t *)&unk_1006A4830);
    sub_10001DFB0((unint64_t *)&qword_1006A26B0, (uint64_t *)&unk_1006A4830);
    uint64_t v43 = v59;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v44 = v60;
    unint64_t v45 = (void *)v54;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v44);

    sub_1002C0684(v55, v56, v41, v38);
  }
  else
  {
    uint64_t v46 = aBlock;
    uint64_t v47 = _convertNSErrorToError(_:)();

    swift_willThrow();
    sub_1002C0684(v55, v56, v57, v28 & 1);

    sub_100031418(0, (unint64_t *)&qword_10069D2D0);
    uint64_t v48 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v49 = (void *)swift_allocObject();
    uint64_t v50 = v61;
    v49[2] = v60;
    void v49[3] = v50;
    void v49[4] = v47;
    uint64_t v70 = sub_1002C0608;
    uint64_t v71 = v49;
    aBlocid k = _NSConcreteStackBlock;
    uint64_t v67 = 1107296256;
    uint64_t v68 = sub_100262E2C;
    uint64_t v69 = &unk_1006335E8;
    uint64_t v51 = _Block_copy(&aBlock);
    swift_retain();
    swift_errorRetain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlocid k = (void **)_swiftEmptyArrayStorage;
    sub_1002C063C((unint64_t *)&qword_1006A26A0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10002F214((uint64_t *)&unk_1006A4830);
    sub_10001DFB0((unint64_t *)&qword_1006A26B0, (uint64_t *)&unk_1006A4830);
    uint64_t v43 = v59;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();

    _Block_release(v51);
    swift_errorRelease();
  }
  (*(void (**)(char *, uint64_t))(v65 + 8))(v10, v43);
  return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v13, v64);
}

void sub_1002B6078(void *a1, uint64_t a2, void *a3, char a4, uint64_t a5, void *a6, void (*a7)(void *, uint64_t))
{
  uint64_t v9 = a1;
  if (a4)
  {
    swift_errorRetain();
    uint64_t v13 = 1;
  }
  else
  {
    v14[0] = a1;
    v14[1] = a2;
    v14[2] = a3;
    swift_bridgeObjectRetain();
    id v12 = a3;
    sub_1002B616C((uint64_t)v14, a5, (uint64_t)&v15);

    swift_bridgeObjectRelease();
    uint64_t v9 = v15;
    uint64_t v13 = v16;
  }
  [a6 setCompletedUnitCount:[a6 totalUnitCount]];
  a7(v9, v13);

  sub_1001ACB0C(v9, v13);
}

void sub_1002B616C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4 = *(void **)(a1 + 16);
  id v5 = [*(id *)(a2 + 16) viewContext];
  id v6 = [v4 objectID];
  id v7 = [v5 objectWithID:v6];

  void v14[3] = sub_100031418(0, (unint64_t *)&qword_1006A2780);
  v14[0] = v7;
  id v8 = v7;
  uint64_t v9 = (void *)sub_1001A7948((uint64_t)v14);
  sub_100018FE8((uint64_t)v14);
  unsigned int v10 = [v9 isPasswordProtected:v14[0]];
  char v11 = v10;
  if (v10)
  {
    sub_1002C0028();
    uint64_t v12 = swift_allocError();
    *uint64_t v13 = 0;

    uint64_t v9 = (void *)v12;
  }

  *(void *)a3 = v9;
  *(unsigned char *)(a3 + 8) = v11;
}

void sub_1002B6294(uint64_t a1, void *a2)
{
  id v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

unint64_t sub_1002B6300(uint64_t a1)
{
  type metadata accessor for UUID();
  sub_1002C063C((unint64_t *)&qword_1006A4DD0, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v2 = dispatch thunk of Hashable._rawHashValue(seed:)();
  return sub_1002B75A0(a1, v2, (uint64_t (*)(void))&type metadata accessor for UUID, &qword_10069DE60, (void (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
}

unint64_t sub_1002B63D4(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v4 = Hasher._finalize()();

  return sub_1002B7238(a1, a2, v4);
}

unint64_t sub_1002B644C(uint64_t a1)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v2 = Hasher._finalize()();
  swift_bridgeObjectRelease();

  return sub_1002B731C(a1, v2);
}

unint64_t sub_1002B64E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  if (a4)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  Swift::Int v8 = Hasher._finalize()();

  return sub_1002B7494(a1, a2, a3, a4, v8);
}

unint64_t sub_1002B65BC(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
  return sub_1002B8780(a1, v4, (unint64_t *)&qword_10069E810);
}

unint64_t sub_1002B660C(uint64_t a1)
{
  type metadata accessor for URL();
  sub_1002C063C((unint64_t *)&unk_10069BA10, (void (*)(uint64_t))&type metadata accessor for URL);
  uint64_t v2 = dispatch thunk of Hashable._rawHashValue(seed:)();
  return sub_1002B75A0(a1, v2, (uint64_t (*)(void))&type metadata accessor for URL, (unint64_t *)&qword_1006A4D60, (void (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
}

unint64_t sub_1002B66E0(uint64_t a1)
{
  sub_10002F214(&qword_10069D190);
  sub_10001DFB0(&qword_1006A1F60, &qword_10069D190);
  uint64_t v2 = dispatch thunk of Hashable._rawHashValue(seed:)();

  return sub_1002B7740(a1, v2);
}

unint64_t sub_1002B6778(uint64_t a1)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v2 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  return sub_1002B731C(a1, v2);
}

unint64_t sub_1002B680C(char a1)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v2 = Hasher._finalize()();

  return sub_1002B78F8(a1 & 1, v2);
}

unint64_t sub_1002B68BC(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v2 = Hasher._finalize()();

  return sub_1002B7A44(a1, v2);
}

unint64_t sub_1002B69CC(char a1)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v2 = Hasher._finalize()();

  return sub_1002B7C6C(a1 & 1, v2);
}

unint64_t sub_1002B6A58(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  if (a2)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  Swift::Int v4 = Hasher._finalize()();

  return sub_1002B7D64(a1, a2, v4);
}

unint64_t sub_1002B6AFC(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v2 = Hasher._finalize()();

  return sub_1002B7E30(a1, v2);
}

unint64_t sub_1002B6C20(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v2 = Hasher._finalize()();

  return sub_1002B8080(a1, v2);
}

unint64_t sub_1002B6CE0(char a1)
{
  Hasher.init(_seed:)();
  ParagraphStyle.rawValue.getter(a1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v2 = Hasher._finalize()();

  return sub_1002B8208(a1, v2);
}

unint64_t sub_1002B6D68(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  Swift::Int v2 = Hasher._finalize()();

  return sub_1002B85A0(a1, v2);
}

unint64_t sub_1002B6DD4(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v4 = Hasher._finalize()();

  return sub_1002B7238(a1, a2, v4);
}

unint64_t sub_1002B6E60(char a1)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v2 = Hasher._finalize()();

  return sub_1002B8640(a1 & 1, v2);
}

unint64_t sub_1002B6F10(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
  return sub_1002B8780(a1, v4, &qword_1006A5290);
}

unint64_t sub_1002B6F60(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v2 = Hasher._finalize()();

  return sub_1002B8894(a1, v2);
}

unint64_t sub_1002B705C(Swift::UInt a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  Swift::Int v2 = Hasher._finalize()();
  return sub_1002B8A94(a1, v2);
}

unint64_t sub_1002B70C4(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v2 = Hasher._finalize()();

  return sub_1002B8B30(a1, v2);
}

unint64_t sub_1002B717C(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v2 = Hasher._finalize()();
  return sub_1002B8CAC(a1, v2);
}

unint64_t sub_1002B7238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    unsigned int v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1002B731C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;
    if (v6 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v15 = v14;
          if (v13 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v15 == v16) {
            break;
          }
          char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1002B7494(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = a5 & ~v7;
  if ((*(void *)(v5 + 64 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v13 = ~v7;
    uint64_t v14 = *(void *)(v5 + 48);
    do
    {
      uint64_t v15 = (void *)(v14 + 32 * v8);
      uint64_t v17 = v15[2];
      uint64_t v16 = v15[3];
      BOOL v18 = *v15 == a1 && v15[1] == a2;
      if (v18 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        if (v16)
        {
          if (a4)
          {
            BOOL v19 = v17 == a3 && v16 == a4;
            if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
              return v8;
            }
          }
        }
        else if (!a4)
        {
          return v8;
        }
      }
      unint64_t v8 = (v8 + 1) & v13;
    }
    while (((*(void *)(v6 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  return v8;
}

unint64_t sub_1002B75A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, void (*a5)(uint64_t), uint64_t a6)
{
  id v24 = a5;
  uint64_t v25 = a6;
  id v23 = a4;
  v21[1] = a1;
  uint64_t v8 = a3(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  char v11 = (char *)v21 - v10;
  uint64_t v22 = v6;
  uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v13 = a2 & ~v12;
  v21[0] = v6 + 64;
  if ((*(void *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v14 = ~v12;
    uint64_t v17 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    uint64_t v16 = v9 + 16;
    uint64_t v15 = v17;
    uint64_t v18 = *(void *)(v16 + 56);
    do
    {
      v15(v11, *(void *)(v22 + 48) + v18 * v13, v8);
      sub_1002C063C(v23, v24);
      char v19 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v16 - 8))(v11, v8);
      if (v19) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
    }
    while (((*(void *)(v21[0] + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

unint64_t sub_1002B7740(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = sub_10002F214(&qword_10069D190);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v18 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    unint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    char v11 = v13;
    uint64_t v14 = *(void *)(v12 + 56);
    do
    {
      v11(v7, *(void *)(v20 + 48) + v14 * v9, v4);
      sub_10001DFB0(&qword_1006A1F70, &qword_10069D190);
      char v15 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v12 - 8))(v7, v4);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v18 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

unint64_t sub_1002B78F8(char a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    if (a1) {
      uint64_t v6 = 0x776569567473696CLL;
    }
    else {
      uint64_t v6 = 0x567972656C6C6167;
    }
    if (a1) {
      unint64_t v7 = 0xE800000000000000;
    }
    else {
      unint64_t v7 = 0xEB00000000776569;
    }
    while (1)
    {
      uint64_t v8 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? 0x776569567473696CLL : 0x567972656C6C6167;
      unint64_t v9 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? 0xE800000000000000 : 0xEB00000000776569;
      if (v8 == v6 && v9 == v7) {
        break;
      }
      char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v5;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_1002B7A44(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE900000000000073;
      uint64_t v8 = 0x65746F4E6C6C6163;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          uint64_t v8 = 0x65746F4E6874616DLL;
          break;
        case 2:
          uint64_t v8 = 0x746F4E6B63697571;
          unint64_t v7 = 0xEA00000000007365;
          break;
        case 3:
          uint64_t v8 = 0x6957646572616873;
          unint64_t v7 = 0xED0000756F596874;
          break;
        default:
          break;
      }
      uint64_t v9 = 0x65746F4E6C6C6163;
      unint64_t v10 = 0xE900000000000073;
      switch(v6)
      {
        case 1:
          if (v8 == 0x65746F4E6874616DLL) {
            goto LABEL_14;
          }
          goto LABEL_15;
        case 2:
          uint64_t v9 = 0x746F4E6B63697571;
          unint64_t v10 = 0xEA00000000007365;
          goto LABEL_11;
        case 3:
          unint64_t v10 = 0xED0000756F596874;
          if (v8 == 0x6957646572616873) {
            goto LABEL_14;
          }
          goto LABEL_15;
        default:
LABEL_11:
          if (v8 != v9) {
            goto LABEL_15;
          }
LABEL_14:
          if (v7 == v10)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_15:
          char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_1002B7C6C(char a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    if (a1) {
      uint64_t v6 = 7105633;
    }
    else {
      uint64_t v6 = 7958113;
    }
    while (1)
    {
      uint64_t v7 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? 7105633 : 7958113;
      if (v7 == v6) {
        break;
      }
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease_n();
      if ((v8 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v5;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_1002B7D64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = ~v5;
    uint64_t v10 = *(void *)(v3 + 48);
    do
    {
      char v11 = (void *)(v10 + 16 * v6);
      uint64_t v12 = v11[1];
      if (v12)
      {
        if (a2)
        {
          BOOL v13 = *v11 == a1 && v12 == a2;
          if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
            return v6;
          }
        }
      }
      else if (!a2)
      {
        return v6;
      }
      unint64_t v6 = (v6 + 1) & v9;
    }
    while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
  }
  return v6;
}

unint64_t sub_1002B7E30(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0x8000000100548E40;
      unint64_t v8 = 0xD000000000000010;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          uint64_t v9 = "autoConvertToTag";
          goto LABEL_7;
        case 2:
          unint64_t v8 = 0x6363416C61636F6CLL;
          unint64_t v7 = 0xEC000000746E756FLL;
          break;
        case 3:
          uint64_t v9 = "tems";
LABEL_7:
          unint64_t v7 = (unint64_t)v9 | 0x8000000000000000;
          unint64_t v8 = 0xD000000000000014;
          break;
        case 4:
          unint64_t v8 = 0xD000000000000013;
          unint64_t v7 = 0x8000000100548EB0;
          break;
        default:
          break;
      }
      unint64_t v10 = 0x8000000100548E40;
      unint64_t v11 = 0xD000000000000010;
      switch(v6)
      {
        case 1:
          uint64_t v12 = "autoConvertToTag";
          goto LABEL_14;
        case 2:
          unint64_t v10 = 0xEC000000746E756FLL;
          if (v8 != 0x6363416C61636F6CLL) {
            goto LABEL_17;
          }
          goto LABEL_16;
        case 3:
          uint64_t v12 = "tems";
LABEL_14:
          unint64_t v10 = (unint64_t)v12 | 0x8000000000000000;
          unint64_t v11 = 0xD000000000000014;
          goto LABEL_15;
        case 4:
          unint64_t v10 = 0x8000000100548EB0;
          if (v8 != 0xD000000000000013) {
            goto LABEL_17;
          }
          goto LABEL_16;
        default:
LABEL_15:
          if (v8 != v11) {
            goto LABEL_17;
          }
LABEL_16:
          if (v7 == v10)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_17:
          char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v13) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_1002B8080(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    while (1)
    {
      if (*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        if (*(unsigned char *)(*(void *)(v2 + 48) + v4) == 1)
        {
          unint64_t v7 = 0xE700000000000000;
          unint64_t v8 = 0x656C6261736964;
          int v9 = a1;
          if (!a1) {
            goto LABEL_6;
          }
          goto LABEL_11;
        }
        unint64_t v7 = 0xE600000000000000;
        uint64_t v11 = 1734831988;
      }
      else
      {
        unint64_t v7 = 0xE600000000000000;
        uint64_t v11 = 1650552421;
      }
      unint64_t v8 = v11 & 0xFFFF0000FFFFFFFFLL | 0x656C00000000;
      int v9 = a1;
      if (!a1)
      {
LABEL_6:
        unint64_t v10 = 0xE600000000000000;
        if (v8 != 0x656C62616E65) {
          goto LABEL_19;
        }
        goto LABEL_18;
      }
LABEL_11:
      if (v9 == 1) {
        uint64_t v12 = 0x656C6261736964;
      }
      else {
        uint64_t v12 = 0x656C67676F74;
      }
      if (v9 == 1) {
        unint64_t v10 = 0xE700000000000000;
      }
      else {
        unint64_t v10 = 0xE600000000000000;
      }
      if (v8 != v12) {
        goto LABEL_19;
      }
LABEL_18:
      if (v7 == v10)
      {
        swift_bridgeObjectRelease_n();
        return v4;
      }
LABEL_19:
      char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v13 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v6;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
  }
  return v4;
}

unint64_t sub_1002B8208(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE500000000000000;
      uint64_t v8 = 0x656C746974;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0xE700000000000000;
          uint64_t v8 = 0x676E6964616568;
          break;
        case 2:
          uint64_t v8 = 0x6964616568627573;
          unint64_t v7 = 0xEA0000000000676ELL;
          break;
        case 3:
          unint64_t v7 = 0xE400000000000000;
          uint64_t v8 = 2036625250;
          break;
        case 4:
          unint64_t v7 = 0xEA00000000006874;
          uint64_t v8 = 0x6469576465786966;
          break;
        case 5:
          unint64_t v7 = 0xE700000000000000;
          uint64_t v8 = 0x6E6F6974706163;
          break;
        case 6:
          unint64_t v7 = 0xEA00000000007465;
          uint64_t v8 = 0x6C6C75427473696CLL;
          break;
        case 7:
          unint64_t v7 = 0xE800000000000000;
          uint64_t v8 = 0x687361447473696CLL;
          break;
        case 8:
          uint64_t v8 = 0x626D754E7473696CLL;
          unint64_t v7 = 0xEC00000064657265;
          break;
        case 9:
          unint64_t v7 = 0xE800000000000000;
          uint64_t v8 = 0x6F646F547473696CLL;
          break;
        default:
          break;
      }
      unint64_t v9 = 0xE500000000000000;
      uint64_t v10 = 0x656C746974;
      switch(v6)
      {
        case 1:
          unint64_t v9 = 0xE700000000000000;
          if (v8 == 0x676E6964616568) {
            goto LABEL_30;
          }
          goto LABEL_31;
        case 2:
          unint64_t v9 = 0xEA0000000000676ELL;
          if (v8 != 0x6964616568627573) {
            goto LABEL_31;
          }
          goto LABEL_30;
        case 3:
          unint64_t v9 = 0xE400000000000000;
          if (v8 != 2036625250) {
            goto LABEL_31;
          }
          goto LABEL_30;
        case 4:
          unint64_t v9 = 0xEA00000000006874;
          if (v8 != 0x6469576465786966) {
            goto LABEL_31;
          }
          goto LABEL_30;
        case 5:
          unint64_t v9 = 0xE700000000000000;
          if (v8 != 0x6E6F6974706163) {
            goto LABEL_31;
          }
          goto LABEL_30;
        case 6:
          unint64_t v9 = 0xEA00000000007465;
          if (v8 != 0x6C6C75427473696CLL) {
            goto LABEL_31;
          }
          goto LABEL_30;
        case 7:
          unint64_t v9 = 0xE800000000000000;
          if (v8 != 0x687361447473696CLL) {
            goto LABEL_31;
          }
          goto LABEL_30;
        case 8:
          uint64_t v10 = 0x626D754E7473696CLL;
          unint64_t v9 = 0xEC00000064657265;
          goto LABEL_29;
        case 9:
          unint64_t v9 = 0xE800000000000000;
          if (v8 != 0x6F646F547473696CLL) {
            goto LABEL_31;
          }
          goto LABEL_30;
        default:
LABEL_29:
          if (v8 != v10) {
            goto LABEL_31;
          }
LABEL_30:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_31:
          char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_1002B85A0(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1002B8640(char a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    if (a1) {
      unint64_t v6 = 0x694C7265646C6F66;
    }
    else {
      unint64_t v6 = 0xD000000000000011;
    }
    if (a1) {
      unint64_t v7 = 0xEA00000000007473;
    }
    else {
      unint64_t v7 = 0x80000001005490D0;
    }
    while (1)
    {
      unint64_t v8 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? 0x694C7265646C6F66 : 0xD000000000000011;
      unint64_t v9 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? 0xEA00000000007473 : 0x80000001005490D0;
      if (v8 == v6 && v9 == v7) {
        break;
      }
      char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v5;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_1002B8780(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a2 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_100031418(0, a3);
    id v7 = *(id *)(*(void *)(v3 + 48) + 8 * i);
    char v8 = static NSObject.== infix(_:_:)();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v5;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v3 + 48) + 8 * i);
        char v11 = static NSObject.== infix(_:_:)();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_1002B8894(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xEB00000000657A69;
      uint64_t v8 = 0x53746C7561666564;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0xE500000000000000;
          uint64_t v8 = 0x6C6C616D73;
          break;
        case 2:
          unint64_t v7 = 0xE600000000000000;
          uint64_t v8 = 0x6D756964656DLL;
          break;
        case 3:
          unint64_t v7 = 0xE500000000000000;
          uint64_t v8 = 0x656772616CLL;
          break;
        default:
          break;
      }
      uint64_t v9 = 0x53746C7561666564;
      unint64_t v10 = 0xEB00000000657A69;
      switch(v6)
      {
        case 1:
          unint64_t v10 = 0xE500000000000000;
          if (v8 == 0x6C6C616D73) {
            goto LABEL_14;
          }
          goto LABEL_15;
        case 2:
          unint64_t v10 = 0xE600000000000000;
          uint64_t v9 = 0x6D756964656DLL;
          goto LABEL_11;
        case 3:
          unint64_t v10 = 0xE500000000000000;
          if (v8 == 0x656772616CLL) {
            goto LABEL_14;
          }
          goto LABEL_15;
        default:
LABEL_11:
          if (v8 != v9) {
            goto LABEL_15;
          }
LABEL_14:
          if (v7 == v10)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_15:
          char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_1002B8A94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1002B8B30(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    while (1)
    {
      if (*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        unint64_t v7 = 0xE600000000000000;
        if (*(unsigned char *)(*(void *)(v2 + 48) + v4) == 1)
        {
          uint64_t v8 = 0x65766F6D6572;
          int v9 = a1;
          if (!a1) {
            goto LABEL_14;
          }
        }
        else
        {
          uint64_t v8 = 0x656C67676F74;
          int v9 = a1;
          if (!a1)
          {
LABEL_14:
            unint64_t v11 = 0xE300000000000000;
            if (v8 != 6579297) {
              goto LABEL_16;
            }
            goto LABEL_15;
          }
        }
      }
      else
      {
        unint64_t v7 = 0xE300000000000000;
        uint64_t v8 = 6579297;
        int v9 = a1;
        if (!a1) {
          goto LABEL_14;
        }
      }
      if (v9 == 1) {
        uint64_t v10 = 0x65766F6D6572;
      }
      else {
        uint64_t v10 = 0x656C67676F74;
      }
      unint64_t v11 = 0xE600000000000000;
      if (v8 != v10) {
        goto LABEL_16;
      }
LABEL_15:
      if (v7 == v11)
      {
        swift_bridgeObjectRelease_n();
        return v4;
      }
LABEL_16:
      char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v6;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
  }
  return v4;
}

unint64_t sub_1002B8CAC(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    while (1)
    {
      if (*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        if (*(unsigned char *)(*(void *)(v2 + 48) + v4) == 1)
        {
          unint64_t v7 = 0xE700000000000000;
          uint64_t v8 = 0x6B636568636E75;
          int v9 = a1;
          if (!a1) {
            goto LABEL_17;
          }
        }
        else
        {
          unint64_t v7 = 0xE600000000000000;
          uint64_t v8 = 0x656C67676F74;
          int v9 = a1;
          if (!a1)
          {
LABEL_17:
            unint64_t v11 = 0xE500000000000000;
            if (v8 != 0x6B63656863) {
              goto LABEL_19;
            }
            goto LABEL_18;
          }
        }
      }
      else
      {
        unint64_t v7 = 0xE500000000000000;
        uint64_t v8 = 0x6B63656863;
        int v9 = a1;
        if (!a1) {
          goto LABEL_17;
        }
      }
      if (v9 == 1) {
        uint64_t v10 = 0x6B636568636E75;
      }
      else {
        uint64_t v10 = 0x656C67676F74;
      }
      if (v9 == 1) {
        unint64_t v11 = 0xE700000000000000;
      }
      else {
        unint64_t v11 = 0xE600000000000000;
      }
      if (v8 != v10) {
        goto LABEL_19;
      }
LABEL_18:
      if (v7 == v11)
      {
        swift_bridgeObjectRelease_n();
        return v4;
      }
LABEL_19:
      char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v6;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
  }
  return v4;
}

uint64_t sub_1002B8E40()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002B8E7C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v44 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  unint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_10002F214(&qword_10069C508);
  int v45 = a2;
  uint64_t v9 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v40 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  char v38 = v2;
  int64_t v39 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v41 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
  uint64_t v46 = (void (**)(char *, unint64_t, uint64_t))(v5 + 32);
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  uint64_t v42 = v8;
  uint64_t v43 = v7;
  while (1)
  {
    if (v14)
    {
      unint64_t v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v39) {
      break;
    }
    uint64_t v22 = v40;
    unint64_t v23 = v40[v21];
    ++v17;
    if (!v23)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v39) {
        goto LABEL_34;
      }
      unint64_t v23 = v40[v17];
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v39)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v38;
          if ((v45 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = v40[v24];
        if (!v23)
        {
          while (1)
          {
            int64_t v17 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v39) {
              goto LABEL_34;
            }
            unint64_t v23 = v40[v17];
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v24;
      }
    }
LABEL_21:
    unint64_t v14 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_22:
    uint64_t v25 = v5;
    uint64_t v26 = *(void *)(v5 + 72);
    unint64_t v27 = *(void *)(v8 + 48) + v26 * v20;
    char v28 = v43;
    uint64_t v29 = v44;
    if (v45)
    {
      (*v46)(v43, v27, v44);
      sub_10016EFCC((long long *)(*(void *)(v8 + 56) + 40 * v20), (uint64_t)v47);
    }
    else
    {
      (*v41)(v43, v27, v44);
      sub_10015E08C(*(void *)(v8 + 56) + 40 * v20, (uint64_t)v47);
    }
    sub_1002C063C((unint64_t *)&qword_1006A4DD0, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v30 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v31 = result & ~v30;
    unint64_t v32 = v31 >> 6;
    if (((-1 << v31) & ~*(void *)(v15 + 8 * (v31 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v31) & ~*(void *)(v15 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v33 = 0;
      unint64_t v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v35 = v32 == v34;
        if (v32 == v34) {
          unint64_t v32 = 0;
        }
        v33 |= v35;
        uint64_t v36 = *(void *)(v15 + 8 * v32);
      }
      while (v36 == -1);
      unint64_t v18 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    (*v46)((char *)(*(void *)(v10 + 48) + v26 * v18), (unint64_t)v28, v29);
    uint64_t result = sub_10016EFCC(v47, *(void *)(v10 + 56) + 40 * v18);
    ++*(void *)(v10 + 16);
    uint64_t v5 = v25;
    uint64_t v8 = v42;
  }
  swift_release();
  uint64_t v3 = v38;
  uint64_t v22 = v40;
  if ((v45 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v37 = 1 << *(unsigned char *)(v8 + 32);
  if (v37 >= 64) {
    bzero(v22, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v37;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v10;
  return result;
}

uint64_t sub_1002B92CC(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_10002F214(&qword_10069D190);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_10002F214(&qword_10069C558);
  int v50 = a2;
  uint64_t v10 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_41;
  }
  uint64_t v53 = v8;
  uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v13 = *(void *)(v9 + 64);
  uint64_t v46 = (void *)(v9 + 64);
  if (v12 < 64) {
    uint64_t v14 = ~(-1 << v12);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v13;
  uint64_t v44 = v2;
  int64_t v45 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v47 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v51 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v16 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v18 = 0;
  uint64_t v48 = v6;
  uint64_t v49 = v9;
  uint64_t v54 = v5;
  while (1)
  {
    if (v15)
    {
      unint64_t v21 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v22 = v21 | (v18 << 6);
      goto LABEL_22;
    }
    int64_t v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v45) {
      break;
    }
    int64_t v24 = v46;
    unint64_t v25 = v46[v23];
    ++v18;
    if (!v25)
    {
      int64_t v18 = v23 + 1;
      if (v23 + 1 >= v45) {
        goto LABEL_34;
      }
      unint64_t v25 = v46[v18];
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v45)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v44;
          if ((v50 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v25 = v46[v26];
        if (!v25)
        {
          while (1)
          {
            int64_t v18 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_43;
            }
            if (v18 >= v45) {
              goto LABEL_34;
            }
            unint64_t v25 = v46[v18];
            ++v26;
            if (v25) {
              goto LABEL_21;
            }
          }
        }
        int64_t v18 = v26;
      }
    }
LABEL_21:
    unint64_t v15 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_22:
    uint64_t v27 = *(void *)(v6 + 72);
    unint64_t v28 = *(void *)(v9 + 48) + v27 * v22;
    uint64_t v29 = 24 * v22;
    int64_t v52 = v18;
    if (v50)
    {
      (*v51)(v53, v28, v54);
      uint64_t v30 = *(void *)(v9 + 56) + v29;
      id v32 = *(id *)v30;
      uint64_t v31 = *(void *)(v30 + 8);
      char v33 = *(unsigned char *)(v30 + 16);
    }
    else
    {
      (*v47)(v53, v28, v54);
      uint64_t v34 = *(void *)(v9 + 56) + v29;
      id v32 = *(id *)v34;
      uint64_t v31 = *(void *)(v34 + 8);
      char v33 = *(unsigned char *)(v34 + 16);
      sub_1001AB8D0(*(id *)v34, v31, v33);
    }
    sub_10001DFB0(&qword_1006A1F60, &qword_10069D190);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v35 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v36 = result & ~v35;
    unint64_t v37 = v36 >> 6;
    if (((-1 << v36) & ~*(void *)(v16 + 8 * (v36 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v36) & ~*(void *)(v16 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v38 = 0;
      unint64_t v39 = (unint64_t)(63 - v35) >> 6;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v40 = v37 == v39;
        if (v37 == v39) {
          unint64_t v37 = 0;
        }
        v38 |= v40;
        uint64_t v41 = *(void *)(v16 + 8 * v37);
      }
      while (v41 == -1);
      unint64_t v19 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v51)(*(void *)(v11 + 48) + v27 * v19, v53, v54);
    uint64_t v20 = *(void *)(v11 + 56) + 24 * v19;
    *(void *)uint64_t v20 = v32;
    *(void *)(v20 + 8) = v31;
    *(unsigned char *)(v20 + 16) = v33;
    ++*(void *)(v11 + 16);
    uint64_t v6 = v48;
    uint64_t v9 = v49;
    int64_t v18 = v52;
  }
  swift_release();
  uint64_t v3 = v44;
  int64_t v24 = v46;
  if ((v50 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v42 = 1 << *(unsigned char *)(v9 + 32);
  if (v42 >= 64) {
    bzero(v24, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v24 = -1 << v42;
  }
  *(void *)(v9 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v11;
  return result;
}

uint64_t sub_1002B9728(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10002F214(&qword_10069C4B8);
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  unint64_t v36 = v2;
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    int64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v36;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v37 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = 8 * v21;
    uint64_t v31 = *(void **)(*(void *)(v5 + 48) + v30);
    id v32 = *(void **)(*(void *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      id v33 = v31;
      id v34 = v32;
    }
    uint64_t result = NSObject._rawHashValue(seed:)(*(void *)(v7 + 40));
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v31;
    *(void *)(*(void *)(v7 + 56) + v19) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  int64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v23 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1002B99FC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10002F214(&qword_1006A1F48);
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_43;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  id v32 = v2;
  int64_t v33 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return result;
    }
    if (v17 >= v33) {
      break;
    }
    unint64_t v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v34 + 8 * v17);
    ++v13;
    if (!v19)
    {
      int64_t v13 = v17 + 1;
      if (v17 + 1 >= v33) {
        goto LABEL_36;
      }
      unint64_t v19 = *(void *)(v34 + 8 * v13);
      if (!v19)
      {
        int64_t v20 = v17 + 2;
        if (v20 >= v33)
        {
LABEL_36:
          swift_release();
          uint64_t v3 = v32;
          if ((a2 & 1) == 0) {
            goto LABEL_43;
          }
          goto LABEL_39;
        }
        unint64_t v19 = *(void *)(v34 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            int64_t v13 = v20 + 1;
            if (__OFADD__(v20, 1)) {
              goto LABEL_45;
            }
            if (v13 >= v33) {
              goto LABEL_36;
            }
            unint64_t v19 = *(void *)(v34 + 8 * v13);
            ++v20;
            if (v19) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v20;
      }
    }
LABEL_21:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    unint64_t v21 = *(void **)(*(void *)(v5 + 56) + 8 * v16);
    long long v35 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v16);
    uint64_t v22 = *(void *)(*(void *)(v5 + 48) + 16 * v16 + 8);
    if ((a2 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v23 = v21;
    }
    Hasher.init(_seed:)();
    if (v22)
    {
      Hasher._combine(_:)(1u);
      swift_bridgeObjectRetain();
      String.hash(into:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      Hasher._combine(_:)(0);
    }
    uint64_t result = Hasher._finalize()();
    uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v25 = result & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v11 + 8 * (v25 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v25) & ~*(void *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        BOOL v29 = v26 == v28;
        if (v26 == v28) {
          unint64_t v26 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v26);
      }
      while (v30 == -1);
      unint64_t v14 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_OWORD *)(*(void *)(v7 + 48) + 16 * v14) = v35;
    *(void *)(*(void *)(v7 + 56) + 8 * v14) = v21;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v32;
  unint64_t v18 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_43;
  }
LABEL_39:
  uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
  if (v31 >= 64) {
    bzero(v18, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v18 = -1 << v31;
  }
  *(void *)(v5 + 16) = 0;
LABEL_43:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1002B9D2C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10002F214(&qword_10069C470);
  char v35 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v33 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v17 >= v33) {
      break;
    }
    unint64_t v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v34 + 8 * v17);
    ++v13;
    if (!v19)
    {
      int64_t v13 = v17 + 1;
      if (v17 + 1 >= v33) {
        goto LABEL_34;
      }
      unint64_t v19 = *(void *)(v34 + 8 * v13);
      if (!v19)
      {
        int64_t v20 = v17 + 2;
        if (v20 >= v33)
        {
LABEL_34:
          swift_release();
          if ((v35 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v19 = *(void *)(v34 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            int64_t v13 = v20 + 1;
            if (__OFADD__(v20, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v33) {
              goto LABEL_34;
            }
            unint64_t v19 = *(void *)(v34 + 8 * v13);
            ++v20;
            if (v19) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v20;
      }
    }
LABEL_21:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    unint64_t v21 = *(void **)(*(void *)(v5 + 48) + 8 * v16);
    uint64_t v22 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v16);
    if (v35)
    {
      sub_100032E84(v22, v36);
    }
    else
    {
      sub_100032E28((uint64_t)v22, (uint64_t)v36);
      id v23 = v21;
    }
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    Hasher.init(_seed:)();
    String.hash(into:)();
    Swift::Int v24 = Hasher._finalize()();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v26 = v24 & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v11 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(void *)(*(void *)(v7 + 48) + 8 * v14) = v21;
    uint64_t result = (uint64_t)sub_100032E84(v36, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v18 = (void *)(v5 + 64);
  if ((v35 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v18, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v18 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1002BA068(uint64_t a1, char a2)
{
  return sub_1002BAA9C(a1, a2, &qword_1006A10C0);
}

uint64_t sub_1002BA074(uint64_t a1, char a2)
{
  return sub_1002BAA9C(a1, a2, &qword_1006A1F68);
}

uint64_t sub_1002BA080(uint64_t a1, char a2)
{
  return sub_1002BAA9C(a1, a2, &qword_10069C580);
}

uint64_t sub_1002BA08C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_10002F214(&qword_10069C590);
  int v46 = a2;
  uint64_t v10 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  uint64_t v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  BOOL v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  int64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    uint64_t v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
      swift_errorRetain();
    }
    sub_1002C063C((unint64_t *)&unk_10069BA10, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  uint64_t v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v12;
  return result;
}

uint64_t sub_1002BA4B0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10002F214(&qword_10069C480);
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v30 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v29 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v19 >= v29) {
          goto LABEL_33;
        }
        unint64_t v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v29) {
            goto LABEL_33;
          }
          unint64_t v20 = v30[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v29)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
              if (v28 >= 64) {
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v30 = -1 << v28;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v29) {
                  goto LABEL_33;
                }
                unint64_t v20 = v30[v8];
                ++v21;
                if (v20) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_30:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      Swift::UInt v26 = *(unsigned __int8 *)(*(void *)(v5 + 48) + v18);
      uint64_t v27 = *(void *)(*(void *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      Hasher.init(_seed:)();
      Hasher._combine(_:)(v26);
      uint64_t result = Hasher._finalize()();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v24 = v15 == v23;
          if (v15 == v23) {
            unint64_t v15 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v7 + 48) + v16) = v26;
      *(void *)(*(void *)(v7 + 56) + 8 * v16) = v27;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1002BA784(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10002F214(&qword_10069C4A0);
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11) {
      break;
    }
    char v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      int64_t v14 = v21 + 1;
      if (v21 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v14);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v14 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v14);
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v24;
      }
    }
LABEL_21:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v5 + 48) + 40 * v20;
    if (a2)
    {
      long long v26 = *(_OWORD *)v25;
      long long v27 = *(_OWORD *)(v25 + 16);
      uint64_t v40 = *(void *)(v25 + 32);
      long long v38 = v26;
      long long v39 = v27;
      sub_100032E84((_OWORD *)(*(void *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_100033188(v25, (uint64_t)&v38);
      sub_100032E28(*(void *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    uint64_t result = AnyHashable._rawHashValue(seed:)(*(void *)(v7 + 40));
    uint64_t v28 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t v16 = *(void *)(v7 + 48) + 40 * v15;
    long long v17 = v38;
    long long v18 = v39;
    *(void *)(v16 + 32) = v40;
    *(_OWORD *)uint64_t v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    uint64_t result = (uint64_t)sub_100032E84(v37, (_OWORD *)(*(void *)(v7 + 56) + 32 * v15));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  char v22 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1002BAA9C(uint64_t a1, char a2, uint64_t *a3)
{
  unint64_t v4 = v3;
  uint64_t v6 = *v3;
  sub_10002F214(a3);
  char v39 = a2;
  uint64_t v7 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v38 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  uint64_t v36 = v3;
  int64_t v37 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37) {
      break;
    }
    unint64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v38 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v37) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v38 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          unint64_t v4 = v36;
          if ((v39 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v37) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v38 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    unint64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    BOOL v33 = *(void **)(*(void *)(v6 + 56) + 8 * v21);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v34 = v33;
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *unint64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  unint64_t v4 = v36;
  unint64_t v23 = (void *)(v6 + 64);
  if ((v39 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v6 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v35;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *unint64_t v4 = v8;
  return result;
}

uint64_t sub_1002BADA8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10002F214(&qword_10069C538);
  char v37 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  id v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    uint64_t result = Hasher._finalize()();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  int64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1002BB0C4(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_10002F214(&qword_10069C578);
  int v47 = a2;
  uint64_t v10 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_41;
  }
  uint64_t v49 = v8;
  uint64_t v50 = v5;
  uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v13 = *(void *)(v9 + 64);
  uint64_t v43 = (void *)(v9 + 64);
  if (v12 < 64) {
    uint64_t v14 = ~(-1 << v12);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v13;
  int64_t v41 = v2;
  int64_t v42 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v44 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v48 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v16 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v18 = 0;
  uint64_t v45 = v9;
  uint64_t v46 = v6;
  while (1)
  {
    if (v15)
    {
      unint64_t v21 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v22 = v21 | (v18 << 6);
      goto LABEL_22;
    }
    int64_t v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v42) {
      break;
    }
    int64_t v24 = v43;
    unint64_t v25 = v43[v23];
    ++v18;
    if (!v25)
    {
      int64_t v18 = v23 + 1;
      if (v23 + 1 >= v42) {
        goto LABEL_34;
      }
      unint64_t v25 = v43[v18];
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v42)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v41;
          if ((v47 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v25 = v43[v26];
        if (!v25)
        {
          while (1)
          {
            int64_t v18 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_43;
            }
            if (v18 >= v42) {
              goto LABEL_34;
            }
            unint64_t v25 = v43[v18];
            ++v26;
            if (v25) {
              goto LABEL_21;
            }
          }
        }
        int64_t v18 = v26;
      }
    }
LABEL_21:
    unint64_t v15 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_22:
    uint64_t v27 = *(void *)(v6 + 72);
    unint64_t v28 = *(void *)(v9 + 48) + v27 * v22;
    if (v47)
    {
      (*v48)(v49, v28, v50);
      uint64_t v29 = (uint64_t *)(*(void *)(v9 + 56) + 16 * v22);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
    }
    else
    {
      (*v44)(v49, v28, v50);
      uint64_t v32 = (uint64_t *)(*(void *)(v9 + 56) + 16 * v22);
      uint64_t v31 = *v32;
      uint64_t v30 = v32[1];
      swift_bridgeObjectRetain();
    }
    sub_1002C063C((unint64_t *)&qword_1006A4DD0, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v33 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v16 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v34) & ~*(void *)(v16 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v6 = v46;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      uint64_t v6 = v46;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v16 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v19 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v48)(*(void *)(v11 + 48) + v27 * v19, v49, v50);
    unint64_t v20 = (void *)(*(void *)(v11 + 56) + 16 * v19);
    *unint64_t v20 = v31;
    v20[1] = v30;
    ++*(void *)(v11 + 16);
    uint64_t v9 = v45;
  }
  swift_release();
  uint64_t v3 = v41;
  int64_t v24 = v43;
  if ((v47 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v9 + 32);
  if (v40 >= 64) {
    bzero(v24, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v24 = -1 << v40;
  }
  *(void *)(v9 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v11;
  return result;
}

uint64_t sub_1002BB504(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for FastSyncPresenceController.EditorDebounceState(0);
  uint64_t v37 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_10002F214(&qword_10069C530);
  int v38 = a2;
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v10 = result;
  if (*(void *)(v8 + 16))
  {
    unint64_t v34 = v2;
    int64_t v11 = 0;
    uint64_t v12 = *(void *)(v8 + 64);
    char v36 = (void *)(v8 + 64);
    uint64_t v13 = 1 << *(unsigned char *)(v8 + 32);
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v12;
    int64_t v35 = (unint64_t)(v13 + 63) >> 6;
    uint64_t v16 = result + 64;
    while (1)
    {
      if (v15)
      {
        unint64_t v18 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v19 = v18 | (v11 << 6);
      }
      else
      {
        int64_t v20 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v36;
        if (v20 >= v35) {
          goto LABEL_34;
        }
        unint64_t v21 = v36[v20];
        ++v11;
        if (!v21)
        {
          int64_t v11 = v20 + 1;
          if (v20 + 1 >= v35) {
            goto LABEL_34;
          }
          unint64_t v21 = v36[v11];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v35)
            {
LABEL_34:
              if ((v38 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v34;
                goto LABEL_41;
              }
              uint64_t v33 = 1 << *(unsigned char *)(v8 + 32);
              if (v33 >= 64) {
                bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *char v36 = -1 << v33;
              }
              uint64_t v3 = v34;
              *(void *)(v8 + 16) = 0;
              break;
            }
            unint64_t v21 = v36[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v11 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_43;
                }
                if (v11 >= v35) {
                  goto LABEL_34;
                }
                unint64_t v21 = v36[v11];
                ++v22;
                if (v21) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v11 = v22;
          }
        }
LABEL_21:
        unint64_t v15 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v11 << 6);
      }
      Swift::UInt v23 = *(void *)(*(void *)(v8 + 48) + 8 * v19);
      uint64_t v24 = *(void *)(v37 + 72);
      uint64_t v25 = *(void *)(v8 + 56) + v24 * v19;
      if (v38) {
        sub_1002C04FC(v25, (uint64_t)v7);
      }
      else {
        sub_1002C0498(v25, (uint64_t)v7);
      }
      Hasher.init(_seed:)();
      Hasher._combine(_:)(v23);
      uint64_t result = Hasher._finalize()();
      uint64_t v26 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v16 + 8 * (v27 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v31 = v28 == v30;
          if (v28 == v30) {
            unint64_t v28 = 0;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)(v16 + 8 * v28);
        }
        while (v32 == -1);
        unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(void *)(v16 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(void *)(*(void *)(v10 + 48) + 8 * v17) = v23;
      uint64_t result = sub_1002C04FC((uint64_t)v7, *(void *)(v10 + 56) + v24 * v17);
      ++*(void *)(v10 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  uint64_t *v3 = v10;
  return result;
}

uint64_t sub_1002BB86C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10002F214(&qword_10069C4B0);
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v33 = v2;
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v11) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v34 + 8 * v21);
    ++v14;
    if (!v23)
    {
      int64_t v14 = v21 + 1;
      if (v21 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v34 + 8 * v14);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v33;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v34 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v14 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v34 + 8 * v14);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_31:
    char v29 = *(void **)(*(void *)(v5 + 48) + 8 * v20);
    int v30 = *(_DWORD *)(*(void *)(v5 + 56) + 4 * v20);
    if ((a2 & 1) == 0) {
      id v31 = v29;
    }
    uint64_t result = NSObject._rawHashValue(seed:)(*(void *)(v7 + 40));
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v17 == v26;
        if (v17 == v26) {
          unint64_t v17 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v17);
      }
      while (v28 == -1);
      unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(void *)(*(void *)(v7 + 48) + 8 * v18) = v29;
    *(_DWORD *)(*(void *)(v7 + 56) + 4 * v18) = v30;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v33;
  int64_t v22 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v22, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1002BBB34(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10002F214(&qword_1006A1F40);
  char v34 = a2;
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v33 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v32 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v32) {
          goto LABEL_33;
        }
        unint64_t v21 = v33[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v32) {
            goto LABEL_33;
          }
          unint64_t v21 = v33[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v32)
            {
LABEL_33:
              if ((v34 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
              if (v31 >= 64) {
                bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v33 = -1 << v31;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v33[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v32) {
                  goto LABEL_33;
                }
                unint64_t v21 = v33[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      Swift::UInt v27 = *(void *)(*(void *)(v5 + 48) + 8 * v19);
      uint64_t v28 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v19);
      uint64_t v29 = *v28;
      uint64_t v30 = v28[1];
      if ((v34 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      Hasher.init(_seed:)();
      Hasher._combine(_:)(v27);
      uint64_t result = Hasher._finalize()();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(void *)(*(void *)(v7 + 48) + 8 * v16) = v27;
      unint64_t v17 = (void *)(*(void *)(v7 + 56) + 16 * v16);
      void *v17 = v29;
      v17[1] = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1002BBE1C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10002F214(&qword_10069C490);
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v33 = a2;
    int64_t v8 = 0;
    uint64_t v9 = (void *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13) {
          goto LABEL_31;
        }
        unint64_t v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v13) {
            goto LABEL_31;
          }
          unint64_t v20 = v9[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v33 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_38;
              }
              uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
              if (v32 >= 64) {
                bzero((void *)(v5 + 64), ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v9 = -1 << v32;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v13) {
                  goto LABEL_31;
                }
                unint64_t v20 = v9[v8];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_21:
        unint64_t v12 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      uint64_t v22 = 8 * v18;
      Swift::UInt v23 = *(void *)(*(void *)(v5 + 48) + v22);
      uint64_t v24 = *(void *)(*(void *)(v5 + 56) + v22);
      Hasher.init(_seed:)();
      Hasher._combine(_:)(v23);
      uint64_t result = Hasher._finalize()();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v14 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t v16 = 8 * v15;
      *(void *)(*(void *)(v7 + 48) + v16) = v23;
      *(void *)(*(void *)(v7 + 56) + v16) = v24;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1002BC0F0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10002F214(&qword_10069C488);
  char v46 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_43;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v44 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v42 = v2;
  int64_t v43 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  uint64_t v45 = v5;
  while (1)
  {
    if (v10)
    {
      unint64_t v17 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      int64_t v47 = v13;
      unint64_t v18 = v17 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v19 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return result;
    }
    if (v19 >= v43) {
      break;
    }
    unint64_t v20 = v44;
    unint64_t v21 = v44[v19];
    int64_t v22 = v13 + 1;
    if (!v21)
    {
      int64_t v22 = v13 + 2;
      if (v13 + 2 >= v43) {
        goto LABEL_36;
      }
      unint64_t v21 = v44[v22];
      if (!v21)
      {
        uint64_t v23 = v13 + 3;
        if (v13 + 3 >= v43)
        {
LABEL_36:
          swift_release();
          uint64_t v3 = v42;
          if ((v46 & 1) == 0) {
            goto LABEL_43;
          }
          goto LABEL_39;
        }
        unint64_t v21 = v44[v23];
        if (!v21)
        {
          while (1)
          {
            int64_t v22 = v23 + 1;
            if (__OFADD__(v23, 1)) {
              goto LABEL_45;
            }
            if (v22 >= v43) {
              goto LABEL_36;
            }
            unint64_t v21 = v44[v22];
            ++v23;
            if (v21) {
              goto LABEL_21;
            }
          }
        }
        int64_t v22 = v13 + 3;
      }
    }
LABEL_21:
    unint64_t v10 = (v21 - 1) & v21;
    int64_t v47 = v22;
    unint64_t v18 = __clz(__rbit64(v21)) + (v22 << 6);
LABEL_22:
    uint64_t v24 = *(void *)(v5 + 56);
    uint64_t v25 = (uint64_t *)(*(void *)(v5 + 48) + 32 * v18);
    uint64_t v26 = *v25;
    uint64_t v27 = v25[1];
    uint64_t v28 = v25[2];
    uint64_t v29 = v25[3];
    uint64_t v30 = v24 + 24 * v18;
    unint64_t v31 = *(void *)v30;
    char v32 = *(unsigned char *)(v30 + 8);
    uint64_t v33 = *(void *)(v30 + 16);
    if ((v46 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10016ECFC(v31, v32);
      swift_retain();
    }
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    if (v29)
    {
      Hasher._combine(_:)(1u);
      swift_bridgeObjectRetain();
      String.hash(into:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      Hasher._combine(_:)(0);
    }
    uint64_t result = Hasher._finalize()();
    uint64_t v34 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v35 = result & ~v34;
    unint64_t v36 = v35 >> 6;
    if (((-1 << v35) & ~*(void *)(v11 + 8 * (v35 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v35) & ~*(void *)(v11 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v37 = 0;
      unint64_t v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        BOOL v39 = v36 == v38;
        if (v36 == v38) {
          unint64_t v36 = 0;
        }
        v37 |= v39;
        uint64_t v40 = *(void *)(v11 + 8 * v36);
      }
      while (v40 == -1);
      unint64_t v14 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    unint64_t v15 = (void *)(*(void *)(v7 + 48) + 32 * v14);
    void *v15 = v26;
    v15[1] = v27;
    void v15[2] = v28;
    v15[3] = v29;
    uint64_t v16 = *(void *)(v7 + 56) + 24 * v14;
    *(void *)uint64_t v16 = v31;
    *(unsigned char *)(v16 + 8) = v32;
    *(void *)(v16 + 16) = v33;
    ++*(void *)(v7 + 16);
    uint64_t v5 = v45;
    int64_t v13 = v47;
  }
  swift_release();
  uint64_t v3 = v42;
  unint64_t v20 = v44;
  if ((v46 & 1) == 0) {
    goto LABEL_43;
  }
LABEL_39:
  uint64_t v41 = 1 << *(unsigned char *)(v5 + 32);
  if (v41 >= 64) {
    bzero(v20, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v20 = -1 << v41;
  }
  *(void *)(v5 + 16) = 0;
LABEL_43:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1002BC4A8(long long *a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_1002B6300(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 < v17 || (a3 & 1) == 0)
  {
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_1002BD98C();
      goto LABEL_7;
    }
    sub_1002B8E7C(v17, a3 & 1);
    unint64_t v23 = sub_1002B6300(a2);
    if ((v18 & 1) == (v24 & 1))
    {
      unint64_t v14 = v23;
      unint64_t v20 = *v4;
      if (v18) {
        goto LABEL_8;
      }
LABEL_13:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_1002BD560(v14, (uint64_t)v11, a1, v20);
    }
LABEL_15:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v20 = *v4;
  if ((v18 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v21 = v20[7] + 40 * v14;
  sub_100018FE8(v21);

  return sub_10016EFCC(a1, v21);
}

void sub_1002BC684(uint64_t a1, uint64_t a2, int a3, uint64_t a4, char a5)
{
  uint64_t v6 = (void **)v5;
  int v28 = a3;
  uint64_t v27 = a2;
  uint64_t v10 = sub_10002F214(&qword_10069D190);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  char v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v14 = (void *)*v5;
  unint64_t v16 = sub_1002B66E0(a4);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v20 = v15;
  uint64_t v21 = v14[3];
  if (v21 >= v19 && (a5 & 1) != 0)
  {
LABEL_7:
    int64_t v22 = *v6;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = v22[7] + 24 * v16;
      sub_1002BC868(*(void **)v23, *(void *)(v23 + 8), *(unsigned char *)(v23 + 16));
      uint64_t v24 = v27;
      *(void *)uint64_t v23 = a1;
      *(void *)(v23 + 8) = v24;
      *(unsigned char *)(v23 + 16) = v28;
      return;
    }
    goto LABEL_11;
  }
  if (v21 >= v19 && (a5 & 1) == 0)
  {
    sub_1002BDC38();
    goto LABEL_7;
  }
  sub_1002B92CC(v19, a5 & 1);
  unint64_t v25 = sub_1002B66E0(a4);
  if ((v20 & 1) != (v26 & 1))
  {
LABEL_14:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v16 = v25;
  int64_t v22 = *v6;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a4, v10);
  sub_1002BD624(v16, (uint64_t)v13, a1, v27, v28, v22);
}

void sub_1002BC868(void *a1, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 2:
      swift_errorRelease();
      break;
    case 1:

      break;
    case 0:

      swift_bridgeObjectRelease();
      break;
  }
}

_OWORD *sub_1002BC8DC(_OWORD *a1, void *a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v7 = (void *)*v3;
  unint64_t v9 = sub_1002B6778((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 < v12 || (a3 & 1) == 0)
  {
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1002BE280();
      goto LABEL_7;
    }
    sub_1002B9D2C(v12, a3 & 1);
    unint64_t v18 = sub_1002B6778((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      unint64_t v9 = v18;
      char v15 = *v4;
      if (v13) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    type metadata accessor for Key(0);
    uint64_t result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  char v15 = *v4;
  if (v13)
  {
LABEL_8:
    unint64_t v16 = (_OWORD *)(v15[7] + 32 * v9);
    sub_100018FE8((uint64_t)v16);
    return sub_100032E84(a1, v16);
  }
LABEL_13:
  sub_1002BD6FC(v9, (uint64_t)a2, a1, v15);

  return a2;
}

uint64_t sub_1002BCA20(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  BOOL v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_1002B660C(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    char v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t result = swift_errorRelease();
      *(void *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1002BE454();
    goto LABEL_7;
  }
  sub_1002BA08C(v17, a3 & 1);
  unint64_t v23 = sub_1002B660C(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  char v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1002BD764(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_1002BCBC8(uint64_t a1, unsigned __int8 a2, char a3)
{
  unint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1002B6D68(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1002BE6EC();
LABEL_7:
    BOOL v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = a2;
    *(void *)(v16[7] + 8 * v10) = a1;
    uint64_t v19 = v16[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (!v20)
    {
      v16[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  sub_1002BA4B0(result, a3 & 1);
  uint64_t result = sub_1002B6D68(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    unint64_t v10 = result;
    BOOL v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

_OWORD *sub_1002BCD00(_OWORD *a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_100033028(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1002BE890();
      goto LABEL_7;
    }
    sub_1002BA784(v13, a3 & 1);
    unint64_t v19 = sub_100033028(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      BOOL v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
LABEL_13:
      sub_100033188(a2, (uint64_t)v21);
      return sub_1002BD81C(v10, (uint64_t)v21, a1, v16);
    }
LABEL_15:
    uint64_t result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  BOOL v16 = *v4;
  if ((v14 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v17 = (_OWORD *)(v16[7] + 32 * v10);
  sub_100018FE8((uint64_t)v17);

  return sub_100032E84(a1, v17);
}

void sub_1002BCE4C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1002B63D4(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1002BEA78(&qword_1006A1F58);
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_1002BAA9C(v15, a4 & 1, &qword_1006A1F58);
  unint64_t v20 = sub_1002B63D4(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_17:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  char v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  int64_t v22 = (uint64_t *)(v18[6] + 16 * v12);
  uint64_t *v22 = a2;
  v22[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v23 = v18[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v18[2] = v25;

  swift_bridgeObjectRetain();
}

uint64_t sub_1002BCFCC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1002B6DD4(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1002BEC24();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      *(void *)(v18[7] + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1002BADA8(result, a4 & 1);
  uint64_t result = sub_1002B6DD4(a2, a3);
  if ((v16 & 1) != (v19 & 1))
  {
LABEL_17:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  char v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  unint64_t v20 = (uint64_t *)(v18[6] + 16 * v12);
  *unint64_t v20 = a2;
  v20[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v21 = v18[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v18[2] = v23;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1002BD130(uint64_t a1, Swift::UInt a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_1002B705C(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1002BF0AC();
      goto LABEL_7;
    }
    sub_1002BB504(v13, a3 & 1);
    unint64_t v20 = sub_1002B705C(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      unint64_t v10 = v20;
      char v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    type metadata accessor for ID(0);
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  char v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = v16[7];
    uint64_t v18 = v17
        + *(void *)(*(void *)(type metadata accessor for FastSyncPresenceController.EditorDebounceState(0) - 8)
                    + 72)
        * v10;
    return sub_1002C0434(a1, v18);
  }
LABEL_13:

  return sub_1002BD898(v10, a2, a1, v16);
}

uint64_t sub_1002BD27C(Swift::UInt a1, char a2, double a3)
{
  unint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1002B705C(a1);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a2 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a2 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1002BF658();
LABEL_7:
    char v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      *(double *)(v16[7] + 8 * v10) = a3;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    uint64_t v18 = 8 * v10;
    *(void *)(v16[6] + v18) = a1;
    *(double *)(v16[7] + v18) = a3;
    uint64_t v19 = v16[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (!v20)
    {
      v16[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  sub_1002BBE1C(result, a2 & 1);
  uint64_t result = sub_1002B705C(a1);
  if ((v14 & 1) == (v17 & 1))
  {
    unint64_t v10 = result;
    char v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1002BD3A8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  char v9 = (void **)v8;
  char v16 = (void *)*v8;
  unint64_t v18 = sub_1002B64E0(a4, a5, a6, a7);
  uint64_t v19 = v16[2];
  BOOL v20 = (v17 & 1) == 0;
  uint64_t v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v22 = v17;
  uint64_t v23 = v16[3];
  if (v23 >= v21 && (a8 & 1) != 0)
  {
LABEL_7:
    BOOL v24 = *v9;
    if (v22)
    {
LABEL_8:
      uint64_t v25 = v24[7] + 24 * v18;
      sub_1002C0384(*(void *)v25, *(unsigned char *)(v25 + 8));
      uint64_t result = swift_release();
      *(void *)uint64_t v25 = a1;
      *(unsigned char *)(v25 + 8) = a2;
      *(void *)(v25 + 16) = a3;
      return result;
    }
    goto LABEL_11;
  }
  if (v23 >= v21 && (a8 & 1) == 0)
  {
    sub_1002BF7E8();
    goto LABEL_7;
  }
  sub_1002BC0F0(v21, a8 & 1);
  unint64_t v27 = sub_1002B64E0(a4, a5, a6, a7);
  if ((v22 & 1) != (v28 & 1))
  {
LABEL_15:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v18 = v27;
  BOOL v24 = *v9;
  if (v22) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1002BD92C(v18, a4, a5, a6, a7, a1, a2, a3, v24);
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_1002BD560(unint64_t a1, uint64_t a2, long long *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  uint64_t result = sub_10016EFCC(a3, a4[7] + 40 * a1);
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

uint64_t sub_1002BD624(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6)
{
  a6[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v12 = a6[6];
  uint64_t v13 = sub_10002F214(&qword_10069D190);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v12 + *(void *)(*(void *)(v13 - 8) + 72) * a1, a2, v13);
  uint64_t v15 = a6[7] + 24 * a1;
  *(void *)uint64_t v15 = a3;
  *(void *)(v15 + 8) = a4;
  *(unsigned char *)(v15 + 16) = a5;
  uint64_t v16 = a6[2];
  BOOL v17 = __OFADD__(v16, 1);
  uint64_t v18 = v16 + 1;
  if (v17) {
    __break(1u);
  }
  else {
    a6[2] = v18;
  }
  return result;
}

_OWORD *sub_1002BD6FC(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t result = sub_100032E84(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

uint64_t sub_1002BD764(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = type metadata accessor for URL();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

_OWORD *sub_1002BD81C(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v5 = a4[6] + 40 * a1;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(void *)(v5 + 32) = *(void *)(a2 + 32);
  uint64_t result = sub_100032E84(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v8 = a4[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a4[2] = v10;
  }
  return result;
}

uint64_t sub_1002BD898(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t v7 = a4[7];
  uint64_t v8 = type metadata accessor for FastSyncPresenceController.EditorDebounceState(0);
  uint64_t result = sub_1002C04FC(a3, v7 + *(void *)(*(void *)(v8 - 8) + 72) * a1);
  uint64_t v10 = a4[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a4[2] = v12;
  }
  return result;
}

unint64_t sub_1002BD92C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, void *a9)
{
  a9[(result >> 6) + 8] |= 1 << result;
  BOOL v9 = (void *)(a9[6] + 32 * result);
  *BOOL v9 = a2;
  v9[1] = a3;
  v9[2] = a4;
  v9[3] = a5;
  uint64_t v10 = a9[7] + 24 * result;
  *(void *)uint64_t v10 = a6;
  *(unsigned char *)(v10 + 8) = a7;
  *(void *)(v10 + 16) = a8;
  uint64_t v11 = a9[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a9[2] = v13;
  }
  return result;
}

void *sub_1002BD98C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002F214(&qword_10069C508);
  uint64_t v6 = *v0;
  uint64_t v7 = static _DictionaryStorage.copy(original:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v23 = v1;
  uint64_t result = (void *)(v7 + 64);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  }
  uint64_t v24 = v6 + 64;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 64);
  int64_t v25 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v26 = v3 + 16;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v11);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    uint64_t v18 = 40 * v16;
    sub_10015E08C(*(void *)(v6 + 56) + v18, (uint64_t)v27);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v17, v5, v2);
    uint64_t result = (void *)sub_10016EFCC(v27, *(void *)(v8 + 56) + v18);
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v23;
    goto LABEL_25;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v11 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v11 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v11);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

char *sub_1002BDC38()
{
  uint64_t v40 = sub_10002F214(&qword_10069D190);
  uint64_t v1 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  BOOL v39 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002F214(&qword_10069C558);
  uint64_t v34 = v0;
  uint64_t v3 = *v0;
  uint64_t v4 = static _DictionaryStorage.copy(original:)();
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v42 = v4;
  if (!v5)
  {
    uint64_t result = (char *)swift_release();
    uint64_t v32 = v42;
    unint64_t v31 = v34;
LABEL_25:
    *unint64_t v31 = v32;
    return result;
  }
  uint64_t v6 = v4;
  uint64_t result = (char *)(v4 + 64);
  uint64_t v8 = (char *)(v3 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  uint64_t v35 = v3 + 64;
  if (v6 != v3 || result >= &v8[8 * v9])
  {
    uint64_t result = (char *)memmove(result, v8, 8 * v9);
    uint64_t v6 = v42;
  }
  int64_t v10 = 0;
  *(void *)(v6 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v41 = v3;
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  uint64_t v38 = v1 + 16;
  int64_t v36 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v37 = v1 + 32;
  unint64_t v15 = v39;
  uint64_t v14 = v40;
  uint64_t v16 = v42;
  while (1)
  {
    if (v13)
    {
      unint64_t v17 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v18 = v17 | (v10 << 6);
      uint64_t v19 = v41;
      goto LABEL_9;
    }
    int64_t v28 = v10 + 1;
    uint64_t v19 = v41;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v28 >= v36) {
      goto LABEL_23;
    }
    unint64_t v29 = *(void *)(v35 + 8 * v28);
    ++v10;
    if (!v29)
    {
      int64_t v10 = v28 + 1;
      if (v28 + 1 >= v36) {
        goto LABEL_23;
      }
      unint64_t v29 = *(void *)(v35 + 8 * v10);
      if (!v29) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v29 - 1) & v29;
    unint64_t v18 = __clz(__rbit64(v29)) + (v10 << 6);
LABEL_9:
    unint64_t v20 = *(void *)(v1 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v15, *(void *)(v19 + 48) + v20, v14);
    uint64_t v21 = *(void *)(v19 + 56);
    uint64_t v22 = 24 * v18;
    uint64_t v23 = v21 + 24 * v18;
    uint64_t v24 = *(void **)v23;
    uint64_t v25 = *(void *)(v23 + 8);
    unint64_t v26 = *(void *)(v16 + 48) + v20;
    LOBYTE(v20) = *(unsigned char *)(v23 + 16);
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(v26, v15, v14);
    uint64_t v27 = *(void *)(v16 + 56) + v22;
    *(void *)uint64_t v27 = v24;
    *(void *)(v27 + 8) = v25;
    *(unsigned char *)(v27 + 16) = v20;
    uint64_t result = (char *)sub_1001AB8D0(v24, v25, v20);
  }
  int64_t v30 = v28 + 2;
  if (v30 >= v36)
  {
LABEL_23:
    uint64_t result = (char *)swift_release();
    unint64_t v31 = v34;
    uint64_t v32 = v42;
    goto LABEL_25;
  }
  unint64_t v29 = *(void *)(v35 + 8 * v30);
  if (v29)
  {
    int64_t v10 = v30;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v10 >= v36) {
      goto LABEL_23;
    }
    unint64_t v29 = *(void *)(v35 + 8 * v10);
    ++v30;
    if (v29) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_1002BDF28()
{
  uint64_t v1 = v0;
  sub_10002F214(&qword_10069C4B8);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    unint64_t v18 = *(void **)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    id result = v18;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1002BE0D0()
{
  uint64_t v1 = v0;
  sub_10002F214(&qword_1006A1F48);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void **)(*(void *)(v2 + 56) + 8 * v15);
    *(_OWORD *)(*(void *)(v4 + 48) + 16 * v15) = *(_OWORD *)(*(void *)(v2 + 48) + 16 * v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    swift_bridgeObjectRetain();
    id result = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1002BE280()
{
  uint64_t v1 = v0;
  sub_10002F214(&qword_10069C470);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    int64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 32 * v15;
    sub_100032E28(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    sub_100032E84(v22, (_OWORD *)(*(void *)(v4 + 56) + v18));
    id result = v17;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1002BE448()
{
  return sub_1002BEA78(&qword_1006A10C0);
}

void *sub_1002BE454()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002F214(&qword_10069C590);
  uint64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = static _DictionaryStorage.copy(original:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    *uint64_t v23 = v7;
    return result;
  }
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v24 = v5 + 64;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  uint64_t v27 = v2 + 16;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
    id result = (void *)swift_errorRetain();
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_1002BE6EC()
{
  uint64_t v1 = v0;
  sub_10002F214(&qword_10069C480);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1002BE890()
{
  uint64_t v1 = v0;
  sub_10002F214(&qword_10069C4A0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    sub_100033188(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    uint64_t v17 = 32 * v15;
    sub_100032E28(*(void *)(v2 + 56) + v17, (uint64_t)v24);
    uint64_t v18 = *(void *)(v4 + 48) + v16;
    long long v19 = v25[0];
    long long v20 = v25[1];
    *(void *)(v18 + 32) = v26;
    *(_OWORD *)uint64_t v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    id result = sub_100032E84(v24, (_OWORD *)(*(void *)(v4 + 56) + v17));
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1002BEA78(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_10002F214(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = static _DictionaryStorage.copy(original:)();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (void *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v19 = v18[1];
    uint64_t v20 = 8 * v16;
    int64_t v21 = *(void **)(*(void *)(v3 + 56) + v20);
    unint64_t v22 = (void *)(*(void *)(v5 + 48) + v17);
    void *v22 = *v18;
    v22[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    id result = v21;
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1002BEC24()
{
  uint64_t v1 = v0;
  sub_10002F214(&qword_10069C538);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    unint64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    void *v22 = v19;
    v22[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1002BEDD4()
{
  uint64_t v38 = type metadata accessor for UUID();
  uint64_t v1 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v37 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002F214(&qword_10069C578);
  uint64_t v32 = v0;
  uint64_t v3 = *v0;
  uint64_t v4 = static _DictionaryStorage.copy(original:)();
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v40 = v4;
  if (!v5)
  {
    id result = (void *)swift_release();
    uint64_t v30 = v40;
    unint64_t v29 = v32;
LABEL_25:
    *unint64_t v29 = v30;
    return result;
  }
  uint64_t v6 = v4;
  id result = (void *)(v4 + 64);
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  if (v6 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
  {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
    uint64_t v6 = v40;
  }
  int64_t v9 = 0;
  *(void *)(v6 + 16) = *(void *)(v3 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v39 = v3;
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v3 + 64);
  uint64_t v33 = v3 + 64;
  int64_t v34 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v35 = v1 + 32;
  uint64_t v36 = v1 + 16;
  unint64_t v14 = v37;
  uint64_t v13 = v38;
  uint64_t v15 = v40;
  while (1)
  {
    if (v12)
    {
      unint64_t v16 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v17 = v16 | (v9 << 6);
      uint64_t v18 = v39;
      goto LABEL_9;
    }
    int64_t v26 = v9 + 1;
    uint64_t v18 = v39;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v26 >= v34) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v34) {
        goto LABEL_23;
      }
      unint64_t v27 = *(void *)(v33 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_22:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v17 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_9:
    unint64_t v19 = *(void *)(v1 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v14, *(void *)(v18 + 48) + v19, v13);
    uint64_t v20 = *(void *)(v18 + 56);
    uint64_t v21 = 16 * v17;
    unint64_t v22 = (uint64_t *)(v20 + 16 * v17);
    uint64_t v23 = *v22;
    uint64_t v24 = v22[1];
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(void *)(v15 + 48) + v19, v14, v13);
    int64_t v25 = (void *)(*(void *)(v15 + 56) + v21);
    *int64_t v25 = v23;
    v25[1] = v24;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v34)
  {
LABEL_23:
    id result = (void *)swift_release();
    unint64_t v29 = v32;
    uint64_t v30 = v40;
    goto LABEL_25;
  }
  unint64_t v27 = *(void *)(v33 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v34) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1002BF0AC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FastSyncPresenceController.EditorDebounceState(0);
  uint64_t v25 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002F214(&qword_10069C530);
  uint64_t v5 = *v0;
  uint64_t v6 = static _DictionaryStorage.copy(original:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  uint64_t v24 = v1;
  id result = (void *)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v9 + 8 * v10) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v15) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v9 + 8 * v21);
    ++v11;
    if (!v22)
    {
      int64_t v11 = v21 + 1;
      if (v21 + 1 >= v15) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v9 + 8 * v11);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v22 - 1) & v22;
    unint64_t v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_9:
    uint64_t v18 = 8 * v17;
    uint64_t v19 = *(void *)(*(void *)(v5 + 48) + 8 * v17);
    unint64_t v20 = *(void *)(v25 + 72) * v17;
    sub_1002C0498(*(void *)(v5 + 56) + v20, (uint64_t)v4);
    *(void *)(*(void *)(v7 + 48) + v18) = v19;
    id result = (void *)sub_1002C04FC((uint64_t)v4, *(void *)(v7 + 56) + v20);
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v24;
    goto LABEL_25;
  }
  unint64_t v22 = *(void *)(v9 + 8 * v23);
  if (v22)
  {
    int64_t v11 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v9 + 8 * v11);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_1002BF300()
{
  uint64_t v1 = v0;
  sub_10002F214(&qword_10069C4B0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 4 * v15;
    int v19 = *(_DWORD *)(*(void *)(v2 + 56) + v18);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(_DWORD *)(*(void *)(v4 + 56) + v18) = v19;
    id result = v17;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1002BF4A8()
{
  uint64_t v1 = v0;
  sub_10002F214(&qword_1006A1F40);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    int v19 = (uint64_t *)(*(void *)(v2 + 56) + v18);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    int64_t v22 = (void *)(*(void *)(v4 + 56) + v18);
    void *v22 = v21;
    v22[1] = v20;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1002BF658()
{
  uint64_t v1 = v0;
  sub_10002F214(&qword_10069C490);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v21 = __clz(__rbit64(v19));
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = v21 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1002BF7E8()
{
  sub_10002F214(&qword_10069C488);
  uint64_t v31 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = static _DictionaryStorage.copy(original:)();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v31 = v3;
    return result;
  }
  id result = (void *)(v2 + 64);
  uint64_t v5 = v1 + 64;
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v6) {
    id result = memmove(result, (const void *)(v1 + 64), 8 * v6);
  }
  int64_t v8 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v1 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    int64_t v28 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v12) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v5 + 8 * v28);
    ++v8;
    if (!v29)
    {
      int64_t v8 = v28 + 1;
      if (v28 + 1 >= v12) {
        goto LABEL_26;
      }
      unint64_t v29 = *(void *)(v5 + 8 * v8);
      if (!v29) {
        break;
      }
    }
LABEL_25:
    unint64_t v11 = (v29 - 1) & v29;
    unint64_t v14 = __clz(__rbit64(v29)) + (v8 << 6);
LABEL_12:
    uint64_t v15 = 32 * v14;
    uint64_t v16 = (uint64_t *)(*(void *)(v1 + 48) + 32 * v14);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    uint64_t v20 = v16[2];
    uint64_t v19 = v16[3];
    uint64_t v21 = 24 * v14;
    uint64_t v22 = *(void *)(v1 + 56) + v21;
    unint64_t v23 = *(void *)v22;
    uint64_t v24 = *(void *)(v22 + 16);
    int64_t v25 = (void *)(*(void *)(v3 + 48) + v15);
    char v26 = *(unsigned char *)(v22 + 8);
    *int64_t v25 = v17;
    v25[1] = v18;
    _OWORD v25[2] = v20;
    v25[3] = v19;
    uint64_t v27 = *(void *)(v3 + 56) + v21;
    *(void *)uint64_t v27 = v23;
    *(unsigned char *)(v27 + 8) = v26;
    *(void *)(v27 + 16) = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10016ECFC(v23, v26);
    id result = (void *)swift_retain();
  }
  int64_t v30 = v28 + 2;
  if (v30 >= v12) {
    goto LABEL_26;
  }
  unint64_t v29 = *(void *)(v5 + 8 * v30);
  if (v29)
  {
    int64_t v8 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v8 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v8 >= v12) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v5 + 8 * v8);
    ++v30;
    if (v29) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1002BF9F0(uint64_t a1, char a2, void *a3)
{
  uint64_t v7 = sub_10002F214(&qword_10069D190);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10002F214(&qword_10069C550);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(a1 + 16);
  if (!v16) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v66 = v3;
  uint64_t v67 = v16;
  uint64_t v17 = a3;
  uint64_t v18 = &v15[*(int *)(v12 + 48)];
  unint64_t v65 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v19 = a1 + v65;
  uint64_t v72 = *(void *)(v13 + 72);
  uint64_t v69 = a1;
  swift_bridgeObjectRetain();
  sub_1002C0560(v19, (uint64_t)v15);
  uint64_t v68 = v8;
  uint64_t v20 = *(void (**)(unint64_t, uint64_t, uint64_t))(v8 + 32);
  uint64_t v71 = v15;
  uint64_t v74 = v8 + 32;
  uint64_t v75 = v7;
  uint64_t v73 = v20;
  v20((unint64_t)v10, (uint64_t)v15, v7);
  uint64_t v21 = *(void **)v18;
  uint64_t v22 = *((void *)v18 + 1);
  char v23 = v18[16];
  uint64_t v76 = v17;
  uint64_t v77 = v10;
  uint64_t v24 = *v17;
  unint64_t v26 = sub_1002B66E0((uint64_t)v10);
  uint64_t v27 = *(void *)(v24 + 16);
  BOOL v28 = (v25 & 1) == 0;
  uint64_t v29 = v27 + v28;
  if (__OFADD__(v27, v28)) {
    goto LABEL_24;
  }
  char v30 = v25;
  if (*(void *)(v24 + 24) >= v29)
  {
    if (a2)
    {
      if (v25) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_1002BDC38();
      if (v30) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v37 = (uint64_t)v77;
    uint64_t v38 = (void *)*v76;
    *(void *)(*v76 + 8 * (v26 >> 6) + 64) |= 1 << v26;
    uint64_t v39 = v38[6];
    uint64_t v70 = *(void *)(v68 + 72);
    v73(v39 + v70 * v26, v37, v75);
    uint64_t v40 = v38[7] + 24 * v26;
    *(void *)uint64_t v40 = v21;
    *(void *)(v40 + 8) = v22;
    *(unsigned char *)(v40 + 16) = v23;
    uint64_t v41 = v38[2];
    BOOL v42 = __OFADD__(v41, 1);
    uint64_t v43 = v41 + 1;
    if (v42)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    void v38[2] = v43;
    uint64_t v44 = v67 - 1;
    if (v67 == 1) {
      return swift_bridgeObjectRelease_n();
    }
    uint64_t v45 = v69 + v72 + v65;
    while (1)
    {
      uint64_t v46 = (uint64_t)v71;
      sub_1002C0560(v45, (uint64_t)v71);
      uint64_t v47 = (uint64_t)v77;
      v73((unint64_t)v77, v46, v75);
      uint64_t v21 = *(void **)v18;
      uint64_t v22 = *((void *)v18 + 1);
      char v23 = v18[16];
      uint64_t v48 = (void *)*v76;
      unint64_t v50 = sub_1002B66E0(v47);
      uint64_t v51 = v48[2];
      BOOL v52 = (v49 & 1) == 0;
      uint64_t v53 = v51 + v52;
      if (__OFADD__(v51, v52)) {
        break;
      }
      char v54 = v49;
      if (v48[3] < v53)
      {
        sub_1002B92CC(v53, 1);
        unint64_t v55 = sub_1002B66E0((uint64_t)v77);
        if ((v54 & 1) != (v56 & 1)) {
          goto LABEL_26;
        }
        unint64_t v50 = v55;
      }
      if (v54) {
        goto LABEL_10;
      }
      uint64_t v57 = (uint64_t)v77;
      uint64_t v58 = (void *)*v76;
      *(void *)(*v76 + 8 * (v50 >> 6) + 64) |= 1 << v50;
      v73(v58[6] + v70 * v50, v57, v75);
      uint64_t v59 = v58[7] + 24 * v50;
      *(void *)uint64_t v59 = v21;
      *(void *)(v59 + 8) = v22;
      *(unsigned char *)(v59 + 16) = v23;
      uint64_t v60 = v58[2];
      BOOL v42 = __OFADD__(v60, 1);
      uint64_t v61 = v60 + 1;
      if (v42) {
        goto LABEL_25;
      }
      _OWORD v58[2] = v61;
      v45 += v72;
      if (!--v44) {
        return swift_bridgeObjectRelease_n();
      }
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_1002B92CC(v29, a2 & 1);
  unint64_t v31 = sub_1002B66E0((uint64_t)v77);
  if ((v30 & 1) == (v32 & 1))
  {
    unint64_t v26 = v31;
    if ((v30 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v34 = swift_allocError();
    swift_willThrow();
    uint64_t v80 = v34;
    swift_errorRetain();
    sub_10002F214(&qword_1006A3D90);
    char v35 = swift_dynamicCast();
    uint64_t v36 = (uint64_t)v77;
    if ((v35 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      sub_1002BC868(v21, v22, v23);
      (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v36, v75);
      swift_bridgeObjectRelease();
      return swift_errorRelease();
    }
    goto LABEL_27;
  }
LABEL_26:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
LABEL_27:
  uint64_t v78 = 0;
  unint64_t v79 = 0xE000000000000000;
  _StringGuts.grow(_:)(30);
  v62._object = (void *)0x8000000100556F90;
  v62._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v62);
  _print_unlocked<A, B>(_:_:)();
  v63._countAndFlagsBits = 39;
  v63._object = (void *)0xE100000000000000;
  String.append(_:)(v63);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1002BFF64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002F214(&qword_10069C550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1002BFFD0()
{
  unint64_t result = qword_1006A1E70;
  if (!qword_1006A1E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A1E70);
  }
  return result;
}

unint64_t sub_1002C0028()
{
  unint64_t result = qword_1006A1E78;
  if (!qword_1006A1E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A1E78);
  }
  return result;
}

unint64_t sub_1002C0080()
{
  unint64_t result = qword_1006A1E80;
  if (!qword_1006A1E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A1E80);
  }
  return result;
}

unint64_t sub_1002C00D8()
{
  unint64_t result = qword_1006A1E88;
  if (!qword_1006A1E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A1E88);
  }
  return result;
}

unint64_t sub_1002C0130()
{
  unint64_t result = qword_1006A1E90;
  if (!qword_1006A1E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A1E90);
  }
  return result;
}

uint64_t type metadata accessor for ICArchivePreviewer()
{
  return self;
}

ValueMetadata *type metadata accessor for ICArchivePreviewer.Errors()
{
  return &type metadata for ICArchivePreviewer.Errors;
}

void destroy for ICArchivePreviewer.ObjectStates(uint64_t a1)
{
}

uint64_t _s11MobileNotes18ICArchivePreviewerC12ObjectStatesOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1001AB8D0(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ICArchivePreviewer.ObjectStates(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1001AB8D0(*(id *)a2, v4, v5);
  unint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1002BC868(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ICArchivePreviewer.ObjectStates(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1002BC868(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ICArchivePreviewer.ObjectStates(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ICArchivePreviewer.ObjectStates(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1002C0344(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_1002C035C(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)unint64_t result = a2 - 3;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ICArchivePreviewer.ObjectStates()
{
  return &type metadata for ICArchivePreviewer.ObjectStates;
}

unint64_t sub_1002C0384(unint64_t result, char a2)
{
  switch(a2)
  {
    case 0:
    case 2:
    case 3:
      unint64_t result = swift_errorRelease();
      break;
    case 1:
      unint64_t result = sub_1002C03D0(result);
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1002C03D0(unint64_t result)
{
  if (result >= 2) {
    return swift_errorRelease();
  }
  return result;
}

unint64_t sub_1002C03E0()
{
  unint64_t result = qword_1006A1F50;
  if (!qword_1006A1F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A1F50);
  }
  return result;
}

uint64_t sub_1002C0434(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FastSyncPresenceController.EditorDebounceState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002C0498(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FastSyncPresenceController.EditorDebounceState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002C04FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FastSyncPresenceController.EditorDebounceState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002C0560(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002F214(&qword_10069C550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002C05C8()
{
  swift_release();
  swift_errorRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002C0608()
{
  return (*(uint64_t (**)(void, uint64_t))(v0 + 16))(*(void *)(v0 + 32), 1);
}

uint64_t sub_1002C063C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1002C0684(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  if (a4)
  {
    swift_errorRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1002C06D4()
{
  sub_1002C0684(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(unsigned char *)(v0 + 40));
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 80, 7);
}

void sub_1002C072C()
{
  sub_1002B6078(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(unsigned char *)(v0 + 40), *(void *)(v0 + 48), *(void **)(v0 + 56), *(void (**)(void *, uint64_t))(v0 + 64));
}

id sub_1002C0744(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  if (a4)
  {
    return (id)swift_errorRetain();
  }
  else
  {
    swift_bridgeObjectRetain();
    return a3;
  }
}

id sub_1002C0794(void *a1, char a2)
{
  if (a2) {
    return (id)swift_errorRetain();
  }
  else {
    return a1;
  }
}

void sub_1002C07A0(void *a1, uint64_t a2, char a3)
{
  if (a3 != -1) {
    sub_1002BC868(a1, a2, a3);
  }
}

id sub_1002C07B4(uint64_t a1, uint64_t a2, void (*a3)(void *, uint64_t), void *a4)
{
  char v8 = (void *)type metadata accessor for URL();
  uint64_t v86 = *(v8 - 1);
  id v87 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_10002F214(&qword_10069D190);
  uint64_t v11 = *(void *)(v91 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = __chkstk_darwin(v91);
  uint64_t v84 = (char *)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v13);
  Swift::String v83 = (char *)&v83 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v83 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v83 - v19;
  uint64_t v21 = swift_allocObject();
  uint64_t v89 = a3;
  uint64_t v90 = v21;
  *(void *)(v21 + 16) = a3;
  *(void *)(v21 + 24) = a4;
  uint64_t v85 = a2 + 24;
  swift_beginAccess();
  uint64_t v22 = *(void *)(a2 + 24);
  uint64_t v23 = *(void *)(v22 + 16);
  id v88 = a4;
  uint64_t v24 = a1;
  swift_retain();
  if (v23 && (unint64_t v25 = sub_1002B66E0(a1), (v26 & 1) != 0))
  {
    uint64_t v27 = *(void *)(v22 + 56) + 24 * v25;
    BOOL v28 = *(void **)v27;
    uint64_t v29 = *(void **)(v27 + 8);
    uint64_t v30 = *(unsigned __int8 *)(v27 + 16);
    swift_endAccess();
    switch(v30)
    {
      case 1:
        char v56 = self;
        id v57 = v28;
        id v36 = [v56 progressWithTotalUnitCount:1];
        [v36 setCompletedUnitCount:[v36 totalUnitCount]];
        uint64_t v93 = (void *)sub_100031418(0, (unint64_t *)&qword_1006A5380);
        aBlock[0] = (uint64_t)v57;
        id v58 = v57;
        uint64_t v59 = (void *)sub_1001A71F8((uint64_t)aBlock);
        sub_100018FE8((uint64_t)aBlock);
        v89(v59, 0);

        sub_1002BC868(v28, (uint64_t)v29, 1);
        sub_1002BC868(v28, (uint64_t)v29, 1);
        goto LABEL_15;
      case 2:
        swift_errorRetain();
        v89(v28, 1);
        id v36 = [objc_allocWithZone((Class)NSProgress) init];
        sub_1002BC868(v28, (uint64_t)v29, 2);
        goto LABEL_15;
      case 3:
        id v60 = [self progressWithTotalUnitCount:1];
        uint64_t v61 = *(void (**)(char *, uint64_t))(v11 + 16);
        uint64_t v89 = (void (*)(void *, uint64_t))(v11 + 16);
        uint64_t v62 = (uint64_t)v83;
        uint64_t v63 = v24;
        uint64_t v64 = v24;
        uint64_t v65 = v91;
        v61(v83, v63);
        sub_10002F214(&qword_10069DD00);
        uint64_t v66 = swift_allocObject();
        *(_OWORD *)(v66 + 16) = xmmword_100524D10;
        uint64_t v67 = swift_allocObject();
        uint64_t v68 = v90;
        *(void *)(v67 + 16) = sub_1002C126C;
        *(void *)(v67 + 24) = v68;
        *(void *)(v66 + 32) = sub_1002B8E78;
        *(void *)(v66 + 40) = v67;
        swift_beginAccess();
        swift_retain();
        id v88 = v60;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v96 = *(void *)(a2 + 24);
        *(void *)(a2 + 24) = 0x8000000000000000;
        sub_1002BC684((uint64_t)v60, v66, 0, v62, isUniquelyReferenced_nonNull_native);
        *(void *)(a2 + 24) = v96;
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v62, v65);
        swift_endAccess();
        ((void (*)(uint64_t, uint64_t, uint64_t))v61)(v62, v64, v65);
        uint64_t v70 = *(unsigned __int8 *)(v11 + 80);
        uint64_t v85 = v70 | 7;
        uint64_t v71 = swift_allocObject();
        uint64_t v86 = v71;
        *(void *)(v71 + 16) = a2;
        uint64_t v72 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32);
        v72(v71 + ((v70 + 24) & ~v70), v62, v65);
        id v87 = *(id *)(a2 + 16);
        uint64_t v73 = v84;
        ((void (*)(char *, uint64_t, uint64_t))v61)(v84, v64, v65);
        uint64_t v74 = (v70 + 16) & ~v70;
        unint64_t v75 = (v12 + v74 + 7) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v76 = (v75 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v77 = swift_allocObject();
        v72(v77 + v74, (uint64_t)v73, v65);
        uint64_t v78 = v88;
        *(void *)(v77 + v75) = v88;
        *(void *)(v77 + v76) = a2;
        unint64_t v79 = (void *)(v77 + ((v76 + 15) & 0xFFFFFFFFFFFFFFF8));
        uint64_t v80 = v86;
        *unint64_t v79 = sub_1002BC85C;
        v79[1] = v80;
        uint64_t v94 = sub_1002BC864;
        uint64_t v95 = v77;
        aBlock[0] = (uint64_t)_NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        void aBlock[2] = (uint64_t)sub_1002B6294;
        uint64_t v93 = &unk_100633700;
        Swift::String v81 = _Block_copy(aBlock);
        swift_retain_n();
        id v82 = v78;
        swift_retain();
        swift_release();
        [v87 performBackgroundTask:v81];
        _Block_release(v81);
        swift_release();
        swift_release();
        id result = v82;
        break;
      default:
        uint64_t v31 = v11;
        uint64_t v32 = (uint64_t)v18;
        uint64_t v33 = v91;
        (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v18, v24, v91);
        uint64_t v34 = swift_allocObject();
        uint64_t v35 = v90;
        *(void *)(v34 + 16) = sub_1002C126C;
        *(void *)(v34 + 24) = v35;
        sub_1001AB8D0(v28, (uint64_t)v29, 0);
        id v36 = v28;
        swift_retain();
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v29 = sub_1001A836C(0, v29[2] + 1, 1, v29);
        }
        uint64_t v37 = v29;
        unint64_t v38 = v29[2];
        uint64_t v39 = v37;
        unint64_t v40 = v37[3];
        if (v38 >= v40 >> 1) {
          uint64_t v39 = sub_1001A836C((void *)(v40 > 1), v38 + 1, 1, v39);
        }
        v39[2] = v38 + 1;
        uint64_t v41 = &v39[2 * v38];
        v41[4] = sub_1002B8E78;
        v41[5] = v34;
        swift_release();
        BOOL v42 = (unint64_t *)v85;
        swift_beginAccess();
        char v43 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v96 = *v42;
        unint64_t *v42 = 0x8000000000000000;
        sub_1002BC684((uint64_t)v28, (uint64_t)v39, 0, v32, v43);
        unint64_t *v42 = v96;
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v32, v33);
        swift_endAccess();
        goto LABEL_15;
    }
  }
  else
  {
    swift_endAccess();
    if (qword_10069AE40 != -1) {
      swift_once();
    }
    uint64_t v44 = type metadata accessor for Logger();
    sub_10003293C(v44, (uint64_t)qword_1006A1E58);
    uint64_t v45 = v91;
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v20, a1, v91);
    uint64_t v46 = Logger.logObject.getter();
    os_log_type_t v47 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = (uint8_t *)swift_slowAlloc();
      uint64_t v85 = swift_slowAlloc();
      aBlock[0] = v85;
      *(_DWORD *)uint64_t v48 = 136315138;
      uint64_t v84 = (char *)(v48 + 4);
      ICObjectReferences.identifier.getter();
      sub_1002C063C(&qword_1006A10C8, (void (*)(uint64_t))&type metadata accessor for URL);
      id v49 = v87;
      uint64_t v50 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v52 = v51;
      (*(void (**)(char *, id))(v86 + 8))(v10, v49);
      unint64_t v96 = sub_10045DA1C(v50, v52, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v20, v91);
      _os_log_impl((void *)&_mh_execute_header, v46, v47, "Object to be previewed does not exist {url: %s}", v48, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v20, v45);
    }

    sub_1001ACB38();
    uint64_t v53 = swift_allocError();
    void *v54 = 4;
    swift_errorRetain();
    v89((void *)v53, 1);
    swift_errorRelease();
    swift_errorRelease();
    id v36 = [objc_allocWithZone((Class)NSProgress) init];
LABEL_15:
    swift_release();
    return v36;
  }
  return result;
}

void sub_1002C126C(void *a1, char a2)
{
  sub_1001A7120(a1, a2 & 1, *(void (**)(void *, uint64_t))(v2 + 16));
}

uint64_t sub_1002C127C()
{
  uint64_t v1 = sub_10002F214(&qword_10069D190);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_1002C134C(void *a1, char a2)
{
  char v4 = a2 & 1;
  uint64_t v5 = *(void *)(sub_10002F214(&qword_10069D190) - 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  sub_1002B5474(a1, v4, v6, v7);
}

uint64_t sub_1002C13D8()
{
  uint64_t v1 = sub_10002F214(&qword_10069D190);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_release();
  swift_release();

  return _swift_deallocObject(v0, ((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16, v5);
}

uint64_t sub_1002C14AC(void *a1)
{
  uint64_t v3 = *(void *)(sub_10002F214(&qword_10069D190) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void **)(v1 + v5);
  uint64_t v8 = v1 + v4;
  uint64_t v9 = *(void *)(v1 + v6);
  uint64_t v10 = v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = *(void **)v10;
  uint64_t v12 = *(void *)(v10 + 8);

  return sub_1002B59BC(a1, v8, v7, v9, v11, v12);
}

uint64_t sub_1002C1568(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*(void *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t OpenTableIntent.target.setter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TableEntity();
  __chkstk_darwin(v2 - 8);
  sub_1002C2690(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  IntentParameter.wrappedValue.setter();
  return sub_1002C26F4(a1);
}

void *OpenTableIntent.persistentIdentifier.unsafeMutableAddressor()
{
  return &static OpenTableIntent.persistentIdentifier;
}

uint64_t sub_1002C1664()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  sub_100032974(v6, static OpenTableIntent.title);
  sub_10003293C(v6, (uint64_t)static OpenTableIntent.title);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t OpenTableIntent.title.unsafeMutableAddressor()
{
  if (qword_10069AE48 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for LocalizedStringResource();

  return sub_10003293C(v0, (uint64_t)static OpenTableIntent.title);
}

uint64_t static OpenTableIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_10069AE48 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_10003293C(v2, (uint64_t)static OpenTableIntent.title);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

void *OpenTableIntent.openAppWhenRun.unsafeMutableAddressor()
{
  return &static OpenTableIntent.openAppWhenRun;
}

uint64_t static OpenTableIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for Locale();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = type metadata accessor for LocalizedStringResource();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v4, 1, 1, v11);
  IntentDescription.init(_:categoryName:searchKeywords:)();
  uint64_t v13 = type metadata accessor for IntentDescription();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 0, 1, v13);
}

uint64_t static OpenTableIntent.parameterSummary.getter()
{
  uint64_t v0 = sub_10002F214(&qword_1006A1F80);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10002F214(&qword_1006A1F88);
  __chkstk_darwin(v1);
  sub_100035750();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._countAndFlagsBits = 0x74206C6165766552;
  v2._object = (void *)0xEB00000000206568;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_10002F214(&qword_1006A1F90);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._countAndFlagsBits = 0x656C62617420;
  v3._object = (void *)0xE600000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_1002C1DF4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TableEntity();
  __chkstk_darwin(v2 - 8);
  sub_1002C2690(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  IntentParameter.wrappedValue.setter();
  return sub_1002C26F4(a1);
}

uint64_t sub_1002C1E84()
{
  uint64_t v0 = sub_10002F214(&qword_1006A1F80);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10002F214(&qword_1006A1F88);
  __chkstk_darwin(v1);
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._countAndFlagsBits = 0x74206C6165766552;
  v2._object = (void *)0xEB00000000206568;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_10002F214(&qword_1006A1F90);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._countAndFlagsBits = 0x656C62617420;
  v3._object = (void *)0xE600000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_1002C201C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = _s11MobileNotes15OpenTableIntentVACycfC_0();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t _s11MobileNotes15OpenTableIntentVACycfC_0()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v31 = *(void *)(v0 - 8);
  uint64_t v32 = v0;
  __chkstk_darwin(v0);
  uint64_t v30 = (char *)v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v29 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  BOOL v28 = (char *)v26 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069B3C8);
  __chkstk_darwin(v6 - 8);
  uint64_t v27 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v8 - 8);
  v26[0] = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Locale();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = type metadata accessor for LocalizedStringResource();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  v26[1] = sub_10002F214((uint64_t *)&unk_10069B3D0);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v18 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v19(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v19(v13, v18, v10);
  uint64_t v20 = v26[0];
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
  uint64_t v21 = type metadata accessor for TableEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v27, 1, 1, v21);
  uint64_t v22 = type metadata accessor for IntentDialog();
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(v28, 1, 1, v22);
  v23(v29, 1, 1, v22);
  (*(void (**)(char *, void, uint64_t))(v31 + 104))(v30, enum case for InputConnectionBehavior.default(_:), v32);
  sub_1002C2940(&qword_1006A9020);
  uint64_t v24 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  sub_10002F214((uint64_t *)&unk_10069B130);
  unint64_t v33 = 0xD000000000000024;
  unint64_t v34 = 0x8000000100549260;
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  sub_10002F214((uint64_t *)&unk_10069CE60);
  unint64_t v33 = 0xD000000000000021;
  unint64_t v34 = 0x8000000100549290;
  AnyHashable.init<A>(_:)();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  return v24;
}

uint64_t sub_1002C2690(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TableEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002C26F4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TableEntity();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1002C2750@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1002C277C()
{
  return sub_1002C2940(&qword_1006A1F98);
}

unint64_t sub_1002C27B0(uint64_t a1)
{
  unint64_t result = sub_1002C27D8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1002C27D8()
{
  unint64_t result = qword_1006A1FC8;
  if (!qword_1006A1FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A1FC8);
  }
  return result;
}

unint64_t sub_1002C2830()
{
  unint64_t result = qword_1006A1FD0;
  if (!qword_1006A1FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A1FD0);
  }
  return result;
}

uint64_t sub_1002C2884()
{
  return sub_1002C2940(&qword_10069D3A0);
}

uint64_t sub_1002C28BC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002C28D8()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for OpenTableIntent()
{
  return &type metadata for OpenTableIntent;
}

uint64_t sub_1002C2904()
{
  return sub_10001DFB0(&qword_1006A1FF0, &qword_1006A1FF8);
}

uint64_t sub_1002C2940(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for TableEntity();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002C2984()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100032974(v0, qword_1006A2000);
  sub_10003293C(v0, (uint64_t)qword_1006A2000);
  return static Logger.archiving.getter();
}

uint64_t sub_1002C29D0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, int a7)
{
  uint64_t v12 = _s16AttributedStringV9AttributeVMa(0);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12 - 8);
  uint64_t v15 = (uint64_t *)((char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v16 = a6;
  uint64_t v17 = swift_bridgeObjectRetain();
  sub_1002C2B58(v17, a2, a3, a6, a7, v15);
  unint64_t v18 = *(void *)(a5 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a5 + 16) = v18;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v18 = sub_1001A8C10(0, *(void *)(v18 + 16) + 1, 1, v18);
    *(void *)(a5 + 16) = v18;
  }
  unint64_t v21 = *(void *)(v18 + 16);
  unint64_t v20 = *(void *)(v18 + 24);
  if (v21 >= v20 >> 1)
  {
    unint64_t v18 = sub_1001A8C10(v20 > 1, v21 + 1, 1, v18);
    *(void *)(a5 + 16) = v18;
  }
  *(void *)(v18 + 16) = v21 + 1;
  return sub_1002CC0F0((uint64_t)v15, v18+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(void *)(v13 + 72) * v21, _s16AttributedStringV9AttributeVMa);
}

void sub_1002C2B58(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, int a5@<W4>, void *a6@<X8>)
{
  int v249 = a5;
  v271 = a4;
  unint64_t v272 = a2;
  uint64_t v273 = a3;
  uint64_t v8 = sub_10002F214(&qword_1006A2018);
  __chkstk_darwin(v8 - 8);
  v248 = (uint64_t *)((char *)&v241 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_10002F214(&qword_10069B310);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  v243 = (char *)&v241 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v275 = (uint64_t)&v241 - v13;
  uint64_t v14 = type metadata accessor for URL();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  os_signpost_id_t v242 = (char *)&v241 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  v241 = (char *)&v241 - v19;
  __chkstk_darwin(v18);
  v264 = (char *)&v241 - v20;
  uint64_t v21 = sub_10002F214(&qword_1006A2020);
  __chkstk_darwin(v21 - 8);
  uint64_t v263 = (uint64_t)&v241 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  __chkstk_darwin(v23 - 8);
  uint64_t v258 = (char *)&v241 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_10002F214((uint64_t *)&unk_10069C990);
  __chkstk_darwin(v25 - 8);
  uint64_t v27 = (char *)&v241 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for UUID();
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  v251 = (char *)&v241 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = (int *)_s16AttributedStringV9AttributeVMa(0);
  uint64_t v32 = (uint64_t)a6 + v31[5];
  uint64_t v253 = v29;
  unint64_t v33 = *(void (**)(void))(v29 + 56);
  uint64_t v250 = v32;
  uint64_t v269 = v33;
  v33();
  uint64_t v34 = (uint64_t)a6 + v31[6];
  uint64_t v35 = type metadata accessor for Date();
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v37 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v36 + 56);
  uint64_t v257 = v34;
  uint64_t v256 = v35;
  v255 = v37;
  uint64_t v254 = v36 + 56;
  ((void (*)(uint64_t, uint64_t, uint64_t))v37)(v34, 1, 1);
  unint64_t v38 = (char *)a6 + v31[7];
  *(_OWORD *)unint64_t v38 = xmmword_10052CE20;
  *((_OWORD *)v38 + 1) = 0u;
  *((_OWORD *)v38 + 2) = 0u;
  *((_OWORD *)v38 + 3) = 0u;
  *((void *)v38 + 8) = 0;
  uint64_t v39 = (uint64_t)a6 + v31[8];
  uint64_t v40 = _s16AttributedStringV14ParagraphStyleVMa(0);
  uint64_t v41 = *(void *)(v40 - 8);
  BOOL v42 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 56);
  uint64_t v262 = v39;
  uint64_t v261 = v40;
  v260 = v42;
  uint64_t v259 = v41 + 56;
  ((void (*)(uint64_t, uint64_t, uint64_t))v42)(v39, 1, 1);
  uint64_t v265 = v31[9];
  *((unsigned char *)a6 + v265) = 5;
  uint64_t v43 = (uint64_t)a6 + v31[10];
  uint64_t v268 = v15;
  uint64_t v44 = *(void (**)(void))(v15 + 56);
  uint64_t v266 = v43;
  uint64_t v270 = v14;
  uint64_t v274 = v44;
  v44();
  uint64_t v267 = v31[11];
  *((unsigned char *)a6 + v267) = 5;
  uint64_t v45 = (void *)((char *)a6 + v31[12]);
  *uint64_t v45 = 0;
  v45[1] = 0;
  uint64_t v46 = (uint64_t)a6 + v31[13];
  uint64_t v47 = _s16AttributedStringV16InlineAttachmentVMa(0);
  uint64_t v48 = *(void *)(v47 - 8);
  id v49 = *(void (**)(uint64_t *, void, uint64_t, uint64_t))(v48 + 56);
  uint64_t v247 = v46;
  uint64_t v246 = v47;
  v245 = v49;
  uint64_t v244 = v48 + 56;
  ((void (*)(uint64_t, uint64_t, uint64_t))v49)(v46, 1, 1);
  uint64_t v50 = v272;
  unint64_t v272 = a6;
  uint64_t v51 = v273;
  *a6 = v50;
  a6[1] = v51;
  uint64_t v52 = *(void *)(a1 + 16);
  v252 = v45;
  if (!v52)
  {
    long long v279 = 0u;
    long long v280 = 0u;
    goto LABEL_8;
  }
  id v53 = ICTTAttributeNameReplicaID;
  uint64_t v54 = sub_1002B62FC(v53);
  if ((v55 & 1) == 0)
  {
    long long v279 = 0u;
    long long v280 = 0u;

    goto LABEL_8;
  }
  sub_100032E28(*(void *)(a1 + 56) + 32 * v54, (uint64_t)&v279);

  if (!*((void *)&v280 + 1))
  {
LABEL_8:
    sub_10002B754((uint64_t)&v279, &qword_10069B4D0);
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v269)(v27, 1, 1, v28);
    goto LABEL_9;
  }
  int v56 = swift_dynamicCast();
  id v57 = v269;
  ((void (*)(char *, void, uint64_t, uint64_t))v269)(v27, v56 ^ 1u, 1, v28);
  uint64_t v58 = v253;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v253 + 48))(v27, 1, v28) != 1)
  {
    uint64_t v59 = *(void (**)(char *, char *, uint64_t))(v58 + 32);
    id v60 = v251;
    v59(v251, v27, v28);
    uint64_t v61 = v250;
    sub_10002B754(v250, (uint64_t *)&unk_10069C990);
    v59((char *)v61, v60, v28);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v57)(v61, 0, 1, v28);
    goto LABEL_10;
  }
LABEL_9:
  sub_10002B754((uint64_t)v27, (uint64_t *)&unk_10069C990);
LABEL_10:
  uint64_t v62 = v270;
  uint64_t v63 = v271;
  if (!*(void *)(a1 + 16))
  {
    long long v279 = 0u;
    long long v280 = 0u;
    goto LABEL_21;
  }
  id v64 = ICTTAttributeNameTimestamp;
  uint64_t v65 = sub_1002B62FC(v64);
  if (v66)
  {
    sub_100032E28(*(void *)(a1 + 56) + 32 * v65, (uint64_t)&v279);
  }
  else
  {
    long long v279 = 0u;
    long long v280 = 0u;
  }

  if (!*((void *)&v280 + 1))
  {
LABEL_21:
    sub_10002B754((uint64_t)&v279, &qword_10069B4D0);
    if (*(void *)(a1 + 16)) {
      goto LABEL_19;
    }
LABEL_22:
    long long v279 = 0u;
    long long v280 = 0u;
LABEL_28:
    sub_10002B754((uint64_t)&v279, &qword_10069B4D0);
    goto LABEL_29;
  }
  if (swift_dynamicCast())
  {
    uint64_t v67 = (uint64_t)v258;
    Date.init(timeIntervalSince1970:)();
    v255(v67, 0, 1, v256);
    sub_10002B660(v67, v257, (uint64_t *)&unk_1006A3E20);
  }
  if (!*(void *)(a1 + 16)) {
    goto LABEL_22;
  }
LABEL_19:
  id v68 = ICTTAttributeNameFont;
  uint64_t v69 = sub_1002B62FC(v68);
  if (v70)
  {
    sub_100032E28(*(void *)(a1 + 56) + 32 * v69, (uint64_t)&v279);
  }
  else
  {
    long long v279 = 0u;
    long long v280 = 0u;
  }

  if (!*((void *)&v280 + 1)) {
    goto LABEL_28;
  }
  sub_100031418(0, &qword_1006A2028);
  if (swift_dynamicCast())
  {
    uint64_t v71 = (void *)v277;
    uint64_t v72 = *((void *)v38 + 1);
    if (v72 == 1)
    {
      uint64_t v73 = 0;
      uint64_t v72 = 0;
      uint64_t v74 = 0;
      uint64_t v75 = 0;
      uint64_t v76 = 0;
      long long v77 = 0uLL;
      unint64_t v78 = 0x200000000;
      unsigned int v79 = 1;
      int v80 = 0x2000000;
      int v81 = 0x20000;
      __int16 v82 = 512;
      unsigned int v83 = 1;
    }
    else
    {
      uint64_t v76 = *((void *)v38 + 8);
      long long v77 = *((_OWORD *)v38 + 3);
      uint64_t v100 = *((void *)v38 + 3);
      uint64_t v75 = *((void *)v38 + 4);
      uint64_t v74 = *((void *)v38 + 2);
      uint64_t v73 = *(void *)v38;
      __int16 v82 = v100 & 0xFF00;
      int v81 = v100 & 0xFFFF0000;
      int v80 = v100 & 0xFF000000;
      unint64_t v78 = v100 & 0xFFFFFFFF00000000;
      unsigned int v79 = v100 & 1;
      unsigned int v83 = v38[40] & 1;
    }
    *(void *)unint64_t v38 = v73;
    *((void *)v38 + 1) = v72;
    *((void *)v38 + 2) = v74;
    *((void *)v38 + 3) = (unsigned __int16)v82 & 0xFF00 | *(void *)&v81 & 0xFF0000 | v79 | v80 & 0xFF000000 | v78 & 0xFF00000000;
    *((void *)v38 + 4) = v75;
    *((void *)v38 + 5) = v83;
    *((_OWORD *)v38 + 3) = v77;
    *((void *)v38 + 8) = v76;
    id v101 = [v71 fontName];
    if (v101)
    {
      uint64_t v102 = v101;
      uint64_t v103 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v105 = v104;
    }
    else
    {
      uint64_t v103 = 0;
      uint64_t v105 = 0;
    }
    swift_bridgeObjectRelease();
    *(void *)unint64_t v38 = v103;
    *((void *)v38 + 1) = v105;
    if (v105 == 1
      || ([v71 pointSize], *((void *)v38 + 2) = v178, v38[24] = 0, *((void *)v38 + 1) == 1)
      || (v38[25] = [v71 fontHints] & 1, *((void *)v38 + 1) == 1))
    {
    }
    else
    {
      unsigned __int8 v240 = [v71 fontHints];

      v38[26] = (v240 & 2) != 0;
    }
    if (!*(void *)(a1 + 16)) {
      goto LABEL_87;
    }
    goto LABEL_30;
  }
LABEL_29:
  if (!*(void *)(a1 + 16))
  {
LABEL_87:
    long long v279 = 0u;
    long long v280 = 0u;
    goto LABEL_88;
  }
LABEL_30:
  id v84 = ICTTAttributeNameFontHints;
  uint64_t v85 = sub_1002B62FC(v84);
  if (v86)
  {
    sub_100032E28(*(void *)(a1 + 56) + 32 * v85, (uint64_t)&v279);
  }
  else
  {
    long long v279 = 0u;
    long long v280 = 0u;
  }

  if (*((void *)&v280 + 1))
  {
    if (swift_dynamicCast())
    {
      char v87 = v277;
      uint64_t v88 = *((void *)v38 + 1);
      if (v88 == 1)
      {
        uint64_t v89 = 0;
        uint64_t v88 = 0;
        uint64_t v90 = 0;
        uint64_t v91 = 0;
        uint64_t v92 = 0;
        long long v93 = 0uLL;
        unint64_t v94 = 0x200000000;
        unsigned int v95 = 1;
        int v96 = 0x2000000;
        int v97 = 0x20000;
        __int16 v98 = 512;
        unsigned int v99 = 1;
      }
      else
      {
        uint64_t v92 = *((void *)v38 + 8);
        long long v93 = *((_OWORD *)v38 + 3);
        uint64_t v106 = *((void *)v38 + 3);
        uint64_t v91 = *((void *)v38 + 4);
        uint64_t v90 = *((void *)v38 + 2);
        uint64_t v89 = *(void *)v38;
        __int16 v98 = v106 & 0xFF00;
        int v97 = v106 & 0xFFFF0000;
        int v96 = v106 & 0xFF000000;
        unint64_t v94 = v106 & 0xFFFFFFFF00000000;
        unsigned int v95 = v106 & 1;
        unsigned int v99 = v38[40] & 1;
      }
      *(void *)unint64_t v38 = v89;
      *((void *)v38 + 1) = v88;
      *((void *)v38 + 2) = v90;
      *((void *)v38 + 3) = (unsigned __int16)v98 & 0xFF00 | *(void *)&v97 & 0xFF0000 | v95 | v96 & 0xFF000000 | v94 & 0xFF00000000;
      *((void *)v38 + 4) = v91;
      *((void *)v38 + 5) = v99;
      *((_OWORD *)v38 + 3) = v93;
      *((void *)v38 + 8) = v92;
      v38[25] = v87 & 1;
      v38[26] = (v87 & 2) != 0;
    }
    if (!*(void *)(a1 + 16)) {
      goto LABEL_89;
    }
    goto LABEL_43;
  }
LABEL_88:
  sub_10002B754((uint64_t)&v279, &qword_10069B4D0);
  if (!*(void *)(a1 + 16))
  {
LABEL_89:
    long long v279 = 0u;
    long long v280 = 0u;
    goto LABEL_90;
  }
LABEL_43:
  id v107 = ICTTAttributeNameUnderline;
  uint64_t v108 = sub_1002B62FC(v107);
  if (v109)
  {
    sub_100032E28(*(void *)(a1 + 56) + 32 * v108, (uint64_t)&v279);
  }
  else
  {
    long long v279 = 0u;
    long long v280 = 0u;
  }

  if (*((void *)&v280 + 1))
  {
    if (swift_dynamicCast())
    {
      char v110 = v277;
      uint64_t v111 = *((void *)v38 + 1);
      if (v111 == 1)
      {
        uint64_t v112 = 0;
        uint64_t v111 = 0;
        uint64_t v113 = 0;
        uint64_t v114 = 0;
        uint64_t v115 = 0;
        long long v116 = 0uLL;
        unint64_t v117 = 0x200000000;
        unsigned int v118 = 1;
        int v119 = 0x2000000;
        int v120 = 0x20000;
        __int16 v121 = 512;
        unsigned int v122 = 1;
      }
      else
      {
        uint64_t v115 = *((void *)v38 + 8);
        long long v116 = *((_OWORD *)v38 + 3);
        uint64_t v123 = *((void *)v38 + 3);
        uint64_t v114 = *((void *)v38 + 4);
        uint64_t v113 = *((void *)v38 + 2);
        uint64_t v112 = *(void *)v38;
        __int16 v121 = v123 & 0xFF00;
        int v120 = v123 & 0xFFFF0000;
        int v119 = v123 & 0xFF000000;
        unint64_t v117 = v123 & 0xFFFFFFFF00000000;
        unsigned int v118 = v123 & 1;
        unsigned int v122 = v38[40] & 1;
      }
      *(void *)unint64_t v38 = v112;
      *((void *)v38 + 1) = v111;
      *((void *)v38 + 2) = v113;
      *((void *)v38 + 3) = (unsigned __int16)v121 & 0xFF00 | *(void *)&v120 & 0xFF0000 | v118 | v119 & 0xFF000000 | v117 & 0xFF00000000;
      *((void *)v38 + 4) = v114;
      *((void *)v38 + 5) = v122;
      *((_OWORD *)v38 + 3) = v116;
      *((void *)v38 + 8) = v115;
      v38[27] = v110;
    }
    if (!*(void *)(a1 + 16)) {
      goto LABEL_91;
    }
    goto LABEL_53;
  }
LABEL_90:
  sub_10002B754((uint64_t)&v279, &qword_10069B4D0);
  if (!*(void *)(a1 + 16))
  {
LABEL_91:
    long long v279 = 0u;
    long long v280 = 0u;
    goto LABEL_92;
  }
LABEL_53:
  id v124 = ICTTAttributeNameStrikethrough;
  uint64_t v125 = sub_1002B62FC(v124);
  if (v126)
  {
    sub_100032E28(*(void *)(a1 + 56) + 32 * v125, (uint64_t)&v279);
  }
  else
  {
    long long v279 = 0u;
    long long v280 = 0u;
  }

  if (*((void *)&v280 + 1))
  {
    if (swift_dynamicCast())
    {
      char v127 = v277;
      uint64_t v128 = *((void *)v38 + 1);
      if (v128 == 1)
      {
        uint64_t v129 = 0;
        uint64_t v128 = 0;
        uint64_t v130 = 0;
        uint64_t v131 = 0;
        uint64_t v132 = 0;
        long long v133 = 0uLL;
        unint64_t v134 = 0x200000000;
        unsigned int v135 = 1;
        int v136 = 0x2000000;
        int v137 = 0x20000;
        __int16 v138 = 512;
        unsigned int v139 = 1;
      }
      else
      {
        uint64_t v132 = *((void *)v38 + 8);
        long long v133 = *((_OWORD *)v38 + 3);
        uint64_t v140 = *((void *)v38 + 3);
        uint64_t v131 = *((void *)v38 + 4);
        uint64_t v130 = *((void *)v38 + 2);
        uint64_t v129 = *(void *)v38;
        __int16 v138 = v140 & 0xFF00;
        int v137 = v140 & 0xFFFF0000;
        int v136 = v140 & 0xFF000000;
        unint64_t v134 = v140 & 0xFFFFFFFF00000000;
        unsigned int v135 = v140 & 1;
        unsigned int v139 = v38[40] & 1;
      }
      *(void *)unint64_t v38 = v129;
      *((void *)v38 + 1) = v128;
      *((void *)v38 + 2) = v130;
      *((void *)v38 + 3) = (unsigned __int16)v138 & 0xFF00 | *(void *)&v137 & 0xFF0000 | v135 | v136 & 0xFF000000 | v134 & 0xFF00000000;
      *((void *)v38 + 4) = v131;
      *((void *)v38 + 5) = v139;
      *((_OWORD *)v38 + 3) = v133;
      *((void *)v38 + 8) = v132;
      v38[28] = v127;
    }
    if (!*(void *)(a1 + 16)) {
      goto LABEL_93;
    }
    goto LABEL_63;
  }
LABEL_92:
  sub_10002B754((uint64_t)&v279, &qword_10069B4D0);
  if (!*(void *)(a1 + 16))
  {
LABEL_93:
    long long v279 = 0u;
    long long v280 = 0u;
    goto LABEL_94;
  }
LABEL_63:
  id v141 = ICTTAttributeNameSuperscript;
  uint64_t v142 = sub_1002B62FC(v141);
  if (v143)
  {
    sub_100032E28(*(void *)(a1 + 56) + 32 * v142, (uint64_t)&v279);
  }
  else
  {
    long long v279 = 0u;
    long long v280 = 0u;
  }

  if (*((void *)&v280 + 1))
  {
    if (swift_dynamicCast())
    {
      uint64_t v144 = v277;
      uint64_t v145 = *((void *)v38 + 1);
      if (v145 == 1)
      {
        uint64_t v146 = 0;
        uint64_t v145 = 0;
        uint64_t v147 = 0;
        uint64_t v148 = 0;
        long long v149 = 0uLL;
        unint64_t v150 = 0x200000000;
        unsigned int v151 = 1;
        int v152 = 0x2000000;
        int v153 = 0x20000;
        __int16 v154 = 512;
        unsigned int v155 = 1;
      }
      else
      {
        uint64_t v148 = *((void *)v38 + 8);
        long long v149 = *((_OWORD *)v38 + 3);
        uint64_t v147 = *((void *)v38 + 2);
        uint64_t v156 = *((void *)v38 + 3);
        uint64_t v146 = *(void *)v38;
        __int16 v154 = v156 & 0xFF00;
        int v153 = v156 & 0xFFFF0000;
        int v152 = v156 & 0xFF000000;
        unint64_t v150 = v156 & 0xFFFFFFFF00000000;
        unsigned int v151 = v156 & 1;
        unsigned int v155 = v38[40] & 1;
      }
      *(void *)unint64_t v38 = v146;
      *((void *)v38 + 1) = v145;
      *((void *)v38 + 2) = v147;
      *((void *)v38 + 3) = (unsigned __int16)v154 & 0xFF00 | *(void *)&v153 & 0xFF0000 | v151 | v152 & 0xFF000000 | v150 & 0xFF00000000;
      *((_OWORD *)v38 + 3) = v149;
      *((void *)v38 + 8) = v148;
      *((void *)v38 + 4) = v144;
      *((void *)v38 + 5) = v155;
      v38[40] = 0;
    }
    if (!*(void *)(a1 + 16)) {
      goto LABEL_95;
    }
    goto LABEL_73;
  }
LABEL_94:
  sub_10002B754((uint64_t)&v279, &qword_10069B4D0);
  if (!*(void *)(a1 + 16))
  {
LABEL_95:
    long long v277 = 0u;
    long long v278 = 0u;
LABEL_96:
    sub_10002B754((uint64_t)&v277, &qword_10069B4D0);
    goto LABEL_97;
  }
LABEL_73:
  id v157 = ICTTAttributeNameForegroundColor;
  uint64_t v158 = sub_1002B62FC(v157);
  if (v159)
  {
    sub_100032E28(*(void *)(a1 + 56) + 32 * v158, (uint64_t)&v277);
  }
  else
  {
    long long v277 = 0u;
    long long v278 = 0u;
  }

  if (!*((void *)&v278 + 1)) {
    goto LABEL_96;
  }
  sub_100032E84(&v277, &v279);
  uint64_t v160 = *((void *)v38 + 1);
  if (v160 == 1)
  {
    uint64_t v161 = 0;
    uint64_t v160 = 0;
    uint64_t v162 = 0;
    uint64_t v163 = 0;
    uint64_t v164 = 0;
    long long v165 = 0uLL;
    unint64_t v166 = 0x200000000;
    unsigned int v167 = 1;
    int v168 = 0x2000000;
    int v169 = 0x20000;
    __int16 v170 = 512;
    unsigned int v171 = 1;
  }
  else
  {
    uint64_t v164 = *((void *)v38 + 8);
    long long v165 = *((_OWORD *)v38 + 3);
    uint64_t v172 = *((void *)v38 + 3);
    uint64_t v163 = *((void *)v38 + 4);
    uint64_t v162 = *((void *)v38 + 2);
    uint64_t v161 = *(void *)v38;
    __int16 v170 = v172 & 0xFF00;
    int v169 = v172 & 0xFFFF0000;
    int v168 = v172 & 0xFF000000;
    unint64_t v166 = v172 & 0xFFFFFFFF00000000;
    unsigned int v167 = v172 & 1;
    unsigned int v171 = v38[40] & 1;
  }
  *(void *)unint64_t v38 = v161;
  *((void *)v38 + 1) = v160;
  *((void *)v38 + 2) = v162;
  *((void *)v38 + 3) = (unsigned __int16)v170 & 0xFF00 | *(void *)&v169 & 0xFF0000 | v167 | v168 & 0xFF000000 | v166 & 0xFF00000000;
  *((void *)v38 + 4) = v163;
  *((void *)v38 + 5) = v171;
  *((_OWORD *)v38 + 3) = v165;
  *((void *)v38 + 8) = v164;
  sub_100032E28((uint64_t)&v279, (uint64_t)&v277);
  type metadata accessor for CGColor(0);
  swift_dynamicCast();
  uint64_t v173 = sub_1002CBA58(v276);
  uint64_t v175 = v174;
  uint64_t v177 = v176;
  sub_100018FE8((uint64_t)&v279);
  sub_10024BFB8(*((void *)v38 + 6), *((void *)v38 + 7));
  *((void *)v38 + 6) = v173;
  *((void *)v38 + 7) = v175;
  *((void *)v38 + 8) = v177;
LABEL_97:
  char v179 = v274;
  if (!*(void *)(a1 + 16))
  {
    long long v279 = 0u;
    long long v280 = 0u;
    goto LABEL_114;
  }
  id v180 = ICTTAttributeNameParagraphStyle;
  uint64_t v181 = sub_1002B62FC(v180);
  if (v182)
  {
    sub_100032E28(*(void *)(a1 + 56) + 32 * v181, (uint64_t)&v279);
  }
  else
  {
    long long v279 = 0u;
    long long v280 = 0u;
  }

  if (!*((void *)&v280 + 1))
  {
LABEL_114:
    sub_10002B754((uint64_t)&v279, &qword_10069B4D0);
    if (*(void *)(a1 + 16)) {
      goto LABEL_112;
    }
LABEL_115:
    long long v279 = 0u;
    long long v280 = 0u;
LABEL_121:
    sub_10002B754((uint64_t)&v279, &qword_10069B4D0);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v179)(v275, 1, 1, v62);
LABEL_122:
    sub_10002B754(v275, &qword_10069B310);
    if (!*(void *)(a1 + 16)) {
      goto LABEL_120;
    }
    goto LABEL_123;
  }
  sub_100031418(0, (unint64_t *)&qword_10069C9A0);
  if (swift_dynamicCast())
  {
    id v183 = (id)v277;
    uint64_t v184 = v263;
    sub_1002C7E14(v183, v263);
    v260(v184, 0, 1, v261);
    sub_10002B660(v184, v262, &qword_1006A2020);
    id v185 = [v183 writingDirection];

    unint64_t v186 = (unint64_t)v185 + 1;
    if (v185 == (id)3) {
      char v187 = 4;
    }
    else {
      char v187 = 5;
    }
    if (v186 >= 4) {
      char v188 = v187;
    }
    else {
      char v188 = 0x2030100u >> (8 * v186);
    }
    *((unsigned char *)v272 + v267) = v188;
  }
  if (!*(void *)(a1 + 16)) {
    goto LABEL_115;
  }
LABEL_112:
  id v189 = ICTTNSLinkAttributeName;
  uint64_t v190 = sub_1002B62FC(v189);
  if (v191)
  {
    sub_100032E28(*(void *)(a1 + 56) + 32 * v190, (uint64_t)&v279);
  }
  else
  {
    long long v279 = 0u;
    long long v280 = 0u;
  }

  if (!*((void *)&v280 + 1)) {
    goto LABEL_121;
  }
  uint64_t v192 = v275;
  int v193 = swift_dynamicCast();
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v179)(v192, v193 ^ 1u, 1, v62);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v268 + 48))(v192, 1, v62) == 1) {
    goto LABEL_122;
  }
  id v194 = *(void (**)(char *, uint64_t, uint64_t))(v268 + 32);
  uint64_t v195 = v264;
  v194(v264, v275, v62);
  uint64_t v196 = v266;
  sub_10002B754(v266, &qword_10069B310);
  v194((char *)v196, (uint64_t)v195, v62);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v179)(v196, 0, 1, v62);
  if (!*(void *)(a1 + 16))
  {
LABEL_120:
    long long v279 = 0u;
    long long v280 = 0u;
    goto LABEL_137;
  }
LABEL_123:
  id v197 = ICTTNSWritingDirectionAttributeName;
  uint64_t v198 = sub_1002B62FC(v197);
  if (v199)
  {
    sub_100032E28(*(void *)(a1 + 56) + 32 * v198, (uint64_t)&v279);
  }
  else
  {
    long long v279 = 0u;
    long long v280 = 0u;
  }

  if (*((void *)&v280 + 1))
  {
    if (swift_dynamicCast())
    {
      unint64_t v200 = v277 + 1;
      if ((void)v277 == 3) {
        char v201 = 4;
      }
      else {
        char v201 = 5;
      }
      if (v200 < 4) {
        char v201 = 0x2030100u >> (8 * v200);
      }
      *((unsigned char *)v272 + v267) = v201;
    }
    if (!*(void *)(a1 + 16)) {
      goto LABEL_138;
    }
    goto LABEL_135;
  }
LABEL_137:
  sub_10002B754((uint64_t)&v279, &qword_10069B4D0);
  if (!*(void *)(a1 + 16))
  {
LABEL_138:
    long long v279 = 0u;
    long long v280 = 0u;
    goto LABEL_146;
  }
LABEL_135:
  id v202 = ICTTAttributeNameEmphasis;
  uint64_t v203 = sub_1002B62FC(v202);
  if (v204)
  {
    sub_100032E28(*(void *)(a1 + 56) + 32 * v203, (uint64_t)&v279);
  }
  else
  {
    long long v279 = 0u;
    long long v280 = 0u;
  }

  if (*((void *)&v280 + 1))
  {
    if (swift_dynamicCast())
    {
      unint64_t v205 = ICEmphasisColorTypeForTag();
      char v206 = sub_1002CBFD0(v205);
      *((unsigned char *)v272 + v265) = v206;
    }
    if (!*(void *)(a1 + 16)) {
      goto LABEL_147;
    }
    goto LABEL_144;
  }
LABEL_146:
  sub_10002B754((uint64_t)&v279, &qword_10069B4D0);
  if (!*(void *)(a1 + 16))
  {
LABEL_147:
    long long v279 = 0u;
    long long v280 = 0u;
    goto LABEL_150;
  }
LABEL_144:
  id v207 = ICTTNSAttachmentAttributeName;
  uint64_t v208 = sub_1002B62FC(v207);
  if (v209)
  {
    sub_100032E28(*(void *)(a1 + 56) + 32 * v208, (uint64_t)&v279);
  }
  else
  {
    long long v279 = 0u;
    long long v280 = 0u;
  }

LABEL_150:
  swift_bridgeObjectRelease();
  if (!*((void *)&v280 + 1))
  {

    os_signpost_type_t v225 = &qword_10069B4D0;
    v226 = &v279;
LABEL_161:
    sub_10002B754((uint64_t)v226, v225);
    return;
  }
  sub_100031418(0, (unint64_t *)&qword_1006A04D0);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_174;
  }
  os_signpost_type_t v210 = (void *)v277;
  if (![self isInlineAttachment:(void)v277])
  {
    id v227 = [v210 attachmentIdentifier];
    if (v227)
    {
      uint64_t v228 = v227;
      uint64_t v229 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v231 = v230;
    }
    else
    {

      uint64_t v229 = 0;
      uint64_t v231 = 0;
    }
    v232 = v252;
    swift_bridgeObjectRelease();
    uint64_t *v232 = v229;
    v232[1] = v231;
    return;
  }
  if (!v63)
  {
LABEL_169:
    if (qword_10069AE50 != -1) {
      swift_once();
    }
    uint64_t v233 = type metadata accessor for Logger();
    sub_10003293C(v233, (uint64_t)qword_1006A2000);
    id v234 = v210;
    v235 = Logger.logObject.getter();
    os_log_type_t v236 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v235, v236))
    {
      v237 = (uint8_t *)swift_slowAlloc();
      os_signpost_id_t v238 = (void *)swift_slowAlloc();
      *(_DWORD *)v237 = 138412290;
      *(void *)&long long v279 = v234;
      id v239 = v234;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *os_signpost_id_t v238 = v234;

      _os_log_impl((void *)&_mh_execute_header, v235, v236, "Cannot resolve inline attachment — skipping {attachment: %@}", v237, 0xCu);
      sub_10002F214(&qword_10069FD50);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
LABEL_174:

    return;
  }
  id v211 = v63;
  id v212 = [v210 inlineAttachmentInContext:v211];
  if (!v212)
  {

    goto LABEL_169;
  }
  id v213 = v212;
  v214 = v248;
  sub_1002C91B4(v213, v248);
  v245(v214, 0, 1, v246);
  sub_10002B660((uint64_t)v214, v247, &qword_1006A2018);
  if (v249)
  {
    id v215 = [v213 tokenContentIdentifier];
    if (v215)
    {
      v216 = v215;
      id v217 = (id)NotesAppURLForNoteIdentifierOrTokenContentIdentifier();

      if (v217)
      {
        os_signpost_type_t v218 = v242;
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v219 = v268;
        uint64_t v220 = *(void (**)(char *, char *, uint64_t))(v268 + 32);
        uint64_t v221 = (long long *)v243;
        uint64_t v222 = v274;
        v220(v243, v218, v62);
        ((void (*)(long long *, void, uint64_t, uint64_t))v222)(v221, 0, 1, v62);
        if ((*(unsigned int (**)(long long *, uint64_t, uint64_t))(v219 + 48))(v221, 1, v62) != 1)
        {
          v223 = v241;
          v220(v241, (char *)v221, v62);
          uint64_t v224 = v266;
          sub_10002B754(v266, &qword_10069B310);
          v220((char *)v224, v223, v62);
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v222)(v224, 0, 1, v62);
          return;
        }
      }
      else
      {

        uint64_t v221 = (long long *)v243;
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v179)(v243, 1, 1, v62);
      }
      os_signpost_type_t v225 = &qword_10069B310;
      v226 = v221;
      goto LABEL_161;
    }
  }
}

uint64_t sub_1002C4538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  type metadata accessor for Key(0);
  sub_1002D34BC((unint64_t *)&qword_10069BE28, type metadata accessor for Key);
  uint64_t v9 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  v8(v9, a3, a4, a5);

  return swift_bridgeObjectRelease();
}

id sub_1002C4608(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4, uint64_t a5, char *a6, double a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v35 = a5;
  uint64_t v36 = a6;
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  uint64_t v32 = a1;
  uint64_t v13 = _s16AttributedStringV9AttributeVMa(0);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13 - 8);
  uint64_t v16 = (NSUInteger *)((char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v17 = objc_allocWithZone((Class)NSMutableAttributedString);
  swift_bridgeObjectRetain();
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v19 = [v17 initWithString:v18];

  uint64_t v20 = *(void *)(a10 + 16);
  if (v20)
  {
    uint64_t v21 = a10 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    int v31 = a4 & 0x101;
    uint64_t v22 = *(void *)(v14 + 72);
    uint64_t v29 = a10;
    uint64_t v30 = v22;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1002D3504(v21, (uint64_t)v16, _s16AttributedStringV9AttributeVMa);
      sub_1002C48C4(v32, v33, v34, v31, v35, v36, a7);
      if (v10) {
        break;
      }
      type metadata accessor for Key(0);
      sub_1002D34BC((unint64_t *)&qword_10069BE28, type metadata accessor for Key);
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      NSUInteger v24 = *v16;
      NSUInteger v25 = v16[1];
      v38.Swift::Int location = (NSUInteger)[v19 ic_range];
      v38.Swift::Int length = v26;
      v37.Swift::Int location = v24;
      v37.Swift::Int length = v25;
      NSRange v27 = NSIntersectionRange(v37, v38);
      [v19 addAttributes:isa range:v27.location, v27.length];

      sub_1002CC158((uint64_t)v16, _s16AttributedStringV9AttributeVMa);
      v21 += v30;
      if (!--v20) {
        goto LABEL_7;
      }
    }

    sub_1002CC158((uint64_t)v16, _s16AttributedStringV9AttributeVMa);
LABEL_7:
    swift_bridgeObjectRelease();
  }
  return v19;
}

unint64_t sub_1002C48C4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, char *a6, double a7)
{
  uint64_t v114 = a6;
  int v110 = a4;
  uint64_t v112 = a3;
  uint64_t v111 = a2;
  uint64_t v117 = a1;
  uint64_t v10 = sub_10002F214(&qword_1006A2018);
  __chkstk_darwin(v10 - 8);
  uint64_t v119 = (uint64_t)&v108 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = _s16AttributedStringV16InlineAttachmentVMa(0);
  uint64_t v124 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v120 = (uint64_t)&v108 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10002F214(&qword_10069B310);
  __chkstk_darwin(v13 - 8);
  long long v116 = (char *)&v108 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = type metadata accessor for URL();
  uint64_t v123 = *(void *)(v125 - 8);
  __chkstk_darwin(v125);
  char v109 = (char *)&v108 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10002F214(&qword_1006A2020);
  __chkstk_darwin(v16 - 8);
  NSString v18 = (char *)&v108 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v108 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = type metadata accessor for Date();
  uint64_t v122 = *(void *)(v115 - 8);
  __chkstk_darwin(v115);
  uint64_t v108 = (char *)&v108 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10002F214((uint64_t *)&unk_10069C990);
  __chkstk_darwin(v23 - 8);
  NSUInteger v25 = (char *)&v108 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for UUID();
  uint64_t v27 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v108 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v126 = (int *)_s16AttributedStringV9AttributeVMa(0);
  uint64_t v30 = v7;
  int v31 = (uint64_t *)(v7 + v126[7]);
  uint64_t v32 = v31[1];
  uint64_t v113 = a5;
  if (v32 == 1)
  {
    unint64_t v33 = sub_100168480((uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    uint64_t v34 = v31[8];
    int v35 = *((_DWORD *)v31 + 10);
    uint64_t v37 = v31[3];
    uint64_t v36 = v31[4];
    uint64_t v38 = v31[2];
    uint64_t v131 = *v31;
    uint64_t v132 = v32;
    uint64_t v133 = v38;
    __int16 v134 = v37 & 0xFF01;
    char v135 = BYTE2(v37);
    char v136 = BYTE3(v37);
    char v137 = BYTE4(v37);
    uint64_t v138 = v36;
    char v139 = v35 & 1;
    long long v140 = *((_OWORD *)v31 + 3);
    uint64_t v141 = v34;
    unint64_t v33 = (unint64_t)sub_1002C615C();
  }
  unint64_t v39 = v33;
  sub_10002F034(v7 + v126[5], (uint64_t)v25, (uint64_t *)&unk_10069C990);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) == 1)
  {
    sub_10002B754((uint64_t)v25, (uint64_t *)&unk_10069C990);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v29, v25, v26);
    uint64_t v40 = (void *)ICTTAttributeNameReplicaID;
    uint64_t v130 = (void *)v26;
    uint64_t v41 = sub_10015E0F0((uint64_t *)&v129);
    (*(void (**)(uint64_t *, char *, uint64_t))(v27 + 16))(v41, v29, v26);
    sub_100032E84(&v129, v128);
    id v42 = v40;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v127 = v39;
    sub_1002BC8DC(v128, v42, isUniquelyReferenced_nonNull_native);
    unint64_t v39 = v127;

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
  }
  uint64_t v44 = v30;
  uint64_t v45 = v125;
  uint64_t v46 = v126;
  uint64_t v47 = v123;
  uint64_t v48 = v115;
  sub_10002F034(v44 + v126[6], (uint64_t)v21, (uint64_t *)&unk_1006A3E20);
  uint64_t v49 = v122;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v122 + 48))(v21, 1, v48) == 1)
  {
    sub_10002B754((uint64_t)v21, (uint64_t *)&unk_1006A3E20);
  }
  else
  {
    uint64_t v50 = v108;
    (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v108, v21, v48);
    id v51 = ICTTAttributeNameTimestamp;
    Date.timeIntervalSince1970.getter();
    uint64_t v130 = &type metadata for Double;
    *(double *)&long long v129 = v52 + a7;
    sub_100032E84(&v129, v128);
    char v53 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v127 = v39;
    sub_1002BC8DC(v128, v51, v53);
    unint64_t v39 = v127;

    uint64_t v46 = v126;
    swift_bridgeObjectRelease();
    uint64_t v54 = v50;
    uint64_t v47 = v123;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v54, v48);
  }
  uint64_t v55 = v124;
  sub_10002F034(v44 + v46[8], (uint64_t)v18, &qword_1006A2020);
  uint64_t v56 = _s16AttributedStringV14ParagraphStyleVMa(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v56 - 8) + 48))(v18, 1, v56) == 1)
  {
    sub_10002B754((uint64_t)v18, &qword_1006A2020);
    uint64_t v57 = -1;
    uint64_t v58 = (uint64_t)v116;
    switch(*(unsigned char *)(v44 + v46[11]))
    {
      case 1:
        uint64_t v57 = 0;
        goto LABEL_18;
      case 2:
        uint64_t v57 = 2;
        goto LABEL_18;
      case 3:
        uint64_t v57 = 1;
        goto LABEL_18;
      case 4:
        uint64_t v57 = 3;
        goto LABEL_18;
      case 5:
        break;
      default:
LABEL_18:
        uint64_t v61 = (void *)ICTTNSWritingDirectionAttributeName;
        uint64_t v130 = &type metadata for Int;
        *(void *)&long long v129 = v57;
        sub_100032E84(&v129, v128);
        id v62 = v61;
        char v63 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v127 = v39;
        sub_1002BC8DC(v128, v62, v63);
        unint64_t v39 = v127;

        uint64_t v45 = v125;
        swift_bridgeObjectRelease();
        break;
    }
  }
  else
  {
    id v59 = sub_1002C8218();
    sub_1002CC158((uint64_t)v18, _s16AttributedStringV14ParagraphStyleVMa);
    uint64_t v60 = -1;
    uint64_t v58 = (uint64_t)v116;
    switch(*(unsigned char *)(v44 + v46[11]))
    {
      case 1:
        uint64_t v60 = 0;
        break;
      case 2:
        uint64_t v60 = 2;
        break;
      case 3:
        uint64_t v60 = 1;
        break;
      case 4:
        uint64_t v60 = 3;
        break;
      case 5:
        uint64_t v60 = [v59 writingDirection:-1];
        break;
      default:
        break;
    }
    [v59 setWritingDirection:v60];
    id v64 = (void *)ICTTAttributeNameParagraphStyle;
    uint64_t v130 = (void *)sub_100031418(0, (unint64_t *)&qword_10069DE50);
    *(void *)&long long v129 = v59;
    sub_100032E84(&v129, v128);
    id v65 = v64;
    id v66 = v59;
    char v67 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v127 = v39;
    sub_1002BC8DC(v128, v65, v67);
    unint64_t v39 = v127;

    swift_bridgeObjectRelease();
    uint64_t v45 = v125;
    uint64_t v46 = v126;
  }
  sub_10002F034(v44 + v46[10], v58, &qword_10069B310);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v58, 1, v45) == 1)
  {
    sub_10002B754(v58, &qword_10069B310);
  }
  else
  {
    id v68 = v109;
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 32))(v109, v58, v45);
    uint64_t v69 = v45;
    id v70 = ICTTNSLinkAttributeName;
    URL._bridgeToObjectiveC()(v71);
    uint64_t v73 = v72;
    uint64_t v130 = (void *)sub_100031418(0, &qword_1006A2038);
    *(void *)&long long v129 = v73;
    sub_100032E84(&v129, v128);
    char v74 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v127 = v39;
    sub_1002BC8DC(v128, v70, v74);
    unint64_t v39 = v127;

    swift_bridgeObjectRelease();
    uint64_t v75 = v68;
    uint64_t v55 = v124;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v75, v69);
  }
  uint64_t v76 = v117;
  uint64_t v77 = *(char *)(v44 + v46[9]);
  if (v77 != 5)
  {
    unint64_t v78 = (void *)ICTTAttributeNameEmphasis;
    uint64_t v79 = qword_100531968[v77];
    uint64_t v130 = &type metadata for Int;
    *(void *)&long long v129 = v79;
    sub_100032E84(&v129, v128);
    id v80 = v78;
    char v81 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v127 = v39;
    sub_1002BC8DC(v128, v80, v81);
    unint64_t v39 = v127;

    swift_bridgeObjectRelease();
  }
  __int16 v82 = (uint64_t *)(v44 + v46[12]);
  uint64_t v83 = v82[1];
  if (v83 && *(void *)(v76 + 16))
  {
    uint64_t v84 = *v82;
    swift_bridgeObjectRetain();
    unint64_t v85 = sub_1002B63D4(v84, v83);
    if (v86)
    {
      id v87 = *(id *)(*(void *)(v76 + 56) + 8 * v85);
      swift_bridgeObjectRelease();
      uint64_t v88 = (void *)ICTTNSAttachmentAttributeName;
      uint64_t v130 = (void *)sub_100031418(0, (unint64_t *)&qword_1006A04D0);
      *(void *)&long long v129 = v87;
      sub_100032E84(&v129, v128);
      id v89 = v87;
      id v90 = v88;
      char v91 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v127 = v39;
      sub_1002BC8DC(v128, v90, v91);
      unint64_t v39 = v127;

      uint64_t v46 = v126;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v92 = v119;
  uint64_t v93 = v118;
  sub_10002F034(v44 + v46[13], v119, &qword_1006A2018);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v92, 1, v93) == 1)
  {
    sub_10002B754(v92, &qword_1006A2018);
  }
  else
  {
    sub_1002CC0F0(v92, v120, _s16AttributedStringV16InlineAttachmentVMa);
    uint64_t v94 = v121;
    unsigned int v95 = sub_1002C943C(a7, v111, v112, v110 & 0x101, v113, v114);
    if (v94)
    {
      sub_1002CC158(v120, _s16AttributedStringV16InlineAttachmentVMa);
      swift_bridgeObjectRelease();
    }
    else
    {
      int v96 = v95;
      id v97 = [v95 identifier];
      if (v97)
      {
        __int16 v98 = v97;
        static String._unconditionallyBridgeFromObjectiveC(_:)();
      }
      id v99 = [v96 typeUTI];
      if (v99)
      {
        uint64_t v100 = v99;
        static String._unconditionallyBridgeFromObjectiveC(_:)();
      }
      uint64_t v101 = sub_100031418(0, (unint64_t *)&qword_1006A04D0);
      uint64_t v102 = (void *)ICTTAttachment.init(identifier:universalTypeIdentifier:)();
      uint64_t v103 = (void *)ICTTNSAttachmentAttributeName;
      uint64_t v130 = (void *)v101;
      *(void *)&long long v129 = v102;
      sub_100032E84(&v129, v128);
      id v104 = v103;
      id v105 = v102;
      char v106 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v127 = v39;
      sub_1002BC8DC(v128, v104, v106);
      unint64_t v39 = v127;

      swift_bridgeObjectRelease();
      sub_1002CC158(v120, _s16AttributedStringV16InlineAttachmentVMa);
    }
  }
  return v39;
}

uint64_t sub_1002C56D4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v11[0] = a4;
  uint64_t v6 = sub_10002F214(&qword_1006A2478);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10015E154(a1, a1[3]);
  sub_1002D434C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v13 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v4)
  {
    v11[1] = v11[0];
    char v12 = 1;
    sub_10002F214(&qword_1006A2460);
    sub_1002D43A0(&qword_1006A2480, &qword_1006A2488);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1002C58A4()
{
  if (*v0) {
    return 0x7475626972747461;
  }
  else {
    return 1954047348;
  }
}

uint64_t sub_1002C58DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1002D2D24(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1002C5904(uint64_t a1)
{
  unint64_t v2 = sub_1002D434C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002C5940(uint64_t a1)
{
  unint64_t v2 = sub_1002D434C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002C597C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1002C6108((uint64_t (*)(void))sub_1002D2E14, a1);
}

uint64_t sub_1002C59A8(void *a1)
{
  return sub_1002C56D4(a1, *v1, v1[1], v1[2]);
}

CGColorRef sub_1002C59C8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6 = (__CFString *)String._bridgeToObjectiveC()();
  uint64_t v7 = CGColorSpaceCreateWithName(v6);

  if (!v7)
  {
    if (qword_10069AE50 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_10003293C(v15, (uint64_t)qword_1006A2000);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v16, v17))
    {
      NSString v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = (void *)swift_slowAlloc();
      *(_DWORD *)NSString v18 = 136315138;
      swift_bridgeObjectRetain();
      sub_10045DA1C(a1, a2, (uint64_t *)&v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Cannot create color space with name — returning nil {name: %s}", v18, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    return 0;
  }
  int64_t v8 = *(void *)(a3 + 16);
  uint64_t v9 = _swiftEmptyArrayStorage;
  if (v8)
  {
    uint64_t v27 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_100169C2C(0, v8, 0);
    uint64_t v10 = 0;
    uint64_t v9 = _swiftEmptyArrayStorage;
    unint64_t v11 = _swiftEmptyArrayStorage[2];
    do
    {
      uint64_t v12 = *(void *)(a3 + 8 * v10 + 32);
      uint64_t v27 = v9;
      unint64_t v13 = v9[3];
      if (v11 >= v13 >> 1)
      {
        sub_100169C2C(v13 > 1, v11 + 1, 1);
        uint64_t v9 = v27;
      }
      ++v10;
      v9[2] = v11 + 1;
      v9[v11++ + 4] = v12;
    }
    while (v8 != v10);
    swift_bridgeObjectRelease();
  }
  CGColorRef v14 = CGColorCreate(v7, (const CGFloat *)v9 + 4);
  swift_bridgeObjectRelease();
  if (!v14)
  {
    if (qword_10069AE50 != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    sub_10003293C(v19, (uint64_t)qword_1006A2000);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v23 = Array.description.getter();
      unint64_t v25 = v24;
      swift_bridgeObjectRelease();
      sub_10045DA1C(v23, v25, (uint64_t *)&v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Cannot create color with components — returning nil {components: %s}", v22, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    return 0;
  }

  return v14;
}

uint64_t sub_1002C5E44(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v11[0] = a4;
  uint64_t v6 = sub_10002F214(&qword_1006A2318);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10015E154(a1, a1[3]);
  sub_1002D33B0();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v13 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v4)
  {
    v11[1] = v11[0];
    char v12 = 1;
    sub_10002F214(&qword_1006A2308);
    sub_1002D3404(&qword_1006A2320);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1002C6000()
{
  if (*v0) {
    return 0x6E656E6F706D6F63;
  }
  else {
    return 0x6563617073;
  }
}

uint64_t sub_1002C603C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1002D3070(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1002C6064(uint64_t a1)
{
  unint64_t v2 = sub_1002D33B0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002C60A0(uint64_t a1)
{
  unint64_t v2 = sub_1002D33B0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002C60DC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1002C6108((uint64_t (*)(void))sub_1002D3168, a1);
}

uint64_t sub_1002C6108@<X0>(uint64_t (*a1)(void)@<X3>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1002C613C(void *a1)
{
  return sub_1002C5E44(a1, *v1, v1[1], v1[2]);
}

void *sub_1002C615C()
{
  uint64_t v1 = v0;
  uint64_t v43 = &_swiftEmptyDictionarySingleton;
  sub_10002F1B0(v0 + 25, (uint64_t)&v50, &qword_1006A02F0);
  sub_10002F1B0((uint64_t)&v50, (uint64_t)&v51, &qword_1006A02F0);
  int v2 = v51 & 1;
  sub_10002F1B0(v0 + 26, (uint64_t)&v49, &qword_1006A02F0);
  sub_10002F1B0((uint64_t)&v49, (uint64_t)&v52, &qword_1006A02F0);
  uint64_t v3 = v2 & 0xFFFFFFFD | (2 * (v52 & 1));
  if (*(void *)(v0 + 8))
  {
    sub_10002F1B0(v0 + 16, (uint64_t)v48, &qword_1006A2040);
    sub_10002F1B0((uint64_t)v48, (uint64_t)&v53, &qword_1006A2040);
    if (v54)
    {
      id v4 = objc_allocWithZone((Class)ICTTFont);
      swift_bridgeObjectRetain();
      NSString v5 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v6 = [v4 initWithName:v5 size:v3 hints:0.0];
    }
    else
    {
      double v10 = v53;
      id v11 = objc_allocWithZone((Class)ICTTFont);
      swift_bridgeObjectRetain();
      NSString v5 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v6 = [v11 initWithName:v5 size:v3 hints:v10];
    }
    char v12 = v6;

    char v13 = (void *)ICTTAttributeNameFont;
    if (!v12) {
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  sub_10002F1B0(v0 + 16, (uint64_t)v48, &qword_1006A2040);
  sub_10002F1B0((uint64_t)v48, (uint64_t)&v53, &qword_1006A2040);
  if (v54)
  {
    if (!v3) {
      goto LABEL_15;
    }
    uint64_t v7 = (void *)ICTTAttributeNameFontHints;
    id v42 = &type metadata for UInt32;
    LODWORD(v41) = v3;
    sub_100032E84(&v41, v40);
    id v8 = v7;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    id v59 = &_swiftEmptyDictionarySingleton;
    sub_1002BC8DC(v40, v8, isUniquelyReferenced_nonNull_native);
    uint64_t v43 = v59;

    goto LABEL_13;
  }
  id v14 = [objc_allocWithZone((Class)ICTTFont) initWithName:0 size:v3 hints:v53];
  char v13 = (void *)ICTTAttributeNameFont;
  if (v14)
  {
    char v12 = v14;
LABEL_12:
    id v42 = (void *)sub_100031418(0, &qword_1006A2028);
    *(void *)&long long v41 = v12;
    sub_100032E84(&v41, v40);
    id v15 = v13;
    id v16 = v12;
    char v17 = swift_isUniquelyReferenced_nonNull_native();
    id v59 = &_swiftEmptyDictionarySingleton;
    sub_1002BC8DC(v40, v15, v17);
    uint64_t v43 = v59;

LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
LABEL_14:
  id v18 = v13;
  sub_100469C00((uint64_t)v18, v40);

  sub_10002B754((uint64_t)v40, &qword_10069B4D0);
LABEL_15:
  sub_10002F1B0(v0 + 27, (uint64_t)&v47, &qword_1006A02F0);
  sub_10002F1B0((uint64_t)&v47, (uint64_t)&v55, &qword_1006A02F0);
  if (v55)
  {
    uint64_t v19 = (void *)ICTTAttributeNameUnderline;
    id v42 = &type metadata for Bool;
    LOBYTE(v41) = 1;
    sub_100032E84(&v41, v40);
    id v20 = v19;
    os_log_type_t v21 = v43;
    char v22 = swift_isUniquelyReferenced_nonNull_native();
    id v59 = v21;
    sub_1002BC8DC(v40, v20, v22);
    uint64_t v43 = v59;

    swift_bridgeObjectRelease();
  }
  sub_10002F1B0(v1 + 28, (uint64_t)&v46, &qword_1006A02F0);
  sub_10002F1B0((uint64_t)&v46, (uint64_t)&v56, &qword_1006A02F0);
  if (v56)
  {
    uint64_t v23 = (void *)ICTTAttributeNameStrikethrough;
    id v42 = &type metadata for Bool;
    LOBYTE(v41) = 1;
    sub_100032E84(&v41, v40);
    id v24 = v23;
    unint64_t v25 = v43;
    char v26 = swift_isUniquelyReferenced_nonNull_native();
    id v59 = v25;
    sub_1002BC8DC(v40, v24, v26);
    uint64_t v43 = v59;

    swift_bridgeObjectRelease();
  }
  sub_10002F1B0(v1 + 32, (uint64_t)v45, &qword_1006A2AB0);
  sub_10002F1B0((uint64_t)v45, (uint64_t)&v57, &qword_1006A2AB0);
  if ((v58 & 1) == 0)
  {
    uint64_t v27 = (void *)ICTTAttributeNameSuperscript;
    id v42 = &type metadata for Int;
    *(void *)&long long v41 = v57;
    sub_100032E84(&v41, v40);
    id v28 = v27;
    uint64_t v29 = v43;
    char v30 = swift_isUniquelyReferenced_nonNull_native();
    id v59 = v29;
    sub_1002BC8DC(v40, v28, v30);
    uint64_t v43 = v59;

    swift_bridgeObjectRelease();
  }
  sub_10002F1B0(v1 + 48, (uint64_t)v44, &qword_1006A2048);
  sub_10002F1B0((uint64_t)v44, (uint64_t)&v59, &qword_1006A2048);
  if (v60)
  {
    CGColorRef v31 = sub_1002C59C8((uint64_t)v59, v60, v61);
    if (v31)
    {
      CGColorRef v32 = v31;
      unint64_t v33 = (void *)ICTTAttributeNameForegroundColor;
      type metadata accessor for CGColor(0);
      id v42 = v34;
      *(void *)&long long v41 = v32;
      sub_100032E84(&v41, v40);
      id v35 = v33;
      uint64_t v36 = v32;
      uint64_t v37 = v43;
      char v38 = swift_isUniquelyReferenced_nonNull_native();
      sub_1002BC8DC(v40, v35, v38);
      uint64_t v43 = v37;

      swift_bridgeObjectRelease();
    }
  }
  return v43;
}

uint64_t sub_1002C66F8(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10002F214(&qword_1006A2440);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10015E154(a1, a1[3]);
  sub_1002D420C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v11[0] = 0;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  if (!v2)
  {
    v11[0] = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    v11[0] = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    v11[0] = 3;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    v11[0] = 4;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    v11[0] = 5;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    v11[0] = 6;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    sub_10002F1B0(v3 + 48, (uint64_t)v12, &qword_1006A2048);
    sub_10002F1B0((uint64_t)v12, (uint64_t)v11, &qword_1006A2048);
    v10[15] = 7;
    sub_1002D42F8();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1002C6988()
{
  uint64_t result = 1701667182;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7A6953746E696F70;
      break;
    case 2:
      uint64_t result = 0x646C6F427369;
      break;
    case 3:
      uint64_t result = 0x63696C6174497369;
      break;
    case 4:
      uint64_t result = 0x6C7265646E557369;
      break;
    case 5:
      uint64_t result = 0x656B697274537369;
      break;
    case 6:
      uint64_t result = 0x7263737265707573;
      break;
    case 7:
      uint64_t result = 0x726F6C6F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1002C6A98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1002D3AB8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1002C6AC0(uint64_t a1)
{
  unint64_t v2 = sub_1002D420C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002C6AFC(uint64_t a1)
{
  unint64_t v2 = sub_1002D420C();

  return CodingKey.debugDescription.getter(a1, v2);
}

__n128 sub_1002C6B38@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1002D3E44(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(void *)(a2 + 64) = v7;
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_1002C6B8C(void *a1)
{
  return sub_1002C66F8(a1);
}

uint64_t sub_1002C6BD0(unsigned __int8 *a1, char *a2)
{
  return sub_100276674(*a1, *a2);
}

Swift::Int sub_1002C6BDC()
{
  return Hasher._finalize()();
}

uint64_t sub_1002C6CB0()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1002C6D6C()
{
  return Hasher._finalize()();
}

unint64_t sub_1002C6E3C@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_10062C458;
  unint64_t result = sub_1002D5668(*a1, v3);
  *a2 = result;
  return result;
}

void sub_1002C6E74(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE600000000000000;
  uint64_t v3 = 0x454C50525550;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1263421776;
      goto LABEL_3;
    case 2:
      *a1 = 0x45474E41524FLL;
      a1[1] = 0xE600000000000000;
      break;
    case 3:
      *a1 = 1414416717;
      a1[1] = 0xE400000000000000;
      break;
    case 4:
      *a1 = 1163217986;
      a1[1] = 0xE400000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1002C6F0C()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1002C6F6C()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_1002C6FBC(char a1)
{
  uint64_t result = 0x454C544954;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x474E4944414548;
      break;
    case 2:
      uint64_t result = 0x4944414548425553;
      break;
    case 3:
      uint64_t result = 1497648962;
      break;
    case 4:
      uint64_t result = 0x4E4F4954504143;
      break;
    case 5:
      uint64_t result = 0x434150534F4E4F4DLL;
      break;
    case 6:
      uint64_t v3 = 0x54454C4C5542;
      goto LABEL_9;
    case 7:
      uint64_t v3 = 0x444548534144;
LABEL_9:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x4C5F000000000000;
      break;
    case 8:
      uint64_t result = 0x44455245424D554ELL;
      break;
    case 9:
      uint64_t result = 0x53494C4B43454843;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1002C7108(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_1002C6FBC(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1002C6FBC(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_1002C7194()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  sub_1002C6FBC(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_1002C71F8()
{
  sub_1002C6FBC(*v0);
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1002C724C()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  sub_1002C6FBC(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

unint64_t sub_1002C72AC@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1002D5170(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1002C72DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1002C6FBC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1002C7308()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1002C7368()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_1002C73B8(unsigned __int8 *a1, char *a2)
{
  return sub_1002767F8(*a1, *a2);
}

Swift::Int sub_1002C73C4()
{
  return Hasher._finalize()();
}

uint64_t sub_1002C74B0()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1002C7584()
{
  return Hasher._finalize()();
}

unint64_t sub_1002C766C@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_10062C600;
  unint64_t result = sub_1002D5668(*a1, v3);
  *a2 = result;
  return result;
}

void sub_1002C76A4(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1413891404;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x5245544E4543;
      goto LABEL_3;
    case 2:
      *a1 = 0x5448474952;
      a1[1] = 0xE500000000000000;
      break;
    case 3:
      *a1 = 0x454946495453554ALL;
      a1[1] = 0xE900000000000044;
      break;
    case 4:
      *a1 = 0x4C41525554414ELL;
      a1[1] = 0xE700000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1002C7754()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1002C77B4()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_1002C7804(void *a1)
{
  uint64_t v3 = sub_10002F214(&qword_1006A2340);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10015E154(a1, a1[3]);
  sub_1002D3468();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v8[15] = 0;
  type metadata accessor for UUID();
  sub_1002D34BC(&qword_1006A2348, (void (*)(uint64_t))&type metadata accessor for UUID);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v1)
  {
    _s16AttributedStringV13ChecklistItemVMa(0);
    v8[14] = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1002C79B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v23 = *(void *)(v4 - 8);
  uint64_t v24 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_10002F214(&qword_1006A2328);
  uint64_t v22 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  char v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = _s16AttributedStringV13ChecklistItemVMa(0);
  __chkstk_darwin(v9);
  id v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10015E154(a1, a1[3]);
  sub_1002D3468();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return sub_100018FE8((uint64_t)a1);
  }
  id v20 = v11;
  uint64_t v12 = v22;
  uint64_t v13 = v23;
  char v27 = 0;
  sub_1002D34BC(&qword_1006A2338, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v14 = v24;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v20, v6, v14);
  char v26 = 1;
  char v15 = KeyedDecodingContainer.decode(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v25);
  char v16 = v15 & 1;
  uint64_t v18 = (uint64_t)v20;
  uint64_t v17 = v21;
  v20[*(int *)(v9 + 20)] = v16;
  sub_1002D3504(v18, v17, _s16AttributedStringV13ChecklistItemVMa);
  sub_100018FE8((uint64_t)a1);
  return sub_1002CC158(v18, _s16AttributedStringV13ChecklistItemVMa);
}

uint64_t sub_1002C7D08()
{
  if (*v0) {
    return 0x656E6F447369;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_1002C7D44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1002D51BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1002C7D6C(uint64_t a1)
{
  unint64_t v2 = sub_1002D3468();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002C7DA8(uint64_t a1)
{
  unint64_t v2 = sub_1002D3468();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002C7DE4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002C79B8(a1, a2);
}

uint64_t sub_1002C7DFC(void *a1)
{
  return sub_1002C7804(a1);
}

uint64_t sub_1002C7E14@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10002F214((uint64_t *)&unk_10069C990);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10002F214(&qword_1006A2030);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)_s16AttributedStringV14ParagraphStyleVMa(0);
  uint64_t v11 = a2 + v10[8];
  uint64_t v12 = _s16AttributedStringV13ChecklistItemVMa(0);
  uint64_t v13 = *(void *)(v12 - 8);
  id v35 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
  uint64_t v36 = v11;
  v34[1] = v13 + 56;
  v35(v11, 1, 1, v12);
  uint64_t v14 = a2 + v10[9];
  *(void *)uint64_t v14 = 0;
  *(unsigned char *)(v14 + 8) = 1;
  uint64_t v15 = a2 + v10[10];
  uint64_t v16 = type metadata accessor for UUID();
  uint64_t v37 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v38 = v15;
  v37(v15, 1, 1, v16);
  char v17 = sub_1002CBD3C((int)[a1 style]);
  if (v17 == 10) {
    char v18 = 3;
  }
  else {
    char v18 = v17;
  }
  *(unsigned char *)a2 = v18;
  char v19 = sub_1002CBEE8((unint64_t)[a1 alignment]);
  if (v19 == 5) {
    char v20 = 4;
  }
  else {
    char v20 = v19;
  }
  *(unsigned char *)(a2 + 1) = v20;
  *(void *)(a2 + 8) = [a1 indent];
  if (sub_1002C6FBC(v18) == 0x44455245424D554ELL && v21 == 0xED00005453494C5FLL)
  {
    swift_bridgeObjectRelease();
LABEL_11:
    id v23 = [a1 startingItemNumber];
    char v24 = 0;
    goto LABEL_13;
  }
  char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v22) {
    goto LABEL_11;
  }
  id v23 = 0;
  char v24 = 1;
LABEL_13:
  *(void *)(a2 + 16) = v23;
  *(unsigned char *)(a2 + 24) = v24;
  id v25 = [a1 todo];
  if (v25)
  {
    id v26 = v25;
    id v27 = [v26 uuid];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    LOBYTE(v27) = [v26 done];
    v9[*(int *)(v12 + 20)] = (char)v27;
    v35((uint64_t)v9, 0, 1, v12);
  }
  else
  {
    v35((uint64_t)v9, 1, 1, v12);
  }
  id v28 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v37;
  sub_10002B660((uint64_t)v9, v36, &qword_1006A2030);
  *(void *)uint64_t v14 = [a1 blockQuoteLevel];
  *(unsigned char *)(v14 + 8) = 0;
  id v29 = [a1 uuid];
  if (v29)
  {
    char v30 = v29;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v31 = 0;
  }
  else
  {
    uint64_t v31 = 1;
  }
  uint64_t v32 = v38;

  v28(v6, v31, 1, v16);
  return sub_10002B660((uint64_t)v6, v32, (uint64_t *)&unk_10069C990);
}

id sub_1002C8218()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C990);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002F214(&qword_1006A2030);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [self paragraphStyleNamed:dword_100531990[*v1]];
  [v8 setAlignment:v1[1]];
  [v8 setIndent:*((void *)v1 + 1)];
  if (v1[24] == 1) {
    id v9 = [v8 startingItemNumber];
  }
  else {
    id v9 = (id)*((void *)v1 + 2);
  }
  [v8 setStartingItemNumber:v9];
  uint64_t v10 = (int *)_s16AttributedStringV14ParagraphStyleVMa(0);
  sub_10002F034((uint64_t)&v1[v10[8]], (uint64_t)v7, &qword_1006A2030);
  uint64_t v11 = _s16AttributedStringV13ChecklistItemVMa(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v7, 1, v11) == 1)
  {
    sub_10002B754((uint64_t)v7, &qword_1006A2030);
    id v12 = 0;
  }
  else
  {
    uint64_t v13 = v7[*(int *)(v11 + 20)];
    id v14 = objc_allocWithZone((Class)ICTTTodo);
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    id v12 = [v14 initWithIdentifier:isa done:v13];

    sub_1002CC158((uint64_t)v7, _s16AttributedStringV13ChecklistItemVMa);
  }
  [v8 setTodo:v12];

  uint64_t v16 = &v1[v10[9]];
  if (v16[8]) {
    uint64_t v17 = 0;
  }
  else {
    uint64_t v17 = *(void *)v16;
  }
  [v8 setBlockQuoteLevel:v17];
  sub_10002F034((uint64_t)&v1[v10[10]], (uint64_t)v4, (uint64_t *)&unk_10069C990);
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v19 = *(void *)(v18 - 8);
  Class v20 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v4, 1, v18) != 1)
  {
    Class v20 = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v4, v18);
  }
  [v8 setUuid:v20];

  return v8;
}

unint64_t sub_1002C8554(char a1)
{
  unint64_t result = 1701667182;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E656D6E67696C61;
      break;
    case 2:
      unint64_t result = 0x746E65646E69;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0x73696C6B63656863;
      break;
    case 5:
      unint64_t result = 0x6F75516B636F6C62;
      break;
    case 6:
      unint64_t result = 1684632949;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1002C8644(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10002F214(&qword_1006A2378);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10015E154(a1, a1[3]);
  sub_1002D356C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v10[15] = *v3;
  v10[14] = 0;
  sub_1002D3668();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    v10[13] = v3[1];
    v10[12] = 1;
    sub_1002D36BC();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v10[11] = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    v10[10] = 3;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    _s16AttributedStringV14ParagraphStyleVMa(0);
    v10[9] = 4;
    _s16AttributedStringV13ChecklistItemVMa(0);
    sub_1002D34BC(&qword_1006A2390, (void (*)(uint64_t))_s16AttributedStringV13ChecklistItemVMa);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    v10[8] = 5;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    v10[7] = 6;
    type metadata accessor for UUID();
    sub_1002D34BC(&qword_1006A2348, (void (*)(uint64_t))&type metadata accessor for UUID);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1002C8958@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v3 = sub_10002F214((uint64_t *)&unk_10069C990);
  __chkstk_darwin(v3 - 8);
  id v35 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002F214(&qword_1006A2030);
  __chkstk_darwin(v5 - 8);
  uint64_t v37 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_10002F214(&qword_1006A2350);
  uint64_t v36 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  id v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = _s16AttributedStringV14ParagraphStyleVMa(0);
  uint64_t v10 = (int *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)v12 + 2) = 0;
  unsigned char v12[24] = 1;
  uint64_t v13 = (uint64_t)&v12[v10[10]];
  uint64_t v14 = _s16AttributedStringV13ChecklistItemVMa(0);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v40 = v13;
  v15(v13, 1, 1, v14);
  uint64_t v16 = &v12[v10[11]];
  *(void *)uint64_t v16 = 0;
  unsigned char v16[8] = 1;
  uint64_t v17 = (uint64_t)&v12[v10[12]];
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v39 = v17;
  v19(v17, 1, 1, v18);
  uint64_t v20 = a1[3];
  long long v41 = a1;
  sub_10015E154(a1, v20);
  sub_1002D356C();
  uint64_t v21 = v42;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v21)
  {
    uint64_t v26 = v40;
    uint64_t v27 = v39;
    sub_100018FE8((uint64_t)v41);
    sub_10002B754(v26, &qword_1006A2030);
    return sub_10002B754(v27, (uint64_t *)&unk_10069C990);
  }
  else
  {
    id v42 = (uint64_t *)v16;
    uint64_t v23 = v36;
    uint64_t v22 = (uint64_t)v37;
    char v50 = 0;
    sub_1002D35C0();
    uint64_t v24 = v38;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    *id v12 = v51;
    char v48 = 1;
    sub_1002D3614();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v12[1] = v49;
    char v47 = 2;
    *((void *)v12 + 1) = KeyedDecodingContainer.decode(_:forKey:)();
    char v46 = 3;
    *((void *)v12 + 2) = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    unsigned char v12[24] = v25 & 1;
    char v45 = 4;
    sub_1002D34BC(&qword_1006A2370, (void (*)(uint64_t))_s16AttributedStringV13ChecklistItemVMa);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    sub_10002B660(v22, v40, &qword_1006A2030);
    char v44 = 5;
    uint64_t v28 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    id v29 = v42;
    uint64_t *v42 = v28;
    *((unsigned char *)v29 + 8) = v30 & 1;
    char v43 = 6;
    sub_1002D34BC(&qword_1006A2338, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v31 = (uint64_t)v35;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v24);
    uint64_t v32 = (uint64_t)v41;
    sub_10002B660(v31, v39, (uint64_t *)&unk_10069C990);
    sub_1002D3504((uint64_t)v12, v34, _s16AttributedStringV14ParagraphStyleVMa);
    sub_100018FE8(v32);
    return sub_1002CC158((uint64_t)v12, _s16AttributedStringV14ParagraphStyleVMa);
  }
}

unint64_t sub_1002C8EE4()
{
  return sub_1002C8554(*v0);
}

uint64_t sub_1002C8EEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1002D52B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1002C8F14(uint64_t a1)
{
  unint64_t v2 = sub_1002D356C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002C8F50(uint64_t a1)
{
  unint64_t v2 = sub_1002D356C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002C8F8C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002C8958(a1, a2);
}

uint64_t sub_1002C8FA4(void *a1)
{
  return sub_1002C8644(a1);
}

unint64_t sub_1002C8FBC(char a1)
{
  unint64_t result = 0x4C41525554414ELL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x5F4F545F5446454CLL;
      break;
    case 2:
    case 4:
      unint64_t result = 0xD000000000000016;
      break;
    case 3:
      unint64_t result = 0x4F545F5448474952;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1002C907C(unsigned __int8 *a1, char *a2)
{
  return sub_1002764A4(*a1, *a2);
}

Swift::Int sub_1002C9088()
{
  return sub_100254B10();
}

uint64_t sub_1002C9090()
{
  return sub_100254ED8();
}

Swift::Int sub_1002C9098()
{
  return sub_1002551BC();
}

uint64_t sub_1002C90A0()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1002C9100()
{
  return RawRepresentable<>.encode(to:)();
}

unint64_t sub_1002C9150@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_10062C698;
  unint64_t result = sub_1002D5668(*a1, v3);
  *a2 = result;
  return result;
}

unint64_t sub_1002C9188@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1002C8FBC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1002C91B4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (int *)_s16AttributedStringV16InlineAttachmentVMa(0);
  uint64_t v8 = (uint64_t)a2 + v7[6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
  uint64_t v37 = v8;
  v36(v8, 1, 1, v9);
  uint64_t v10 = (uint64_t *)((char *)a2 + v7[7]);
  uint64_t *v10 = 0;
  v10[1] = 0;
  uint64_t v11 = (uint64_t *)((char *)a2 + v7[8]);
  *uint64_t v11 = 0;
  v11[1] = 0;
  id v12 = [a1 typeUTI];
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v16 = v15;
  }
  else
  {
    uint64_t v14 = 0;
    uint64_t v16 = 0;
  }
  *a2 = v14;
  a2[1] = v16;
  id v17 = [a1 identifier];
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v21 = v20;
  }
  else
  {
    uint64_t v19 = 0;
    unint64_t v21 = 0xE000000000000000;
  }
  a2[2] = v19;
  a2[3] = v21;
  id v22 = [a1 creationDate];
  if (v22)
  {
    uint64_t v23 = v22;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v24 = 0;
  }
  else
  {
    uint64_t v24 = 1;
  }
  v36((uint64_t)v6, v24, 1, v9);
  sub_10002B660((uint64_t)v6, v37, (uint64_t *)&unk_1006A3E20);
  id v25 = [a1 tokenContentIdentifier];
  if (v25)
  {
    uint64_t v26 = v25;
    uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v29 = v28;
  }
  else
  {
    uint64_t v27 = 0;
    uint64_t v29 = 0;
  }
  swift_bridgeObjectRelease();
  uint64_t *v10 = v27;
  v10[1] = v29;
  id v30 = [a1 altText];
  if (v30)
  {
    uint64_t v31 = v30;
    uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v34 = v33;
  }
  else
  {

    uint64_t v32 = 0;
    uint64_t v34 = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v11 = v32;
  v11[1] = v34;
  return result;
}

void *sub_1002C943C(double a1, uint64_t a2, uint64_t a3, __int16 a4, uint64_t a5, char *a6)
{
  uint64_t v40 = a6;
  uint64_t v11 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v39 = *(void *)(v14 - 8);
  uint64_t v15 = __chkstk_darwin(v14);
  id v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v38 - v18;
  uint64_t ObjectType = swift_getObjectType();
  unint64_t v21 = v41;
  id v22 = (void *)(*(uint64_t (**)(void, void, void, uint64_t, char *, uint64_t, uint64_t, double))(a3 + 48))(v6[2], v6[3], a4 & 0x101, a5, v40, ObjectType, a3, a1);
  uint64_t v23 = v22;
  if (!v21)
  {
    uint64_t v40 = v17;
    long long v41 = v19;
    uint64_t v24 = v39;
    NSString v25 = (NSString)v6[1];
    id v26 = v22;
    if (v25) {
      NSString v25 = String._bridgeToObjectiveC()();
    }
    [v23 setTypeUTI:v25];

    uint64_t v27 = (int *)_s16AttributedStringV16InlineAttachmentVMa(0);
    sub_10002F034((uint64_t)v6 + v27[6], (uint64_t)v13, (uint64_t *)&unk_1006A3E20);
    uint64_t v28 = v14;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v13, 1, v14) == 1)
    {
      uint64_t v29 = v40;
      Date.init()();
      sub_10002B754((uint64_t)v13, (uint64_t *)&unk_1006A3E20);
    }
    else
    {
      uint64_t v29 = v40;
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v40, v13, v28);
    }
    id v30 = v41;
    static Date.+ infix(_:_:)();
    uint64_t v31 = *(void (**)(char *, uint64_t))(v24 + 8);
    v31(v29, v28);
    v32.super.Class isa = Date._bridgeToObjectiveC()().super.isa;
    uint64_t v33 = v28;
    Class isa = v32.super.isa;
    v31(v30, v33);
    [v23 setCreationDate:isa];

    if (*(void *)((char *)v6 + v27[7] + 8)) {
      NSString v35 = String._bridgeToObjectiveC()();
    }
    else {
      NSString v35 = 0;
    }
    [v23 setTokenContentIdentifier:v35];

    if (*(void *)((char *)v6 + v27[8] + 8)) {
      NSString v36 = String._bridgeToObjectiveC()();
    }
    else {
      NSString v36 = 0;
    }
    [v23 setAltText:v36];
  }
  return v23;
}

unint64_t sub_1002C9798(char a1)
{
  unint64_t result = 0xD000000000000018;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x696669746E656469;
      break;
    case 2:
      unint64_t result = 0x4164657461657263;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0x74786554746C61;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1002C985C(void *a1)
{
  uint64_t v3 = sub_10002F214(&qword_1006A23A8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10015E154(a1, a1[3]);
  sub_1002D3710();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v8[15] = 0;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  if (!v1)
  {
    v8[14] = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    _s16AttributedStringV16InlineAttachmentVMa(0);
    v8[13] = 2;
    type metadata accessor for Date();
    sub_1002D34BC(&qword_10069FAD0, (void (*)(uint64_t))&type metadata accessor for Date);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    v8[12] = 3;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    v8[11] = 4;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1002C9AA0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v3 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_10002F214(&qword_1006A2398);
  uint64_t v35 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = _s16AttributedStringV16InlineAttachmentVMa(0);
  uint64_t v9 = (int *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (uint64_t *)((char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v11 = 0;
  v11[1] = 0;
  uint64_t v12 = (char *)v11 + v9[8];
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
  uint64_t v40 = (uint64_t)v12;
  v14(v12, 1, 1, v13);
  uint64_t v15 = (uint64_t *)((char *)v11 + v9[9]);
  uint64_t *v15 = 0;
  v15[1] = 0;
  uint64_t v16 = v15;
  id v17 = (uint64_t *)((char *)v11 + v9[10]);
  uint64_t *v17 = 0;
  v17[1] = 0;
  uint64_t v38 = v17;
  uint64_t v39 = a1;
  sub_10015E154(a1, a1[3]);
  sub_1002D3710();
  NSString v36 = v7;
  uint64_t v18 = v41;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v18)
  {
    uint64_t v20 = v40;
    sub_100018FE8((uint64_t)v39);
    swift_bridgeObjectRelease();
    sub_10002B754(v20, (uint64_t *)&unk_1006A3E20);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = v35;
    char v46 = 0;
    *uint64_t v11 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    v11[1] = v21;
    char v45 = 1;
    uint64_t v22 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v23 = v40;
    void v11[2] = v22;
    v11[3] = v24;
    char v44 = 2;
    sub_1002D34BC(&qword_10069FA08, (void (*)(uint64_t))&type metadata accessor for Date);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    sub_10002B660((uint64_t)v5, v23, (uint64_t *)&unk_1006A3E20);
    char v43 = 3;
    uint64_t v25 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v27 = v26;
    swift_bridgeObjectRelease();
    *uint64_t v16 = v25;
    v16[1] = v27;
    char v42 = 4;
    uint64_t v28 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v29 = v38;
    uint64_t v30 = v28;
    uint64_t v32 = v31;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v36, v37);
    swift_bridgeObjectRelease();
    *uint64_t v29 = v30;
    v29[1] = v32;
    sub_1002D3504((uint64_t)v11, v34, _s16AttributedStringV16InlineAttachmentVMa);
    sub_100018FE8((uint64_t)v39);
    return sub_1002CC158((uint64_t)v11, _s16AttributedStringV16InlineAttachmentVMa);
  }
}

unint64_t sub_1002C9F00()
{
  return sub_1002C9798(*v0);
}

uint64_t sub_1002C9F08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1002D56B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1002C9F30(uint64_t a1)
{
  unint64_t v2 = sub_1002D3710();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002C9F6C(uint64_t a1)
{
  unint64_t v2 = sub_1002D3710();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002C9FA8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002C9AA0(a1, a2);
}

uint64_t sub_1002C9FC0(void *a1)
{
  return sub_1002C985C(a1);
}

uint64_t sub_1002C9FD8(void *a1)
{
  uint64_t v3 = sub_10002F214(&qword_1006A2588);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10015E154(a1, a1[3]);
  sub_1002D5F88();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v10 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    char v9 = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1002CA140()
{
  if (*v0) {
    return 0x6874676E656CLL;
  }
  else {
    return 0x7441737472617473;
  }
}

uint64_t sub_1002CA178@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1002D58E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1002CA1A0(uint64_t a1)
{
  unint64_t v2 = sub_1002D5F88();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002CA1DC(uint64_t a1)
{
  unint64_t v2 = sub_1002D5F88();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002CA218@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1002D59CC(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1002CA244(void *a1)
{
  return sub_1002C9FD8(a1);
}

unint64_t sub_1002CA260(char a1)
{
  unint64_t result = 0x65676E6172;
  switch(a1)
  {
    case 1:
    case 7:
    case 9:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x6D617473656D6974;
      break;
    case 3:
      unint64_t result = 1953394534;
      break;
    case 4:
      unint64_t result = 0x7061726761726170;
      break;
    case 5:
      unint64_t result = 0x7369736168706D65;
      break;
    case 6:
      unint64_t result = 1802398060;
      break;
    case 8:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1002CA398(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10002F214(&qword_1006A23F0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10015E154(a1, a1[3]);
  sub_1002D3764();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v15[0] = *v3;
  char v17 = 0;
  sub_1002D3968();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    char v9 = (int *)_s16AttributedStringV9AttributeVMa(0);
    LOBYTE(v15[0]) = 1;
    type metadata accessor for UUID();
    sub_1002D34BC(&qword_1006A2348, (void (*)(uint64_t))&type metadata accessor for UUID);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v15[0]) = 2;
    type metadata accessor for Date();
    sub_1002D34BC(&qword_10069FAD0, (void (*)(uint64_t))&type metadata accessor for Date);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    char v10 = (char *)v3 + v9[7];
    uint64_t v11 = *((void *)v10 + 8);
    long long v12 = *((_OWORD *)v10 + 1);
    v15[0] = *(_OWORD *)v10;
    v15[1] = v12;
    long long v13 = *((_OWORD *)v10 + 3);
    void v15[2] = *((_OWORD *)v10 + 2);
    v15[3] = v13;
    uint64_t v16 = v11;
    char v17 = 3;
    sub_1002D39BC();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v15[0]) = 4;
    _s16AttributedStringV14ParagraphStyleVMa(0);
    sub_1002D34BC(&qword_1006A2408, (void (*)(uint64_t))_s16AttributedStringV14ParagraphStyleVMa);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v15[0]) = *((unsigned char *)v3 + v9[9]);
    char v17 = 5;
    sub_1002D3A10();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v15[0]) = 6;
    type metadata accessor for URL();
    sub_1002D34BC(&qword_10069D888, (void (*)(uint64_t))&type metadata accessor for URL);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v15[0]) = *((unsigned char *)v3 + v9[11]);
    char v17 = 7;
    sub_1002D3A64();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v15[0]) = 8;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v15[0]) = 9;
    _s16AttributedStringV16InlineAttachmentVMa(0);
    sub_1002D34BC(&qword_1006A2420, (void (*)(uint64_t))_s16AttributedStringV16InlineAttachmentVMa);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1002CA85C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v78 = a1;
  uint64_t v59 = a2;
  uint64_t v2 = sub_10002F214(&qword_1006A2018);
  __chkstk_darwin(v2 - 8);
  uint64_t v60 = (uint64_t)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214(&qword_10069B310);
  __chkstk_darwin(v4 - 8);
  id v62 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214(&qword_1006A2020);
  __chkstk_darwin(v6 - 8);
  id v68 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  __chkstk_darwin(v8 - 8);
  *(void *)&long long v67 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10002F214((uint64_t *)&unk_10069C990);
  __chkstk_darwin(v10 - 8);
  *(void *)&long long v66 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_10002F214(&qword_1006A23B0);
  uint64_t v65 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v77 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = _s16AttributedStringV9AttributeVMa(0);
  uint64_t v14 = (int *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (uint64_t)&v16[v14[7]];
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v70 = v17;
  *(void *)&long long v64 = v18;
  v19(v17, 1, 1);
  uint64_t v20 = (uint64_t)&v16[v14[8]];
  uint64_t v21 = type metadata accessor for Date();
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
  uint64_t v76 = v20;
  *(void *)&long long v63 = v21;
  v22(v20, 1, 1);
  uint64_t v23 = (uint64_t *)&v16[v14[9]];
  *(_OWORD *)uint64_t v23 = xmmword_10052CE20;
  *((_OWORD *)v23 + 1) = 0u;
  *((_OWORD *)v23 + 2) = 0u;
  *((_OWORD *)v23 + 3) = 0u;
  v23[8] = 0;
  uint64_t v24 = (uint64_t)&v16[v14[10]];
  uint64_t v25 = _s16AttributedStringV14ParagraphStyleVMa(0);
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
  uint64_t v75 = v24;
  v26(v24, 1, 1, v25);
  uint64_t v61 = v14[11];
  v16[v61] = 5;
  uint64_t v27 = (uint64_t)&v16[v14[12]];
  uint64_t v28 = type metadata accessor for URL();
  uint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56);
  uint64_t v74 = v27;
  v29(v27, 1, 1, v28);
  uint64_t v30 = v14[13];
  v16[v30] = 5;
  uint64_t v31 = &v16[v14[14]];
  *(void *)uint64_t v31 = 0;
  *((void *)v31 + 1) = 0;
  uint64_t v73 = v31;
  uint64_t v32 = (uint64_t)&v16[v14[15]];
  uint64_t v33 = _s16AttributedStringV16InlineAttachmentVMa(0);
  uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56);
  uint64_t v71 = v32;
  v34(v32, 1, 1, v33);
  sub_10015E154(v78, v78[3]);
  sub_1002D3764();
  uint64_t v35 = v72;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v35)
  {
    uint64_t v40 = v70;
    uint64_t v41 = v76;
    sub_100018FE8((uint64_t)v78);
    sub_10002B754(v40, (uint64_t *)&unk_10069C990);
    sub_10002B754(v41, (uint64_t *)&unk_1006A3E20);
    sub_1002D37B8(*v23, v23[1], v23[2], v23[3], v23[4], v23[5], v23[6], v23[7]);
    sub_10002B754(v75, &qword_1006A2020);
    sub_10002B754(v74, &qword_10069B310);
    swift_bridgeObjectRelease();
    return sub_10002B754(v71, &qword_1006A2018);
  }
  else
  {
    uint64_t v36 = v66;
    uint64_t v72 = v25;
    char v58 = v16;
    uint64_t v37 = v67;
    uint64_t v57 = v28;
    uint64_t v56 = v30;
    uint64_t v55 = v33;
    uint64_t v38 = (uint64_t)v68;
    uint64_t v39 = v65;
    char v84 = 0;
    sub_1002D3818();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    _OWORD *v58 = v79;
    LOBYTE(v79) = 1;
    sub_1002D34BC(&qword_1006A2338, (void (*)(uint64_t))&type metadata accessor for UUID);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    sub_10002B660(v36, v70, (uint64_t *)&unk_10069C990);
    LOBYTE(v79) = 2;
    sub_1002D34BC(&qword_10069FA08, (void (*)(uint64_t))&type metadata accessor for Date);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    sub_10002B660(v37, v76, (uint64_t *)&unk_1006A3E20);
    char v84 = 3;
    sub_1002D386C();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    long long v67 = v79;
    long long v66 = v80;
    long long v64 = v81;
    long long v63 = v82;
    uint64_t v42 = v83;
    sub_1002D37B8(*v23, v23[1], v23[2], v23[3], v23[4], v23[5], v23[6], v23[7]);
    long long v43 = v66;
    *(_OWORD *)uint64_t v23 = v67;
    *((_OWORD *)v23 + 1) = v43;
    long long v44 = v63;
    *((_OWORD *)v23 + 2) = v64;
    *((_OWORD *)v23 + 3) = v44;
    v23[8] = v42;
    LOBYTE(v79) = 4;
    sub_1002D34BC(&qword_1006A23D0, (void (*)(uint64_t))_s16AttributedStringV14ParagraphStyleVMa);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    sub_10002B660(v38, v75, &qword_1006A2020);
    char v84 = 5;
    sub_1002D38C0();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    *((unsigned char *)v58 + v61) = v79;
    LOBYTE(v79) = 6;
    sub_1002D34BC(&qword_10069D840, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v45 = (uint64_t)v62;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    sub_10002B660(v45, v74, &qword_10069B310);
    char v84 = 7;
    sub_1002D3914();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    char v46 = v78;
    *((unsigned char *)v58 + v56) = v79;
    LOBYTE(v79) = 8;
    uint64_t v47 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v49 = v48;
    char v50 = (uint64_t *)v73;
    swift_bridgeObjectRelease();
    *char v50 = v47;
    v50[1] = v49;
    LOBYTE(v79) = 9;
    sub_1002D34BC(&qword_1006A23E8, (void (*)(uint64_t))_s16AttributedStringV16InlineAttachmentVMa);
    uint64_t v51 = v69;
    char v52 = v77;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v52, v51);
    sub_10002B660(v60, v71, &qword_1006A2018);
    double v53 = v58;
    sub_1002D3504((uint64_t)v58, v59, _s16AttributedStringV9AttributeVMa);
    sub_100018FE8((uint64_t)v46);
    return sub_1002CC158((uint64_t)v53, _s16AttributedStringV9AttributeVMa);
  }
}

unint64_t sub_1002CB3B0()
{
  return sub_1002CA260(*v0);
}

uint64_t sub_1002CB3B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1002D5B70(a1, a2);
  *a3 = result;
  return result;
}

void sub_1002CB3E0(unsigned char *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_1002CB3EC(uint64_t a1)
{
  unint64_t v2 = sub_1002D3764();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002CB428(uint64_t a1)
{
  unint64_t v2 = sub_1002D3764();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002CB464@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002CA85C(a1, a2);
}

uint64_t sub_1002CB47C(void *a1)
{
  return sub_1002CA398(a1);
}

id sub_1002CB494(void *a1, void *a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a3 + 49);
  id result = [a1 attributedString];
  uint64_t v8 = result;
  if ((v6 & 1) == 0)
  {
    if (!result)
    {
LABEL_11:
      __break(1u);
      goto LABEL_12;
    }
    id v9 = [objc_allocWithZone((Class)NSMutableAttributedString) initWithAttributedString:result];

    id v10 = ICTTAttributeNameReplicaID;
    id v11 = [v9 ic_range];
    [v9 removeAttribute:v10 range:v11, v12];

    id v13 = ICTTAttributeNameTimestamp;
    id v14 = [v9 ic_range];
    [v9 removeAttribute:v13 range:v14 v15];

    id v16 = v9;
    id v17 = [a2 managedObjectContext];
    char v18 = *(unsigned char *)(a3 + 52);
    double v53 = _swiftEmptyArrayStorage;
    id v19 = [v16 string];
    uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v22 = v21;

    uint64_t v51 = v20;
    uint64_t v52 = v22;
    id v23 = [v16 ic_range];
    uint64_t v25 = v24;
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = &v51;
    *(void *)(v26 + 24) = v17;
    *(unsigned char *)(v26 + 32) = v18;
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = sub_1002CB9A4;
    *(void *)(v27 + 24) = v26;
    uint64_t v49 = sub_1002CB9C0;
    uint64_t v50 = v27;
    aBlocid k = _NSConcreteStackBlock;
    uint64_t v46 = 1107296256;
    uint64_t v47 = sub_1002C4538;
    uint64_t v48 = &unk_100633838;
    uint64_t v28 = _Block_copy(&aBlock);
    id v29 = v17;
    swift_retain();
    swift_release();
    [v16 enumerateAttributesInRange:v23 options:v25 usingBlock:v28];

    _Block_release(v28);
    LOBYTE(v29) = swift_isEscapingClosureAtFileLocation();
    id result = (id)swift_release();
    if ((v29 & 1) == 0)
    {
      uint64_t v30 = v51;

LABEL_8:
      swift_release();
      return (id)v30;
    }
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (result)
  {
    [result ic_range];

    uint64_t v31 = ICTTMergeableAttributedString.authorAttributedString(for:object:)();
    id v32 = [a2 managedObjectContext];
    char v33 = *(unsigned char *)(a3 + 52);
    double v53 = _swiftEmptyArrayStorage;
    id v34 = [(id)v31 string];
    uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v37 = v36;

    uint64_t v51 = v35;
    uint64_t v52 = v37;
    id v38 = [v31 ic_range];
    uint64_t v40 = v39;
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 16) = &v51;
    *(void *)(v41 + 24) = v32;
    *(unsigned char *)(v41 + 32) = v33;
    uint64_t v42 = swift_allocObject();
    *(void *)(v42 + 16) = sub_1002D6290;
    *(void *)(v42 + 24) = v41;
    uint64_t v49 = sub_1002D6294;
    uint64_t v50 = v42;
    aBlocid k = _NSConcreteStackBlock;
    uint64_t v46 = 1107296256;
    uint64_t v47 = sub_1002C4538;
    uint64_t v48 = &unk_1006338B0;
    long long v43 = _Block_copy(&aBlock);
    id v44 = v32;
    swift_retain();
    swift_release();
    [v31 enumerateAttributesInRange:v38 options:v40 usingBlock:v43];

    _Block_release(v43);
    LOBYTE(v31) = swift_isEscapingClosureAtFileLocation();
    id result = (id)swift_release();
    if ((v31 & 1) == 0)
    {
      uint64_t v30 = v51;
      goto LABEL_8;
    }
    goto LABEL_10;
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_1002CB96C()
{
  return _swift_deallocObject(v0, 33, 7);
}

uint64_t sub_1002CB9A4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1002C29D0(a1, a2, a3, a4, *(void *)(v4 + 16), *(void **)(v4 + 24), *(unsigned __int8 *)(v4 + 32));
}

uint64_t sub_1002CB9B0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002CB9C0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1002CB9E8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t _s16AttributedStringV9AttributeVMa(uint64_t a1)
{
  return sub_10002EFBC(a1, (uint64_t *)&unk_1006A2290);
}

uint64_t _s16AttributedStringV14ParagraphStyleVMa(uint64_t a1)
{
  return sub_10002EFBC(a1, (uint64_t *)&unk_1006A2138);
}

uint64_t _s16AttributedStringV16InlineAttachmentVMa(uint64_t a1)
{
  return sub_10002EFBC(a1, qword_1006A21F0);
}

uint64_t sub_1002CBA58(CGColor *a1)
{
  unint64_t v2 = CGColorGetColorSpace(a1);
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = (__CFString *)CGColorSpaceCopyName(v2);

    if (v4)
    {
      uint64_t v5 = CGColorRef.components.getter();
      if (v5)
      {
        uint64_t v6 = v5;
        int64_t v7 = *(void *)(v5 + 16);
        if (v7)
        {
          uint64_t v22 = _swiftEmptyArrayStorage;
          sub_100169D8C(0, v7, 0);
          uint64_t v8 = 0;
          id v9 = _swiftEmptyArrayStorage;
          unint64_t v10 = _swiftEmptyArrayStorage[2];
          do
          {
            uint64_t v11 = *(void *)(v6 + 8 * v8 + 32);
            uint64_t v22 = v9;
            unint64_t v12 = v9[3];
            if (v10 >= v12 >> 1)
            {
              sub_100169D8C(v12 > 1, v10 + 1, 1);
              id v9 = v22;
            }
            ++v8;
            v9[2] = v10 + 1;
            v9[v10++ + 4] = v11;
          }
          while (v7 != v8);
        }
        swift_bridgeObjectRelease();
        uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();

        return v20;
      }
    }
  }
  if (qword_10069AE50 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_10003293C(v13, (uint64_t)qword_1006A2000);
  id v14 = a1;
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v15, v16))
  {
    id v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = (void *)swift_slowAlloc();
    *(_DWORD *)id v17 = 136315138;
    type metadata accessor for CGColor(0);
    id v14 = v14;
    uint64_t v18 = String.init<A>(describing:)();
    sub_10045DA1C(v18, v19, (uint64_t *)&v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Cannot create color from CGColor — returning nil {cgColor: %s}", v17, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  return 0;
}

uint64_t sub_1002CBD3C(int a1)
{
  uint64_t result = 0;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      uint64_t result = 1;
      break;
    case 2:
      uint64_t result = 2;
      break;
    case 3:
      uint64_t result = 3;
      break;
    case 4:
      uint64_t result = 5;
      break;
    case 5:
      uint64_t result = 4;
      break;
    default:
      switch(a1)
      {
        case 'd':
          uint64_t result = 6;
          break;
        case 'e':
          uint64_t result = 7;
          break;
        case 'f':
          uint64_t result = 8;
          break;
        case 'g':
          uint64_t result = 9;
          break;
        default:
          if (qword_10069AE50 != -1) {
            swift_once();
          }
          uint64_t v4 = type metadata accessor for Logger();
          sub_10003293C(v4, (uint64_t)qword_1006A2000);
          uint64_t v5 = Logger.logObject.getter();
          os_log_type_t v6 = static os_log_type_t.fault.getter();
          if (os_log_type_enabled(v5, v6))
          {
            int64_t v7 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)int64_t v7 = 0;
            _os_log_impl((void *)&_mh_execute_header, v5, v6, "Unknown named paragraph style — returning nil", v7, 2u);
            swift_slowDealloc();
          }

          uint64_t result = 10;
          break;
      }
      break;
  }
  return result;
}

unint64_t sub_1002CBEE8(unint64_t result)
{
  if (result >= 5)
  {
    if (qword_10069AE50 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_10003293C(v1, (uint64_t)qword_1006A2000);
    unint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "Unknown text alignment — returning nil", v4, 2u);
      swift_slowDealloc();
    }

    return 5;
  }
  return result;
}

unint64_t sub_1002CBFD0(unint64_t a1)
{
  if (a1 < 6) {
    return 0x40302010005uLL >> (8 * a1);
  }
  if (qword_10069AE50 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10003293C(v2, (uint64_t)qword_1006A2000);
  os_log_type_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Unknown emphasis color type — returning nil", v5, 2u);
    swift_slowDealloc();
  }

  return 5;
}

uint64_t _s16AttributedStringV13ChecklistItemVMa(uint64_t a1)
{
  return sub_10002EFBC(a1, qword_1006A20A8);
}

uint64_t sub_1002CC0F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1002CC158(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

ValueMetadata *_s16AttributedStringV5ColorVMa()
{
  return &_s16AttributedStringV5ColorVN;
}

void *sub_1002CC1E0(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_1002CC2AC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_1002CC310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1002CC38C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1002CC408(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1002CC484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1002CC500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002CC514);
}

uint64_t sub_1002CC514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_1002CC5E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002CC5F8);
}

uint64_t sub_1002CC5F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  return result;
}

uint64_t sub_1002CC6B4()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1002CC748(uint64_t a1, uint64_t *a2, int *a3)
{
  os_log_type_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *os_log_type_t v4 = *a2;
    os_log_type_t v4 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    uint64_t v7 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v7;
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v8 = a3[8];
    uint64_t v9 = (void *)(a1 + v8);
    unsigned int v10 = (char *)a2 + v8;
    uint64_t v11 = _s16AttributedStringV13ChecklistItemVMa(0);
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      uint64_t v13 = sub_10002F214(&qword_1006A2030);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      uint64_t v15 = type metadata accessor for UUID();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v9, v10, v15);
      *((unsigned char *)v9 + *(int *)(v11 + 20)) = v10[*(int *)(v11 + 20)];
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[9];
    uint64_t v17 = a3[10];
    uint64_t v18 = (char *)v4 + v16;
    uint64_t v19 = (uint64_t)a2 + v16;
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = *(unsigned char *)(v19 + 8);
    uint64_t v20 = (char *)v4 + v17;
    uint64_t v21 = (char *)a2 + v17;
    uint64_t v22 = type metadata accessor for UUID();
    uint64_t v23 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      uint64_t v24 = sub_10002F214((uint64_t *)&unk_10069C990);
      memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
  }
  return v4;
}

uint64_t sub_1002CC9E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = _s16AttributedStringV13ChecklistItemVMa(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    uint64_t v6 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 40);
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v8 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v7, 1, v8);
  if (!result)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    return v10(v7, v8);
  }
  return result;
}

uint64_t sub_1002CCB4C(uint64_t a1, uint64_t a2, int *a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v7 = a3[8];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = _s16AttributedStringV13ChecklistItemVMa(0);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_10002F214(&qword_1006A2030);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v13 = type metadata accessor for UUID();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 16))(v8, v9, v13);
    *((unsigned char *)v8 + *(int *)(v10 + 20)) = *((unsigned char *)v9 + *(int *)(v10 + 20));
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[9];
  uint64_t v15 = a3[10];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = a2 + v14;
  *(void *)uint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
  uint64_t v18 = (void *)(a1 + v15);
  uint64_t v19 = (const void *)(a2 + v15);
  uint64_t v20 = type metadata accessor for UUID();
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    uint64_t v22 = sub_10002F214((uint64_t *)&unk_10069C990);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 16))(v18, v19, v20);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  return a1;
}

uint64_t sub_1002CCD98(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v6;
  uint64_t v7 = a3[8];
  uint64_t v8 = (unsigned char *)(a1 + v7);
  uint64_t v9 = (unsigned char *)(a2 + v7);
  uint64_t v10 = _s16AttributedStringV13ChecklistItemVMa(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      uint64_t v15 = type metadata accessor for UUID();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 16))(v8, v9, v15);
      v8[*(int *)(v10 + 20)] = v9[*(int *)(v10 + 20)];
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    sub_1002CC158((uint64_t)v8, _s16AttributedStringV13ChecklistItemVMa);
LABEL_6:
    uint64_t v16 = sub_10002F214(&qword_1006A2030);
    memcpy(v8, v9, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v31 = type metadata accessor for UUID();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v31 - 8) + 24))(v8, v9, v31);
  v8[*(int *)(v10 + 20)] = v9[*(int *)(v10 + 20)];
LABEL_7:
  uint64_t v17 = a3[9];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v20 = *v19;
  *(unsigned char *)(v18 + 8) = *((unsigned char *)v19 + 8);
  *(void *)uint64_t v18 = v20;
  uint64_t v21 = a3[10];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  uint64_t v24 = type metadata accessor for UUID();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v25 + 48);
  int v27 = v26(v22, 1, v24);
  int v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (!v28)
    {
      (*(void (**)(void *, void *, uint64_t))(v25 + 24))(v22, v23, v24);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v25 + 8))(v22, v24);
    goto LABEL_12;
  }
  if (v28)
  {
LABEL_12:
    uint64_t v29 = sub_10002F214((uint64_t *)&unk_10069C990);
    memcpy(v22, v23, *(void *)(*(void *)(v29 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v25 + 16))(v22, v23, v24);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  return a1;
}

uint64_t sub_1002CD0E8(uint64_t a1, uint64_t a2, int *a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v7 = a3[8];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = _s16AttributedStringV13ChecklistItemVMa(0);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_10002F214(&qword_1006A2030);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v13 = type metadata accessor for UUID();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v8, v9, v13);
    *((unsigned char *)v8 + *(int *)(v10 + 20)) = *((unsigned char *)v9 + *(int *)(v10 + 20));
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[9];
  uint64_t v15 = a3[10];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = a2 + v14;
  *(void *)uint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
  uint64_t v18 = (void *)(a1 + v15);
  uint64_t v19 = (const void *)(a2 + v15);
  uint64_t v20 = type metadata accessor for UUID();
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    uint64_t v22 = sub_10002F214((uint64_t *)&unk_10069C990);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 32))(v18, v19, v20);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  return a1;
}

uint64_t sub_1002CD334(uint64_t a1, uint64_t a2, int *a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v7 = a3[8];
  uint64_t v8 = (unsigned char *)(a1 + v7);
  uint64_t v9 = (unsigned char *)(a2 + v7);
  uint64_t v10 = _s16AttributedStringV13ChecklistItemVMa(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      uint64_t v15 = type metadata accessor for UUID();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 32))(v8, v9, v15);
      v8[*(int *)(v10 + 20)] = v9[*(int *)(v10 + 20)];
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    sub_1002CC158((uint64_t)v8, _s16AttributedStringV13ChecklistItemVMa);
LABEL_6:
    uint64_t v16 = sub_10002F214(&qword_1006A2030);
    memcpy(v8, v9, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v30 = type metadata accessor for UUID();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v30 - 8) + 40))(v8, v9, v30);
  v8[*(int *)(v10 + 20)] = v9[*(int *)(v10 + 20)];
LABEL_7:
  uint64_t v17 = a3[9];
  uint64_t v18 = a3[10];
  uint64_t v19 = a1 + v17;
  uint64_t v20 = a2 + v17;
  *(void *)uint64_t v19 = *(void *)v20;
  *(unsigned char *)(v19 + 8) = *(unsigned char *)(v20 + 8);
  uint64_t v21 = (void *)(a1 + v18);
  uint64_t v22 = (void *)(a2 + v18);
  uint64_t v23 = type metadata accessor for UUID();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v24 + 48);
  int v26 = v25(v21, 1, v23);
  int v27 = v25(v22, 1, v23);
  if (!v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, void *, uint64_t))(v24 + 40))(v21, v22, v23);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v24 + 8))(v21, v23);
    goto LABEL_12;
  }
  if (v27)
  {
LABEL_12:
    uint64_t v28 = sub_10002F214((uint64_t *)&unk_10069C990);
    memcpy(v21, v22, *(void *)(*(void *)(v28 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v24 + 32))(v21, v22, v23);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  return a1;
}

uint64_t sub_1002CD670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002CD684);
}

uint64_t sub_1002CD684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 251)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 1);
    if (v4 >= 5) {
      return v4 - 4;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_10002F214(&qword_1006A2030);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 32);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_10002F214((uint64_t *)&unk_10069C990);
      int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 40);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1002CD7B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002CD7C4);
}

uint64_t sub_1002CD7C4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 251)
  {
    *(unsigned char *)(result + 1) = a2 + 4;
  }
  else
  {
    uint64_t v8 = sub_10002F214(&qword_1006A2030);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 32);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_10002F214((uint64_t *)&unk_10069C990);
      int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 40);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1002CD8F4()
{
  sub_1002CDA20(319, &qword_1006A2148, (void (*)(uint64_t))_s16AttributedStringV13ChecklistItemVMa);
  if (v0 <= 0x3F)
  {
    sub_1002CDA20(319, (unint64_t *)&unk_1006A2150, (void (*)(uint64_t))&type metadata accessor for UUID);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1002CDA20(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t *sub_1002CDA74(uint64_t *a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a3[6];
    __dst = (char *)a1 + v9;
    uint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = type metadata accessor for Date();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_10002F214((uint64_t *)&unk_1006A3E20);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v16 = a3[7];
    uint64_t v17 = a3[8];
    uint64_t v18 = (uint64_t *)((char *)v4 + v16);
    uint64_t v19 = (uint64_t *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = (uint64_t *)((char *)v4 + v17);
    uint64_t v22 = (uint64_t *)((char *)a2 + v17);
    uint64_t v23 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1002CDC48(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_1002CDD34(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a3[6];
  __dst = (char *)a1 + v8;
  uint64_t v9 = (char *)a2 + v8;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  uint64_t v16 = (void *)((char *)a1 + v14);
  uint64_t v17 = (void *)((char *)a2 + v14);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = (void *)((char *)a1 + v15);
  uint64_t v20 = (void *)((char *)a2 + v15);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1002CDEB8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[8];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1002CE0D0(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v13) = *(_OWORD *)((char *)a2 + v13);
  return a1;
}

void *sub_1002CE208(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[8];
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *uint64_t v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1002CE3E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002CE3F4);
}

uint64_t sub_1002CE3F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1002CE4A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002CE4BC);
}

uint64_t sub_1002CE4BC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1002CE568()
{
  sub_1002CDA20(319, (unint64_t *)&qword_1006A6C30, (void (*)(uint64_t))&type metadata accessor for Date);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void *sub_1002CE628(_OWORD *a1, void *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_OWORD *)a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for UUID();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v88 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    uint64_t v89 = v10;
    uint64_t v87 = v11;
    if (v88(v9, 1, v10))
    {
      uint64_t v12 = sub_10002F214((uint64_t *)&unk_10069C990);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v14 = a3[6];
    int v15 = (char *)v4 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = type metadata accessor for Date();
    uint64_t v18 = *(void *)(v17 - 8);
    uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
    if (v19(v16, 1, v17))
    {
      uint64_t v20 = sub_10002F214((uint64_t *)&unk_1006A3E20);
      memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    uint64_t v21 = a3[7];
    uint64_t v22 = (char *)v4 + v21;
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = *(void *)((char *)a2 + v21 + 8);
    id v90 = v19;
    if (v24 == 1)
    {
      long long v25 = *((_OWORD *)v23 + 3);
      *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
      *((_OWORD *)v22 + 3) = v25;
      *((void *)v22 + 8) = *((void *)v23 + 8);
      long long v26 = *((_OWORD *)v23 + 1);
      *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
      *((_OWORD *)v22 + 1) = v26;
    }
    else
    {
      *(void *)uint64_t v22 = *(void *)v23;
      *((void *)v22 + 1) = v24;
      *((void *)v22 + 2) = *((void *)v23 + 2);
      v22[24] = v23[24];
      *(_DWORD *)(v22 + 25) = *(_DWORD *)(v23 + 25);
      *((void *)v22 + 4) = *((void *)v23 + 4);
      v22[40] = v23[40];
      uint64_t v27 = *((void *)v23 + 7);
      swift_bridgeObjectRetain();
      if (v27)
      {
        *((void *)v22 + 6) = *((void *)v23 + 6);
        *((void *)v22 + 7) = v27;
        *((void *)v22 + 8) = *((void *)v23 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *((_OWORD *)v22 + 3) = *((_OWORD *)v23 + 3);
        *((void *)v22 + 8) = *((void *)v23 + 8);
      }
    }
    uint64_t v28 = a3[8];
    uint64_t v29 = (_WORD *)((char *)v4 + v28);
    uint64_t v30 = (_WORD *)((char *)a2 + v28);
    uint64_t v31 = (int *)_s16AttributedStringV14ParagraphStyleVMa(0);
    uint64_t v32 = *((void *)v31 - 1);
    if ((*(unsigned int (**)(_WORD *, uint64_t, int *))(v32 + 48))(v30, 1, v31))
    {
      uint64_t v33 = sub_10002F214(&qword_1006A2020);
      memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      uint64_t v84 = v32;
      uint64_t v85 = v18;
      uint64_t v86 = v17;
      *uint64_t v29 = *v30;
      uint64_t v34 = *((void *)v30 + 2);
      *((void *)v29 + 1) = *((void *)v30 + 1);
      *((void *)v29 + 2) = v34;
      *((unsigned char *)v29 + 24) = *((unsigned char *)v30 + 24);
      uint64_t v35 = v31[8];
      uint64_t v36 = (char *)v29 + v35;
      uint64_t v37 = (char *)v30 + v35;
      uint64_t v38 = _s16AttributedStringV13ChecklistItemVMa(0);
      uint64_t v39 = *(void *)(v38 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
      {
        uint64_t v40 = sub_10002F214(&qword_1006A2030);
        memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64));
        uint64_t v41 = v89;
      }
      else
      {
        uint64_t v42 = v36;
        uint64_t v83 = v36;
        uint64_t v41 = v89;
        (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v42, v37, v89);
        v83[*(int *)(v38 + 20)] = v37[*(int *)(v38 + 20)];
        (*(void (**)(void))(v39 + 56))();
      }
      uint64_t v43 = v31[9];
      id v44 = (char *)v29 + v43;
      uint64_t v45 = (char *)v30 + v43;
      *(void *)id v44 = *(void *)v45;
      v44[8] = v45[8];
      uint64_t v46 = v31[10];
      uint64_t v47 = (char *)v29 + v46;
      uint64_t v48 = (char *)v30 + v46;
      uint64_t v18 = v85;
      if (v88((char *)v30 + v46, 1, v41))
      {
        uint64_t v49 = sub_10002F214((uint64_t *)&unk_10069C990);
        memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v47, v48, v41);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v87 + 56))(v47, 0, 1, v41);
      }
      (*(void (**)(_WORD *, void, uint64_t, int *))(v84 + 56))(v29, 0, 1, v31);
      uint64_t v17 = v86;
    }
    uint64_t v50 = a3[10];
    *((unsigned char *)v4 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    uint64_t v51 = (char *)v4 + v50;
    uint64_t v52 = (char *)a2 + v50;
    uint64_t v53 = type metadata accessor for URL();
    uint64_t v54 = *(void *)(v53 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
    {
      uint64_t v55 = sub_10002F214(&qword_10069B310);
      memcpy(v51, v52, *(void *)(*(void *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v51, v52, v53);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
    }
    uint64_t v56 = a3[12];
    *((unsigned char *)v4 + a3[11]) = *((unsigned char *)a2 + a3[11]);
    uint64_t v57 = (void *)((char *)v4 + v56);
    char v58 = (void *)((char *)a2 + v56);
    uint64_t v59 = v58[1];
    *uint64_t v57 = *v58;
    v57[1] = v59;
    uint64_t v60 = a3[13];
    uint64_t v61 = (void *)((char *)v4 + v60);
    id v62 = (void *)((char *)a2 + v60);
    long long v63 = (int *)_s16AttributedStringV16InlineAttachmentVMa(0);
    uint64_t v64 = *((void *)v63 - 1);
    uint64_t v65 = *(unsigned int (**)(void *, uint64_t, int *))(v64 + 48);
    swift_bridgeObjectRetain();
    if (v65(v62, 1, v63))
    {
      uint64_t v66 = sub_10002F214(&qword_1006A2018);
      memcpy(v61, v62, *(void *)(*(void *)(v66 - 8) + 64));
    }
    else
    {
      uint64_t v67 = v62[1];
      void *v61 = *v62;
      v61[1] = v67;
      uint64_t v68 = v62[3];
      void v61[2] = v62[2];
      v61[3] = v68;
      uint64_t v69 = v63[6];
      uint64_t v70 = (char *)v61 + v69;
      uint64_t v71 = (char *)v62 + v69;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v90(v71, 1, v17))
      {
        uint64_t v72 = sub_10002F214((uint64_t *)&unk_1006A3E20);
        memcpy(v70, v71, *(void *)(*(void *)(v72 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v70, v71, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v70, 0, 1, v17);
      }
      uint64_t v73 = v63[7];
      uint64_t v74 = (void *)((char *)v61 + v73);
      uint64_t v75 = (void *)((char *)v62 + v73);
      uint64_t v76 = v75[1];
      *uint64_t v74 = *v75;
      v74[1] = v76;
      uint64_t v77 = v63[8];
      unint64_t v78 = (void *)((char *)v61 + v77);
      long long v79 = (void *)((char *)v62 + v77);
      uint64_t v80 = v79[1];
      *unint64_t v78 = *v79;
      v78[1] = v80;
      long long v81 = *(void (**)(void *, void, uint64_t, int *))(v64 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v81(v61, 0, 1, v63);
    }
  }
  return v4;
}

uint64_t sub_1002CEEAC(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v27 = v6;
  uint64_t v8 = a1 + a2[6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v11(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  uint64_t v12 = a1 + a2[7];
  if (*(void *)(v12 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(v12 + 56))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v13 = a1 + a2[8];
  uint64_t v14 = _s16AttributedStringV14ParagraphStyleVMa(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14))
  {
    long long v26 = v11;
    uint64_t v15 = v10;
    uint64_t v16 = v13 + *(int *)(v14 + 32);
    uint64_t v17 = _s16AttributedStringV13ChecklistItemVMa(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17)) {
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v16, v5);
    }
    uint64_t v18 = v13 + *(int *)(v14 + 40);
    uint64_t v10 = v15;
    uint64_t v11 = v26;
    if (!v7(v18, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v18, v5);
    }
  }
  uint64_t v19 = a1 + a2[10];
  uint64_t v20 = type metadata accessor for URL();
  uint64_t v21 = *(void *)(v20 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20)) {
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
  }
  swift_bridgeObjectRelease();
  uint64_t v22 = a1 + a2[13];
  uint64_t v23 = _s16AttributedStringV16InlineAttachmentVMa(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v22, 1, v23);
  if (!result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v25 = v22 + *(int *)(v23 + 24);
    if (!v11(v25, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v25, v9);
    }
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_OWORD *sub_1002CF2DC(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v86 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v87 = v9;
  uint64_t v85 = v10;
  if (v86(v8, 1, v9))
  {
    uint64_t v11 = sub_10002F214((uint64_t *)&unk_10069C990);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for Date();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v17(v14, 1, v15))
  {
    uint64_t v18 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v19 = a3[7];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = *(void *)((char *)a2 + v19 + 8);
  uint64_t v88 = v17;
  if (v22 == 1)
  {
    long long v23 = *((_OWORD *)v21 + 3);
    *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
    *((_OWORD *)v20 + 3) = v23;
    *((void *)v20 + 8) = *((void *)v21 + 8);
    long long v24 = *((_OWORD *)v21 + 1);
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    *((_OWORD *)v20 + 1) = v24;
  }
  else
  {
    *(void *)uint64_t v20 = *(void *)v21;
    *((void *)v20 + 1) = v22;
    *((void *)v20 + 2) = *((void *)v21 + 2);
    v20[24] = v21[24];
    *(_DWORD *)(v20 + 25) = *(_DWORD *)(v21 + 25);
    *((void *)v20 + 4) = *((void *)v21 + 4);
    v20[40] = v21[40];
    uint64_t v25 = *((void *)v21 + 7);
    swift_bridgeObjectRetain();
    if (v25)
    {
      *((void *)v20 + 6) = *((void *)v21 + 6);
      *((void *)v20 + 7) = v25;
      *((void *)v20 + 8) = *((void *)v21 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *((_OWORD *)v20 + 3) = *((_OWORD *)v21 + 3);
      *((void *)v20 + 8) = *((void *)v21 + 8);
    }
  }
  uint64_t v26 = a3[8];
  uint64_t v27 = (_WORD *)((char *)a1 + v26);
  uint64_t v28 = (_WORD *)((char *)a2 + v26);
  uint64_t v29 = (int *)_s16AttributedStringV14ParagraphStyleVMa(0);
  uint64_t v30 = *((void *)v29 - 1);
  if ((*(unsigned int (**)(_WORD *, uint64_t, int *))(v30 + 48))(v28, 1, v29))
  {
    uint64_t v31 = sub_10002F214(&qword_1006A2020);
    memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    uint64_t v82 = v30;
    uint64_t v83 = v16;
    uint64_t v84 = v15;
    *uint64_t v27 = *v28;
    uint64_t v32 = *((void *)v28 + 2);
    *((void *)v27 + 1) = *((void *)v28 + 1);
    *((void *)v27 + 2) = v32;
    *((unsigned char *)v27 + 24) = *((unsigned char *)v28 + 24);
    uint64_t v33 = v29[8];
    uint64_t v34 = (char *)v27 + v33;
    uint64_t v35 = (char *)v28 + v33;
    uint64_t v36 = _s16AttributedStringV13ChecklistItemVMa(0);
    uint64_t v37 = *(void *)(v36 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
    {
      uint64_t v38 = sub_10002F214(&qword_1006A2030);
      memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
      uint64_t v39 = v87;
    }
    else
    {
      uint64_t v40 = v34;
      long long v81 = v34;
      uint64_t v39 = v87;
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v40, v35, v87);
      v81[*(int *)(v36 + 20)] = v35[*(int *)(v36 + 20)];
      (*(void (**)(void))(v37 + 56))();
    }
    uint64_t v41 = v29[9];
    uint64_t v42 = (char *)v27 + v41;
    uint64_t v43 = (char *)v28 + v41;
    *(void *)uint64_t v42 = *(void *)v43;
    v42[8] = v43[8];
    uint64_t v44 = v29[10];
    uint64_t v45 = (char *)v27 + v44;
    uint64_t v46 = (char *)v28 + v44;
    uint64_t v16 = v83;
    if (v86((char *)v28 + v44, 1, v39))
    {
      uint64_t v47 = sub_10002F214((uint64_t *)&unk_10069C990);
      memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v45, v46, v39);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v45, 0, 1, v39);
    }
    (*(void (**)(_WORD *, void, uint64_t, int *))(v82 + 56))(v27, 0, 1, v29);
    uint64_t v15 = v84;
  }
  uint64_t v48 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v49 = (char *)a1 + v48;
  uint64_t v50 = (char *)a2 + v48;
  uint64_t v51 = type metadata accessor for URL();
  uint64_t v52 = *(void *)(v51 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
  {
    uint64_t v53 = sub_10002F214(&qword_10069B310);
    memcpy(v49, v50, *(void *)(*(void *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v49, v50, v51);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
  }
  uint64_t v54 = a3[12];
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  uint64_t v55 = (void *)((char *)a1 + v54);
  uint64_t v56 = (void *)((char *)a2 + v54);
  uint64_t v57 = v56[1];
  void *v55 = *v56;
  v55[1] = v57;
  uint64_t v58 = a3[13];
  uint64_t v59 = (void *)((char *)a1 + v58);
  uint64_t v60 = (void *)((char *)a2 + v58);
  uint64_t v61 = (int *)_s16AttributedStringV16InlineAttachmentVMa(0);
  uint64_t v62 = *((void *)v61 - 1);
  long long v63 = *(unsigned int (**)(void *, uint64_t, int *))(v62 + 48);
  swift_bridgeObjectRetain();
  if (v63(v60, 1, v61))
  {
    uint64_t v64 = sub_10002F214(&qword_1006A2018);
    memcpy(v59, v60, *(void *)(*(void *)(v64 - 8) + 64));
  }
  else
  {
    uint64_t v65 = v60[1];
    *uint64_t v59 = *v60;
    v59[1] = v65;
    uint64_t v66 = v60[3];
    void v59[2] = v60[2];
    v59[3] = v66;
    uint64_t v67 = v61[6];
    uint64_t v68 = (char *)v59 + v67;
    uint64_t v69 = (char *)v60 + v67;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v88(v69, 1, v15))
    {
      uint64_t v70 = sub_10002F214((uint64_t *)&unk_1006A3E20);
      memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v68, v69, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v68, 0, 1, v15);
    }
    uint64_t v71 = v61[7];
    uint64_t v72 = (void *)((char *)v59 + v71);
    uint64_t v73 = (void *)((char *)v60 + v71);
    uint64_t v74 = v73[1];
    *uint64_t v72 = *v73;
    v72[1] = v74;
    uint64_t v75 = v61[8];
    uint64_t v76 = (void *)((char *)v59 + v75);
    uint64_t v77 = (void *)((char *)v60 + v75);
    uint64_t v78 = v77[1];
    *uint64_t v76 = *v77;
    v76[1] = v78;
    long long v79 = *(void (**)(void *, void, uint64_t, int *))(v62 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v79(v59, 0, 1, v61);
  }
  return a1;
}

void *sub_1002CFB10(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  uint64_t v144 = v10;
  uint64_t v145 = v9;
  uint64_t v146 = (uint64_t (*)(void *, uint64_t, uint64_t))v11;
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_10002F214((uint64_t *)&unk_10069C990);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = type metadata accessor for Date();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  uint64_t v147 = v20;
  int v22 = v20(v17, 1, v18);
  uint64_t v143 = v19;
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
LABEL_12:
    uint64_t v23 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v16, v17, v18);
LABEL_13:
  uint64_t v24 = a3[7];
  uint64_t v25 = (uint64_t)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = *(void *)((char *)a1 + v24 + 8);
  uint64_t v28 = *(void *)((char *)a2 + v24 + 8);
  uint64_t v148 = v18;
  if (v27 == 1)
  {
    if (v28 == 1)
    {
      *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
      long long v29 = *((_OWORD *)v26 + 1);
      long long v30 = *((_OWORD *)v26 + 2);
      long long v31 = *((_OWORD *)v26 + 3);
      *(void *)(v25 + 64) = *((void *)v26 + 8);
      *(_OWORD *)(v25 + 32) = v30;
      *(_OWORD *)(v25 + 48) = v31;
      *(_OWORD *)(v25 + 16) = v29;
      goto LABEL_29;
    }
    *(void *)uint64_t v25 = *(void *)v26;
    *(void *)(v25 + 8) = *((void *)v26 + 1);
    uint64_t v35 = *((void *)v26 + 2);
    *(unsigned char *)(v25 + 24) = v26[24];
    *(void *)(v25 + 16) = v35;
    *(unsigned char *)(v25 + 25) = v26[25];
    *(unsigned char *)(v25 + 26) = v26[26];
    *(unsigned char *)(v25 + 27) = v26[27];
    *(unsigned char *)(v25 + 28) = v26[28];
    uint64_t v36 = *((void *)v26 + 4);
    *(unsigned char *)(v25 + 40) = v26[40];
    *(void *)(v25 + 32) = v36;
    uint64_t v37 = *((void *)v26 + 7);
    swift_bridgeObjectRetain();
    if (!v37)
    {
      long long v38 = *((_OWORD *)v26 + 3);
      *(void *)(v25 + 64) = *((void *)v26 + 8);
      *(_OWORD *)(v25 + 48) = v38;
      goto LABEL_29;
    }
    goto LABEL_26;
  }
  if (v28 == 1)
  {
    sub_1002D0B3C(v25);
    *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
    long long v33 = *((_OWORD *)v26 + 2);
    long long v32 = *((_OWORD *)v26 + 3);
    long long v34 = *((_OWORD *)v26 + 1);
    *(void *)(v25 + 64) = *((void *)v26 + 8);
    *(_OWORD *)(v25 + 32) = v33;
    *(_OWORD *)(v25 + 48) = v32;
    *(_OWORD *)(v25 + 16) = v34;
    goto LABEL_29;
  }
  *(void *)uint64_t v25 = *(void *)v26;
  *(void *)(v25 + 8) = *((void *)v26 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v39 = *((void *)v26 + 2);
  *(unsigned char *)(v25 + 24) = v26[24];
  *(void *)(v25 + 16) = v39;
  *(unsigned char *)(v25 + 25) = v26[25];
  *(unsigned char *)(v25 + 26) = v26[26];
  *(unsigned char *)(v25 + 27) = v26[27];
  *(unsigned char *)(v25 + 28) = v26[28];
  uint64_t v40 = *((void *)v26 + 4);
  *(unsigned char *)(v25 + 40) = v26[40];
  *(void *)(v25 + 32) = v40;
  uint64_t v41 = (_OWORD *)(v25 + 48);
  uint64_t v42 = v26 + 48;
  uint64_t v43 = *((void *)v26 + 7);
  if (*(void *)(v25 + 56))
  {
    if (v43)
    {
      *(void *)(v25 + 48) = *((void *)v26 + 6);
      *(void *)(v25 + 56) = *((void *)v26 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v25 + 64) = *((void *)v26 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1002D0B08(v25 + 48);
      uint64_t v44 = *((void *)v26 + 8);
      _OWORD *v41 = *v42;
      *(void *)(v25 + 64) = v44;
    }
  }
  else
  {
    if (v43)
    {
LABEL_26:
      *(void *)(v25 + 48) = *((void *)v26 + 6);
      *(void *)(v25 + 56) = *((void *)v26 + 7);
      *(void *)(v25 + 64) = *((void *)v26 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_29;
    }
    long long v45 = *v42;
    *(void *)(v25 + 64) = *((void *)v26 + 8);
    _OWORD *v41 = v45;
  }
LABEL_29:
  uint64_t v46 = a3[8];
  uint64_t v47 = (uint64_t)a1 + v46;
  uint64_t v48 = (char *)a2 + v46;
  uint64_t v49 = (int *)_s16AttributedStringV14ParagraphStyleVMa(0);
  uint64_t v50 = (void *)*((void *)v49 - 1);
  uint64_t v51 = (uint64_t (*)(uint64_t, uint64_t, int *))v50[6];
  int v52 = v51(v47, 1, v49);
  int v53 = v51((uint64_t)v48, 1, v49);
  if (!v52)
  {
    if (v53)
    {
      sub_1002CC158(v47, _s16AttributedStringV14ParagraphStyleVMa);
      goto LABEL_35;
    }
    *(unsigned char *)uint64_t v47 = *v48;
    *(unsigned char *)(v47 + 1) = v48[1];
    *(void *)(v47 + 8) = *((void *)v48 + 1);
    uint64_t v65 = *((void *)v48 + 2);
    *(unsigned char *)(v47 + 24) = v48[24];
    *(void *)(v47 + 16) = v65;
    uint64_t v66 = v49[8];
    uint64_t v67 = v47 + v66;
    __srca = &v48[v66];
    uint64_t v68 = _s16AttributedStringV13ChecklistItemVMa(0);
    uint64_t v138 = *(void *)(v68 - 8);
    uint64_t v69 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v138 + 48);
    uint64_t v139 = v67;
    LODWORD(v67) = v69(v67, 1, v68);
    int v70 = v69((uint64_t)__srca, 1, v68);
    if (v67)
    {
      uint64_t v71 = v144;
      if (!v70)
      {
        uint64_t v120 = v145;
        (*(void (**)(uint64_t, char *, uint64_t))(v144 + 16))(v139, __srca, v145);
        *(unsigned char *)(v139 + *(int *)(v68 + 20)) = __srca[*(int *)(v68 + 20)];
        (*(void (**)(uint64_t, void, uint64_t))(v138 + 56))(v139, 0, 1);
        goto LABEL_74;
      }
      size_t v72 = *(void *)(*(void *)(sub_10002F214(&qword_1006A2030) - 8) + 64);
      uint64_t v73 = (void *)v139;
    }
    else
    {
      uint64_t v71 = v144;
      if (!v70)
      {
        uint64_t v120 = v145;
        (*(void (**)(uint64_t, char *, uint64_t))(v144 + 24))(v139, __srca, v145);
        *(unsigned char *)(v139 + *(int *)(v68 + 20)) = __srca[*(int *)(v68 + 20)];
        goto LABEL_74;
      }
      sub_1002CC158(v139, _s16AttributedStringV13ChecklistItemVMa);
      size_t v72 = *(void *)(*(void *)(sub_10002F214(&qword_1006A2030) - 8) + 64);
      uint64_t v73 = (void *)v139;
    }
    memcpy(v73, __srca, v72);
    uint64_t v120 = v145;
LABEL_74:
    uint64_t v129 = v49[9];
    uint64_t v130 = v47 + v129;
    uint64_t v131 = &v48[v129];
    uint64_t v132 = *(void *)v131;
    *(unsigned char *)(v130 + 8) = v131[8];
    *(void *)uint64_t v130 = v132;
    uint64_t v133 = v49[10];
    __int16 v134 = (void *)(v47 + v133);
    char v135 = &v48[v133];
    int v136 = v146(v134, 1, v120);
    int v137 = v146(v135, 1, v120);
    if (v136)
    {
      if (!v137)
      {
        (*(void (**)(void *, char *, uint64_t))(v71 + 16))(v134, v135, v120);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v71 + 56))(v134, 0, 1, v120);
        goto LABEL_45;
      }
    }
    else
    {
      if (!v137)
      {
        (*(void (**)(void *, char *, uint64_t))(v71 + 24))(v134, v135, v120);
        goto LABEL_45;
      }
      (*(void (**)(void *, uint64_t))(v71 + 8))(v134, v120);
    }
    size_t v62 = *(void *)(*(void *)(sub_10002F214((uint64_t *)&unk_10069C990) - 8) + 64);
    long long v63 = v134;
    uint64_t v64 = v135;
LABEL_36:
    memcpy(v63, v64, v62);
    goto LABEL_45;
  }
  if (v53)
  {
LABEL_35:
    size_t v62 = *(void *)(*(void *)(sub_10002F214(&qword_1006A2020) - 8) + 64);
    long long v63 = (void *)v47;
    uint64_t v64 = v48;
    goto LABEL_36;
  }
  __src = (void (**)(uint64_t, void, uint64_t, int *))v50;
  *(unsigned char *)uint64_t v47 = *v48;
  *(unsigned char *)(v47 + 1) = v48[1];
  *(void *)(v47 + 8) = *((void *)v48 + 1);
  uint64_t v54 = *((void *)v48 + 2);
  *(unsigned char *)(v47 + 24) = v48[24];
  *(void *)(v47 + 16) = v54;
  uint64_t v55 = v49[8];
  uint64_t v56 = (void *)(v47 + v55);
  uint64_t v57 = &v48[v55];
  uint64_t v58 = _s16AttributedStringV13ChecklistItemVMa(0);
  uint64_t v59 = *(void *)(v58 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
  {
    uint64_t v60 = sub_10002F214(&qword_1006A2030);
    memcpy(v56, v57, *(void *)(*(void *)(v60 - 8) + 64));
    uint64_t v61 = v145;
  }
  else
  {
    uint64_t v74 = v56;
    long long v140 = v56;
    uint64_t v61 = v145;
    (*(void (**)(void *, char *, uint64_t))(v144 + 16))(v74, v57, v145);
    v140[*(int *)(v58 + 20)] = v57[*(int *)(v58 + 20)];
    (*(void (**)(void))(v59 + 56))();
  }
  uint64_t v75 = v49[9];
  uint64_t v76 = v47 + v75;
  uint64_t v77 = &v48[v75];
  uint64_t v78 = *(void *)v77;
  *(unsigned char *)(v76 + 8) = v77[8];
  *(void *)uint64_t v76 = v78;
  uint64_t v79 = v49[10];
  uint64_t v80 = (void *)(v47 + v79);
  long long v81 = &v48[v79];
  if (v146(&v48[v79], 1, v61))
  {
    uint64_t v82 = sub_10002F214((uint64_t *)&unk_10069C990);
    memcpy(v80, v81, *(void *)(*(void *)(v82 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v144 + 16))(v80, v81, v61);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v144 + 56))(v80, 0, 1, v61);
  }
  __src[7](v47, 0, 1, v49);
LABEL_45:
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v83 = a3[10];
  uint64_t v84 = (char *)a1 + v83;
  uint64_t v85 = (char *)a2 + v83;
  uint64_t v86 = type metadata accessor for URL();
  uint64_t v87 = *(void *)(v86 - 8);
  uint64_t v88 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v87 + 48);
  int v89 = v88(v84, 1, v86);
  int v90 = v88(v85, 1, v86);
  if (v89)
  {
    if (!v90)
    {
      (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v84, v85, v86);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v87 + 56))(v84, 0, 1, v86);
      goto LABEL_51;
    }
    goto LABEL_50;
  }
  if (v90)
  {
    (*(void (**)(char *, uint64_t))(v87 + 8))(v84, v86);
LABEL_50:
    uint64_t v91 = sub_10002F214(&qword_10069B310);
    memcpy(v84, v85, *(void *)(*(void *)(v91 - 8) + 64));
    goto LABEL_51;
  }
  (*(void (**)(char *, char *, uint64_t))(v87 + 24))(v84, v85, v86);
LABEL_51:
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  uint64_t v92 = a3[12];
  uint64_t v93 = (void *)((char *)a1 + v92);
  uint64_t v94 = (void *)((char *)a2 + v92);
  *uint64_t v93 = *v94;
  v93[1] = v94[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v95 = a3[13];
  int v96 = (char *)a1 + v95;
  id v97 = (char *)a2 + v95;
  __int16 v98 = (int *)_s16AttributedStringV16InlineAttachmentVMa(0);
  uint64_t v99 = *((void *)v98 - 1);
  uint64_t v100 = *(uint64_t (**)(char *, uint64_t, int *))(v99 + 48);
  int v101 = v100(v96, 1, v98);
  int v102 = v100(v97, 1, v98);
  if (!v101)
  {
    if (v102)
    {
      sub_1002CC158((uint64_t)v96, _s16AttributedStringV16InlineAttachmentVMa);
      goto LABEL_57;
    }
    *(void *)int v96 = *(void *)v97;
    *((void *)v96 + 1) = *((void *)v97 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((void *)v96 + 2) = *((void *)v97 + 2);
    *((void *)v96 + 3) = *((void *)v97 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v108 = v98[6];
    char v109 = &v96[v108];
    int v110 = &v97[v108];
    int v111 = v147(&v96[v108], 1, v148);
    int v112 = v147(v110, 1, v148);
    if (v111)
    {
      if (!v112)
      {
        (*(void (**)(char *, char *, uint64_t))(v143 + 16))(v109, v110, v148);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v143 + 56))(v109, 0, 1, v148);
LABEL_70:
        uint64_t v122 = v98[7];
        uint64_t v123 = &v96[v122];
        uint64_t v124 = &v97[v122];
        *(void *)uint64_t v123 = *v124;
        *((void *)v123 + 1) = v124[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v125 = v98[8];
        char v126 = &v96[v125];
        unint64_t v127 = &v97[v125];
        *(void *)char v126 = *v127;
        *((void *)v126 + 1) = v127[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    else
    {
      if (!v112)
      {
        (*(void (**)(char *, char *, uint64_t))(v143 + 24))(v109, v110, v148);
        goto LABEL_70;
      }
      (*(void (**)(char *, uint64_t))(v143 + 8))(v109, v148);
    }
    uint64_t v121 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    memcpy(v109, v110, *(void *)(*(void *)(v121 - 8) + 64));
    goto LABEL_70;
  }
  if (v102)
  {
LABEL_57:
    uint64_t v107 = sub_10002F214(&qword_1006A2018);
    memcpy(v96, v97, *(void *)(*(void *)(v107 - 8) + 64));
    return a1;
  }
  *(void *)int v96 = *(void *)v97;
  *((void *)v96 + 1) = *((void *)v97 + 1);
  *((void *)v96 + 2) = *((void *)v97 + 2);
  *((void *)v96 + 3) = *((void *)v97 + 3);
  uint64_t v103 = v98[6];
  id v104 = &v96[v103];
  id v105 = &v97[v103];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v147(v105, 1, v148))
  {
    uint64_t v106 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    memcpy(v104, v105, *(void *)(*(void *)(v106 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v143 + 16))(v104, v105, v148);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v143 + 56))(v104, 0, 1, v148);
  }
  uint64_t v113 = v98[7];
  uint64_t v114 = &v96[v113];
  uint64_t v115 = &v97[v113];
  *(void *)uint64_t v114 = *v115;
  *((void *)v114 + 1) = v115[1];
  uint64_t v116 = v98[8];
  uint64_t v117 = &v96[v116];
  uint64_t v118 = &v97[v116];
  *(void *)uint64_t v117 = *v118;
  *((void *)v117 + 1) = v118[1];
  uint64_t v119 = *(void (**)(char *, void, uint64_t, int *))(v99 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v119(v96, 0, 1, v98);
  return a1;
}

uint64_t sub_1002D0B08(uint64_t a1)
{
  return a1;
}

uint64_t sub_1002D0B3C(uint64_t a1)
{
  return a1;
}

_OWORD *sub_1002D0B6C(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  int v70 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v68 = v10;
  if (v70(v8, 1, v9))
  {
    uint64_t v11 = sub_10002F214((uint64_t *)&unk_10069C990);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[6];
  int v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for Date();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v71 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  uint64_t v69 = v9;
  if (v71(v14, 1, v15))
  {
    uint64_t v17 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = a3[8];
  uint64_t v20 = (char *)a1 + v18;
  int v21 = (char *)a2 + v18;
  *((void *)v20 + 8) = *((void *)v21 + 8);
  long long v22 = *((_OWORD *)v21 + 3);
  *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
  *((_OWORD *)v20 + 3) = v22;
  long long v23 = *((_OWORD *)v21 + 1);
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *((_OWORD *)v20 + 1) = v23;
  uint64_t v24 = (_WORD *)((char *)a1 + v19);
  uint64_t v25 = (_WORD *)((char *)a2 + v19);
  uint64_t v26 = (int *)_s16AttributedStringV14ParagraphStyleVMa(0);
  uint64_t v27 = *((void *)v26 - 1);
  if ((*(unsigned int (**)(_WORD *, uint64_t, int *))(v27 + 48))(v25, 1, v26))
  {
    uint64_t v28 = sub_10002F214(&qword_1006A2020);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    uint64_t v65 = v27;
    uint64_t v66 = v16;
    uint64_t v67 = v15;
    *uint64_t v24 = *v25;
    uint64_t v29 = *((void *)v25 + 2);
    *((void *)v24 + 1) = *((void *)v25 + 1);
    *((void *)v24 + 2) = v29;
    *((unsigned char *)v24 + 24) = *((unsigned char *)v25 + 24);
    uint64_t v30 = v26[8];
    long long v31 = (char *)v24 + v30;
    long long v32 = (char *)v25 + v30;
    uint64_t v33 = _s16AttributedStringV13ChecklistItemVMa(0);
    uint64_t v34 = *(void *)(v33 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
    {
      uint64_t v35 = sub_10002F214(&qword_1006A2030);
      memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
      uint64_t v36 = v69;
    }
    else
    {
      uint64_t v64 = v31;
      uint64_t v37 = v31;
      uint64_t v36 = v69;
      (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v37, v32, v69);
      v64[*(int *)(v33 + 20)] = v32[*(int *)(v33 + 20)];
      (*(void (**)(void))(v34 + 56))();
    }
    uint64_t v38 = v26[9];
    uint64_t v39 = (char *)v24 + v38;
    uint64_t v40 = (char *)v25 + v38;
    *(void *)uint64_t v39 = *(void *)v40;
    v39[8] = v40[8];
    uint64_t v41 = v26[10];
    uint64_t v42 = (char *)v24 + v41;
    uint64_t v43 = (char *)v25 + v41;
    uint64_t v15 = v67;
    if (v70((char *)v25 + v41, 1, v36))
    {
      uint64_t v44 = sub_10002F214((uint64_t *)&unk_10069C990);
      memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v42, v43, v36);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v68 + 56))(v42, 0, 1, v36);
    }
    (*(void (**)(_WORD *, void, uint64_t, int *))(v65 + 56))(v24, 0, 1, v26);
    uint64_t v16 = v66;
  }
  uint64_t v45 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v46 = (char *)a1 + v45;
  uint64_t v47 = (char *)a2 + v45;
  uint64_t v48 = type metadata accessor for URL();
  uint64_t v49 = *(void *)(v48 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
  {
    uint64_t v50 = sub_10002F214(&qword_10069B310);
    memcpy(v46, v47, *(void *)(*(void *)(v50 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v46, v47, v48);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
  }
  uint64_t v51 = a3[12];
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  *(_OWORD *)((char *)a1 + v51) = *(_OWORD *)((char *)a2 + v51);
  uint64_t v52 = a3[13];
  int v53 = (_OWORD *)((char *)a1 + v52);
  uint64_t v54 = (_OWORD *)((char *)a2 + v52);
  uint64_t v55 = (int *)_s16AttributedStringV16InlineAttachmentVMa(0);
  uint64_t v56 = *((void *)v55 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v56 + 48))(v54, 1, v55))
  {
    uint64_t v57 = sub_10002F214(&qword_1006A2018);
    memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
  }
  else
  {
    long long v58 = v54[1];
    *int v53 = *v54;
    v53[1] = v58;
    uint64_t v59 = v55[6];
    uint64_t v60 = (char *)v53 + v59;
    uint64_t v61 = (char *)v54 + v59;
    if (v71((char *)v54 + v59, 1, v15))
    {
      uint64_t v62 = sub_10002F214((uint64_t *)&unk_1006A3E20);
      memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v60, v61, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v60, 0, 1, v15);
    }
    *(_OWORD *)((char *)v53 + v55[7]) = *(_OWORD *)((char *)v54 + v55[7]);
    *(_OWORD *)((char *)v53 + v55[8]) = *(_OWORD *)((char *)v54 + v55[8]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v56 + 56))(v53, 0, 1, v55);
  }
  return a1;
}

_OWORD *sub_1002D12BC(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  unsigned int v12 = v11(v7, 1, v9);
  unsigned int v13 = v11(v8, 1, v9);
  uint64_t v129 = v10;
  uint64_t v132 = v9;
  uint64_t v133 = (uint64_t (*)(void *, uint64_t, uint64_t))v11;
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_10002F214((uint64_t *)&unk_10069C990);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = type metadata accessor for Date();
  uint64_t v134 = *(void *)(v18 - 8);
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v134 + 48);
  int v20 = v19(v16, 1, v18);
  uint64_t v130 = v19;
  int v21 = v19(v17, 1, v18);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v134 + 32))(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v134 + 56))(v16, 0, 1, v18);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v134 + 8))(v16, v18);
LABEL_12:
    uint64_t v22 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    memcpy(v16, v17, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v134 + 40))(v16, v17, v18);
LABEL_13:
  uint64_t v23 = a3[7];
  uint64_t v24 = (uint64_t)a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  uint64_t v131 = v18;
  if (*(void *)((char *)a1 + v23 + 8) == 1)
  {
LABEL_16:
    long long v27 = *((_OWORD *)v25 + 3);
    *(_OWORD *)(v24 + 32) = *((_OWORD *)v25 + 2);
    *(_OWORD *)(v24 + 48) = v27;
    *(void *)(v24 + 64) = *((void *)v25 + 8);
    long long v28 = *((_OWORD *)v25 + 1);
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    *(_OWORD *)(v24 + 16) = v28;
    goto LABEL_17;
  }
  uint64_t v26 = *((void *)v25 + 1);
  if (v26 == 1)
  {
    sub_1002D0B3C(v24);
    goto LABEL_16;
  }
  *(void *)uint64_t v24 = *(void *)v25;
  *(void *)(v24 + 8) = v26;
  swift_bridgeObjectRelease();
  *(void *)(v24 + 16) = *((void *)v25 + 2);
  *(unsigned char *)(v24 + 24) = v25[24];
  *(_DWORD *)(v24 + 25) = *(_DWORD *)(v25 + 25);
  *(void *)(v24 + 32) = *((void *)v25 + 4);
  *(unsigned char *)(v24 + 40) = v25[40];
  if (*(void *)(v24 + 56))
  {
    uint64_t v47 = *((void *)v25 + 7);
    if (v47)
    {
      *(void *)(v24 + 48) = *((void *)v25 + 6);
      *(void *)(v24 + 56) = v47;
      swift_bridgeObjectRelease();
      *(void *)(v24 + 64) = *((void *)v25 + 8);
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
    sub_1002D0B08(v24 + 48);
  }
  *(_OWORD *)(v24 + 48) = *((_OWORD *)v25 + 3);
  *(void *)(v24 + 64) = *((void *)v25 + 8);
LABEL_17:
  uint64_t v29 = a3[8];
  uint64_t v30 = (uint64_t)a1 + v29;
  long long v31 = (char *)a2 + v29;
  long long v32 = (int *)_s16AttributedStringV14ParagraphStyleVMa(0);
  __src = (void *)*((void *)v32 - 1);
  uint64_t v33 = (uint64_t (*)(uint64_t, uint64_t, int *))__src[6];
  int v34 = v33(v30, 1, v32);
  int v35 = v33((uint64_t)v31, 1, v32);
  if (!v34)
  {
    if (v35)
    {
      sub_1002CC158(v30, _s16AttributedStringV14ParagraphStyleVMa);
      goto LABEL_23;
    }
    *(_WORD *)uint64_t v30 = *(_WORD *)v31;
    uint64_t v48 = *((void *)v31 + 2);
    *(void *)(v30 + 8) = *((void *)v31 + 1);
    *(void *)(v30 + 16) = v48;
    *(unsigned char *)(v30 + 24) = v31[24];
    uint64_t v49 = v32[8];
    uint64_t v50 = v30 + v49;
    __srca = &v31[v49];
    uint64_t v51 = _s16AttributedStringV13ChecklistItemVMa(0);
    uint64_t v124 = *(void *)(v51 - 8);
    uint64_t v52 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v124 + 48);
    uint64_t v125 = v50;
    LODWORD(v50) = v52(v50, 1, v51);
    int v53 = v52((uint64_t)__srca, 1, v51);
    if (v50)
    {
      uint64_t v55 = v132;
      uint64_t v54 = v133;
      if (!v53)
      {
        uint64_t v101 = v129;
        (*(void (**)(uint64_t, char *, uint64_t))(v129 + 32))(v125, __srca, v132);
        *(unsigned char *)(v125 + *(int *)(v51 + 20)) = __srca[*(int *)(v51 + 20)];
        (*(void (**)(uint64_t, void, uint64_t))(v124 + 56))(v125, 0, 1);
        goto LABEL_69;
      }
      size_t v56 = *(void *)(*(void *)(sub_10002F214(&qword_1006A2030) - 8) + 64);
      uint64_t v57 = (void *)v125;
    }
    else
    {
      uint64_t v55 = v132;
      uint64_t v54 = v133;
      if (!v53)
      {
        uint64_t v101 = v129;
        (*(void (**)(uint64_t, char *, uint64_t))(v129 + 40))(v125, __srca, v132);
        *(unsigned char *)(v125 + *(int *)(v51 + 20)) = __srca[*(int *)(v51 + 20)];
        goto LABEL_69;
      }
      sub_1002CC158(v125, _s16AttributedStringV13ChecklistItemVMa);
      size_t v56 = *(void *)(*(void *)(sub_10002F214(&qword_1006A2030) - 8) + 64);
      uint64_t v57 = (void *)v125;
    }
    memcpy(v57, __srca, v56);
    uint64_t v101 = v129;
LABEL_69:
    uint64_t v114 = v32[9];
    uint64_t v115 = v30 + v114;
    uint64_t v116 = &v31[v114];
    *(void *)uint64_t v115 = *(void *)v116;
    *(unsigned char *)(v115 + 8) = v116[8];
    uint64_t v117 = v32[10];
    uint64_t v118 = (void *)(v30 + v117);
    uint64_t v119 = &v31[v117];
    int v120 = v54(v118, 1, v55);
    uint64_t v121 = (uint64_t (*)(char *, uint64_t, uint64_t))v54;
    int v122 = v120;
    int v123 = v121(v119, 1, v55);
    if (v122)
    {
      if (!v123)
      {
        (*(void (**)(void *, char *, uint64_t))(v101 + 32))(v118, v119, v55);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v101 + 56))(v118, 0, 1, v55);
        goto LABEL_38;
      }
    }
    else
    {
      if (!v123)
      {
        (*(void (**)(void *, char *, uint64_t))(v101 + 40))(v118, v119, v55);
        goto LABEL_38;
      }
      (*(void (**)(void *, uint64_t))(v101 + 8))(v118, v55);
    }
    size_t v44 = *(void *)(*(void *)(sub_10002F214((uint64_t *)&unk_10069C990) - 8) + 64);
    uint64_t v45 = v118;
    uint64_t v46 = v119;
LABEL_24:
    memcpy(v45, v46, v44);
    goto LABEL_38;
  }
  if (v35)
  {
LABEL_23:
    size_t v44 = *(void *)(*(void *)(sub_10002F214(&qword_1006A2020) - 8) + 64);
    uint64_t v45 = (void *)v30;
    uint64_t v46 = v31;
    goto LABEL_24;
  }
  *(_WORD *)uint64_t v30 = *(_WORD *)v31;
  uint64_t v36 = *((void *)v31 + 2);
  *(void *)(v30 + 8) = *((void *)v31 + 1);
  *(void *)(v30 + 16) = v36;
  *(unsigned char *)(v30 + 24) = v31[24];
  uint64_t v37 = v32[8];
  uint64_t v38 = (void *)(v30 + v37);
  uint64_t v39 = &v31[v37];
  uint64_t v40 = _s16AttributedStringV13ChecklistItemVMa(0);
  uint64_t v41 = *(void *)(v40 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
  {
    uint64_t v42 = sub_10002F214(&qword_1006A2030);
    memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64));
    uint64_t v43 = v132;
  }
  else
  {
    long long v58 = v38;
    char v126 = v38;
    uint64_t v43 = v132;
    (*(void (**)(void *, char *, uint64_t))(v129 + 32))(v58, v39, v132);
    v126[*(int *)(v40 + 20)] = v39[*(int *)(v40 + 20)];
    (*(void (**)(void))(v41 + 56))();
  }
  uint64_t v59 = v32[9];
  uint64_t v60 = v30 + v59;
  uint64_t v61 = &v31[v59];
  *(void *)uint64_t v60 = *(void *)v61;
  *(unsigned char *)(v60 + 8) = v61[8];
  uint64_t v62 = v32[10];
  long long v63 = (void *)(v30 + v62);
  uint64_t v64 = &v31[v62];
  if (v133(&v31[v62], 1, v43))
  {
    uint64_t v65 = sub_10002F214((uint64_t *)&unk_10069C990);
    memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v129 + 32))(v63, v64, v43);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v129 + 56))(v63, 0, 1, v43);
  }
  ((void (*)(uint64_t, void, uint64_t, int *))__src[7])(v30, 0, 1, v32);
LABEL_38:
  uint64_t v66 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v67 = (char *)a1 + v66;
  uint64_t v68 = (char *)a2 + v66;
  uint64_t v69 = type metadata accessor for URL();
  uint64_t v70 = *(void *)(v69 - 8);
  uint64_t v71 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v70 + 48);
  int v72 = v71(v67, 1, v69);
  int v73 = v71(v68, 1, v69);
  if (v72)
  {
    if (!v73)
    {
      (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v67, v68, v69);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
      goto LABEL_44;
    }
    goto LABEL_43;
  }
  if (v73)
  {
    (*(void (**)(char *, uint64_t))(v70 + 8))(v67, v69);
LABEL_43:
    uint64_t v74 = sub_10002F214(&qword_10069B310);
    memcpy(v67, v68, *(void *)(*(void *)(v74 - 8) + 64));
    goto LABEL_44;
  }
  (*(void (**)(char *, char *, uint64_t))(v70 + 40))(v67, v68, v69);
LABEL_44:
  uint64_t v75 = a3[12];
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  uint64_t v76 = (void *)((char *)a1 + v75);
  uint64_t v77 = (uint64_t *)((char *)a2 + v75);
  uint64_t v79 = *v77;
  uint64_t v78 = v77[1];
  *uint64_t v76 = v79;
  v76[1] = v78;
  swift_bridgeObjectRelease();
  uint64_t v80 = a3[13];
  long long v81 = (char *)a1 + v80;
  uint64_t v82 = (void *)((char *)a2 + v80);
  uint64_t v83 = (int *)_s16AttributedStringV16InlineAttachmentVMa(0);
  uint64_t v84 = *((void *)v83 - 1);
  uint64_t v85 = *(uint64_t (**)(char *, uint64_t, int *))(v84 + 48);
  int v86 = v85(v81, 1, v83);
  int v87 = v85((char *)v82, 1, v83);
  if (!v86)
  {
    if (v87)
    {
      sub_1002CC158((uint64_t)v81, _s16AttributedStringV16InlineAttachmentVMa);
      goto LABEL_50;
    }
    uint64_t v94 = v82[1];
    *(void *)long long v81 = *v82;
    *((void *)v81 + 1) = v94;
    swift_bridgeObjectRelease();
    uint64_t v95 = v82[3];
    *((void *)v81 + 2) = v82[2];
    *((void *)v81 + 3) = v95;
    swift_bridgeObjectRelease();
    uint64_t v96 = v83[6];
    id v97 = &v81[v96];
    __int16 v98 = (char *)v82 + v96;
    int v99 = v130(&v81[v96], 1, v131);
    int v100 = v130(v98, 1, v131);
    if (v99)
    {
      if (!v100)
      {
        (*(void (**)(char *, char *, uint64_t))(v134 + 32))(v97, v98, v131);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v134 + 56))(v97, 0, 1, v131);
LABEL_65:
        uint64_t v103 = v83[7];
        id v104 = &v81[v103];
        id v105 = (void *)((char *)v82 + v103);
        uint64_t v107 = *v105;
        uint64_t v106 = v105[1];
        *(void *)id v104 = v107;
        *((void *)v104 + 1) = v106;
        swift_bridgeObjectRelease();
        uint64_t v108 = v83[8];
        char v109 = &v81[v108];
        int v110 = (void *)((char *)v82 + v108);
        uint64_t v112 = *v110;
        uint64_t v111 = v110[1];
        *(void *)char v109 = v112;
        *((void *)v109 + 1) = v111;
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    else
    {
      if (!v100)
      {
        (*(void (**)(char *, char *, uint64_t))(v134 + 40))(v97, v98, v131);
        goto LABEL_65;
      }
      (*(void (**)(char *, uint64_t))(v134 + 8))(v97, v131);
    }
    uint64_t v102 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    memcpy(v97, v98, *(void *)(*(void *)(v102 - 8) + 64));
    goto LABEL_65;
  }
  if (v87)
  {
LABEL_50:
    uint64_t v93 = sub_10002F214(&qword_1006A2018);
    memcpy(v81, v82, *(void *)(*(void *)(v93 - 8) + 64));
    return a1;
  }
  long long v88 = *((_OWORD *)v82 + 1);
  *(_OWORD *)long long v81 = *(_OWORD *)v82;
  *((_OWORD *)v81 + 1) = v88;
  uint64_t v89 = v83[6];
  int v90 = &v81[v89];
  uint64_t v91 = (char *)v82 + v89;
  if (v130((char *)v82 + v89, 1, v131))
  {
    uint64_t v92 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    memcpy(v90, v91, *(void *)(*(void *)(v92 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v134 + 32))(v90, v91, v131);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v134 + 56))(v90, 0, 1, v131);
  }
  *(_OWORD *)&v81[v83[7]] = *(_OWORD *)((char *)v82 + v83[7]);
  *(_OWORD *)&v81[v83[8]] = *(_OWORD *)((char *)v82 + v83[8]);
  (*(void (**)(char *, void, uint64_t, int *))(v84 + 56))(v81, 0, 1, v83);
  return a1;
}

uint64_t sub_1002D20BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002D20D0);
}

uint64_t sub_1002D20D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10002F214((uint64_t *)&unk_10069C990);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[5];
LABEL_9:
    unsigned int v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v13(a1 + v9, a2, v7);
  }
  uint64_t v10 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[6];
    goto LABEL_9;
  }
  uint64_t v11 = sub_10002F214(&qword_1006A2020);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v7 = v11;
    uint64_t v8 = *(void *)(v11 - 8);
    uint64_t v9 = a3[8];
    goto LABEL_9;
  }
  uint64_t v12 = sub_10002F214(&qword_10069B310);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v7 = v12;
    uint64_t v8 = *(void *)(v12 - 8);
    uint64_t v9 = a3[10];
    goto LABEL_9;
  }
  if (a2 == 2147483646)
  {
    unint64_t v15 = *(void *)(a1 + a3[12] + 8);
    if (v15 >= 0xFFFFFFFF) {
      LODWORD(v15) = -1;
    }
    int v16 = v15 - 1;
    if (v16 < 0) {
      int v16 = -1;
    }
    return (v16 + 1);
  }
  else
  {
    uint64_t v17 = sub_10002F214(&qword_1006A2018);
    uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
    uint64_t v19 = v17;
    uint64_t v20 = a1 + a3[13];
    return v18(v20, a2, v19);
  }
}

uint64_t sub_1002D2308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002D231C);
}

uint64_t sub_1002D231C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_10002F214((uint64_t *)&unk_10069C990);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_9:
    unint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v15(a1 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[6];
    goto LABEL_9;
  }
  uint64_t v13 = sub_10002F214(&qword_1006A2020);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a4[8];
    goto LABEL_9;
  }
  uint64_t result = sub_10002F214(&qword_10069B310);
  if (*(_DWORD *)(*(void *)(result - 8) + 84) == a3)
  {
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[10];
    goto LABEL_9;
  }
  if (a3 == 2147483646)
  {
    *(void *)(a1 + a4[12] + 8) = a2;
  }
  else
  {
    uint64_t v16 = sub_10002F214(&qword_1006A2018);
    uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    uint64_t v18 = v16;
    uint64_t v19 = a1 + a4[13];
    return v17(v19, a2, a2, v18);
  }
  return result;
}

void sub_1002D2548()
{
  sub_1002CDA20(319, (unint64_t *)&unk_1006A2150, (void (*)(uint64_t))&type metadata accessor for UUID);
  if (v0 <= 0x3F)
  {
    sub_1002CDA20(319, (unint64_t *)&qword_1006A6C30, (void (*)(uint64_t))&type metadata accessor for Date);
    if (v1 <= 0x3F)
    {
      sub_1002CDA20(319, &qword_1006A22A0, (void (*)(uint64_t))_s16AttributedStringV14ParagraphStyleVMa);
      if (v2 <= 0x3F)
      {
        sub_1002CDA20(319, (unint64_t *)&qword_10069EFF0, (void (*)(uint64_t))&type metadata accessor for URL);
        if (v3 <= 0x3F)
        {
          sub_1002CDA20(319, (unint64_t *)&unk_1006A22A8, (void (*)(uint64_t))_s16AttributedStringV16InlineAttachmentVMa);
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

uint64_t _s16AttributedStringV4FontVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 56);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s16AttributedStringV4FontVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_DWORD *)(a1 + 25) = *(_DWORD *)(a2 + 25);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  if (v5)
  {
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v5;
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
  }
  return a1;
}

uint64_t _s16AttributedStringV4FontVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(unsigned char *)(a1 + 27) = *(unsigned char *)(a2 + 27);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  uint64_t v5 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v5;
  uint64_t v6 = (_OWORD *)(a1 + 48);
  uint64_t v7 = (_OWORD *)(a2 + 48);
  uint64_t v8 = *(void *)(a2 + 56);
  if (*(void *)(a1 + 56))
  {
    if (v8)
    {
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1002D0B08(a1 + 48);
      uint64_t v9 = *(void *)(a2 + 64);
      *uint64_t v6 = *v7;
      *(void *)(a1 + 64) = v9;
    }
  }
  else if (v8)
  {
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v10 = *v7;
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *uint64_t v6 = v10;
  }
  return a1;
}

__n128 _s16AttributedStringV4FontVwtk(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t _s16AttributedStringV4FontVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_DWORD *)(a1 + 25) = *(_DWORD *)(a2 + 25);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  if (!*(void *)(a1 + 56)) {
    goto LABEL_5;
  }
  uint64_t v5 = *(void *)(a2 + 56);
  if (!v5)
  {
    sub_1002D0B08(a1 + 48);
LABEL_5:
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    return a1;
  }
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s16AttributedStringV4FontVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 72)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s16AttributedStringV4FontVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 72) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *_s16AttributedStringV4FontVMa()
{
  return &_s16AttributedStringV4FontVN;
}

uint64_t _s16AttributedStringV5ColorVwxx_0()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s16AttributedStringV5ColorVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s16AttributedStringV5ColorVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s16AttributedStringV5ColorVwta_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s16AttributedStringV5ColorVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1002D2CD4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s16AttributedStringVMa()
{
  return &_s16AttributedStringVN;
}

uint64_t sub_1002D2D24(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1954047348 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1002D2E14(void *a1)
{
  uint64_t v3 = sub_10002F214(&qword_1006A2450);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[4];
  sub_10015E154(a1, a1[3]);
  sub_1002D434C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    sub_100018FE8((uint64_t)a1);
  }
  else
  {
    v9[31] = 0;
    uint64_t v7 = KeyedDecodingContainer.decode(_:forKey:)();
    sub_10002F214(&qword_1006A2460);
    v9[15] = 1;
    sub_1002D43A0(&qword_1006A2468, &qword_1006A2470);
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    sub_100018FE8((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_1002D3070(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6563617073 && a2 == 0xE500000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656E6F706D6F63 && a2 == 0xEA00000000007374)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1002D3168(void *a1)
{
  uint64_t v3 = sub_10002F214(&qword_1006A22F8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[4];
  sub_10015E154(a1, a1[3]);
  sub_1002D33B0();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    sub_100018FE8((uint64_t)a1);
  }
  else
  {
    v9[31] = 0;
    uint64_t v7 = KeyedDecodingContainer.decode(_:forKey:)();
    sub_10002F214(&qword_1006A2308);
    v9[15] = 1;
    sub_1002D3404(&qword_1006A2310);
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    sub_100018FE8((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_1002D33B0()
{
  unint64_t result = qword_1006A2300;
  if (!qword_1006A2300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A2300);
  }
  return result;
}

uint64_t sub_1002D3404(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001DFF4(&qword_1006A2308);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1002D3468()
{
  unint64_t result = qword_1006A2330;
  if (!qword_1006A2330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A2330);
  }
  return result;
}

uint64_t sub_1002D34BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002D3504(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_1002D356C()
{
  unint64_t result = qword_1006A2358;
  if (!qword_1006A2358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A2358);
  }
  return result;
}

unint64_t sub_1002D35C0()
{
  unint64_t result = qword_1006A2360;
  if (!qword_1006A2360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A2360);
  }
  return result;
}

unint64_t sub_1002D3614()
{
  unint64_t result = qword_1006A2368;
  if (!qword_1006A2368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A2368);
  }
  return result;
}

unint64_t sub_1002D3668()
{
  unint64_t result = qword_1006A2380;
  if (!qword_1006A2380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A2380);
  }
  return result;
}

unint64_t sub_1002D36BC()
{
  unint64_t result = qword_1006A2388;
  if (!qword_1006A2388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A2388);
  }
  return result;
}

unint64_t sub_1002D3710()
{
  unint64_t result = qword_1006A23A0;
  if (!qword_1006A23A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A23A0);
  }
  return result;
}

unint64_t sub_1002D3764()
{
  unint64_t result = qword_1006A23B8;
  if (!qword_1006A23B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A23B8);
  }
  return result;
}

void sub_1002D37B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    sub_10024BFB8(a7, a8);
  }
}

unint64_t sub_1002D3818()
{
  unint64_t result = qword_1006A23C0;
  if (!qword_1006A23C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A23C0);
  }
  return result;
}

unint64_t sub_1002D386C()
{
  unint64_t result = qword_1006A23C8;
  if (!qword_1006A23C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A23C8);
  }
  return result;
}

unint64_t sub_1002D38C0()
{
  unint64_t result = qword_1006A23D8;
  if (!qword_1006A23D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A23D8);
  }
  return result;
}

unint64_t sub_1002D3914()
{
  unint64_t result = qword_1006A23E0;
  if (!qword_1006A23E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A23E0);
  }
  return result;
}

unint64_t sub_1002D3968()
{
  unint64_t result = qword_1006A23F8;
  if (!qword_1006A23F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A23F8);
  }
  return result;
}

unint64_t sub_1002D39BC()
{
  unint64_t result = qword_1006A2400;
  if (!qword_1006A2400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A2400);
  }
  return result;
}

unint64_t sub_1002D3A10()
{
  unint64_t result = qword_1006A2410;
  if (!qword_1006A2410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A2410);
  }
  return result;
}

unint64_t sub_1002D3A64()
{
  unint64_t result = qword_1006A2418;
  if (!qword_1006A2418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A2418);
  }
  return result;
}

uint64_t sub_1002D3AB8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7A6953746E696F70 && a2 == 0xE900000000000065 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x646C6F427369 && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x63696C6174497369 && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6C7265646E557369 && a2 == 0xEB00000000656E69 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656B697274537369 && a2 == 0xEF6867756F726874 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7263737265707573 && a2 == 0xEB00000000747069 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x726F6C6F63 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_1002D3E44@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10002F214(&qword_1006A2428);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10015E154(a1, a1[3]);
  sub_1002D420C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    sub_100018FE8((uint64_t)a1);
    swift_bridgeObjectRelease();
    return sub_10024BFB8(0, 0);
  }
  else
  {
    LOBYTE(v27) = 0;
    uint64_t v9 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v11 = v10;
    LOBYTE(v27) = 1;
    swift_bridgeObjectRetain();
    uint64_t v12 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    int v30 = v13;
    uint64_t v26 = v12;
    LOBYTE(v27) = 2;
    int v25 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    LOBYTE(v27) = 3;
    int v24 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    LOBYTE(v27) = 4;
    int v23 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    LOBYTE(v27) = 5;
    int v22 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    LOBYTE(v27) = 6;
    uint64_t v14 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    HIDWORD(v20) = v15;
    uint64_t v21 = v14;
    char v31 = 7;
    sub_1002D4260();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v16 = v27;
    uint64_t v17 = v28;
    uint64_t v18 = v29;
    sub_1002D42B4(v27, v28);
    sub_10024BFB8(0, 0);
    swift_bridgeObjectRetain();
    sub_1002D42B4(v16, v17);
    sub_10024BFB8(v16, v17);
    swift_bridgeObjectRelease();
    sub_100018FE8((uint64_t)a1);
    swift_bridgeObjectRelease();
    uint64_t result = sub_10024BFB8(v16, v17);
    *(void *)a2 = v9;
    *(void *)(a2 + 8) = v11;
    *(void *)(a2 + 16) = v26;
    *(unsigned char *)(a2 + 24) = v30 & 1;
    *(unsigned char *)(a2 + 25) = v25;
    *(unsigned char *)(a2 + 26) = v24;
    *(unsigned char *)(a2 + 27) = v23;
    *(unsigned char *)(a2 + 28) = v22;
    *(void *)(a2 + 32) = v21;
    *(unsigned char *)(a2 + 40) = BYTE4(v20) & 1;
    *(void *)(a2 + 48) = v16;
    *(void *)(a2 + 56) = v17;
    *(void *)(a2 + 64) = v18;
  }
  return result;
}

unint64_t sub_1002D420C()
{
  unint64_t result = qword_1006A2430;
  if (!qword_1006A2430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A2430);
  }
  return result;
}

unint64_t sub_1002D4260()
{
  unint64_t result = qword_1006A2438;
  if (!qword_1006A2438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A2438);
  }
  return result;
}

uint64_t sub_1002D42B4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_1002D42F8()
{
  unint64_t result = qword_1006A2448;
  if (!qword_1006A2448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A2448);
  }
  return result;
}

unint64_t sub_1002D434C()
{
  unint64_t result = qword_1006A2458;
  if (!qword_1006A2458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A2458);
  }
  return result;
}

uint64_t sub_1002D43A0(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001DFF4(&qword_1006A2460);
    sub_1002D34BC(a2, (void (*)(uint64_t))_s16AttributedStringV9AttributeVMa);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *_s16AttributedStringV10CodingKeysOMa()
{
  return &_s16AttributedStringV10CodingKeysON;
}

unsigned char *_s16AttributedStringV4FontV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002D4514);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *_s16AttributedStringV4FontV10CodingKeysOMa()
{
  return &_s16AttributedStringV4FontV10CodingKeysON;
}

ValueMetadata *_s16AttributedStringV9AttributeV10CodingKeysOMa()
{
  return &_s16AttributedStringV9AttributeV10CodingKeysON;
}

ValueMetadata *_s16AttributedStringV16InlineAttachmentV10CodingKeysOMa()
{
  return &_s16AttributedStringV16InlineAttachmentV10CodingKeysON;
}

unsigned char *_s16AttributedStringV14ParagraphStyleV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002D4648);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *_s16AttributedStringV14ParagraphStyleV10CodingKeysOMa()
{
  return &_s16AttributedStringV14ParagraphStyleV10CodingKeysON;
}

ValueMetadata *_s16AttributedStringV13ChecklistItemV10CodingKeysOMa()
{
  return &_s16AttributedStringV13ChecklistItemV10CodingKeysON;
}

ValueMetadata *_s16AttributedStringV5ColorV10CodingKeysOMa()
{
  return &_s16AttributedStringV5ColorV10CodingKeysON;
}

ValueMetadata *_s16AttributedStringV10AlignmentsOMa()
{
  return &_s16AttributedStringV10AlignmentsON;
}

unsigned char *_s16AttributedStringV19ParagraphStyleNamesOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002D477CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *_s16AttributedStringV19ParagraphStyleNamesOMa()
{
  return &_s16AttributedStringV19ParagraphStyleNamesON;
}

ValueMetadata *_s16AttributedStringV17WritingDirectionsOMa()
{
  return &_s16AttributedStringV17WritingDirectionsON;
}

unsigned char *_s16AttributedStringV10AlignmentsOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002D4890);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s16AttributedStringV13EmphasisStyleOMa()
{
  return &_s16AttributedStringV13EmphasisStyleON;
}

ValueMetadata *_s16AttributedStringV14AttributeRangeVMa()
{
  return &_s16AttributedStringV14AttributeRangeVN;
}

unint64_t sub_1002D48DC()
{
  unint64_t result = qword_1006A2490;
  if (!qword_1006A2490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A2490);
  }
  return result;
}

unint64_t sub_1002D4934()
{
  unint64_t result = qword_1006A2498;
  if (!qword_1006A2498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A2498);
  }
  return result;
}

unint64_t sub_1002D498C()
{
  unint64_t result = qword_1006A24A0;
  if (!qword_1006A24A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A24A0);
  }
  return result;
}

unint64_t sub_1002D49E4()
{
  unint64_t result = qword_1006A24A8;
  if (!qword_1006A24A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A24A8);
  }
  return result;
}

unint64_t sub_1002D4A3C()
{
  unint64_t result = qword_1006A24B0;
  if (!qword_1006A24B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A24B0);
  }
  return result;
}

unint64_t sub_1002D4A94()
{
  unint64_t result = qword_1006A24B8;
  if (!qword_1006A24B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A24B8);
  }
  return result;
}

unint64_t sub_1002D4AEC()
{
  unint64_t result = qword_1006A24C0;
  if (!qword_1006A24C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A24C0);
  }
  return result;
}

unint64_t sub_1002D4B44()
{
  unint64_t result = qword_1006A24C8;
  if (!qword_1006A24C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A24C8);
  }
  return result;
}

unint64_t sub_1002D4B9C()
{
  unint64_t result = qword_1006A24D0;
  if (!qword_1006A24D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A24D0);
  }
  return result;
}

unint64_t sub_1002D4BF4()
{
  unint64_t result = qword_1006A24D8;
  if (!qword_1006A24D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A24D8);
  }
  return result;
}

unint64_t sub_1002D4C4C()
{
  unint64_t result = qword_1006A24E0;
  if (!qword_1006A24E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A24E0);
  }
  return result;
}

unint64_t sub_1002D4CA4()
{
  unint64_t result = qword_1006A24E8;
  if (!qword_1006A24E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A24E8);
  }
  return result;
}

unint64_t sub_1002D4CFC()
{
  unint64_t result = qword_1006A24F0;
  if (!qword_1006A24F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A24F0);
  }
  return result;
}

unint64_t sub_1002D4D54()
{
  unint64_t result = qword_1006A24F8;
  if (!qword_1006A24F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A24F8);
  }
  return result;
}

unint64_t sub_1002D4DAC()
{
  unint64_t result = qword_1006A2500;
  if (!qword_1006A2500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A2500);
  }
  return result;
}

unint64_t sub_1002D4E04()
{
  unint64_t result = qword_1006A2508;
  if (!qword_1006A2508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A2508);
  }
  return result;
}

unint64_t sub_1002D4E5C()
{
  unint64_t result = qword_1006A2510;
  if (!qword_1006A2510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A2510);
  }
  return result;
}

unint64_t sub_1002D4EB4()
{
  unint64_t result = qword_1006A2518;
  if (!qword_1006A2518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A2518);
  }
  return result;
}

unint64_t sub_1002D4F0C()
{
  unint64_t result = qword_1006A2520;
  if (!qword_1006A2520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A2520);
  }
  return result;
}

unint64_t sub_1002D4F64()
{
  unint64_t result = qword_1006A2528;
  if (!qword_1006A2528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A2528);
  }
  return result;
}

unint64_t sub_1002D4FBC()
{
  unint64_t result = qword_1006A2530;
  if (!qword_1006A2530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A2530);
  }
  return result;
}

unint64_t sub_1002D5014()
{
  unint64_t result = qword_1006A2538;
  if (!qword_1006A2538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A2538);
  }
  return result;
}

unint64_t sub_1002D506C()
{
  unint64_t result = qword_1006A2540;
  if (!qword_1006A2540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A2540);
  }
  return result;
}

unint64_t sub_1002D50C4()
{
  unint64_t result = qword_1006A2548;
  if (!qword_1006A2548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A2548);
  }
  return result;
}

unint64_t sub_1002D511C()
{
  unint64_t result = qword_1006A2550;
  if (!qword_1006A2550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A2550);
  }
  return result;
}

unint64_t sub_1002D5170(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10062C4F0, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 0xA) {
    return 10;
  }
  else {
    return v3;
  }
}

uint64_t sub_1002D51BC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656E6F447369 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1002D52B4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656D6E67696C61 && a2 == 0xE900000000000074 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746E65646E69 && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000100557030 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x73696C6B63656863 && a2 == 0xED00006D65744974 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6F75516B636F6C62 && a2 == 0xEF6C6576654C6574 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 1684632949 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

unint64_t sub_1002D55C0()
{
  unint64_t result = qword_1006A2558;
  if (!qword_1006A2558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A2558);
  }
  return result;
}

unint64_t sub_1002D5614()
{
  unint64_t result = qword_1006A2560;
  if (!qword_1006A2560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A2560);
  }
  return result;
}

unint64_t sub_1002D5668(Swift::String string, Swift::OpaquePointer cases)
{
  object = string._object;
  v3._countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  unint64_t v5 = _findStringSwitchCase(cases:string:)(cases, v3);
  swift_bridgeObjectRelease();
  if (v5 >= 5) {
    return 5;
  }
  else {
    return v5;
  }
}

uint64_t sub_1002D56B0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000018 && a2 == 0x8000000100555010
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4164657461657263 && a2 == 0xE900000000000074 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000100557050 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x74786554746C61 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v5) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1002D58E0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7441737472617473 && a2 == 0xE800000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6874676E656CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1002D59CC(void *a1)
{
  uint64_t v3 = sub_10002F214(&qword_1006A2568);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[3];
  sub_10015E154(a1, v7);
  sub_1002D5F88();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v1)
  {
    v9[15] = 0;
    uint64_t v7 = KeyedDecodingContainer.decode(_:forKey:)();
    v9[14] = 1;
    KeyedDecodingContainer.decode(_:forKey:)();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  }
  sub_100018FE8((uint64_t)a1);
  return v7;
}

uint64_t sub_1002D5B70(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65676E6172 && a2 == 0xE500000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000100557070 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1953394534 && a2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7061726761726170 && a2 == 0xEE00656C79745368 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7369736168706D65 && a2 == 0xED0000656C797453 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 1802398060 && a2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000100557090 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001005570B0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001005570D0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

unint64_t sub_1002D5F88()
{
  unint64_t result = qword_1006A2570;
  if (!qword_1006A2570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A2570);
  }
  return result;
}

unint64_t sub_1002D5FDC()
{
  unint64_t result = qword_1006A2578;
  if (!qword_1006A2578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A2578);
  }
  return result;
}

unint64_t sub_1002D6030()
{
  unint64_t result = qword_1006A2580;
  if (!qword_1006A2580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A2580);
  }
  return result;
}

unsigned char *_s16AttributedStringV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002D6150);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s16AttributedStringV14AttributeRangeV10CodingKeysOMa()
{
  return &_s16AttributedStringV14AttributeRangeV10CodingKeysON;
}

unint64_t sub_1002D618C()
{
  unint64_t result = qword_1006A2590;
  if (!qword_1006A2590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A2590);
  }
  return result;
}

unint64_t sub_1002D61E4()
{
  unint64_t result = qword_1006A2598;
  if (!qword_1006A2598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A2598);
  }
  return result;
}

unint64_t sub_1002D623C()
{
  unint64_t result = qword_1006A25A0;
  if (!qword_1006A25A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A25A0);
  }
  return result;
}

uint64_t sub_1002D62A4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  uint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1002D636C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;
  if (v3 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v5 == v6)
  {
LABEL_20:
    swift_bridgeObjectRelease_n();
    return 1;
  }
  char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v8)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    return 1;
  }
  if (v2 == 1)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v10 = 5;
  while (1)
  {
    uint64_t v11 = v10 - 3;
    if (__OFADD__(v10 - 4, 1)) {
      break;
    }
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v14 = v13;
    if (v12 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v14 == v15)
    {
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v17) {
      goto LABEL_7;
    }
    ++v10;
    if (v11 == v2) {
      goto LABEL_17;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1002D64C4(uint64_t a1, unint64_t a2)
{
  return sub_1002D6550(a1, a2, (uint64_t)&qword_10069E810);
}

BOOL sub_1002D64DC(BOOL result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  int v3 = result;
  if (*(unsigned char *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 33; ; ++i)
  {
    uint64_t v5 = i - 31;
    if (__OFADD__(i - 32, 1)) {
      break;
    }
    int v6 = *(unsigned __int8 *)(a2 + i);
    uint64_t result = v6 == v3;
    if (v6 == v3 || v5 == v2) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1002D653C(uint64_t a1, unint64_t a2)
{
  return sub_1002D6550(a1, a2, (uint64_t)&qword_1006A0070);
}

uint64_t sub_1002D6550(uint64_t a1, unint64_t a2, uint64_t a3)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v6 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      id v7 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_5:
      char v8 = v7;
      sub_100031418(0, (unint64_t *)a3);
      a3 = static NSObject.== infix(_:_:)();

      if (a3)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v5 == 1) {
        goto LABEL_18;
      }
      if (v6) {
        break;
      }
      unint64_t v6 = 5;
      while (1)
      {
        unint64_t v12 = v6 - 3;
        if (__OFADD__(v6 - 4, 1)) {
          break;
        }
        a3 = (uint64_t)*(id *)(a2 + 8 * v6);
        char v13 = static NSObject.== infix(_:_:)();

        if (v13) {
          goto LABEL_6;
        }
        ++v6;
        if (v12 == v5) {
          goto LABEL_18;
        }
      }
      __break(1u);
    }
    a3 = 1;
    while (1)
    {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v10 = a3 + 1;
      if (__OFADD__(a3, 1)) {
        break;
      }
      char v11 = static NSObject.== infix(_:_:)();
      swift_unknownObjectRelease();
      if (v11) {
        goto LABEL_6;
      }
      ++a3;
      if (v10 == v5) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1002D66D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a5 + 16);
  if (v5)
  {
    uint64_t v10 = (uint64_t *)(a5 + 56);
    do
    {
      uint64_t v12 = *(v10 - 1);
      uint64_t v11 = *v10;
      BOOL v13 = *(v10 - 3) == a1 && *(v10 - 2) == a2;
      if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        if (v11)
        {
          if (a4)
          {
            BOOL v14 = v12 == a3 && v11 == a4;
            if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
              return 1;
            }
          }
        }
        else if (!a4)
        {
          return 1;
        }
      }
      v10 += 4;
      --v5;
    }
    while (v5);
  }
  return 0;
}

uint64_t sub_1002D67A0(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v197 = a3;
  uint64_t v196 = a2;
  int v195 = a1;
  uint64_t v203 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v202 = *(void *)(v203 - 8);
  __chkstk_darwin(v203);
  unint64_t v200 = (char *)&v184 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v201 = type metadata accessor for DispatchQoS();
  uint64_t v199 = *(void *)(v201 - 8);
  __chkstk_darwin(v201);
  uint64_t v198 = (char *)&v184 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (uint64_t)&v184 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v208 = (char *)&v184 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  int v193 = (char *)&v184 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v192 = (char *)&v184 - v16;
  __chkstk_darwin(v15);
  unint64_t v18 = (unint64_t)&v184 - v17;
  uint64_t v222 = type metadata accessor for Date();
  int64_t v19 = *(void *)(v222 - 8);
  uint64_t v20 = __chkstk_darwin(v222);
  id v194 = (char *)&v184 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  id v215 = (char *)&v184 - v23;
  __chkstk_darwin(v22);
  v214 = (char *)&v184 - v24;
  uint64_t v25 = sub_10002F214((uint64_t *)&unk_1006A2670);
  __chkstk_darwin(v25 - 8);
  os_signpost_type_t v210 = (char *)&v184 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v213 = type metadata accessor for IndexPath();
  uint64_t v211 = *(void *)(v213 - 8);
  __chkstk_darwin(v213);
  id v207 = (char *)&v184 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_10002F214(&qword_1006A1400);
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v224 = (char *)&v184 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v31 = (unint64_t)sub_1002DB248();
  v237 = (void *)v31;
  unint64_t v32 = sub_10016EBF8((uint64_t)_swiftEmptyArrayStorage);
  id v33 = [*(id *)&v3[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_filterSelection] filterTypeSelections];
  sub_100031418(0, &qword_1006A2680);
  unint64_t v34 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v35 = v34;
  unint64_t v229 = v34;
  if (v34 >> 62) {
    goto LABEL_310;
  }
  uint64_t v36 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  uint64_t v219 = v4;
  uint64_t v228 = v28;
  int64_t v231 = v36;
  if (v36)
  {
    unint64_t v212 = v18;
    uint64_t v187 = v10;
    uint64_t v226 = OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_prefersPopoverEntries;
    uint64_t v227 = OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_selectedInlineEntryItem;
    uint64_t v206 = OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_collectionView;
    unint64_t v233 = v35 & 0xC000000000000001;
    uint64_t v230 = &v4[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_enabledSections];
    swift_beginAccess();
    unint64_t v18 = 0;
    uint64_t v221 = v35 & 0xFFFFFFFFFFFFFF8;
    unint64_t v220 = v35 + 32;
    v223 = (void (**)(char *, uint64_t))(v29 + 8);
    uint64_t v191 = v211 + 16;
    unint64_t v205 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v211 + 56);
    char v204 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v211 + 48);
    id v189 = (void (**)(char *, uint64_t, uint64_t))(v211 + 32);
    char v188 = (void (**)(char *, uint64_t))(v211 + 8);
    v216 = (void (**)(unint64_t, char *, uint64_t))(v19 + 32);
    os_signpost_type_t v218 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56);
    os_signpost_type_t v225 = (unsigned int (**)(void, void, void))(v19 + 48);
    id v217 = (void (**)(char *, uint64_t))(v19 + 8);
    uint64_t v10 = (uint64_t)"\a\t\n\v";
    int64_t v19 = v231;
    while (1)
    {
      if (v233)
      {
        id v37 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v18 >= *(void *)(v221 + 16)) {
          goto LABEL_305;
        }
        id v37 = *(id *)(v220 + 8 * v18);
      }
      uint64_t v29 = (uint64_t)v37;
      BOOL v38 = __OFADD__(v18++, 1);
      if (v38) {
        goto LABEL_300;
      }
      id v39 = [v37 filterType];
      id v234 = (void *)v29;
      unint64_t v31 = 11;
      uint64_t v40 = 1;
      uint64_t v41 = 2;
      uint64_t v29 = 11;
      switch((unint64_t)v39)
      {
        case 0xFFFFFFFFFFFFFFFFLL:
          goto LABEL_5;
        case 0uLL:
          uint64_t v40 = 8;
          goto LABEL_14;
        case 1uLL:
          uint64_t v41 = 4;
          goto LABEL_23;
        case 2uLL:
          uint64_t v41 = 5;
          goto LABEL_23;
        case 3uLL:
          uint64_t v41 = 6;
          goto LABEL_23;
        case 4uLL:
          uint64_t v41 = 7;
          goto LABEL_23;
        case 5uLL:
          uint64_t v41 = 9;
          goto LABEL_23;
        case 6uLL:
          uint64_t v41 = 10;
          goto LABEL_23;
        case 7uLL:
          goto LABEL_24;
        case 8uLL:
LABEL_14:
          uint64_t v29 = v40;
          unint64_t v31 = v40;
          goto LABEL_35;
        case 9uLL:
          goto LABEL_23;
        case 0xAuLL:
          uint64_t v41 = 3;
LABEL_23:
          uint64_t v29 = v41;
          unint64_t v31 = v41;
LABEL_24:
          if (v29 != 2)
          {
            BOOL v42 = v29 == 3 || v29 == 4;
            if (!v42
              && v29 != 5
              && v29 != 6
              && v29 != asc_10062C2FF[0]
              && v29 != asc_10062C2FF[1]
              && v29 != asc_10062C2FF[2]
              && v29 != asc_10062C2FF[3])
            {
              goto LABEL_5;
            }
          }
LABEL_35:
          if ((v31 - 1) >= 0xB)
          {
LABEL_5:

            goto LABEL_6;
          }
          LODWORD(v232) = byte_100531C4A[(int)v31 - 1];
          uint64_t v43 = v237;
          unint64_t v44 = v237[2];
          if (v44)
          {
            if (v29 == *((unsigned __int8 *)v237 + 32))
            {
              int64_t v19 = v32;
              unint64_t v32 = 0;
LABEL_39:
              unint64_t v45 = v32 + 1;
              if (__OFADD__(v32, 1)) {
                goto LABEL_309;
              }
              if (v45 != v44)
              {
                uint64_t v4 = (char *)(v32 + 33);
                while (1)
                {
                  if ((v45 & 0x8000000000000000) != 0) {
                    goto LABEL_293;
                  }
                  if ((unint64_t)(v4 - 32) >= v44) {
                    break;
                  }
                  uint64_t v28 = v4[(void)v43];
                  if (v29 != v28)
                  {
                    if (v4 - 32 != (char *)v32)
                    {
                      if (v32 >= v44) {
                        goto LABEL_303;
                      }
                      uint64_t v10 = *((unsigned __int8 *)v43 + v32 + 32);
                      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                        uint64_t v43 = sub_1002E0858(v43);
                      }
                      *((unsigned char *)v43 + v32 + 32) = v28;
                      v4[(void)v43] = v10;
                      v237 = v43;
                    }
                    BOOL v38 = __OFADD__(v32++, 1);
                    if (v38) {
                      goto LABEL_296;
                    }
                    unint64_t v44 = v43[2];
                  }
                  uint64_t v46 = v4 - 31;
                  ++v4;
                  if (v46 == (char *)v44) {
                    goto LABEL_41;
                  }
                }
LABEL_294:
                __break(1u);
LABEL_295:
                __break(1u);
LABEL_296:
                __break(1u);
LABEL_297:
                __break(1u);
LABEL_298:
                __break(1u);
LABEL_299:
                __break(1u);
LABEL_300:
                __break(1u);
LABEL_301:
                __break(1u);
LABEL_302:
                __break(1u);
LABEL_303:
                __break(1u);
LABEL_304:
                __break(1u);
LABEL_305:
                __break(1u);
LABEL_306:
                __break(1u);
LABEL_307:
                __break(1u);
                goto LABEL_308;
              }
LABEL_41:
              uint64_t v4 = v219;
              if ((uint64_t)v44 < (uint64_t)v32) {
                goto LABEL_304;
              }
            }
            else if (v44 == 1)
            {
              int64_t v19 = v32;
              unint64_t v32 = 1;
            }
            else
            {
              int64_t v19 = v32;
              uint64_t v47 = 33;
              do
              {
                unint64_t v32 = v47 - 32;
                if (v29 == *((unsigned __int8 *)v237 + v47)) {
                  goto LABEL_39;
                }
                uint64_t v48 = v47 - 31;
                if (__OFADD__(v32, 1)) {
                  goto LABEL_299;
                }
                ++v47;
              }
              while (v48 != v44);
              unint64_t v32 = v237[2];
            }
          }
          else
          {
            int64_t v19 = v32;
            unint64_t v32 = 0;
          }
          sub_1002E18D0(v32, v44, (uint64_t (*)(void))sub_1001A8A98);
          uint64_t v49 = sub_1001A8A98(0, 1, 1, _swiftEmptyArrayStorage);
          unint64_t v51 = v49[2];
          unint64_t v50 = v49[3];
          if (v51 >= v50 >> 1) {
            uint64_t v49 = sub_1001A8A98((void *)(v50 > 1), v51 + 1, 1, v49);
          }
          uint64_t v28 = v228;
          uint64_t v10 = v19;
          unint64_t v32 = v232;
          v49[2] = v51 + 1;
          *((unsigned char *)v49 + v51 + 32) = v31;
          os_log_type_t v236 = v49;
          uint64_t v29 = (uint64_t)sub_1002D8904(v234, v4[v226], v31);
          uint64_t v52 = swift_bridgeObjectRetain();
          uint64_t v53 = sub_10022B6D8(v52);
          uint64_t v54 = (void *)sub_1002D8868(v53);
          uint64_t v55 = v224;
          dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

          uint64_t v56 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter();
          (*v223)(v55, v28);
          if (*(void *)(v29 + 16))
          {
            uint64_t v57 = *(unsigned __int8 *)(v29 + 32);
            swift_bridgeObjectRelease();
            BOOL v58 = sub_1002D64DC(v57, (uint64_t)&off_10062C278);
            int64_t v19 = v231;
            if (v58 && v4[v227] == 35)
            {
              uint64_t v29 = sub_1002D64DC(v57, v56);
              swift_bridgeObjectRelease();
              if ((v29 & 1) == 0)
              {
                v4[v227] = v57;
                goto LABEL_73;
              }
            }
            else
            {
              swift_bridgeObjectRelease();
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            int64_t v19 = v231;
          }
          uint64_t v57 = v4[v227];
LABEL_73:
          char v59 = v57 - 8;
          if (v57 - 8) <= 0x11 && ((0x3FFC1u >> v59))
          {
            uint64_t v29 = byte_100531C55[v59];
            uint64_t v60 = (uint64_t)v236;
            uint64_t v61 = sub_1004A0758(v57, (uint64_t)v236);
            if ((v62 & 1) == 0)
            {
              uint64_t v63 = v61;
              if (v4[v226] != 1 || !sub_1002D64DC(v57, (uint64_t)&off_10062C2A8))
              {
                uint64_t v64 = v63 + 1;
                if (__OFADD__(v63, 1))
                {
                  __break(1u);
LABEL_312:
                  __break(1u);
LABEL_313:
                  __break(1u);
                  JUMPOUT(0x1002D87E0);
                }
                if (*(void *)(v60 + 16) < v64) {
                  goto LABEL_312;
                }
                if (v64 < 0) {
                  goto LABEL_313;
                }
                sub_1002E0AA8(v64, v63 + 1, v29);
              }
            }
          }
          self;
          unint64_t v31 = (unint64_t)v234;
          uint64_t v65 = swift_dynamicCastObjCClass();
          if (!v65) {
            goto LABEL_107;
          }
          uint64_t v66 = (void *)v65;
          id v67 = (id)v31;
          if ([v66 mode])
          {

            unint64_t v31 = (unint64_t)v234;
            goto LABEL_107;
          }
          uint64_t v68 = v236;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v68 = sub_1001A8A98(0, v68[2] + 1, 1, v68);
          }
          uint64_t v69 = (uint64_t)v210;
          uint64_t v70 = v213;
          unint64_t v72 = v68[2];
          unint64_t v71 = v68[3];
          if (v72 >= v71 >> 1) {
            uint64_t v68 = sub_1001A8A98((void *)(v71 > 1), v72 + 1, 1, v68);
          }
          v68[2] = v72 + 1;
          *((unsigned char *)v68 + v72 + 32) = 12;
          os_log_type_t v236 = v68;
          uint64_t v29 = *(void *)&v4[v206];
          id v73 = [(id)v29 indexPathsForVisibleItems];
          uint64_t v74 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          if (*(void *)(v74 + 16))
          {
            (*(void (**)(uint64_t, unint64_t, uint64_t))(v211 + 16))(v69, v74 + ((*(unsigned __int8 *)(v211 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v211 + 80)), v70);
            uint64_t v75 = 0;
          }
          else
          {
            uint64_t v75 = 1;
          }
          (*v205)(v69, v75, 1, v70);
          swift_bridgeObjectRelease();
          if ((*v204)(v69, 1, v70) == 1)
          {

            sub_10002B754(v69, (uint64_t *)&unk_1006A2670);
LABEL_103:
            uint64_t v28 = v228;
            int64_t v19 = v231;
            goto LABEL_106;
          }
          uint64_t v76 = v207;
          (*v189)(v207, v69, v70);
          Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
          uint64_t v29 = (uint64_t)[(id)v29 cellForItemAtIndexPath:isa];

          if (!v29)
          {
            (*v188)(v76, v70);

            goto LABEL_103;
          }
          [(id)v29 frame];
          double v79 = v78;
          [(id)v29 directionalLayoutMargins];
          double v81 = v79 - (v80 + -16.0);
          [(id)v29 directionalLayoutMargins];
          double v83 = v81 - (v82 + -16.0);
          id v84 = objc_allocWithZone((Class)type metadata accessor for TagCollectionView());
          unint64_t v185 = v185 & 0xFFFF000000000000 | 0x10101000100;
          uint64_t v85 = sub_10038E8B4(v185, 3, 0);
          int v86 = (void *)sub_10038B474(v83);

          int64_t v19 = v231;
          if (v86)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v68 = sub_1001A8A98(0, v68[2] + 1, 1, v68);
            }
            unint64_t v88 = v68[2];
            unint64_t v87 = v68[3];
            if (v88 >= v87 >> 1) {
              uint64_t v68 = sub_1001A8A98((void *)(v87 > 1), v88 + 1, 1, v68);
            }
            v68[2] = v88 + 1;
            *((unsigned char *)v68 + v88 + 32) = 13;

            os_log_type_t v236 = v68;
            (*v188)(v207, v213);
          }
          else
          {
            (*v188)(v207, v70);
          }
          uint64_t v28 = v228;
LABEL_106:
          unint64_t v31 = (unint64_t)v234;
          unint64_t v32 = v232;
LABEL_107:
          uint64_t v89 = *(void *)v230;
          uint64_t v90 = *(void *)(*(void *)v230 + 16);
          if (!v90) {
            goto LABEL_110;
          }
          if (*(unsigned __int8 *)(v89 + 32) == v32) {
            goto LABEL_115;
          }
          if (v90 == 1) {
            goto LABEL_110;
          }
          if (*(unsigned __int8 *)(v89 + 33) != v32)
          {
            if (v90 != 2)
            {
              uint64_t v113 = 34;
              do
              {
                uint64_t v114 = v113 - 31;
                if (__OFADD__(v113 - 32, 1)) {
                  goto LABEL_307;
                }
                if (*(unsigned __int8 *)(v89 + v113) == v32) {
                  goto LABEL_115;
                }
                ++v113;
              }
              while (v114 != v90);
            }
LABEL_110:
            uint64_t v91 = v230;
            swift_beginAccess();
            uint64_t v92 = *(void **)v91;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *(void *)uint64_t v91 = v92;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              uint64_t v92 = sub_1001A8AA4(0, v92[2] + 1, 1, v92);
              *(void *)uint64_t v230 = v92;
            }
            unint64_t v95 = v92[2];
            unint64_t v94 = v92[3];
            if (v95 >= v94 >> 1)
            {
              uint64_t v92 = sub_1001A8AA4((void *)(v94 > 1), v95 + 1, 1, v92);
              *(void *)uint64_t v230 = v92;
            }
            void v92[2] = v95 + 1;
            *((unsigned char *)v92 + v95 + 32) = v32;
            swift_endAccess();
          }
LABEL_115:
          uint64_t v29 = (uint64_t)v236;
          char v96 = swift_isUniquelyReferenced_nonNull_native();
          aBlock[0] = v10;
          sub_1002BCBC8(v29, v32, v96);
          unint64_t v32 = aBlock[0];
          swift_bridgeObjectRelease();
          self;
          uint64_t v97 = swift_dynamicCastObjCClass();
          __int16 v98 = (void *)v31;
          unint64_t v99 = (unint64_t)v225;
          if (!v97) {
            goto LABEL_155;
          }
          unint64_t v31 = v97;
          uint64_t v29 = v98;
          int v100 = (char *)[(id)v31 selectionType];
          if ((unint64_t)(v100 - 8) < 3)
          {
            uint64_t v101 = v29;
            id v102 = [(id)v31 primaryDate];
            if (v102)
            {
              uint64_t v103 = v102;
              id v104 = v215;
              static Date._unconditionallyBridgeFromObjectiveC(_:)();

              id v105 = *v216;
              uint64_t v106 = v212;
              uint64_t v107 = v104;
              uint64_t v108 = v222;
              (*v216)(v212, v107, v222);
              (*v218)(v106, 0, 1, v108);
              uint64_t v109 = v108;
              int64_t v19 = v231;
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v99)(v106, 1, v109) != 1)
              {
                int v110 = v214;
                v105((unint64_t)v214, (char *)v106, v222);
                uint64_t v111 = v110;
                int64_t v19 = v231;
LABEL_135:
                uint64_t v115 = v111;
                Class v116 = Date._bridgeToObjectiveC()().super.isa;
                (*v217)(v115, v222);
                [(id)v31 setPrimaryDate:v116];

                uint64_t v29 = v101;
                uint64_t v4 = v219;
                goto LABEL_154;
              }
            }
            else
            {
              uint64_t v106 = v212;
              (*v218)(v212, 1, 1, v222);
            }
            uint64_t v111 = v214;
            static Date.now.getter();
            sub_10002B754(v106, (uint64_t *)&unk_1006A3E20);
            goto LABEL_135;
          }
          if (v100 == (char *)6)
          {
            id v117 = [(id)v31 primaryDate];
            unint64_t v209 = v32;
            if (v117)
            {
              uint64_t v118 = v117;
              uint64_t v119 = v29;
              int v120 = v215;
              static Date._unconditionallyBridgeFromObjectiveC(_:)();

              uint64_t v121 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))v99;
              int v122 = (void (**)(uint64_t, char *, uint64_t))v216;
              int v123 = *v216;
              uint64_t v124 = (uint64_t)v192;
              uint64_t v125 = v222;
              (*v216)((unint64_t)v192, v120, v222);
              uint64_t v190 = *v218;
              v190(v124, 0, 1, v125);
              if ((*v121)(v124, 1, v125) == 1)
              {
                unint64_t v99 = (unint64_t)v225;
                uint64_t v29 = v119;
                uint64_t v4 = v219;
                goto LABEL_140;
              }
              char v126 = v194;
              v123((unint64_t)v194, (char *)v124, v125);
              unint64_t v127 = v122;
              unint64_t v99 = (unint64_t)v225;
              uint64_t v29 = v119;
              uint64_t v4 = v219;
            }
            else
            {
              uint64_t v124 = (uint64_t)v192;
              uint64_t v125 = v222;
              uint64_t v190 = *v218;
              v190((uint64_t)v192, 1, 1, v222);
LABEL_140:
              char v126 = v194;
              static Date.now.getter();
              sub_10002B754(v124, (uint64_t *)&unk_1006A3E20);
              unint64_t v127 = (void (**)(uint64_t, char *, uint64_t))v216;
            }
            Class v128 = Date._bridgeToObjectiveC()().super.isa;
            unint64_t v186 = *v217;
            v186(v126, v125);
            [(id)v31 setPrimaryDate:v128];

            id v129 = [(id)v31 secondaryDate];
            uint64_t v232 = v99 & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
            if (v129)
            {
              uint64_t v130 = v129;
              uint64_t v131 = v4;
              uint64_t v132 = v29;
              uint64_t v133 = v215;
              static Date._unconditionallyBridgeFromObjectiveC(_:)();

              uint64_t v134 = v125;
              char v135 = *v127;
              uint64_t v136 = (uint64_t)v208;
              int v137 = v133;
              uint64_t v29 = v132;
              uint64_t v4 = v131;
              v135((uint64_t)v208, v137, v134);
              uint64_t v138 = v190;
              v190(v136, 0, 1, v134);
              uint64_t v139 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))v99;
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v99)(v136, 1, v134) != 1)
              {
                long long v140 = v193;
                uint64_t v141 = v222;
                v135((uint64_t)v193, v208, v222);
                uint64_t v142 = (uint64_t)v140;
                v138((uint64_t)v140, 0, 1, v141);
LABEL_150:
                unsigned int v147 = v139(v142, 1, v141);
                int64_t v19 = v231;
                if (v147 == 1)
                {
                  Class v148 = 0;
                }
                else
                {
                  Class v148 = Date._bridgeToObjectiveC()().super.isa;
                  v186((char *)v142, v141);
                }
                uint64_t v28 = v228;
                unint64_t v32 = v209;
                [(id)v31 setSecondaryDate:v148];

                goto LABEL_154;
              }
            }
            else
            {
              uint64_t v138 = v190;
              v190((uint64_t)v208, 1, 1, v125);
            }
            id v143 = [(id)v31 primaryDate];
            if (v143)
            {
              uint64_t v144 = v143;
              uint64_t v145 = v187;
              static Date._unconditionallyBridgeFromObjectiveC(_:)();

              uint64_t v146 = 0;
            }
            else
            {
              uint64_t v146 = 1;
              uint64_t v145 = v187;
            }
            uint64_t v142 = (uint64_t)v193;
            uint64_t v141 = v222;
            v138(v145, v146, 1, v222);
            sub_10027200C(v145, v142);
            sub_10002B754((uint64_t)v208, (uint64_t *)&unk_1006A3E20);
            uint64_t v139 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))v99;
            goto LABEL_150;
          }
          if (v100 == (char *)7)
          {
            Class v112 = (Class)[(id)v31 relativeRangeAmount];
            if (!v112)
            {
              sub_100031418(0, (unint64_t *)&unk_1006A4F50);
              Class v112 = NSNumber.init(integerLiteral:)(1).super.super.isa;
            }
            [(id)v31 setRelativeRangeAmount:v112];

            if (![(id)v31 relativeRangeSelectionType]) {
              [(id)v31 setRelativeRangeSelectionType:1];
            }
          }
LABEL_154:

          __int16 v98 = v234;
LABEL_155:

          uint64_t v10 = (uint64_t)"\a\t\n\v";
LABEL_6:
          if (v18 == v19)
          {
            swift_bridgeObjectRelease();
            uint64_t v29 = (uint64_t)v237;
            goto LABEL_158;
          }
          break;
        default:

          goto LABEL_6;
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v29 = v31;
LABEL_158:
  id v234 = *(void **)(v29 + 16);
  if (v234)
  {
    unint64_t v209 = v32;
    long long v149 = (uint64_t *)&v4[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_enabledSections];
    unint64_t v233 = v29 + 32;
    swift_bridgeObjectRetain();
    unint64_t v31 = 0;
    unint64_t v32 = (unint64_t)&byte_10062C32A;
    uint64_t v4 = (char *)&unk_10062C000;
    uint64_t v232 = v29;
    while (1)
    {
      if (v31 >= *(void *)(v29 + 16)) {
        goto LABEL_301;
      }
      int v151 = *(unsigned __int8 *)(v233 + v31);
      swift_beginAccess();
      uint64_t v10 = *(void *)(*v149 + 16);
      if (!v10)
      {
        unint64_t v150 = 0;
        unint64_t v18 = 0;
        goto LABEL_161;
      }
      uint64_t v29 = v151 == 2;
      uint64_t v28 = v151 == 3 || v151 == 4 || v151 == 5 || v151 == 6 || v151 == 7 || v151 == 9 || v151 == 10 || v151 == 11;
      uint64_t v159 = swift_bridgeObjectRetain();
      unint64_t v18 = 0;
      int64_t v19 = 33;
      while (1)
      {
        int v160 = *(unsigned __int8 *)(v159 + v18 + 32);
        if (v151 == 2)
        {
LABEL_192:
          switch(v151)
          {
            case 1:
              goto LABEL_189;
            case 2:
              if (v160 == 10) {
                goto LABEL_216;
              }
              goto LABEL_190;
            case 3:
              if (v160 == 11) {
                goto LABEL_216;
              }
              goto LABEL_190;
            case 4:
              if (v160 == 2) {
                goto LABEL_216;
              }
              goto LABEL_190;
            case 5:
              if (v160 == 3) {
                goto LABEL_216;
              }
              goto LABEL_190;
            case 6:
              if (v160 == 4) {
                goto LABEL_216;
              }
              goto LABEL_190;
            case 7:
              if (v160 == 5) {
                goto LABEL_216;
              }
              goto LABEL_190;
            case 8:
              goto LABEL_197;
            case 9:
              if (v160 == 6) {
                goto LABEL_216;
              }
              goto LABEL_190;
            case 10:
              if (v160 == 7) {
                goto LABEL_216;
              }
              goto LABEL_190;
            case 11:
              if (v160 == 8) {
                goto LABEL_216;
              }
              goto LABEL_190;
            default:
              goto LABEL_190;
          }
        }
        if (v151 == 1)
        {
LABEL_189:
          if (v160 == 9) {
            break;
          }
          goto LABEL_190;
        }
        if (v151 != 8)
        {
          if (v28) {
            goto LABEL_192;
          }
          goto LABEL_190;
        }
LABEL_197:
        if (v160 == 1) {
          break;
        }
LABEL_190:
        ++v18;
        ++v19;
        if (v10 == v18)
        {
          swift_bridgeObjectRelease();
          unint64_t v150 = *(void *)(*v149 + 16);
          unint64_t v18 = v10;
          goto LABEL_266;
        }
      }
LABEL_216:
      swift_bridgeObjectRelease();
      unint64_t v150 = v18 + 1;
      if (__OFADD__(v18, 1)) {
        goto LABEL_306;
      }
      uint64_t v29 = *v149;
      if (v150 != *(void *)(*v149 + 16))
      {
        unint64_t v150 = *(void *)(*v149 + 16);
        do
        {
          if (v19 - 32 >= v150)
          {
            __break(1u);
LABEL_293:
            __break(1u);
            goto LABEL_294;
          }
          uint64_t v10 = *(unsigned __int8 *)(v29 + v19);
          switch(v151)
          {
            case 2:
              goto LABEL_225;
            case 1:
LABEL_232:
              if (v10 == 9) {
                goto LABEL_222;
              }
              break;
            case 8:
LABEL_230:
              if (v10 == 1) {
                goto LABEL_222;
              }
              break;
            default:
              BOOL v163 = v151 == 3 || v151 == 4;
              if (v163
                || v151 == 5
                || v151 == 6
                || asc_10062C35F[0] == v151
                || asc_10062C35F[1] == v151
                || asc_10062C35F[2] == v151
                || asc_10062C35F[3] == v151)
              {
LABEL_225:
                switch(v151)
                {
                  case 1:
                    goto LABEL_232;
                  case 2:
                    if (v10 != 10) {
                      goto LABEL_233;
                    }
                    goto LABEL_222;
                  case 3:
                    if (v10 != 11) {
                      goto LABEL_233;
                    }
                    goto LABEL_222;
                  case 4:
                    if (v10 != 2) {
                      goto LABEL_233;
                    }
                    goto LABEL_222;
                  case 5:
                    if (v10 != 3) {
                      goto LABEL_233;
                    }
                    goto LABEL_222;
                  case 6:
                    if (v10 != 4) {
                      goto LABEL_233;
                    }
                    goto LABEL_222;
                  case 7:
                    if (v10 != 5) {
                      goto LABEL_233;
                    }
                    goto LABEL_222;
                  case 8:
                    goto LABEL_230;
                  case 9:
                    if (v10 != 6) {
                      goto LABEL_233;
                    }
                    goto LABEL_222;
                  case 10:
                    if (v10 != 7) {
                      goto LABEL_233;
                    }
                    goto LABEL_222;
                  case 11:
                    if (v10 != 8) {
                      goto LABEL_233;
                    }
                    goto LABEL_222;
                  default:
                    goto LABEL_233;
                }
              }
              break;
          }
LABEL_233:
          if (v19 - 32 != v18)
          {
            if ((v18 & 0x8000000000000000) != 0) {
              goto LABEL_297;
            }
            if (v18 >= v150) {
              goto LABEL_298;
            }
            uint64_t v28 = *(unsigned __int8 *)(v29 + 32 + v18);
            char v162 = swift_isUniquelyReferenced_nonNull_native();
            *long long v149 = v29;
            if ((v162 & 1) == 0)
            {
              uint64_t v29 = (uint64_t)sub_1002E0844((void *)v29);
              *long long v149 = v29;
            }
            *(unsigned char *)(v29 + v18 + 32) = v10;
            *(unsigned char *)(*v149 + v19) = v28;
          }
          BOOL v38 = __OFADD__(v18++, 1);
          if (v38) {
            goto LABEL_295;
          }
          uint64_t v29 = *v149;
          unint64_t v150 = *(void *)(*v149 + 16);
LABEL_222:
          int64_t v161 = v19 - 31;
          ++v19;
        }
        while (v161 != v150);
      }
LABEL_266:
      uint64_t v29 = v232;
      if ((uint64_t)v150 < (uint64_t)v18)
      {
        __break(1u);
LABEL_268:
        swift_bridgeObjectRelease();
        uint64_t v4 = v219;
        uint64_t v28 = v228;
        unint64_t v32 = v209;
        break;
      }
LABEL_161:
      ++v31;
      sub_1002E18D0(v18, v150, (uint64_t (*)(void))sub_1001A8AA4);
      swift_endAccess();
      if ((void *)v31 == v234) {
        goto LABEL_268;
      }
    }
  }
  uint64_t v10 = swift_allocBox();
  sub_1002E1A50();
  sub_1002E1AA4();
  NSDiffableDataSourceSnapshot.init()();
  NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_10062C368);
  LOBYTE(aBlock[0]) = 0;
  NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
  uint64_t v164 = (unint64_t *)&v4[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_enabledSections];
  swift_beginAccess();
  unint64_t v18 = *v164;
  uint64_t v165 = swift_bridgeObjectRetain();
  NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)v165);
  swift_bridgeObjectRelease();
  int64_t v166 = 0;
  uint64_t v29 = v32 + 64;
  uint64_t v167 = 1 << *(unsigned char *)(v32 + 32);
  uint64_t v168 = -1;
  if (v167 < 64) {
    uint64_t v168 = ~(-1 << v167);
  }
  unint64_t v31 = v168 & *(void *)(v32 + 64);
  int64_t v19 = (unint64_t)(v167 + 63) >> 6;
  while (1)
  {
    if (v31)
    {
      unint64_t v169 = __clz(__rbit64(v31));
      v31 &= v31 - 1;
      unint64_t v170 = v169 | (v166 << 6);
      goto LABEL_273;
    }
    int64_t v171 = v166 + 1;
    if (__OFADD__(v166, 1)) {
      goto LABEL_302;
    }
    if (v171 >= v19) {
      break;
    }
    unint64_t v172 = *(void *)(v29 + 8 * v171);
    ++v166;
    if (!v172)
    {
      int64_t v166 = v171 + 1;
      if (v171 + 1 >= v19) {
        break;
      }
      unint64_t v172 = *(void *)(v29 + 8 * v166);
      if (!v172)
      {
        int64_t v166 = v171 + 2;
        if (v171 + 2 >= v19) {
          break;
        }
        unint64_t v172 = *(void *)(v29 + 8 * v166);
        if (!v172)
        {
          int64_t v173 = v171 + 3;
          if (v173 >= v19) {
            break;
          }
          unint64_t v172 = *(void *)(v29 + 8 * v173);
          if (!v172)
          {
            while (1)
            {
              int64_t v166 = v173 + 1;
              if (__OFADD__(v173, 1)) {
                break;
              }
              if (v166 >= v19) {
                goto LABEL_289;
              }
              unint64_t v172 = *(void *)(v29 + 8 * v166);
              ++v173;
              if (v172) {
                goto LABEL_288;
              }
            }
LABEL_308:
            __break(1u);
LABEL_309:
            __break(1u);
LABEL_310:
            swift_bridgeObjectRetain();
            unint64_t v35 = v229;
            uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            goto LABEL_3;
          }
          int64_t v166 = v173;
        }
      }
    }
LABEL_288:
    unint64_t v31 = (v172 - 1) & v172;
    unint64_t v170 = __clz(__rbit64(v172)) + (v166 << 6);
LABEL_273:
    unint64_t v18 = *(void *)(*(void *)(v32 + 56) + 8 * v170);
    LOBYTE(aBlock[0]) = *(unsigned char *)(*(void *)(v32 + 48) + v170);
    swift_bridgeObjectRetain();
    NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
    swift_bridgeObjectRelease();
  }
LABEL_289:
  swift_release();
  if (v237[2])
  {
    NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_10062C3B8);
    LOBYTE(aBlock[0]) = 12;
    NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
  }
  swift_bridgeObjectRelease();
  sub_100031418(0, (unint64_t *)&qword_10069D2D0);
  uint64_t v174 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v175 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v176 = swift_allocObject();
  *(unsigned char *)(v176 + 16) = v195 & 1;
  *(void *)(v176 + 24) = v175;
  *(void *)(v176 + 32) = v10;
  uint64_t v177 = v196;
  uint64_t v178 = v197;
  *(void *)(v176 + 40) = v196;
  *(void *)(v176 + 48) = v178;
  aBlock[4] = sub_1002E1B80;
  aBlock[5] = v176;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100262E2C;
  uint64_t aBlock[3] = &unk_100634320;
  char v179 = _Block_copy(aBlock);
  swift_retain();
  sub_10002E71C(v177);
  swift_release();
  id v180 = v198;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10028A36C();
  sub_10002F214((uint64_t *)&unk_1006A4830);
  sub_10001DFB0((unint64_t *)&qword_1006A26B0, (uint64_t *)&unk_1006A4830);
  uint64_t v181 = v200;
  uint64_t v182 = v203;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v179);

  (*(void (**)(char *, uint64_t))(v202 + 8))(v181, v182);
  (*(void (**)(char *, uint64_t))(v199 + 8))(v180, v201);
  return swift_release();
}

id sub_1002D8868()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource____lazy_storage___diffableDataSource;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource____lazy_storage___diffableDataSource);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource____lazy_storage___diffableDataSource);
  }
  else
  {
    uint64_t v4 = (void *)sub_1002D8EAC();
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

unint64_t sub_1002D88C8@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1002E1A30(*a1);
  *a2 = result;
  return result;
}

void sub_1002D88F4(void *a1@<X8>)
{
  *a1 = &off_10062B688;
}

void *sub_1002D8904(void *a1, char a2, BOOL a3)
{
  unsigned __int8 v3 = a3;
  id v6 = _swiftEmptyArrayStorage;
  if (!sub_1002D64DC(a3, (uint64_t)&off_10062C010)) {
    return v6;
  }
  self;
  uint64_t v7 = swift_dynamicCastObjCClass();
  if (v7)
  {
    uint64_t v8 = (void *)v7;
    id v9 = a1;
    id v10 = [v8 selectionType];
    uint64_t v11 = _swiftEmptyArrayStorage;
    switch((unint64_t)v10)
    {
      case 6uLL:
        int v12 = v3;
        uint64_t v13 = &off_10062C068;
        if (v3 != 5) {
          uint64_t v13 = _swiftEmptyArrayStorage;
        }
        uint64_t v14 = &off_10062C040;
        goto LABEL_26;
      case 7uLL:
        int v12 = v3;
        uint64_t v13 = &off_10062C0B8;
        if (v3 != 5) {
          uint64_t v13 = _swiftEmptyArrayStorage;
        }
        uint64_t v14 = &off_10062C090;
        goto LABEL_26;
      case 8uLL:
        int v12 = v3;
        uint64_t v13 = &off_10062C108;
        if (v3 != 5) {
          uint64_t v13 = _swiftEmptyArrayStorage;
        }
        uint64_t v14 = &off_10062C0E0;
        goto LABEL_26;
      case 9uLL:
        int v12 = v3;
        uint64_t v13 = &off_10062C158;
        if (v3 != 5) {
          uint64_t v13 = _swiftEmptyArrayStorage;
        }
        uint64_t v14 = &off_10062C130;
        goto LABEL_26;
      case 0xAuLL:
        int v12 = v3;
        uint64_t v13 = &off_10062C1A8;
        if (v3 != 5) {
          uint64_t v13 = _swiftEmptyArrayStorage;
        }
        uint64_t v14 = &off_10062C180;
LABEL_26:
        if (v12 == 4) {
          uint64_t v11 = v14;
        }
        else {
          uint64_t v11 = v13;
        }
        break;
      default:
        break;
    }
    uint64_t v23 = v11[2];
    if (!v23)
    {
      swift_bridgeObjectRelease();

      return _swiftEmptyArrayStorage;
    }
    id v33 = v9;
    swift_bridgeObjectRetain();
    uint64_t v24 = 0;
    id v6 = _swiftEmptyArrayStorage;
    while (1)
    {
      int v25 = *((unsigned __int8 *)v11 + v24 + 32);
      if ((a2 & 1) == 0) {
        goto LABEL_50;
      }
      if ((v25 & 0xFE) != 0xE && v25 != 20 && v25 != 21 && v25 != 17)
      {
        BOOL v28 = v25 == 18 || v25 == 19;
        if (!v28 && v25 != 23 && v25 != 24 && v25 != 25 && v25 != 32 && v25 != 33 && v25 != 34) {
          goto LABEL_50;
        }
      }
      char v29 = v25 - 8;
      if (v25 - 8) < 0x12 && ((0x3FFC1u >> v29)) {
        break;
      }
LABEL_32:
      if (v23 == ++v24)
      {

        swift_bridgeObjectRelease_n();
        return v6;
      }
    }
    LOBYTE(v25) = byte_100531C67[v29];
LABEL_50:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v6 = sub_1001A8A98(0, v6[2] + 1, 1, v6);
    }
    unint64_t v31 = v6[2];
    unint64_t v30 = v6[3];
    if (v31 >= v30 >> 1) {
      id v6 = sub_1001A8A98((void *)(v30 > 1), v31 + 1, 1, v6);
    }
    void v6[2] = v31 + 1;
    *((unsigned char *)v6 + v31 + 32) = v25;
    goto LABEL_32;
  }
  self;
  uint64_t v15 = swift_dynamicCastObjCClass();
  if (v15)
  {
    uint64_t v16 = (void *)v15;
    id v17 = a1;
    id v18 = [v16 selectionType];

    int64_t v19 = &off_10062C200;
    goto LABEL_11;
  }
  self;
  uint64_t v20 = swift_dynamicCastObjCClass();
  if (v20)
  {
    uint64_t v21 = (void *)v20;
    id v22 = a1;
    id v18 = [v21 selectionType];

    int64_t v19 = &off_10062C228;
LABEL_11:
    if (v18 == (id)2) {
      return v19;
    }
    return v6;
  }
  self;
  if (swift_dynamicCastObjCClass()) {
    return &off_10062C250;
  }
  return v6;
}

uint64_t sub_1002D8D2C(unsigned __int8 a1)
{
  int v1 = a1 - 1;
  uint64_t result = 0;
  switch(v1)
  {
    case 0:
      uint64_t result = 8;
      break;
    case 1:
      uint64_t result = 9;
      break;
    case 2:
      uint64_t result = 10;
      break;
    case 3:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 25:
    case 26:
    case 29:
      uint64_t result = 1;
      break;
    case 4:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 27:
    case 28:
    case 30:
      uint64_t result = 2;
      break;
    case 5:
    case 31:
      uint64_t result = 3;
      break;
    case 6:
    case 32:
      uint64_t result = 4;
      break;
    case 7:
      return result;
    case 8:
      uint64_t result = 5;
      break;
    case 9:
      uint64_t result = 6;
      break;
    case 10:
    case 33:
      uint64_t result = 7;
      break;
    default:
      uint64_t result = 0;
      break;
  }
  return result;
}

unint64_t sub_1002D8E70@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1002E1A40(*a1);
  *a2 = result;
  return result;
}

void sub_1002D8E9C(void *a1@<X8>)
{
  *a1 = &off_10062B640;
}

uint64_t sub_1002D8EAC()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v170 = sub_10002F214(&qword_1006A26C0);
  uint64_t v169 = *(void *)(v170 - 8);
  uint64_t v168 = *(void *)(v169 + 64);
  uint64_t v1 = __chkstk_darwin(v170);
  uint64_t v167 = (char *)&v146 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  int64_t v166 = (char *)&v146 - v3;
  uint64_t v199 = sub_10002F214(&qword_1006A26C8);
  uint64_t v189 = *(void *)(v199 - 8);
  uint64_t v165 = *(void *)(v189 + 64);
  uint64_t v4 = __chkstk_darwin(v199);
  uint64_t v198 = (char *)&v146 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  id v180 = (char *)&v146 - v6;
  uint64_t v232 = sub_10002F214(&qword_1006A26D0);
  uint64_t v218 = *(void *)(v232 - 8);
  uint64_t v164 = *(void *)(v218 + 64);
  uint64_t v7 = __chkstk_darwin(v232);
  uint64_t v197 = (char *)&v146 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v178 = (char *)&v146 - v9;
  uint64_t v231 = sub_10002F214(&qword_1006A26D8);
  uint64_t v217 = *(void *)(v231 - 8);
  uint64_t v163 = *(void *)(v217 + 64);
  uint64_t v10 = __chkstk_darwin(v231);
  uint64_t v196 = (char *)&v146 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v176 = (char *)&v146 - v12;
  uint64_t v230 = sub_10002F214(&qword_1006A26E0);
  uint64_t v215 = *(void *)(v230 - 8);
  uint64_t v162 = *(void *)(v215 + 64);
  uint64_t v13 = __chkstk_darwin(v230);
  id v194 = (char *)&v146 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  int64_t v173 = (char *)&v146 - v15;
  uint64_t v229 = sub_10002F214(&qword_1006A26E8);
  uint64_t v216 = *(void *)(v229 - 8);
  uint64_t v161 = *(void *)(v216 + 64);
  uint64_t v16 = __chkstk_darwin(v229);
  int v195 = (char *)&v146 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v203 = (char *)&v146 - v18;
  uint64_t v214 = sub_10002F214(&qword_1006A26F0);
  uint64_t v213 = *(void *)(v214 - 8);
  uint64_t v160 = *(void *)(v213 + 64);
  uint64_t v19 = __chkstk_darwin(v214);
  int v193 = (char *)&v146 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v201 = (char *)&v146 - v21;
  uint64_t v211 = sub_10002F214(&qword_1006A26F8);
  uint64_t v209 = *(void *)(v211 - 8);
  uint64_t v159 = *(void *)(v209 + 64);
  uint64_t v22 = __chkstk_darwin(v211);
  uint64_t v190 = (char *)&v146 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  int64_t v171 = (char *)&v146 - v24;
  uint64_t v228 = sub_10002F214(&qword_1006A2700);
  uint64_t v210 = *(void *)(v228 - 8);
  uint64_t v157 = *(void *)(v210 + 64);
  uint64_t v25 = __chkstk_darwin(v228);
  uint64_t v191 = (char *)&v146 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  char v204 = (char *)&v146 - v27;
  uint64_t v227 = sub_10002F214(&qword_1006A2708);
  uint64_t v207 = *(void *)(v227 - 8);
  uint64_t v156 = *(void *)(v207 + 64);
  uint64_t v28 = __chkstk_darwin(v227);
  char v188 = (char *)&v146 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v206 = (char *)&v146 - v30;
  uint64_t v226 = sub_10002F214(&qword_1006A2710);
  uint64_t v205 = *(void *)(v226 - 8);
  unint64_t v155 = *(void *)(v205 + 64);
  uint64_t v31 = __chkstk_darwin(v226);
  unint64_t v186 = (char *)&v146 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v208 = (char *)&v146 - v33;
  uint64_t v225 = sub_10002F214(&qword_1006A2718);
  uint64_t v238 = *(void *)(v225 - 8);
  uint64_t v154 = *(void *)(v238 + 64);
  uint64_t v34 = __chkstk_darwin(v225);
  id v183 = (char *)&v146 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  unint64_t v212 = (char *)&v146 - v36;
  uint64_t v224 = sub_10002F214(&qword_1006A2720);
  uint64_t v237 = *(void *)(v224 - 8);
  uint64_t v153 = *(void *)(v237 + 64);
  uint64_t v37 = __chkstk_darwin(v224);
  uint64_t v181 = (char *)&v146 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  unint64_t v200 = (char *)&v146 - v39;
  uint64_t v223 = sub_10002F214(&qword_1006A2728);
  uint64_t v236 = *(void *)(v223 - 8);
  uint64_t v152 = *(void *)(v236 + 64);
  uint64_t v40 = __chkstk_darwin(v223);
  char v179 = (char *)&v146 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v40);
  uint64_t v182 = (char *)&v146 - v42;
  uint64_t v222 = sub_10002F214(&qword_1006A2730);
  uint64_t v235 = *(void *)(v222 - 8);
  uint64_t v151 = *(void *)(v235 + 64);
  uint64_t v43 = __chkstk_darwin(v222);
  uint64_t v177 = (char *)&v146 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43);
  uint64_t v184 = (char *)&v146 - v45;
  uint64_t v221 = sub_10002F214(&qword_1006A2738);
  uint64_t v234 = *(void *)(v221 - 8);
  uint64_t v150 = *(void *)(v234 + 64);
  uint64_t v46 = __chkstk_darwin(v221);
  uint64_t v175 = (char *)&v146 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v46);
  unint64_t v185 = (char *)&v146 - v48;
  uint64_t v220 = sub_10002F214(&qword_1006A2740);
  uint64_t v233 = *(void *)(v220 - 8);
  uint64_t v149 = *(void *)(v233 + 64);
  uint64_t v49 = __chkstk_darwin(v220);
  uint64_t v174 = (char *)&v146 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v49);
  uint64_t v187 = (char *)&v146 - v51;
  uint64_t v219 = sub_10002F214(&qword_1006A2748);
  uint64_t v202 = *(void *)(v219 - 8);
  uint64_t v147 = *(void *)(v202 + 64);
  uint64_t v52 = __chkstk_darwin(v219);
  unint64_t v172 = (char *)&v146 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v52);
  uint64_t v192 = (char *)&v146 - v54;
  *(void *)(swift_allocObject() + 16) = v0;
  type metadata accessor for FolderComposerFilterJoinCell();
  id v55 = v0;
  UICollectionView.CellRegistration.init(handler:)();
  uint64_t v56 = swift_allocObject();
  *(void *)(v56 + 16) = v55;
  uint64_t v57 = swift_allocObject();
  *(void *)(v57 + 16) = sub_1002E1B98;
  *(void *)(v57 + 24) = v56;
  type metadata accessor for FolderComposerFilterCellPinnedNotes();
  id v146 = v55;
  swift_retain();
  UICollectionView.CellRegistration.init(handler:)();
  uint64_t v58 = swift_allocObject();
  *(void *)(v58 + 16) = sub_1002E1B98;
  *(void *)(v58 + 24) = v56;
  type metadata accessor for FolderComposerFilterCellQuickNotes();
  swift_retain();
  UICollectionView.CellRegistration.init(handler:)();
  uint64_t v59 = swift_allocObject();
  *(void *)(v59 + 16) = sub_1002E1B98;
  *(void *)(v59 + 24) = v56;
  type metadata accessor for FolderComposerFilterCellLockedNotes();
  swift_retain();
  UICollectionView.CellRegistration.init(handler:)();
  uint64_t v60 = swift_allocObject();
  *(void *)(v60 + 16) = sub_1002E1B98;
  *(void *)(v60 + 24) = v56;
  type metadata accessor for FolderComposerFilterCellDateCreated();
  swift_retain();
  UICollectionView.CellRegistration.init(handler:)();
  uint64_t v61 = swift_allocObject();
  *(void *)(v61 + 16) = sub_1002E1B98;
  *(void *)(v61 + 24) = v56;
  type metadata accessor for FolderComposerFilterCellDateEdited();
  swift_retain();
  UICollectionView.CellRegistration.init(handler:)();
  uint64_t v62 = swift_allocObject();
  *(void *)(v62 + 16) = sub_1002E1B98;
  *(void *)(v62 + 24) = v56;
  type metadata accessor for FolderComposerFilterCellTags();
  swift_retain();
  UICollectionView.CellRegistration.init(handler:)();
  uint64_t v63 = swift_allocObject();
  *(void *)(v63 + 16) = sub_1002E1B98;
  *(void *)(v63 + 24) = v56;
  type metadata accessor for FolderComposerFilterCellChecklists();
  swift_retain();
  UICollectionView.CellRegistration.init(handler:)();
  uint64_t v64 = swift_allocObject();
  *(void *)(v64 + 16) = sub_1002E1B98;
  *(void *)(v64 + 24) = v56;
  type metadata accessor for FolderComposerFilterCellAttachments();
  swift_retain();
  UICollectionView.CellRegistration.init(handler:)();
  uint64_t v65 = swift_allocObject();
  *(void *)(v65 + 16) = sub_1002E1B98;
  *(void *)(v65 + 24) = v56;
  type metadata accessor for FolderComposerFilterCellFolders();
  swift_retain();
  UICollectionView.CellRegistration.init(handler:)();
  uint64_t v66 = swift_allocObject();
  *(void *)(v66 + 16) = sub_1002E1B98;
  *(void *)(v66 + 24) = v56;
  type metadata accessor for FolderComposerFilterCellShared();
  uint64_t v148 = v56;
  swift_retain();
  id v67 = v171;
  UICollectionView.CellRegistration.init(handler:)();
  uint64_t v68 = swift_allocObject();
  *(void *)(v68 + 16) = sub_1002E1B98;
  *(void *)(v68 + 24) = v56;
  type metadata accessor for FolderComposerFilterCellMentions();
  swift_retain();
  UICollectionView.CellRegistration.init(handler:)();
  uint64_t v69 = swift_allocObject();
  id v70 = v146;
  *(void *)(v69 + 16) = v146;
  type metadata accessor for FolderComposerFilterCellEntry();
  id v71 = v70;
  UICollectionView.CellRegistration.init(handler:)();
  *(void *)(swift_allocObject() + 16) = v71;
  type metadata accessor for FolderComposerFilterCellDatePicker();
  id v72 = v71;
  id v73 = v173;
  UICollectionView.CellRegistration.init(handler:)();
  *(void *)(swift_allocObject() + 16) = v72;
  type metadata accessor for FolderComposerFilterCellDateRangePicker();
  id v74 = v72;
  uint64_t v75 = v176;
  UICollectionView.CellRegistration.init(handler:)();
  uint64_t v76 = swift_allocObject();
  uint64_t v77 = ObjectType;
  *(void *)(v76 + 16) = v74;
  *(void *)(v76 + 24) = v77;
  type metadata accessor for TagContainerCell();
  id v78 = v74;
  double v79 = v178;
  UICollectionView.CellRegistration.init(handler:)();
  *(void *)(swift_allocObject() + 16) = v78;
  type metadata accessor for FolderComposerFilterCellTagsExpandCollapse();
  double v80 = (char *)v78;
  uint64_t ObjectType = (uint64_t)v80;
  double v81 = v180;
  UICollectionView.CellRegistration.init(handler:)();
  id v146 = *(id *)&v80[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_collectionView];
  (*(void (**)(char *, char *, uint64_t))(v202 + 16))(v172, v192, v219);
  (*(void (**)(char *, char *, uint64_t))(v234 + 16))(v175, v185, v221);
  (*(void (**)(char *, char *, uint64_t))(v233 + 16))(v174, v187, v220);
  (*(void (**)(char *, char *, uint64_t))(v235 + 16))(v177, v184, v222);
  (*(void (**)(char *, char *, uint64_t))(v236 + 16))(v179, v182, v223);
  (*(void (**)(char *, char *, uint64_t))(v238 + 16))(v183, v212, v225);
  (*(void (**)(char *, char *, uint64_t))(v237 + 16))(v181, v200, v224);
  uint64_t v82 = v209;
  (*(void (**)(char *, char *, uint64_t))(v209 + 16))(v190, v67, v211);
  uint64_t v83 = v213;
  (*(void (**)(char *, char *, uint64_t))(v213 + 16))(v193, v201, v214);
  uint64_t v84 = v205;
  (*(void (**)(char *, char *, uint64_t))(v205 + 16))(v186, v208, v226);
  uint64_t v85 = v207;
  (*(void (**)(char *, char *, uint64_t))(v207 + 16))(v188, v206, v227);
  uint64_t v86 = v210;
  (*(void (**)(char *, char *, uint64_t))(v210 + 16))(v191, v204, v228);
  uint64_t v87 = v215;
  (*(void (**)(char *, char *, uint64_t))(v215 + 16))(v194, v73, v230);
  uint64_t v88 = v217;
  (*(void (**)(char *, char *, uint64_t))(v217 + 16))(v196, v75, v231);
  uint64_t v89 = v218;
  (*(void (**)(char *, char *, uint64_t))(v218 + 16))(v197, v79, v232);
  uint64_t v90 = v189;
  (*(void (**)(char *, char *, uint64_t))(v189 + 16))(v198, v81, v199);
  uint64_t v91 = v216;
  (*(void (**)(char *, char *, uint64_t))(v216 + 16))(v195, v203, v229);
  uint64_t v92 = *(unsigned __int8 *)(v234 + 80);
  uint64_t v93 = *(unsigned __int8 *)(v233 + 80);
  v150 += v93;
  uint64_t v94 = *(unsigned __int8 *)(v235 + 80);
  uint64_t v95 = *(unsigned __int8 *)(v236 + 80);
  v151 += v95;
  uint64_t v96 = *(unsigned __int8 *)(v238 + 80);
  v152 += v96;
  uint64_t v97 = *(unsigned __int8 *)(v237 + 80);
  uint64_t v98 = v154 + v97;
  uint64_t v99 = *(unsigned __int8 *)(v82 + 80);
  uint64_t v154 = v153 + v99;
  uint64_t v100 = *(unsigned __int8 *)(v83 + 80);
  v159 += v100;
  uint64_t v101 = *(unsigned __int8 *)(v84 + 80);
  v160 += v101;
  uint64_t v102 = *(unsigned __int8 *)(v85 + 80);
  uint64_t v103 = v155 + v102;
  uint64_t v104 = *(unsigned __int8 *)(v86 + 80);
  uint64_t v105 = v156 + v104;
  uint64_t v106 = *(unsigned __int8 *)(v87 + 80);
  uint64_t v107 = v157 + v106;
  uint64_t v108 = v202;
  unint64_t v109 = (*(unsigned __int8 *)(v202 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v202 + 80);
  unint64_t v155 = (v147 + v92 + v109) & ~v92;
  uint64_t v110 = *(unsigned __int8 *)(v88 + 80);
  uint64_t v111 = v162 + v110;
  unint64_t v112 = (v150 + v155) & ~v93;
  unint64_t v113 = (v149 + v94 + v112) & ~v94;
  uint64_t v114 = *(unsigned __int8 *)(v89 + 80);
  uint64_t v115 = v163 + v114;
  uint64_t v116 = *(unsigned __int8 *)(v90 + 80);
  uint64_t v117 = v164 + v116;
  uint64_t v118 = (v151 + v113) & ~v95;
  uint64_t v119 = (v152 + v118) & ~v96;
  uint64_t v120 = *(unsigned __int8 *)(v91 + 80);
  uint64_t v121 = v165 + v120;
  uint64_t v122 = (v98 + v119) & ~v97;
  uint64_t v156 = (v153 + v99 + v122) & ~v99;
  uint64_t v157 = (v159 + v156) & ~v100;
  uint64_t v159 = (v160 + v157) & ~v101;
  uint64_t v160 = (v103 + v159) & ~v102;
  uint64_t v162 = (v105 + v160) & ~v104;
  uint64_t v163 = (v107 + v162) & ~v106;
  uint64_t v164 = (v111 + v163) & ~v110;
  uint64_t v165 = (v115 + v164) & ~v114;
  uint64_t v123 = (v117 + v165) & ~v116;
  uint64_t v124 = (v121 + v123) & ~v120;
  uint64_t v125 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v108 + 32))(v125 + v109, v172, v219);
  (*(void (**)(unint64_t, char *, uint64_t))(v234 + 32))(v125 + v155, v175, v221);
  (*(void (**)(unint64_t, char *, uint64_t))(v233 + 32))(v125 + v112, v174, v220);
  (*(void (**)(unint64_t, char *, uint64_t))(v235 + 32))(v125 + v113, v177, v222);
  (*(void (**)(uint64_t, char *, uint64_t))(v236 + 32))(v125 + v118, v179, v223);
  (*(void (**)(uint64_t, char *, uint64_t))(v238 + 32))(v125 + v119, v183, v225);
  (*(void (**)(uint64_t, char *, uint64_t))(v237 + 32))(v125 + v122, v181, v224);
  (*(void (**)(uint64_t, char *, uint64_t))(v209 + 32))(v125 + v156, v190, v211);
  (*(void (**)(uint64_t, char *, uint64_t))(v213 + 32))(v125 + v157, v193, v214);
  (*(void (**)(uint64_t, char *, uint64_t))(v205 + 32))(v125 + v159, v186, v226);
  (*(void (**)(uint64_t, char *, uint64_t))(v207 + 32))(v125 + v160, v188, v227);
  (*(void (**)(uint64_t, char *, uint64_t))(v210 + 32))(v125 + v162, v191, v228);
  (*(void (**)(uint64_t, char *, uint64_t))(v215 + 32))(v125 + v163, v194, v230);
  (*(void (**)(uint64_t, char *, uint64_t))(v217 + 32))(v125 + v164, v196, v231);
  (*(void (**)(uint64_t, char *, uint64_t))(v218 + 32))(v125 + v165, v197, v232);
  uint64_t v126 = v189;
  uint64_t v127 = v199;
  (*(void (**)(uint64_t, char *, uint64_t))(v189 + 32))(v125 + v123, v198, v199);
  (*(void (**)(uint64_t, char *, uint64_t))(v216 + 32))(v125 + v124, v195, v229);
  id v128 = objc_allocWithZone((Class)sub_10002F214((uint64_t *)&unk_1006A2750));
  id v129 = v146;
  uint64_t v130 = UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)();
  uint64_t v131 = (void *)ObjectType;
  uint64_t v132 = *(void **)(ObjectType
                  + OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource____lazy_storage___diffableDataSource);
  *(void *)(ObjectType
            + OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource____lazy_storage___diffableDataSource) = v130;
  uint64_t v133 = v131;

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(swift_allocObject() + 16) = v133;
  type metadata accessor for FolderComposerFilterHeader();
  id v134 = v133;
  char v135 = v166;
  uint64_t v136 = UICollectionView.SupplementaryRegistration.init(elementKind:handler:)();
  int v137 = (void *)sub_1002D8868(v136);
  uint64_t v138 = v169;
  uint64_t v139 = v167;
  uint64_t v140 = v170;
  (*(void (**)(char *, char *, uint64_t))(v169 + 16))(v167, v135, v170);
  unint64_t v141 = (*(unsigned __int8 *)(v138 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v138 + 80);
  uint64_t v142 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v138 + 32))(v142 + v141, v139, v140);
  dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter();

  uint64_t v144 = sub_1002D8868(v143);
  swift_release();
  (*(void (**)(char *, uint64_t))(v138 + 8))(v135, v140);
  (*(void (**)(char *, uint64_t))(v126 + 8))(v180, v127);
  (*(void (**)(char *, uint64_t))(v218 + 8))(v178, v232);
  (*(void (**)(char *, uint64_t))(v217 + 8))(v176, v231);
  (*(void (**)(char *, uint64_t))(v215 + 8))(v173, v230);
  (*(void (**)(char *, uint64_t))(v216 + 8))(v203, v229);
  (*(void (**)(char *, uint64_t))(v213 + 8))(v201, v214);
  (*(void (**)(char *, uint64_t))(v209 + 8))(v171, v211);
  (*(void (**)(char *, uint64_t))(v210 + 8))(v204, v228);
  (*(void (**)(char *, uint64_t))(v207 + 8))(v206, v227);
  (*(void (**)(char *, uint64_t))(v205 + 8))(v208, v226);
  (*(void (**)(char *, uint64_t))(v238 + 8))(v212, v225);
  (*(void (**)(char *, uint64_t))(v237 + 8))(v200, v224);
  (*(void (**)(char *, uint64_t))(v236 + 8))(v182, v223);
  (*(void (**)(char *, uint64_t))(v235 + 8))(v184, v222);
  (*(void (**)(char *, uint64_t))(v234 + 8))(v185, v221);
  (*(void (**)(char *, uint64_t))(v233 + 8))(v187, v220);
  (*(void (**)(char *, uint64_t))(v202 + 8))(v192, v219);
  return v144;
}

id sub_1002DAF04(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v5[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_presentingViewController] = 0;
  *(void *)&v5[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource____lazy_storage___diffableDataSource] = 0;
  uint64_t v10 = OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_filterSelection;
  id v11 = objc_allocWithZone((Class)ICFilterSelection);
  sub_100031418(0, &qword_1006A2680);
  uint64_t v12 = v5;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  id v14 = [v11 initWithFilterTypeSelections:isa joinOperator:0];

  *(void *)&v5[v10] = v14;
  v12[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_prefersPopoverEntries] = 0;
  *(void *)&v12[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_popoverSelectionObservation] = 0;
  uint64_t v15 = &v12[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_tagRowLimit];
  *(void *)uint64_t v15 = 0;
  v15[8] = 1;
  *(void *)&v12[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_enabledSections] = _swiftEmptyArrayStorage;
  v12[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_selectedInlineEntryItem] = 35;
  *(void *)&v12[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_collectionView] = a1;
  *(void *)&v12[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_accountObjectID] = a2;
  *(void *)&v12[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_context] = a3;
  uint64_t v16 = &v12[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_presentViewControllerBlock];
  *(void *)uint64_t v16 = a4;
  *((void *)v16 + 1) = a5;
  id v17 = a3;
  swift_retain();
  id v18 = a1;
  id v19 = a2;

  v24.receiver = v12;
  v24.super_class = ObjectType;
  id v20 = [super init];
  [v18 setDelegate:v20];

  swift_release();
  return v20;
}

void sub_1002DB0F4()
{
  *(void *)&v0[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_presentingViewController] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource____lazy_storage___diffableDataSource] = 0;
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_filterSelection;
  id v2 = objc_allocWithZone((Class)ICFilterSelection);
  sub_100031418(0, &qword_1006A2680);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  id v4 = [v2 initWithFilterTypeSelections:isa joinOperator:0];

  *(void *)&v0[v1] = v4;
  v0[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_prefersPopoverEntries] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_popoverSelectionObservation] = 0;
  uint64_t v5 = &v0[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_tagRowLimit];
  *(void *)uint64_t v5 = 0;
  v5[8] = 1;
  *(void *)&v0[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_enabledSections] = _swiftEmptyArrayStorage;
  v0[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_selectedInlineEntryItem] = 35;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

_UNKNOWN **sub_1002DB248()
{
  char v15 = 0;
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_context];
  if (!v1)
  {
    uint64_t v13 = 0;
    goto LABEL_7;
  }
  id v2 = (void *)swift_allocObject();
  v2[2] = v1;
  v2[3] = v0;
  v2[4] = &v15;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_1002E3110;
  *(void *)(v3 + 24) = v2;
  void v14[4] = sub_100031D5C;
  v14[5] = v3;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_100031D30;
  void v14[3] = &unk_100634870;
  id v4 = _Block_copy(v14);
  id v5 = v1;
  uint64_t v6 = v0;
  swift_retain();
  swift_release();
  [v5 performBlockAndWait:v4];

  _Block_release(v4);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  unint64_t result = (_UNKNOWN **)swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
    if (v15 == 1)
    {
      id v9 = [self cloudSpecificFilterTypes];
      sub_100031418(0, (unint64_t *)&unk_1006A4F50);
      sub_1002E3068();
      uint64_t v10 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      sub_1002E13BC((uint64_t)&off_10062BFE0, v10);
      uint64_t v12 = v11;
      swift_bridgeObjectRelease();
      sub_10002E70C((uint64_t)sub_1002E3110);
      return (_UNKNOWN **)v12;
    }
    uint64_t v13 = sub_1002E3110;
LABEL_7:
    sub_10002E70C((uint64_t)v13);
    return &off_10062BFE0;
  }
  __break(1u);
  return result;
}

void sub_1002DB498(char a1)
{
  uint64_t v2 = sub_10002F214(&qword_1006A1400);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = swift_projectBox();
  if (a1)
  {
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (!Strong) {
      goto LABEL_7;
    }
    uint64_t v8 = (void *)Strong;
    id v9 = (void *)sub_1002D8868(Strong);

    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
    dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();
  }
  else
  {
    swift_beginAccess();
    uint64_t v10 = swift_unknownObjectWeakLoadStrong();
    if (!v10) {
      goto LABEL_7;
    }
    uint64_t v11 = (void *)v10;
    id v9 = (void *)sub_1002D8868(v10);

    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
    dispatch thunk of UICollectionViewDiffableDataSource.applySnapshotUsingReloadData(_:completion:)();
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
LABEL_7:
  swift_beginAccess();
  uint64_t v12 = swift_unknownObjectWeakLoadStrong();
  if (v12)
  {
    uint64_t v13 = (void *)v12;
    sub_1002DB708();
  }
  swift_beginAccess();
  uint64_t v14 = swift_unknownObjectWeakLoadStrong();
  if (v14)
  {
    char v15 = (void *)v14;
    sub_1002DB988();
  }
  swift_beginAccess();
  uint64_t v16 = swift_unknownObjectWeakLoadStrong();
  if (v16)
  {
    id v17 = (void *)v16;
    sub_1002DBE60();
  }
}

uint64_t sub_1002DB708()
{
  uint64_t v26 = type metadata accessor for IndexPath();
  uint64_t v1 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214(&qword_1006A1400);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = v0;
  id v9 = (void *)sub_1002D8868(v6);
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

  uint64_t v10 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  uint64_t v23 = v10;
  uint64_t v25 = *(void *)(v10 + 16);
  if (v25)
  {
    uint64_t v11 = 0;
    uint64_t v12 = *(void **)(v24 + OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_collectionView);
    uint64_t v13 = v23 + 32;
    uint64_t v14 = (void (**)(char *, uint64_t))(v1 + 8);
    do
    {
      unsigned __int8 v15 = *(unsigned char *)(v13 + v11);
      uint64_t v16 = UICollectionElementKindSectionHeader;
      IndexPath.init(row:section:)();
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      (*v14)(v3, v26);
      id v18 = [v12 supplementaryViewForElementKind:v16 atIndexPath:isa];

      if (v18)
      {
        type metadata accessor for FolderComposerFilterHeader();
        uint64_t v19 = swift_dynamicCastClass();
        if (v19)
        {
          id v20 = (char *)v19;
          id v21 = v18;
          sub_1002DFF34(v20, v15);
        }
      }
      ++v11;
    }
    while (v25 != v11);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1002DB988()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_1006A2670);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v42 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v40 - v5;
  uint64_t v7 = type metadata accessor for IndexPath();
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v41 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v46 = (char *)&v40 - v11;
  uint64_t v12 = 0;
  uint64_t v14 = (unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  uint64_t v44 = (void (**)(char *, char *, uint64_t))(v13 + 32);
  uint64_t v45 = OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_collectionView;
  uint64_t v43 = (uint64_t (**)(char *, uint64_t))(v13 + 8);
  do
  {
    unsigned __int8 v15 = *((unsigned char *)&off_10062C730 + v12 + 32);
    uint64_t v16 = (void *)sub_1002D8868(v10);
    unsigned __int8 v48 = v15;
    dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();

    id v17 = *v14;
    if ((*v14)(v6, 1, v7) == 1)
    {
      uint64_t v10 = sub_10002B754((uint64_t)v6, (uint64_t *)&unk_1006A2670);
      goto LABEL_3;
    }
    id v18 = v17;
    uint64_t v19 = v14;
    uint64_t v20 = v7;
    (*v44)(v46, v6, v7);
    uint64_t v21 = v1;
    uint64_t v22 = *(void **)(v1 + v45);
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    id v24 = [v22 cellForItemAtIndexPath:isa];

    if (!v24) {
      goto LABEL_9;
    }
    type metadata accessor for FolderComposerFilterCellDatePicker();
    uint64_t v25 = (char *)swift_dynamicCastClass();
    if (!v25)
    {

LABEL_9:
      uint64_t v10 = (*v43)(v46, v20);
      uint64_t v1 = v21;
      uint64_t v7 = v20;
      goto LABEL_10;
    }
    sub_1002DE68C(v25, v15);

    uint64_t v1 = v21;
    uint64_t v7 = v20;
    uint64_t v10 = (*v43)(v46, v20);
LABEL_10:
    uint64_t v14 = v19;
    id v17 = v18;
LABEL_3:
    ++v12;
  }
  while (v12 != 4);
  uint64_t v26 = (void *)sub_1002D8868(v10);
  char v47 = 30;
  uint64_t v27 = (uint64_t)v42;
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();

  if (v17((char *)v27, 1, v7) == 1)
  {
    uint64_t v28 = sub_10002B754(v27, (uint64_t *)&unk_1006A2670);
    uint64_t v29 = v41;
  }
  else
  {
    uint64_t v29 = v41;
    (*v44)(v41, (char *)v27, v7);
    uint64_t v30 = *(void **)(v1 + v45);
    Class v31 = IndexPath._bridgeToObjectiveC()().super.isa;
    id v32 = [v30 cellForItemAtIndexPath:v31];

    if (v32)
    {
      type metadata accessor for FolderComposerFilterCellDateRangePicker();
      uint64_t v33 = (char *)swift_dynamicCastClass();
      if (v33) {
        sub_1002DEFD8(v33);
      }
    }
    uint64_t v28 = (*v43)(v29, v7);
    uint64_t v27 = (uint64_t)v42;
  }
  uint64_t v34 = (void *)sub_1002D8868(v28);
  char v47 = 31;
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();

  if (v17((char *)v27, 1, v7) == 1) {
    return sub_10002B754(v27, (uint64_t *)&unk_1006A2670);
  }
  (*v44)(v29, (char *)v27, v7);
  uint64_t v36 = *(void **)(v1 + v45);
  Class v37 = IndexPath._bridgeToObjectiveC()().super.isa;
  id v38 = [v36 cellForItemAtIndexPath:v37];

  if (v38)
  {
    type metadata accessor for FolderComposerFilterCellDateRangePicker();
    uint64_t v39 = (char *)swift_dynamicCastClass();
    if (v39) {
      sub_1002DEFD8(v39);
    }
  }
  return (*v43)(v29, v7);
}

uint64_t sub_1002DBE60()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_1006A2670);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t result = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = 0;
  uint64_t v11 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v19 = (void (**)(char *, char *, uint64_t))(v10 + 32);
  uint64_t v20 = OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_collectionView;
  id v18 = (uint64_t (**)(char *, uint64_t))(v10 + 8);
  do
  {
    unsigned __int8 v12 = *((unsigned char *)&off_10062C780 + v9 + 32);
    uint64_t v13 = (void *)sub_1002D8868(result);
    unsigned __int8 v21 = v12;
    dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();

    if ((*v11)(v4, 1, v5) == 1)
    {
      uint64_t result = sub_10002B754((uint64_t)v4, (uint64_t *)&unk_1006A2670);
    }
    else
    {
      (*v19)(v8, v4, v5);
      uint64_t v14 = *(void **)(v1 + v20);
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      id v16 = [v14 cellForItemAtIndexPath:isa];

      if (v16)
      {
        type metadata accessor for FolderComposerFilterCellEntry();
        id v17 = (unsigned char *)swift_dynamicCastClass();
        if (v17) {
          sub_1002DD5D0(v17, v12);
        }
      }
      uint64_t result = (*v18)(v8, v5);
    }
    ++v9;
  }
  while (v9 != 3);
  return result;
}

uint64_t sub_1002DC0A0(void *a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v29 = *(void *)(v2 - 8);
  uint64_t v30 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214(&qword_1006A1400);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_allocBox();
  uint64_t v14 = v13;
  unsigned __int8 v15 = (void *)sub_1002D8868(v12);
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

  id v16 = sub_10028DF24();
  [a1 frame];
  id v18 = (void *)sub_10038B474(v17);

  if (v18)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v14, v8);
    uint64_t v19 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    BOOL v20 = sub_1002D64DC(13, v19);
    swift_bridgeObjectRelease();
    if (!v20)
    {
      LOBYTE(aBlock[0]) = 12;
      NSDiffableDataSourceSnapshot.insertItems(_:afterItem:)();
      sub_100031418(0, (unint64_t *)&qword_10069D2D0);
      unsigned __int8 v21 = (void *)static OS_dispatch_queue.main.getter();
      uint64_t v22 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v23 = swift_allocObject();
      *(void *)(v23 + 16) = v22;
      *(void *)(v23 + 24) = v12;
      aBlock[4] = sub_1002E2F24;
      aBlock[5] = v23;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      void aBlock[2] = sub_100262E2C;
      uint64_t aBlock[3] = &unk_100634708;
      id v24 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      static DispatchQoS.unspecified.getter();
      aBlock[0] = _swiftEmptyArrayStorage;
      sub_10028A36C();
      sub_10002F214((uint64_t *)&unk_1006A4830);
      sub_10001DFB0((unint64_t *)&qword_1006A26B0, (uint64_t *)&unk_1006A4830);
      uint64_t v25 = v30;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v24);

      (*(void (**)(char *, uint64_t))(v29 + 8))(v4, v25);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v28);
    }
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  return swift_release();
}

uint64_t sub_1002DC50C()
{
  uint64_t v0 = sub_10002F214(&qword_1006A1400);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = &v8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = swift_projectBox();
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v6 = (void *)result;
    uint64_t v7 = (void *)sub_1002D8868(result);

    swift_beginAccess();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
    dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();

    return (*(uint64_t (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return result;
}

uint64_t sub_1002DC684(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = type metadata accessor for IndexPath();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  id v12 = a3;
  id v13 = a1;
  LOBYTE(a5) = sub_1002E312C((uint64_t)v11, a5);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return a5 & 1;
}

void sub_1002DC794(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = [*a1 participantUserIDs];
  uint64_t v4 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  *a2 = v4;
}

void sub_1002DC7F8(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = [*a1 folderIdentifiers];
  uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  *a2 = v4;
}

uint64_t sub_1002DC854()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_1006A2670);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = &v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = (void *)sub_1002D8868(v7);
  v15[15] = 12;
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();

  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10002B754((uint64_t)v4, (uint64_t *)&unk_1006A2670);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 32))(v9, v4, v5);
    uint64_t v11 = *(void **)(v1 + OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_collectionView);
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    id v13 = [v11 cellForItemAtIndexPath:isa];

    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
    if (v13)
    {
      type metadata accessor for TagContainerCell();
      uint64_t result = swift_dynamicCastClass();
      if (result) {
        return result;
      }
    }
  }
  return 0;
}

uint64_t sub_1002DCA40()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_1006A2670);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = (void *)sub_1002DC854();
  if (v9)
  {
    uint64_t v10 = v9;
    sub_1002DC0A0(v9);
  }
  uint64_t v11 = (void *)sub_1002D8868(v9);
  v17[15] = 13;
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();

  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
    return sub_10002B754((uint64_t)v4, (uint64_t *)&unk_1006A2670);
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 32))(v8, v4, v5);
  id v13 = *(void **)(v1 + OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_collectionView);
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v15 = [v13 cellForItemAtIndexPath:isa];

  if (v15)
  {
    type metadata accessor for FolderComposerFilterCellTagsExpandCollapse();
    id v16 = (char *)swift_dynamicCastClass();
    if (v16) {
      sub_1002DF94C(v16);
    }
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1002DCD4C(void *a1, uint64_t a2, unsigned __int8 *a3)
{
  id v4 = [a1 ic_existingObjectWithID:*(void *)(a2 + OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_accountObjectID)];
  if (v4)
  {
    uint64_t v5 = v4;
    self;
    uint64_t v6 = (void *)swift_dynamicCastObjCClass();
    if (v6) {
      unsigned __int8 v7 = [v6 isLocalAccount];
    }
    else {
      unsigned __int8 v7 = 0;
    }
  }
  else
  {
    unsigned __int8 v7 = 0;
  }
  *a3 = v7;
}

uint64_t sub_1002DCDE0(char *a1, uint64_t a2, char *a3, char *a4)
{
  uint64_t v6 = *(void **)&a4[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_filterSelection];
  char v7 = *a3;
  uint64_t v8 = *(void **)&a1[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterJoinCell_filterSelection];
  *(void *)&a1[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterJoinCell_filterSelection] = v6;
  id v9 = v6;

  sub_10045DF20();
  [a1 setNeedsUpdateConfiguration];

  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a4;
  *(unsigned char *)(v10 + 24) = v7;
  uint64_t v11 = (uint64_t (**)(uint64_t))&a1[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterJoinCell_joinOperatorChanged];
  uint64_t v12 = *(void *)&a1[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterJoinCell_joinOperatorChanged];
  *uint64_t v11 = sub_1002E305C;
  v11[1] = (uint64_t (*)(uint64_t))v10;
  id v13 = a4;

  return sub_10002E70C(v12);
}

uint64_t sub_1002DCEC0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = sub_10002F214(&qword_1006A1400);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002F214(&qword_10069D060);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100524D10;
  *(unsigned char *)(inited + 32) = a3;
  id v9 = (void *)((uint64_t (*)(void))sub_1002D8868)();
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

  uint64_t v10 = sub_1002E1650(inited, (uint64_t)v7);
  if (*(void *)(v10 + 16))
  {
    NSDiffableDataSourceSnapshot.reconfigureItems(_:)((Swift::OpaquePointer)v10);
    uint64_t v11 = swift_bridgeObjectRelease();
    uint64_t v12 = (void *)sub_1002D8868(v11);
    dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return swift_setDeallocating();
}

void sub_1002DD044(char *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a4;
  *(void *)(v6 + 24) = a1;
  char v7 = (uint64_t (**)())&a1[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelectionDidChange];
  uint64_t v8 = *(void *)&a1[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelectionDidChange];
  *char v7 = sub_1002E3008;
  v7[1] = (uint64_t (*)())v6;
  id v9 = a4;
  uint64_t v10 = a1;
  sub_10002E70C(v8);
  uint64_t v11 = *(void **)&v9[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_accountObjectID];
  uint64_t v12 = *(void **)&v10[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_accountObjectID];
  *(void *)&v10[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_accountObjectID] = v11;
  id v13 = v11;

  id v14 = [*(id *)&v9[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_filterSelection] filterTypeSelectionForFilterType:(*(uint64_t (**)(void))((swift_isaMask & *(void *)v10) + 0xC8))()];
  id v15 = *(void **)&v10[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection];
  *(void *)&v10[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection] = v14;
  id v16 = v14;

  [v10 setNeedsUpdateConfiguration];
}

uint64_t sub_1002DD19C(uint64_t a1, void *a2)
{
  uint64_t v26 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v29 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v25 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  __chkstk_darwin(v5);
  char v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchTime();
  uint64_t v24 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  id v15 = (char *)&v24 - v14;
  [*(id *)(a1 + OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_filterSelection) setSelection:*(void *)((char *)a2 + OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection) forFilterType:(*(uint64_t (**)(uint64_t))((swift_isaMask & *a2) + 0xC8))(v13)];
  *(unsigned char *)(a1 + OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_selectedInlineEntryItem) = 35;
  sub_1002D67A0(1, 0, 0);
  sub_100031418(0, (unint64_t *)&qword_10069D2D0);
  id v16 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  double v17 = *(void (**)(char *, uint64_t))(v9 + 8);
  v17(v12, v8);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a2;
  aBlock[4] = sub_1002E3048;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100262E2C;
  uint64_t aBlock[3] = &unk_1006347D0;
  uint64_t v19 = _Block_copy(aBlock);
  BOOL v20 = a2;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10028A36C();
  sub_10002F214((uint64_t *)&unk_1006A4830);
  sub_10001DFB0((unint64_t *)&qword_1006A26B0, (uint64_t *)&unk_1006A4830);
  unsigned __int8 v21 = v25;
  uint64_t v22 = v26;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v21, v22);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v28);
  return ((uint64_t (*)(char *, uint64_t))v17)(v15, v24);
}

void sub_1002DD5D0(unsigned char *a1, unsigned __int8 a2)
{
  char v3 = a2 - 1;
  if ((a2 - 1) > 0x21u) {
    return;
  }
  if (((0x3FFFFE7FFuLL >> v3) & 1) == 0) {
    return;
  }
  id v6 = [*(id *)(v2 + OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_filterSelection) filterTypeSelectionForFilterType:qword_100531D90[v3]];
  if (!v6) {
    return;
  }
  id v91 = v6;
  self;
  uint64_t v7 = swift_dynamicCastObjCClass();
  if (v7)
  {
    uint64_t v8 = (void *)v7;
    a1[OBJC_IVAR____TtC11MobileNotes29FolderComposerFilterCellEntry_showDisclosure] = 0;
    id v9 = v91;
    [a1 setNeedsUpdateConfiguration];
    if (a2 <= 0x16u)
    {
      if (((1 << a2) & 0x104000) != 0)
      {
        id v15 = [self mainBundle];
        NSString v16 = String._bridgeToObjectiveC()();
        id v17 = [v15 localizedStringForKey:v16 value:0 table:0];

        uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v20 = v19;

        unsigned __int8 v21 = (uint64_t *)&a1[OBJC_IVAR____TtC11MobileNotes29FolderComposerFilterCellEntry_leadingText];
        *unsigned __int8 v21 = v18;
        v21[1] = v20;
        swift_bridgeObjectRelease();
        [a1 setNeedsUpdateConfiguration];
        id v22 = [v8 primaryDateSummary];
LABEL_17:
        id v32 = v22;
        uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v35 = v34;

        uint64_t v36 = (uint64_t *)&a1[OBJC_IVAR____TtC11MobileNotes29FolderComposerFilterCellEntry_trailingText];
        *uint64_t v36 = v33;
        v36[1] = v35;
LABEL_28:
        swift_bridgeObjectRelease();
        [a1 setNeedsUpdateConfiguration];

        goto LABEL_29;
      }
      if (((1 << a2) & 0x208000) != 0)
      {
        id v23 = [self mainBundle];
        NSString v24 = String._bridgeToObjectiveC()();
        id v25 = [v23 localizedStringForKey:v24 value:0 table:0];

        uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v28 = v27;

        uint64_t v29 = (uint64_t *)&a1[OBJC_IVAR____TtC11MobileNotes29FolderComposerFilterCellEntry_leadingText];
        *uint64_t v29 = v26;
        v29[1] = v28;
        swift_bridgeObjectRelease();
        [a1 setNeedsUpdateConfiguration];
        id v30 = [v8 secondaryDateSummary];
        if (v30) {
          goto LABEL_25;
        }
        goto LABEL_26;
      }
      if (((1 << a2) & 0x410000) != 0)
      {
        if ([self isArabic])
        {
          id v10 = [v8 relativeRangeAmountAndTimeInterval];
          if (v10)
          {
            uint64_t v11 = v10;
            uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v14 = v13;
          }
          else
          {
            uint64_t v12 = 0;
            uint64_t v14 = 0;
          }
          uint64_t v42 = (uint64_t *)&a1[OBJC_IVAR____TtC11MobileNotes29FolderComposerFilterCellEntry_leadingText];
          uint64_t *v42 = v12;
          v42[1] = v14;
          swift_bridgeObjectRelease();
          [a1 setNeedsUpdateConfiguration];
          id v30 = [v8 relativeRangeLabel];
          if (!v30)
          {
            uint64_t v43 = 0;
            unint64_t v44 = 0xE000000000000000;
LABEL_27:
            unsigned __int8 v48 = (uint64_t *)&a1[OBJC_IVAR____TtC11MobileNotes29FolderComposerFilterCellEntry_trailingText];
            uint64_t *v48 = v43;
            v48[1] = v44;
            goto LABEL_28;
          }
LABEL_25:
          uint64_t v46 = v30;
          uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v44 = v47;

          goto LABEL_27;
        }
        id v37 = [v8 relativeRangeLabel];
        if (v37)
        {
          id v38 = v37;
          uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v41 = v40;
        }
        else
        {
          uint64_t v39 = 0;
          unint64_t v41 = 0xE000000000000000;
        }
        uint64_t v45 = (uint64_t *)&a1[OBJC_IVAR____TtC11MobileNotes29FolderComposerFilterCellEntry_leadingText];
        *uint64_t v45 = v39;
        v45[1] = v41;
        swift_bridgeObjectRelease();
        [a1 setNeedsUpdateConfiguration];
        id v30 = [v8 relativeRangeAmountAndTimeInterval];
        if (v30) {
          goto LABEL_25;
        }
LABEL_26:
        uint64_t v43 = 0;
        unint64_t v44 = 0;
        goto LABEL_27;
      }
    }
    Class v31 = &a1[OBJC_IVAR____TtC11MobileNotes29FolderComposerFilterCellEntry_leadingText];
    *Class v31 = 0;
    v31[1] = 0;
    swift_bridgeObjectRelease();
    [a1 setNeedsUpdateConfiguration];
    id v22 = [v8 primaryDateSummary];
    goto LABEL_17;
  }
LABEL_29:
  self;
  uint64_t v49 = swift_dynamicCastObjCClass();
  if (v49)
  {
    uint64_t v50 = (void *)v49;
    a1[OBJC_IVAR____TtC11MobileNotes29FolderComposerFilterCellEntry_showDisclosure] = 1;
    id v51 = v91;
    [a1 setNeedsUpdateConfiguration];
    uint64_t v52 = self;
    id v53 = [v52 mainBundle];
    NSString v54 = String._bridgeToObjectiveC()();
    id v55 = [v53 localizedStringForKey:v54 value:0 table:0];

    uint64_t v56 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v58 = v57;

    uint64_t v59 = (uint64_t *)&a1[OBJC_IVAR____TtC11MobileNotes29FolderComposerFilterCellEntry_leadingText];
    *uint64_t v59 = v56;
    v59[1] = v58;
    swift_bridgeObjectRelease();
    [a1 setNeedsUpdateConfiguration];
    id v60 = [v50 participantUserIDs];
    uint64_t v61 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v62 = *(void *)(v61 + 16);
    swift_bridgeObjectRelease();
    if (v62)
    {
      id v63 = [v50 summary];
    }
    else
    {
      id v64 = [v52 mainBundle];
      NSString v65 = String._bridgeToObjectiveC()();
      id v63 = [v64 localizedStringForKey:v65 value:0 table:0];
    }
    uint64_t v66 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v68 = v67;

    uint64_t v69 = (uint64_t *)&a1[OBJC_IVAR____TtC11MobileNotes29FolderComposerFilterCellEntry_trailingText];
    *uint64_t v69 = v66;
    v69[1] = v68;
    swift_bridgeObjectRelease();
    [a1 setNeedsUpdateConfiguration];
  }
  self;
  uint64_t v70 = swift_dynamicCastObjCClass();
  if (v70)
  {
    id v71 = (void *)v70;
    a1[OBJC_IVAR____TtC11MobileNotes29FolderComposerFilterCellEntry_showDisclosure] = 1;
    id v72 = v91;
    [a1 setNeedsUpdateConfiguration];
    id v73 = self;
    id v74 = [v73 mainBundle];
    NSString v75 = String._bridgeToObjectiveC()();
    id v76 = [v74 localizedStringForKey:v75 value:0 table:0];

    uint64_t v77 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v79 = v78;

    double v80 = (uint64_t *)&a1[OBJC_IVAR____TtC11MobileNotes29FolderComposerFilterCellEntry_leadingText];
    *double v80 = v77;
    v80[1] = v79;
    swift_bridgeObjectRelease();
    [a1 setNeedsUpdateConfiguration];
    id v81 = [v71 folderIdentifiers];
    uint64_t v82 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v83 = *(void *)(v82 + 16);
    swift_bridgeObjectRelease();
    if (v83)
    {
      id v84 = [v71 folderSummaryList];
    }
    else
    {
      id v85 = [v73 mainBundle];
      NSString v86 = String._bridgeToObjectiveC()();
      id v84 = [v85 localizedStringForKey:v86 value:0 table:0];
    }
    uint64_t v87 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v89 = v88;

    uint64_t v90 = (uint64_t *)&a1[OBJC_IVAR____TtC11MobileNotes29FolderComposerFilterCellEntry_trailingText];
    uint64_t *v90 = v87;
    v90[1] = v89;
    swift_bridgeObjectRelease();
    [a1 setNeedsUpdateConfiguration];
  }
}

void sub_1002DDEBC(char *a1, uint64_t a2, unsigned __int8 *a3, void *a4)
{
  unsigned __int8 v6 = *a3;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a4;
  *(unsigned char *)(v7 + 24) = v6;
  uint64_t v8 = (void (**)(uint64_t))&a1[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker_dateSelectionChanged];
  uint64_t v9 = *(void *)&a1[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker_dateSelectionChanged];
  *uint64_t v8 = sub_1002E2F9C;
  v8[1] = (void (*)(uint64_t))v7;
  id v10 = a4;
  sub_10002E70C(v9);
  sub_1002DE68C(a1, v6);
}

void sub_1002DDF5C(uint64_t a1, char a2)
{
  uint64_t v3 = sub_10002F214((uint64_t *)&unk_1006A2670);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  unsigned __int8 v6 = (char *)v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)v60 - v8;
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v60 - v10;
  uint64_t v12 = type metadata accessor for IndexPath();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  NSString v16 = (char *)v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)v60 - v18;
  __chkstk_darwin(v17);
  unsigned __int8 v21 = (char *)v60 - v20;
  char v22 = a2 - 1;
  if ((a2 - 1) > 0x21u) {
    return;
  }
  if (((0x3FFFFE7FFuLL >> v22) & 1) == 0) {
    return;
  }
  id v23 = [*(id *)((char *)v67 + OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_filterSelection) filterTypeSelectionForFilterType:qword_100531D90[v22]];
  if (!v23) {
    return;
  }
  uint64_t v65 = v13;
  id v66 = v23;
  self;
  uint64_t v24 = swift_dynamicCastObjCClass();
  if (!v24) {
    goto LABEL_22;
  }
  id v25 = (void *)v24;
  if (*((unsigned char *)v67 + OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_prefersPopoverEntries) == 1)
  {
    unsigned int v26 = (a2 - 26);
    if (v26 < 4)
    {
      Class v27 = v67;
      uint64_t v28 = (SEL *)off_100634960[(char)(a2 - 26)];
      unsigned int v29 = 0x1C1D1A1Bu >> (8 * v26);
      Class isa = Date._bridgeToObjectiveC()().super.isa;
      [v25 *v28 isa];

      id v32 = (void *)sub_1002D8868(v31);
      char v68 = v29;
      dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();

      uint64_t v33 = v65;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v11, 1, v12) == 1)
      {

        sub_10002B754((uint64_t)v11, (uint64_t *)&unk_1006A2670);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v21, v11, v12);
        uint64_t v39 = *(void **)((char *)v27 + OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_collectionView);
        Class v40 = IndexPath._bridgeToObjectiveC()().super.isa;
        id v41 = [v39 cellForItemAtIndexPath:v40];

        if (v41)
        {
          type metadata accessor for FolderComposerFilterCellDatePicker();
          uint64_t v42 = (char *)swift_dynamicCastClass();
          if (v42) {
            sub_1002DE68C(v42, v29);
          }
        }
        (*(void (**)(char *, uint64_t))(v65 + 8))(v21, v12);
      }
      return;
    }
    Class v67 = Date._bridgeToObjectiveC()().super.isa;
    [v25 setPrimaryDate:v67];

    Class v38 = v67;
    goto LABEL_23;
  }
  uint64_t v34 = OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_selectedInlineEntryItem;
  int v35 = 0;
  int v36 = 15;
  id v37 = &selRef_setPrimaryDate_;
  switch(*((unsigned char *)v67 + OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_selectedInlineEntryItem))
  {
    case 0xE:
      break;
    case 0xF:
      int v35 = 0;
      int v36 = 14;
      goto LABEL_20;
    case 0x14:
      int v35 = 0;
      int v36 = 21;
      break;
    case 0x15:
      int v35 = 0;
      int v36 = 20;
LABEL_20:
      id v37 = &selRef_setSecondaryDate_;
      break;
    default:
      int v36 = 35;
      int v35 = 1;
      id v37 = &selRef_setPrimaryDate_;
      break;
  }
  int v64 = v36;
  Class v43 = Date._bridgeToObjectiveC()().super.isa;
  [v25 *v37 v43];

  int v45 = *((unsigned __int8 *)v67 + v34);
  if (v45 == 35)
  {
LABEL_22:
    Class v38 = (Class)v66;
LABEL_23:

    return;
  }
  Class v46 = v67;
  unint64_t v47 = (void *)sub_1002D8868(v44);
  char v70 = v45;
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();

  uint64_t v48 = v65;
  id v63 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48);
  if (v63(v9, 1, v12) == 1)
  {

    sub_10002B754((uint64_t)v9, (uint64_t *)&unk_1006A2670);
    return;
  }
  uint64_t v61 = *(void (**)(char *, char *, uint64_t))(v48 + 32);
  uint64_t v62 = v48 + 32;
  v61(v19, v9, v12);
  uint64_t v49 = *(void **)((char *)v46 + OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_collectionView);
  Class v50 = IndexPath._bridgeToObjectiveC()().super.isa;
  id v51 = [v49 cellForItemAtIndexPath:v50];

  if (!v51)
  {
LABEL_33:

    (*(void (**)(char *, uint64_t))(v65 + 8))(v19, v12);
    return;
  }
  uint64_t v52 = type metadata accessor for FolderComposerFilterCellEntry();
  id v53 = (unsigned char *)swift_dynamicCastClass();
  if (!v53)
  {

    goto LABEL_33;
  }
  v60[1] = v52;
  sub_1002DD5D0(v53, v45);
  if (v35)
  {
    (*(void (**)(char *, uint64_t))(v65 + 8))(v19, v12);
  }
  else
  {
    id v55 = (void *)sub_1002D8868(v54);
    char v69 = v64;
    dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();

    if (v63(v6, 1, v12) == 1)
    {
      (*(void (**)(char *, uint64_t))(v65 + 8))(v19, v12);

      sub_10002B754((uint64_t)v6, (uint64_t *)&unk_1006A2670);
    }
    else
    {
      v61(v16, v6, v12);
      Class v56 = IndexPath._bridgeToObjectiveC()().super.isa;
      id v57 = [v49 cellForItemAtIndexPath:v56];

      if (v57)
      {
        uint64_t v58 = (unsigned char *)swift_dynamicCastClass();
        if (v58) {
          sub_1002DD5D0(v58, v64);
        }
      }
      uint64_t v59 = *(void (**)(char *, uint64_t))(v65 + 8);
      v59(v16, v12);
      v59(v19, v12);
    }
  }
}

void sub_1002DE68C(char *a1, unsigned __int8 a2)
{
  uint64_t v5 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v42 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v42 - v12;
  uint64_t v14 = sub_1002D8D2C(a2);
  if (v15) {
    goto LABEL_8;
  }
  id v16 = [*(id *)(v2 + OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_filterSelection) filterTypeSelectionForFilterType:v14];
  if (!v16) {
    goto LABEL_8;
  }
  uint64_t v17 = v16;
  self;
  uint64_t v18 = (void *)swift_dynamicCastObjCClass();
  if (!v18)
  {

LABEL_8:
    id v23 = &a1[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker_popoverLeadingText];
    *(void *)id v23 = 0;
    *((void *)v23 + 1) = 0;
    swift_bridgeObjectRelease();
    [a1 setNeedsUpdateConfiguration];
    static Date.now.getter();
    uint64_t v24 = type metadata accessor for Date();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v8, 0, 1, v24);
    uint64_t v25 = (uint64_t)&a1[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker_date];
    swift_beginAccess();
    sub_10021E924((uint64_t)v8, v25);
    swift_endAccess();
    [a1 setNeedsUpdateConfiguration];
    sub_10002B754((uint64_t)v8, (uint64_t *)&unk_1006A3E20);
    return;
  }
  uint64_t v19 = v18;
  switch(a2)
  {
    case 0x1Au:
    case 0x1Cu:
      id v20 = [v18 primaryDate];
      if (v20)
      {
        unsigned __int8 v21 = v20;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v22 = type metadata accessor for Date();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v13, 0, 1, v22);
      }
      else
      {
        uint64_t v29 = type metadata accessor for Date();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v13, 1, 1, v29);
      }
      uint64_t v30 = (uint64_t)&a1[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker_date];
      swift_beginAccess();
      sub_10021E924((uint64_t)v13, v30);
      swift_endAccess();
      goto LABEL_15;
    case 0x1Bu:
    case 0x1Du:
      id v26 = [v18 secondaryDate];
      if (v26)
      {
        Class v27 = v26;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v28 = type metadata accessor for Date();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v11, 0, 1, v28);
      }
      else
      {
        uint64_t v31 = type metadata accessor for Date();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v11, 1, 1, v31);
      }
      uint64_t v32 = (uint64_t)&a1[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker_date];
      swift_beginAccess();
      sub_10021E924((uint64_t)v11, v32);
      swift_endAccess();
      uint64_t v13 = v11;
LABEL_15:
      [a1 setNeedsUpdateConfiguration];
      sub_10002B754((uint64_t)v13, (uint64_t *)&unk_1006A3E20);
      break;
    default:
      break;
  }
  uint64_t v33 = OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_prefersPopoverEntries;
  a1[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker_prefersPopover] = *(unsigned char *)(v2
                                                                                                  + OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_prefersPopoverEntries);
  [a1 setNeedsUpdateConfiguration];
  if (*(unsigned char *)(v2 + v33) == 1)
  {
    if ([v19 selectionType] == (id)6)
    {
      switch(a2)
      {
        case 0x1Au:
        case 0x1Bu:
        case 0x1Cu:
        case 0x1Du:
          id v35 = [self mainBundle];
          NSString v36 = String._bridgeToObjectiveC()();
          id v37 = [v35 localizedStringForKey:v36 value:0 table:0];

          uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v40 = v39;

          id v41 = (uint64_t *)&a1[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker_popoverLeadingText];
          uint64_t *v41 = v38;
          v41[1] = v40;
          break;
        default:
          goto LABEL_19;
      }
    }
    else
    {
LABEL_19:
      uint64_t v34 = &a1[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker_popoverLeadingText];
      *(void *)uint64_t v34 = 0;
      *((void *)v34 + 1) = 0;
    }
    swift_bridgeObjectRelease();
    [a1 setNeedsUpdateConfiguration];
  }
}

void sub_1002DEC3C(char *a1, uint64_t a2, char *a3, void *a4)
{
  char v6 = *a3;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a4;
  *(unsigned char *)(v7 + 24) = v6;
  uint64_t v8 = (void (**)(uint64_t, uint64_t))&a1[OBJC_IVAR____TtC11MobileNotes39FolderComposerFilterCellDateRangePicker_rangeSelectionChanged];
  uint64_t v9 = *(void *)&a1[OBJC_IVAR____TtC11MobileNotes39FolderComposerFilterCellDateRangePicker_rangeSelectionChanged];
  *uint64_t v8 = sub_1002E2F64;
  v8[1] = (void (*)(uint64_t, uint64_t))v7;
  id v10 = a4;
  sub_10002E70C(v9);
  sub_1002DEFD8(a1);
}

void sub_1002DECD0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = sub_10002F214((uint64_t *)&unk_1006A2670);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for IndexPath();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v14 = a3 - 1;
  if (a3 - 1) <= 0x21u && ((0x3FFFFE7FFuLL >> v14))
  {
    id v15 = [*(id *)(v3 + OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_filterSelection) filterTypeSelectionForFilterType:qword_100531D90[v14]];
    if (v15)
    {
      id v27 = v15;
      self;
      id v16 = (void *)swift_dynamicCastObjCClass();
      if (v16
        && (uint64_t v17 = v16,
            [v16 setRelativeRangeSelectionType:a1],
            Class v18 = Int._bridgeToObjectiveC()().super.super.isa,
            [v17 setRelativeRangeAmount:v18],
            v18,
            int v20 = *(unsigned __int8 *)(v4
                                     + OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_selectedInlineEntryItem),
            v20 != 35))
      {
        uint64_t v22 = (void *)sub_1002D8868(v19);
        char v28 = v20;
        dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();

        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
        {

          sub_10002B754((uint64_t)v9, (uint64_t *)&unk_1006A2670);
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
          id v23 = *(void **)(v4 + OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_collectionView);
          Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
          id v25 = [v23 cellForItemAtIndexPath:isa];

          if (v25)
          {
            type metadata accessor for FolderComposerFilterCellEntry();
            id v26 = (unsigned char *)swift_dynamicCastClass();
            if (v26) {
              sub_1002DD5D0(v26, v20);
            }
          }
          (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
        }
      }
      else
      {
        id v21 = v27;
      }
    }
  }
}

void sub_1002DEFD8(char *a1)
{
  uint64_t v2 = OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_selectedInlineEntryItem;
  unsigned int v3 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_selectedInlineEntryItem)
     - 1;
  if (v3 <= 0x21 && ((0x3FFFFE7FFuLL >> v3) & 1) != 0)
  {
    id v5 = [*(id *)(v1 + OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_filterSelection) filterTypeSelectionForFilterType:qword_100531C80[(char)v3]];
    if (v5)
    {
      id v16 = v5;
      self;
      char v6 = (void *)swift_dynamicCastObjCClass();
      if (v6)
      {
        int v7 = *(unsigned __int8 *)(v1 + v2);
        if (v7 == 22 || v7 == 16)
        {
          uint64_t v9 = v6;
          id v10 = [v6 relativeRangeAmount];
          uint64_t v11 = v10;
          if (v10)
          {
            id v12 = [v10 integerValue];
          }
          else
          {
            id v12 = 0;
          }
          uint64_t v13 = &a1[OBJC_IVAR____TtC11MobileNotes39FolderComposerFilterCellDateRangePicker_amount];
          *(void *)uint64_t v13 = v12;
          unsigned char v13[8] = v11 == 0;
          [a1 setNeedsUpdateConfiguration];
          id v14 = [v9 relativeRangeSelectionType];
          id v15 = &a1[OBJC_IVAR____TtC11MobileNotes39FolderComposerFilterCellDateRangePicker_rangeType];
          *(void *)id v15 = v14;
          v15[8] = 0;
          [a1 setNeedsUpdateConfiguration];
        }
      }
    }
  }
}

uint64_t sub_1002DF160(unsigned char *a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  uint64_t v6 = 3;
  if (!a4[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_tagRowLimit + 8]) {
    uint64_t v6 = *(void *)&a4[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_tagRowLimit];
  }
  int v7 = &a1[OBJC_IVAR___ICTagContainerCell_tagRowLimit];
  uint64_t v8 = *(void *)&a1[OBJC_IVAR___ICTagContainerCell_tagRowLimit];
  char v9 = a1[OBJC_IVAR___ICTagContainerCell_tagRowLimit + 8];
  *(void *)int v7 = v6;
  v7[8] = 0;
  if ((v9 & 1) != 0 || v6 != v8) {
    sub_10028E1D4();
  }
  uint64_t v10 = OBJC_IVAR___ICTagContainerCell_allowsContextualMenu;
  a1[OBJC_IVAR___ICTagContainerCell_allowsContextualMenu] = 0;
  uint64_t v11 = sub_10028DF24();
  v11[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_allowsContextualMenu] = a1[v10];

  char v12 = a1[OBJC_IVAR___ICTagContainerCell_hasGroupInset];
  a1[OBJC_IVAR___ICTagContainerCell_hasGroupInset] = 1;
  if ((v12 & 1) == 0)
  {
    [a1 setNeedsLayout];
    [a1 layoutIfNeeded];
    [a1 setNeedsUpdateConfiguration];
  }
  char v13 = a1[OBJC_IVAR___ICTagContainerCell_allowsExclusion];
  a1[OBJC_IVAR___ICTagContainerCell_allowsExclusion] = 1;
  if ((v13 & 1) == 0) {
    [a1 setNeedsUpdateConfiguration];
  }
  char v14 = a1[OBJC_IVAR___ICTagContainerCell_includesNewTagItem];
  a1[OBJC_IVAR___ICTagContainerCell_includesNewTagItem] = 1;
  if ((v14 & 1) == 0) {
    [a1 setNeedsUpdateConfiguration];
  }
  int v15 = a1[OBJC_IVAR___ICTagContainerCell_includesAllTagsItem];
  a1[OBJC_IVAR___ICTagContainerCell_includesAllTagsItem] = 0;
  if (v15 == 1) {
    [a1 setNeedsUpdateConfiguration];
  }
  id v16 = *(void **)&a4[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_presentingViewController];
  uint64_t v17 = OBJC_IVAR___ICTagContainerCell_presentingViewController;
  Class v18 = *(void **)&a1[OBJC_IVAR___ICTagContainerCell_presentingViewController];
  *(void *)&a1[OBJC_IVAR___ICTagContainerCell_presentingViewController] = v16;
  id v19 = v16;

  int v20 = sub_10028DF24();
  id v21 = *(void **)&a1[v17];
  uint64_t v22 = *(void **)&v20[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_presentingViewController];
  *(void *)&v20[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_presentingViewController] = v21;
  id v23 = v21;

  uint64_t v24 = *(void **)&a4[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_accountObjectID];
  uint64_t v25 = OBJC_IVAR___ICTagContainerCell_defaultAccountObjectID;
  id v26 = *(void **)&a1[OBJC_IVAR___ICTagContainerCell_defaultAccountObjectID];
  *(void *)&a1[OBJC_IVAR___ICTagContainerCell_defaultAccountObjectID] = v24;
  id v27 = v24;

  char v28 = sub_10028DF24();
  uint64_t v29 = *(void **)&a1[v25];
  uint64_t v30 = *(void **)&v28[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_defaultAccountObjectID];
  *(void *)&v28[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_defaultAccountObjectID] = v29;
  id v31 = v29;

  a1[OBJC_IVAR___ICTagContainerCell_preservesSuperviewHorizontalLayoutMargins] = 1;
  [a1 setNeedsUpdateConfiguration];
  uint64_t v32 = (char *)[*(id *)&a4[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_filterSelection] filterTypeSelectionForFilterType:0];
  if (v32)
  {
    uint64_t v33 = v32;
    self;
    uint64_t v34 = (void *)swift_dynamicCastObjCClass();
    if (v34)
    {
      id v35 = v34;
      if (![v34 mode])
      {
        NSString v36 = v33;
        uint64_t v33 = sub_10028DF24();
        sub_10038AFF0(v35, 0);
      }
    }
  }
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = a4;
  uint64_t v38 = (void (**)(void *))&a1[OBJC_IVAR___ICTagContainerCell_selectionDidChange];
  uint64_t v39 = *(void *)&a1[OBJC_IVAR___ICTagContainerCell_selectionDidChange];
  *uint64_t v38 = sub_1002E2ED4;
  v38[1] = (void (*)(void *))v37;
  uint64_t v40 = a4;
  sub_10002E70C(v39);
  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + 16) = v40;
  uint64_t v42 = (uint64_t (**)())&a1[OBJC_IVAR___ICTagContainerCell_dataDidChange];
  uint64_t v43 = *(void *)&a1[OBJC_IVAR___ICTagContainerCell_dataDidChange];
  char *v42 = sub_1002E2EDC;
  v42[1] = (uint64_t (*)())v41;
  uint64_t v44 = v40;

  return sub_10002E70C(v43);
}

void sub_1002DF4F8(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_10002F214((uint64_t *)&unk_1006A2670);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v26[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for IndexPath();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = &v26[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  char v12 = (void *)sub_1002D8868(v9);
  v26[15] = 8;
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();

  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_10002B754((uint64_t)v6, (uint64_t *)&unk_1006A2670);
    return;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 32))(v11, v6, v7);
  char v13 = *(void **)(a2 + OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_collectionView);
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v15 = [v13 cellForItemAtIndexPath:isa];

  if (v15)
  {
    type metadata accessor for FolderComposerFilterCellTags();
    uint64_t v16 = swift_dynamicCastClass();
    if (v16
      && (uint64_t v17 = (char *)v16,
          uint64_t v18 = OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection,
          (id v19 = *(void **)(v16 + OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection)) != 0)
      && (self, (uint64_t v20 = swift_dynamicCastObjCClass()) != 0))
    {
      id v21 = (void *)v20;
      id v22 = v19;
      if ([v21 mode])
      {
        (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v11, v7);

        return;
      }
      [a1 setTagOperator:[v21 tagOperator]];
      id v23 = *(void **)&v17[v18];
      *(void *)&v17[v18] = a1;
      id v24 = a1;
      id v25 = v15;

      [v17 setNeedsUpdateConfiguration];
      [*(id *)(a2 + OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_filterSelection) setSelection:v24 forFilterType:0];
    }
    else
    {
    }
  }
  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_1002DF7F8()
{
  uint64_t v0 = sub_10002F214(&qword_1006A1400);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (void *)sub_1002D8868(v2);
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

  uint64_t v6 = sub_1002E1650((uint64_t)&off_10062C848, (uint64_t)v4);
  if (*(void *)(v6 + 16))
  {
    NSDiffableDataSourceSnapshot.reconfigureItems(_:)((Swift::OpaquePointer)v6);
    uint64_t v7 = swift_bridgeObjectRelease();
    uint64_t v8 = (void *)sub_1002D8868(v7);
    dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  return sub_1002DCA40();
}

id sub_1002DF94C(char *a1)
{
  uint64_t v2 = sub_1002DC854();
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    uint64_t v4 = sub_10028DF24();

    uint64_t v5 = *(void **)&v4[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagDataSource];
    if (v5 && (uint64_t v6 = (char *)[v5 indexer]) != 0)
    {
      uint64_t v7 = v6;
      self;
      uint64_t v8 = (void *)swift_dynamicCastObjCClass();
      if (v8) {
        id v9 = [v8 hiddenTagCount];
      }
      else {
        id v9 = 0;
      }
    }
    else
    {
      id v9 = 0;
      uint64_t v7 = v4;
    }
  }
  else
  {
    id v9 = 0;
  }
  *(void *)&a1[OBJC_IVAR____TtC11MobileNotes42FolderComposerFilterCellTagsExpandCollapse_hiddenTagCount] = v9;

  return [a1 setNeedsUpdateConfiguration];
}

uint64_t sub_1002DFA3C(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  switch(*a3)
  {
    case 1:
      type metadata accessor for FolderComposerFilterCellQuickNotes();
      break;
    case 2:
      type metadata accessor for FolderComposerFilterCellPinnedNotes();
      break;
    case 3:
      type metadata accessor for FolderComposerFilterCellLockedNotes();
      break;
    case 4:
      type metadata accessor for FolderComposerFilterCellDateCreated();
      break;
    case 5:
      type metadata accessor for FolderComposerFilterCellDateEdited();
      break;
    case 6:
      type metadata accessor for FolderComposerFilterCellShared();
      break;
    case 7:
      type metadata accessor for FolderComposerFilterCellMentions();
      break;
    case 8:
      type metadata accessor for FolderComposerFilterCellTags();
      break;
    case 9:
      type metadata accessor for FolderComposerFilterCellChecklists();
      break;
    case 0xA:
      type metadata accessor for FolderComposerFilterCellAttachments();
      break;
    case 0xB:
      type metadata accessor for FolderComposerFilterCellFolders();
      break;
    case 0xC:
      type metadata accessor for TagContainerCell();
      break;
    case 0xD:
      type metadata accessor for FolderComposerFilterCellTagsExpandCollapse();
      break;
    case 0xE:
    case 0xF:
    case 0x10:
    case 0x11:
    case 0x12:
    case 0x13:
    case 0x14:
    case 0x15:
    case 0x16:
    case 0x17:
    case 0x18:
    case 0x19:
    case 0x20:
    case 0x21:
    case 0x22:
      type metadata accessor for FolderComposerFilterCellEntry();
      break;
    case 0x1A:
    case 0x1B:
    case 0x1C:
    case 0x1D:
      type metadata accessor for FolderComposerFilterCellDatePicker();
      break;
    case 0x1E:
    case 0x1F:
      type metadata accessor for FolderComposerFilterCellDateRangePicker();
      break;
    default:
      type metadata accessor for FolderComposerFilterJoinCell();
      break;
  }
  return UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();
}

unint64_t sub_1002DFDF4(char *a1)
{
  uint64_t v2 = sub_10002F214(&qword_1006A1400);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (void *)sub_1002D8868(v4);
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

  uint64_t v8 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  unint64_t result = IndexPath.section.getter();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)(v8 + 16))
  {
    unsigned __int8 v10 = *(unsigned char *)(v8 + result + 32);
    swift_bridgeObjectRelease();
    return sub_1002DFF34(a1, v10);
  }
  __break(1u);
  return result;
}

uint64_t sub_1002DFF34(char *a1, unsigned __int8 a2)
{
  int v4 = a2;
  uint64_t v5 = sub_10002F214(&qword_1006A1400);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  id v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v10 = (void *)sub_1002D8868(v7);
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

  if (v4 == 12)
  {
    NSDiffableDataSourceSnapshot.numberOfSections.getter();
    id v11 = [self mainBundle];
    NSString v12 = String._bridgeToObjectiveC()();
    id v13 = [v11 localizedStringForKey:v12 value:0 table:0];
  }
  else
  {
    uint64_t v14 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter();
    uint64_t v15 = sub_1004A0758(a2, v14);
    char v17 = v16;
    swift_bridgeObjectRelease();
    if ((v17 & 1) != 0 || v15 != 1)
    {
      id v23 = &a1[OBJC_IVAR____TtC11MobileNotes26FolderComposerFilterHeader_text];
      *(void *)id v23 = 0;
      *((void *)v23 + 1) = 0;
      goto LABEL_8;
    }
    id v11 = [self mainBundle];
    NSString v12 = String._bridgeToObjectiveC()();
    id v13 = [v11 localizedStringForKey:v12 value:0 table:0];
  }
  id v18 = v13;

  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;

  id v22 = (uint64_t *)&a1[OBJC_IVAR____TtC11MobileNotes26FolderComposerFilterHeader_text];
  uint64_t *v22 = v19;
  v22[1] = v21;
LABEL_8:
  swift_bridgeObjectRelease();
  [a1 setNeedsUpdateConfiguration];
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_1002E0204(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == a2 && v5 == a3)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v7)
  {
LABEL_12:
    type metadata accessor for FolderComposerFilterHeader();
    return UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)();
  }
  if (static String._unconditionallyBridgeFromObjectiveC(_:)() != a2 || v8 != a3) {
    _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t type metadata accessor for FolderComposerFilterDataSource()
{
  return self;
}

uint64_t getEnumTagSinglePayload for FolderComposerFilterDataSource.Item(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xDE) {
    goto LABEL_17;
  }
  if (a2 + 34 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 34) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 34;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 34;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 34;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x23;
  int v8 = v6 - 35;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FolderComposerFilterDataSource.Item(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 34 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 34) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xDE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xDD)
  {
    unsigned int v6 = ((a2 - 222) >> 8) + 1;
    *unint64_t result = a2 + 34;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002E0538);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 34;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FolderComposerFilterDataSource.Item()
{
  return &type metadata for FolderComposerFilterDataSource.Item;
}

uint64_t getEnumTagSinglePayload for FolderComposerFilterDataSource.Section(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF4) {
    goto LABEL_17;
  }
  if (a2 + 12 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 12) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 12;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v8 = v6 - 13;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FolderComposerFilterDataSource.Section(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *unint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002E06CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FolderComposerFilterDataSource.Section()
{
  return &type metadata for FolderComposerFilterDataSource.Section;
}

uint64_t sub_1002E0704()
{
  return sub_10001DFB0(&qword_1006A2638, &qword_1006A2640);
}

unint64_t sub_1002E0744()
{
  unint64_t result = qword_1006A2648;
  if (!qword_1006A2648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A2648);
  }
  return result;
}

uint64_t sub_1002E0798()
{
  return sub_10001DFB0(&qword_1006A2650, &qword_1006A2658);
}

unint64_t sub_1002E07D8()
{
  unint64_t result = qword_1006A2660;
  if (!qword_1006A2660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A2660);
  }
  return result;
}

uint64_t sub_1002E0830(unint64_t a1)
{
  return sub_1001A893C(0, *(void *)(a1 + 16), 0, a1);
}

void *sub_1002E0844(void *a1)
{
  return sub_1001A8AA4(0, a1[2], 0, a1);
}

void *sub_1002E0858(void *a1)
{
  return sub_1001A8A98(0, a1[2], 0, a1);
}

uint64_t sub_1002E086C(unint64_t a1)
{
  return sub_1001A8D54(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_1002E0880(unint64_t a1)
{
  return sub_1001A9298(0, *(void *)(a1 + 16), 0, a1);
}

void *sub_1002E0894(void *a1)
{
  return sub_1001A94D4(0, a1[2], 0, a1);
}

uint64_t sub_1002E08A8(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }

  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

char *sub_1002E0924(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  unsigned int v6 = *(void **)v4;
  int64_t v7 = *(void *)(*(void *)v4 + 16);
  if (v7 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v11 > v6[3] >> 1)
  {
    if (v7 <= v11) {
      int64_t v15 = v7 + v10;
    }
    else {
      int64_t v15 = v7;
    }
    unsigned int v6 = sub_1001A847C(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }
  char v16 = &v6[2 * a1 + 4];
  unint64_t result = (char *)swift_arrayDestroy();
  if (!v10) {
    goto LABEL_20;
  }
  uint64_t v18 = v6[2];
  BOOL v19 = __OFSUB__(v18, a2);
  uint64_t v20 = v18 - a2;
  if (v19) {
    goto LABEL_26;
  }
  if ((v20 & 0x8000000000000000) == 0)
  {
    unint64_t result = (char *)(v16 + 2);
    uint64_t v21 = &v6[2 * a2 + 4];
    if (v16 + 2 != v21 || result >= (char *)&v21[2 * v20]) {
      unint64_t result = (char *)memmove(result, v21, 16 * v20);
    }
    uint64_t v22 = v6[2];
    BOOL v19 = __OFADD__(v22, v10);
    uint64_t v23 = v22 + v10;
    if (!v19)
    {
      void v6[2] = v23;
LABEL_20:
      *char v16 = a3;
      v16[1] = a4;
      *(void *)uint64_t v4 = v6;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  unint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_1002E0AA8(uint64_t a1, int64_t a2, char a3)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v5 = *(void **)v3;
  int64_t v6 = *(void *)(*(void *)v3 + 16);
  if (v6 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  unint64_t result = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!result || v10 > v5[3] >> 1)
  {
    if (v6 <= v10) {
      int64_t v13 = v6 + v9;
    }
    else {
      int64_t v13 = v6;
    }
    unint64_t result = (char *)sub_1001A8A98(result, v13, 1, v5);
    uint64_t v5 = result;
  }
  uint64_t v14 = v5 + 4;
  int64_t v15 = (char *)v5 + a1 + 32;
  if (!v9) {
    goto LABEL_20;
  }
  uint64_t v16 = v5[2];
  size_t v17 = v16 - a2;
  if (__OFSUB__(v16, a2)) {
    goto LABEL_26;
  }
  if ((v17 & 0x8000000000000000) == 0)
  {
    unint64_t result = v15 + 1;
    uint64_t v18 = (char *)v14 + a2;
    if (v15 + 1 != (char *)v14 + a2 || result >= &v18[v17]) {
      unint64_t result = (char *)memmove(result, v18, v17);
    }
    uint64_t v19 = v5[2];
    BOOL v20 = __OFADD__(v19, v9);
    uint64_t v21 = v19 + v9;
    if (!v20)
    {
      _OWORD v5[2] = v21;
LABEL_20:
      unsigned char *v15 = a3;
      *(void *)uint64_t v3 = v5;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  unint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1002E0C08(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1002E0F54(a1, a2, a3, (unint64_t *)&qword_1006A4D30, (uint64_t)UIMenuElement_ptr, (uint64_t (*)(uint64_t))sub_1001A9C74);
}

uint64_t sub_1002E0C30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = a3;
    uint64_t v5 = a2;
    uint64_t v6 = a1;
    if (!(*v4 >> 62))
    {
      if (*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v22 < v5) {
    goto LABEL_29;
  }
LABEL_4:
  uint64_t v8 = v5 - v6;
  if (__OFSUB__(v5, v6))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v7 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v10 = v23 + v7;
    if (!__OFADD__(v23, v7)) {
      goto LABEL_8;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (*v4 >> 62) {
    goto LABEL_32;
  }
  uint64_t v9 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v10 = v9 + v7;
  if (__OFADD__(v9, v7)) {
    goto LABEL_34;
  }
LABEL_8:
  unint64_t v11 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v4 = v11;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v11 & 0x8000000000000000) != 0
    || (v11 & 0x4000000000000000) != 0
    || (uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8, v10 > *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v11 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      unint64_t v11 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      swift_bridgeObjectRelease();
      *uint64_t v4 = v11;
      uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_14;
    }
LABEL_35:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  uint64_t v14 = (void *)(v13 + 32 + 8 * v6);
  sub_100031418(0, (unint64_t *)&unk_1006A2770);
  swift_arrayDestroy();
  if (v7)
  {
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v16 = v24 - v5;
      if (!__OFSUB__(v24, v5))
      {
LABEL_17:
        if (v16 < 0)
        {
LABEL_42:
          uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
          __break(1u);
          return result;
        }
        size_t v17 = (char *)(v14 + 1);
        uint64_t v18 = (char *)(v13 + 32 + 8 * v5);
        if (v14 + 1 != (void *)v18 || v17 >= &v18[8 * v16]) {
          memmove(v17, v18, 8 * v16);
        }
        if (!(v11 >> 62))
        {
          uint64_t v19 = *(void *)(v13 + 16);
          uint64_t v20 = v19 + v7;
          if (!__OFADD__(v19, v7))
          {
LABEL_23:
            *(void *)(v13 + 16) = v20;
            goto LABEL_24;
          }
          goto LABEL_41;
        }
LABEL_39:
        swift_bridgeObjectRetain();
        uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v20 = v25 + v7;
        if (!__OFADD__(v25, v7)) {
          goto LABEL_23;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v15 = *(void *)(v13 + 16);
      uint64_t v16 = v15 - v5;
      if (!__OFSUB__(v15, v5)) {
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_39;
  }
LABEL_24:
  *uint64_t v14 = v3;

  return specialized Array._endMutation()();
}