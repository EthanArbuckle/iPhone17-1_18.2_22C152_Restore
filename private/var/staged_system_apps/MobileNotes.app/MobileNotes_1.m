unint64_t sub_10017F5A4()
{
  return sub_100167C90((uint64_t)&off_10062B050);
}

uint64_t sub_10017F5B0()
{
  sub_10002F214((uint64_t *)&unk_10069CAA0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100527F30;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = *(void *)(v0 + OBJC_IVAR___ICLearnMoreSmartFoldersViewController_learnMoreTagsPlaceholder);
    uint64_t v4 = *(void *)(v0 + OBJC_IVAR___ICLearnMoreSmartFoldersViewController_learnMoreTagsPlaceholder + 8);
    *(void *)(v1 + 32) = result;
    *(void *)(v1 + 40) = v3;
    *(void *)(v1 + 48) = v4;
    *(unsigned char *)(v1 + 56) = 2;
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      uint64_t v5 = *(void *)(v0 + OBJC_IVAR___ICLearnMoreSmartFoldersViewController_howToPlaceholder);
      uint64_t v6 = *(void *)(v0 + OBJC_IVAR___ICLearnMoreSmartFoldersViewController_howToPlaceholder + 8);
      *(void *)(v1 + 64) = result;
      *(void *)(v1 + 72) = v5;
      *(void *)(v1 + 80) = v6;
      *(unsigned char *)(v1 + 88) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return v1;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_10017F6E8(uint64_t a1, uint64_t a2, void *a3)
{
  ObjectType = (objc_class *)swift_getObjectType();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  v7 = &v3[OBJC_IVAR___ICLearnMoreSmartFoldersViewController_howToPlaceholder];
  *(void *)v7 = 0xD000000000000017;
  *((void *)v7 + 1) = 0x800000010054D950;
  v8 = &v3[OBJC_IVAR___ICLearnMoreSmartFoldersViewController_learnMoreTagsPlaceholder];
  *(void *)v8 = 0xD000000000000029;
  *((void *)v8 + 1) = 0x800000010054D970;
  if (a2)
  {
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v9 = 0;
  }
  v12.receiver = v3;
  v12.super_class = ObjectType;
  [super initWithNibName:v9 bundle:a3];

  return v10;
}

id sub_10017F8BC(void *a1)
{
  ObjectType = (objc_class *)swift_getObjectType();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  uint64_t v4 = &v1[OBJC_IVAR___ICLearnMoreSmartFoldersViewController_howToPlaceholder];
  *(void *)uint64_t v4 = 0xD000000000000017;
  *((void *)v4 + 1) = 0x800000010054D950;
  uint64_t v5 = &v1[OBJC_IVAR___ICLearnMoreSmartFoldersViewController_learnMoreTagsPlaceholder];
  *(void *)uint64_t v5 = 0xD000000000000029;
  *((void *)v5 + 1) = 0x800000010054D970;
  v8.receiver = v1;
  v8.super_class = ObjectType;
  [super initWithCoder:a1];

  return v6;
}

uint64_t sub_10017FA1C()
{
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for LearnMoreSmartFoldersViewController()
{
  return self;
}

uint64_t sub_10017FCC0(void *a1)
{
  v2 = v1;
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong
    && (NSString v9 = (void *)Strong,
        sub_10017FF38(),
        id v10 = a1,
        char v11 = static NSObject.== infix(_:_:)(),
        v10,
        v10,
        v9,
        (v11 & 1) != 0))
  {
    id v12 = [self sharedApplication];
    id v13 = [self smartFoldersSupportURL];
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    URL._bridgeToObjectiveC()(v14);
    v16 = v15;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_100167DB4((uint64_t)&_swiftEmptyArrayStorage);
    type metadata accessor for OpenExternalURLOptionsKey(0);
    sub_10017FF78();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v12 openURL:v16 options:isa completionHandler:0];
  }
  else
  {
    uint64_t v18 = swift_unknownObjectWeakLoadStrong();
    if (v18)
    {
      v19 = (void *)v18;
      sub_10017FF38();
      id v20 = a1;
      char v21 = static NSObject.== infix(_:_:)();

      if (v21)
      {
        id v22 = [v2 presentingViewController];
        if (v22)
        {
          v23 = v22;
          type metadata accessor for LearnMoreTagsViewController();
          sub_1004A9954(v23);
        }
      }
    }
  }
  return 0;
}

unint64_t sub_10017FF38()
{
  unint64_t result = qword_10069CA90;
  if (!qword_10069CA90)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10069CA90);
  }
  return result;
}

unint64_t sub_10017FF78()
{
  unint64_t result = qword_10069BDC0;
  if (!qword_10069BDC0)
  {
    type metadata accessor for OpenExternalURLOptionsKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069BDC0);
  }
  return result;
}

id sub_10017FFD0()
{
  return sub_100180018(&qword_10069AFC0, (void **)&qword_1006CE0D8);
}

id sub_10017FFF4()
{
  return sub_100180018(&qword_10069B088, (void **)&qword_1006CE2A0);
}

id sub_100180018(void *a1, void **a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = *a2;

  return v3;
}

uint64_t sub_100180064@<X0>(uint64_t a1@<X8>)
{
  uint64_t v81 = a1;
  uint64_t v80 = type metadata accessor for Material();
  uint64_t v78 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  v75 = (char *)&v57 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for RoundedRectangle();
  uint64_t v4 = v3 - 8;
  __chkstk_darwin(v3);
  uint64_t v6 = (_OWORD *)((char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_10002F214(&qword_10069CB10);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  id v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_10002F214(&qword_10069CB18) - 8;
  __chkstk_darwin(v77);
  uint64_t v73 = (uint64_t)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_10002F214(&qword_10069CB20) - 8;
  __chkstk_darwin(v74);
  id v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = static HorizontalAlignment.leading.getter();
  unsigned int v14 = [self deviceIsMac];
  uint64_t v15 = 0x4020000000000000;
  if (v14) {
    uint64_t v15 = 0x4010000000000000;
  }
  uint64_t v76 = v15;
  sub_1001806D0(v1, (uint64_t)v83);
  char v86 = 0;
  *(_OWORD *)&v85[135] = v83[8];
  *(_OWORD *)&v85[151] = v83[9];
  *(_OWORD *)&v85[167] = v83[10];
  *(_OWORD *)&v85[183] = v84;
  *(_OWORD *)&v85[71] = v83[4];
  *(_OWORD *)&v85[87] = v83[5];
  *(_OWORD *)&v85[103] = v83[6];
  *(_OWORD *)&v85[119] = v83[7];
  *(_OWORD *)&v85[7] = v83[0];
  *(_OWORD *)&v85[23] = v83[1];
  *(_OWORD *)&v85[39] = v83[2];
  *(_OWORD *)&v85[55] = v83[3];
  int v72 = 0;
  long long v103 = *(_OWORD *)&v85[144];
  long long v104 = *(_OWORD *)&v85[160];
  v105[0] = *(_OWORD *)&v85[176];
  *(void *)((char *)v105 + 15) = *((void *)&v84 + 1);
  long long v100 = *(_OWORD *)&v85[96];
  long long v101 = *(_OWORD *)&v85[112];
  long long v102 = *(_OWORD *)&v85[128];
  long long v96 = *(_OWORD *)&v85[32];
  long long v97 = *(_OWORD *)&v85[48];
  long long v98 = *(_OWORD *)&v85[64];
  long long v99 = *(_OWORD *)&v85[80];
  long long v94 = *(_OWORD *)v85;
  long long v95 = *(_OWORD *)&v85[16];
  static Alignment.leading.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v68 = v106;
  uint64_t v69 = v108;
  uint64_t v70 = v111;
  uint64_t v71 = v110;
  unsigned __int8 v88 = v107;
  unsigned __int8 v87 = v109;
  int v67 = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  int v62 = v88;
  int v63 = v87;
  unsigned __int8 v89 = 0;
  uint64_t v66 = static SafeAreaRegions.all.getter();
  int v24 = static Edge.Set.all.getter();
  int v64 = v89;
  int v65 = v24;
  id v25 = [self ICTintColor];
  uint64_t v26 = Color.init(_:)();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v82 = v26;
  uint64_t v60 = AnyShapeStyle.init<A>(_:)();
  uint64_t v27 = static Alignment.center.getter();
  uint64_t v58 = v28;
  uint64_t v59 = v27;
  v29 = (char *)v6 + *(int *)(v4 + 28);
  uint64_t v30 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v31 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 104))(v29, v30, v31);
  __asm { FMOV            V0.2D, #16.0 }
  *uint64_t v6 = _Q0;
  v37 = v75;
  static Material.ultraThin.getter();
  sub_100182D70((uint64_t)v6, (uint64_t)v10);
  uint64_t v38 = v78;
  uint64_t v39 = v80;
  (*(void (**)(char *, char *, uint64_t))(v78 + 16))(&v10[*(int *)(v8 + 60)], v37, v80);
  *(_WORD *)&v10[*(int *)(v8 + 64)] = 256;
  (*(void (**)(char *, uint64_t))(v38 + 8))(v37, v39);
  sub_100182DD4((uint64_t)v6);
  uint64_t v40 = static SafeAreaRegions.all.getter();
  LOBYTE(v39) = static Edge.Set.all.getter();
  uint64_t v41 = v73;
  sub_10002F034((uint64_t)v10, v73, &qword_10069CB10);
  uint64_t v42 = v41 + *(int *)(sub_10002F214(&qword_10069CB28) + 36);
  *(void *)uint64_t v42 = v40;
  *(unsigned char *)(v42 + 8) = v39;
  sub_10002B754((uint64_t)v10, &qword_10069CB10);
  v43 = (uint64_t *)(v41 + *(int *)(v77 + 44));
  uint64_t v44 = v58;
  uint64_t *v43 = v59;
  v43[1] = v44;
  sub_10002F034(v41, (uint64_t)&v13[*(int *)(v74 + 44)], &qword_10069CB18);
  long long v45 = v102;
  *(_OWORD *)(v13 + 161) = v103;
  long long v46 = v105[0];
  *(_OWORD *)(v13 + 177) = v104;
  *(_OWORD *)(v13 + 193) = v46;
  long long v47 = v98;
  *(_OWORD *)(v13 + 97) = v99;
  long long v48 = v101;
  *(_OWORD *)(v13 + 113) = v100;
  *(_OWORD *)(v13 + 129) = v48;
  *(_OWORD *)(v13 + 145) = v45;
  long long v49 = v94;
  *(_OWORD *)(v13 + 33) = v95;
  long long v50 = v97;
  *(_OWORD *)(v13 + 49) = v96;
  *(_OWORD *)(v13 + 65) = v50;
  *(_OWORD *)(v13 + 81) = v47;
  uint64_t v51 = v76;
  *(void *)id v13 = v79;
  *((void *)v13 + 1) = v51;
  v13[16] = v72;
  uint64_t v52 = *(void *)((char *)v105 + 15);
  *(_OWORD *)(v13 + 17) = v49;
  uint64_t v53 = v68;
  *((void *)v13 + 26) = v52;
  *((void *)v13 + 27) = v53;
  v13[224] = v62;
  *(_DWORD *)(v13 + 225) = v82;
  *((_DWORD *)v13 + 57) = *(_DWORD *)((char *)&v82 + 3);
  *((void *)v13 + 29) = v69;
  v13[240] = v63;
  *(_DWORD *)(v13 + 241) = *(_DWORD *)v93;
  *((_DWORD *)v13 + 61) = *(_DWORD *)&v93[3];
  uint64_t v54 = v70;
  *((void *)v13 + 31) = v71;
  *((void *)v13 + 32) = v54;
  v13[264] = v67;
  *((_DWORD *)v13 + 67) = *(_DWORD *)&v92[3];
  *(_DWORD *)(v13 + 265) = *(_DWORD *)v92;
  *((void *)v13 + 34) = v17;
  *((void *)v13 + 35) = v19;
  *((void *)v13 + 36) = v21;
  *((void *)v13 + 37) = v23;
  v13[304] = v64;
  *(_DWORD *)(v13 + 305) = *(_DWORD *)v91;
  *((_DWORD *)v13 + 77) = *(_DWORD *)&v91[3];
  *((void *)v13 + 39) = v66;
  v13[320] = v65;
  *(_DWORD *)(v13 + 321) = *(_DWORD *)v90;
  *((_DWORD *)v13 + 81) = *(_DWORD *)&v90[3];
  uint64_t v55 = v60;
  *((void *)v13 + 41) = KeyPath;
  *((void *)v13 + 42) = v55;
  sub_10002B754(v41, &qword_10069CB18);
  return sub_10002F1B0((uint64_t)v13, v81, &qword_10069CB20);
}

uint64_t sub_1001806D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void **)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  type metadata accessor for NoteDebugStatusController();
  sub_10018369C(&qword_10069CB30, (void (*)(uint64_t))type metadata accessor for NoteDebugStatusController);
  char v29 = v6;
  uint64_t v7 = (void *)StateObject.wrappedValue.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if (v41)
  {
    if ([v41 isPasswordProtected])
    {
      uint64_t v38 = swift_allocObject();
      *(void *)(v38 + 16) = v41;
      unsigned __int8 v39 = 1;
      State.init(wrappedValue:)();
      uint64_t v36 = v41;
      uint64_t v37 = v42;
      uint64_t v34 = 0x800000010054D9A0;
      v35 = sub_100182FD4;
      uint64_t v33 = 0xD000000000000013;
      goto LABEL_6;
    }
  }
  uint64_t v33 = 0;
  uint64_t v34 = 0;
  v35 = 0;
  uint64_t v36 = 0;
  uint64_t v37 = 0;
  uint64_t v38 = 0;
LABEL_6:
  uint64_t v8 = (void *)StateObject.wrappedValue.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();

  swift_release();
  swift_release();
  uint64_t v26 = v5;
  if (v41)
  {
    if ([v41 isInICloudAccount])
    {
      uint64_t v31 = swift_allocObject();
      *(void *)(v31 + 16) = v41;
      unsigned __int8 v39 = 1;
      State.init(wrappedValue:)();
      uint64_t v30 = v41;
      uint64_t v28 = v42;
      v32 = sub_100182F28;
      uint64_t v9 = 0xE700000000000000;
      uint64_t v10 = 0x676E69636E7953;
      goto LABEL_11;
    }
  }
  uint64_t v10 = 0;
  uint64_t v9 = 0;
  uint64_t v31 = 0;
  v32 = 0;
  uint64_t v30 = 0;
  uint64_t v28 = 0;
LABEL_11:
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = *(void **)(a1 + 32);
  char v13 = *(unsigned char *)(a1 + 40);
  type metadata accessor for GroupActivityDebugStatusController();
  sub_10018369C(&qword_10069CB38, (void (*)(uint64_t))type metadata accessor for GroupActivityDebugStatusController);
  unsigned int v14 = (char *)StateObject.wrappedValue.getter();
  uint64_t v15 = &v14[OBJC_IVAR___ICGroupActivityDebugStatusController_groupActivities];
  swift_beginAccess();
  uint64_t v16 = *(void *)v15;
  swift_bridgeObjectRetain();

  uint64_t v17 = *(void *)(v16 + 16);
  swift_bridgeObjectRelease();
  if (v17)
  {
    uint64_t v18 = (_OWORD *)swift_allocObject();
    long long v19 = *(_OWORD *)(a1 + 16);
    v18[1] = *(_OWORD *)a1;
    v18[2] = v19;
    uint64_t v27 = v18;
    *(_OWORD *)((char *)v18 + 41) = *(_OWORD *)(a1 + 25);
    sub_100182A6C(v4, v26, v29);
    sub_100182A6C(v11, v12, v13);
    State.init(wrappedValue:)();
    uint64_t v20 = v39;
    uint64_t v21 = v40;
    uint64_t v22 = sub_100182E80;
    uint64_t v23 = 0xE900000000000063;
    uint64_t v24 = 0x6E79532074736146;
  }
  else
  {
    uint64_t v24 = 0;
    uint64_t v23 = 0;
    uint64_t v22 = 0;
    uint64_t v27 = 0;
    uint64_t v20 = 0;
    uint64_t v21 = 0;
  }
  State.init(wrappedValue:)();
  *(void *)a2 = v33;
  *(void *)(a2 + 8) = v34;
  *(void *)(a2 + 16) = v35;
  *(void *)(a2 + 24) = v38;
  *(void *)(a2 + 32) = v36;
  *(void *)(a2 + 40) = v37;
  *(void *)(a2 + 48) = v10;
  *(void *)(a2 + 56) = v9;
  *(void *)(a2 + 64) = v32;
  *(void *)(a2 + 72) = v31;
  *(void *)(a2 + 80) = v30;
  *(void *)(a2 + 88) = v28;
  *(void *)(a2 + 96) = v24;
  *(void *)(a2 + 104) = v23;
  *(void *)(a2 + 112) = v22;
  *(void *)(a2 + 120) = v27;
  *(void *)(a2 + 128) = v20;
  *(void *)(a2 + 136) = v21;
  strcpy((char *)(a2 + 144), "Search Index");
  *(unsigned char *)(a2 + 157) = 0;
  *(_WORD *)(a2 + 158) = -5120;
  *(void *)(a2 + 160) = sub_100180DC8;
  *(void *)(a2 + 168) = 0;
  *(unsigned char *)(a2 + 176) = v39;
  *(void *)(a2 + 184) = v40;
  sub_100182E88(v33, v34);
  sub_100182E88(v10, v9);
  sub_100182E88(v24, v23);
  sub_100182ED8(v24, v23);
  sub_100182ED8(v10, v9);
  return sub_100182ED8(v33, v34);
}

uint64_t sub_100180C68@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100182FDC();
  sub_10018369C(qword_10069CB40, (void (*)(uint64_t))sub_100182FDC);
  id v4 = a1;
  uint64_t v5 = ObservedObject.init(wrappedValue:)();
  uint64_t v7 = v6;
  uint64_t result = State.init(wrappedValue:)();
  *(void *)a2 = v5;
  *(void *)(a2 + 8) = v7;
  *(unsigned char *)(a2 + 16) = v9;
  *(void *)(a2 + 24) = v10;
  return result;
}

uint64_t sub_100180D24@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for GroupActivityDebugStatusController();
  sub_10018369C(&qword_10069CB38, (void (*)(uint64_t))type metadata accessor for GroupActivityDebugStatusController);
  StateObject.wrappedValue.getter();
  uint64_t result = ObservedObject.init(wrappedValue:)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_100180DC8(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_10018C210;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
}

uint64_t sub_100180DE4(uint64_t TupleTypeMetadata, unint64_t a2, uint64_t a3)
{
  id v4 = (uint64_t *)TupleTypeMetadata;
  uint64_t v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    uint64_t v6 = *v5;
  }
  else
  {
    __chkstk_darwin(TupleTypeMetadata);
    uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (a2)
    {
      unint64_t v9 = 0;
      if (a2 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)(v8 - (char *)v5) < 0x20) {
        goto LABEL_9;
      }
      unint64_t v9 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      uint64_t v10 = (long long *)(v5 + 2);
      uint64_t v11 = v8 + 16;
      unint64_t v12 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v13 = *v10;
        *(v11 - 1) = *(v10 - 1);
        *uint64_t v11 = v13;
        v10 += 2;
        v11 += 2;
        v12 -= 4;
      }
      while (v12);
      if (v9 != a2)
      {
LABEL_9:
        unint64_t v14 = a2 - v9;
        uint64_t v15 = v9;
        uint64_t v16 = &v8[8 * v9];
        uint64_t v17 = &v5[v15];
        do
        {
          uint64_t v18 = *v17++;
          *(void *)uint64_t v16 = v18;
          v16 += 8;
          --v14;
        }
        while (v14);
      }
    }
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    uint64_t v6 = TupleTypeMetadata;
  }
  __chkstk_darwin(TupleTypeMetadata);
  uint64_t v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v21 = (int *)(v6 + 32);
    unint64_t v22 = a2;
    do
    {
      if (a2 == 1) {
        int v23 = 0;
      }
      else {
        int v23 = *v21;
      }
      uint64_t v25 = *v5++;
      uint64_t v24 = v25;
      uint64_t v26 = *v4++;
      (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 16))(&v20[v23], v26);
      v21 += 4;
      --v22;
    }
    while (v22);
  }
  return TupleView.init(_:)();
}

uint64_t sub_100180FB0@<X0>(uint64_t a1@<X8>)
{
  return sub_100180064(a1);
}

uint64_t sub_100180FEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v174 = a2;
  uint64_t v5 = type metadata accessor for EnabledTextSelectability();
  uint64_t v149 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  v148 = (char *)&v133 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v176 = *(void *)(a1 + 16);
  uint64_t v147 = *(void *)(v176 - 8);
  __chkstk_darwin(v6);
  v145 = (char *)&v133 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001DFF4(&qword_10069CC38);
  uint64_t v9 = type metadata accessor for ModifiedContent();
  uint64_t v144 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  v142 = (char *)&v133 - v10;
  sub_10001DFF4(&qword_10069CC40);
  uint64_t v11 = type metadata accessor for ModifiedContent();
  uint64_t v143 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  v141 = (char *)&v133 - v12;
  uint64_t v175 = *(void *)(a1 + 24);
  uint64_t v13 = v175;
  uint64_t v14 = sub_10001DFB0(&qword_10069CC48, &qword_10069CC38);
  uint64_t v201 = v13;
  uint64_t v202 = v14;
  uint64_t v146 = v9;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v16 = sub_10001DFB0(&qword_10069CC50, &qword_10069CC40);
  uint64_t v135 = WitnessTable;
  uint64_t v199 = WitnessTable;
  uint64_t v200 = v16;
  uint64_t v17 = swift_getWitnessTable();
  *(void *)&unsigned long long v183 = v11;
  *(void *)&unsigned long long v196 = v11;
  *((void *)&v196 + 1) = v5;
  *((void *)&v183 + 1) = v5;
  uint64_t v182 = v17;
  uint64_t v197 = v17;
  v198 = &protocol witness table for EnabledTextSelectability;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v139 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  v137 = (char *)&v133 - v19;
  uint64_t v140 = v20;
  uint64_t v21 = type metadata accessor for ModifiedContent();
  uint64_t v172 = *(void *)(v21 - 8);
  uint64_t v22 = __chkstk_darwin(v21);
  v136 = (char *)&v133 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v138 = (char *)&v133 - v24;
  uint64_t v180 = v25;
  uint64_t v181 = type metadata accessor for Optional();
  uint64_t v173 = *(void *)(v181 - 8);
  uint64_t v26 = __chkstk_darwin(v181);
  v179 = (char *)&v133 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v178 = (char *)&v133 - v28;
  uint64_t v167 = type metadata accessor for RoundedRectangle() - 8;
  __chkstk_darwin(v167);
  v165 = (char *)&v133 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v170 = sub_10002F214(&qword_10069CC58) - 8;
  __chkstk_darwin(v170);
  uint64_t v168 = (uint64_t)&v133 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v169 = sub_10002F214(&qword_10069CC60) - 8;
  __chkstk_darwin(v169);
  uint64_t v166 = (uint64_t)&v133 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v164 = type metadata accessor for Image.Scale();
  uint64_t v163 = *(void *)(v164 - 8);
  __chkstk_darwin(v164);
  v162 = (char *)&v133 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = type metadata accessor for IconOnlyLabelStyle();
  uint64_t v158 = *(void *)(v156 - 8);
  __chkstk_darwin(v156);
  uint64_t v34 = (char *)&v133 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = sub_10002F214(&qword_10069CC68);
  uint64_t v153 = *(void *)(v152 - 8);
  __chkstk_darwin(v152);
  uint64_t v36 = (char *)&v133 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = sub_10002F214(&qword_10069CC70);
  uint64_t v37 = *(void *)(v154 - 8);
  __chkstk_darwin(v154);
  unsigned __int8 v39 = (char *)&v133 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = sub_10002F214(&qword_10069CC78);
  __chkstk_darwin(v151);
  uint64_t v41 = (char *)&v133 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v161 = sub_10002F214(&qword_10069CC80);
  uint64_t v159 = *(void *)(v161 - 8);
  __chkstk_darwin(v161);
  v150 = (char *)&v133 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_10002F214(&qword_10069CC88);
  uint64_t v44 = v43 - 8;
  __chkstk_darwin(v43);
  long long v46 = (char *)&v133 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = sub_10002F214(&qword_10069CC90) - 8;
  __chkstk_darwin(v160);
  uint64_t v157 = (uint64_t)&v133 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v177 = sub_10002F214(&qword_10069CC98);
  uint64_t v48 = __chkstk_darwin(v177);
  uint64_t v171 = (uint64_t)&v133 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v48);
  v155 = (char *)&v133 - v50;
  long long v51 = *v3;
  uint64_t v52 = *((void *)v3 + 3);
  v134 = (void (*)(uint64_t))*((void *)v3 + 2);
  unsigned long long v203 = v3[2];
  long long v204 = v51;
  uint64_t v53 = swift_allocObject();
  uint64_t v54 = v176;
  uint64_t v55 = v175;
  *(void *)(v53 + 16) = v176;
  *(void *)(v53 + 24) = v55;
  long long v56 = v3[1];
  *(_OWORD *)(v53 + 32) = *v3;
  *(_OWORD *)(v53 + 48) = v56;
  *(_OWORD *)(v53 + 64) = v3[2];
  uint64_t v184 = v54;
  uint64_t v185 = v55;
  v186 = v3;
  sub_100183644((uint64_t)&v204);
  uint64_t v133 = v52;
  swift_retain();
  sub_100183670((uint64_t)&v203);
  sub_10002F214(&qword_10069CCA0);
  sub_10001DFB0(&qword_10069CCA8, &qword_10069CCA0);
  Button.init(action:label:)();
  IconOnlyLabelStyle.init()();
  sub_10001DFB0(&qword_10069CCB0, &qword_10069CC68);
  sub_10018369C(&qword_10069CCB8, (void (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle);
  uint64_t v57 = v152;
  uint64_t v58 = v156;
  View.labelStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v158 + 8))(v34, v58);
  (*(void (**)(char *, uint64_t))(v153 + 8))(v36, v57);
  uint64_t v59 = static Font.subheadline.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v61 = v154;
  (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v41, v39, v154);
  int v62 = (uint64_t *)&v41[*(int *)(v151 + 36)];
  *int v62 = KeyPath;
  v62[1] = v59;
  (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v61);
  sub_1001836EC();
  int v63 = v150;
  View.bold(_:)();
  sub_10002B754((uint64_t)v41, &qword_10069CC78);
  uint64_t v64 = v163;
  int v65 = v162;
  uint64_t v66 = v164;
  (*(void (**)(char *, void, uint64_t))(v163 + 104))(v162, enum case for Image.Scale.large(_:), v164);
  uint64_t v67 = swift_getKeyPath();
  uint64_t v68 = (uint64_t *)&v46[*(int *)(v44 + 44)];
  uint64_t v69 = sub_10002F214(&qword_10069CCC8);
  (*(void (**)(char *, char *, uint64_t))(v64 + 16))((char *)v68 + *(int *)(v69 + 28), v65, v66);
  *uint64_t v68 = v67;
  uint64_t v70 = v159;
  uint64_t v71 = v161;
  (*(void (**)(char *, char *, uint64_t))(v159 + 16))(v46, v63, v161);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v66);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v63, v71);
  LOBYTE(v71) = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v73 = v72;
  uint64_t v75 = v74;
  uint64_t v77 = v76;
  uint64_t v79 = v78;
  uint64_t v80 = v157;
  sub_10002F034((uint64_t)v46, v157, &qword_10069CC88);
  uint64_t v81 = v80 + *(int *)(v160 + 44);
  *(unsigned char *)uint64_t v81 = v71;
  *(void *)(v81 + 8) = v73;
  *(void *)(v81 + 16) = v75;
  *(void *)(v81 + 24) = v77;
  *(void *)(v81 + 32) = v79;
  *(unsigned char *)(v81 + 40) = 0;
  sub_10002B754((uint64_t)v46, &qword_10069CC88);
  uint64_t v82 = static Alignment.center.getter();
  uint64_t v84 = v83;
  uint64_t v85 = (uint64_t)v155;
  uint64_t v86 = (uint64_t)&v155[*(int *)(v177 + 36)];
  unsigned __int8 v87 = v165;
  unsigned __int8 v88 = &v165[*(int *)(v167 + 28)];
  uint64_t v89 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v90 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v90 - 8) + 104))(v88, v89, v90);
  __asm { FMOV            V0.2D, #8.0 }
  *unsigned __int8 v87 = _Q0;
  LODWORD(v88) = static HierarchicalShapeStyle.quaternary.getter();
  uint64_t v96 = v168;
  sub_100182D70((uint64_t)v87, v168);
  *(_DWORD *)(v96 + *(int *)(v170 + 44)) = v88;
  sub_100182DD4((uint64_t)v87);
  uint64_t v97 = v166;
  sub_10002F034(v96, v166, &qword_10069CC58);
  *(void *)(v97 + *(int *)(v169 + 44)) = 0x3FD999999999999ALL;
  sub_10002B754(v96, &qword_10069CC58);
  sub_10002F1B0(v97, v86, &qword_10069CC60);
  long long v98 = (uint64_t *)(v86 + *(int *)(sub_10002F214(&qword_10069CCD0) + 36));
  *long long v98 = v82;
  v98[1] = v84;
  uint64_t v99 = v80;
  uint64_t v100 = v85;
  sub_10002F1B0(v99, v85, &qword_10069CC90);
  unsigned long long v196 = v203;
  sub_10002F214(&qword_10069CCD8);
  uint64_t v101 = State.wrappedValue.getter();
  if (v195[0])
  {
    long long v102 = v179;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v172 + 56))(v179, 1, 1, v180);
    unsigned long long v196 = v183;
    uint64_t v197 = v182;
    v198 = &protocol witness table for EnabledTextSelectability;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v188 = &protocol witness table for _PaddingLayout;
    swift_getWitnessTable();
    uint64_t v103 = v173;
    long long v104 = *(void (**)(char *, char *, uint64_t))(v173 + 16);
    uint64_t v105 = v181;
    v104(v178, v102, v181);
    uint64_t v106 = *(void (**)(char *, uint64_t))(v103 + 8);
    v106(v102, v105);
  }
  else
  {
    unsigned __int8 v107 = v145;
    v134(v101);
    static Font.callout.getter();
    uint64_t v108 = v142;
    uint64_t v109 = v176;
    View.font(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v147 + 8))(v107, v109);
    uint64_t v110 = v141;
    uint64_t v111 = v146;
    View.multilineTextAlignment(_:)();
    (*(void (**)(char *, uint64_t))(v144 + 8))(v108, v111);
    v112 = v148;
    EnabledTextSelectability.init()();
    v113 = v137;
    unint64_t v115 = *((void *)&v183 + 1);
    unint64_t v114 = v183;
    uint64_t v116 = v182;
    View.textSelection<A>(_:)();
    (*(void (**)(char *, unint64_t))(v149 + 8))(v112, v115);
    (*(void (**)(char *, unint64_t))(v143 + 8))(v110, v114);
    static Edge.Set.vertical.getter();
    unsigned long long v196 = __PAIR128__(v115, v114);
    uint64_t v197 = v116;
    v198 = &protocol witness table for EnabledTextSelectability;
    uint64_t v117 = swift_getOpaqueTypeConformance2();
    v118 = v136;
    uint64_t v119 = v140;
    View.padding(_:_:)();
    (*(void (**)(char *, uint64_t))(v139 + 8))(v113, v119);
    v195[2] = v117;
    v195[3] = &protocol witness table for _PaddingLayout;
    uint64_t v120 = v180;
    uint64_t v121 = swift_getWitnessTable();
    v122 = v138;
    sub_10020EA58(v118, v120, v121);
    uint64_t v123 = v172;
    v124 = *(void (**)(char *, uint64_t))(v172 + 8);
    v124(v118, v120);
    v125 = v179;
    sub_10020EA58(v122, v120, v121);
    v124(v122, v120);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v123 + 56))(v125, 0, 1, v120);
    uint64_t v126 = v173;
    long long v104 = *(void (**)(char *, char *, uint64_t))(v173 + 16);
    uint64_t v127 = v181;
    v104(v178, v125, v181);
    uint64_t v106 = *(void (**)(char *, uint64_t))(v126 + 8);
    v106(v125, v127);
  }
  uint64_t v128 = v171;
  sub_10002F034(v100, v171, &qword_10069CC98);
  v195[0] = v128;
  v129 = v179;
  v130 = v178;
  uint64_t v131 = v181;
  v104(v179, v178, v181);
  v195[1] = v129;
  v194[0] = v177;
  v194[1] = v131;
  unint64_t v192 = sub_10018383C();
  unsigned long long v196 = v183;
  uint64_t v197 = v182;
  v198 = &protocol witness table for EnabledTextSelectability;
  uint64_t v190 = swift_getOpaqueTypeConformance2();
  v191 = &protocol witness table for _PaddingLayout;
  uint64_t v189 = swift_getWitnessTable();
  uint64_t v193 = swift_getWitnessTable();
  sub_100180DE4((uint64_t)v195, 2uLL, (uint64_t)v194);
  v106(v130, v131);
  sub_10002B754(v100, &qword_10069CC98);
  v106(v129, v131);
  return sub_10002B754(v128, &qword_10069CC98);
}

uint64_t sub_100182550(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + 32);
  sub_10002F1B0((uint64_t)&v2 + 8, (uint64_t)v3, &qword_10069CD30);
  sub_100183A1C((uint64_t)v3);
  sub_10002F214(&qword_10069CCD8);
  State.wrappedValue.getter();
  State.wrappedValue.setter();
  return sub_100183A48((uint64_t)&v2);
}

uint64_t sub_100182600@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = sub_10002F214(&qword_10069CD08);
  __chkstk_darwin(v35);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214(&qword_10069CD10);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10002F214(&qword_10069CD18);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v38 = (uint64_t)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v32 - v13;
  swift_bridgeObjectRetain();
  static Color.primary.getter();
  uint64_t v15 = Text.foregroundColor(_:)();
  uint64_t v36 = v16;
  uint64_t v37 = v17;
  int v34 = v18;
  swift_bridgeObjectRelease();
  swift_release();
  int v33 = static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)();
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  long long v39 = *(_OWORD *)(a1 + 32);
  sub_10002F214(&qword_10069CCD8);
  State.wrappedValue.getter();
  LocalizedStringKey.init(stringLiteral:)();
  Label<>.init(_:systemImage:)();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v5, v9, v6);
  swift_storeEnumTagMultiPayload();
  sub_10001DFB0(&qword_10069CD20, &qword_10069CD10);
  _ConditionalContent<>.init(storage:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  LOBYTE(a1) = v34 & 1;
  uint64_t v27 = v38;
  sub_10002F034((uint64_t)v14, v38, &qword_10069CD18);
  uint64_t v29 = v36;
  uint64_t v28 = v37;
  *(void *)a2 = v15;
  *(void *)(a2 + 8) = v29;
  *(unsigned char *)(a2 + 16) = a1;
  *(void *)(a2 + 24) = v28;
  *(unsigned char *)(a2 + 32) = v33;
  *(void *)(a2 + 40) = v20;
  *(void *)(a2 + 48) = v22;
  *(void *)(a2 + 56) = v24;
  *(void *)(a2 + 64) = v26;
  *(unsigned char *)(a2 + 72) = 0;
  *(void *)(a2 + 80) = 0;
  *(unsigned char *)(a2 + 88) = 1;
  uint64_t v30 = sub_10002F214(&qword_10069CD28);
  sub_10002F034(v27, a2 + *(int *)(v30 + 64), &qword_10069CD18);
  sub_1001839DC(v15, v29, a1);
  swift_bridgeObjectRetain();
  sub_10002B754((uint64_t)v14, &qword_10069CD18);
  sub_10002B754(v27, &qword_10069CD18);
  sub_1001839EC(v15, v29, a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100182A14()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_100182A30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100180FEC(a1, a2);
}

id sub_100182A6C(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return a2;
  }
  else {
    return (id)swift_retain();
  }
}

void destroy for DebugStatusView(uint64_t a1)
{
  sub_100182AC4(*(void *)a1, *(void **)(a1 + 8), *(unsigned char *)(a1 + 16));
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(void **)(a1 + 32);
  char v4 = *(unsigned char *)(a1 + 40);

  sub_100182AC4(v2, v3, v4);
}

void sub_100182AC4(uint64_t a1, void *a2, char a3)
{
  if (a3) {

  }
  else {
    swift_release();
  }
}

uint64_t initializeWithCopy for DebugStatusView(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void **)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_100182A6C(*(void *)a2, v5, v6);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = *(void **)(v2 + 32);
  LOBYTE(v2) = *(unsigned char *)(v2 + 40);
  sub_100182A6C(v7, v8, v2);
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 40) = v2;
  return a1;
}

uint64_t assignWithCopy for DebugStatusView(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void **)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_100182A6C(*(void *)a2, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void **)(a1 + 8);
  char v9 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  sub_100182AC4(v7, v8, v9);
  uint64_t v10 = *(void *)(v2 + 24);
  uint64_t v11 = *(void **)(v2 + 32);
  LOBYTE(v2) = *(unsigned char *)(v2 + 40);
  sub_100182A6C(v10, v11, v2);
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v13 = *(void **)(a1 + 32);
  char v14 = *(unsigned char *)(a1 + 40);
  *(void *)(a1 + 24) = v10;
  *(void *)(a1 + 32) = v11;
  *(unsigned char *)(a1 + 40) = v2;
  sub_100182AC4(v12, v13, v14);
  return a1;
}

__n128 initializeWithTake for DebugStatusView(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for DebugStatusView(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)a1;
  char v6 = *(void **)(a1 + 8);
  char v7 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v4;
  sub_100182AC4(v5, v6, v7);
  char v8 = *(unsigned char *)(a2 + 40);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void **)(a1 + 32);
  char v11 = *(unsigned char *)(a1 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = v8;
  sub_100182AC4(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugStatusView(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugStatusView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugStatusView()
{
  return &type metadata for DebugStatusView;
}

uint64_t sub_100182CFC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100182D18@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.tint.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100182D44()
{
  return EnvironmentValues.tint.setter();
}

uint64_t sub_100182D70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RoundedRectangle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100182DD4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RoundedRectangle();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100182E38()
{
  sub_100182AC4(*(void *)(v0 + 16), *(void **)(v0 + 24), *(unsigned char *)(v0 + 32));
  sub_100182AC4(*(void *)(v0 + 40), *(void **)(v0 + 48), *(unsigned char *)(v0 + 56));

  return _swift_deallocObject(v0, 57, 7);
}

uint64_t sub_100182E80@<X0>(uint64_t *a1@<X8>)
{
  return sub_100180D24(a1);
}

uint64_t sub_100182E88(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_100182ED8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

id sub_100182F28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = *(void **)(v1 + 16);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v5;
  *(void *)a1 = sub_10018301C;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = 0;

  return v5;
}

uint64_t sub_100182F9C()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100182FD4@<X0>(uint64_t a1@<X8>)
{
  return sub_100180C68(*(void **)(v1 + 16), a1);
}

unint64_t sub_100182FDC()
{
  unint64_t result = qword_10069FD10;
  if (!qword_10069FD10)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10069FD10);
  }
  return result;
}

char *sub_10018301C()
{
  return sub_10029FB18(*(void **)(v0 + 16));
}

uint64_t sub_100183024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 32);
}

uint64_t sub_10018302C()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_release();
}

uint64_t sub_100183070(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1001830DC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for InsertMentionIntent(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_100183178(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v4;
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t sub_1001831E0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100183228(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for DebugStatusView.Section()
{
  return sub_100183A74();
}

unint64_t sub_100183290()
{
  unint64_t result = qword_10069CBC8;
  if (!qword_10069CBC8)
  {
    sub_10001DFF4(&qword_10069CB20);
    sub_100183330();
    sub_10001DFB0(&qword_10069CC30, &qword_10069CB18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069CBC8);
  }
  return result;
}

unint64_t sub_100183330()
{
  unint64_t result = qword_10069CBD0;
  if (!qword_10069CBD0)
  {
    sub_10001DFF4(&qword_10069CBD8);
    sub_10018342C(&qword_10069CBE0, &qword_10069CBE8, (void (*)(void))sub_1001833FC);
    sub_10001DFB0(&qword_10069CC20, &qword_10069CC28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069CBD0);
  }
  return result;
}

uint64_t sub_1001833FC()
{
  return sub_10018342C(&qword_10069CBF0, &qword_10069CBF8, (void (*)(void))sub_1001834A8);
}

uint64_t sub_10018342C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001DFF4(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001834A8()
{
  unint64_t result = qword_10069CC00;
  if (!qword_10069CC00)
  {
    sub_10001DFF4(&qword_10069CC08);
    sub_10001DFB0(&qword_10069CC10, &qword_10069CC18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069CC00);
  }
  return result;
}

uint64_t sub_100183548()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10018358C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1001835D4()
{
  return withAnimation<A>(_:_:)();
}

uint64_t sub_100183638@<X0>(uint64_t a1@<X8>)
{
  return sub_100182600(*(void *)(v1 + 32), a1);
}

uint64_t sub_100183644(uint64_t a1)
{
  return a1;
}

uint64_t sub_100183670(uint64_t a1)
{
  return a1;
}

uint64_t sub_10018369C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001836EC()
{
  unint64_t result = qword_10069CCC0;
  if (!qword_10069CCC0)
  {
    sub_10001DFF4(&qword_10069CC78);
    sub_10001DFF4(&qword_10069CC68);
    type metadata accessor for IconOnlyLabelStyle();
    sub_10001DFB0(&qword_10069CCB0, &qword_10069CC68);
    sub_10018369C(&qword_10069CCB8, (void (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle);
    swift_getOpaqueTypeConformance2();
    sub_10001DFB0(&qword_10069CC48, &qword_10069CC38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069CCC0);
  }
  return result;
}

unint64_t sub_10018383C()
{
  unint64_t result = qword_10069CCE0;
  if (!qword_10069CCE0)
  {
    sub_10001DFF4(&qword_10069CC98);
    sub_10018342C(&qword_10069CCE8, &qword_10069CC90, (void (*)(void))sub_100183908);
    sub_10001DFB0(&qword_10069CD00, &qword_10069CCD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069CCE0);
  }
  return result;
}

unint64_t sub_100183908()
{
  unint64_t result = qword_10069CCF0;
  if (!qword_10069CCF0)
  {
    sub_10001DFF4(&qword_10069CC88);
    sub_10001DFF4(&qword_10069CC78);
    sub_1001836EC();
    swift_getOpaqueTypeConformance2();
    sub_10001DFB0(&qword_10069CCF8, &qword_10069CCC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069CCF0);
  }
  return result;
}

uint64_t sub_1001839DC(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_1001839EC(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1001839FC()
{
  return sub_100182550(*(void *)(v0 + 32));
}

uint64_t sub_100183A1C(uint64_t a1)
{
  return a1;
}

uint64_t sub_100183A48(uint64_t a1)
{
  return a1;
}

uint64_t sub_100183A74()
{
  return swift_getGenericMetadata();
}

uint64_t sub_100183AA4()
{
  return swift_getWitnessTable();
}

void *AppendToNoteIntent.persistentIdentifier.unsafeMutableAddressor()
{
  return &static AppendToNoteIntent.persistentIdentifier;
}

unint64_t static AppendToNoteIntent.persistentIdentifier.getter()
{
  return 0xD000000000000016;
}

uint64_t sub_100183C8C()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  long long v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  sub_100032974(v6, static AppendToNoteIntent.title);
  sub_10003293C(v6, (uint64_t)static AppendToNoteIntent.title);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t AppendToNoteIntent.title.unsafeMutableAddressor()
{
  if (qword_10069AC60 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for LocalizedStringResource();

  return sub_10003293C(v0, (uint64_t)static AppendToNoteIntent.title);
}

uint64_t static AppendToNoteIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_10069AC60 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_10003293C(v2, (uint64_t)static AppendToNoteIntent.title);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t static AppendToNoteIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for Locale();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = type metadata accessor for LocalizedStringResource();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v4, 1, 1, v11);
  IntentDescription.init(_:categoryName:searchKeywords:)();
  uint64_t v13 = type metadata accessor for IntentDescription();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 0, 1, v13);
}

uint64_t static AppendToNoteIntent.parameterSummary.getter()
{
  uint64_t v0 = sub_10002F214(&qword_10069CD38);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10002F214(&qword_10069CD40);
  __chkstk_darwin(v1);
  sub_10018444C();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._countAndFlagsBits = 0x20646E65707041;
  v2._object = (void *)0xE700000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_10002F214(&qword_10069CD50);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._countAndFlagsBits = 544175136;
  v3._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  swift_getKeyPath();
  sub_10002F214(&qword_10069CD58);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v4);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

unint64_t sub_10018444C()
{
  unint64_t result = qword_10069CD48;
  if (!qword_10069CD48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069CD48);
  }
  return result;
}

uint64_t sub_1001844A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001844CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t AppendToNoteIntent.entity.setter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NoteEntity(0);
  __chkstk_darwin(v2 - 8);
  sub_10018991C(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  IntentParameter.wrappedValue.setter();
  return sub_100189980(a1);
}

uint64_t AppendToNoteIntent.text.getter()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t AppendToNoteIntent.text.setter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AttributedString();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  IntentParameter.wrappedValue.setter();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t AppendToNoteIntent.perform()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  v4[7] = type metadata accessor for NoteEntity(0);
  v4[8] = swift_task_alloc();
  v4[9] = swift_task_alloc();
  return _swift_task_switch(sub_100184748, 0, 0);
}

uint64_t sub_100184748()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v3 = v0[4];
  IntentParameter.wrappedValue.getter();
  AppDependency.wrappedValue.getter();
  uint64_t v4 = v0[2];
  v0[10] = v4;
  uint64_t v5 = (void *)swift_allocObject();
  v0[11] = v5;
  v5[2] = v3;
  v5[3] = v2;
  v5[4] = v1;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_10069CD68 + dword_10069CD68);
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[12] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_10018488C;
  return v8(v4, (uint64_t)sub_100189A24, (uint64_t)v5);
}

uint64_t sub_10018488C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  uint64_t v5 = (void *)*v3;
  v5[13] = a1;
  v5[14] = a2;
  v5[15] = v2;
  swift_task_dealloc();
  uint64_t v6 = (void *)v4[10];
  uint64_t v7 = v4[9];
  if (v2)
  {
    sub_100189980(v7);
    swift_release();

    uint64_t v8 = sub_100184CC4;
  }
  else
  {
    swift_release();

    sub_100189980(v7);
    uint64_t v8 = sub_100184A20;
  }
  return _swift_task_switch(v8, 0, 0);
}

uint64_t sub_100184A20()
{
  uint64_t v1 = *(void **)(v0 + 112);
  id v2 = *(id *)(v0 + 104);
  id v3 = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100184ACC;
  uint64_t v5 = *(void *)(v0 + 104);
  uint64_t v6 = *(void *)(v0 + 112);
  uint64_t v7 = *(void *)(v0 + 64);
  return NoteEntity.init(for:in:)(v7, v5, v6);
}

uint64_t sub_100184ACC()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0) {
    id v2 = sub_100184D30;
  }
  else {
    id v2 = sub_100184BE0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100184BE0()
{
  id v2 = (void *)v0[13];
  uint64_t v1 = (void *)v0[14];
  uint64_t v3 = v0[8];
  sub_10018A2FC((unint64_t *)&qword_10069CD70, (void (*)(uint64_t))type metadata accessor for NoteEntity);
  static IntentResult.result<A>(value:)();

  sub_100189980(v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100184CC4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100184D30()
{
  uint64_t v1 = *(void **)(v0 + 112);

  swift_task_dealloc();
  swift_task_dealloc();
  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_100184DA8(void *a1@<X0>, void *a2@<X8>)
{
  self;
  uint64_t v5 = swift_dynamicCastObjCClass();
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    id v7 = a1;
    sub_100189DE8(v6);
  }
  else
  {
    self;
    uint64_t v10 = swift_dynamicCastObjCClass();
    if (!v10)
    {
      type metadata accessor for ICError(0);
      sub_10002F214((uint64_t *)&unk_10069E1D0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_100524D10;
      *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
      *(void *)(inited + 40) = v15;
      id v16 = [self mainBundle];
      NSString v17 = String._bridgeToObjectiveC()();
      id v18 = [v16 localizedStringForKey:v17 value:0 table:0];

      uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v21 = v20;

      *(void *)(inited + 72) = &type metadata for String;
      *(void *)(inited + 48) = v19;
      *(void *)(inited + 56) = v21;
      sub_100167B58(inited);
      sub_10018A2FC((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);
      _BridgedStoredNSError.init(_:userInfo:)();
      swift_willThrow();
      return;
    }
    uint64_t v11 = (void *)v10;
    id v7 = a1;
    sub_10018A0B4(v11);
  }
  uint64_t v12 = v8;
  uint64_t v13 = v9;

  if (!v2)
  {
    *a2 = v12;
    a2[1] = v13;
  }
}

uint64_t sub_100184FC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[18] = a3;
  v4[19] = v3;
  v4[16] = a1;
  v4[17] = a2;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1006A3B80 + dword_1006A3B80);
  uint64_t v6 = (void *)swift_task_alloc();
  v4[20] = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_10018507C;
  return v8(v3, a1);
}

uint64_t sub_10018507C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 168) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10018517C, 0, 0);
}

uint64_t sub_10018517C()
{
  uint64_t v1 = *(void **)(v0 + 168);
  if (v1)
  {
    id v2 = [*(id *)(v0 + 128) managedObjectContextForObjectID:*(void *)(v0 + 168)];
    *(void *)(v0 + 176) = v2;
    if (v2)
    {
      uint64_t v3 = v2;
      uint64_t v5 = *(void *)(v0 + 136);
      uint64_t v4 = *(void *)(v0 + 144);
      uint64_t v6 = (void *)swift_allocObject();
      *(void *)(v0 + 184) = v6;
      v6[2] = v3;
      v6[3] = v1;
      v6[4] = v5;
      v6[5] = v4;
      v3;
      id v7 = v1;
      swift_retain();
      uint64_t v8 = (void *)swift_task_alloc();
      *(void *)(v0 + 192) = v8;
      uint64_t v9 = sub_10002F214(&qword_10069CE08);
      void *v8 = v0;
      v8[1] = sub_1001854D0;
      return NSManagedObjectContext.perform<A>(_:)(v0 + 96, sub_100189D90, v6, v9);
    }
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = 0;
    id v14 = v1;
    sub_100188C80(v13, 225, v14);

    swift_release();
    swift_willThrow();
  }
  else
  {
    type metadata accessor for ICError(0);
    *(void *)(v0 + 120) = 232;
    sub_10002F214((uint64_t *)&unk_10069E1D0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100524D10;
    *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 40) = v11;
    _StringGuts.grow(_:)(34);
    swift_bridgeObjectRelease();
    type metadata accessor for NoteID();
    sub_10018A2FC((unint64_t *)&unk_10069CDC0, (void (*)(uint64_t))&type metadata accessor for NoteID);
    v12._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v12);
    swift_bridgeObjectRelease();
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = 0xD000000000000020;
    *(void *)(inited + 56) = 0x800000010054DA00;
    sub_100167B58(inited);
    sub_10018A2FC((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_willThrow();
  }
  uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t sub_1001854D0()
{
  *(void *)(*(void *)v1 + 200) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v2 = sub_10018A350;
  }
  else
  {
    swift_release();
    id v2 = sub_10018A34C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001855EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[17] = a4;
  v5[18] = v4;
  v5[15] = a2;
  v5[16] = a3;
  v5[14] = a1;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1006A3B80 + dword_1006A3B80);
  id v7 = (void *)swift_task_alloc();
  v5[19] = v7;
  void *v7 = v5;
  v7[1] = sub_1001856A8;
  return v9(v4, a2);
}

uint64_t sub_1001856A8(uint64_t a1)
{
  *(void *)(*(void *)v1 + 160) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1001857A8, 0, 0);
}

uint64_t sub_1001857A8()
{
  uint64_t v1 = *(void **)(v0 + 160);
  if (v1)
  {
    id v2 = [*(id *)(v0 + 120) managedObjectContextForObjectID:*(void *)(v0 + 160)];
    *(void *)(v0 + 168) = v2;
    if (v2)
    {
      uint64_t v3 = v2;
      uint64_t v5 = *(void *)(v0 + 128);
      uint64_t v4 = *(void *)(v0 + 136);
      uint64_t v6 = (void *)swift_allocObject();
      *(void *)(v0 + 176) = v6;
      v6[2] = v3;
      v6[3] = v1;
      v6[4] = v5;
      v6[5] = v4;
      v3;
      id v7 = v1;
      swift_retain();
      uint64_t v8 = (void *)swift_task_alloc();
      *(void *)(v0 + 184) = v8;
      void *v8 = v0;
      v8[1] = sub_100185AF4;
      uint64_t v9 = *(void *)(v0 + 112);
      return NSManagedObjectContext.perform<A>(_:)(v9, sub_100189D1C, v6, (char *)&type metadata for () + 8);
    }
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = 0;
    id v14 = v1;
    sub_100188C80(v13, 225, v14);

    swift_release();
    swift_willThrow();
  }
  else
  {
    type metadata accessor for ICError(0);
    *(void *)(v0 + 104) = 232;
    sub_10002F214((uint64_t *)&unk_10069E1D0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100524D10;
    *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 40) = v11;
    _StringGuts.grow(_:)(34);
    swift_bridgeObjectRelease();
    type metadata accessor for NoteID();
    sub_10018A2FC((unint64_t *)&unk_10069CDC0, (void (*)(uint64_t))&type metadata accessor for NoteID);
    v12._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v12);
    swift_bridgeObjectRelease();
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = 0xD000000000000020;
    *(void *)(inited + 56) = 0x800000010054DA00;
    sub_100167B58(inited);
    sub_10018A2FC((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_willThrow();
  }
  uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t sub_100185AF4()
{
  *(void *)(*(void *)v1 + 192) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v2 = sub_10018A348;
  }
  else
  {
    swift_release();
    id v2 = sub_10018A354;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100185C10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[17] = a3;
  v4[18] = v3;
  v4[15] = a1;
  v4[16] = a2;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1006A7D70 + dword_1006A7D70);
  uint64_t v6 = (void *)swift_task_alloc();
  v4[19] = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_100185CC8;
  return v8(v3, a1);
}

uint64_t sub_100185CC8(uint64_t a1)
{
  *(void *)(*(void *)v1 + 160) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100185DC8, 0, 0);
}

uint64_t sub_100185DC8()
{
  uint64_t v1 = *(void **)(v0 + 160);
  if (v1)
  {
    id v2 = [*(id *)(v0 + 120) managedObjectContextForObjectID:*(void *)(v0 + 160)];
    *(void *)(v0 + 168) = v2;
    if (v2)
    {
      uint64_t v3 = v2;
      uint64_t v5 = *(void *)(v0 + 128);
      uint64_t v4 = *(void *)(v0 + 136);
      uint64_t v6 = (void *)swift_allocObject();
      *(void *)(v0 + 176) = v6;
      v6[2] = v3;
      v6[3] = v1;
      v6[4] = v5;
      v6[5] = v4;
      v3;
      id v7 = v1;
      swift_retain();
      uint64_t v8 = (void *)swift_task_alloc();
      *(void *)(v0 + 184) = v8;
      uint64_t v9 = sub_10002F214((uint64_t *)&unk_10069E1F0);
      void *v8 = v0;
      v8[1] = sub_100186138;
      return NSManagedObjectContext.perform<A>(_:)(v0 + 96, sub_100189CE4, v6, v9);
    }
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = 0;
    id v14 = v1;
    sub_100188E9C(v13, 225, v14, 0x6E457265646C6F46, (void *)0xEC00000079746974);

    swift_release();
    swift_willThrow();
  }
  else
  {
    type metadata accessor for ICError(0);
    *(void *)(v0 + 112) = 232;
    sub_10002F214((uint64_t *)&unk_10069E1D0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100524D10;
    *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 40) = v11;
    _StringGuts.grow(_:)(34);
    swift_bridgeObjectRelease();
    type metadata accessor for FolderID();
    sub_10018A2FC(&qword_10069CE00, (void (*)(uint64_t))&type metadata accessor for FolderID);
    v12._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v12);
    swift_bridgeObjectRelease();
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = 0xD000000000000020;
    *(void *)(inited + 56) = 0x800000010054DA00;
    sub_100167B58(inited);
    sub_10018A2FC((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_willThrow();
  }
  uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t sub_100186138()
{
  *(void *)(*(void *)v1 + 192) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v2 = sub_1001862C0;
  }
  else
  {
    swift_release();
    id v2 = sub_100186254;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100186254()
{
  uint64_t v1 = *(void **)(v0 + 160);

  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v2);
}

uint64_t sub_1001862C0()
{
  uint64_t v1 = (void *)v0[21];
  uint64_t v2 = (void *)v0[20];
  swift_release();

  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_100186330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[17] = a4;
  v5[18] = v4;
  v5[15] = a2;
  v5[16] = a3;
  v5[14] = a1;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1006A3B80 + dword_1006A3B80);
  id v7 = (void *)swift_task_alloc();
  v5[19] = v7;
  void *v7 = v5;
  v7[1] = sub_1001863EC;
  return v9(v4, a2);
}

uint64_t sub_1001863EC(uint64_t a1)
{
  *(void *)(*(void *)v1 + 160) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1001864EC, 0, 0);
}

uint64_t sub_1001864EC()
{
  uint64_t v1 = *(void **)(v0 + 160);
  if (v1)
  {
    id v2 = [*(id *)(v0 + 120) managedObjectContextForObjectID:*(void *)(v0 + 160)];
    *(void *)(v0 + 168) = v2;
    if (v2)
    {
      uint64_t v3 = v2;
      uint64_t v5 = *(void *)(v0 + 128);
      uint64_t v4 = *(void *)(v0 + 136);
      uint64_t v6 = (void *)swift_allocObject();
      *(void *)(v0 + 176) = v6;
      v6[2] = v3;
      v6[3] = v1;
      v6[4] = v5;
      v6[5] = v4;
      v3;
      id v7 = v1;
      swift_retain();
      uint64_t v8 = (void *)swift_task_alloc();
      *(void *)(v0 + 184) = v8;
      uint64_t v9 = sub_10002F214(&qword_10069B4D8);
      void *v8 = v0;
      v8[1] = sub_100185AF4;
      uint64_t v10 = *(void *)(v0 + 112);
      return NSManagedObjectContext.perform<A>(_:)(v10, sub_100189C08, v6, v9);
    }
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = 0;
    id v15 = v1;
    sub_100188C80(v14, 225, v15);

    swift_release();
    swift_willThrow();
  }
  else
  {
    type metadata accessor for ICError(0);
    *(void *)(v0 + 104) = 232;
    sub_10002F214((uint64_t *)&unk_10069E1D0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100524D10;
    *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 40) = v12;
    _StringGuts.grow(_:)(34);
    swift_bridgeObjectRelease();
    type metadata accessor for NoteID();
    sub_10018A2FC((unint64_t *)&unk_10069CDC0, (void (*)(uint64_t))&type metadata accessor for NoteID);
    v13._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v13);
    swift_bridgeObjectRelease();
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = 0xD000000000000020;
    *(void *)(inited + 56) = 0x800000010054DA00;
    sub_100167B58(inited);
    sub_10018A2FC((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_willThrow();
  }
  id v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

uint64_t sub_10018683C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[17] = a4;
  v5[18] = v4;
  v5[15] = a2;
  v5[16] = a3;
  v5[14] = a1;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_10069EEB0 + dword_10069EEB0);
  id v7 = (void *)swift_task_alloc();
  v5[19] = v7;
  void *v7 = v5;
  v7[1] = sub_1001868F8;
  return v9(v4, a2);
}

uint64_t sub_1001868F8(uint64_t a1)
{
  *(void *)(*(void *)v1 + 160) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1001869F8, 0, 0);
}

uint64_t sub_1001869F8()
{
  uint64_t v1 = *(void **)(v0 + 160);
  if (v1)
  {
    id v2 = [*(id *)(v0 + 120) managedObjectContextForObjectID:*(void *)(v0 + 160)];
    *(void *)(v0 + 168) = v2;
    if (v2)
    {
      uint64_t v3 = v2;
      uint64_t v5 = *(void *)(v0 + 128);
      uint64_t v4 = *(void *)(v0 + 136);
      uint64_t v6 = (void *)swift_allocObject();
      *(void *)(v0 + 176) = v6;
      v6[2] = v3;
      v6[3] = v1;
      v6[4] = v5;
      v6[5] = v4;
      v3;
      id v7 = v1;
      swift_retain();
      uint64_t v8 = (void *)swift_task_alloc();
      *(void *)(v0 + 184) = v8;
      void *v8 = v0;
      v8[1] = sub_100186D60;
      uint64_t v9 = *(void *)(v0 + 112);
      return NSManagedObjectContext.perform<A>(_:)(v9, sub_100189CB4, v6, (char *)&type metadata for () + 8);
    }
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = 0;
    id v14 = v1;
    sub_100188E9C(v13, 225, v14, 0xD000000000000010, (void *)0x800000010054C1E0);

    swift_release();
    swift_willThrow();
  }
  else
  {
    type metadata accessor for ICError(0);
    *(void *)(v0 + 104) = 232;
    sub_10002F214((uint64_t *)&unk_10069E1D0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100524D10;
    *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 40) = v11;
    _StringGuts.grow(_:)(34);
    swift_bridgeObjectRelease();
    type metadata accessor for AttachmentID();
    sub_10018A2FC((unint64_t *)&unk_10069F050, (void (*)(uint64_t))&type metadata accessor for AttachmentID);
    v12._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v12);
    swift_bridgeObjectRelease();
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = 0xD000000000000020;
    *(void *)(inited + 56) = 0x800000010054DA00;
    sub_100167B58(inited);
    sub_10018A2FC((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_willThrow();
  }
  id v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t sub_100186D60()
{
  *(void *)(*(void *)v1 + 192) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v2 = sub_1001862C0;
  }
  else
  {
    swift_release();
    id v2 = sub_100186E7C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100186E7C()
{
  uint64_t v1 = *(void **)(v0 + 160);

  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100186EE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[18] = a3;
  v4[19] = v3;
  v4[16] = a1;
  v4[17] = a2;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1006A7D70 + dword_1006A7D70);
  uint64_t v6 = (void *)swift_task_alloc();
  v4[20] = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_100186F9C;
  return v8(v3, a1);
}

uint64_t sub_100186F9C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 168) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10018709C, 0, 0);
}

uint64_t sub_10018709C()
{
  uint64_t v1 = *(void **)(v0 + 168);
  if (v1)
  {
    id v2 = [*(id *)(v0 + 128) managedObjectContextForObjectID:*(void *)(v0 + 168)];
    *(void *)(v0 + 176) = v2;
    if (v2)
    {
      uint64_t v3 = v2;
      uint64_t v5 = *(void *)(v0 + 136);
      uint64_t v4 = *(void *)(v0 + 144);
      uint64_t v6 = (void *)swift_allocObject();
      *(void *)(v0 + 184) = v6;
      v6[2] = v3;
      v6[3] = v1;
      v6[4] = v5;
      v6[5] = v4;
      v3;
      id v7 = v1;
      swift_retain();
      uint64_t v8 = (void *)swift_task_alloc();
      *(void *)(v0 + 192) = v8;
      uint64_t v9 = sub_10002F214(&qword_10069CE08);
      void *v8 = v0;
      v8[1] = sub_10018740C;
      return NSManagedObjectContext.perform<A>(_:)(v0 + 96, sub_100189C90, v6, v9);
    }
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = 0;
    id v14 = v1;
    sub_100188E9C(v13, 225, v14, 0x6E457265646C6F46, (void *)0xEC00000079746974);

    swift_release();
    swift_willThrow();
  }
  else
  {
    type metadata accessor for ICError(0);
    *(void *)(v0 + 120) = 232;
    sub_10002F214((uint64_t *)&unk_10069E1D0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100524D10;
    *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 40) = v11;
    _StringGuts.grow(_:)(34);
    swift_bridgeObjectRelease();
    type metadata accessor for FolderID();
    sub_10018A2FC(&qword_10069CE00, (void (*)(uint64_t))&type metadata accessor for FolderID);
    v12._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v12);
    swift_bridgeObjectRelease();
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = 0xD000000000000020;
    *(void *)(inited + 56) = 0x800000010054DA00;
    sub_100167B58(inited);
    sub_10018A2FC((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_willThrow();
  }
  id v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t sub_10018740C()
{
  *(void *)(*(void *)v1 + 200) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v2 = sub_100187594;
  }
  else
  {
    swift_release();
    id v2 = sub_100187528;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100187528()
{
  uint64_t v1 = *(void **)(v0 + 168);

  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v4(v2, v3);
}

uint64_t sub_100187594()
{
  uint64_t v1 = (void *)v0[22];
  uint64_t v2 = (void *)v0[21];
  swift_release();

  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_100187604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[17] = a4;
  v5[18] = v4;
  v5[15] = a2;
  v5[16] = a3;
  v5[14] = a1;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_10069D398 + dword_10069D398);
  id v7 = (void *)swift_task_alloc();
  v5[19] = v7;
  void *v7 = v5;
  v7[1] = sub_1001876C0;
  return v9(v4, a2);
}

uint64_t sub_1001876C0(uint64_t a1)
{
  *(void *)(*(void *)v1 + 160) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1001877C0, 0, 0);
}

uint64_t sub_1001877C0()
{
  uint64_t v1 = *(void **)(v0 + 160);
  if (v1)
  {
    id v2 = [*(id *)(v0 + 120) managedObjectContextForObjectID:*(void *)(v0 + 160)];
    *(void *)(v0 + 168) = v2;
    if (v2)
    {
      uint64_t v3 = v2;
      uint64_t v5 = *(void *)(v0 + 128);
      uint64_t v4 = *(void *)(v0 + 136);
      uint64_t v6 = (void *)swift_allocObject();
      *(void *)(v0 + 176) = v6;
      v6[2] = v3;
      v6[3] = v1;
      v6[4] = v5;
      v6[5] = v4;
      v3;
      id v7 = v1;
      swift_retain();
      uint64_t v8 = (void *)swift_task_alloc();
      *(void *)(v0 + 184) = v8;
      void *v8 = v0;
      v8[1] = sub_100185AF4;
      uint64_t v9 = *(void *)(v0 + 112);
      return NSManagedObjectContext.perform<A>(_:)(v9, sub_100189C64, v6, (char *)&type metadata for () + 8);
    }
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = 0;
    id v14 = v1;
    sub_10016C8CC(v13, 225, v14);

    swift_release();
    swift_willThrow();
  }
  else
  {
    type metadata accessor for ICError(0);
    *(void *)(v0 + 104) = 232;
    sub_10002F214((uint64_t *)&unk_10069E1D0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100524D10;
    *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 40) = v11;
    _StringGuts.grow(_:)(34);
    swift_bridgeObjectRelease();
    type metadata accessor for TableID();
    sub_10018A2FC(&qword_10069CDF0, (void (*)(uint64_t))&type metadata accessor for TableID);
    v12._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v12);
    swift_bridgeObjectRelease();
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = 0xD000000000000020;
    *(void *)(inited + 56) = 0x800000010054DA00;
    sub_100167B58(inited);
    sub_10018A2FC((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_willThrow();
  }
  id v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t sub_100187B0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[17] = a3;
  v4[18] = v3;
  v4[15] = a1;
  v4[16] = a2;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1006A3B80 + dword_1006A3B80);
  uint64_t v6 = (void *)swift_task_alloc();
  v4[19] = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_100187BC4;
  return v8(v3, a1);
}

uint64_t sub_100187BC4(uint64_t a1)
{
  *(void *)(*(void *)v1 + 160) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100187CC4, 0, 0);
}

uint64_t sub_100187CC4()
{
  uint64_t v1 = *(void **)(v0 + 160);
  if (v1)
  {
    id v2 = [*(id *)(v0 + 120) managedObjectContextForObjectID:*(void *)(v0 + 160)];
    *(void *)(v0 + 168) = v2;
    if (v2)
    {
      uint64_t v3 = v2;
      uint64_t v5 = *(void *)(v0 + 128);
      uint64_t v4 = *(void *)(v0 + 136);
      uint64_t v6 = (void *)swift_allocObject();
      *(void *)(v0 + 176) = v6;
      v6[2] = v3;
      v6[3] = v1;
      v6[4] = v5;
      v6[5] = v4;
      v3;
      id v7 = v1;
      swift_retain();
      uint64_t v8 = (void *)swift_task_alloc();
      *(void *)(v0 + 184) = v8;
      uint64_t v9 = sub_10002F214(&qword_10069CDE0);
      void *v8 = v0;
      v8[1] = sub_100188018;
      return NSManagedObjectContext.perform<A>(_:)(v0 + 96, sub_100189C2C, v6, v9);
    }
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = 0;
    id v14 = v1;
    sub_100188C80(v13, 225, v14);

    swift_release();
    swift_willThrow();
  }
  else
  {
    type metadata accessor for ICError(0);
    *(void *)(v0 + 112) = 232;
    sub_10002F214((uint64_t *)&unk_10069E1D0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100524D10;
    *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 40) = v11;
    _StringGuts.grow(_:)(34);
    swift_bridgeObjectRelease();
    type metadata accessor for NoteID();
    sub_10018A2FC((unint64_t *)&unk_10069CDC0, (void (*)(uint64_t))&type metadata accessor for NoteID);
    v12._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v12);
    swift_bridgeObjectRelease();
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = 0xD000000000000020;
    *(void *)(inited + 56) = 0x800000010054DA00;
    sub_100167B58(inited);
    sub_10018A2FC((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_willThrow();
  }
  id v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t sub_100188018()
{
  *(void *)(*(void *)v1 + 192) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v2 = sub_10018A348;
  }
  else
  {
    swift_release();
    id v2 = sub_10018A344;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100188134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[17] = a4;
  v5[18] = v4;
  v5[15] = a2;
  v5[16] = a3;
  v5[14] = a1;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1006A3B80 + dword_1006A3B80);
  id v7 = (void *)swift_task_alloc();
  v5[19] = v7;
  void *v7 = v5;
  v7[1] = sub_1001881F0;
  return v9(v4, a2);
}

uint64_t sub_1001881F0(uint64_t a1)
{
  *(void *)(*(void *)v1 + 160) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1001882F0, 0, 0);
}

uint64_t sub_1001882F0()
{
  uint64_t v1 = *(void **)(v0 + 160);
  if (v1)
  {
    id v2 = [*(id *)(v0 + 120) managedObjectContextForObjectID:*(void *)(v0 + 160)];
    *(void *)(v0 + 168) = v2;
    if (v2)
    {
      uint64_t v3 = v2;
      uint64_t v5 = *(void *)(v0 + 128);
      uint64_t v4 = *(void *)(v0 + 136);
      uint64_t v6 = (void *)swift_allocObject();
      *(void *)(v0 + 176) = v6;
      v6[2] = v3;
      v6[3] = v1;
      v6[4] = v5;
      v6[5] = v4;
      v3;
      id v7 = v1;
      swift_retain();
      uint64_t v8 = (void *)swift_task_alloc();
      *(void *)(v0 + 184) = v8;
      uint64_t v9 = sub_10002F214(&qword_10069CDD0);
      void *v8 = v0;
      v8[1] = sub_100185AF4;
      uint64_t v10 = *(void *)(v0 + 112);
      return NSManagedObjectContext.perform<A>(_:)(v10, sub_100189C08, v6, v9);
    }
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = 0;
    id v15 = v1;
    sub_100188C80(v14, 225, v15);

    swift_release();
    swift_willThrow();
  }
  else
  {
    type metadata accessor for ICError(0);
    *(void *)(v0 + 104) = 232;
    sub_10002F214((uint64_t *)&unk_10069E1D0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100524D10;
    *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 40) = v12;
    _StringGuts.grow(_:)(34);
    swift_bridgeObjectRelease();
    type metadata accessor for NoteID();
    sub_10018A2FC((unint64_t *)&unk_10069CDC0, (void (*)(uint64_t))&type metadata accessor for NoteID);
    v13._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v13);
    swift_bridgeObjectRelease();
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = 0xD000000000000020;
    *(void *)(inited + 56) = 0x800000010054DA00;
    sub_100167B58(inited);
    sub_10018A2FC((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_willThrow();
  }
  id v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

uint64_t sub_100188648(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  uint64_t v6 = v1[2];
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_100161724;
  return AppendToNoteIntent.perform()(a1, v4, v5, v6);
}

char *sub_1001886FC@<X0>(char **a1@<X8>)
{
  uint64_t result = _s11MobileNotes18AppendToNoteIntentVACycfC_0();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

void sub_100188728(void *a1, uint64_t a2, void (*a3)(void *__return_ptr, uint64_t))
{
  id v10 = 0;
  id v4 = [a1 existingObjectWithID:a2 error:&v10];
  id v5 = v10;
  if (v4)
  {
    uint64_t v6 = v4;
    v11[1] = &OBJC_PROTOCOL___ICFolderObject;
    uint64_t v7 = swift_dynamicCastObjCProtocolUnconditional();
    id v8 = v5;
    a3(v11, v7);
  }
  else
  {
    id v9 = v10;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
}

void sub_100188838(void *a1, uint64_t a2, void (*a3)(uint64_t))
{
  v10[0] = 0;
  id v4 = [a1 existingObjectWithID:a2 error:v10];
  id v5 = v10[0];
  if (v4)
  {
    uint64_t v6 = v4;
    v10[1] = &OBJC_PROTOCOL___ICSearchIndexableNote;
    uint64_t v7 = swift_dynamicCastObjCProtocolUnconditional();
    id v8 = v5;
    a3(v7);
  }
  else
  {
    id v9 = v10[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
}

void sub_10018894C(void *a1, uint64_t a2, void (*a3)(void *__return_ptr, uint64_t), uint64_t a4, void *a5)
{
  id v13 = 0;
  id v7 = [a1 existingObjectWithID:a2 error:&v13];
  id v8 = v13;
  if (v7)
  {
    id v9 = v7;
    v14[2] = *a5;
    uint64_t v10 = swift_dynamicCastObjCProtocolUnconditional();
    id v11 = v8;
    a3(v14, v10);
  }
  else
  {
    id v12 = v13;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
}

void sub_100188A5C(void *a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, id *a5)
{
  v13[0] = 0;
  id v7 = [a1 existingObjectWithID:a2 error:v13];
  id v8 = v13[0];
  if (v7)
  {
    id v9 = v7;
    v13[1] = *a5;
    uint64_t v10 = swift_dynamicCastObjCProtocolUnconditional();
    id v11 = v8;
    a3(v10);
  }
  else
  {
    id v12 = v13[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
}

void sub_100188B70(void *a1, uint64_t a2, void (*a3)(void *__return_ptr, uint64_t))
{
  id v10 = 0;
  id v4 = [a1 existingObjectWithID:a2 error:&v10];
  id v5 = v10;
  if (v4)
  {
    uint64_t v6 = v4;
    v11[1] = &OBJC_PROTOCOL___ICSearchIndexableNote;
    uint64_t v7 = swift_dynamicCastObjCProtocolUnconditional();
    id v8 = v5;
    a3(v11, v7);
  }
  else
  {
    id v9 = v10;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
}

id sub_100188C80(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (void **)(a1 + 16);
  uint64_t v3 = *(void **)(a1 + 16);
  if (v3)
  {
    id v5 = *(id *)(a1 + 16);
  }
  else
  {
    type metadata accessor for ICError(0);
    sub_10002F214((uint64_t *)&unk_10069E1D0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100524D10;
    *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 40) = v8;
    _StringGuts.grow(_:)(87);
    v9._countAndFlagsBits = 0x69746E4565746F4ELL;
    v9._object = (void *)0xEA00000000007974;
    String.append(_:)(v9);
    v10._object = (void *)0x800000010054C180;
    v10._countAndFlagsBits = 0xD000000000000053;
    String.append(_:)(v10);
    id v11 = [a3 description];
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v14 = v13;

    v15._countAndFlagsBits = v12;
    v15._object = v14;
    String.append(_:)(v15);
    swift_bridgeObjectRelease();
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = 0;
    *(void *)(inited + 56) = 0xE000000000000000;
    sub_1001B50CC(inited);
    sub_10018A2FC((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_beginAccess();
    id v16 = *v4;
    *id v4 = 0;
    id v5 = 0;

    uint64_t v3 = 0;
  }
  id v17 = v3;
  return v5;
}

id sub_100188E60(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_100188E9C(a1, a2, a3, 0x6E457265646C6F46, (void *)0xEC00000079746974);
}

id sub_100188E80(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_100188E9C(a1, a2, a3, 0xD000000000000010, (void *)0x800000010054C1E0);
}

id sub_100188E9C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v6 = (void **)(a1 + 16);
  id v5 = *(void **)(a1 + 16);
  if (v5)
  {
    id v7 = *(id *)(a1 + 16);
  }
  else
  {
    type metadata accessor for ICError(0);
    sub_10002F214((uint64_t *)&unk_10069E1D0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100524D10;
    *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 40) = v12;
    _StringGuts.grow(_:)(87);
    v13._countAndFlagsBits = 0;
    v13._object = (void *)0xE000000000000000;
    String.append(_:)(v13);
    v14._countAndFlagsBits = a4;
    v14._object = a5;
    String.append(_:)(v14);
    v15._object = (void *)0x800000010054C180;
    v15._countAndFlagsBits = 0xD000000000000053;
    String.append(_:)(v15);
    id v16 = [a3 description];
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v19 = v18;

    v20._countAndFlagsBits = v17;
    v20._object = v19;
    String.append(_:)(v20);
    swift_bridgeObjectRelease();
    v21._countAndFlagsBits = 0;
    v21._object = (void *)0xE000000000000000;
    String.append(_:)(v21);
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = 0;
    *(void *)(inited + 56) = 0xE000000000000000;
    sub_1001B50CC(inited);
    sub_10018A2FC((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_beginAccess();
    uint64_t v22 = *v6;
    *uint64_t v6 = 0;
    id v7 = 0;

    id v5 = 0;
  }
  id v23 = v5;
  return v7;
}

char *_s11MobileNotes18AppendToNoteIntentVACycfC_0()
{
  uint64_t v0 = sub_10002F214((uint64_t *)&unk_10069CE50);
  __chkstk_darwin(v0 - 8);
  uint64_t v53 = (char *)v36 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for InputConnectionBehavior();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v56 = v2;
  uint64_t v57 = v3;
  __chkstk_darwin(v2);
  uint64_t v55 = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v52 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v54 = (char *)v36 - v8;
  uint64_t v9 = sub_10002F214(&qword_10069B1D0);
  __chkstk_darwin(v9 - 8);
  long long v51 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v11 - 8);
  long long v46 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v16 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for Locale();
  __chkstk_darwin(v17 - 8);
  uint64_t v18 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v18 - 8);
  uint64_t v19 = type metadata accessor for LocalizedStringResource();
  uint64_t v48 = v19;
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  v36[1] = (char *)v36 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_10002F214(&qword_10069B1D8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v22 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  id v23 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 104);
  unsigned int v37 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v38 = v13;
  v23(v16, enum case for LocalizedStringResource.BundleDescription.main(_:), v13);
  uint64_t v40 = v23;
  uint64_t v39 = v14 + 104;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v23(v16, v22, v13);
  uint64_t v24 = v46;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v25 = *(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56);
  uint64_t v47 = v20 + 56;
  uint64_t v49 = v25;
  v25(v24, 0, 1, v19);
  uint64_t v26 = type metadata accessor for NoteEntity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v51, 1, 1, v26);
  uint64_t v27 = type metadata accessor for IntentDialog();
  uint64_t v43 = v27;
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
  uint64_t v44 = v29;
  uint64_t v45 = v28 + 56;
  v29(v54, 1, 1, v27);
  v29(v52, 1, 1, v27);
  unsigned int v41 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v30 = *(void (**)(void))(v57 + 104);
  v57 += 104;
  uint64_t v42 = (void (*)(char *, void, uint64_t))v30;
  v30(v55);
  sub_10018A2FC((unint64_t *)&qword_10069B1E0, (void (*)(uint64_t))type metadata accessor for NoteEntity);
  uint64_t v52 = (char *)IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  sub_10002F214((uint64_t *)&unk_10069B1F0);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v31 = v37;
  uint64_t v32 = v38;
  int v33 = v40;
  v40(v16, v37, v38);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v33(v16, v31, v32);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v49(v24, 0, 1, v48);
  uint64_t v34 = type metadata accessor for AttributedString();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v53, 1, 1, v34);
  v44(v54, 1, 1, v43);
  v42(v55, v41, v56);
  IntentParameter<>.init(title:description:default:requestValueDialog:inputConnectionBehavior:)();
  sub_10002F214((uint64_t *)&unk_10069CE60);
  unint64_t v58 = 0xD000000000000021;
  unint64_t v59 = 0x8000000100549290;
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  return v52;
}

uint64_t sub_10018991C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NoteEntity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100189980(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NoteEntity(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001899DC()
{
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100189A24(void *a1@<X0>, void *a2@<X8>)
{
}

unint64_t sub_100189A48()
{
  unint64_t result = qword_10069CD78;
  if (!qword_10069CD78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069CD78);
  }
  return result;
}

unint64_t sub_100189AA0()
{
  unint64_t result = qword_10069CD80;
  if (!qword_10069CD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069CD80);
  }
  return result;
}

uint64_t sub_100189AF4()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_100189B28()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for AppendToNoteIntent()
{
  return &type metadata for AppendToNoteIntent;
}

uint64_t sub_100189B54()
{
  return sub_10001DFB0(&qword_10069CD90, &qword_10069CD98);
}

uint64_t sub_100189B90()
{
  return sub_10001DFB0((unint64_t *)&qword_10069CDA0, (uint64_t *)&unk_10069E270);
}

uint64_t sub_100189BCC()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100189C08()
{
  sub_100188838(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void (**)(uint64_t))(v0 + 32));
}

void sub_100189C2C(void *a1@<X8>)
{
  sub_100188B70(*(void **)(v1 + 16), *(void *)(v1 + 24), *(void (**)(void *__return_ptr, uint64_t))(v1 + 32));
  if (!v2) {
    *a1 = v4;
  }
}

void sub_100189C64()
{
  sub_100188A5C(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void (**)(uint64_t))(v0 + 32), *(void *)(v0 + 40), (id *)&protocolRef_ICTableObject);
}

void sub_100189C90(void *a1@<X8>)
{
}

void sub_100189CB4()
{
  sub_100188A5C(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void (**)(uint64_t))(v0 + 32), *(void *)(v0 + 40), (id *)&protocolRef_ICAttachmentObject);
}

void sub_100189CE4(void *a1@<X8>)
{
  sub_100188728(*(void **)(v1 + 16), *(void *)(v1 + 24), *(void (**)(void *__return_ptr, uint64_t))(v1 + 32));
  if (!v2) {
    *a1 = v4;
  }
}

void sub_100189D1C()
{
  sub_100188A5C(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void (**)(uint64_t))(v0 + 32), *(void *)(v0 + 40), (id *)&protocolRef_ICSearchIndexableNote_0);
}

uint64_t sub_100189D48()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_100189D90(void *a1@<X8>)
{
}

void sub_100189DB0(void *a1@<X0>, void *a2@<X8>)
{
  sub_10018894C(*(void **)(v2 + 16), *(void *)(v2 + 24), *(void (**)(void *__return_ptr, uint64_t))(v2 + 32), *(void *)(v2 + 40), a1);
  if (!v3)
  {
    *a2 = v5;
    a2[1] = v6;
  }
}

void sub_100189DE8(void *a1)
{
  uint64_t v3 = type metadata accessor for AttributedString();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [a1 managedObjectContext];
  if (!v7)
  {
    type metadata accessor for ICError(0);
    v14[1] = 225;
    sub_1001B50CC((uint64_t)_swiftEmptyArrayStorage);
    sub_10018A2FC((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_willThrow();
    return;
  }
  uint64_t v8 = v7;
  if ([a1 isPasswordProtectedAndLocked])
  {
    sub_100173F8C();
    swift_allocError();
    char v10 = 11;
LABEL_9:
    *uint64_t v9 = v10;
LABEL_10:
    swift_willThrow();
    goto LABEL_11;
  }
  if (![a1 isEditable])
  {
    sub_100173F8C();
    swift_allocError();
    char v10 = 12;
    goto LABEL_9;
  }
  IntentParameter.wrappedValue.getter();
  ICNote.append(_:options:)();
  if (v1)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
LABEL_11:

    return;
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  id v15 = 0;
  if (([v8 save:&v15] & 1) == 0)
  {
    id v13 = v15;
    _convertNSErrorToError(_:)();

    goto LABEL_10;
  }
  id v11 = v15;
  id v12 = [a1 objectID];
}

void sub_10018A0B4(void *a1)
{
  uint64_t v3 = type metadata accessor for AttributedString();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [a1 managedObjectContext];
  if (!v7)
  {
    type metadata accessor for ICError(0);
    v12[1] = 225;
    sub_1001B50CC((uint64_t)_swiftEmptyArrayStorage);
    sub_10018A2FC((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_willThrow();
    return;
  }
  uint64_t v8 = v7;
  IntentParameter.wrappedValue.getter();
  NoteObject.append(_:)();
  if (v1)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    id v13 = 0;
    if ([v8 save:&v13])
    {
      id v9 = v13;
      id v10 = [a1 objectID];
      return;
    }
    id v11 = v13;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
}

uint64_t sub_10018A2FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10018A358()
{
  return sub_10018A38C();
}

uint64_t sub_10018A36C@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  *a1 = *(void *)(v1 + 8);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10018A378()
{
  return sub_10018A38C();
}

uint64_t sub_10018A38C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10018A3F8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10018A46C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10018A4E0()
{
  uint64_t v1 = sub_10002F214(&qword_10069D208);
  uint64_t v122 = *(void *)(v1 - 8);
  uint64_t v123 = v1;
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v121 = (char *)&v83 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v120 = (char *)&v83 - v4;
  uint64_t v114 = sub_10002F214(&qword_10069D270);
  uint64_t v115 = *(void *)(v114 - 8);
  __chkstk_darwin(v114);
  uint64_t v111 = (char *)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_10002F214(&qword_10069D278);
  uint64_t v117 = *(void *)(v116 - 8);
  __chkstk_darwin(v116);
  v112 = (char *)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_10002F214(&qword_10069D280);
  uint64_t v119 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  v113 = (char *)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_10002F214(&qword_10069D288);
  uint64_t v110 = *(void *)(v109 - 8);
  __chkstk_darwin(v109);
  uint64_t v108 = (char *)&v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_10002F214(&qword_10069D290);
  uint64_t v136 = *(void *)(v107 - 8);
  uint64_t v9 = __chkstk_darwin(v107);
  v129 = (char *)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v105 = (char *)&v83 - v11;
  uint64_t v127 = sub_10002F214(&qword_10069D298);
  uint64_t v135 = *(void *)(v127 - 8);
  __chkstk_darwin(v127);
  uint64_t v126 = (char *)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_10002F214(&qword_10069D2A0);
  uint64_t v102 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  long long v98 = (char *)&v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = (void *)sub_10002F214(&qword_10069D2A8);
  uint64_t v104 = *(v103 - 1);
  __chkstk_darwin(v103);
  uint64_t v99 = (char *)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = (void *)sub_10002F214(&qword_10069D2B0);
  long long v95 = (void (**)(char *, char *, void *))*(v96 - 1);
  uint64_t v15 = __chkstk_darwin(v96);
  long long v94 = (char *)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v92 = (char *)&v83 - v17;
  uint64_t v18 = sub_10002F214(&qword_10069D2B8);
  __chkstk_darwin(v18 - 8);
  v125 = (char *)&v83 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_10002F214(&qword_10069D2C0);
  v124 = *(void (***)(char *, uint64_t))(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v85 = (char *)&v83 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_10002F214(&qword_10069D2C8);
  uint64_t v90 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  uint64_t v86 = (char *)&v83 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_10002F214(&qword_10069D0E8);
  v134 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v84 - 8);
  __chkstk_darwin(v84);
  id v23 = (char *)&v83 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = sub_10002F214(&qword_10069D0E0);
  uint64_t v24 = *(void *)(v128 - 8);
  __chkstk_darwin(v128);
  uint64_t v26 = (char *)&v83 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_10002F214(&qword_1006A4820);
  uint64_t v28 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v83 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v0 + 16) = [self sharedIndexer];
  uint64_t v31 = v0 + OBJC_IVAR____TtCV11MobileNotes23SearchIndexDebugSection9ViewModel__enabled;
  uint64_t v93 = v0 + OBJC_IVAR____TtCV11MobileNotes23SearchIndexDebugSection9ViewModel__enabled;
  LOBYTE(v137) = 0;
  Published.init(initialValue:)();
  uint64_t v32 = *(void (**)(uint64_t, char *, uint64_t))(v28 + 32);
  uint64_t v91 = v27;
  v32(v31, v30, v27);
  uint64_t v33 = v0 + OBJC_IVAR____TtCV11MobileNotes23SearchIndexDebugSection9ViewModel__observing;
  uint64_t v97 = v0 + OBJC_IVAR____TtCV11MobileNotes23SearchIndexDebugSection9ViewModel__observing;
  LOBYTE(v137) = 0;
  Published.init(initialValue:)();
  v32(v33, v30, v27);
  uint64_t v34 = v0 + OBJC_IVAR____TtCV11MobileNotes23SearchIndexDebugSection9ViewModel__dataSources;
  uint64_t v106 = v0 + OBJC_IVAR____TtCV11MobileNotes23SearchIndexDebugSection9ViewModel__dataSources;
  v137 = _swiftEmptyArrayStorage;
  uint64_t v101 = sub_10002F214(&qword_10069CED8);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v34, v26, v128);
  uint64_t v35 = v0 + OBJC_IVAR____TtCV11MobileNotes23SearchIndexDebugSection9ViewModel__operationCount;
  v137 = 0;
  Published.init(initialValue:)();
  (*((void (**)(uint64_t, char *, uint64_t))v134 + 4))(v35, v23, v84);
  uint64_t v36 = *(void **)(v0 + 16);
  uint64_t v37 = v0;
  swift_getKeyPath();
  id v38 = v36;
  uint64_t v39 = v85;
  _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)();

  swift_release();
  unint64_t v130 = sub_100190F20();
  v137 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v132 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  uint64_t v40 = *(void *)(v132 - 8);
  unsigned int v41 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 56);
  uint64_t v133 = v40 + 56;
  v134 = v41;
  uint64_t v42 = (uint64_t)v125;
  v41((uint64_t)v125, 1, 1, v132);
  unsigned __int8 v88 = &protocol conformance descriptor for NSObject.KeyValueObservingPublisher<A, B>;
  sub_10001DFB0(&qword_10069D2D8, &qword_10069D2C0);
  uint64_t v131 = sub_100190F60(&qword_10069D2E0, (void (*)(uint64_t))sub_100190F20);
  uint64_t v43 = v86;
  uint64_t v44 = v87;
  Publisher.receive<A>(on:options:)();
  sub_10002B754(v42, &qword_10069D2B8);

  v124[1](v39, v44);
  swift_beginAccess();
  uint64_t v45 = v92;
  Published.projectedValue.getter();
  swift_endAccess();
  v124 = (void (**)(char *, uint64_t))&protocol conformance descriptor for Publishers.ReceiveOn<A, B>;
  sub_10001DFB0(&qword_10069D2E8, &qword_10069D2C8);
  uint64_t v46 = v89;
  Publisher<>.assign(to:)();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v43, v46);
  uint64_t v47 = v95;
  uint64_t v48 = v96;
  v95[2](v94, v45, v96);
  swift_beginAccess();
  Published.projectedValue.setter();
  swift_endAccess();
  ((void (*)(char *, void *))v47[1])(v45, v48);
  uint64_t v49 = *(void **)(v37 + 16);
  uint64_t v50 = v37;
  uint64_t v83 = v37;
  swift_getKeyPath();
  id v51 = v49;
  uint64_t v52 = v126;
  _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)();

  swift_release();
  long long v94 = (char *)sub_10001DFB0(&qword_10069D2F0, &qword_10069D298);
  uint64_t v53 = v98;
  uint64_t v54 = v127;
  Publisher.map<A>(_:)();
  uint64_t v55 = *(void (***)(char *, char *, void *))(v135 + 8);
  v135 += 8;
  long long v95 = v55;
  ((void (*)(char *, uint64_t))v55)(v52, v54);
  v137 = (void *)static OS_dispatch_queue.main.getter();
  v134(v42, 1, 1, v132);
  uint64_t v96 = &protocol conformance descriptor for Publishers.Map<A, B>;
  sub_10001DFB0(&qword_10069D2F8, &qword_10069D2A0);
  uint64_t v56 = v99;
  uint64_t v57 = v100;
  Publisher.receive<A>(on:options:)();
  sub_10002B754(v42, &qword_10069D2B8);

  (*(void (**)(char *, uint64_t))(v102 + 8))(v53, v57);
  swift_beginAccess();
  unint64_t v58 = v105;
  Published.projectedValue.getter();
  swift_endAccess();
  sub_10001DFB0(&qword_10069D300, &qword_10069D2A8);
  unint64_t v59 = v103;
  Publisher<>.assign(to:)();
  (*(void (**)(char *, void *))(v104 + 8))(v56, v59);
  uint64_t v60 = v136;
  uint64_t v104 = *(void *)(v136 + 16);
  uint64_t v61 = v107;
  ((void (*)(char *, char *, uint64_t))v104)(v129, v58, v107);
  swift_beginAccess();
  Published.projectedValue.setter();
  swift_endAccess();
  int v62 = *(void **)(v60 + 8);
  uint64_t v136 = v60 + 8;
  uint64_t v103 = v62;
  ((void (*)(char *, uint64_t))v62)(v58, v61);
  int v63 = *(void **)(v50 + 16);
  swift_getKeyPath();
  id v64 = v63;
  int v65 = v126;
  _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)();

  swift_release();
  v137 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v66 = (uint64_t)v125;
  v134((uint64_t)v125, 1, 1, v132);
  uint64_t v67 = v108;
  uint64_t v68 = v127;
  Publisher.receive<A>(on:options:)();
  sub_10002B754(v66, &qword_10069D2B8);

  ((void (*)(char *, uint64_t))v95)(v65, v68);
  swift_beginAccess();
  Published.projectedValue.getter();
  swift_endAccess();
  sub_10001DFB0(&qword_10069D308, &qword_10069D288);
  uint64_t v69 = v109;
  Publisher<>.assign(to:)();
  (*(void (**)(char *, uint64_t))(v110 + 8))(v67, v69);
  ((void (*)(char *, char *, uint64_t))v104)(v129, v58, v61);
  swift_beginAccess();
  Published.projectedValue.setter();
  swift_endAccess();
  ((void (*)(char *, uint64_t))v103)(v58, v61);
  uint64_t v70 = v83;
  uint64_t v71 = *(void **)(v83 + 16);
  swift_getKeyPath();
  id v72 = v71;
  uint64_t v73 = v111;
  _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)();

  swift_release();
  sub_10001DFB0(&qword_10069D310, &qword_10069D270);
  uint64_t v74 = v112;
  uint64_t v75 = v114;
  Publisher.map<A>(_:)();
  (*(void (**)(char *, uint64_t))(v115 + 8))(v73, v75);
  v137 = (void *)static OS_dispatch_queue.main.getter();
  v134(v66, 1, 1, v132);
  sub_10001DFB0(&qword_10069D318, &qword_10069D278);
  uint64_t v76 = v113;
  uint64_t v77 = v116;
  Publisher.receive<A>(on:options:)();
  sub_10002B754(v66, &qword_10069D2B8);

  (*(void (**)(char *, uint64_t))(v117 + 8))(v74, v77);
  swift_beginAccess();
  uint64_t v78 = v120;
  Published.projectedValue.getter();
  swift_endAccess();
  sub_10001DFB0(&qword_10069D320, &qword_10069D280);
  uint64_t v79 = v118;
  Publisher<>.assign(to:)();
  (*(void (**)(char *, uint64_t))(v119 + 8))(v76, v79);
  uint64_t v80 = v122;
  uint64_t v81 = v123;
  (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v121, v78, v123);
  swift_beginAccess();
  Published.projectedValue.setter();
  swift_endAccess();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v78, v81);
  return v70;
}

unsigned char *sub_10018B8D0@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*result & 1) == 0;
  return result;
}

void sub_10018B8E4(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = [*a1 dataSources];
  sub_10002F214(&qword_10069D328);
  uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  *a2 = v4;
}

uint64_t *sub_10018B94C@<X0>(uint64_t *result@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *result;
  if ((unint64_t)*result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = (uint64_t *)swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v4)
  {
LABEL_13:
    *a2 = _swiftEmptyArrayStorage;
    return result;
  }
  uint64_t result = (uint64_t *)sub_100169B2C(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = 0;
    uint64_t v17 = a2;
    unint64_t v18 = v3 & 0xC000000000000001;
    uint64_t v6 = v3;
    uint64_t v7 = v4;
    do
    {
      if (v18)
      {
        uint64_t v8 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v8 = *(void **)(v3 + 8 * v5 + 32);
        swift_unknownObjectRetain();
      }
      id v9 = [v8 dataSourceIdentifier];
      uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v12 = v11;

      id v13 = [v8 indexingPriority];
      uint64_t result = (uint64_t *)swift_unknownObjectRelease();
      unint64_t v15 = _swiftEmptyArrayStorage[2];
      unint64_t v14 = _swiftEmptyArrayStorage[3];
      if (v15 >= v14 >> 1) {
        uint64_t result = (uint64_t *)sub_100169B2C(v14 > 1, v15 + 1, 1);
      }
      ++v5;
      _swiftEmptyArrayStorage[2] = v15 + 1;
      uint64_t v16 = &_swiftEmptyArrayStorage[3 * v15];
      v16[4] = v13;
      v16[5] = v10;
      v16[6] = v12;
      uint64_t v3 = v6;
    }
    while (v7 != v5);
    a2 = v17;
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_10018BAF4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCV11MobileNotes23SearchIndexDebugSection9ViewModel__enabled;
  uint64_t v2 = sub_10002F214(&qword_1006A4820);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtCV11MobileNotes23SearchIndexDebugSection9ViewModel__observing, v2);
  uint64_t v4 = v0 + OBJC_IVAR____TtCV11MobileNotes23SearchIndexDebugSection9ViewModel__dataSources;
  uint64_t v5 = sub_10002F214(&qword_10069D0E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = v0 + OBJC_IVAR____TtCV11MobileNotes23SearchIndexDebugSection9ViewModel__operationCount;
  uint64_t v7 = sub_10002F214(&qword_10069D0E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return swift_deallocClassInstance();
}

uint64_t sub_10018BC60()
{
  return type metadata accessor for SearchIndexDebugSection.ViewModel();
}

uint64_t type metadata accessor for SearchIndexDebugSection.ViewModel()
{
  uint64_t result = qword_10069CEB8;
  if (!qword_10069CEB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10018BCB4()
{
  sub_10018BE44(319, (unint64_t *)&qword_1006A4770);
  if (v0 <= 0x3F)
  {
    sub_10018BDE8();
    if (v1 <= 0x3F)
    {
      sub_10018BE44(319, (unint64_t *)&unk_10069CEE0);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_10018BDE8()
{
  if (!qword_10069CED0)
  {
    sub_10001DFF4(&qword_10069CED8);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10069CED0);
    }
  }
}

void sub_10018BE44(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = type metadata accessor for Published();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t BidirectionalAsyncBufferedQueue.outbox.getter()
{
  return swift_retain();
}

uint64_t destroy for SearchIndexDebugSection()
{
  return sub_10018BEA8();
}

uint64_t sub_10018BEA8()
{
  return swift_release();
}

uint64_t _s11MobileNotes23SearchIndexDebugSectionVwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  BidirectionalAsyncBufferedQueue.outbox.getter();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for SearchIndexDebugSection(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  BidirectionalAsyncBufferedQueue.outbox.getter();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_10018BEA8();
  return a1;
}

uint64_t assignWithTake for SearchIndexDebugSection(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_10018BEA8();
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchIndexDebugSection(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchIndexDebugSection(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchIndexDebugSection()
{
  return &type metadata for SearchIndexDebugSection;
}

uint64_t initializeBufferWithCopyOfBuffer for SearchIndexDebugSection.ViewModel.IndexingDataSource(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for SearchIndexDebugSection.ViewModel.IndexingDataSource()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for SearchIndexDebugSection.ViewModel.IndexingDataSource(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SearchIndexDebugSection.ViewModel.IndexingDataSource(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchIndexDebugSection.ViewModel.IndexingDataSource(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchIndexDebugSection.ViewModel.IndexingDataSource(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchIndexDebugSection.ViewModel.IndexingDataSource()
{
  return &type metadata for SearchIndexDebugSection.ViewModel.IndexingDataSource;
}

void *sub_10018C198()
{
  return &protocol witness table for String;
}

uint64_t sub_10018C1A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10018C1C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10018C210()
{
  type metadata accessor for SearchIndexDebugSection.ViewModel();
  uint64_t v0 = swift_allocObject();
  sub_10018A4E0();
  return v0;
}

uint64_t sub_10018C24C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v19[0] = a2;
  uint64_t v3 = sub_10002F214(&qword_10069CF88);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)v19 - v7;
  uint64_t v9 = sub_10002F214(&qword_10069CF90);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  unint64_t v14 = (char *)v19 - v13;
  *(void *)unint64_t v14 = static VerticalAlignment.center.getter();
  *((void *)v14 + 1) = 0;
  v14[16] = 1;
  uint64_t v15 = sub_10002F214(&qword_10069CF98);
  sub_10018C504(a1, (uint64_t)&v14[*(int *)(v15 + 44)]);
  type metadata accessor for SearchIndexDebugSection.ViewModel();
  sub_100190F60(&qword_10069CFA0, (void (*)(uint64_t))type metadata accessor for SearchIndexDebugSection.ViewModel);
  StateObject.wrappedValue.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  sub_10018C8EC(v19[1], (uint64_t)v8);
  swift_bridgeObjectRelease();
  sub_10002F034((uint64_t)v14, (uint64_t)v12, &qword_10069CF90);
  sub_10002F034((uint64_t)v8, (uint64_t)v6, &qword_10069CF88);
  uint64_t v16 = v19[0];
  sub_10002F034((uint64_t)v12, v19[0], &qword_10069CF90);
  uint64_t v17 = sub_10002F214(&qword_10069CFA8);
  sub_10002F034((uint64_t)v6, v16 + *(int *)(v17 + 48), &qword_10069CF88);
  sub_10002B754((uint64_t)v8, &qword_10069CF88);
  sub_10002B754((uint64_t)v14, &qword_10069CF90);
  sub_10002B754((uint64_t)v6, &qword_10069CF88);
  return sub_10002B754((uint64_t)v12, &qword_10069CF90);
}

uint64_t sub_10018C504@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v3 = sub_10002F214(&qword_10069D000);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v24 = (uint64_t)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v23 = (uint64_t)&v22 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v22 - v9;
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v22 - v11;
  type metadata accessor for SearchIndexDebugSection.ViewModel();
  sub_100190F60(&qword_10069CFA0, (void (*)(uint64_t))type metadata accessor for SearchIndexDebugSection.ViewModel);
  uint64_t v22 = a1;
  StateObject.wrappedValue.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  char v13 = v28;
  *(void *)uint64_t v12 = static VerticalAlignment.center.getter();
  *((void *)v12 + 1) = 0;
  v12[16] = 1;
  uint64_t v14 = sub_10002F214(&qword_10069D008);
  sub_10018CBD0(v13, 0x64656C62616E45, 0xE700000000000000, 0x64656C6261736944, 0xE800000000000000, &v12[*(int *)(v14 + 44)]);
  StateObject.wrappedValue.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  char v15 = v27;
  *(void *)uint64_t v10 = static VerticalAlignment.center.getter();
  *((void *)v10 + 1) = 0;
  v10[16] = 1;
  sub_10018CBD0(v15, 0x6E6976726573624FLL, 0xE900000000000067, 0x6573626F20746F4ELL, 0xED0000676E697672, &v10[*(int *)(v14 + 44)]);
  StateObject.wrappedValue.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v16 = v26;
  uint64_t v17 = v23;
  sub_10002F034((uint64_t)v12, v23, &qword_10069D000);
  uint64_t v18 = v24;
  sub_10002F034((uint64_t)v10, v24, &qword_10069D000);
  uint64_t v19 = v25;
  sub_10002F034(v17, v25, &qword_10069D000);
  uint64_t v20 = sub_10002F214(&qword_10069D010);
  sub_10002F034(v18, v19 + *(int *)(v20 + 48), &qword_10069D000);
  *(void *)(v19 + *(int *)(v20 + 64)) = v16;
  sub_10002B754((uint64_t)v10, &qword_10069D000);
  sub_10002B754((uint64_t)v12, &qword_10069D000);
  sub_10002B754(v18, &qword_10069D000);
  return sub_10002B754(v17, &qword_10069D000);
}

uint64_t sub_10018C8EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10002F214(&qword_10069CFB0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_10002F214(&qword_10069CF88);
  __chkstk_darwin(v8);
  uint64_t v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_getKeyPath();
  *(void *)&long long v17 = a1;
  swift_bridgeObjectRetain();
  sub_10018D648((uint64_t (*)(long long *, long long *))sub_100190A34, 0);
  swift_release();
  sub_10002F214(&qword_10069CFB8);
  sub_10002F214(&qword_10069CED8);
  sub_10001DFB0(&qword_10069CFC0, &qword_10069CFB8);
  sub_10001DFB0(&qword_10069CFC8, &qword_10069CED8);
  Table.init<A>(_:columns:)();
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 16))(v10, v7, v4);
  uint64_t v11 = &v10[*(int *)(v8 + 36)];
  long long v12 = v22;
  v11[4] = v21;
  v11[5] = v12;
  v11[6] = v23;
  long long v13 = v18;
  *uint64_t v11 = v17;
  v11[1] = v13;
  long long v14 = v20;
  void v11[2] = v19;
  v11[3] = v14;
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  return sub_100190A48((uint64_t)v10, a2);
}

uint64_t sub_10018CBD0@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  uint64_t v36 = a6;
  uint64_t v11 = sub_10002F214(&qword_10069D018);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  char v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13);
  long long v18 = (char *)&v35 - v17;
  __chkstk_darwin(v16);
  long long v20 = (char *)&v35 - v19;
  if (a1)
  {
    uint64_t v21 = static Color.green.getter();
  }
  else
  {
    uint64_t v21 = static Color.red.getter();
    a2 = a4;
    a3 = a5;
  }
  uint64_t v37 = v21;
  sub_10002F214(&qword_10069D020);
  sub_100190C68();
  View.ic_frame(size:)();
  swift_release();
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v20, v18, v11);
  swift_bridgeObjectRetain();
  uint64_t v37 = a2;
  uint64_t v38 = a3;
  sub_10017B588();
  uint64_t v22 = Text.init<A>(_:)();
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  char v28 = v27 & 1;
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v29(v15, v20, v11);
  uint64_t v35 = v20;
  uint64_t v30 = v15;
  uint64_t v31 = v36;
  v29(v36, v30, v11);
  uint64_t v32 = &v31[*(int *)(sub_10002F214((uint64_t *)&unk_10069D050) + 48)];
  *(void *)uint64_t v32 = v22;
  *((void *)v32 + 1) = v24;
  v32[16] = v28;
  *((void *)v32 + 3) = v26;
  sub_1001839DC(v22, v24, v28);
  uint64_t v33 = *(void (**)(char *, uint64_t))(v12 + 8);
  swift_bridgeObjectRetain();
  v33(v35, v11);
  sub_1001839EC(v22, v24, v28);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v33)(v30, v11);
}

uint64_t sub_10018CE58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069CFD0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  swift_getKeyPath();
  sub_100190B54();
  TableColumn<>.init<>(_:value:)();
  LocalizedStringKey.init(stringLiteral:)();
  swift_getKeyPath();
  sub_10002F214(&qword_10069CFE8);
  TableColumn<>.init<>(_:value:)();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v3 + 32))(a1, v5, v2);
}

uint64_t sub_10018D000@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v4 - 8);
  uint64_t v22 = static VerticalAlignment.center.getter();
  sub_10018D1E8(a1, (uint64_t)v23);
  uint64_t v5 = v23[0];
  uint64_t v6 = v23[1];
  uint64_t v7 = v23[2];
  uint64_t v8 = v23[3];
  char v9 = v24;
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v10._countAndFlagsBits = 0x706F207865646E69;
  v10._object = (void *)0xEF6E6F6974617265;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v10);
  if (a1 == 1) {
    uint64_t v11 = 0;
  }
  else {
    uint64_t v11 = 115;
  }
  if (a1 == 1) {
    unint64_t v12 = 0xE000000000000000;
  }
  else {
    unint64_t v12 = 0xE100000000000000;
  }
  unint64_t v13 = v12;
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(*(Swift::String *)&v11);
  swift_bridgeObjectRelease();
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v14);
  LocalizedStringKey.init(stringInterpolation:)();
  uint64_t v15 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v17 = v16;
  LOBYTE(v23[0]) = v9;
  char v19 = v18 & 1;
  *(void *)a2 = v22;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  *(void *)(a2 + 24) = v5;
  *(void *)(a2 + 32) = v6;
  *(void *)(a2 + 40) = v7;
  *(void *)(a2 + 48) = v8;
  *(unsigned char *)(a2 + 56) = v9;
  *(void *)(a2 + 64) = v15;
  *(void *)(a2 + 72) = v16;
  *(unsigned char *)(a2 + 80) = v18 & 1;
  *(void *)(a2 + 88) = v20;
  sub_10019104C(v5, v6, v7, v8, v9);
  sub_1001839DC(v15, v17, v19);
  swift_bridgeObjectRetain();
  sub_1001839EC(v15, v17, v19);
  swift_bridgeObjectRelease();
  return sub_1001910DC(v5, v6, v7, v8, v23[0]);
}

double sub_10018D1E8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (a1 > 9)
  {
    if ((unint64_t)a1 > 0x63)
    {
      sub_100190AB4();
      *(void *)&long long v10 = BinaryInteger.description.getter();
      *((void *)&v10 + 1) = v8;
      sub_10017B588();
      Text.init<A>(_:)();
      sub_10002F214(&qword_10069D330);
      sub_10019117C();
      _ConditionalContent<>.init(storage:)();
      goto LABEL_7;
    }
    dispatch thunk of CustomStringConvertible.description.getter();
    v5._countAndFlagsBits = 0x656C637269632ELL;
    v5._object = (void *)0xE700000000000000;
    String.append(_:)(v5);
    Image.init(systemName:)();
    *(void *)&long long v10 = dispatch thunk of CustomStringConvertible.description.getter();
    *((void *)&v10 + 1) = v6;
    v7._countAndFlagsBits = 0x656C637269632ELL;
    v7._object = (void *)0xE700000000000000;
    String.append(_:)(v7);
    Image.init(systemName:)();
    swift_retain();
    swift_retain();
    sub_10002F214(&qword_10069D348);
    sub_10001DFB0(&qword_10069D340, &qword_10069D348);
    _ConditionalContent<>.init(storage:)();
    sub_10002F214(&qword_10069D330);
    sub_10019117C();
    _ConditionalContent<>.init(storage:)();
    swift_release();
  }
  else
  {
    *(void *)&long long v10 = dispatch thunk of CustomStringConvertible.description.getter();
    *((void *)&v10 + 1) = v3;
    v4._countAndFlagsBits = 0x656C637269632ELL;
    v4._object = (void *)0xE700000000000000;
    String.append(_:)(v4);
    Image.init(systemName:)();
    swift_retain();
    sub_10002F214(&qword_10069D348);
    sub_10001DFB0(&qword_10069D340, &qword_10069D348);
    _ConditionalContent<>.init(storage:)();
    sub_10002F214(&qword_10069D330);
    sub_10019117C();
    _ConditionalContent<>.init(storage:)();
  }
  swift_release();
LABEL_7:
  double result = *(double *)&v10;
  *(_OWORD *)a2 = v10;
  *(_OWORD *)(a2 + 16) = v11;
  *(unsigned char *)(a2 + 32) = v12;
  return result;
}

__n128 sub_10018D554@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = static VerticalAlignment.center.getter();
  sub_10018D000(v3, (uint64_t)&v13);
  char v5 = v14;
  char v6 = v17;
  char v7 = v19;
  uint64_t v8 = v20;
  __n128 result = v13;
  long long v10 = v15;
  long long v11 = v16;
  long long v12 = v18;
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(__n128 *)(a1 + 24) = result;
  *(unsigned char *)(a1 + 40) = v5;
  *(_OWORD *)(a1 + 48) = v10;
  *(_OWORD *)(a1 + 64) = v11;
  *(unsigned char *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 88) = v12;
  *(unsigned char *)(a1 + 104) = v7;
  *(void *)(a1 + 112) = v8;
  return result;
}

uint64_t sub_10018D5E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  *(void *)a1 = static HorizontalAlignment.leading.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v4 = sub_10002F214(&qword_10069CF80);
  return sub_10018C24C(v3, a1 + *(int *)(v4 + 44));
}

Swift::Int sub_10018D648(uint64_t (*a1)(long long *, long long *), uint64_t a2)
{
  uint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v5 = sub_100190BA8(v5);
  }
  Swift::Int result = sub_10018F6D0(a1, a2);
  uint64_t *v2 = v5;
  return result;
}

uint64_t sub_10018D6CC@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10018D748()
{
  return static Published.subscript.setter();
}

uint64_t sub_10018D7B8@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10018D838()
{
  return static Published.subscript.setter();
}

uint64_t sub_10018D8AC@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10018D930()
{
  return static Published.subscript.setter();
}

uint64_t sub_10018D9B0(char a1, int64_t a2, char a3, void *a4)
{
  return sub_10018F220(a1, a2, a3, a4, &qword_10069D1E8, (uint64_t (*)(void))type metadata accessor for TagEntity);
}

uint64_t sub_10018D9D0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10002F214(&qword_10069D1E0);
    long long v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    long long v10 = (char *)&_swiftEmptyArrayStorage;
  }
  __n128 v13 = v10 + 32;
  char v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10018DB3C(char a1, int64_t a2, char a3, void *a4)
{
  return sub_10018F220(a1, a2, a3, a4, &qword_10069D1D8, (uint64_t (*)(void))&type metadata accessor for TagID);
}

uint64_t sub_10018DB5C(char a1, int64_t a2, char a3, void *a4)
{
  return sub_10018F220(a1, a2, a3, a4, &qword_10069D1D0, (uint64_t (*)(void))type metadata accessor for FolderEntity);
}

uint64_t sub_10018DB7C(char a1, int64_t a2, char a3, void *a4)
{
  return sub_10018F220(a1, a2, a3, a4, &qword_10069D1C8, (uint64_t (*)(void))&type metadata accessor for FolderID);
}

uint64_t sub_10018DB9C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10002F214(&qword_10069CFF8);
    long long v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    long long v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  __n128 v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10018DD24(char a1, int64_t a2, char a3, void *a4)
{
  return sub_10018F490(a1, a2, a3, a4, (uint64_t *)&unk_10069D140, &qword_10069C550);
}

uint64_t sub_10018DD38(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10002F214((uint64_t *)&unk_1006A1940);
    long long v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    long long v10 = (char *)_swiftEmptyArrayStorage;
  }
  __n128 v13 = v10 + 32;
  char v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10018DEA8(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10002F214(&qword_10069D0C8);
    long long v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    id v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    long long v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_10002F214((uint64_t *)&unk_10069D0D0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10018E034(char a1, int64_t a2, char a3, void *a4)
{
  return sub_10018F220(a1, a2, a3, a4, &qword_10069D0C0, (uint64_t (*)(void))&type metadata accessor for URL);
}

uint64_t sub_10018E054(char a1, int64_t a2, char a3, void *a4)
{
  return sub_10018F220(a1, a2, a3, a4, &qword_10069D1B8, (uint64_t (*)(void))&type metadata accessor for NoteID);
}

uint64_t sub_10018E074(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10002F214(&qword_10069D0B0);
    long long v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    id v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    long long v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    sub_10002F214(&qword_10069D0B8);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10018E21C(char a1, int64_t a2, char a3, void *a4)
{
  return sub_10018F220(a1, a2, a3, a4, &qword_10069D100, _s14AudioRecordingV8FragmentVMa);
}

uint64_t sub_10018E23C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10002F214((uint64_t *)&unk_1006A4CC0);
    long long v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    long long v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10018E39C(char a1, int64_t a2, char a3, void *a4)
{
  return sub_10018F220(a1, a2, a3, a4, &qword_10069D1A0, (uint64_t (*)(void))&type metadata accessor for RealtimeCollaborationSelectionDocument.ParticipantSelection);
}

uint64_t sub_10018E3BC(char a1, int64_t a2, char a3, void *a4)
{
  return sub_10018F220(a1, a2, a3, a4, &qword_10069D1B0, (uint64_t (*)(void))&type metadata accessor for UUID);
}

uint64_t sub_10018E3DC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10002F214(&qword_10069D1A8);
    long long v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    long long v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10018E53C(char a1, int64_t a2, char a3, void *a4)
{
  return sub_10018F220(a1, a2, a3, a4, &qword_10069D200, _s6ObjectVMa);
}

uint64_t sub_10018E55C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10002F214(&qword_10069D168);
    long long v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    id v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    long long v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    sub_10002F214(&qword_10069D170);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10018E704(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10002F214(&qword_10069D178);
    long long v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    id v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    long long v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 4;
  unint64_t v14 = a4 + 4;
  size_t v15 = 4 * v8;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v10 + 4, a4 + 4, v15 * 8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    sub_10002F214((uint64_t *)&unk_10069D180);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10018E88C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10002F214((uint64_t *)&unk_1006A1370);
    long long v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    long long v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10018E9EC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10002F214((uint64_t *)&unk_10069E4E0);
    long long v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    long long v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10018EB70(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_10002F214(&qword_10069D060);
    long long v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    long long v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10018ECC0(char a1, int64_t a2, char a3, void *a4)
{
  return sub_10018F220(a1, a2, a3, a4, &qword_10069D150, (uint64_t (*)(void))&type metadata accessor for AttachmentID);
}

uint64_t sub_10018ECE0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10002F214(&qword_10069D0F0);
    long long v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    long long v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10018EE40(char a1, int64_t a2, char a3, void *a4)
{
  return sub_10018F220(a1, a2, a3, a4, &qword_10069D110, (uint64_t (*)(void))_s3TagVMa);
}

uint64_t sub_10018EE60(char a1, int64_t a2, char a3, void *a4)
{
  return sub_10018F220(a1, a2, a3, a4, &qword_10069D108, (uint64_t (*)(void))_s8ActivityVMa);
}

uint64_t sub_10018EE80(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10002F214((uint64_t *)&unk_10069D0A0);
    long long v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    long long v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10018EFE0(char a1, int64_t a2, char a3, void *a4)
{
  return sub_10018F220(a1, a2, a3, a4, &qword_10069D128, (uint64_t (*)(void))&type metadata accessor for TableID);
}

uint64_t sub_10018F000(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10002F214((uint64_t *)&unk_10069D070);
    long long v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    id v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    long long v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    sub_10002F214(&qword_10069B4D0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10018F18C(char a1, int64_t a2, char a3, void *a4)
{
  return sub_10018F490(a1, a2, a3, a4, &qword_10069D080, &qword_10069D088);
}

uint64_t sub_10018F1A0(char a1, int64_t a2, char a3, void *a4)
{
  return sub_10018F220(a1, a2, a3, a4, &qword_10069D118, (uint64_t (*)(void))type metadata accessor for AccountEntity);
}

uint64_t sub_10018F1C0(char a1, int64_t a2, char a3, void *a4)
{
  return sub_10018F220(a1, a2, a3, a4, &qword_10069D120, (uint64_t (*)(void))&type metadata accessor for AccountID);
}

uint64_t sub_10018F1E0(char a1, int64_t a2, char a3, void *a4)
{
  return sub_10018F220(a1, a2, a3, a4, (uint64_t *)&unk_10069D090, (uint64_t (*)(void))&type metadata accessor for SiriVocabulary.DynamicTerm);
}

uint64_t sub_10018F200(char a1, int64_t a2, char a3, void *a4)
{
  return sub_10018F220(a1, a2, a3, a4, &qword_10069D0F8, _s14AudioRecordingV17TranscriptSegmentVMa);
}

uint64_t sub_10018F220(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    long long v16 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10002F214(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  long long v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  uint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  char v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10018F468(char a1, int64_t a2, char a3, void *a4)
{
  return sub_10018F490(a1, a2, a3, a4, &qword_10069D158, &qword_10069D160);
}

uint64_t sub_10018F47C(char a1, int64_t a2, char a3, void *a4)
{
  return sub_10018F490(a1, a2, a3, a4, &qword_10069D130, &qword_10069D138);
}

uint64_t sub_10018F490(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    long long v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10002F214(a5);
  uint64_t v13 = *(void *)(sub_10002F214(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  long long v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(sub_10002F214(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  uint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  char v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

Swift::Int sub_10018F6D0(uint64_t (*a1)(long long *, long long *), uint64_t a2)
{
  uint64_t v128 = a2;
  Swift::Int v4 = v2[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v4);
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_140;
    }
    if (v4) {
      return sub_10018FF44(0, v4, 1, (uint64_t (*)(void *, long long *))a1);
    }
    return result;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 <= -2) {
    goto LABEL_149;
  }
  Swift::Int v115 = result;
  uint64_t v111 = v2;
  if (v4 < 2)
  {
    unint64_t v9 = _swiftEmptyArrayStorage;
    uint64_t v121 = (char *)&_swiftEmptyArrayStorage[4];
    if (v4 != 1)
    {
      unint64_t v36 = _swiftEmptyArrayStorage[2];
      uint64_t v12 = (char *)_swiftEmptyArrayStorage;
LABEL_104:
      uint64_t v116 = v9;
      if (v36 >= 2)
      {
        uint64_t v98 = *v111;
        do
        {
          unint64_t v99 = v36 - 2;
          if (v36 < 2) {
            goto LABEL_135;
          }
          if (!v98) {
            goto LABEL_148;
          }
          uint64_t v100 = v12;
          uint64_t v101 = v12 + 32;
          uint64_t v102 = *(void *)&v12[16 * v99 + 32];
          uint64_t v103 = *(void *)&v101[16 * v36 - 8];
          sub_100190090((char *)(v98 + 24 * v102), (char *)(v98 + 24 * *(void *)&v101[16 * v36 - 16]), v98 + 24 * v103, v121, a1);
          if (v3) {
            break;
          }
          if (v103 < v102) {
            goto LABEL_136;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v100 = sub_100190A20((uint64_t)v100);
          }
          if (v99 >= *((void *)v100 + 2)) {
            goto LABEL_137;
          }
          uint64_t v104 = v100;
          uint64_t v105 = v100 + 32;
          uint64_t v106 = &v100[16 * v99 + 32];
          *(void *)uint64_t v106 = v102;
          *((void *)v106 + 1) = v103;
          unint64_t v107 = *((void *)v100 + 2);
          if (v36 > v107) {
            goto LABEL_138;
          }
          uint64_t v12 = v104;
          memmove(&v105[16 * v36 - 16], &v105[16 * v36], 16 * (v107 - v36));
          *((void *)v12 + 2) = v107 - 1;
          unint64_t v36 = v107 - 1;
        }
        while (v107 > 2);
      }
LABEL_117:
      swift_bridgeObjectRelease();
      v116[2] = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v116 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v7 = v6 >> 1;
    uint64_t v8 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v8 + 16) = v7;
    uint64_t v116 = (void *)v8;
    uint64_t v121 = (char *)(v8 + 32);
  }
  Swift::Int v10 = 0;
  uint64_t v11 = *v2;
  uint64_t v112 = *v2 + 40;
  uint64_t v110 = *v2 + 16;
  uint64_t v12 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v120 = v4;
  uint64_t v122 = *v2;
  while (1)
  {
    Swift::Int v13 = v10;
    Swift::Int v14 = v10 + 1;
    if (v10 + 1 < v4)
    {
      unint64_t v15 = (long long *)(v11 + 24 * v14);
      uint64_t v16 = *((void *)v15 + 2);
      long long v126 = *v15;
      uint64_t v127 = v16;
      size_t v17 = (long long *)(v11 + 24 * v10);
      uint64_t v18 = *((void *)v17 + 2);
      long long v124 = *v17;
      uint64_t v125 = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      int v117 = a1(&v126, &v124);
      if (v3)
      {
LABEL_116:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_117;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      Swift::Int v14 = v13 + 2;
      if (v13 + 2 < v4)
      {
        Swift::Int v113 = v13;
        uint64_t v19 = v112 + 24 * v13;
        while (1)
        {
          Swift::Int v20 = v14;
          uint64_t v21 = *(void *)(v19 + 24);
          long long v126 = *(_OWORD *)(v19 + 8);
          uint64_t v127 = v21;
          uint64_t v22 = *(void *)v19;
          long long v124 = *(_OWORD *)(v19 - 16);
          uint64_t v125 = v22;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          int v23 = a1(&v126, &v124);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v117 ^ v23)) {
            break;
          }
          Swift::Int v14 = v20 + 1;
          v19 += 24;
          Swift::Int v4 = v120;
          if (v120 == v20 + 1)
          {
            Swift::Int v14 = v120;
            goto LABEL_22;
          }
        }
        Swift::Int v4 = v120;
        Swift::Int v14 = v20;
LABEL_22:
        Swift::Int v13 = v113;
      }
      uint64_t v11 = v122;
      if (v117)
      {
        if (v14 < v13) {
          goto LABEL_144;
        }
        if (v13 < v14)
        {
          uint64_t v24 = 24 * v14;
          uint64_t v25 = 24 * v13;
          Swift::Int v26 = v14;
          Swift::Int v27 = v13;
          do
          {
            if (v27 != --v26)
            {
              if (!v122) {
                goto LABEL_147;
              }
              uint64_t v28 = v122 + v25;
              uint64_t v29 = v122 + v24;
              uint64_t v30 = *(void *)(v122 + v25 + 16);
              long long v31 = *(_OWORD *)(v122 + v25);
              uint64_t v32 = *(void *)(v122 + v24 - 8);
              *(_OWORD *)uint64_t v28 = *(_OWORD *)(v122 + v24 - 24);
              *(void *)(v28 + 16) = v32;
              *(_OWORD *)(v29 - 24) = v31;
              *(void *)(v29 - 8) = v30;
            }
            ++v27;
            v24 -= 24;
            v25 += 24;
          }
          while (v27 < v26);
        }
      }
    }
    if (v14 >= v4) {
      goto LABEL_41;
    }
    if (__OFSUB__(v14, v13)) {
      goto LABEL_141;
    }
    if (v14 - v13 >= v115) {
      goto LABEL_41;
    }
    if (__OFADD__(v13, v115)) {
      goto LABEL_142;
    }
    Swift::Int v33 = v13 + v115 >= v4 ? v4 : v13 + v115;
    if (v33 < v13) {
      break;
    }
    if (v14 != v33)
    {
      uint64_t v108 = v12;
      Swift::Int v109 = v33;
      uint64_t v85 = (void *)(v110 + 24 * v14);
      Swift::Int v114 = v13;
      do
      {
        uint64_t v86 = (uint64_t *)(v11 + 24 * v14);
        uint64_t v87 = *v86;
        uint64_t v88 = v86[1];
        uint64_t v89 = v86[2];
        Swift::Int v90 = v13;
        uint64_t v119 = v85;
        while (1)
        {
          Swift::Int v91 = v14;
          *(void *)&long long v126 = v87;
          *((void *)&v126 + 1) = v88;
          uint64_t v127 = v89;
          uint64_t v92 = *(v85 - 3);
          uint64_t v93 = v85 - 5;
          long long v124 = *(_OWORD *)(v85 - 5);
          uint64_t v125 = v92;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v94 = a1(&v126, &v124);
          if (v3) {
            goto LABEL_116;
          }
          char v95 = v94;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v95 & 1) == 0) {
            break;
          }
          uint64_t v11 = v122;
          if (!v122) {
            goto LABEL_146;
          }
          uint64_t v89 = *v85;
          uint64_t v96 = *(v85 - 3);
          *(v85 - 3) = *v85;
          v85 -= 3;
          uint64_t v87 = v85[1];
          uint64_t v88 = v85[2];
          *(_OWORD *)(v93 + 3) = *(_OWORD *)v93;
          v93[5] = v96;
          *(v85 - 2) = v87;
          *(v85 - 1) = v88;
          ++v90;
          Swift::Int v14 = v91;
          if (v91 == v90) {
            goto LABEL_99;
          }
        }
        uint64_t v11 = v122;
        Swift::Int v14 = v91;
LABEL_99:
        ++v14;
        uint64_t v85 = v119 + 3;
        Swift::Int v13 = v114;
      }
      while (v14 != v109);
      Swift::Int v14 = v109;
      uint64_t v12 = v108;
      if (v109 < v114) {
        goto LABEL_139;
      }
      goto LABEL_42;
    }
LABEL_41:
    if (v14 < v13) {
      goto LABEL_139;
    }
LABEL_42:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = sub_1001904C8(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v35 = *((void *)v12 + 2);
    unint64_t v34 = *((void *)v12 + 3);
    unint64_t v36 = v35 + 1;
    uint64_t v11 = v122;
    if (v35 >= v34 >> 1)
    {
      uint64_t v97 = sub_1001904C8((char *)(v34 > 1), v35 + 1, 1, v12);
      uint64_t v11 = v122;
      uint64_t v12 = v97;
    }
    *((void *)v12 + 2) = v36;
    uint64_t v37 = v12 + 32;
    uint64_t v38 = &v12[16 * v35 + 32];
    *(void *)uint64_t v38 = v13;
    *((void *)v38 + 1) = v14;
    Swift::Int v118 = v14;
    if (v35)
    {
      while (1)
      {
        unint64_t v39 = v36 - 1;
        if (v36 >= 4)
        {
          uint64_t v44 = &v37[16 * v36];
          uint64_t v45 = *((void *)v44 - 8);
          uint64_t v46 = *((void *)v44 - 7);
          BOOL v50 = __OFSUB__(v46, v45);
          uint64_t v47 = v46 - v45;
          if (v50) {
            goto LABEL_124;
          }
          uint64_t v49 = *((void *)v44 - 6);
          uint64_t v48 = *((void *)v44 - 5);
          BOOL v50 = __OFSUB__(v48, v49);
          uint64_t v42 = v48 - v49;
          char v43 = v50;
          if (v50) {
            goto LABEL_125;
          }
          unint64_t v51 = v36 - 2;
          uint64_t v52 = &v37[16 * v36 - 32];
          uint64_t v54 = *(void *)v52;
          uint64_t v53 = *((void *)v52 + 1);
          BOOL v50 = __OFSUB__(v53, v54);
          uint64_t v55 = v53 - v54;
          if (v50) {
            goto LABEL_127;
          }
          BOOL v50 = __OFADD__(v42, v55);
          uint64_t v56 = v42 + v55;
          if (v50) {
            goto LABEL_130;
          }
          if (v56 >= v47)
          {
            uint64_t v74 = &v37[16 * v39];
            uint64_t v76 = *(void *)v74;
            uint64_t v75 = *((void *)v74 + 1);
            BOOL v50 = __OFSUB__(v75, v76);
            uint64_t v77 = v75 - v76;
            if (v50) {
              goto LABEL_134;
            }
            BOOL v67 = v42 < v77;
            goto LABEL_78;
          }
        }
        else
        {
          if (v36 != 3)
          {
            uint64_t v68 = *((void *)v12 + 4);
            uint64_t v69 = *((void *)v12 + 5);
            BOOL v50 = __OFSUB__(v69, v68);
            uint64_t v61 = v69 - v68;
            char v62 = v50;
            goto LABEL_72;
          }
          uint64_t v41 = *((void *)v12 + 4);
          uint64_t v40 = *((void *)v12 + 5);
          BOOL v50 = __OFSUB__(v40, v41);
          uint64_t v42 = v40 - v41;
          char v43 = v50;
        }
        if (v43) {
          goto LABEL_126;
        }
        unint64_t v51 = v36 - 2;
        uint64_t v57 = &v37[16 * v36 - 32];
        uint64_t v59 = *(void *)v57;
        uint64_t v58 = *((void *)v57 + 1);
        BOOL v60 = __OFSUB__(v58, v59);
        uint64_t v61 = v58 - v59;
        char v62 = v60;
        if (v60) {
          goto LABEL_129;
        }
        int v63 = &v37[16 * v39];
        uint64_t v65 = *(void *)v63;
        uint64_t v64 = *((void *)v63 + 1);
        BOOL v50 = __OFSUB__(v64, v65);
        uint64_t v66 = v64 - v65;
        if (v50) {
          goto LABEL_132;
        }
        if (__OFADD__(v61, v66)) {
          goto LABEL_133;
        }
        if (v61 + v66 >= v42)
        {
          BOOL v67 = v42 < v66;
LABEL_78:
          if (v67) {
            unint64_t v39 = v51;
          }
          goto LABEL_80;
        }
LABEL_72:
        if (v62) {
          goto LABEL_128;
        }
        uint64_t v70 = &v37[16 * v39];
        uint64_t v72 = *(void *)v70;
        uint64_t v71 = *((void *)v70 + 1);
        BOOL v50 = __OFSUB__(v71, v72);
        uint64_t v73 = v71 - v72;
        if (v50) {
          goto LABEL_131;
        }
        if (v73 < v61) {
          goto LABEL_89;
        }
LABEL_80:
        unint64_t v78 = v39 - 1;
        if (v39 - 1 >= v36)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        if (!v11) {
          goto LABEL_145;
        }
        uint64_t v79 = v12;
        uint64_t v80 = &v37[16 * v78];
        uint64_t v81 = *(void *)v80;
        uint64_t v82 = &v37[16 * v39];
        uint64_t v83 = *((void *)v82 + 1);
        sub_100190090((char *)(v11 + 24 * *(void *)v80), (char *)(v11 + 24 * *(void *)v82), v11 + 24 * v83, v121, a1);
        if (v3) {
          goto LABEL_117;
        }
        if (v83 < v81) {
          goto LABEL_121;
        }
        if (v39 > *((void *)v79 + 2)) {
          goto LABEL_122;
        }
        *(void *)uint64_t v80 = v81;
        *(void *)&v37[16 * v78 + 8] = v83;
        unint64_t v84 = *((void *)v79 + 2);
        if (v39 >= v84) {
          goto LABEL_123;
        }
        uint64_t v12 = v79;
        unint64_t v36 = v84 - 1;
        memmove(&v37[16 * v39], v82 + 16, 16 * (v84 - 1 - v39));
        *((void *)v79 + 2) = v84 - 1;
        uint64_t v11 = v122;
        if (v84 <= 2) {
          goto LABEL_89;
        }
      }
    }
    unint64_t v36 = 1;
LABEL_89:
    Swift::Int v10 = v118;
    Swift::Int v4 = v120;
    if (v118 >= v120)
    {
      unint64_t v9 = v116;
      goto LABEL_104;
    }
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10018FF44(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, long long *))
{
  uint64_t v25 = a4;
  if (a3 != a2)
  {
    uint64_t v6 = result;
    uint64_t v7 = *v4;
    uint64_t v8 = (void *)(*v4 + 24 * a3 + 16);
    uint64_t v18 = result;
LABEL_4:
    unint64_t v9 = (uint64_t *)(v7 + 24 * a3);
    uint64_t v10 = *v9;
    uint64_t v11 = v9[1];
    uint64_t v12 = v9[2];
    Swift::Int v20 = v8;
    uint64_t v21 = a3;
    while (1)
    {
      v24[0] = v10;
      v24[1] = v11;
      v24[2] = v12;
      uint64_t v13 = *(v8 - 3);
      Swift::Int v14 = v8 - 5;
      long long v22 = *(_OWORD *)(v8 - 5);
      uint64_t v23 = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v15 = v25(v24, &v22);
      swift_bridgeObjectRelease();
      Swift::Int result = swift_bridgeObjectRelease();
      if (v5) {
        break;
      }
      if ((v15 & 1) == 0)
      {
        uint64_t v17 = v21;
LABEL_11:
        a3 = v17 + 1;
        uint64_t v8 = v20 + 3;
        uint64_t v6 = v18;
        if (a3 != a2) {
          goto LABEL_4;
        }
        return result;
      }
      if (!v7)
      {
        __break(1u);
        return result;
      }
      uint64_t v12 = *v8;
      uint64_t v16 = *(v8 - 3);
      *(v8 - 3) = *v8;
      v8 -= 3;
      uint64_t v10 = v8[1];
      uint64_t v11 = v8[2];
      *(_OWORD *)(v14 + 3) = *(_OWORD *)v14;
      v14[5] = v16;
      *(v8 - 2) = v10;
      *(v8 - 1) = v11;
      ++v6;
      uint64_t v17 = v21;
      if (v21 == v6) {
        goto LABEL_11;
      }
    }
  }
  return result;
}

uint64_t sub_100190090(char *__src, char *a2, unint64_t a3, char *a4, uint64_t (*a5)(long long *, long long *))
{
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 24;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 24;
  uint64_t v49 = __src;
  uint64_t v48 = a4;
  if (v9 >= v11)
  {
    if (v10 <= -24) {
      goto LABEL_50;
    }
    if (a4 != a2 || &a2[24 * v11] <= a4) {
      memmove(a4, a2, 24 * v11);
    }
    long long v22 = &a4[24 * v11];
    uint64_t v47 = v22;
    uint64_t v49 = v6;
    if (v7 >= v6 || v10 < 24)
    {
LABEL_49:
      sub_1001905C4((void **)&v49, &v48, &v47);
      return 1;
    }
    unint64_t v23 = a3 - 24;
    uint64_t v24 = v6;
    unint64_t v39 = v7;
    while (1)
    {
      uint64_t v25 = v22;
      Swift::Int v26 = v22 - 24;
      uint64_t v27 = *((void *)v22 - 1);
      long long v45 = *(_OWORD *)(v22 - 24);
      uint64_t v46 = v27;
      long long v28 = *(_OWORD *)(v24 - 24);
      v24 -= 24;
      uint64_t v29 = *((void *)v24 + 2);
      long long v43 = v28;
      uint64_t v44 = v29;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v30 = a5(&v45, &v43);
      if (v5)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_49;
      }
      char v31 = v30;
      uint64_t v32 = (char *)(v23 + 24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v31)
      {
        long long v22 = v25;
        if (v32 != v6 || v23 >= (unint64_t)v6)
        {
          long long v33 = *(_OWORD *)v24;
          *(void *)(v23 + 16) = *((void *)v24 + 2);
          *(_OWORD *)unint64_t v23 = v33;
        }
        uint64_t v49 = v24;
      }
      else
      {
        uint64_t v47 = v26;
        if (v32 >= v25 && v23 < (unint64_t)v25)
        {
          unint64_t v34 = (unint64_t)v39;
          if (v32 != v25)
          {
            long long v35 = *(_OWORD *)v26;
            *(void *)(v23 + 16) = *((void *)v26 + 2);
            *(_OWORD *)unint64_t v23 = v35;
          }
          uint64_t v24 = v6;
          long long v22 = v26;
          uint64_t v5 = 0;
          goto LABEL_42;
        }
        long long v36 = *(_OWORD *)v26;
        *(void *)(v23 + 16) = *((void *)v26 + 2);
        *(_OWORD *)unint64_t v23 = v36;
        uint64_t v24 = v6;
        long long v22 = v26;
      }
      uint64_t v5 = 0;
      unint64_t v34 = (unint64_t)v39;
LABEL_42:
      if ((unint64_t)v24 > v34)
      {
        v23 -= 24;
        uint64_t v6 = v24;
        if (v22 > a4) {
          continue;
        }
      }
      goto LABEL_49;
    }
  }
  if (v8 > -24)
  {
    unint64_t v12 = (unint64_t)a4;
    if (a4 != __src || &__src[24 * v9] <= a4) {
      memmove(a4, __src, 24 * v9);
    }
    uint64_t v47 = &a4[24 * v9];
    if ((unint64_t)v6 < a3 && v8 >= 24)
    {
      uint64_t v38 = v48;
      uint64_t v13 = v49;
      while (1)
      {
        uint64_t v14 = *((void *)v6 + 2);
        long long v45 = *(_OWORD *)v6;
        uint64_t v46 = v14;
        uint64_t v15 = *(void *)(v12 + 16);
        long long v43 = *(_OWORD *)v12;
        uint64_t v44 = v15;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v16 = a5(&v45, &v43);
        if (v5)
        {
          uint64_t v48 = v38;
          uint64_t v49 = v13;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_49;
        }
        char v17 = v16;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v17)
        {
          uint64_t v18 = v6 + 24;
          if (v7 < v6)
          {
            uint64_t v19 = v6;
          }
          else if (v7 >= v18)
          {
            uint64_t v19 = v6;
          }
          else
          {
            uint64_t v19 = v6;
            if (v7 == v6) {
              goto LABEL_17;
            }
          }
        }
        else
        {
          uint64_t v19 = (void *)v12;
          uint64_t v18 = v6;
          BOOL v20 = v7 == (char *)v12;
          uint64_t v38 = (const void *)(v12 + 24);
          v12 += 24;
          if (v20) {
            goto LABEL_17;
          }
        }
        long long v21 = *(_OWORD *)v19;
        *((void *)v7 + 2) = v19[2];
        *(_OWORD *)uint64_t v7 = v21;
LABEL_17:
        uint64_t v13 = v7 + 24;
        if (v12 < (unint64_t)&a4[24 * v9])
        {
          uint64_t v6 = v18;
          v7 += 24;
          if ((unint64_t)v18 < a3) {
            continue;
          }
        }
        uint64_t v48 = v38;
        uint64_t v49 = v13;
        goto LABEL_49;
      }
    }
    goto LABEL_49;
  }
LABEL_50:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_1001904C8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10002F214(&qword_10069CFF0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1001905C4(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -24)
  {
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 24;
    if (result != v3 || result >= &v3[24 * v6])
    {
      return (char *)memmove(result, v3, 24 * v6);
    }
  }
  return result;
}

uint64_t sub_100190694(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = sub_10002F214(&qword_10069D190);
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_18;
  }
  if (v8 / v7 < 0)
  {
LABEL_19:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_1001907D8(void **a1, const void **a2, void *a3)
{
  unint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

uint64_t sub_100190894(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1001908DC(a1, a2, a3, _s6ObjectVMa);
}

uint64_t sub_1001908AC(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1001908DC(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for TranscriptViewModelSegment);
}

uint64_t sub_1001908C4(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1001908DC(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for Date);
}

uint64_t sub_1001908DC(unint64_t *a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  unint64_t v4 = *a1;
  unint64_t v5 = *a2;
  uint64_t v6 = *a3;
  uint64_t result = a4(0);
  uint64_t v8 = *(void *)(*(void *)(result - 8) + 72);
  if (!v8)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v9 = v6 - v5;
  if (v6 - v5 == 0x8000000000000000 && v8 == -1) {
    goto LABEL_18;
  }
  if (v9 / v8 < 0)
  {
LABEL_19:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  if (v4 < v5 || v4 >= v5 + v9 / v8 * v8)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v4 != v5)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_100190A20(uint64_t a1)
{
  return sub_1001904C8(0, *(void *)(a1 + 16), 0, (char *)a1);
}

BOOL sub_100190A34(void *a1, void *a2)
{
  return *a1 < *a2;
}

uint64_t sub_100190A48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002F214(&qword_10069CF88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100190AB4()
{
  unint64_t result = qword_1006A7790;
  if (!qword_1006A7790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A7790);
  }
  return result;
}

uint64_t sub_100190B08@<X0>(uint64_t *a1@<X8>)
{
  sub_100190AB4();
  uint64_t result = BinaryInteger.description.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_100190B54()
{
  unint64_t result = qword_10069CFE0;
  if (!qword_10069CFE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069CFE0);
  }
  return result;
}

uint64_t sub_100190BA8(uint64_t a1)
{
  return sub_10018DB9C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_100190BC0@<X0>(unsigned char *a1@<X8>)
{
  return sub_10018D6CC(a1);
}

uint64_t sub_100190BE8()
{
  return sub_10018D748();
}

uint64_t sub_100190C10@<X0>(unsigned char *a1@<X8>)
{
  return sub_10018D6CC(a1);
}

uint64_t sub_100190C38()
{
  return sub_10018D748();
}

unint64_t sub_100190C68()
{
  unint64_t result = qword_10069D028;
  if (!qword_10069D028)
  {
    sub_10001DFF4(&qword_10069D020);
    sub_100190D08();
    sub_10001DFB0(&qword_10069D038, (uint64_t *)&unk_10069D040);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069D028);
  }
  return result;
}

unint64_t sub_100190D08()
{
  unint64_t result = qword_10069D030;
  if (!qword_10069D030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069D030);
  }
  return result;
}

uint64_t sub_100190D5C(void *a1)
{
  return sub_10018F490(0, a1[2], 0, a1, &qword_10069D198, &qword_10069D190);
}

uint64_t sub_100190D94(uint64_t a1)
{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_100190DA8(void *a1)
{
  return sub_10018F220(0, a1[2], 0, a1, &qword_10069D200, _s6ObjectVMa);
}

uint64_t sub_100190DEC(void *a1)
{
  return sub_10018F220(0, a1[2], 0, a1, &qword_10069D068, (uint64_t (*)(void))&type metadata accessor for Date);
}

ValueMetadata *type metadata accessor for SearchIndexDebugSection.OperationQueueView()
{
  return &type metadata for SearchIndexDebugSection.OperationQueueView;
}

uint64_t sub_100190E40()
{
  return sub_10001DFB0(&qword_10069D1F0, &qword_10069D1F8);
}

uint64_t sub_100190E7C()
{
  return swift_getOpaqueTypeConformance2();
}

const char *sub_100190E98()
{
  return "operationQueue";
}

id sub_100190EA4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 operationQueue];
  *a2 = result;
  return result;
}

const char *sub_100190EE0()
{
  return "operationCount";
}

id sub_100190EEC@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 operationCount];
  *a2 = result;
  return result;
}

unint64_t sub_100190F20()
{
  unint64_t result = qword_10069D2D0;
  if (!qword_10069D2D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10069D2D0);
  }
  return result;
}

uint64_t sub_100190F60(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

const char *sub_100190FA8()
{
  return "isDisabled";
}

id sub_100190FB4@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 isDisabled];
  *a2 = (_BYTE)result;
  return result;
}

id sub_100190FE8(unsigned __int8 *a1, id *a2)
{
  return [*a2 setDisabled:*a1];
}

const char *sub_100190FFC()
{
  return "isObservingChanges";
}

id sub_100191008@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 isObservingChanges];
  *a2 = (_BYTE)result;
  return result;
}

const char *sub_10019103C()
{
  return "dataSources";
}

uint64_t sub_10019104C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  if (a5)
  {
    sub_1001839DC(a1, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  else
  {
    char v7 = a3 & 1;
    return sub_1001910A0(a1, a2, v7);
  }
}

uint64_t sub_1001910A0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3)
  {
    swift_retain();
    uint64_t v3 = vars8;
  }
  return swift_retain();
}

uint64_t sub_1001910DC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  if (a5)
  {
    sub_1001839EC(a1, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v7 = a3 & 1;
    return sub_100191130(a1, a2, v7);
  }
}

uint64_t sub_100191130(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result = swift_release();
  if (a3)
  {
    return swift_release();
  }
  return result;
}

unint64_t sub_10019117C()
{
  unint64_t result = qword_10069D338;
  if (!qword_10069D338)
  {
    sub_10001DFF4(&qword_10069D330);
    sub_10001DFB0(&qword_10069D340, &qword_10069D348);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069D338);
  }
  return result;
}

uint64_t sub_10019121C()
{
  return sub_10001DFB0(&qword_10069D350, &qword_10069D358);
}

uint64_t sub_10019125C()
{
  uint64_t result = _s11MobileNotes18VisibleTablesQueryVACycfC_0();
  static TableEntity.defaultQuery = result;
  *(void *)algn_1006CD948 = v1;
  return result;
}

uint64_t *TableEntity.defaultQuery.unsafeMutableAddressor()
{
  if (qword_10069AC68 != -1) {
    swift_once();
  }
  return &static TableEntity.defaultQuery;
}

uint64_t static TableEntity.defaultQuery.getter()
{
  if (qword_10069AC68 != -1) {
    swift_once();
  }
  uint64_t v0 = static TableEntity.defaultQuery;
  swift_retain();
  swift_retain();
  return v0;
}

uint64_t sub_10019133C()
{
  uint64_t v0 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Locale();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for LocalizedStringResource();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = type metadata accessor for TypeDisplayRepresentation();
  sub_100032974(v10, static TableEntity.typeDisplayRepresentation);
  sub_10003293C(v10, (uint64_t)static TableEntity.typeDisplayRepresentation);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  LocalizedStringResource.init(stringLiteral:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v2, 0, 1, v8);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t TableEntity.typeDisplayRepresentation.unsafeMutableAddressor()
{
  if (qword_10069AC70 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for TypeDisplayRepresentation();

  return sub_10003293C(v0, (uint64_t)static TableEntity.typeDisplayRepresentation);
}

uint64_t static TableEntity.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_10069AC70 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for TypeDisplayRepresentation();
  uint64_t v3 = sub_10003293C(v2, (uint64_t)static TableEntity.typeDisplayRepresentation);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t TableEntity.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for TableID();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t TableEntity.id.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for TableID();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*TagEntity.id.modify())()
{
  return ICCloudSyncingObject.MoveAction.Types.rawValue.getter;
}

uint64_t TableEntity.managedObjectURI.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TableEntity() + 20);
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for TableEntity()
{
  uint64_t result = qword_10069D4C8;
  if (!qword_10069D4C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t TableEntity.managedObjectURI.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TableEntity() + 20);
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*TableEntity.managedObjectURI.modify())()
{
  return ICCloudSyncingObject.MoveAction.Types.rawValue.getter;
}

uint64_t TableEntity.title.getter()
{
  type metadata accessor for TableEntity();
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t TableEntity.title.setter()
{
  return EntityProperty.wrappedValue.setter();
}

void (*TableEntity.title.modify(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for TableEntity();
  v2[4] = EntityProperty.wrappedValue.modify();
  return sub_10015B020;
}

uint64_t TableEntity.$title.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t TableEntity.subtitle.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for TableEntity() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TableEntity.subtitle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for TableEntity() + 28));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*TableEntity.subtitle.modify())()
{
  return ICCloudSyncingObject.MoveAction.Types.rawValue.getter;
}

uint64_t sub_100191BAC@<X0>(void *a1@<X8>)
{
  if (qword_10069AC68 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1006CD948;
  *a1 = static TableEntity.defaultQuery;
  a1[1] = v2;
  swift_retain();

  return swift_retain();
}

uint64_t sub_100191C24(uint64_t a1)
{
  uint64_t v2 = sub_100196284(&qword_1006A9020, (void (*)(uint64_t))type metadata accessor for TableEntity);

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

uint64_t TableEntity.displayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  v18[1] = a1;
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069D360);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = type metadata accessor for LocalizedStringResource();
  uint64_t v8 = *(void *)(v18[0] - 8);
  __chkstk_darwin(v18[0]);
  uint64_t v9 = type metadata accessor for String.LocalizationValue.StringInterpolation();
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  __chkstk_darwin(v10);
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v11);
  uint64_t v12 = type metadata accessor for TableEntity();
  EntityProperty.wrappedValue.getter();
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v19);
  swift_bridgeObjectRelease();
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v13);
  LocalizedStringResource.init(stringInterpolation:)();
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v14);
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(*(Swift::String *)(v1 + *(int *)(v12 + 28)));
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v15);
  LocalizedStringResource.init(stringInterpolation:)();
  (*(void (**)(char *, void, uint64_t, void))(v8 + 56))(v7, 0, 1, v18[0]);
  uint64_t v16 = type metadata accessor for DisplayRepresentation.Image();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v4, 1, 1, v16);
  return DisplayRepresentation.init(title:subtitle:image:)();
}

uint64_t sub_100191F84(uint64_t a1)
{
  uint64_t v2 = sub_100196284(&qword_10069D3F8, (void (*)(uint64_t))type metadata accessor for TableEntity);

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t static TableEntity.uriTypeName.getter()
{
  return static TableID.uriTypeName.getter();
}

void sub_100192004(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v58 = a2;
  uint64_t v3 = sub_10002F214(&qword_10069B310);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v56 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v57 = (uint64_t)&v56 - v6;
  uint64_t v7 = sub_10002F214(&qword_10069D370);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  Swift::String v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Locale();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v16 - 8);
  uint64_t v59 = type metadata accessor for TableEntity();
  uint64_t v17 = *(int *)(v59 + 24);
  sub_10002F214((uint64_t *)&unk_10069EE20);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  uint64_t v18 = a1;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v19 = EntityProperty<>.init(title:)();
  uint64_t v20 = v58;
  uint64_t v60 = v17;
  *(void *)(v58 + v17) = v19;
  self;
  uint64_t v21 = swift_dynamicCastObjCClass();
  if (!v21)
  {
    unint64_t v61 = 0;
    unint64_t v62 = 0xE000000000000000;
    _StringGuts.grow(_:)(48);
    swift_bridgeObjectRelease();
    unint64_t v61 = 0xD00000000000002ELL;
    unint64_t v62 = 0x800000010054DBE0;
    sub_10002F214(&qword_10069D528);
    v55._countAndFlagsBits = _typeName(_:qualified:)();
    String.append(_:)(v55);
    swift_bridgeObjectRelease();
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return;
  }
  long long v22 = (void *)v21;
  uint64_t v23 = enum case for ManagedEntityContextType.modern(_:);
  uint64_t v24 = type metadata accessor for ManagedEntityContextType();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v9, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v9, 0, 1, v24);
  id v26 = v18;
  id v27 = [v22 identifier];
  if (v27)
  {
    long long v28 = v27;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  uint64_t v29 = v20;
  TableID.init(contextType:managedIdentifier:)();

  id v30 = [v26 objectID];
  id v31 = [v30 URIRepresentation];

  uint64_t v32 = v59;
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  self;
  long long v33 = (void *)swift_dynamicCastObjCClass();
  if (!v33) {
    goto LABEL_8;
  }
  id v34 = [v33 note];
  long long v35 = v34;
  if (!v34)
  {
LABEL_9:
    unint64_t v38 = 0xE000000000000000;
    goto LABEL_10;
  }
  id v36 = [v34 title];

  if (!v36)
  {
LABEL_8:
    long long v35 = 0;
    goto LABEL_9;
  }
  long long v35 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v38 = v37;

LABEL_10:
  unint64_t v39 = (void *)(v29 + *(int *)(v32 + 28));
  *unint64_t v39 = v35;
  v39[1] = v38;
  id v40 = [v26 title];
  if (v40)
  {
    uint64_t v41 = v40;
    uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v44 = v43;
  }
  else
  {
    id v45 = [v26 fileURL];
    if (v45)
    {
      uint64_t v46 = v45;
      uint64_t v47 = (uint64_t)v56;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v48 = type metadata accessor for URL();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v47, 0, 1, v48);
    }
    else
    {
      uint64_t v48 = type metadata accessor for URL();
      uint64_t v47 = (uint64_t)v56;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v56, 1, 1, v48);
    }
    uint64_t v49 = v57;
    sub_100192ED0(v47, v57);
    type metadata accessor for URL();
    uint64_t v50 = *(void *)(v48 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v49, 1, v48) == 1)
    {
      sub_10002B754(v49, &qword_10069B310);
      id v51 = [v26 identifier];
      if (v51)
      {
        uint64_t v52 = v51;
        uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v44 = v53;
      }
      else
      {
        uint64_t v42 = 0;
        unint64_t v44 = 0xE000000000000000;
      }
    }
    else
    {
      uint64_t v42 = URL.lastPathComponent.getter();
      unint64_t v44 = v54;
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v49, v48);
    }
  }
  unint64_t v61 = v42;
  unint64_t v62 = v44;
  EntityProperty.wrappedValue.setter();
}

void TableEntity.init<A>(_:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v47 = a1;
  uint64_t v3 = sub_10002F214(&qword_10069B310);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  id v45 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v46 = (uint64_t)&v45 - v6;
  uint64_t v7 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Locale();
  __chkstk_darwin(v11 - 8);
  uint64_t v12 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for TableEntity();
  uint64_t v15 = *(int *)(v14 + 24);
  sub_10002F214((uint64_t *)&unk_10069EE20);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for LocalizedStringResource.BundleDescription.main(_:), v7);
  uint64_t v16 = v15;
  uint64_t v17 = a2;
  uint64_t v18 = v47;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  *(void *)(v17 + v16) = EntityProperty<>.init(title:)();
  static TableEntity.identifier<A>(for:)(v18);
  id v19 = [v18 objectID];
  id v20 = [v19 URIRepresentation];

  static URL._unconditionallyBridgeFromObjectiveC(_:)();
  self;
  uint64_t v21 = (void *)swift_dynamicCastObjCClass();
  if (!v21)
  {
LABEL_5:
    uint64_t v23 = 0;
    goto LABEL_6;
  }
  id v22 = [v21 note];
  uint64_t v23 = v22;
  if (v22)
  {
    id v24 = [v22 title];

    if (v24)
    {
      uint64_t v23 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v26 = v25;

      goto LABEL_7;
    }
    goto LABEL_5;
  }
LABEL_6:
  unint64_t v26 = 0xE000000000000000;
LABEL_7:
  id v27 = (void *)(v17 + *(int *)(v14 + 28));
  *id v27 = v23;
  v27[1] = v26;
  id v28 = [v18 title];
  if (v28)
  {
    uint64_t v29 = v28;
    uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v32 = v31;
  }
  else
  {
    id v33 = [v18 fileURL];
    if (v33)
    {
      id v34 = v33;
      uint64_t v35 = (uint64_t)v45;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v36 = type metadata accessor for URL();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v35, 0, 1, v36);
    }
    else
    {
      uint64_t v36 = type metadata accessor for URL();
      uint64_t v35 = (uint64_t)v45;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v45, 1, 1, v36);
    }
    uint64_t v37 = v46;
    sub_100192ED0(v35, v46);
    type metadata accessor for URL();
    uint64_t v38 = *(void *)(v36 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v37, 1, v36) == 1)
    {
      sub_10002B754(v37, &qword_10069B310);
      id v39 = [v18 identifier];
      if (v39)
      {
        id v40 = v39;
        uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v32 = v41;
      }
      else
      {
        uint64_t v30 = 0;
        unint64_t v32 = 0xE000000000000000;
      }
    }
    else
    {
      uint64_t v42 = URL.lastPathComponent.getter();
      uint64_t v43 = v37;
      uint64_t v30 = v42;
      unint64_t v32 = v44;
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v43, v36);
    }
  }
  uint64_t v48 = v30;
  unint64_t v49 = v32;
  EntityProperty.wrappedValue.setter();
}

void static TableEntity.identifier<A>(for:)(void *a1)
{
  uint64_t v2 = sub_10002F214(&qword_10069D370);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  self;
  uint64_t v5 = swift_dynamicCastObjCClass();
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    uint64_t v7 = enum case for ManagedEntityContextType.modern(_:);
    uint64_t v8 = type metadata accessor for ManagedEntityContextType();
    uint64_t v9 = *(void *)(v8 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 104))(v4, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v4, 0, 1, v8);
    id v10 = a1;
    id v11 = [v6 identifier];
    if (v11)
    {
      uint64_t v12 = v11;
      static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    TableID.init(contextType:managedIdentifier:)();
  }
  else
  {
    unint64_t v14 = 0;
    unint64_t v15 = 0xE000000000000000;
    _StringGuts.grow(_:)(48);
    swift_bridgeObjectRelease();
    unint64_t v14 = 0xD00000000000002ELL;
    unint64_t v15 = 0x800000010054DBE0;
    swift_getObjectType();
    v13._countAndFlagsBits = _typeName(_:qualified:)();
    String.append(_:)(v13);
    swift_bridgeObjectRelease();
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
}

uint64_t sub_100192ED0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002F214(&qword_10069B310);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t TableEntity.init(for:in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v3[5] = type metadata accessor for TableEntity();
  v3[6] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for LocalizedStringResource.BundleDescription();
  v3[7] = v4;
  unsigned char v3[8] = *(void *)(v4 - 8);
  v3[9] = swift_task_alloc();
  type metadata accessor for Locale();
  v3[10] = swift_task_alloc();
  type metadata accessor for String.LocalizationValue();
  v3[11] = swift_task_alloc();
  type metadata accessor for LocalizedStringResource();
  v3[12] = swift_task_alloc();
  return _swift_task_switch(sub_1001930B0, 0, 0);
}

uint64_t sub_1001930B0()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[2];
  unint64_t v14 = (void *)v0[3];
  unint64_t v15 = (void *)v0[4];
  uint64_t v5 = *(int *)(v0[5] + 24);
  sub_10002F214((uint64_t *)&unk_10069EE20);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v1, enum case for LocalizedStringResource.BundleDescription.main(_:), v2);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v6 = EntityProperty<>.init(title:)();
  v0[13] = v6;
  *(void *)(v4 + v5) = v6;
  id v7 = v14;
  id v8 = v15;
  uint64_t v9 = (void *)swift_task_alloc();
  v0[14] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_10019322C;
  uint64_t v10 = v0[6];
  uint64_t v11 = v0[3];
  uint64_t v12 = v0[4];
  return TableEntity.init(for:in:includeContents:)(v10, v11, v12);
}

uint64_t sub_10019322C()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100193410;
  }
  else {
    uint64_t v2 = sub_100193340;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100193340()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void **)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 16);

  swift_release();
  sub_100193AC4(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100193410()
{
  uint64_t v1 = *(void **)(v0 + 24);

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t TableEntity.init(for:in:includeContents:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v3[5] = type metadata accessor for TableEntity();
  v3[6] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for LocalizedStringResource.BundleDescription();
  v3[7] = v4;
  unsigned char v3[8] = *(void *)(v4 - 8);
  v3[9] = swift_task_alloc();
  type metadata accessor for Locale();
  v3[10] = swift_task_alloc();
  type metadata accessor for String.LocalizationValue();
  v3[11] = swift_task_alloc();
  type metadata accessor for LocalizedStringResource();
  v3[12] = swift_task_alloc();
  return _swift_task_switch(sub_100193648, 0, 0);
}

uint64_t sub_100193648()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v4 = *(void **)(v0 + 32);
  uint64_t v13 = *(void *)(v0 + 16);
  unint64_t v14 = *(void **)(v0 + 24);
  uint64_t v5 = *(int *)(*(void *)(v0 + 40) + 24);
  *(_DWORD *)(v0 + 128) = v5;
  sub_10002F214((uint64_t *)&unk_10069EE20);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v1, enum case for LocalizedStringResource.BundleDescription.main(_:), v2);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  *(void *)(v13 + v5) = EntityProperty<>.init(title:)();
  uint64_t v6 = swift_allocObject();
  *(void *)(v0 + 104) = v6;
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v14;
  id v7 = v4;
  id v8 = v14;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_100193800;
  uint64_t v11 = *(void *)(v0 + 40);
  uint64_t v10 = *(void *)(v0 + 48);
  return NSManagedObjectContext.perform<A>(_:)(v10, sub_10016EFB0, v6, v11);
}

uint64_t sub_100193800()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1001939EC;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_10019391C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10019391C()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void **)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 16);

  swift_release();
  sub_100193AC4(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1001939EC()
{
  uint64_t v1 = *(void **)(v0 + 24);

  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100193AC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TableEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_100193B28(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v9[0] = 0;
  id v4 = [a1 existingObjectWithID:a2 error:v9];
  id v5 = v9[0];
  if (v4)
  {
    v9[1] = &OBJC_PROTOCOL___ICTableObject;
    uint64_t v6 = (void *)swift_dynamicCastObjCProtocolUnconditional();
    id v7 = v5;
    sub_100192004(v6, a3);
  }
  else
  {
    id v8 = v9[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
}

uint64_t sub_100193C10()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t TableEntity.init(for:in:includeContents:noteContext:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  *(unsigned char *)(v5 + 136) = a4;
  *(void *)(v5 + 32) = a3;
  *(void *)(v5 + 40) = a5;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  *(void *)(v5 + 48) = type metadata accessor for TableEntity();
  *(void *)(v5 + 56) = swift_task_alloc();
  uint64_t v6 = type metadata accessor for LocalizedStringResource.BundleDescription();
  *(void *)(v5 + 64) = v6;
  *(void *)(v5 + 72) = *(void *)(v6 - 8);
  *(void *)(v5 + 80) = swift_task_alloc();
  type metadata accessor for Locale();
  *(void *)(v5 + 88) = swift_task_alloc();
  type metadata accessor for String.LocalizationValue();
  *(void *)(v5 + 96) = swift_task_alloc();
  type metadata accessor for LocalizedStringResource();
  *(void *)(v5 + 104) = swift_task_alloc();
  return _swift_task_switch(sub_100193DCC, 0, 0);
}

uint64_t sub_100193DCC()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[2];
  unint64_t v14 = (void *)v0[3];
  uint64_t v15 = (void *)v0[4];
  uint64_t v5 = *(int *)(v0[6] + 24);
  sub_10002F214((uint64_t *)&unk_10069EE20);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v1, enum case for LocalizedStringResource.BundleDescription.main(_:), v2);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v6 = EntityProperty<>.init(title:)();
  v0[14] = v6;
  *(void *)(v4 + v5) = v6;
  id v7 = v14;
  id v8 = v15;
  uint64_t v9 = (void *)swift_task_alloc();
  v0[15] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_100193F4C;
  uint64_t v10 = v0[7];
  uint64_t v11 = v0[3];
  uint64_t v12 = v0[4];
  return TableEntity.init(for:in:includeContents:)(v10, v11, v12);
}

uint64_t sub_100193F4C()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10019413C;
  }
  else {
    uint64_t v2 = sub_100194060;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100194060()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void **)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void **)(v0 + 24);

  swift_release();
  sub_100193AC4(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_10019413C()
{
  uint64_t v1 = *(void **)(v0 + 40);
  uint64_t v2 = *(void **)(v0 + 24);

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t static TableEntity.managedObjectID(for:in:)(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_10069D398 + dword_10069D398);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1001942B8;
  return v7(a1, a2);
}

uint64_t sub_1001942B8(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

void sub_1001943B4(void *a1@<X1>, void *a2@<X8>)
{
  TableID.managedIdentifier.getter();
  id v4 = a1;
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v6 = [self attachmentWithIdentifier:v5 context:v4];

  if (v6)
  {
    id v7 = [v6 objectID];
  }
  else
  {
    id v7 = 0;
  }
  *a2 = v7;
}

uint64_t sub_100194484@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = type metadata accessor for URL();
  id v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_1001944F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_10017B61C;
  return TableEntity.init(for:in:)(a1, a2, a3);
}

uint64_t sub_1001945A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_10017B61C;
  return TableEntity.init(for:in:includeContents:)(a1, a2, a3);
}

uint64_t sub_100194658(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_100161724;
  return TableEntity.init(for:in:includeContents:noteContext:)(a1, a2, a3, a4, a5);
}

uint64_t sub_100194720(uint64_t a1, uint64_t a2)
{
  id v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_10069D398 + dword_10069D398);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1001947D4;
  return v7(a1, a2);
}

uint64_t sub_1001947D4(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t sub_1001948D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10002F214(&qword_10069D370);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v19 - v10;
  sub_10019621C(a1, (uint64_t)&v19 - v10);
  uint64_t v12 = type metadata accessor for ManagedEntityContextType();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1
    || (sub_10019621C((uint64_t)v11, (uint64_t)v9),
        int v14 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v9, v12),
        v14 == enum case for ManagedEntityContextType.modern(_:)))
  {
    sub_10002B754((uint64_t)v11, &qword_10069D370);
    (*(void (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
    uint64_t v15 = dispatch thunk of AnyKeyPath._kvcKeyPathString.getter();
    uint64_t v17 = v16;
    int v14 = swift_release();
    if (v17) {
      return v15;
    }
    __break(1u);
  }
  if (v14 != enum case for ManagedEntityContextType.html(_:)) {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v12);
  }
  sub_10002B754((uint64_t)v11, &qword_10069D370);
  return 0;
}

uint64_t sub_100194AC4@<X0>(char *a1@<X8>)
{
  sub_10002F214(&qword_10069D508);
  EntityQuerySort.by.getter();
  EntityQuerySort.order.getter();
  type metadata accessor for TableEntity();
  sub_100196284(&qword_1006A9020, (void (*)(uint64_t))type metadata accessor for TableEntity);
  char v2 = static EntityQuerySort.Ordering.== infix(_:_:)();
  swift_getKeyPath();
  sub_10002F214((uint64_t *)&unk_10069D510);
  char v3 = dispatch thunk of static Equatable.== infix(_:_:)();
  swift_release();
  uint64_t result = swift_release();
  char v5 = (v2 & 1) == 0;
  if ((v3 & 1) == 0) {
    char v5 = 2;
  }
  *a1 = v5;
  return result;
}

uint64_t sub_100194BE4(uint64_t a1, uint64_t a2)
{
  v2[4] = a1;
  v2[5] = a2;
  uint64_t v3 = type metadata accessor for Logger();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for TableID();
  v2[9] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[10] = v5;
  v2[11] = *(void *)(v5 + 64);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  sub_10002F214(&qword_10069D370);
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  return _swift_task_switch(sub_100194D58, 0, 0);
}

uint64_t sub_100194D58()
{
  uint64_t v39 = v0;
  uint64_t v1 = *(void *)(v0 + 120);
  TableID.contextType.getter();
  uint64_t v2 = type metadata accessor for ManagedEntityContextType();
  uint64_t v3 = *(void *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) != 1)
  {
    uint64_t v4 = *(void *)(v0 + 112);
    sub_10019621C(*(void *)(v0 + 120), v4);
    int v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v4, v2);
    if (v5 == enum case for ManagedEntityContextType.modern(_:))
    {
      uint64_t v6 = *(void *)(v0 + 104);
      uint64_t v8 = *(void *)(v0 + 80);
      uint64_t v7 = *(void *)(v0 + 88);
      uint64_t v9 = *(void *)(v0 + 72);
      uint64_t v10 = *(void *)(v0 + 32);
      id v11 = [*(id *)(v0 + 40) modernManagedObjectContext];
      *(void *)(v0 + 128) = v11;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v6, v10, v9);
      unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v13 = swift_allocObject();
      *(void *)(v0 + 136) = v13;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v8 + 32))(v13 + v12, v6, v9);
      *(void *)(v13 + ((v7 + v12 + 7) & 0xFFFFFFFFFFFFFFF8)) = v11;
      v11;
      int v14 = (void *)swift_task_alloc();
      *(void *)(v0 + 144) = v14;
      uint64_t v15 = sub_10002F214(&qword_10069D520);
      void *v14 = v0;
      v14[1] = sub_100195280;
      return NSManagedObjectContext.perform<A>(_:)(v0 + 24, sub_100196370, v13, v15);
    }
    if (v5 == enum case for ManagedEntityContextType.html(_:))
    {
      sub_10002B754(*(void *)(v0 + 120), &qword_10069D370);
LABEL_13:
      id v18 = 0;
      goto LABEL_14;
    }
    (*(void (**)(void, uint64_t))(v3 + 8))(*(void *)(v0 + 112), v2);
  }
  uint64_t v16 = *(void **)(v0 + 40);
  sub_10002B754(*(void *)(v0 + 120), &qword_10069D370);
  TableID.managedIdentifier.getter();
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v18 = [v16 managedObjectIDForURIString:v17];

  if (!v18)
  {
    uint64_t v19 = *(void *)(v0 + 96);
    uint64_t v20 = *(void *)(v0 + 72);
    uint64_t v21 = *(void *)(v0 + 80);
    uint64_t v22 = *(void *)(v0 + 32);
    static Logger.link.getter();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v19, v22, v20);
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.error.getter();
    BOOL v25 = os_log_type_enabled(v23, v24);
    uint64_t v26 = *(void *)(v0 + 96);
    uint64_t v28 = *(void *)(v0 + 72);
    uint64_t v27 = *(void *)(v0 + 80);
    uint64_t v30 = *(void *)(v0 + 56);
    uint64_t v29 = *(void *)(v0 + 64);
    uint64_t v31 = *(void *)(v0 + 48);
    if (v25)
    {
      uint64_t v37 = *(void *)(v0 + 64);
      unint64_t v32 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      *(_DWORD *)unint64_t v32 = 136315138;
      sub_100196284(&qword_10069CDF0, (void (*)(uint64_t))&type metadata accessor for TableID);
      uint64_t v33 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 16) = sub_10045DA1C(v33, v34, &v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "TableEntity: Unable to resolve managed object ID for entity ID: %s", v32, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v37, v31);
    }
    else
    {
      (*(void (**)(void, void))(v27 + 8))(*(void *)(v0 + 96), *(void *)(v0 + 72));

      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
    }
    goto LABEL_13;
  }
LABEL_14:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v35 = *(uint64_t (**)(id))(v0 + 8);
  return v35(v18);
}

uint64_t sub_100195280()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100195398, 0, 0);
}

uint64_t sub_100195398()
{
  uint64_t v1 = *(void *)(v0 + 120);

  uint64_t v2 = *(void *)(v0 + 24);
  sub_10002B754(v1, &qword_10069D370);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v2);
}

uint64_t sub_100195450()
{
  return sub_100196284(&qword_10069D3A0, (void (*)(uint64_t))type metadata accessor for TableEntity);
}

uint64_t sub_100195498()
{
  return sub_100196284(&qword_10069D3A8, (void (*)(uint64_t))type metadata accessor for TableEntity);
}

uint64_t sub_1001954E0()
{
  return sub_100196284((unint64_t *)&unk_10069D3B0, (void (*)(uint64_t))type metadata accessor for TableEntity);
}

unint64_t sub_10019552C()
{
  unint64_t result = qword_1006A6550[0];
  if (!qword_1006A6550[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1006A6550);
  }
  return result;
}

uint64_t sub_100195580()
{
  return sub_100196284(&qword_10069D3C0, (void (*)(uint64_t))&type metadata accessor for TableID);
}

uint64_t sub_1001955C8()
{
  return sub_100196284(&qword_10069D3C8, (void (*)(uint64_t))type metadata accessor for TableEntity);
}

uint64_t sub_100195610()
{
  return sub_100196284(&qword_10069D3D0, (void (*)(uint64_t))type metadata accessor for TableEntity);
}

uint64_t sub_100195658()
{
  return sub_100196284(&qword_10069D3D8, (void (*)(uint64_t))type metadata accessor for TableEntity);
}

uint64_t sub_1001956A0()
{
  return sub_100196284(&qword_10069D3E0, (void (*)(uint64_t))&type metadata accessor for TableID);
}

unint64_t sub_1001956EC()
{
  unint64_t result = qword_10069D3E8;
  if (!qword_10069D3E8)
  {
    sub_10001DFF4(&qword_10069D3F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069D3E8);
  }
  return result;
}

uint64_t sub_100195748()
{
  return sub_100196284(&qword_10069D3F8, (void (*)(uint64_t))type metadata accessor for TableEntity);
}

uint64_t sub_100195790()
{
  return sub_100196284(&qword_10069D400, (void (*)(uint64_t))type metadata accessor for TableEntity);
}

uint64_t sub_1001957D8(uint64_t a1)
{
  uint64_t result = sub_100196284(&qword_1006A9020, (void (*)(uint64_t))type metadata accessor for TableEntity);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for TableEntity(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for TableID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[7];
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    uint64_t v13 = (uint64_t *)((char *)a1 + v12);
    int v14 = (uint64_t *)((char *)a2 + v12);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for TableEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TableID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TableEntity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for TableID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TableEntity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for TableID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_retain();
  swift_release();
  uint64_t v11 = a3[7];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for TableEntity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for TableID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  return a1;
}

uint64_t assignWithTake for TableEntity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for TableID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_release();
  uint64_t v11 = a3[7];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TableEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100195DFC);
}

uint64_t sub_100195DFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TableID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for TableEntity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100195F24);
}

uint64_t sub_100195F24(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for TableID();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for URL();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_100196034()
{
  uint64_t result = type metadata accessor for TableID();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for URL();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TableEntity.SortType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001961E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TableEntity.SortType()
{
  return &type metadata for TableEntity.SortType;
}

uint64_t sub_10019621C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002F214(&qword_10069D370);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100196284(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001962CC()
{
  uint64_t v1 = type metadata accessor for TableID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6 + 8, v5);
}

void sub_100196370(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for TableID() - 8);
  sub_1001943B4(*(void **)(v1+ ((*(void *)(v3 + 64)+ ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ 7) & 0xFFFFFFFFFFFFFFF8)), a1);
}

id sub_100196490@<X0>(void *a1@<X8>)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_scrollState);
  char v5 = *(unsigned char *)(v1 + OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_startEditing);
  char v6 = *(unsigned char *)(v1 + OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_showInkPicker);
  char v7 = *(unsigned char *)(v1 + OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_dismissOverlayContent);
  char v8 = *(unsigned char *)(v1 + OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_showLatestUpdatesIfAvailable);
  char v9 = *(unsigned char *)(v1 + OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_animated);
  char v10 = *(unsigned char *)(v1 + OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_ensurePresented);
  uint64_t v11 = objc_allocWithZone(ObjectType);
  *(void *)&v11[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_scrollState] = v4;
  v11[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_startEditing] = v5;
  v11[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_showInkPicker] = v6;
  v11[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_dismissOverlayContent] = v7;
  v11[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_showLatestUpdatesIfAvailable] = v8;
  v11[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_animated] = v9;
  v11[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_ensurePresented] = v10;
  v14.receiver = v11;
  v14.super_class = ObjectType;
  id v12 = v4;
  id result = [super init];
  a1[3] = ObjectType;
  *a1 = result;
  return result;
}

uint64_t sub_100196704(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();

  return swift_unknownObjectRelease();
}

id sub_100196A1C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ICSelectionStateModel.ContainerSelectionCompletionBlocks();
  return [super dealloc];
}

void sub_100196B7C(void *a1@<X8>)
{
  uint64_t v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  char v23 = *(unsigned char *)(v2 + OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_forceApply);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  char v21 = *(unsigned char *)(v2 + OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_ensurePresented);
  char v22 = *(unsigned char *)(v2 + OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_usingRootViewController);
  char v6 = *(void **)(v2 + OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_ensureSelectedNote);
  char v7 = *(unsigned char *)(v2 + OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_deferUntilDataLoaded);
  char v8 = *(void **)(v2 + OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_dismissOverlayContent);
  char v9 = *(void **)(v2 + OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_keepEditorShowing);
  char v10 = *(unsigned char *)(v2 + OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_animated);
  uint64_t v11 = *(void **)(v2 + OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_completionBlocks);
  if (v11)
  {
    id v12 = v9;
    id v13 = v6;
    id v14 = v8;
    [v11 copy];
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    type metadata accessor for ICSelectionStateModel.ContainerSelectionCompletionBlocks();
    if (swift_dynamicCast()) {
      uint64_t v15 = v24;
    }
    else {
      uint64_t v15 = 0;
    }
  }
  else
  {
    id v16 = v9;
    id v17 = v6;
    id v18 = v8;
    uint64_t v15 = 0;
  }
  uint64_t v19 = objc_allocWithZone(ObjectType);
  swift_unknownObjectWeakInit();
  v19[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_forceApply] = v23;
  swift_unknownObjectWeakAssign();
  v19[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_usingRootViewController] = v22;
  v19[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_ensurePresented] = v21;
  *(void *)&v19[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_ensureSelectedNote] = v6;
  v19[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_deferUntilDataLoaded] = v7;
  *(void *)&v19[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_dismissOverlayContent] = v8;
  *(void *)&v19[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_keepEditorShowing] = v9;
  v19[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_animated] = v10;
  *(void *)&v19[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_completionBlocks] = v15;
  v25.receiver = v19;
  v25.super_class = ObjectType;
  id v20 = [super init];

  a1[3] = ObjectType;
  *a1 = v20;
}

uint64_t sub_100196DB4(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void *__return_ptr))
{
  id v5 = a1;
  a4(v8);

  sub_10015E154(v8, v8[3]);
  uint64_t v6 = _bridgeAnythingToObjectiveC<A>(_:)();
  sub_100018FE8((uint64_t)v8);
  return v6;
}

BOOL sub_100196E34(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  if (a3)
  {
    id v6 = a1;
    swift_unknownObjectRetain();
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v10, 0, sizeof(v10));
    id v7 = a1;
  }
  BOOL v8 = sub_1001A2EC8((uint64_t)v10, a4);

  sub_10002B754((uint64_t)v10, &qword_10069B4D0);
  return v8;
}

uint64_t sub_100196F70(void *a1, int a2)
{
  int v18 = a2;
  uint64_t v3 = sub_10002F214(&qword_10069D990);
  uint64_t v16 = *(void *)(v3 - 8);
  uint64_t v17 = v3;
  __chkstk_darwin(v3);
  id v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10002F214(&qword_10069D998);
  uint64_t v6 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  BOOL v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10002F214(&qword_10069D9A0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10015E154(a1, a1[3]);
  sub_1001A34AC();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  id v13 = (uint64_t (**)(char *, uint64_t))(v10 + 8);
  if (v18)
  {
    char v20 = 1;
    sub_1001A3500();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    char v19 = 0;
    sub_1001A3554();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v15);
  }
  return (*v13)(v12, v9);
}

uint64_t sub_100197220()
{
  if (*v0) {
    return 1802398060;
  }
  else {
    return 0x6669636570736E75;
  }
}

uint64_t sub_10019725C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1001A2F60(a1, a2);
  *a3 = result;
  return result;
}

void sub_100197284(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_100197290(uint64_t a1)
{
  unint64_t v2 = sub_1001A34AC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001972CC(uint64_t a1)
{
  unint64_t v2 = sub_1001A34AC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100197308()
{
  return 0;
}

uint64_t sub_100197314@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

void sub_100197344(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_100197350(uint64_t a1)
{
  unint64_t v2 = sub_1001A3500();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10019738C(uint64_t a1)
{
  unint64_t v2 = sub_1001A3500();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001973C8(uint64_t a1)
{
  unint64_t v2 = sub_1001A3554();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100197404(uint64_t a1)
{
  unint64_t v2 = sub_1001A3554();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100197440@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1001A305C(a1);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_100197470(void *a1)
{
  return sub_100196F70(a1, *v1);
}

uint64_t sub_1001977A4@<X0>(char *a1@<X8>)
{
  uint64_t v3 = sub_10002F214(&qword_10069D7F8);
  __chkstk_darwin(v3 - 8);
  id v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = v1 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection;
  swift_beginAccess();
  sub_10002F034(v10, (uint64_t)v5, &qword_10069D7F8);
  uint64_t v11 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
  uint64_t v12 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v5, 1, v11) != 1)
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if ((EnumCaseMultiPayload - 2) >= 4)
    {
      if (EnumCaseMultiPayload)
      {
        uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
        v15(v9, v5, v6);
      }
      else
      {
        uint64_t v14 = sub_10002F214(&qword_10069D738);
        uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
        v15(v9, &v5[*(int *)(v14 + 48)], v6);
        (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
      }
      v15(a1, v9, v6);
      uint64_t v12 = 0;
    }
    else
    {
      sub_10002EA18((uint64_t)v5, type metadata accessor for ICSelectionStateModel.ObjectSelection);
    }
  }
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(a1, v12, 1, v6);
}

id sub_100197AC0()
{
  uint64_t v1 = sub_10002F214(&qword_10069D7F0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = v0 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection;
  swift_beginAccess();
  sub_10002F034(v11, (uint64_t)v3, &qword_10069D7F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_10002B754((uint64_t)v3, &qword_10069D7F0);
    uint64_t v12 = (objc_class *)type metadata accessor for ICSelectionStateModel.ContainerSelectionOptions();
    id v13 = objc_allocWithZone(v12);
    swift_unknownObjectWeakInit();
    v13[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_forceApply] = 0;
    swift_unknownObjectWeakAssign();
    v13[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_usingRootViewController] = 1;
    v13[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_ensurePresented] = 1;
    *(void *)&v13[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_ensureSelectedNote] = 0;
    v13[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_deferUntilDataLoaded] = 1;
    *(void *)&v13[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_dismissOverlayContent] = 0;
    *(void *)&v13[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_keepEditorShowing] = 0;
    v13[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_animated] = 1;
    *(void *)&v13[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_completionBlocks] = 0;
    v21.receiver = v13;
    v21.super_class = v12;
    return [super init];
  }
  else
  {
    sub_10002EF54((uint64_t)v3, (uint64_t)v10, type metadata accessor for ICSelectionStateModel.ContainerSelection);
    sub_100027604((uint64_t)v10, (uint64_t)v8, type metadata accessor for ICSelectionStateModel.ContainerSelection);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        swift_bridgeObjectRelease();
        uint64_t v15 = sub_10002F214(&qword_10069D688);
        sub_10002B754((uint64_t)&v8[*(int *)(v15 + 48)], &qword_10069B310);
        goto LABEL_9;
      case 2u:
        sub_10002EA18((uint64_t)v8, type metadata accessor for ICSelectionStateModel.ContainerSelection);
        goto LABEL_9;
      case 3u:
      case 4u:
      case 5u:
        id v14 = (id)*((void *)v8 + 1);

        if (!v14) {
          goto LABEL_9;
        }
        goto LABEL_10;
      default:
        sub_10017253C(*(void *)v8, *((void *)v8 + 1));
LABEL_9:
        uint64_t v16 = (objc_class *)type metadata accessor for ICSelectionStateModel.ContainerSelectionOptions();
        uint64_t v17 = objc_allocWithZone(v16);
        swift_unknownObjectWeakInit();
        v17[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_forceApply] = 0;
        swift_unknownObjectWeakAssign();
        v17[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_usingRootViewController] = 1;
        v17[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_ensurePresented] = 1;
        *(void *)&v17[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_ensureSelectedNote] = 0;
        v17[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_deferUntilDataLoaded] = 1;
        *(void *)&v17[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_dismissOverlayContent] = 0;
        *(void *)&v17[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_keepEditorShowing] = 0;
        v17[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_animated] = 1;
        *(void *)&v17[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_completionBlocks] = 0;
        v20.receiver = v17;
        v20.super_class = v16;
        id v14 = [super init];
LABEL_10:
        sub_10002EA18((uint64_t)v10, type metadata accessor for ICSelectionStateModel.ContainerSelection);
        break;
    }
  }
  return v14;
}

id sub_100197EB0()
{
  uint64_t v1 = sub_10002F214(&qword_10069D7F8);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = v0 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection;
  swift_beginAccess();
  sub_10002F034(v11, (uint64_t)v3, &qword_10069D7F8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_10002B754((uint64_t)v3, &qword_10069D7F8);
    uint64_t v12 = (objc_class *)type metadata accessor for ICSelectionStateModel.ObjectSelectionOptions();
    id v13 = objc_allocWithZone(v12);
    *(void *)&v13[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_scrollState] = 0;
    v13[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_startEditing] = 0;
    v13[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_showInkPicker] = 0;
    v13[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_dismissOverlayContent] = 1;
    v13[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_showLatestUpdatesIfAvailable] = 1;
    v13[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_animated] = 1;
    v13[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_ensurePresented] = 1;
    v24.receiver = v13;
    v24.super_class = v12;
    return [super init];
  }
  else
  {
    sub_10002EF54((uint64_t)v3, (uint64_t)v10, type metadata accessor for ICSelectionStateModel.ObjectSelection);
    sub_100027604((uint64_t)v10, (uint64_t)v8, type metadata accessor for ICSelectionStateModel.ObjectSelection);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 2u:
        sub_10002EA18((uint64_t)v8, type metadata accessor for ICSelectionStateModel.ObjectSelection);
        goto LABEL_9;
      case 3u:
        id v18 = *(id *)v8;
        id v14 = (id)*((void *)v8 + 2);

        if (!v14) {
          goto LABEL_9;
        }
        goto LABEL_10;
      case 4u:
      case 5u:
        id v14 = (id)*((void *)v8 + 1);

        if (!v14) {
          goto LABEL_9;
        }
        goto LABEL_10;
      default:
        uint64_t v15 = &v8[*(int *)(sub_10002F214(&qword_10069D738) + 48)];
        uint64_t v16 = type metadata accessor for URL();
        uint64_t v17 = *(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8);
        v17(v15, v16);
        v17(v8, v16);
LABEL_9:
        uint64_t v19 = (objc_class *)type metadata accessor for ICSelectionStateModel.ObjectSelectionOptions();
        objc_super v20 = objc_allocWithZone(v19);
        *(void *)&v20[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_scrollState] = 0;
        v20[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_startEditing] = 0;
        v20[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_showInkPicker] = 0;
        v20[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_dismissOverlayContent] = 1;
        v20[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_showLatestUpdatesIfAvailable] = 1;
        v20[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_animated] = 1;
        v20[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_ensurePresented] = 1;
        v23.receiver = v20;
        v23.super_class = v19;
        id v14 = [super init];
LABEL_10:
        sub_10002EA18((uint64_t)v10, type metadata accessor for ICSelectionStateModel.ObjectSelection);
        break;
    }
  }
  return v14;
}

id sub_100198278(void *a1, void *a2, void *a3)
{
  uint64_t v7 = sub_10002F214(&qword_10069D7F8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (uint64_t *)((char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  id result = [a1 ic_isBaseAttachmentType];
  if (result)
  {
    id result = [a2 ic_isNoteType];
    if (result)
    {
      *uint64_t v9 = a1;
      v9[1] = a2;
      id v9[2] = a3;
      uint64_t v11 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v9, 0, 1, v11);
      uint64_t v12 = v3 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection;
      swift_beginAccess();
      id v13 = a3;
      id v14 = a1;
      id v15 = a2;
      sub_10002B660((uint64_t)v9, v12, &qword_10069D7F8);
      return (id)swift_endAccess();
    }
  }
  return result;
}

uint64_t sub_100198544(void *a1, void *a2)
{
  uint64_t v5 = sub_10002F214(&qword_10069D7F0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (void *)((char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  [a1 copy];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_100031418(0, &qword_1006A2AF0);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    void *v7 = v12[1];
    v7[1] = a2;
    uint64_t v9 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 0, 1, v9);
    uint64_t v10 = v2 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection;
    swift_beginAccess();
    id v11 = a2;
    sub_10002B660((uint64_t)v7, v10, &qword_10069D7F0);
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_1001987EC()
{
  uint64_t v0 = type metadata accessor for Logger();
  __chkstk_darwin(v0);
  type metadata accessor for JSONDecoder();
  swift_allocObject();
  JSONDecoder.init()();
  sub_1001A046C(&qword_10069D9C8, (void (*)(uint64_t))type metadata accessor for ICSelectionStateModel);
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  swift_release();
  return v2;
}

void sub_100198D38(uint64_t a1, NSURL *a2)
{
  long long v204 = a2;
  uint64_t v4 = sub_10002F214(&qword_10069B310);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v197 = (char *)&v196 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v196 - v7;
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  id v13 = (char *)&v196 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v198 = (char *)&v196 - v14;
  uint64_t v15 = sub_10002F214(&qword_10069D7F8);
  __chkstk_darwin(v15 - 8);
  uint64_t v199 = (uint64_t *)((char *)&v196 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = sub_10002F214(&qword_10069D7F0);
  __chkstk_darwin(v17 - 8);
  unsigned long long v203 = (uint64_t *)((char *)&v196 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v19 = [objc_allocWithZone(v2) init];
  objc_super v20 = self;
  objc_super v21 = (char *)v19;
  uint64_t v22 = (NSURL *)[v20 sharedContext];
  id v205 = sub_1000C1484();
  if (!v22) {
    goto LABEL_21;
  }
  uint64_t v200 = v9;
  uint64_t v201 = v10;
  objc_super v23 = v21;
  objc_super v24 = self;
  objc_super v25 = v22;
  uint64_t v26 = v22;
  URL._bridgeToObjectiveC()(v27);
  uint64_t v29 = v28;
  id v30 = [v24 objectIDForModernFolderMentionedInURL:v28 noteContext:v26];

  if (v30)
  {
    (*(void (**)(uint64_t, uint64_t))(v201 + 8))(a1, v200);
    swift_unknownObjectRelease();

    unint64_t v32 = v203;
    uint64_t v31 = v204;
    *unsigned long long v203 = v30;
    v32[1] = v31;
    uint64_t v33 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v32, 0, 1, v33);
    uint64_t v34 = (uint64_t)&v23[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection];
LABEL_4:
    swift_beginAccess();
    uint64_t v35 = &qword_10069D7F0;
LABEL_5:
    uint64_t v36 = (uint64_t)v32;
LABEL_6:
    sub_10002B660(v36, v34, v35);
    swift_endAccess();
    return;
  }
  uint64_t v202 = v25;
  uint64_t v37 = v26;
  URL._bridgeToObjectiveC()(v38);
  uint64_t v40 = v39;
  unsigned int v41 = [v24 isShowVirtualSmartFolderURL:v39];

  if (!v41)
  {

    uint64_t v50 = v37;
    URL._bridgeToObjectiveC()(v51);
    unint64_t v53 = v52;
    unsigned int v54 = [v24 isShowNoteInVirtualSmartFolderURL:v52];

    if (v54)
    {
      URL._bridgeToObjectiveC()(v55);
      uint64_t v57 = v56;
      uint64_t v202 = v50;
      id v58 = [(NSURL *)v50 managedObjectContext];
      id v59 = [v24 virtualSmartFolderMentionedInURL:v57 context:v58];

      objc_super v21 = v23;
      unint64_t v61 = v204;
      if (v59)
      {
        uint64_t v62 = (uint64_t)v203;
        *unsigned long long v203 = v59;
        *(void *)(v62 + 8) = v61;
        uint64_t v63 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v62, 0, 1, v63);
        uint64_t v64 = (uint64_t)&v23[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection];
        swift_beginAccess();
        uint64_t v65 = v61;
        sub_10002B660(v62, v64, &qword_10069D7F0);
        swift_endAccess();
      }
      URL._bridgeToObjectiveC()(v60);
      BOOL v67 = v66;
      id v68 = [v24 notePredicateFromNoteInVirtualSmartFolderInURL:v66];

      uint64_t v9 = v201;
      if (v68)
      {
        uint64_t v69 = self;
        id v70 = v68;
        id v71 = [(NSURL *)v202 managedObjectContext];
        id v72 = [v69 notesMatchingPredicate:v70 context:v71];

        sub_100031418(0, (unint64_t *)&qword_10069FD10);
        unint64_t v73 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (v73 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v194 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v194)
          {
LABEL_16:
            if ((v73 & 0xC000000000000001) == 0)
            {
              if (!*(void *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
                return;
              }
              id v74 = *(id *)(v73 + 32);
LABEL_19:
              uint64_t v75 = v74;
              swift_bridgeObjectRelease();
              id v76 = [v75 objectID];
              swift_unknownObjectRelease();

              uint64_t v77 = v202;
              (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v200);
              unint64_t v32 = v199;
              *uint64_t v199 = v76;
              v32[1] = 0;
              uint64_t v78 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
              swift_storeEnumTagMultiPayload();
              (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v32, 0, 1, v78);
              uint64_t v34 = (uint64_t)&v21[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection];
              swift_beginAccess();
              uint64_t v35 = &qword_10069D7F8;
              goto LABEL_5;
            }
LABEL_104:
            id v74 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            goto LABEL_19;
          }
        }
        else if (*(void *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_16;
        }

        swift_unknownObjectRelease();
        v195 = v202;

        swift_bridgeObjectRelease();
      }
      else
      {
        swift_unknownObjectRelease();

        v155 = v202;
      }

      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v200);
      return;
    }

    objc_super v21 = v23;
    uint64_t v9 = v200;
    uint64_t v10 = v201;
    uint64_t v22 = v202;
LABEL_21:
    uint64_t v202 = v22;
    id v70 = self;
    URL._bridgeToObjectiveC()(v79);
    uint64_t v81 = v80;
    unsigned int v82 = [v70 isShowNoteURL:v80];

    if (v82)
    {
      uint64_t v83 = v202;
      if (!v202) {
        goto LABEL_57;
      }
      unint64_t v61 = v202;
      URL._bridgeToObjectiveC()(v84);
      uint64_t v86 = v85;
      id v87 = [v70 predicateForNotesMentionedInURL:v85];

      if (v87)
      {
        uint64_t v201 = a1;
        uint64_t v89 = v21;
        Swift::Int v90 = self;
        id v91 = v87;
        unint64_t v92 = (unint64_t)v61;
        id v93 = [(NSURL *)v61 managedObjectContext];
        id v94 = [v90 notesMatchingPredicate:v91 context:v93];

        sub_100031418(0, (unint64_t *)&qword_10069FD10);
        unint64_t v95 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (v95 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v96 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v96 = *(void *)((v95 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        objc_super v21 = v89;
        unint64_t v61 = (NSURL *)v92;
        if (v96)
        {
          a1 = v201;
          if ((v95 & 0xC000000000000001) != 0)
          {
            id v97 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            goto LABEL_30;
          }
          if (*(void *)((v95 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            id v97 = *(id *)(v95 + 32);
LABEL_30:
            uint64_t v98 = v97;
            swift_bridgeObjectRelease();
            id v99 = [v98 objectID];

            uint64_t v100 = (uint64_t)v199;
            *uint64_t v199 = v99;
            *(void *)(v100 + 8) = 0;
            uint64_t v101 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
            swift_storeEnumTagMultiPayload();
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v101 - 8) + 56))(v100, 0, 1, v101);
            uint64_t v102 = (uint64_t)&v21[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection];
            swift_beginAccess();
            sub_10002B660(v100, v102, &qword_10069D7F8);
            swift_endAccess();
            goto LABEL_52;
          }
          __break(1u);
          goto LABEL_98;
        }

        swift_bridgeObjectRelease();
        a1 = v201;
      }
LABEL_52:
      URL._bridgeToObjectiveC()(v88);
      uint64_t v140 = v139;
      id v141 = [v70 folderIdentifierForShowNoteURL:v139];

      if (!v141) {
        goto LABEL_55;
      }
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      id v142 = [(NSURL *)v61 managedObjectContext];
      NSString v143 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v144 = [self folderWithIdentifier:v143 context:v142];

      if (v144)
      {
        id v145 = [v144 objectID];

        uint64_t v146 = (uint64_t)v203;
        *unsigned long long v203 = v145;
        uint64_t v147 = v204;
        *(void *)(v146 + 8) = v204;
        uint64_t v148 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v148 - 8) + 56))(v146, 0, 1, v148);
        uint64_t v149 = (uint64_t)&v21[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection];
        swift_beginAccess();
        v150 = v147;
        sub_10002B660(v146, v149, &qword_10069D7F0);
        swift_endAccess();
      }
      else
      {
LABEL_55:
      }
      uint64_t v83 = v202;
LABEL_57:
      if (v205)
      {
        swift_unknownObjectRetain();
        URL._bridgeToObjectiveC()(v151);
        uint64_t v153 = v152;
        id v154 = (id)NotesAppPredicateForNoteMentionedInURL();

        if (v154)
        {
          sub_10019A4A4((uint64_t)v154);

LABEL_60:
          swift_unknownObjectRelease_n();

LABEL_84:
          (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
          return;
        }
        swift_unknownObjectRelease_n();
      }

      goto LABEL_84;
    }
    uint64_t v103 = v202;
    if (v202)
    {
      uint64_t v104 = v202;
      URL._bridgeToObjectiveC()(v105);
      unint64_t v107 = v106;
      unsigned int v108 = [v70 isShowNoteFocusedInFolderURL:v106];

      if (v108)
      {
        URL._bridgeToObjectiveC()(v109);
        uint64_t v111 = v110;
        id v112 = [v70 predicateForFolderWithNoteFocusedInURL:v110];

        if (!v112)
        {
          swift_unknownObjectRelease();

          goto LABEL_84;
        }
        Swift::Int v113 = self;
        id v70 = v112;
        unint64_t v61 = v104;
        id v114 = [(NSURL *)v104 managedObjectContext];
        id v115 = [v113 notesMatchingPredicate:v70 context:v114];

        sub_100031418(0, (unint64_t *)&qword_10069FD10);
        unint64_t v92 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (!(v92 >> 62))
        {
          uint64_t v116 = *(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x10);
          goto LABEL_36;
        }
LABEL_98:
        swift_bridgeObjectRetain();
        uint64_t v116 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
LABEL_36:
        int v117 = v61;
        if (!v116)
        {

          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_84;
        }
        if ((v92 & 0xC000000000000001) != 0)
        {
          id v118 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (!*(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_104;
          }
          id v118 = *(id *)(v92 + 32);
        }
        uint64_t v119 = v118;
        swift_bridgeObjectRelease();
        if ([v119 isSystemPaper])
        {
          id v120 = [self globalVirtualSystemPaperFolder];
          uint64_t v122 = v203;
          uint64_t v121 = v204;
          *unsigned long long v203 = v120;
          v122[1] = v121;
          uint64_t v123 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
        }
        else
        {
          id v163 = [v119 folder];
          if (!v163)
          {
            uint64_t v167 = v204;
            goto LABEL_73;
          }
          uint64_t v164 = v163;
          id v165 = [v163 objectID];

          uint64_t v122 = v203;
          *unsigned long long v203 = v165;
          uint64_t v121 = v204;
          v122[1] = v204;
          uint64_t v123 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v123 - 8) + 56))(v122, 0, 1, v123);
        uint64_t v166 = (uint64_t)&v21[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection];
        swift_beginAccess();
        uint64_t v167 = v121;
        uint64_t v168 = (uint64_t)v122;
        int v117 = v61;
        sub_10002B660(v168, v166, &qword_10069D7F0);
        swift_endAccess();
LABEL_73:
        id v169 = [v119 objectID];
        swift_unknownObjectRelease();

        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
        uint64_t v170 = *(void **)&v21[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_focusedNoteObjectID];
        *(void *)&v21[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_focusedNoteObjectID] = v169;

        return;
      }
    }
    id v124 = v205;
    if (v205)
    {
      swift_unknownObjectRetain();
      URL._bridgeToObjectiveC()(v125);
      uint64_t v127 = v126;
      id v128 = [v70 objectIDForHTMLFolderMentionedInURL:v126 context:v205];

      id v129 = v205;
      swift_unknownObjectRelease();
      if (v128)
      {
        swift_unknownObjectRelease();

        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
        unint64_t v32 = v203;
        *unsigned long long v203 = v128;
        v32[1] = 0;
LABEL_46:
        uint64_t v130 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v130 - 8) + 56))(v32, 0, 1, v130);
        uint64_t v34 = (uint64_t)&v21[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection];
        goto LABEL_4;
      }
      swift_unknownObjectRetain();
      URL._bridgeToObjectiveC()(v131);
      uint64_t v133 = v132;
      unsigned int v134 = [v70 isShowDefaultFolderURL:v132];

      if (v134)
      {
        id v135 = [self defaultFolderWithHTMLNoteContext:v129];
        if (v135)
        {
          id v136 = v135;
          id v137 = [v136 objectID];

          swift_unknownObjectRelease_n();
          (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
          unint64_t v32 = v203;
          v138 = v204;
          *unsigned long long v203 = v137;
          v32[1] = v138;
          goto LABEL_46;
        }
        goto LABEL_82;
      }
      swift_unknownObjectRelease();
      swift_unknownObjectRetain();
      uint64_t v201 = a1;
      URL._bridgeToObjectiveC()(v156);
      uint64_t v158 = v157;
      id v159 = [v70 objectIDURIRepresentationForHTMLNoteMentionedInURL:v157];

      if (v159)
      {
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v160 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
        v160(v8, v13, v9);
        uint64_t v161 = *(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56);
        v161(v8, 0, 1, v9);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
        {
          v160(v198, v8, v9);
          if (v202) {
            id v162 = [(NSURL *)v202 managedObjectContext];
          }
          else {
            id v162 = 0;
          }
          id v178 = [v205 managedObjectContext];
          uint64_t v179 = (uint64_t)v197;
          uint64_t v180 = v198;
          (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v197, v198, v9);
          v161((char *)v179, 0, 1, v9);
          v206[0] = variable initialization expression of AsyncChannel.Iterator.active;
          v206[1] = 0;
          v206[2] = variable initialization expression of AsyncChannel.Iterator.active;
          v206[3] = 0;
          v206[4] = v162;
          v206[5] = v178;
          long long v207 = 0u;
          long long v208 = 0u;
          id v181 = v162;
          id v182 = v178;
          id v183 = sub_10002980C(v179, (uint64_t)v206);

          sub_10002B754(v179, &qword_10069B310);
          if (!v183)
          {

            swift_unknownObjectRelease_n();
            uint64_t v190 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
            v190(v201, v9);
            v190((uint64_t)v180, v9);
            return;
          }
          if (objc_msgSend(v183, "ic_isContainerType"))
          {

            swift_unknownObjectRelease_n();
            uint64_t v184 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
            v184(v201, v9);
            v184((uint64_t)v180, v9);
            uint64_t v186 = (uint64_t)v203;
            uint64_t v185 = v204;
            *unsigned long long v203 = v183;
            *(void *)(v186 + 8) = v185;
            uint64_t v187 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
            swift_storeEnumTagMultiPayload();
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v187 - 8) + 56))(v186, 0, 1, v187);
            uint64_t v188 = (uint64_t)&v21[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection];
            swift_beginAccess();
            uint64_t v189 = &qword_10069D7F0;
          }
          else
          {
            unsigned int v191 = [v183 ic_isNoteType];

            swift_unknownObjectRelease_n();
            unint64_t v192 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
            v192(v201, v9);
            v192((uint64_t)v180, v9);
            if (!v191)
            {

              return;
            }
            uint64_t v186 = (uint64_t)v199;
            *uint64_t v199 = v183;
            *(void *)(v186 + 8) = 0;
            uint64_t v193 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
            swift_storeEnumTagMultiPayload();
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v193 - 8) + 56))(v186, 0, 1, v193);
            uint64_t v188 = (uint64_t)&v21[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection];
            swift_beginAccess();
            uint64_t v189 = &qword_10069D7F8;
          }
          sub_10002B660(v186, v188, v189);
          swift_endAccess();
          return;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
      }
      id v124 = v205;
      swift_unknownObjectRelease();
      sub_10002B754((uint64_t)v8, &qword_10069B310);
      a1 = v201;
    }
    URL._bridgeToObjectiveC()(v103);
    uint64_t v172 = v171;
    int IsValidURL = NotesAppIsValidURL();

    if (IsValidURL)
    {
      if (v124)
      {
        swift_unknownObjectRetain();
        URL._bridgeToObjectiveC()(v174);
        uint64_t v176 = v175;
        id v177 = (id)NotesAppPredicateForNoteMentionedInURL();

        if (v177)
        {
          sub_10019A4A4((uint64_t)v177);

          goto LABEL_60;
        }
LABEL_82:
        swift_unknownObjectRelease_n();
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }

    goto LABEL_84;
  }
  URL._bridgeToObjectiveC()(v42);
  unint64_t v44 = v43;
  id v45 = [(NSURL *)v37 managedObjectContext];
  id v46 = [v24 virtualSmartFolderMentionedInURL:v44 context:v45];
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v201 + 8))(a1, v200);
  if (v46)
  {
    uint64_t v48 = v203;
    uint64_t v47 = v204;
    *unsigned long long v203 = v46;
    v48[1] = v47;
    uint64_t v49 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v48, 0, 1, v49);
    uint64_t v34 = (uint64_t)&v23[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection];
    swift_beginAccess();
    uint64_t v35 = &qword_10069D7F0;
    uint64_t v36 = (uint64_t)v48;
    goto LABEL_6;
  }
}

uint64_t sub_10019A4A4(uint64_t a1)
{
  uint64_t v3 = sub_10002F214(&qword_10069D7F8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (uint64_t *)((char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  self;
  uint64_t v6 = (void *)swift_dynamicCastObjCClass();
  if (!v6
    || (id v7 = [v6 allVisibleNotesMatchingPredicate:a1 sorted:1]) == 0
    || (v8 = v7, uint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(), v8, !v9))
  {
    long long v17 = 0u;
    long long v18 = 0u;
    return sub_10002B754((uint64_t)&v17, &qword_10069B4D0);
  }
  if (!*(void *)(v9 + 16))
  {
    long long v17 = 0u;
    long long v18 = 0u;
    swift_bridgeObjectRelease();
    return sub_10002B754((uint64_t)&v17, &qword_10069B4D0);
  }
  sub_100032E28(v9 + 32, (uint64_t)&v17);
  swift_bridgeObjectRelease();
  if (!*((void *)&v18 + 1)) {
    return sub_10002B754((uint64_t)&v17, &qword_10069B4D0);
  }
  sub_100031418(0, (unint64_t *)&qword_1006A2780);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    id v11 = v16;
    id v12 = [v16 objectID];

    *uint64_t v5 = v12;
    v5[1] = 0;
    uint64_t v13 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v5, 0, 1, v13);
    uint64_t v14 = v1 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection;
    swift_beginAccess();
    sub_10002B660((uint64_t)v5, v14, &qword_10069D7F8);
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_10019A72C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10002F214(&qword_10069D7F8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002F214(&qword_10069D7F0);
  __chkstk_darwin(v5);
  id v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = 0;
  unint64_t v21 = 0xE000000000000000;
  _StringGuts.grow(_:)(78);
  uint64_t v22 = v20;
  unint64_t v23 = v21;
  v8._object = (void *)0x800000010054E650;
  v8._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v8);
  uint64_t v9 = v0 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection;
  swift_beginAccess();
  sub_10002F034(v9, (uint64_t)v7, &qword_10069D7F0);
  v10._countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  v11._object = (void *)0x800000010054E670;
  v11._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v11);
  uint64_t v12 = v1 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection;
  swift_beginAccess();
  sub_10002F034(v12, (uint64_t)v4, &qword_10069D7F8);
  v13._countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  v14._countAndFlagsBits = 0xD000000000000020;
  v14._object = (void *)0x800000010054E690;
  String.append(_:)(v14);
  id v19 = *(id *)(v1 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentSelectedSearchResult);
  id v15 = v19;
  sub_10002F214(&qword_10069D9B0);
  v16._countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v16);
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_10019AB30()
{
  return type metadata accessor for ICSelectionStateModel(0);
}

uint64_t type metadata accessor for ICSelectionStateModel.ObjectSelectionOptions()
{
  return self;
}

uint64_t type metadata accessor for ICSelectionStateModel.ContainerSelectionCompletionBlocks()
{
  return self;
}

uint64_t type metadata accessor for ICSelectionStateModel.ContainerSelectionOptions()
{
  return self;
}

ValueMetadata *type metadata accessor for ICSelectionStateModel.SelectionReason()
{
  return &type metadata for ICSelectionStateModel.SelectionReason;
}

uint64_t *sub_10019ABB8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    Swift::String v8 = (char *)*a2;
    *a1 = *a2;
    a1 = (uint64_t *)&v8[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v9 = a2[1];
        *a1 = *a2;
        a1[1] = v9;
        swift_bridgeObjectRetain();
        uint64_t v10 = *(int *)(sub_10002F214(&qword_10069D688) + 48);
        Swift::String v11 = (char *)a1 + v10;
        uint64_t v12 = (char *)a2 + v10;
        uint64_t v13 = type metadata accessor for URL();
        uint64_t v14 = *(void *)(v13 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
        {
          uint64_t v15 = sub_10002F214(&qword_10069B310);
          memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
        }
        break;
      case 2u:
        uint64_t v16 = type metadata accessor for URL();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
        break;
      case 3u:
      case 4u:
      case 5u:
        long long v17 = (void *)*a2;
        uint64_t v18 = (void *)a2[1];
        *a1 = (uint64_t)v17;
        a1[1] = (uint64_t)v18;
        id v19 = v17;
        id v20 = v18;
        break;
      default:
        uint64_t v7 = *a2;
        unint64_t v6 = a2[1];
        sub_100172484(v7, v6);
        *a1 = v7;
        a1[1] = v6;
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t *sub_10019AE8C(uint64_t *a1, uint64_t *a2)
{
  if (a1 != a2)
  {
    sub_10002EA18((uint64_t)a1, type metadata accessor for ICSelectionStateModel.ContainerSelection);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        uint64_t v6 = *(int *)(sub_10002F214(&qword_10069D688) + 48);
        uint64_t v7 = (char *)a1 + v6;
        Swift::String v8 = (char *)a2 + v6;
        uint64_t v9 = type metadata accessor for URL();
        uint64_t v10 = *(void *)(v9 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
        {
          uint64_t v11 = sub_10002F214(&qword_10069B310);
          memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
        }
        break;
      case 2u:
        uint64_t v12 = type metadata accessor for URL();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
        break;
      case 3u:
      case 4u:
      case 5u:
        uint64_t v13 = (void *)*a2;
        *a1 = *a2;
        uint64_t v14 = (void *)a2[1];
        a1[1] = (uint64_t)v14;
        id v15 = v13;
        id v16 = v14;
        break;
      default:
        uint64_t v5 = *a2;
        unint64_t v4 = a2[1];
        sub_100172484(v5, v4);
        *a1 = v5;
        a1[1] = v4;
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_10019B124(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v13 = type metadata accessor for URL();
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
LABEL_8:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    uint64_t v7 = *(int *)(sub_10002F214(&qword_10069D688) + 48);
    Swift::String v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for URL();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = sub_10002F214(&qword_10069B310);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    goto LABEL_8;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

uint64_t sub_10019B2F4()
{
  return swift_storeEnumTagMultiPayload();
}

char *sub_10019B304(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)a1 = *a2;
    a1 = &v9[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 2u:
        uint64_t v10 = type metadata accessor for URL();
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        break;
      case 3u:
        uint64_t v11 = *a2;
        uint64_t v12 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v12;
        uint64_t v13 = a2[2];
        *((void *)a1 + 2) = v13;
        uint64_t v14 = v11;
        id v15 = v12;
        id v16 = v13;
        break;
      case 4u:
      case 5u:
        long long v17 = *a2;
        uint64_t v18 = a2[1];
        *(void *)a1 = v17;
        *((void *)a1 + 1) = v18;
        id v19 = v17;
        id v20 = v18;
        break;
      default:
        uint64_t v6 = type metadata accessor for URL();
        uint64_t v7 = *(void (**)(char *, char **, uint64_t))(*(void *)(v6 - 8) + 16);
        v7(a1, a2, v6);
        uint64_t v8 = sub_10002F214(&qword_10069D738);
        v7(&a1[*(int *)(v8 + 48)], (char **)((char *)a2 + *(int *)(v8 + 48)), v6);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void **sub_10019B584(void **a1, void **a2)
{
  if (a1 != a2)
  {
    sub_10002EA18((uint64_t)a1, type metadata accessor for ICSelectionStateModel.ObjectSelection);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 2u:
        uint64_t v7 = type metadata accessor for URL();
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        break;
      case 3u:
        uint64_t v8 = *a2;
        *a1 = *a2;
        uint64_t v9 = a2[1];
        a1[1] = v9;
        uint64_t v10 = a2[2];
        a1[2] = v10;
        id v11 = v8;
        id v12 = v9;
        id v13 = v10;
        break;
      case 4u:
      case 5u:
        uint64_t v14 = *a2;
        *a1 = *a2;
        id v15 = a2[1];
        a1[1] = v15;
        id v16 = v14;
        id v17 = v15;
        break;
      default:
        uint64_t v4 = type metadata accessor for URL();
        int v5 = *(void (**)(void **, void **, uint64_t))(*(void *)(v4 - 8) + 16);
        v5(a1, a2, v4);
        uint64_t v6 = sub_10002F214(&qword_10069D738);
        v5((void **)((char *)a1 + *(int *)(v6 + 48)), (void **)((char *)a2 + *(int *)(v6 + 48)), v4);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_10019B7C0(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
  {
    uint64_t v10 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = type metadata accessor for URL();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32);
    v8(a1, a2, v7);
    uint64_t v9 = sub_10002F214(&qword_10069D738);
    v8(&a1[*(int *)(v9 + 48)], &a2[*(int *)(v9 + 48)], v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for VisibleNotesQuery.Comparator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for VisibleNotesQuery.Comparator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

unint64_t sub_10019B9AC()
{
  unint64_t result = qword_10069D7E8;
  if (!qword_10069D7E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069D7E8);
  }
  return result;
}

unint64_t sub_10019BA00(char a1)
{
  unint64_t result = 0x65537463656A626FLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0x6F697463656C6573;
      break;
    case 3:
      unint64_t result = 0xD000000000000035;
      break;
    case 4:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_10019BAD4(char a1)
{
  unint64_t result = 0x65537463656A626FLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0x6F697463656C6573;
      break;
    case 3:
      unint64_t result = 0xD000000000000035;
      break;
    case 4:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10019BBA8(unsigned __int8 *a1, char *a2)
{
  return sub_100275478(*a1, *a2);
}

Swift::Int sub_10019BBB4()
{
  return sub_1002548EC();
}

uint64_t sub_10019BBBC()
{
  return sub_100254D04();
}

Swift::Int sub_10019BBC4()
{
  return sub_1002554D8();
}

unint64_t sub_10019BBCC@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1001A4EF4(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_10019BBFC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_10019BA00(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_10019BC28()
{
  return sub_10019BAD4(*v0);
}

unint64_t sub_10019BC30@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1001A4EF4(a1);
  *a2 = result;
  return result;
}

void sub_10019BC58(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_10019BC64(uint64_t a1)
{
  unint64_t v2 = sub_1001A0418();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10019BCA0(uint64_t a1)
{
  unint64_t v2 = sub_1001A0418();

  return CodingKey.debugDescription.getter(a1, v2);
}

unsigned char *sub_10019BCDC(void *a1)
{
  uint64_t v4 = sub_10002F214(&qword_10069B310);
  __chkstk_darwin(v4 - 8);
  uint64_t v33 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214(&qword_10069D7F0);
  __chkstk_darwin(v6 - 8);
  unint64_t v32 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214(&qword_10069D7F8);
  __chkstk_darwin(v8 - 8);
  uint64_t v34 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10002F214(&qword_10069D800);
  __chkstk_darwin(v10 - 8);
  id v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10002F214(&qword_10069D808);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v35 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = [objc_allocWithZone(v1) init];
  uint64_t v17 = a1[3];
  uint64_t v36 = a1;
  sub_10015E154(a1, v17);
  sub_1001A0418();
  id v18 = v16;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    swift_errorRelease();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);

    sub_10002B754((uint64_t)v12, &qword_10069D800);
    id v19 = v18;
  }
  else
  {
    uint64_t v21 = (uint64_t)v32;
    uint64_t v20 = (uint64_t)v33;
    id v30 = v18;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
    uint64_t v31 = v14;
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v35, v12, v13);
    type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
    LOBYTE(v37) = 0;
    sub_1001A046C(&qword_10069D818, (void (*)(uint64_t))type metadata accessor for ICSelectionStateModel.ObjectSelection);
    uint64_t v22 = (uint64_t)v34;
    uint64_t v23 = v13;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    id v19 = v30;
    uint64_t v24 = (uint64_t)&v30[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection];
    swift_beginAccess();
    sub_10002B660(v22, v24, &qword_10069D7F8);
    swift_endAccess();
    type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
    LOBYTE(v37) = 1;
    sub_1001A046C(&qword_10069D820, (void (*)(uint64_t))type metadata accessor for ICSelectionStateModel.ContainerSelection);
    objc_super v25 = v35;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v26 = (uint64_t)&v19[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection];
    swift_beginAccess();
    sub_10002B660(v21, v26, &qword_10069D7F0);
    swift_endAccess();
    char v38 = 2;
    sub_1001A04B4();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    v19[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_selectionReason] = v37 & 1;
    sub_10002F214(&qword_10069D830);
    char v38 = 3;
    sub_1001A0750(&qword_10069D838, &qword_10069D840);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v27 = v31;
    *(void *)&v19[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentFirstVisibleObjectIDURLForContainerObjectIDURL] = v37;
    swift_bridgeObjectRelease();
    type metadata accessor for URL();
    LOBYTE(v37) = 4;
    sub_1001A046C(&qword_10069D840, (void (*)(uint64_t))&type metadata accessor for URL);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v25, v23);

    uint64_t v28 = (uint64_t)&v19[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_focusedNoteObjectIDURL];
    swift_beginAccess();
    sub_10002B660(v20, v28, &qword_10069B310);
    swift_endAccess();
  }
  sub_100018FE8((uint64_t)v36);
  return v19;
}

uint64_t sub_10019C414(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v29 = sub_10002F214(&qword_10069B310);
  __chkstk_darwin(v29);
  uint64_t v30 = (uint64_t)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v32 = v5;
  uint64_t v33 = v6;
  __chkstk_darwin(v5);
  uint64_t v31 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_10002F214(&qword_10069D7F0);
  __chkstk_darwin(v35);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10002F214(&qword_10069D7F8);
  __chkstk_darwin(v10);
  id v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10002F214(&qword_10069D848);
  uint64_t v36 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10015E154(a1, a1[3]);
  sub_1001A0418();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  uint64_t v16 = v2 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection;
  swift_beginAccess();
  sub_10002F034(v16, (uint64_t)v12, &qword_10069D7F8);
  char v38 = 0;
  sub_1001A0508();
  uint64_t v17 = v34;
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  uint64_t v18 = v17;
  if (v17)
  {
    swift_errorRelease();
    uint64_t v18 = 0;
  }
  sub_10002B754((uint64_t)v12, &qword_10069D7F8);
  uint64_t v19 = v2 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection;
  swift_beginAccess();
  sub_10002F034(v19, (uint64_t)v9, &qword_10069D7F0);
  LOBYTE(v37) = 1;
  sub_1001A05AC();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (v18) {
    swift_errorRelease();
  }
  sub_10002B754((uint64_t)v9, &qword_10069D7F0);
  LOBYTE(v37) = *(unsigned char *)(v2 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_selectionReason);
  char v39 = 2;
  sub_1001A0650();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  uint64_t v37 = *(void *)(v2
                  + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentFirstVisibleObjectIDURLForContainerObjectIDURL);
  char v39 = 3;
  swift_bridgeObjectRetain();
  sub_10002F214((uint64_t *)&unk_1006A2AC0);
  sub_1001A06A4();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void **)(v2 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_focusedNoteObjectID);
  if (v20)
  {
    id v21 = v20;
    id v22 = [v21 URIRepresentation];
    uint64_t v23 = v31;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    LOBYTE(v37) = 4;
    sub_1001A046C(&qword_10069D888, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v24 = v32;
    KeyedEncodingContainer.encode<A>(_:forKey:)();

    (*(void (**)(char *, uint64_t))(v33 + 8))(v23, v24);
  }
  else
  {
    uint64_t v25 = v2 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_focusedNoteObjectIDURL;
    swift_beginAccess();
    uint64_t v26 = v30;
    sub_10002F034(v25, v30, &qword_10069B310);
    char v39 = 4;
    sub_1001A07E4();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    sub_10002B754(v26, &qword_10069B310);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v15, v13);
}

unsigned char *sub_10019CA1C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  unint64_t result = sub_10019BCDC(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_10019CA48(void *a1)
{
  return sub_10019C414(a1);
}

uint64_t sub_10019CA6C()
{
  uint64_t v1 = 0x65646F4365746F6ELL;
  if (*v0 != 1) {
    uint64_t v1 = 0x6974617469766E69;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x656D686361747461;
  }
}

uint64_t sub_10019CAD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1001A4F40(a1, a2);
  *a3 = result;
  return result;
}

void sub_10019CB00(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_10019CB0C(uint64_t a1)
{
  unint64_t v2 = sub_1001A0888();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10019CB48(uint64_t a1)
{
  unint64_t v2 = sub_1001A0888();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10019CB84()
{
  if (*v0) {
    return 0x4C525565746F6ELL;
  }
  else {
    return 0x656D686361747461;
  }
}

uint64_t sub_10019CBCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1001A50D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10019CBF4(uint64_t a1)
{
  unint64_t v2 = sub_1001A0930();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10019CC30(uint64_t a1)
{
  unint64_t v2 = sub_1001A0930();

  return CodingKey.debugDescription.getter(a1, v2);
}

Swift::Int sub_10019CC6C()
{
  return Hasher._finalize()();
}

void sub_10019CCB0()
{
}

Swift::Int sub_10019CCD8()
{
  return Hasher._finalize()();
}

uint64_t sub_10019CD18()
{
  return 0x52557463656A626FLL;
}

uint64_t sub_10019CD34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x52557463656A626FLL && a2 == 0xE90000000000004CLL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_10019CDD8(uint64_t a1)
{
  unint64_t v2 = sub_1001A08DC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10019CE14(uint64_t a1)
{
  unint64_t v2 = sub_1001A08DC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10019CE50@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v109 = a2;
  uint64_t v3 = sub_10002F214(&qword_10069D898);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  id v118 = (char *)&v100 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  int v117 = (char *)&v100 - v6;
  uint64_t v7 = sub_10002F214(&qword_10069D8A0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v123 = (void (*)(void, void, void, void))v7;
  uint64_t v124 = v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v111 = (char *)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v110 = (char *)&v100 - v11;
  uint64_t v12 = sub_10002F214(&qword_10069B310);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  id v114 = (void (*)(char *, uint64_t, uint64_t))((char *)&v100 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = __chkstk_darwin(v13);
  Swift::Int v113 = (char *)&v100 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  unsigned int v108 = (char *)&v100 - v18;
  __chkstk_darwin(v17);
  id v112 = (char *)&v100 - v19;
  uint64_t v20 = type metadata accessor for URL();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v119 = v20;
  uint64_t v120 = v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v106 = (char *)&v100 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v105 = (char *)&v100 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v104 = (char *)&v100 - v27;
  __chkstk_darwin(v26);
  unint64_t v107 = (char *)&v100 - v28;
  uint64_t v29 = sub_10002F214(&qword_10069D8A8);
  __chkstk_darwin(v29 - 8);
  uint64_t v116 = (char *)&v100 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_10002F214(&qword_10069D8B0);
  uint64_t v121 = *(void *)(v31 - 8);
  uint64_t v122 = v31;
  __chkstk_darwin(v31);
  id v115 = (char *)&v100 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_10002F214(&qword_10069D8B8);
  __chkstk_darwin(v33 - 8);
  uint64_t v35 = (char *)&v100 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_10002F214(&qword_10069D8C0);
  uint64_t v37 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  char v39 = (char *)&v100 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)&v100 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = a1[3];
  uint64_t v125 = a1;
  sub_10015E154(a1, v43);
  sub_1001A0888();
  uint64_t v44 = v126;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v44)
  {
    uint64_t v102 = v42;
    uint64_t v126 = v40;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v35, 0, 1, v36);
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v39, v35, v36);
    uint64_t v49 = KeyedDecodingContainer.allKeys.getter();
    uint64_t v50 = v36;
    if (!*(void *)(v49 + 16))
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v36);
      goto LABEL_3;
    }
    int v51 = *(unsigned __int8 *)(v49 + 32);
    swift_bridgeObjectRelease();
    uint64_t v103 = v39;
    if (v51)
    {
      uint64_t v101 = v37;
      if (v51 == 1)
      {
        char v130 = 1;
        sub_1001A08DC();
        uint64_t v52 = v117;
        KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
        uint64_t v56 = v123;
        uint64_t v55 = v124;
        (*(void (**)(char *, void, uint64_t, void))(v124 + 56))(v52, 0, 1, v123);
        uint64_t v57 = v110;
        (*(void (**)(char *, char *, void (*)(void, void, void, void)))(v55 + 32))(v110, v52, v56);
        sub_1001A046C(&qword_10069D840, (void (*)(uint64_t))&type metadata accessor for URL);
        uint64_t v58 = (uint64_t)v113;
        uint64_t v59 = v119;
        KeyedDecodingContainer.decode<A>(_:forKey:)();
        uint64_t v48 = (uint64_t)v125;
        (*(void (**)(char *, void (*)(void, void, void, void)))(v55 + 8))(v57, v56);
        uint64_t v68 = v120;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v120 + 56))(v58, 0, 1, v59);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v68 + 48))(v58, 1, v59) == 1)
        {
LABEL_17:
          sub_10002B754(v58, &qword_10069B310);
          uint64_t v79 = type metadata accessor for DecodingError();
          swift_allocError();
          uint64_t v81 = v80;
          uint64_t v77 = v103;
          KeyedDecodingContainer.codingPath.getter();
          DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
          (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v79 - 8) + 104))(v81, enum case for DecodingError.dataCorrupted(_:), v79);
          swift_willThrow();
          uint64_t v37 = v101;
          goto LABEL_18;
        }
        (*(void (**)(char *, uint64_t))(v101 + 8))(v103, v50);
        uint64_t v83 = *(void (**)(char *, uint64_t, uint64_t))(v68 + 32);
        unint64_t v84 = v105;
        v83(v105, v58, v59);
        uint64_t v85 = (uint64_t)v102;
        v83(v102, (uint64_t)v84, v59);
      }
      else
      {
        char v131 = 2;
        sub_1001A08DC();
        unsigned int v54 = v118;
        KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
        uint64_t v65 = v123;
        uint64_t v64 = v124;
        (*(void (**)(char *, void, uint64_t, void))(v124 + 56))(v54, 0, 1, v123);
        uint64_t v66 = v111;
        (*(void (**)(char *, char *, void (*)(void, void, void, void)))(v64 + 32))(v111, v54, v65);
        sub_1001A046C(&qword_10069D840, (void (*)(uint64_t))&type metadata accessor for URL);
        uint64_t v58 = (uint64_t)v114;
        uint64_t v67 = v119;
        KeyedDecodingContainer.decode<A>(_:forKey:)();
        uint64_t v48 = (uint64_t)v125;
        (*(void (**)(char *, void (*)(void, void, void, void)))(v64 + 8))(v66, v65);
        uint64_t v78 = v120;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v120 + 56))(v58, 0, 1, v67);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48))(v58, 1, v67) == 1) {
          goto LABEL_17;
        }
        (*(void (**)(char *, uint64_t))(v101 + 8))(v103, v50);
        Swift::Int v90 = *(void (**)(char *, uint64_t, uint64_t))(v78 + 32);
        id v91 = v106;
        v90(v106, v58, v67);
        uint64_t v85 = (uint64_t)v102;
        v90(v102, (uint64_t)v91, v67);
      }
LABEL_23:
      uint64_t v92 = v109;
      swift_storeEnumTagMultiPayload();
      sub_10002EF54(v85, v92, type metadata accessor for ICSelectionStateModel.ObjectSelection);
      return sub_100018FE8(v48);
    }
    char v129 = 0;
    sub_1001A0930();
    unint64_t v53 = v116;
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    uint64_t v124 = v36;
    uint64_t v60 = v121;
    uint64_t v61 = v122;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v121 + 56))(v53, 0, 1, v122);
    (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v115, v53, v61);
    char v128 = 0;
    sub_1001A046C(&qword_10069D840, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v62 = (uint64_t)v112;
    uint64_t v63 = v119;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v69 = v120;
    id v70 = (char *)(v120 + 56);
    uint64_t v123 = *(void (**)(void, void, void, void))(v120 + 56);
    v123(v62, 0, 1, v63);
    unint64_t v73 = *(char **)(v69 + 48);
    id v72 = (char *)(v69 + 48);
    id v71 = v73;
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v73)(v62, 1, v63) == 1)
    {
      (*(void (**)(char *, uint64_t))(v121 + 8))(v115, v122);
      sub_10002B754(v62, &qword_10069B310);
      uint64_t v50 = v124;
      uint64_t v48 = (uint64_t)v125;
    }
    else
    {
      uint64_t v116 = v71;
      int v117 = v72;
      id v118 = v70;
      uint64_t v86 = v62;
      id v87 = *(void (**)(char *, uint64_t, uint64_t))(v120 + 32);
      v87(v107, v86, v63);
      char v127 = 1;
      uint64_t v88 = v122;
      uint64_t v89 = v115;
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      id v114 = v87;
      (*(void (**)(char *, uint64_t))(v121 + 8))(v89, v88);
      uint64_t v93 = (uint64_t)v108;
      v123(v108, 0, 1, v63);
      int v94 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v116)(v93, 1, v63);
      uint64_t v50 = v124;
      uint64_t v48 = (uint64_t)v125;
      unint64_t v95 = v107;
      if (v94 != 1)
      {
        (*(void (**)(char *, uint64_t))(v37 + 8))(v103, v124);
        uint64_t v96 = v104;
        id v97 = (void (*)(char *, char *, uint64_t))v114;
        v114(v104, v93, v63);
        uint64_t v98 = sub_10002F214(&qword_10069D738);
        uint64_t v85 = (uint64_t)v102;
        id v99 = &v102[*(int *)(v98 + 48)];
        v97(v102, v95, v63);
        v97(v99, v96, v63);
        goto LABEL_23;
      }
      (*(void (**)(char *, uint64_t))(v120 + 8))(v107, v63);
      sub_10002B754(v93, &qword_10069B310);
    }
    uint64_t v74 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v76 = v75;
    uint64_t v77 = v103;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v74 - 8) + 104))(v76, enum case for DecodingError.dataCorrupted(_:), v74);
    swift_willThrow();
LABEL_18:
    (*(void (**)(char *, uint64_t))(v37 + 8))(v77, v50);
    return sub_100018FE8(v48);
  }
  swift_errorRelease();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56))(v35, 1, 1, v36);
  sub_10002B754((uint64_t)v35, &qword_10069D8B8);
LABEL_3:
  uint64_t v45 = type metadata accessor for DecodingError();
  swift_allocError();
  uint64_t v47 = v46;
  DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v45 - 8) + 104))(v47, enum case for DecodingError.dataCorrupted(_:), v45);
  swift_willThrow();
  uint64_t v48 = (uint64_t)v125;
  return sub_100018FE8(v48);
}

void sub_10019DF9C(void *a1)
{
  uint64_t v2 = sub_10002F214(&qword_10069D8E0);
  uint64_t v103 = *(void *)(v2 - 8);
  uint64_t v104 = v2;
  uint64_t v3 = __chkstk_darwin(v2);
  unint64_t v95 = (char *)&v90 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  int v94 = (char *)&v90 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v98 = (char *)&v90 - v8;
  __chkstk_darwin(v7);
  id v97 = (char *)&v90 - v9;
  uint64_t v10 = sub_10002F214(&qword_10069D8E8);
  uint64_t v100 = *(void *)(v10 - 8);
  uint64_t v101 = v10;
  uint64_t v11 = __chkstk_darwin(v10);
  id v91 = (char *)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  id v99 = (char *)&v90 - v13;
  uint64_t v14 = type metadata accessor for URL();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v105 = v14;
  uint64_t v106 = v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v93 = (char *)&v90 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v92 = (char *)&v90 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v96 = (char *)&v90 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  Swift::Int v90 = (char *)&v90 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v90 - v25;
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v29 = (char *)&v90 - v28;
  uint64_t v30 = __chkstk_darwin(v27);
  uint64_t v102 = (char *)&v90 - v31;
  __chkstk_darwin(v30);
  uint64_t v33 = (char *)&v90 - v32;
  uint64_t v34 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
  __chkstk_darwin(v34);
  uint64_t v36 = (char *)&v90 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_10002F214(&qword_10069D8F0);
  uint64_t v107 = *(void *)(v111 - 8);
  __chkstk_darwin(v111);
  uint64_t v38 = (char *)&v90 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10015E154(a1, a1[3]);
  sub_1001A0888();
  uint64_t v110 = v38;
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_100027604(v109, (uint64_t)v36, type metadata accessor for ICSelectionStateModel.ObjectSelection);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v51 = v105;
      uint64_t v50 = v106;
      (*(void (**)(char *, char *, uint64_t))(v106 + 32))(v29, v36, v105);
      char v115 = 1;
      sub_1001A08DC();
      uint64_t v52 = v97;
      unsigned int v54 = v110;
      uint64_t v53 = v111;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      sub_1001A046C(&qword_10069D888, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v55 = v104;
      uint64_t v56 = v108;
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      if (v56) {
        swift_errorRelease();
      }
      (*(void (**)(char *, uint64_t))(v103 + 8))(v52, v55);
      (*(void (**)(char *, uint64_t))(v50 + 8))(v29, v51);
      (*(void (**)(char *, uint64_t))(v107 + 8))(v54, v53);
      break;
    case 2u:
      uint64_t v58 = v105;
      uint64_t v57 = v106;
      (*(void (**)(char *, char *, uint64_t))(v106 + 32))(v26, v36, v105);
      char v116 = 2;
      sub_1001A08DC();
      uint64_t v59 = v98;
      uint64_t v61 = v110;
      uint64_t v60 = v111;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      sub_1001A046C(&qword_10069D888, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v62 = v104;
      uint64_t v63 = v108;
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      if (v63) {
        swift_errorRelease();
      }
      (*(void (**)(char *, uint64_t))(v103 + 8))(v59, v62);
      (*(void (**)(char *, uint64_t))(v57 + 8))(v26, v58);
      (*(void (**)(char *, uint64_t))(v107 + 8))(v61, v60);
      break;
    case 3u:
      uint64_t v64 = *(void **)v36;
      uint64_t v65 = (void *)*((void *)v36 + 1);

      if (v64)
      {
        if (v65)
        {
          char v119 = 0;
          sub_1001A0930();
          id v66 = v64;
          id v67 = v65;
          uint64_t v68 = v91;
          KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          id v69 = [v66 URIRepresentation];
          id v70 = v90;
          static URL._unconditionallyBridgeFromObjectiveC(_:)();

          char v118 = 0;
          sub_1001A046C(&qword_10069D888, (void (*)(uint64_t))&type metadata accessor for URL);
          uint64_t v71 = v108;
          KeyedEncodingContainer.encode<A>(_:forKey:)();
          uint64_t v72 = v71;
          if (v71)
          {
            swift_errorRelease();
            uint64_t v72 = 0;
          }
          uint64_t v73 = v105;
          uint64_t v74 = *(void (**)(char *, uint64_t))(v106 + 8);
          v106 += 8;
          v74(v70, v105);
          uint64_t v75 = v73;
          id v76 = [v67 URIRepresentation];
          static URL._unconditionallyBridgeFromObjectiveC(_:)();

          char v117 = 1;
          KeyedEncodingContainer.encode<A>(_:forKey:)();

          if (v72) {
            swift_errorRelease();
          }
          v74(v96, v75);
          (*(void (**)(char *, uint64_t))(v100 + 8))(v68, v101);
          (*(void (**)(char *, uint64_t))(v107 + 8))(v110, v111);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v107 + 8))(v110, v111);
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v107 + 8))(v110, v111);
      }
      break;
    case 4u:
      uint64_t v77 = *(void **)v36;

      if (!v77) {
        goto LABEL_23;
      }
      char v120 = 1;
      sub_1001A08DC();
      id v78 = v77;
      uint64_t v79 = v94;
      uint64_t v81 = v110;
      uint64_t v80 = v111;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      id v82 = [v78 URIRepresentation];
      uint64_t v83 = v92;
      goto LABEL_21;
    case 5u:
      unint64_t v84 = *(void **)v36;

      if (v84)
      {
        char v121 = 2;
        sub_1001A08DC();
        id v78 = v84;
        uint64_t v79 = v95;
        uint64_t v81 = v110;
        uint64_t v80 = v111;
        KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
        id v82 = [v78 URIRepresentation];
        uint64_t v83 = v93;
LABEL_21:
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        sub_1001A046C(&qword_10069D888, (void (*)(uint64_t))&type metadata accessor for URL);
        uint64_t v86 = v104;
        uint64_t v85 = v105;
        uint64_t v87 = v108;
        KeyedEncodingContainer.encode<A>(_:forKey:)();

        if (v87) {
          swift_errorRelease();
        }
        uint64_t v88 = v107;
        uint64_t v89 = v103;
        (*(void (**)(char *, uint64_t))(v106 + 8))(v83, v85);
        (*(void (**)(char *, uint64_t))(v89 + 8))(v79, v86);
        (*(void (**)(char *, uint64_t))(v88 + 8))(v81, v80);
      }
      else
      {
LABEL_23:
        (*(void (**)(char *, uint64_t))(v107 + 8))(v110, v111);
      }
      break;
    default:
      char v39 = &v36[*(int *)(sub_10002F214(&qword_10069D738) + 48)];
      uint64_t v40 = v106;
      uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v106 + 32);
      uint64_t v42 = v36;
      uint64_t v43 = v105;
      v41(v33, v42, v105);
      v41(v102, v39, v43);
      char v114 = 0;
      sub_1001A0930();
      uint64_t v44 = v99;
      uint64_t v46 = v110;
      uint64_t v45 = v111;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      char v113 = 0;
      sub_1001A046C(&qword_10069D888, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v47 = v101;
      uint64_t v48 = v108;
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      if (v48) {
        swift_errorRelease();
      }
      char v112 = 1;
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      (*(void (**)(char *, uint64_t))(v100 + 8))(v44, v47);
      uint64_t v49 = *(void (**)(char *, uint64_t))(v40 + 8);
      v49(v102, v43);
      v49(v33, v43);
      (*(void (**)(char *, uint64_t))(v107 + 8))(v46, v45);
      break;
  }
}

uint64_t sub_10019EC10@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10019CE50(a1, a2);
}

void sub_10019EC28(void *a1)
{
}

uint64_t sub_10019EC44()
{
  unint64_t v1 = 0xD000000000000017;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000012;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x65646F4373676174;
  }
}

uint64_t sub_10019ECB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1001A51E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10019ECDC(uint64_t a1)
{
  unint64_t v2 = sub_1001A1EFC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10019ED18(uint64_t a1)
{
  unint64_t v2 = sub_1001A1EFC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10019ED54()
{
  if (*v0) {
    return 0x55746E756F636361;
  }
  else {
    return 1701869940;
  }
}

uint64_t sub_10019ED8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1001A5344(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10019EDB4(uint64_t a1)
{
  unint64_t v2 = sub_1001A1F50();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10019EDF0(uint64_t a1)
{
  unint64_t v2 = sub_1001A1F50();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10019EE2C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v65 = a2;
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v69 = *(void *)(v3 - 8);
  uint64_t v70 = v3;
  __chkstk_darwin(v3);
  uint64_t v62 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002F214(&qword_10069B310);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  id v67 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v63 = (char *)&v60 - v8;
  uint64_t v9 = sub_10002F214(&qword_10069D8F8);
  __chkstk_darwin(v9 - 8);
  uint64_t v71 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_10002F214(&qword_10069D900);
  uint64_t v68 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  uint64_t v64 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10002F214(&qword_10069D908);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10002F214(&qword_10069D910);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = a1[3];
  uint64_t v72 = a1;
  sub_10015E154(a1, v22);
  sub_1001A1EFC();
  uint64_t v23 = v73;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v23)
  {
    uint64_t v29 = v71;
    uint64_t v61 = (uint64_t *)v21;
    uint64_t v73 = v19;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
    uint64_t v30 = v18;
    uint64_t v31 = KeyedDecodingContainer.allKeys.getter();
    uint64_t v32 = v15;
    if (!*(void *)(v31 + 16))
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      goto LABEL_3;
    }
    int v33 = *(unsigned __int8 *)(v31 + 32);
    swift_bridgeObjectRelease();
    if (v33)
    {
      if (v33 == 1)
      {
        LOBYTE(v74) = 1;
        sub_1001A1F50();
        KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
        uint64_t v37 = v32;
        uint64_t v38 = v68;
        char v39 = v29;
        uint64_t v40 = v29;
        uint64_t v41 = v66;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v68 + 56))(v39, 0, 1, v66);
        uint64_t v42 = v64;
        (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v64, v40, v41);
        LOBYTE(v74) = 0;
        uint64_t v53 = KeyedDecodingContainer.decode(_:forKey:)();
        uint64_t v55 = v54;
        LOBYTE(v74) = 1;
        sub_1001A046C(&qword_10069D840, (void (*)(uint64_t))&type metadata accessor for URL);
        KeyedDecodingContainer.decode<A>(_:forKey:)();
        (*(void (**)(char *, uint64_t))(v68 + 8))(v42, v41);
        (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v37);
        uint64_t v56 = v65;
        uint64_t v57 = v61;
        uint64_t v58 = (uint64_t)v63;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v69 + 56))(v63, 0, 1, v70);
        uint64_t v59 = (uint64_t)v57 + *(int *)(sub_10002F214(&qword_10069D688) + 48);
        *uint64_t v57 = v53;
        v57[1] = v55;
        sub_100192ED0(v58, v59);
        uint64_t v27 = (uint64_t)v72;
LABEL_15:
        swift_storeEnumTagMultiPayload();
        sub_10002EF54((uint64_t)v57, v56, type metadata accessor for ICSelectionStateModel.ContainerSelection);
        return sub_100018FE8(v27);
      }
      LOBYTE(v74) = 2;
      sub_1001A046C(&qword_10069D840, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v34 = (uint64_t)v67;
      uint64_t v35 = v70;
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      uint64_t v36 = v32;
      uint64_t v46 = v69;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v69 + 56))(v34, 0, 1, v35);
      int v47 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v34, 1, v35);
      uint64_t v27 = (uint64_t)v72;
      if (v47 == 1)
      {
        sub_10002B754(v34, &qword_10069B310);
        uint64_t v48 = type metadata accessor for DecodingError();
        swift_allocError();
        uint64_t v50 = v49;
        KeyedDecodingContainer.codingPath.getter();
        DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v48 - 8) + 104))(v50, enum case for DecodingError.dataCorrupted(_:), v48);
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v16 + 8))(v30, v36);
        return sub_100018FE8(v27);
      }
      (*(void (**)(char *, uint64_t))(v16 + 8))(v30, v36);
      uint64_t v51 = *(void (**)(char *, uint64_t, uint64_t))(v46 + 32);
      uint64_t v52 = v62;
      v51(v62, v34, v35);
      uint64_t v57 = v61;
      v51((char *)v61, (uint64_t)v52, v35);
    }
    else
    {
      char v76 = 0;
      sub_100173218();
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      uint64_t v43 = v32;
      uint64_t v45 = v74;
      uint64_t v44 = v75;
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v43);
      uint64_t v57 = v61;
      *uint64_t v61 = v45;
      v57[1] = v44;
      uint64_t v27 = (uint64_t)v72;
    }
    uint64_t v56 = v65;
    goto LABEL_15;
  }
  swift_errorRelease();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
  sub_10002B754((uint64_t)v14, &qword_10069D908);
LABEL_3:
  uint64_t v24 = type metadata accessor for DecodingError();
  swift_allocError();
  uint64_t v26 = v25;
  DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v24 - 8) + 104))(v26, enum case for DecodingError.dataCorrupted(_:), v24);
  swift_willThrow();
  uint64_t v27 = (uint64_t)v72;
  return sub_100018FE8(v27);
}

uint64_t sub_10019F92C(void *a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v86 = *(void *)(v2 - 8);
  uint64_t v87 = v2;
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v79 = (char *)&v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  id v78 = (char *)&v77 - v6;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v77 - v7;
  uint64_t v9 = sub_10002F214(&qword_10069D928);
  uint64_t v84 = *(void *)(v9 - 8);
  uint64_t v85 = v9;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v81 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  id v82 = (char *)&v77 - v12;
  uint64_t v83 = sub_10002F214(&qword_10069B310);
  uint64_t v13 = __chkstk_darwin(v83);
  uint64_t v15 = (char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v80 = (char *)&v77 - v17;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v77 - v18;
  uint64_t v20 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
  __chkstk_darwin(v20);
  uint64_t v22 = (id *)((char *)&v77 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v91 = sub_10002F214(&qword_10069D930);
  uint64_t v88 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  uint64_t v24 = (char *)&v77 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10015E154(a1, a1[3]);
  sub_1001A1EFC();
  Swift::Int v90 = v24;
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_100027604(v92, (uint64_t)v22, type metadata accessor for ICSelectionStateModel.ContainerSelection);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v32 = sub_10002F214(&qword_10069D688);
      sub_100192ED0((uint64_t)v22 + *(int *)(v32 + 48), (uint64_t)v19);
      LOBYTE(v93) = 1;
      sub_1001A1F50();
      int v33 = v82;
      uint64_t v35 = v90;
      uint64_t v34 = v91;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      LOBYTE(v93) = 0;
      uint64_t v36 = v33;
      uint64_t v37 = v85;
      uint64_t v38 = v89;
      KeyedEncodingContainer.encode(_:forKey:)();
      uint64_t v39 = v38;
      if (v38)
      {
        swift_errorRelease();
        uint64_t v39 = 0;
      }
      swift_bridgeObjectRelease();
      LOBYTE(v93) = 1;
      sub_1001A07E4();
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      if (v39) {
        swift_errorRelease();
      }
      (*(void (**)(char *, uint64_t))(v84 + 8))(v36, v37);
      sub_10002B754((uint64_t)v19, &qword_10069B310);
      return (*(uint64_t (**)(char *, uint64_t))(v88 + 8))(v35, v34);
    case 2u:
      uint64_t v41 = v86;
      uint64_t v40 = v87;
      (*(void (**)(char *, id *, uint64_t))(v86 + 32))(v8, v22, v87);
      LOBYTE(v93) = 2;
      sub_1001A046C(&qword_10069D888, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v43 = v90;
      uint64_t v42 = v91;
      uint64_t v44 = v89;
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      if (v44) {
        swift_errorRelease();
      }
      (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v40);
      return (*(uint64_t (**)(char *, uint64_t))(v88 + 8))(v43, v42);
    case 3u:
      id v45 = *v22;

      int v47 = v90;
      uint64_t v46 = v91;
      if (!v45) {
        return (*(uint64_t (**)(char *, uint64_t))(v88 + 8))(v47, v46);
      }
      id v48 = [v45 dataRepresentation];
      if (v48)
      {
        uint64_t v49 = v48;
        uint64_t v50 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v26 = v51;

        uint64_t v93 = v50;
        unint64_t v94 = v26;
        char v95 = 0;
        sub_10017326C();
        uint64_t v52 = v89;
        KeyedEncodingContainer.encode<A>(_:forKey:)();
        if (!v52)
        {
          (*(void (**)(char *, uint64_t))(v88 + 8))(v47, v46);

          uint64_t v30 = v50;
          return sub_10017253C(v30, v26);
        }

        swift_errorRelease();
        (*(void (**)(char *, uint64_t))(v88 + 8))(v47, v46);
        return sub_10017253C(v50, v26);
      }
      else
      {

        return (*(uint64_t (**)(char *, uint64_t))(v88 + 8))(v47, v46);
      }
    case 4u:
      id v53 = *v22;

      if (!v53) {
        return (*(uint64_t (**)(char *, uint64_t))(v88 + 8))(v90, v91);
      }
      LOBYTE(v93) = 1;
      sub_1001A1F50();
      id v54 = v53;
      uint64_t v55 = v81;
      uint64_t v56 = v90;
      uint64_t v57 = v91;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      id v58 = [v54 type];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      LOBYTE(v93) = 0;
      uint64_t v59 = v89;
      KeyedEncodingContainer.encode(_:forKey:)();
      swift_bridgeObjectRelease();
      if (v59) {
        swift_errorRelease();
      }
      uint64_t v71 = (uint64_t)v80;
      id v72 = [v54 accountObjectID];
      if (v72)
      {
        uint64_t v73 = v72;
        id v74 = [v72 URIRepresentation];

        static URL._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v75 = 0;
      }
      else
      {
        uint64_t v75 = 1;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v86 + 56))(v71, v75, 1, v87);
      LOBYTE(v93) = 1;
      sub_1001A07E4();
      uint64_t v76 = v85;
      KeyedEncodingContainer.encode<A>(_:forKey:)();

      sub_10002B754(v71, &qword_10069B310);
      (*(void (**)(char *, uint64_t))(v84 + 8))(v55, v76);
      return (*(uint64_t (**)(char *, uint64_t))(v88 + 8))(v56, v57);
    case 5u:
      id v60 = *v22;

      if (!v60)
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v86 + 56))(v15, 1, 1, v87);
        goto LABEL_26;
      }
      id v61 = [v60 URIRepresentation];
      uint64_t v62 = v79;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v63 = v86;
      uint64_t v64 = *(void (**)(char *, char *, uint64_t))(v86 + 32);
      uint64_t v65 = v62;
      uint64_t v66 = v87;
      v64(v15, v65, v87);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v15, 0, 1, v66);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v15, 1, v66) == 1)
      {

LABEL_26:
        (*(void (**)(char *, uint64_t))(v88 + 8))(v90, v91);
        return sub_10002B754((uint64_t)v15, &qword_10069B310);
      }
      id v67 = v78;
      v64(v78, v15, v66);
      LOBYTE(v93) = 2;
      sub_1001A046C(&qword_10069D888, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v69 = v90;
      uint64_t v68 = v91;
      uint64_t v70 = v89;
      KeyedEncodingContainer.encode<A>(_:forKey:)();

      if (v70) {
        swift_errorRelease();
      }
      (*(void (**)(char *, uint64_t))(v63 + 8))(v67, v66);
      return (*(uint64_t (**)(char *, uint64_t))(v88 + 8))(v69, v68);
    default:
      uint64_t v25 = (uint64_t)*v22;
      unint64_t v26 = (unint64_t)v22[1];
      uint64_t v93 = v25;
      unint64_t v94 = v26;
      char v95 = 0;
      sub_10017326C();
      uint64_t v28 = v90;
      uint64_t v27 = v91;
      uint64_t v29 = v89;
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      if (v29) {
        swift_errorRelease();
      }
      (*(void (**)(char *, uint64_t))(v88 + 8))(v28, v27);
      uint64_t v30 = v25;
      return sub_10017253C(v30, v26);
  }
}

uint64_t sub_1001A03E4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10019EE2C(a1, a2);
}

uint64_t sub_1001A03FC(void *a1)
{
  return sub_10019F92C(a1);
}

unint64_t sub_1001A0418()
{
  unint64_t result = qword_10069D810;
  if (!qword_10069D810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069D810);
  }
  return result;
}

uint64_t sub_1001A046C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001A04B4()
{
  unint64_t result = qword_10069D828;
  if (!qword_10069D828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069D828);
  }
  return result;
}

unint64_t sub_1001A0508()
{
  unint64_t result = qword_10069D850;
  if (!qword_10069D850)
  {
    sub_10001DFF4(&qword_10069D7F8);
    sub_1001A046C(&qword_10069D858, (void (*)(uint64_t))type metadata accessor for ICSelectionStateModel.ObjectSelection);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069D850);
  }
  return result;
}

unint64_t sub_1001A05AC()
{
  unint64_t result = qword_10069D860;
  if (!qword_10069D860)
  {
    sub_10001DFF4(&qword_10069D7F0);
    sub_1001A046C(&qword_10069D868, (void (*)(uint64_t))type metadata accessor for ICSelectionStateModel.ContainerSelection);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069D860);
  }
  return result;
}

unint64_t sub_1001A0650()
{
  unint64_t result = qword_10069D870;
  if (!qword_10069D870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069D870);
  }
  return result;
}

unint64_t sub_1001A06A4()
{
  unint64_t result = qword_10069D878;
  if (!qword_10069D878)
  {
    sub_10001DFF4((uint64_t *)&unk_1006A2AC0);
    sub_1001A0750(&qword_10069D880, &qword_10069D888);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069D878);
  }
  return result;
}

uint64_t sub_1001A0750(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001DFF4(&qword_10069D830);
    sub_1001A046C(a2, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001A07E4()
{
  unint64_t result = qword_10069D890;
  if (!qword_10069D890)
  {
    sub_10001DFF4(&qword_10069B310);
    sub_1001A046C(&qword_10069D888, (void (*)(uint64_t))&type metadata accessor for URL);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069D890);
  }
  return result;
}

unint64_t sub_1001A0888()
{
  unint64_t result = qword_10069D8C8;
  if (!qword_10069D8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069D8C8);
  }
  return result;
}

unint64_t sub_1001A08DC()
{
  unint64_t result = qword_10069D8D0;
  if (!qword_10069D8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069D8D0);
  }
  return result;
}

unint64_t sub_1001A0930()
{
  unint64_t result = qword_10069D8D8;
  if (!qword_10069D8D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069D8D8);
  }
  return result;
}

id sub_1001A0984@<X0>(void *a1@<X8>)
{
  id result = [objc_allocWithZone(v1) init];
  *a1 = result;
  return result;
}

void sub_1001A09BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = a1;
  unint64_t v4 = a2 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0) {
      a2 = a1;
    }
    else {
      a2 = a1 & 0xFFFFFFFFFFFFFF8;
    }
    if (v4)
    {
      if (v2 < 0) {
        a1 = v2;
      }
      else {
        a1 = v2 & 0xFFFFFFFFFFFFFF8;
      }
      goto _$ss17__CocoaDictionaryV7isEqual2toSbAB_tF;
    }
    uint64_t v5 = a2;
    uint64_t v6 = v2;
    goto LABEL_18;
  }
  if (v4)
  {
    if (a2 < 0) {
      uint64_t v5 = a2;
    }
    else {
      uint64_t v5 = a2 & 0xFFFFFFFFFFFFFF8;
    }
    uint64_t v6 = v3;
LABEL_18:
    sub_1001A0C4C(v5, v6);
    return;
  }
  if (a1 == a2 || *(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return;
  }
  int64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(a1 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v7 << 6);
      goto LABEL_44;
    }
    int64_t v15 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_51;
    }
    if (v15 >= v12) {
      return;
    }
    unint64_t v16 = *(void *)(v8 + 8 * v15);
    ++v7;
    if (!v16)
    {
      int64_t v7 = v15 + 1;
      if (v15 + 1 >= v12) {
        return;
      }
      unint64_t v16 = *(void *)(v8 + 8 * v7);
      if (!v16)
      {
        int64_t v7 = v15 + 2;
        if (v15 + 2 >= v12) {
          return;
        }
        unint64_t v16 = *(void *)(v8 + 8 * v7);
        if (!v16)
        {
          int64_t v7 = v15 + 3;
          if (v15 + 3 >= v12) {
            return;
          }
          unint64_t v16 = *(void *)(v8 + 8 * v7);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_43:
    unint64_t v11 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v7 << 6);
LABEL_44:
    uint64_t v18 = 8 * v14;
    uint64_t v19 = *(void **)(*(void *)(v3 + 56) + v18);
    id v20 = *(id *)(*(void *)(v3 + 48) + v18);
    id v21 = v19;
    unint64_t v22 = sub_1002B65BC((uint64_t)v20);
    char v24 = v23;

    if ((v24 & 1) == 0)
    {

      return;
    }
    sub_100031418(0, (unint64_t *)&qword_10069E810);
    id v25 = *(id *)(*(void *)(v2 + 56) + 8 * v22);
    char v26 = static NSObject.== infix(_:_:)();

    if ((v26 & 1) == 0) {
      return;
    }
  }
  int64_t v17 = v15 + 4;
  if (v17 >= v12) {
    return;
  }
  unint64_t v16 = *(void *)(v8 + 8 * v17);
  if (v16)
  {
    int64_t v7 = v17;
    goto LABEL_43;
  }
  while (1)
  {
    int64_t v7 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v7 >= v12) {
      return;
    }
    unint64_t v16 = *(void *)(v8 + 8 * v7);
    ++v17;
    if (v16) {
      goto LABEL_43;
    }
  }
LABEL_51:
  __break(1u);
_$ss17__CocoaDictionaryV7isEqual2toSbAB_tF:
  __CocoaDictionary.isEqual(to:)(a1, a2);
}

void sub_1001A0C4C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  if (v3 != __CocoaDictionary.count.getter()) {
    return;
  }
  int64_t v4 = 0;
  uint64_t v5 = a2 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a2 + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_19;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v12 >= v9) {
      return;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13) {
        break;
      }
    }
LABEL_18:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_19:
    uint64_t v15 = 8 * v11;
    unint64_t v16 = *(void **)(*(void *)(a2 + 56) + v15);
    id v17 = *(id *)(*(void *)(a2 + 48) + v15);
    id v18 = v16;
    uint64_t v19 = __CocoaDictionary.lookup(_:)();

    if (!v19)
    {

      return;
    }
    sub_100031418(0, (unint64_t *)&qword_10069E810);
    swift_dynamicCast();
    char v20 = static NSObject.== infix(_:_:)();

    if ((v20 & 1) == 0) {
      return;
    }
  }
  int64_t v14 = v12 + 2;
  if (v14 >= v9) {
    return;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_18;
    }
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_1001A0E30@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_100172484(a2, a3);
      unint64_t v10 = (char *)__DataStorage._bytes.getter();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = __DataStorage._offset.getter();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = __DataStorage._length.getter();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x1001A1094);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_10017253C(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      id v17 = (char *)__DataStorage._bytes.getter();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = __DataStorage._offset.getter();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = __DataStorage._length.getter();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_1001A10A4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1) {
        __break(1u);
      }
      sub_100172484(a1, a2);
      char v5 = sub_1001A1FA4((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
      sub_10017253C(a1, a2);
      goto LABEL_6;
    case 2uLL:
      uint64_t v10 = a2 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v12 = *(void *)(a1 + 24);
      swift_retain();
      swift_retain();
      char v5 = sub_1001A1FA4(v11, v12, v10, a3, a4);
      swift_release();
      swift_release();
LABEL_6:
      sub_10017253C(a3, a4);
      return v5 & 1;
    case 3uLL:
      memset(__s1, 0, 14);
      goto LABEL_8;
    default:
      __s1[0] = a1;
      LOWORD(__s1[1]) = a2;
      BYTE2(__s1[1]) = BYTE2(a2);
      BYTE3(__s1[1]) = BYTE3(a2);
      BYTE4(__s1[1]) = BYTE4(a2);
      BYTE5(__s1[1]) = BYTE5(a2);
LABEL_8:
      sub_1001A0E30((uint64_t)__s1, a3, a4, &v14);
      sub_10017253C(a3, a4);
      if (!v4) {
        char v5 = v14;
      }
      return v5 & 1;
  }
}

uint64_t sub_1001A12D4(uint64_t a1, uint64_t a2)
{
  uint64_t v129 = a2;
  uint64_t v131 = a1;
  uint64_t v132 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
  uint64_t v2 = __chkstk_darwin(v132);
  char v118 = (void **)((char *)&v110 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v119 = (uint64_t)&v110 - v5;
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v116 = (uint64_t)&v110 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v125 = (char *)&v110 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v123 = (char *)&v110 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v122 = (char *)&v110 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  char v127 = (char *)&v110 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v124 = (uint64_t)&v110 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v130 = (uint64_t)&v110 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v126 = (char *)&v110 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  char v24 = (char *)&v110 - v23;
  __chkstk_darwin(v22);
  __int16 v26 = (char *)&v110 - v25;
  uint64_t v27 = type metadata accessor for URL();
  char v128 = *(void **)(v27 - 8);
  uint64_t v28 = __chkstk_darwin(v27);
  char v30 = (char *)&v110 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __chkstk_darwin(v28);
  char v120 = (char *)&v110 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  char v117 = (char *)&v110 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  char v121 = (char *)&v110 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v39 = (char *)&v110 - v38;
  uint64_t v40 = __chkstk_darwin(v37);
  uint64_t v42 = (char *)&v110 - v41;
  uint64_t v43 = __chkstk_darwin(v40);
  id v45 = (char *)&v110 - v44;
  uint64_t v46 = __chkstk_darwin(v43);
  id v48 = (char *)&v110 - v47;
  uint64_t v49 = __chkstk_darwin(v46);
  unint64_t v51 = (char *)&v110 - v50;
  __chkstk_darwin(v49);
  id v53 = (char *)&v110 - v52;
  sub_100027604(v131, (uint64_t)v26, type metadata accessor for ICSelectionStateModel.ObjectSelection);
  if (swift_getEnumCaseMultiPayload())
  {
    char v24 = v26;
    uint64_t v55 = (uint64_t)v127;
    id v54 = v128;
    uint64_t v56 = v30;
    goto LABEL_5;
  }
  char v114 = v48;
  char v115 = v45;
  uint64_t v111 = v42;
  char v112 = v39;
  char v113 = v30;
  uint64_t v110 = sub_10002F214(&qword_10069D738);
  uint64_t v57 = &v26[*(int *)(v110 + 48)];
  uint64_t v58 = v129;
  uint64_t v59 = (void (*)(char *, char *, uint64_t))v128[4];
  v59(v53, v26, v27);
  v59(v51, v57, v27);
  sub_100027604(v58, (uint64_t)v24, type metadata accessor for ICSelectionStateModel.ObjectSelection);
  if (swift_getEnumCaseMultiPayload())
  {
    id v60 = v128;
    id v61 = (void (*)(char *, uint64_t))v128[1];
    v61(v51, v27);
    v61(v53, v27);
    id v54 = v60;
    uint64_t v55 = (uint64_t)v127;
    uint64_t v56 = v113;
LABEL_5:
    uint64_t v62 = (uint64_t)v126;
    sub_10002EA18((uint64_t)v24, type metadata accessor for ICSelectionStateModel.ObjectSelection);
    sub_100027604(v131, v62, type metadata accessor for ICSelectionStateModel.ObjectSelection);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v63 = v54;
      uint64_t v64 = (void (*)(char *, uint64_t, uint64_t))v54[4];
      uint64_t v65 = v121;
      v64(v121, v62, v27);
      sub_100027604(v129, v130, type metadata accessor for ICSelectionStateModel.ObjectSelection);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v66 = v117;
        v64(v117, v130, v27);
        char v67 = static URL.== infix(_:_:)();
        uint64_t v68 = (void (*)(char *, uint64_t))v63[1];
        v68(v66, v27);
        uint64_t v69 = v65;
LABEL_13:
        v68(v69, v27);
        return v67 & 1;
      }
      ((void (*)(char *, uint64_t))v63[1])(v65, v27);
      id v54 = v63;
    }
    else
    {
      uint64_t v130 = v62;
    }
    sub_10002EA18(v130, type metadata accessor for ICSelectionStateModel.ObjectSelection);
    uint64_t v70 = v124;
    sub_100027604(v131, v124, type metadata accessor for ICSelectionStateModel.ObjectSelection);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v72 = (uint64_t)v125;
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v73 = v56;
      uint64_t v74 = v70;
      uint64_t v75 = v54;
      uint64_t v76 = (void (*)(char *, uint64_t, uint64_t))v54[4];
      uint64_t v77 = v120;
      v76(v120, v74, v27);
      sub_100027604(v129, v55, type metadata accessor for ICSelectionStateModel.ObjectSelection);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        v76(v73, v55, v27);
        char v67 = static URL.== infix(_:_:)();
        uint64_t v68 = (void (*)(char *, uint64_t))v75[1];
        v68(v73, v27);
        uint64_t v69 = v77;
        goto LABEL_13;
      }
      ((void (*)(char *, uint64_t))v75[1])(v77, v27);
    }
    else
    {
      uint64_t v55 = v70;
    }
    uint64_t v79 = (uint64_t)v122;
    uint64_t v78 = (uint64_t)v123;
    sub_10002EA18(v55, type metadata accessor for ICSelectionStateModel.ObjectSelection);
    sub_100027604(v131, v79, type metadata accessor for ICSelectionStateModel.ObjectSelection);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      uint64_t v80 = *(void **)v79;
      uint64_t v81 = *(void **)(v79 + 8);

      sub_100027604(v129, v78, type metadata accessor for ICSelectionStateModel.ObjectSelection);
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        id v82 = *(void **)v78;
        uint64_t v83 = *(void **)(v78 + 8);

        if (v80)
        {
          if (!v82)
          {

            goto LABEL_50;
          }
          sub_100031418(0, (unint64_t *)&qword_10069E810);
          id v84 = v82;
          id v85 = v80;
          char v86 = static NSObject.== infix(_:_:)();

          if ((v86 & 1) == 0)
          {

LABEL_50:
            goto LABEL_51;
          }
        }
        else if (v82)
        {

          goto LABEL_50;
        }
        if (v81)
        {
          if (v83)
          {
            sub_100031418(0, (unint64_t *)&qword_10069E810);
            id v107 = v83;
            id v108 = v81;
            char v67 = static NSObject.== infix(_:_:)();

            return v67 & 1;
          }

LABEL_51:
          char v67 = 0;
          return v67 & 1;
        }

        if (v83)
        {

          goto LABEL_51;
        }
LABEL_55:
        char v67 = 1;
        return v67 & 1;
      }
    }
    else
    {
      uint64_t v78 = v79;
    }
    sub_10002EA18(v78, type metadata accessor for ICSelectionStateModel.ObjectSelection);
    sub_100027604(v131, v72, type metadata accessor for ICSelectionStateModel.ObjectSelection);
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      id v97 = *(void **)v72;

      uint64_t v98 = v116;
      sub_100027604(v129, v116, type metadata accessor for ICSelectionStateModel.ObjectSelection);
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        id v99 = *(void **)v98;

        if (v97)
        {
          if (v99)
          {
LABEL_30:
            sub_100031418(0, (unint64_t *)&qword_10069E810);
            id v100 = v99;
            id v101 = v97;
            char v67 = static NSObject.== infix(_:_:)();

            return v67 & 1;
          }
LABEL_37:

          goto LABEL_51;
        }
        goto LABEL_42;
      }

      uint64_t v102 = v98;
    }
    else
    {
      uint64_t v102 = v72;
    }
    sub_10002EA18(v102, type metadata accessor for ICSelectionStateModel.ObjectSelection);
    uint64_t v103 = v119;
    sub_100027604(v131, v119, type metadata accessor for ICSelectionStateModel.ObjectSelection);
    if (swift_getEnumCaseMultiPayload() != 5)
    {
      sub_10002EA18(v103, type metadata accessor for ICSelectionStateModel.ObjectSelection);
      goto LABEL_51;
    }
    id v97 = *(void **)v103;

    sub_100027604(v129, (uint64_t)v118, type metadata accessor for ICSelectionStateModel.ObjectSelection);
    if (swift_getEnumCaseMultiPayload() != 5)
    {

      sub_10002EA18((uint64_t)v118, type metadata accessor for ICSelectionStateModel.ObjectSelection);
      goto LABEL_51;
    }
    id v99 = *v118;

    if (v97)
    {
      if (v99) {
        goto LABEL_30;
      }
      goto LABEL_37;
    }
LABEL_42:
    if (v99)
    {

      goto LABEL_51;
    }
    goto LABEL_55;
  }
  uint64_t v87 = *(int *)(v110 + 48);
  uint64_t v132 = (uint64_t)v51;
  uint64_t v88 = &v24[v87];
  v59(v114, v24, v27);
  uint64_t v89 = v115;
  v59(v115, v88, v27);
  char v90 = static URL.== infix(_:_:)();
  uint64_t v91 = v128;
  uint64_t v92 = (void (*)(char *, uint64_t, uint64_t))v128[2];
  uint64_t v93 = v111;
  v92(v111, v132, v27);
  unint64_t v94 = v112;
  char v95 = v89;
  uint64_t v96 = v27;
  v92(v112, (uint64_t)v95, v27);
  if (v90) {
    char v67 = static URL.== infix(_:_:)();
  }
  else {
    char v67 = 0;
  }
  uint64_t v105 = v114;
  uint64_t v104 = v115;
  uint64_t v106 = (void (*)(char *, uint64_t))v91[1];
  v106(v94, v96);
  v106(v93, v96);
  v106(v104, v96);
  v106(v105, v96);
  v106((char *)v132, v96);
  v106(v53, v96);
  return v67 & 1;
}

unint64_t sub_1001A1EFC()
{
  unint64_t result = qword_10069D918;
  if (!qword_10069D918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069D918);
  }
  return result;
}

unint64_t sub_1001A1F50()
{
  unint64_t result = qword_10069D920;
  if (!qword_10069D920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069D920);
  }
  return result;
}

uint64_t sub_1001A1FA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = __DataStorage._bytes.getter();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = __DataStorage._offset.getter();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  __DataStorage._length.getter();
  sub_1001A0E30(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_1001A205C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
        JUMPOUT(0x1001A2198);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_20;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v15 = 1;
            }
            else
            {
              sub_100172484(a3, a4);
              char v15 = sub_1001A10A4(a1, a2, a3, a4);
            }
          }
          else
          {
            char v15 = 0;
          }
          return v15 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_21;
        case 3uLL:
          char v15 = v8 == 0;
          return v15 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_19;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_1001A21B8(uint64_t a1, uint64_t a2)
{
  uint64_t v112 = type metadata accessor for URL();
  uint64_t v115 = *(void *)(v112 - 8);
  uint64_t v4 = __chkstk_darwin(v112);
  uint64_t v102 = (char *)&v97 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v109 = (char *)&v97 - v7;
  __chkstk_darwin(v6);
  uint64_t v98 = (char *)&v97 - v8;
  uint64_t v101 = sub_10002F214(&qword_10069D938);
  __chkstk_darwin(v101);
  uint64_t v103 = (uint64_t)&v97 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10002F214(&qword_10069B310);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v99 = (uint64_t)&v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v107 = (uint64_t)&v97 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v108 = (uint64_t)&v97 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v104 = (uint64_t)&v97 - v18;
  __chkstk_darwin(v17);
  uint64_t v114 = (uint64_t)&v97 - v19;
  uint64_t v20 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v100 = (uint64_t)&v97 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v106 = (uint64_t)&v97 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v111 = (char *)&v97 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v110 = (uint64_t)&v97 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v105 = (id *)((char *)&v97 - v30);
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v33 = (id *)((char *)&v97 - v32);
  uint64_t v34 = __chkstk_darwin(v31);
  uint64_t v36 = (char *)&v97 - v35;
  uint64_t v37 = __chkstk_darwin(v34);
  uint64_t v39 = (char *)&v97 - v38;
  uint64_t v40 = __chkstk_darwin(v37);
  uint64_t v42 = (uint64_t *)((char *)&v97 - v41);
  uint64_t v43 = __chkstk_darwin(v40);
  id v45 = (uint64_t *)((char *)&v97 - v44);
  uint64_t v46 = __chkstk_darwin(v43);
  id v48 = (uint64_t *)((char *)&v97 - v47);
  __chkstk_darwin(v46);
  uint64_t v50 = (uint64_t *)((char *)&v97 - v49);
  sub_100027604(a1, (uint64_t)&v97 - v49, type metadata accessor for ICSelectionStateModel.ContainerSelection);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v113 = a1;
  if (EnumCaseMultiPayload)
  {
    id v48 = v50;
  }
  else
  {
    uint64_t v52 = *v50;
    unint64_t v53 = v50[1];
    sub_100027604(a2, (uint64_t)v48, type metadata accessor for ICSelectionStateModel.ContainerSelection);
    if (!swift_getEnumCaseMultiPayload())
    {
      uint64_t v74 = *v48;
      unint64_t v75 = v48[1];
      char v68 = sub_1001A205C(v52, v53, *v48, v75);
      sub_10017253C(v74, v75);
      sub_10017253C(v52, v53);
      return v68 & 1;
    }
    sub_10017253C(v52, v53);
    a1 = v113;
  }
  sub_10002EA18((uint64_t)v48, type metadata accessor for ICSelectionStateModel.ContainerSelection);
  sub_100027604(a1, (uint64_t)v45, type metadata accessor for ICSelectionStateModel.ContainerSelection);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v54 = *v45;
    uint64_t v97 = v45[1];
    uint64_t v55 = sub_10002F214(&qword_10069D688);
    uint64_t v56 = v114;
    sub_100192ED0((uint64_t)v45 + *(int *)(v55 + 48), v114);
    sub_100027604(a2, (uint64_t)v42, type metadata accessor for ICSelectionStateModel.ContainerSelection);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v58 = *v42;
      uint64_t v57 = v42[1];
      uint64_t v59 = v104;
      sub_100192ED0((uint64_t)v42 + *(int *)(v55 + 48), v104);
      if (v54 == v58 && v97 == v57)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v60 = v108;
        sub_10002F034(v114, v108, &qword_10069B310);
        uint64_t v61 = v107;
        sub_10002F034(v59, v107, &qword_10069B310);
      }
      else
      {
        char v81 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v82 = v114;
        uint64_t v60 = v108;
        sub_10002F034(v114, v108, &qword_10069B310);
        uint64_t v61 = v107;
        sub_10002F034(v59, v107, &qword_10069B310);
        if ((v81 & 1) == 0)
        {
          sub_10002B754(v61, &qword_10069B310);
          sub_10002B754(v60, &qword_10069B310);
          sub_10002B754(v59, &qword_10069B310);
          sub_10002B754(v82, &qword_10069B310);
          goto LABEL_54;
        }
      }
      uint64_t v83 = v103;
      uint64_t v84 = v103 + *(int *)(v101 + 48);
      sub_10002F034(v60, v103, &qword_10069B310);
      sub_10002F034(v61, v84, &qword_10069B310);
      uint64_t v85 = v115;
      char v86 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v115 + 48);
      uint64_t v87 = v112;
      if (v86(v83, 1, v112) == 1)
      {
        sub_10002B754(v61, &qword_10069B310);
        sub_10002B754(v60, &qword_10069B310);
        sub_10002B754(v59, &qword_10069B310);
        sub_10002B754(v114, &qword_10069B310);
        if (v86(v84, 1, v87) == 1)
        {
          sub_10002B754(v83, &qword_10069B310);
          char v68 = 1;
          return v68 & 1;
        }
      }
      else
      {
        uint64_t v93 = v99;
        sub_10002F034(v83, v99, &qword_10069B310);
        if (v86(v84, 1, v87) != 1)
        {
          unint64_t v94 = v98;
          (*(void (**)(char *, uint64_t, uint64_t))(v85 + 32))(v98, v84, v87);
          sub_1001A046C((unint64_t *)&qword_1006A4D60, (void (*)(uint64_t))&type metadata accessor for URL);
          char v68 = dispatch thunk of static Equatable.== infix(_:_:)();
          char v95 = *(void (**)(char *, uint64_t))(v85 + 8);
          v95(v94, v87);
          sub_10002B754(v107, &qword_10069B310);
          sub_10002B754(v108, &qword_10069B310);
          sub_10002B754(v59, &qword_10069B310);
          sub_10002B754(v114, &qword_10069B310);
          v95((char *)v93, v87);
          sub_10002B754(v83, &qword_10069B310);
          return v68 & 1;
        }
        sub_10002B754(v107, &qword_10069B310);
        sub_10002B754(v108, &qword_10069B310);
        sub_10002B754(v59, &qword_10069B310);
        sub_10002B754(v114, &qword_10069B310);
        (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v93, v87);
      }
      sub_10002B754(v83, &qword_10069D938);
LABEL_54:
      char v68 = 0;
      return v68 & 1;
    }
    sub_10002B754(v56, &qword_10069B310);
    swift_bridgeObjectRelease();
    uint64_t v62 = v115;
    a1 = v113;
  }
  else
  {
    uint64_t v42 = v45;
    uint64_t v62 = v115;
  }
  sub_10002EA18((uint64_t)v42, type metadata accessor for ICSelectionStateModel.ContainerSelection);
  sub_100027604(a1, (uint64_t)v39, type metadata accessor for ICSelectionStateModel.ContainerSelection);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    uint64_t v36 = v39;
    uint64_t v66 = a2;
    goto LABEL_17;
  }
  uint64_t v63 = *(void (**)(char *, char *, uint64_t))(v62 + 32);
  uint64_t v64 = v109;
  uint64_t v65 = v112;
  v63(v109, v39, v112);
  uint64_t v66 = a2;
  sub_100027604(a2, (uint64_t)v36, type metadata accessor for ICSelectionStateModel.ContainerSelection);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    (*(void (**)(char *, uint64_t))(v62 + 8))(v64, v65);
    a1 = v113;
LABEL_17:
    sub_10002EA18((uint64_t)v36, type metadata accessor for ICSelectionStateModel.ContainerSelection);
    sub_100027604(a1, (uint64_t)v33, type metadata accessor for ICSelectionStateModel.ContainerSelection);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      id v70 = *v33;

      uint64_t v33 = v105;
      sub_100027604(v66, (uint64_t)v105, type metadata accessor for ICSelectionStateModel.ContainerSelection);
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        id v71 = *v33;

        if (v70)
        {
          if (!v71)
          {

            goto LABEL_54;
          }
          sub_100031418(0, &qword_1006A2AF0);
          id v72 = v71;
          id v73 = v70;
LABEL_41:
          uint64_t v92 = v73;
          char v68 = static NSObject.== infix(_:_:)();

          return v68 & 1;
        }
LABEL_43:
        if (!v71)
        {
          char v68 = 1;
          return v68 & 1;
        }

        goto LABEL_54;
      }
    }
    sub_10002EA18((uint64_t)v33, type metadata accessor for ICSelectionStateModel.ContainerSelection);
    uint64_t v76 = v110;
    sub_100027604(a1, v110, type metadata accessor for ICSelectionStateModel.ContainerSelection);
    int v77 = swift_getEnumCaseMultiPayload();
    uint64_t v78 = (uint64_t)v111;
    if (v77 == 4)
    {
      uint64_t v79 = *(void **)v76;

      sub_100027604(v66, v78, type metadata accessor for ICSelectionStateModel.ContainerSelection);
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        id v71 = *(id *)v78;

        if (!v79) {
          goto LABEL_43;
        }
        if (v71)
        {
          uint64_t v80 = &qword_10069D940;
LABEL_40:
          sub_100031418(0, v80);
          id v72 = v71;
          id v73 = v79;
          goto LABEL_41;
        }
        goto LABEL_52;
      }
    }
    else
    {
      uint64_t v78 = v76;
    }
    sub_10002EA18(v78, type metadata accessor for ICSelectionStateModel.ContainerSelection);
    uint64_t v88 = a1;
    uint64_t v89 = v106;
    sub_100027604(v88, v106, type metadata accessor for ICSelectionStateModel.ContainerSelection);
    if (swift_getEnumCaseMultiPayload() != 5)
    {
      sub_10002EA18(v89, type metadata accessor for ICSelectionStateModel.ContainerSelection);
      goto LABEL_54;
    }
    uint64_t v79 = *(void **)v89;

    uint64_t v90 = v66;
    uint64_t v91 = v100;
    sub_100027604(v90, v100, type metadata accessor for ICSelectionStateModel.ContainerSelection);
    if (swift_getEnumCaseMultiPayload() != 5)
    {

      sub_10002EA18(v91, type metadata accessor for ICSelectionStateModel.ContainerSelection);
      goto LABEL_54;
    }
    id v71 = *(id *)v91;

    if (!v79) {
      goto LABEL_43;
    }
    if (v71)
    {
      uint64_t v80 = (unint64_t *)&qword_10069E810;
      goto LABEL_40;
    }
LABEL_52:

    goto LABEL_54;
  }
  char v67 = v102;
  v63(v102, v36, v65);
  char v68 = static URL.== infix(_:_:)();
  uint64_t v69 = *(void (**)(char *, uint64_t))(v62 + 8);
  v69(v67, v65);
  v69(v64, v65);
  return v68 & 1;
}

BOOL sub_1001A2EC8(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3 = sub_10002F034(a1, (uint64_t)v8, &qword_10069B4D0);
  if (!v9)
  {
    sub_10002B754((uint64_t)v8, &qword_10069B4D0);
    goto LABEL_5;
  }
  a2(v3);
  if (!swift_dynamicCast())
  {
LABEL_5:
    uint64_t v4 = 0;
    goto LABEL_6;
  }
  uint64_t v4 = v7;
LABEL_6:
  BOOL v5 = v4 != 0;

  return v5;
}

uint64_t sub_1001A2F60(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6669636570736E75 && a2 == 0xEB00000000646569;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1802398060 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1001A305C(uint64_t a1)
{
  uint64_t v2 = sub_10002F214(&qword_10069D958);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v22 = v2;
  uint64_t v23 = v3;
  __chkstk_darwin(v2);
  BOOL v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214(&qword_10069D960);
  uint64_t v25 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10002F214(&qword_10069D968);
  uint64_t v24 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10015E154((void *)a1, *(void *)(a1 + 24));
  sub_1001A34AC();
  uint64_t v12 = v26;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v12) {
    goto LABEL_7;
  }
  uint64_t v13 = v25;
  uint64_t v21 = v6;
  uint64_t v26 = a1;
  uint64_t v14 = KeyedDecodingContainer.allKeys.getter();
  if (*(void *)(v14 + 16) != 1)
  {
    uint64_t v16 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v18 = v17;
    sub_10002F214(&qword_10069D978);
    *uint64_t v18 = &type metadata for ICSelectionStateModel.SelectionReason;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v16 - 8) + 104))(v18, enum case for DecodingError.typeMismatch(_:), v16);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v9);
    a1 = v26;
LABEL_7:
    sub_100018FE8(a1);
    return a1;
  }
  a1 = *(unsigned __int8 *)(v14 + 32);
  if (a1)
  {
    LODWORD(v25) = *(unsigned __int8 *)(v14 + 32);
    char v28 = 1;
    sub_1001A3500();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    uint64_t v15 = v24;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v22);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v11, v9);
    a1 = v25;
  }
  else
  {
    char v27 = 0;
    sub_1001A3554();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    uint64_t v19 = v24;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v21);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
  }
  sub_100018FE8(v26);
  return a1;
}

unint64_t sub_1001A34AC()
{
  unint64_t result = qword_10069D970;
  if (!qword_10069D970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069D970);
  }
  return result;
}

unint64_t sub_1001A3500()
{
  unint64_t result = qword_10069D980;
  if (!qword_10069D980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069D980);
  }
  return result;
}

unint64_t sub_1001A3554()
{
  unint64_t result = qword_10069D988;
  if (!qword_10069D988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069D988);
  }
  return result;
}

uint64_t sub_1001A35A8(uint64_t a1, unint64_t a2)
{
  uint64_t result = 0;
  if (a2 >> 60 != 15)
  {
    type metadata accessor for JSONDecoder();
    swift_allocObject();
    sub_100172484(a1, a2);
    JSONDecoder.init()();
    sub_10002F214((uint64_t *)&unk_1006A2AA0);
    sub_1001A3F68();
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    sub_1001A3F54(a1, a2);
    swift_release();
    return v5;
  }
  return result;
}

uint64_t sub_1001A368C()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001A36C4()
{
  return sub_10038A960(*(void *)(v0 + 16));
}

uint64_t sub_1001A36CC()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_1001A36E0(uint64_t a1, uint64_t a2)
{
  uint64_t v67 = a2;
  uint64_t v64 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
  uint64_t v63 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v59 = (uint64_t)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_10002F214(&qword_10069D9A8);
  __chkstk_darwin(v61);
  uint64_t v65 = (uint64_t)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002F214(&qword_10069D7F0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v60 = (uint64_t)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v62 = (uint64_t)&v59 - v8;
  uint64_t v9 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10002F214((uint64_t *)&unk_10069E830);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10002F214(&qword_10069D7F8);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v59 - v21;
  uint64_t v66 = a1;
  uint64_t v23 = a1 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection;
  swift_beginAccess();
  sub_10002F034(v23, (uint64_t)v22, &qword_10069D7F8);
  uint64_t v24 = v67;
  uint64_t v25 = v67 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection;
  swift_beginAccess();
  uint64_t v26 = (uint64_t)&v16[*(int *)(v14 + 56)];
  sub_10002F034((uint64_t)v22, (uint64_t)v16, &qword_10069D7F8);
  sub_10002F034(v25, v26, &qword_10069D7F8);
  char v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (v27((uint64_t)v16, 1, v9) == 1)
  {
    sub_10002B754((uint64_t)v22, &qword_10069D7F8);
    if (v27(v26, 1, v9) == 1)
    {
      sub_10002B754((uint64_t)v16, &qword_10069D7F8);
      goto LABEL_8;
    }
LABEL_6:
    char v28 = (uint64_t *)&unk_10069E830;
    uint64_t v29 = (uint64_t)v16;
LABEL_14:
    sub_10002B754(v29, v28);
    goto LABEL_15;
  }
  sub_10002F034((uint64_t)v16, (uint64_t)v20, &qword_10069D7F8);
  if (v27(v26, 1, v9) == 1)
  {
    sub_10002B754((uint64_t)v22, &qword_10069D7F8);
    sub_10002EA18((uint64_t)v20, type metadata accessor for ICSelectionStateModel.ObjectSelection);
    goto LABEL_6;
  }
  sub_10002EF54(v26, (uint64_t)v12, type metadata accessor for ICSelectionStateModel.ObjectSelection);
  char v30 = sub_1001A12D4((uint64_t)v20, (uint64_t)v12);
  sub_10002EA18((uint64_t)v12, type metadata accessor for ICSelectionStateModel.ObjectSelection);
  sub_10002B754((uint64_t)v22, &qword_10069D7F8);
  sub_10002EA18((uint64_t)v20, type metadata accessor for ICSelectionStateModel.ObjectSelection);
  sub_10002B754((uint64_t)v16, &qword_10069D7F8);
  if ((v30 & 1) == 0) {
    goto LABEL_15;
  }
LABEL_8:
  uint64_t v31 = v66;
  uint64_t v32 = v66 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection;
  swift_beginAccess();
  uint64_t v33 = v62;
  sub_10002F034(v32, v62, &qword_10069D7F0);
  uint64_t v34 = v24 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection;
  swift_beginAccess();
  uint64_t v35 = v65;
  uint64_t v36 = v65 + *(int *)(v61 + 48);
  sub_10002F034(v33, v65, &qword_10069D7F0);
  sub_10002F034(v34, v36, &qword_10069D7F0);
  uint64_t v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48);
  uint64_t v38 = v64;
  if (v37(v35, 1, v64) == 1)
  {
    sub_10002B754(v33, &qword_10069D7F0);
    if (v37(v36, 1, v38) == 1)
    {
      sub_10002B754(v35, &qword_10069D7F0);
      goto LABEL_18;
    }
    goto LABEL_13;
  }
  uint64_t v39 = v60;
  sub_10002F034(v35, v60, &qword_10069D7F0);
  if (v37(v36, 1, v38) == 1)
  {
    sub_10002B754(v33, &qword_10069D7F0);
    sub_10002EA18(v39, type metadata accessor for ICSelectionStateModel.ContainerSelection);
LABEL_13:
    char v28 = &qword_10069D9A8;
    uint64_t v29 = v35;
    goto LABEL_14;
  }
  uint64_t v42 = v59;
  sub_10002EF54(v36, v59, type metadata accessor for ICSelectionStateModel.ContainerSelection);
  char v43 = sub_1001A21B8(v39, v42);
  sub_10002EA18(v42, type metadata accessor for ICSelectionStateModel.ContainerSelection);
  sub_10002B754(v33, &qword_10069D7F0);
  sub_10002EA18(v39, type metadata accessor for ICSelectionStateModel.ContainerSelection);
  sub_10002B754(v35, &qword_10069D7F0);
  if ((v43 & 1) == 0) {
    goto LABEL_15;
  }
LABEL_18:
  uint64_t v44 = (uint64_t *)(v31
                  + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentFirstVisibleObjectIDForContainerObjectID);
  swift_beginAccess();
  uint64_t v45 = *v44;
  uint64_t v46 = (uint64_t *)(v24
                  + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentFirstVisibleObjectIDForContainerObjectID);
  swift_beginAccess();
  uint64_t v47 = *v46;
  if (v45)
  {
    if (!v47) {
      goto LABEL_15;
    }
    swift_bridgeObjectRetain();
    uint64_t v48 = swift_bridgeObjectRetain();
    sub_1001A09BC(v48, v47);
    char v50 = v49;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v50 & 1) == 0) {
      goto LABEL_15;
    }
  }
  else if (v47)
  {
    goto LABEL_15;
  }
  unint64_t v51 = *(void **)(v31 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentSelectedSearchResult);
  uint64_t v40 = *(void **)(v24 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentSelectedSearchResult);
  if (v51)
  {
    if (!v40) {
      return v40 & 1;
    }
    sub_100031418(0, &qword_10069D950);
    id v52 = v40;
    id v53 = v51;
    char v54 = static NSObject.== infix(_:_:)();

    if (v54) {
      goto LABEL_28;
    }
LABEL_15:
    LOBYTE(v40) = 0;
    return v40 & 1;
  }
  if (v40) {
    goto LABEL_15;
  }
LABEL_28:
  unint64_t v55 = *(void *)(v31 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_focusedNoteObjectID);
  unint64_t v56 = *(void *)(v24 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_focusedNoteObjectID);
  LOBYTE(v40) = (v55 | v56) == 0;
  if (v55 && v56)
  {
    sub_100031418(0, (unint64_t *)&qword_10069E810);
    id v57 = (id)v56;
    id v58 = (id)v55;
    LOBYTE(v40) = static NSObject.== infix(_:_:)();
  }
  return v40 & 1;
}

unint64_t sub_1001A3EEC()
{
  unint64_t result = qword_10069FFE0;
  if (!qword_10069FFE0)
  {
    sub_100031418(255, (unint64_t *)&qword_10069E810);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069FFE0);
  }
  return result;
}

uint64_t sub_1001A3F54(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_10017253C(a1, a2);
  }
  return a1;
}

unint64_t sub_1001A3F68()
{
  unint64_t result = qword_10069D9C0;
  if (!qword_10069D9C0)
  {
    sub_10001DFF4((uint64_t *)&unk_1006A2AA0);
    sub_1001A046C(&qword_10069D9C8, (void (*)(uint64_t))type metadata accessor for ICSelectionStateModel);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069D9C0);
  }
  return result;
}

unint64_t sub_1001A400C()
{
  unint64_t result = qword_10069D9D0;
  if (!qword_10069D9D0)
  {
    sub_10001DFF4((uint64_t *)&unk_1006A2AA0);
    sub_1001A046C(&qword_10069D9B8, (void (*)(uint64_t))type metadata accessor for ICSelectionStateModel);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069D9D0);
  }
  return result;
}

ValueMetadata *type metadata accessor for ICSelectionStateModel.SelectionReason.CodingKeys()
{
  return &type metadata for ICSelectionStateModel.SelectionReason.CodingKeys;
}

ValueMetadata *type metadata accessor for ICSelectionStateModel.SelectionReason.UnspecifiedCodingKeys()
{
  return &type metadata for ICSelectionStateModel.SelectionReason.UnspecifiedCodingKeys;
}

ValueMetadata *type metadata accessor for ICSelectionStateModel.SelectionReason.LinkCodingKeys()
{
  return &type metadata for ICSelectionStateModel.SelectionReason.LinkCodingKeys;
}

ValueMetadata *type metadata accessor for ICSelectionStateModel.ContainerSelection.CodingKeys()
{
  return &type metadata for ICSelectionStateModel.ContainerSelection.CodingKeys;
}

ValueMetadata *type metadata accessor for ICSelectionStateModel.ContainerSelection.VirtualSmartFolderCodingKeys()
{
  return &type metadata for ICSelectionStateModel.ContainerSelection.VirtualSmartFolderCodingKeys;
}

uint64_t getEnumTagSinglePayload for SetChecklistItemsCheckedIntentv1.CheckedChangeOperationTypev1(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s11MobileNotes21ICSelectionStateModelC18ContainerSelectionO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001A4264);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICSelectionStateModel.ObjectSelection.CodingKeys()
{
  return &type metadata for ICSelectionStateModel.ObjectSelection.CodingKeys;
}

unsigned char *_s11MobileNotes21ICSelectionStateModelC15SelectionReasonOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001A4368);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICSelectionStateModel.ObjectSelection.AttachmentCodingKeys()
{
  return &type metadata for ICSelectionStateModel.ObjectSelection.AttachmentCodingKeys;
}

uint64_t getEnumTagSinglePayload for LearnMoreSmartFoldersFiltersView.FilterSection(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for ICSelectionStateModel.ObjectSelection.EditorObjectCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1001A4490);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ICSelectionStateModel.ObjectSelection.EditorObjectCodingKeys()
{
  return &type metadata for ICSelectionStateModel.ObjectSelection.EditorObjectCodingKeys;
}

uint64_t getEnumTagSinglePayload for ICSelectionStateModel.SelectionItem(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ICSelectionStateModel.SelectionItem(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001A4624);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICSelectionStateModel.SelectionItem()
{
  return &type metadata for ICSelectionStateModel.SelectionItem;
}

unint64_t sub_1001A4660()
{
  unint64_t result = qword_10069D9D8;
  if (!qword_10069D9D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069D9D8);
  }
  return result;
}

unint64_t sub_1001A46B8()
{
  unint64_t result = qword_10069D9E0;
  if (!qword_10069D9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069D9E0);
  }
  return result;
}

unint64_t sub_1001A4710()
{
  unint64_t result = qword_10069D9E8;
  if (!qword_10069D9E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069D9E8);
  }
  return result;
}

unint64_t sub_1001A4768()
{
  unint64_t result = qword_10069D9F0;
  if (!qword_10069D9F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069D9F0);
  }
  return result;
}

unint64_t sub_1001A47C0()
{
  unint64_t result = qword_10069D9F8;
  if (!qword_10069D9F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069D9F8);
  }
  return result;
}

unint64_t sub_1001A4818()
{
  unint64_t result = qword_10069DA00;
  if (!qword_10069DA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DA00);
  }
  return result;
}

unint64_t sub_1001A4870()
{
  unint64_t result = qword_10069DA08;
  if (!qword_10069DA08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DA08);
  }
  return result;
}

unint64_t sub_1001A48C8()
{
  unint64_t result = qword_10069DA10;
  if (!qword_10069DA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DA10);
  }
  return result;
}

unint64_t sub_1001A4920()
{
  unint64_t result = qword_10069DA18;
  if (!qword_10069DA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DA18);
  }
  return result;
}

unint64_t sub_1001A4978()
{
  unint64_t result = qword_10069DA20;
  if (!qword_10069DA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DA20);
  }
  return result;
}

unint64_t sub_1001A49D0()
{
  unint64_t result = qword_10069DA28;
  if (!qword_10069DA28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DA28);
  }
  return result;
}

unint64_t sub_1001A4A28()
{
  unint64_t result = qword_10069DA30;
  if (!qword_10069DA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DA30);
  }
  return result;
}

unint64_t sub_1001A4A80()
{
  unint64_t result = qword_10069DA38;
  if (!qword_10069DA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DA38);
  }
  return result;
}

unint64_t sub_1001A4AD8()
{
  unint64_t result = qword_10069DA40;
  if (!qword_10069DA40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DA40);
  }
  return result;
}

unint64_t sub_1001A4B30()
{
  unint64_t result = qword_10069DA48;
  if (!qword_10069DA48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DA48);
  }
  return result;
}

unint64_t sub_1001A4B88()
{
  unint64_t result = qword_10069DA50;
  if (!qword_10069DA50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DA50);
  }
  return result;
}

unint64_t sub_1001A4BE0()
{
  unint64_t result = qword_10069DA58;
  if (!qword_10069DA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DA58);
  }
  return result;
}

unint64_t sub_1001A4C38()
{
  unint64_t result = qword_10069DA60;
  if (!qword_10069DA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DA60);
  }
  return result;
}

unint64_t sub_1001A4C90()
{
  unint64_t result = qword_10069DA68;
  if (!qword_10069DA68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DA68);
  }
  return result;
}

unint64_t sub_1001A4CE8()
{
  unint64_t result = qword_10069DA70;
  if (!qword_10069DA70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DA70);
  }
  return result;
}

unint64_t sub_1001A4D40()
{
  unint64_t result = qword_10069DA78;
  if (!qword_10069DA78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DA78);
  }
  return result;
}

unint64_t sub_1001A4D98()
{
  unint64_t result = qword_10069DA80;
  if (!qword_10069DA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DA80);
  }
  return result;
}

unint64_t sub_1001A4DF0()
{
  unint64_t result = qword_10069DA88;
  if (!qword_10069DA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DA88);
  }
  return result;
}

unint64_t sub_1001A4E48()
{
  unint64_t result = qword_10069DA90;
  if (!qword_10069DA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DA90);
  }
  return result;
}

unint64_t sub_1001A4EA0()
{
  unint64_t result = qword_10069DA98;
  if (!qword_10069DA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DA98);
  }
  return result;
}

unint64_t sub_1001A4EF4(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10062B0B0, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 5) {
    return 5;
  }
  else {
    return v3;
  }
}

uint64_t sub_1001A4F40(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x656D686361747461 && a2 == 0xEF6465646F43746ELL
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65646F4365746F6ELL && a2 == 0xE900000000000064 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6974617469766E69 && a2 == 0xEF6465646F436E6FLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1001A50D0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656D686361747461 && a2 == 0xED00004C5255746ELL;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4C525565746F6ELL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1001A51E8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65646F4373676174 && a2 == 0xE900000000000064;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000010054E6C0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000010054E6E0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1001A5344(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x55746E756F636361 && a2 == 0xEA00000000004C52)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1001A5450()
{
  unint64_t result = qword_10069DAA0;
  if (!qword_10069DAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DAA0);
  }
  return result;
}

unint64_t sub_1001A54A8()
{
  unint64_t result = qword_10069DAA8;
  if (!qword_10069DAA8)
  {
    type metadata accessor for StringSearchCriteria();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DAA8);
  }
  return result;
}

uint64_t sub_1001A5500()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  sub_100032974(v0, qword_1006CD9B8);
  sub_10003293C(v0, (uint64_t)qword_1006CD9B8);
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t sub_1001A5564@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v2 - 8);
  unsigned int v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for Locale();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = type metadata accessor for LocalizedStringResource();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v4, 1, 1, v11);
  IntentDescription.init(_:categoryName:searchKeywords:)();
  uint64_t v13 = type metadata accessor for IntentDescription();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 0, 1, v13);
}

uint64_t sub_1001A585C()
{
  uint64_t v0 = sub_10002F214(&qword_10069DAE0);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10002F214(&qword_10069DAE8);
  __chkstk_darwin(v1);
  sub_100035E08();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._object = (void *)0x800000010054E820;
  v2._countAndFlagsBits = 0xD000000000000018;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_10002F214(&qword_10069DAF0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_1001A59EC()
{
  sub_10002F214(&qword_10069DB00);
  uint64_t v0 = type metadata accessor for StringSearchScope();
  uint64_t v1 = *(void *)(v0 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100524D10;
  uint64_t result = (*(uint64_t (**)(unint64_t, void, uint64_t))(v1 + 104))(v3 + v2, enum case for StringSearchScope.general(_:), v0);
  qword_1006CD9D0 = v3;
  return result;
}

uint64_t sub_1001A5AC8@<X0>(void *a1@<X8>)
{
  if (qword_10069AC80 != -1) {
    swift_once();
  }
  *a1 = qword_1006CD9D0;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1001A5B34(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StringSearchCriteria();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  IntentParameter.wrappedValue.setter();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*InsertAllMentionIntent.target.modify(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = IntentParameter.wrappedValue.modify();
  return sub_10015B020;
}

uint64_t sub_1001A5C84()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001A5CA0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001A5CBC@<X0>(uint64_t a1@<X8>)
{
  if (qword_10069AC78 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_10003293C(v2, (uint64_t)qword_1006CD9B8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1001A5D64(uint64_t a1)
{
  unint64_t v2 = sub_1001A62EC();

  return static ShowInAppSearchResultsIntent.openAppWhenRun.getter(a1, v2);
}

uint64_t sub_1001A5DA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1001A5E58();
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for ShowNotesAppSearchResultsIntent()
{
  return &type metadata for ShowNotesAppSearchResultsIntent;
}

uint64_t sub_1001A5DE0()
{
  return sub_10001DFB0(&qword_10069DAC8, &qword_10069DAD0);
}

uint64_t sub_1001A5E1C()
{
  return sub_10001DFB0((unint64_t *)&qword_10069DE30, (uint64_t *)&unk_10069C980);
}

uint64_t sub_1001A5E58()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v23 = *(void *)(v0 - 8);
  uint64_t v24 = v0;
  __chkstk_darwin(v0);
  uint64_t v22 = (char *)v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  __chkstk_darwin(v2 - 8);
  uint64_t v21 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v4 - 8);
  uint64_t v20 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Locale();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v11 - 8);
  uint64_t v12 = type metadata accessor for LocalizedStringResource();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  v19[1] = sub_10002F214(&qword_10069DAD8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v14 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 104);
  v15(v9, enum case for LocalizedStringResource.BundleDescription.main(_:), v6);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v15(v9, v14, v6);
  uint64_t v16 = v20;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v16, 0, 1, v12);
  uint64_t v17 = type metadata accessor for IntentDialog();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v21, 1, 1, v17);
  (*(void (**)(char *, void, uint64_t))(v23 + 104))(v22, enum case for InputConnectionBehavior.default(_:), v24);
  return IntentParameter<>.init(title:description:requestValueDialog:inputConnectionBehavior:)();
}

uint64_t sub_1001A62C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unint64_t sub_1001A62EC()
{
  unint64_t result = qword_10069DAF8;
  if (!qword_10069DAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DAF8);
  }
  return result;
}

uint64_t sub_1001A6340()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100032974(v0, qword_10069DB08);
  sub_10003293C(v0, (uint64_t)qword_10069DB08);
  return static Logger.archiving.getter();
}

uint64_t ICArchiveNotesPreviewer.__allocating_init(forArchiveAt:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return ICArchiveNotesPreviewer.init(forArchiveAt:)(a1);
}

uint64_t ICArchiveNotesPreviewer.init(forArchiveAt:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = sub_10002F214(&qword_10069DB20);
  __chkstk_darwin(v4 - 8);
  id v71 = (char *)v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = type metadata accessor for ICArchiveNotesPreviewer.Note();
  uint64_t v72 = *(void *)(v83 - 8);
  uint64_t v6 = __chkstk_darwin(v83);
  uint64_t v84 = (uint64_t)v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v89 = (uint64_t)v63 - v9;
  __chkstk_darwin(v8);
  uint64_t v70 = (uint64_t)v63 - v10;
  uint64_t v11 = sub_10002F214(&qword_10069D190);
  uint64_t v86 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v82 = (char *)v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v85 = (char *)v63 - v15;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)v63 - v16;
  uint64_t v18 = type metadata accessor for URL();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, a1, v18);
  type metadata accessor for ICArchivePreviewer();
  swift_allocObject();
  uint64_t v23 = v2;
  uint64_t v24 = v88;
  uint64_t v25 = ICArchivePreviewer.init(forArchiveAt:)(v21);
  if (v24)
  {

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(a1, v18);
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v26 = v25;
    uint64_t v67 = v22;
    uint64_t v88 = v17;
    uint64_t v27 = v86;
    uint64_t v81 = v19;
    uint64_t v66 = v18;
    *(void *)&v23[OBJC_IVAR____TtC11MobileNotes23ICArchiveNotesPreviewer_archivePreviewer] = v25;
    swift_beginAccess();
    uint64_t v28 = *(void *)(v26 + 24);
    swift_bridgeObjectRetain_n();
    uint64_t v29 = sub_1001A96AC(v28);
    swift_bridgeObjectRelease();
    uint64_t v91 = v29;
    sub_1001A7F84(&v91);
    swift_bridgeObjectRelease();
    uint64_t v30 = v91[2];
    uint64_t v31 = v81;
    uint64_t v32 = v85;
    if (v30)
    {
      uint64_t v64 = v23;
      uint64_t v65 = 0;
      uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
      uint64_t v33 = v27 + 16;
      uint64_t v35 = (char *)v91 + ((*(unsigned __int8 *)(v33 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 64));
      uint64_t v79 = *(void *)(v33 + 56);
      uint64_t v80 = v34;
      uint64_t v78 = (uint64_t (**)(char *, uint64_t))(v33 + 72);
      int v77 = enum case for ICObjectReferences.note<A>(_:);
      unint64_t v75 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v72 + 56);
      uint64_t v69 = (void (**)(char *, uint64_t))(v33 + 80);
      uint64_t v74 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48);
      v63[1] = v91;
      swift_retain();
      uint64_t v87 = _swiftEmptyArrayStorage;
      uint64_t v76 = (void (**)(char *, uint64_t))(v33 - 8);
      uint64_t v73 = (v33 - 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v36 = (uint64_t)v71;
      uint64_t v37 = v88;
      uint64_t v86 = v33;
      do
      {
        uint64_t v38 = v80;
        v80(v37, v35, v11);
        v38(v32, v37, v11);
        uint64_t v39 = v82;
        uint64_t v40 = v32;
        v38(v82, v32, v11);
        int v41 = (*v78)(v39, v11);
        if (v41 == v77)
        {
          (*v69)(v39, v11);
          ICObjectReferences.identifier.getter();
          uint64_t v42 = ICObjectReferences.title.getter();
          uint64_t v44 = v43;
          uint64_t v45 = *v76;
          (*v76)(v40, v11);
          uint64_t v36 = (uint64_t)v71;
          swift_release();
          uint64_t v46 = v83;
          uint64_t v47 = (uint64_t *)(v89 + *(int *)(v83 + 20));
          *uint64_t v47 = v42;
          v47[1] = v44;
          sub_1001A9840(v89, v36);
          uint64_t v48 = 0;
        }
        else
        {
          uint64_t v45 = *v76;
          (*v76)(v32, v11);
          v45(v39, v11);
          uint64_t v48 = 1;
          uint64_t v46 = v83;
        }
        (*v75)(v36, v48, 1, v46);
        uint64_t v37 = v88;
        v45(v88, v11);
        if ((*v74)(v36, 1, v46) == 1)
        {
          sub_10002B754(v36, &qword_10069DB20);
          uint64_t v31 = v81;
          uint64_t v32 = v85;
        }
        else
        {
          uint64_t v49 = v70;
          sub_1001A9840(v36, v70);
          sub_1001A9840(v49, v84);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v31 = v81;
          if (isUniquelyReferenced_nonNull_native)
          {
            uint64_t v32 = v85;
            unint64_t v51 = (unint64_t)v87;
          }
          else
          {
            unint64_t v51 = sub_1001A8098(0, v87[2] + 1, 1, (unint64_t)v87, &qword_10069DD28, (uint64_t (*)(void))type metadata accessor for ICArchiveNotesPreviewer.Note, (uint64_t (*)(void))type metadata accessor for ICArchiveNotesPreviewer.Note);
            uint64_t v32 = v85;
          }
          unint64_t v53 = *(void *)(v51 + 16);
          unint64_t v52 = *(void *)(v51 + 24);
          uint64_t v54 = v72;
          uint64_t v55 = v84;
          if (v53 >= v52 >> 1)
          {
            uint64_t v57 = sub_1001A8098(v52 > 1, v53 + 1, 1, v51, &qword_10069DD28, (uint64_t (*)(void))type metadata accessor for ICArchiveNotesPreviewer.Note, (uint64_t (*)(void))type metadata accessor for ICArchiveNotesPreviewer.Note);
            uint64_t v54 = v72;
            unint64_t v51 = v57;
            uint64_t v55 = v84;
          }
          *(void *)(v51 + 16) = v53 + 1;
          unint64_t v56 = (*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
          uint64_t v87 = (void *)v51;
          sub_1001A9840(v55, v51 + v56 + *(void *)(v54 + 72) * v53);
          uint64_t v37 = v88;
        }
        v35 += v79;
        --v30;
      }
      while (v30);
      swift_release_n();
      uint64_t v58 = v67;
      uint64_t v59 = (objc_class *)ObjectType;
      uint64_t v23 = v64;
      uint64_t v60 = v87;
      uint64_t v61 = v66;
    }
    else
    {
      swift_release();
      uint64_t v60 = _swiftEmptyArrayStorage;
      uint64_t v61 = v66;
      uint64_t v58 = v67;
      uint64_t v59 = (objc_class *)ObjectType;
    }
    *(void *)&v23[OBJC_IVAR____TtC11MobileNotes23ICArchiveNotesPreviewer_notes] = v60;

    v90.receiver = v23;
    v90.super_class = v59;
    uint64_t v11 = (uint64_t)[super init];
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v58, v61);
  }
  return v11;
}

uint64_t type metadata accessor for ICArchiveNotesPreviewer.Note()
{
  uint64_t result = qword_10069DBC0;
  if (!qword_10069DBC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ICArchiveNotesPreviewer.notes.getter()
{
  return swift_bridgeObjectRetain();
}

id ICArchiveNotesPreviewer.startPreviewing(_:completion:)(uint64_t a1, void (*a2)(void *, uint64_t), void *a3)
{
  uint64_t v7 = sub_10002F214(&qword_10069D190);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v3 + OBJC_IVAR____TtC11MobileNotes23ICArchiveNotesPreviewer_archivePreviewer);
  sub_1001A6EB8(a1, (uint64_t)v10);
  swift_retain();
  id v12 = sub_1002C07B4((uint64_t)v10, v11, a2, a3);
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v12;
}

uint64_t sub_1001A6EB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10002F214(&qword_10069DD18);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = *(void *)(v2 + OBJC_IVAR____TtC11MobileNotes23ICArchiveNotesPreviewer_archivePreviewer);
  swift_beginAccess();
  uint64_t v9 = *(void *)(v8 + 24);
  uint64_t v19 = a1;
  swift_bridgeObjectRetain();
  sub_100262E70((uint64_t (*)(char *))sub_1001ACB18, v9, v7);
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_10002F214(&qword_10069D190);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a2, v7, v10);
  }
  sub_10002B754((uint64_t)v7, &qword_10069DD18);
  if (qword_10069AC88 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_10003293C(v12, (uint64_t)qword_10069DB08);
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Object to be previewed does not exist", v15, 2u);
    swift_slowDealloc();
  }

  sub_1001ACB38();
  swift_allocError();
  void *v16 = 4;
  return swift_willThrow();
}

void sub_1001A7120(void *a1, char a2, void (*a3)(void *, uint64_t))
{
  uint64_t v5 = a2 & 1;
  if (a2)
  {
    swift_errorRetain();
  }
  else
  {
    v7[3] = sub_100031418(0, (unint64_t *)&qword_1006A5380);
    v7[0] = a1;
    id v6 = a1;
    a1 = (void *)sub_1001A7214((uint64_t)v7, (unint64_t *)&qword_10069FD10, (uint64_t)ICNote_ptr, &qword_10069DCF8);
    sub_100018FE8((uint64_t)v7);
  }
  a3(a1, v5);
  sub_1001ACB0C(a1, v5);
}

uint64_t sub_1001A71D8(uint64_t a1)
{
  return sub_1001A748C(a1, (uint64_t (*)(void))type metadata accessor for LearnMoreViewController, &qword_10069DC50);
}

uint64_t sub_1001A71F8(uint64_t a1)
{
  return sub_1001A7214(a1, (unint64_t *)&qword_10069FD10, (uint64_t)ICNote_ptr, &qword_10069DCF8);
}

uint64_t sub_1001A7214(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7 = type metadata accessor for Mirror();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100032E28(a1, (uint64_t)v19);
  uint64_t v11 = sub_100031418(0, a2);
  if (swift_dynamicCast()) {
    return v17[0];
  }
  sub_100032E28(a1, (uint64_t)v19);
  v17[0] = 0;
  v17[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  strcpy((char *)v18, "Cannot cast ");
  HIBYTE(v18[6]) = 0;
  v18[7] = -5120;
  sub_100032E28((uint64_t)v19, (uint64_t)v17);
  Mirror.init(reflecting:)();
  v13._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  os_log_type_t v14 = *(void (**)(char *, uint64_t))(v8 + 8);
  v14(v10, v7);
  v15._countAndFlagsBits = 544432416;
  v15._object = (void *)0xE400000000000000;
  String.append(_:)(v15);
  v17[3] = sub_10002F214(a4);
  v17[0] = v11;
  Mirror.init(reflecting:)();
  v16._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v16);
  swift_bridgeObjectRelease();
  v14(v10, v7);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001A746C(uint64_t a1)
{
  return sub_1001A748C(a1, (uint64_t (*)(void))type metadata accessor for SystemPaperViewController, &qword_10069DC30);
}

uint64_t sub_1001A748C(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3)
{
  uint64_t v6 = type metadata accessor for Mirror();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100032E28(a1, (uint64_t)v18);
  uint64_t v10 = a2(0);
  if (swift_dynamicCast()) {
    return v16[0];
  }
  sub_100032E28(a1, (uint64_t)v18);
  v16[0] = 0;
  v16[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  strcpy((char *)v17, "Cannot cast ");
  HIBYTE(v17[6]) = 0;
  v17[7] = -5120;
  sub_100032E28((uint64_t)v18, (uint64_t)v16);
  Mirror.init(reflecting:)();
  v12._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  Swift::String v13 = *(void (**)(char *, uint64_t))(v7 + 8);
  v13(v9, v6);
  v14._countAndFlagsBits = 544432416;
  v14._object = (void *)0xE400000000000000;
  String.append(_:)(v14);
  v16[3] = sub_10002F214(a3);
  v16[0] = v10;
  Mirror.init(reflecting:)();
  v15._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v15);
  swift_bridgeObjectRelease();
  v13(v9, v6);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001A76DC(uint64_t a1)
{
  return sub_1001A748C(a1, (uint64_t (*)(void))type metadata accessor for InlineMenuButtonTextAttachment, &qword_10069DC38);
}

uint64_t sub_1001A76FC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Mirror();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100032E28(a1, (uint64_t)v14);
  uint64_t v6 = sub_10002F214(&qword_10069DCE0);
  if (swift_dynamicCast()) {
    return v12[0];
  }
  sub_100032E28(a1, (uint64_t)v14);
  v12[0] = 0;
  v12[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  strcpy((char *)v13, "Cannot cast ");
  HIBYTE(v13[6]) = 0;
  v13[7] = -5120;
  sub_100032E28((uint64_t)v14, (uint64_t)v12);
  Mirror.init(reflecting:)();
  v8._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v3 + 8);
  v9(v5, v2);
  v10._countAndFlagsBits = 544432416;
  v10._object = (void *)0xE400000000000000;
  String.append(_:)(v10);
  v12[3] = sub_10002F214(&qword_10069DCE8);
  v12[0] = v6;
  Mirror.init(reflecting:)();
  v11._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  v9(v5, v2);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001A7948(uint64_t a1)
{
  return sub_1001A7214(a1, (unint64_t *)&qword_1006A5380, (uint64_t)ICCloudSyncingObject_ptr, &qword_10069DD10);
}

uint64_t sub_1001A7964(uint64_t a1)
{
  return sub_1001A7214(a1, (unint64_t *)&qword_1006A4DB0, (uint64_t)ICNoteEditorViewController_ptr, &qword_10069DC28);
}

uint64_t sub_1001A7980(uint64_t a1)
{
  return sub_1001A7214(a1, &qword_10069DC18, (uint64_t)&off_100621DA0, &qword_10069DC20);
}

uint64_t ICArchiveNotesPreviewer.stopPreviewing(_:)(uint64_t a1)
{
  uint64_t v2 = sub_10002F214(&qword_10069D190);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001A6EB8(a1, (uint64_t)v5);
  ICArchivePreviewer.stopPreviewing(_:)((uint64_t)v5);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t ICArchiveNotesPreviewer.state(of:)(uint64_t a1)
{
  uint64_t v3 = sub_10002F214(&qword_10069D190);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC11MobileNotes23ICArchiveNotesPreviewer_archivePreviewer);
  swift_beginAccess();
  uint64_t v8 = *(void *)(v7 + 24);
  swift_bridgeObjectRetain();
  sub_1001A6EB8(a1, (uint64_t)v6);
  if (*(void *)(v8 + 16) && (unint64_t v9 = sub_1002B66E0((uint64_t)v6), (v10 & 1) != 0))
  {
    uint64_t v11 = *(void *)(v8 + 56) + 24 * v9;
    id v12 = *(id *)v11;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 16);
    sub_1001AB8D0(*(id *)v11, *(void *)(v11 + 8), *(unsigned char *)(v11 + 16));
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v14 = 0;
    switch(v13)
    {
      case 1:
        v16[3] = sub_100031418(0, (unint64_t *)&qword_1006A5380);
        v16[0] = v12;
        uint64_t v14 = sub_1001A7214((uint64_t)v16, (unint64_t *)&qword_10069FD10, (uint64_t)ICNote_ptr, &qword_10069DCF8);
        sub_100018FE8((uint64_t)v16);
        break;
      case 2:
        uint64_t v14 = (uint64_t)v12;
        break;
      case 3:
        return v14;
      default:
        swift_bridgeObjectRelease();
        uint64_t v14 = (uint64_t)v12;
        break;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return 0;
  }
  return v14;
}

uint64_t sub_1001A7CE8()
{
  uint64_t v0 = type metadata accessor for URL();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002F214(&qword_10069D190);
  ICObjectReferences.identifier.getter();
  char v4 = static URL.== infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4 & 1;
}

id ICCloudSyncingObject.MoveAction.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return [v1 init];
}

void ICArchiveNotesPreviewer.init()()
{
}

uint64_t ICArchiveNotesPreviewer.Note.title.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ICArchiveNotesPreviewer.Note() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

Swift::Int ICArchiveNotesPreviewer.Note.hashValue.getter()
{
  return Hasher._finalize()();
}

Swift::Int sub_1001A7F48()
{
  return Hasher._finalize()();
}

Swift::Int sub_1001A7F84(void **a1)
{
  uint64_t v2 = *(void *)(sub_10002F214(&qword_10069D190) - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_100190D5C(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_1001A9EE8(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_1001A8030(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1001A8098(a1, a2, a3, a4, &qword_10069DCB0, type metadata accessor for NoteEntity, type metadata accessor for NoteEntity);
}

uint64_t sub_1001A8064(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1001A8098(a1, a2, a3, a4, &qword_10069D1E8, (uint64_t (*)(void))type metadata accessor for TagEntity, (uint64_t (*)(void))type metadata accessor for TagEntity);
}

uint64_t sub_1001A8098(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10002F214(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  void v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1001AC7AC(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_1001A8318(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1001A8098(a1, a2, a3, a4, &qword_10069D1D0, (uint64_t (*)(void))type metadata accessor for FolderEntity, (uint64_t (*)(void))type metadata accessor for FolderEntity);
}

char *sub_1001A834C(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1001A8D94(a1, a2, a3, a4, &qword_10069DC58);
}

uint64_t sub_1001A8358(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1001A8FF8(a1, a2, a3, a4, &qword_10069D198, &qword_10069D190);
}

void *sub_1001A836C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10002F214(&qword_10069DD00);
      char v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      char v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1001AB7C4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1001A847C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10002F214(&qword_10069D1E0);
      char v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      char v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1001AB48C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1001A858C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10002F214(&qword_10069DC40);
      char v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      char v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1001AC1A0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1001A869C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1001A86F8(a1, a2, a3, a4, &qword_10069D0C8, (uint64_t *)&unk_10069D0D0);
}

uint64_t sub_1001A86B0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1001A8098(a1, a2, a3, a4, &qword_10069DC90, (uint64_t (*)(void))&type metadata accessor for ICQueryType, (uint64_t (*)(void))&type metadata accessor for ICQueryType);
}

void *sub_1001A86E4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1001A86F8(a1, a2, a3, a4, &qword_10069DC60, &qword_10069DC68);
}

void *sub_1001A86F8(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      sub_10002F214(a5);
      uint64_t v13 = (void *)swift_allocObject();
      int64_t v14 = j__malloc_size(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 25;
      }
      id v13[2] = v11;
      v13[3] = 2 * (v15 >> 3);
      uint64_t v16 = v13 + 4;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v13 = _swiftEmptyArrayStorage;
      uint64_t v16 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[v11 + 4]) {
          memmove(v16, a4 + 4, 8 * v11);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1001AC3B8(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_1001A8814(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10002F214(&qword_10069DC70);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1001AC4C0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001A893C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1001A8098(a1, a2, a3, a4, &qword_10069DCF0, (uint64_t (*)(void))&type metadata accessor for CollaboratorStatus, (uint64_t (*)(void))&type metadata accessor for CollaboratorStatus);
}

void *sub_1001A8970(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10002F214(&qword_10069DCD0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1001AB37C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1001A8A98(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1001A8AB0(a1, a2, a3, a4, &qword_10069D060);
}

void *sub_1001A8AA4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1001A8AB0(a1, a2, a3, a4, &qword_10069DBF8);
}

void *sub_1001A8AB0(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  int64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v8 = a2;
    }
LABEL_8:
    int64_t v9 = a4[2];
    if (v8 <= v9) {
      int64_t v10 = a4[2];
    }
    else {
      int64_t v10 = v8;
    }
    if (v10)
    {
      sub_10002F214(a5);
      size_t v11 = (void *)swift_allocObject();
      size_t v12 = j__malloc_size(v11);
      void v11[2] = v9;
      v11[3] = 2 * v12 - 64;
      uint64_t v13 = v11 + 4;
      if (v6)
      {
LABEL_13:
        if (v11 != a4 || v13 >= (void *)((char *)a4 + v9 + 32)) {
          memmove(v13, a4 + 4, v9);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      size_t v11 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1001AC5B8(0, v9, (char *)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001A8BA8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1001A8098(a1, a2, a3, a4, &qword_10069DCC8, (uint64_t (*)(void))type metadata accessor for AttachmentEntity, (uint64_t (*)(void))type metadata accessor for AttachmentEntity);
}

uint64_t sub_1001A8BDC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1001A8098(a1, a2, a3, a4, &qword_10069D0C0, (uint64_t (*)(void))&type metadata accessor for URL, (uint64_t (*)(void))&type metadata accessor for URL);
}

uint64_t sub_1001A8C10(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1001A8098(a1, a2, a3, a4, &qword_10069DC78, _s16AttributedStringV9AttributeVMa, _s16AttributedStringV9AttributeVMa);
}

void *sub_1001A8C44(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10002F214(&qword_10069DC88);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1001AC2AC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001A8D54(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1001A8098(a1, a2, a3, a4, &qword_10069DCC0, (uint64_t (*)(void))&type metadata accessor for FastSync.SelectionMessage, (uint64_t (*)(void))&type metadata accessor for FastSync.SelectionMessage);
}

char *sub_1001A8D88(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1001A8D94(a1, a2, a3, a4, &qword_10069DCA8);
}

char *sub_1001A8D94(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = *((void *)a4 + 3);
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = *((void *)a4 + 2);
    if (v8 <= v9) {
      uint64_t v10 = *((void *)a4 + 2);
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      sub_10002F214(a5);
      int64_t v11 = (char *)swift_allocObject();
      int64_t v12 = j__malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 25;
      }
      *((void *)v11 + 2) = v9;
      *((void *)v11 + 3) = 2 * (v13 >> 3);
      int64_t v14 = v11 + 32;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v11 = (char *)&_swiftEmptyArrayStorage;
      int64_t v14 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[8 * v9 + 32]) {
          memmove(v14, a4 + 32, 8 * v9);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_1001AB580(0, v9, v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_1001A8EA0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10002F214(&qword_10069DCB8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1001AC6A0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001A8FB0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1001A8098(a1, a2, a3, a4, &qword_10069D110, (uint64_t (*)(void))_s3TagVMa, (uint64_t (*)(void))_s3TagVMa);
}

uint64_t sub_1001A8FE4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1001A8FF8(a1, a2, a3, a4, &qword_10069DC80, &qword_10069C570);
}

uint64_t sub_1001A8FF8(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = *(void *)(a4 + 24);
    uint64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v10 = a2;
      }
    }
  }
  else
  {
    uint64_t v10 = a2;
  }
  uint64_t v11 = *(void *)(a4 + 16);
  if (v10 <= v11) {
    uint64_t v12 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10002F214(a5);
  uint64_t v13 = *(void *)(sub_10002F214(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (BOOL v18 = v14 == -1) : (BOOL v18 = 0), v18))
  {
LABEL_29:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(sub_10002F214(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (unint64_t)v16 + v20;
  if (a1)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(void *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1001AB66C(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_1001A9264(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1001A8098(a1, a2, a3, a4, &qword_10069D1B8, (uint64_t (*)(void))&type metadata accessor for NoteID, (uint64_t (*)(void))&type metadata accessor for NoteID);
}

uint64_t sub_1001A9298(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1001A8098(a1, a2, a3, a4, &qword_10069D1C0, (uint64_t (*)(void))&type metadata accessor for TranscriptViewModelSegment, (uint64_t (*)(void))&type metadata accessor for TranscriptViewModelSegment);
}

uint64_t sub_1001A92CC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1001A8098(a1, a2, a3, a4, &qword_10069DCA0, (uint64_t (*)(void))type metadata accessor for ChecklistItemEntity, (uint64_t (*)(void))type metadata accessor for ChecklistItemEntity);
}

uint64_t sub_1001A9300(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1001A8098(a1, a2, a3, a4, &qword_10069DC98, (uint64_t (*)(void))type metadata accessor for TableEntity, (uint64_t (*)(void))type metadata accessor for TableEntity);
}

void *sub_1001A9334(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10002F214(&qword_10069DC08);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1001AC908(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001A9458(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1001A8FF8(a1, a2, a3, a4, &qword_10069D080, &qword_10069D088);
}

uint64_t sub_1001A946C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1001A8098(a1, a2, a3, a4, &qword_10069D118, (uint64_t (*)(void))type metadata accessor for AccountEntity, (uint64_t (*)(void))type metadata accessor for AccountEntity);
}

uint64_t sub_1001A94A0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1001A8098(a1, a2, a3, a4, &qword_10069D068, (uint64_t (*)(void))&type metadata accessor for Date, (uint64_t (*)(void))&type metadata accessor for Date);
}

void *sub_1001A94D4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10002F214(&qword_10069DC00);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1001ACA18(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

int64_t *sub_1001A95E4(int64_t *result, int64_t a2)
{
  int64_t v2 = a2 - (void)result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
  }
  else
  {
    if (!v2) {
      return (int64_t *)&_swiftEmptyArrayStorage;
    }
    int64_t v4 = (int64_t)result;
    if (v2 <= 0)
    {
      char v5 = (int64_t *)&_swiftEmptyArrayStorage;
    }
    else
    {
      sub_10002F214((uint64_t *)&unk_1006A1370);
      char v5 = (int64_t *)swift_allocObject();
      int64_t v6 = j__malloc_size(v5);
      uint64_t v7 = v6 - 32;
      if (v6 < 32) {
        uint64_t v7 = v6 - 25;
      }
      v5[2] = v2;
      v5[3] = 2 * (v7 >> 3);
    }
    uint64_t result = sub_10023CC48(v8, v5 + 4, v2, v4, a2);
    if (result == (int64_t *)v2) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

void *sub_1001A96AC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_10002F214(&qword_10069D198);
  uint64_t v3 = *(void *)(sub_10002F214(&qword_10069D190) - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  int64_t v6 = (void *)swift_allocObject();
  uint64_t result = (void *)j__malloc_size(v6);
  if (v4)
  {
    if ((void *)((char *)result - v5) != (void *)0x8000000000000000 || v4 != -1)
    {
      void v6[2] = v1;
      v6[3] = 2 * ((uint64_t)((uint64_t)result - v5) / v4);
      uint64_t v9 = *(void *)(sub_10002F214(&qword_10069D190) - 8);
      uint64_t v10 = sub_10023CD78(&v11, (uint64_t)v6 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), v1, a1);
      swift_bridgeObjectRetain();
      sub_10017B518();
      if (v10 == v1) {
        return v6;
      }
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1001A9840(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ICArchiveNotesPreviewer.Note();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_1001A98A4(uint64_t a1)
{
  return sub_1001A9CBC(a1, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_10023D0C4);
}

void *sub_1001A98BC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1001A9A98(a1, a2, a3, a4, (void (*)(void))type metadata accessor for ICSelectionStateModel);
}

void *sub_1001A98D4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return _swiftEmptyArrayStorage;
    }
    uint64_t v8 = v5;
    if (v5 <= 0)
    {
      uint64_t v9 = _swiftEmptyArrayStorage;
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        unint64_t v12 = a2 + 8 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8) {
          goto LABEL_19;
        }
        sub_100031418(0, &qword_1006A4840);
        swift_arrayInitWithCopy();
        return v9;
      }
    }
    else
    {
      sub_10002F214(&qword_10069BA00);
      uint64_t v9 = (void *)swift_allocObject();
      int64_t v10 = j__malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 25;
      }
      id v9[2] = v5;
      v9[3] = (2 * (v11 >> 3)) | 1;
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_1001A9A68(unint64_t a1)
{
  return sub_1001A9DE0(a1, (void (*)(void *, uint64_t, unint64_t))sub_10023DDCC);
}

void *sub_1001A9A80(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1001A9A98(a1, a2, a3, a4, (void (*)(void))type metadata accessor for NoteSearchResult);
}

void *sub_1001A9A98(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void (*a5)(void))
{
  unint64_t v5 = a4 >> 1;
  uint64_t v6 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v6) {
      return &_swiftEmptyArrayStorage;
    }
    uint64_t v10 = v6;
    if (v6 <= 0)
    {
      uint64_t v11 = &_swiftEmptyArrayStorage;
      if (v5 != a3)
      {
LABEL_7:
        if (v6 < 0) {
          goto LABEL_19;
        }
        unint64_t v14 = a2 + 8 * a3;
        if (v14 < (unint64_t)&v11[v10 + 4] && (unint64_t)(v11 + 4) < v14 + v10 * 8) {
          goto LABEL_19;
        }
        a5(0);
        swift_arrayInitWithCopy();
        return v11;
      }
    }
    else
    {
      sub_10002F214(&qword_10069BA00);
      uint64_t v11 = (void *)swift_allocObject();
      int64_t v12 = j__malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 25;
      }
      void v11[2] = v6;
      v11[3] = (2 * (v13 >> 3)) | 1;
      if (v5 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_1001A9C2C(uint64_t a1)
{
  return sub_1001A9CBC(a1, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_10023D700);
}

void *sub_1001A9C44(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1001A9A98(a1, a2, a3, a4, (void (*)(void))type metadata accessor for AttachmentSearchResult);
}

void *sub_1001A9C5C(uint64_t a1)
{
  return sub_1001A9CBC(a1, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_10023D734);
}

void *sub_1001A9C74(unint64_t a1)
{
  return sub_1001A9DE0(a1, (void (*)(void *, uint64_t, unint64_t))&specialized _ArrayBuffer._copyContents(initializing:));
}

void *sub_1001A9C8C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1001A9A98(a1, a2, a3, a4, (void (*)(void))type metadata accessor for TableSearchResult);
}

void *sub_1001A9CA4(uint64_t a1)
{
  return sub_1001A9CBC(a1, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_10023DD98);
}

void *sub_1001A9CBC(uint64_t a1, uint64_t (*a2)(uint64_t *, void *, uint64_t, uint64_t))
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = __CocoaSet.count.getter();
    if (v4) {
      goto LABEL_3;
    }
    return _swiftEmptyArrayStorage;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return _swiftEmptyArrayStorage;
  }
LABEL_3:
  if (v4 <= 0)
  {
    unint64_t v5 = _swiftEmptyArrayStorage;
  }
  else
  {
    sub_10002F214(&qword_10069BA00);
    unint64_t v5 = (void *)swift_allocObject();
    int64_t v6 = j__malloc_size(v5);
    uint64_t v7 = v6 - 32;
    if (v6 < 32) {
      uint64_t v7 = v6 - 25;
    }
    v5[2] = v4;
    v5[3] = (2 * (v7 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = a2(&v10, v5 + 4, v4, a1);
  uint64_t result = (void *)sub_10017B518();
  if (v8 == v4) {
    return v5;
  }
  __break(1u);
  return result;
}

void *sub_1001A9DC8(unint64_t a1)
{
  return sub_1001A9DE0(a1, (void (*)(void *, uint64_t, unint64_t))sub_10023EB08);
}

void *sub_1001A9DE0(unint64_t a1, void (*a2)(void *, uint64_t, unint64_t))
{
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v4) {
    return _swiftEmptyArrayStorage;
  }
  while (1)
  {
    if (v4 <= 0)
    {
      unint64_t v5 = _swiftEmptyArrayStorage;
    }
    else
    {
      sub_10002F214(&qword_10069BA00);
      unint64_t v5 = (void *)swift_allocObject();
      int64_t v6 = j__malloc_size(v5);
      uint64_t v7 = v6 - 32;
      if (v6 < 32) {
        uint64_t v7 = v6 - 25;
      }
      v5[2] = v4;
      v5[3] = (2 * (v7 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    a2(v5 + 4, v4, a1);
    a2 = v8;
    swift_bridgeObjectRelease();
    if (a2 == (void (*)(void *, uint64_t, unint64_t))v4) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v4) {
      return _swiftEmptyArrayStorage;
    }
  }
  return v5;
}

Swift::Int sub_1001A9EE8(void *a1)
{
  uint64_t v3 = sub_10002F214(&qword_10069D190);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  id v136 = (char *)&v132 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v151 = (char *)&v132 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v146 = (char *)&v132 - v10;
  __chkstk_darwin(v9);
  uint64_t v147 = (char *)&v132 - v11;
  Swift::Int v12 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v12);
  if (result >= v12)
  {
    if (v12 < 0) {
      goto LABEL_141;
    }
    if (v12) {
      return sub_1001AAA40(0, v12, 1, a1);
    }
    return result;
  }
  if (v12 >= 0) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v12 + 1;
  }
  if (v12 < -1) {
    goto LABEL_149;
  }
  Swift::Int v133 = result;
  uint64_t v140 = v1;
  if (v12 < 2)
  {
    BOOL v18 = _swiftEmptyArrayStorage;
    unint64_t v139 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    if (v12 != 1)
    {
      unint64_t v21 = _swiftEmptyArrayStorage[2];
      unint64_t v20 = (char *)_swiftEmptyArrayStorage;
LABEL_106:
      uint64_t v132 = v18;
      if (v21 >= 2)
      {
        Swift::Int v125 = *a1;
        do
        {
          unint64_t v126 = v21 - 2;
          if (v21 < 2) {
            goto LABEL_136;
          }
          if (!v125) {
            goto LABEL_148;
          }
          uint64_t v127 = *(void *)&v20[16 * v126 + 32];
          uint64_t v128 = *(void *)&v20[16 * v21 + 24];
          uint64_t v129 = v140;
          sub_1001AAD34(v125 + *(void *)(v4 + 72) * v127, v125 + *(void *)(v4 + 72) * *(void *)&v20[16 * v21 + 16], v125 + *(void *)(v4 + 72) * v128, v139);
          uint64_t v140 = v129;
          if (v129) {
            break;
          }
          if (v128 < v127) {
            goto LABEL_137;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v20 = sub_100190A20((uint64_t)v20);
          }
          if (v126 >= *((void *)v20 + 2)) {
            goto LABEL_138;
          }
          uint64_t v130 = &v20[16 * v126 + 32];
          *(void *)uint64_t v130 = v127;
          *((void *)v130 + 1) = v128;
          unint64_t v131 = *((void *)v20 + 2);
          if (v21 > v131) {
            goto LABEL_139;
          }
          memmove(&v20[16 * v21 + 16], &v20[16 * v21 + 32], 16 * (v131 - v21));
          *((void *)v20 + 2) = v131 - 1;
          unint64_t v21 = v131 - 1;
        }
        while (v131 > 2);
      }
LABEL_117:
      swift_bridgeObjectRelease();
      v132[2] = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v132 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v15 = v14 >> 1;
    uint64_t v16 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v16 + 16) = v15;
    unint64_t v17 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v132 = (void *)v16;
    unint64_t v139 = v16 + v17;
  }
  uint64_t v19 = 0;
  id v144 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v145 = v4 + 16;
  id v154 = (char **)(v4 + 32);
  unint64_t v20 = (char *)_swiftEmptyArrayStorage;
  uint64_t v138 = v4;
  uint64_t v148 = a1;
  uint64_t v150 = v3;
  while (1)
  {
    unint64_t v22 = v19;
    unint64_t v23 = v19 + 1;
    Swift::Int v137 = (Swift::Int)v19;
    if ((uint64_t)(v19 + 1) >= v12)
    {
      Swift::Int v36 = (Swift::Int)(v19 + 1);
      uint64_t v44 = v140;
    }
    else
    {
      Swift::Int v143 = *a1;
      Swift::Int v24 = v143;
      uint64_t v25 = v4;
      uint64_t v26 = *(void *)(v4 + 72);
      uint64_t v155 = v26;
      Swift::Int v153 = v12;
      uint64_t v27 = v19;
      uint64_t v28 = *(void (**)(char *, Swift::Int, uint64_t))(v25 + 16);
      v28(v147, v143 + v26 * (void)v23, v3);
      Swift::Int v29 = v24 + v26 * (void)v27;
      uint64_t v30 = v25;
      uint64_t v31 = v146;
      v28(v146, v29, v3);
      unint64_t v32 = sub_1001ACB8C();
      uint64_t v33 = v147;
      uint64_t v149 = (char *)v32;
      int v34 = dispatch thunk of static Comparable.< infix(_:_:)();
      uint64_t v3 = v150;
      LODWORD(v152) = v34;
      uint64_t v35 = *(void (**)(char *, uint64_t))(v30 + 8);
      v35(v31, v150);
      v35(v33, v3);
      Swift::Int v36 = (Swift::Int)(v27 + 2);
      Swift::Int v12 = v153;
      if (v36 >= v153)
      {
        uint64_t v44 = v140;
      }
      else
      {
        unsigned int v134 = v20;
        uint64_t v142 = v155 * (void)v23;
        Swift::Int v37 = v143;
        uint64_t v38 = v155 * v36;
        while (1)
        {
          Swift::Int v39 = v36;
          uint64_t v40 = v147;
          v28(v147, v37 + v38, v3);
          int v41 = v146;
          v28(v146, v37 + v142, v3);
          int v42 = dispatch thunk of static Comparable.< infix(_:_:)();
          uint64_t v3 = v150;
          int v43 = v42;
          v35(v41, v150);
          v35(v40, v3);
          if ((v152 ^ v43)) {
            break;
          }
          Swift::Int v36 = v39 + 1;
          v37 += v155;
          Swift::Int v12 = v153;
          if (v153 == v36)
          {
            Swift::Int v36 = v153;
            uint64_t v44 = v140;
            unint64_t v20 = v134;
            goto LABEL_25;
          }
        }
        uint64_t v44 = v140;
        unint64_t v20 = v134;
        Swift::Int v36 = v39;
        Swift::Int v12 = v153;
      }
LABEL_25:
      a1 = v148;
      unint64_t v22 = (char *)v137;
      if (v152)
      {
        if (v36 < v137) {
          goto LABEL_142;
        }
        if (v137 < v36)
        {
          unsigned int v134 = v20;
          uint64_t v45 = 0;
          uint64_t v46 = v155;
          uint64_t v47 = v155 * (v36 - 1);
          uint64_t v48 = v36 * v155;
          Swift::Int v49 = v137;
          uint64_t v50 = v137 * v155;
          uint64_t v149 = (char *)v36;
          do
          {
            if (v49 != v36 + v45 - 1)
            {
              if (!v143) {
                goto LABEL_147;
              }
              uint64_t v51 = v44;
              unint64_t v52 = v143 + v50;
              Swift::Int v53 = v143 + v47;
              uint64_t v152 = *v154;
              ((void (*)(char *, Swift::Int, uint64_t))v152)(v136, v143 + v50, v3);
              if (v50 < v47 || v52 >= v143 + v48)
              {
                swift_arrayInitWithTakeFrontToBack();
              }
              else if (v50 != v47)
              {
                swift_arrayInitWithTakeBackToFront();
              }
              ((void (*)(Swift::Int, char *, uint64_t))v152)(v53, v136, v3);
              uint64_t v44 = v51;
              a1 = v148;
              Swift::Int v36 = (Swift::Int)v149;
              uint64_t v46 = v155;
            }
            ++v49;
            --v45;
            v47 -= v46;
            v48 -= v46;
            v50 += v46;
          }
          while (v49 < v36 + v45);
          unint64_t v20 = v134;
          unint64_t v22 = (char *)v137;
          Swift::Int v12 = v153;
        }
      }
    }
    if (v36 >= v12) {
      goto LABEL_57;
    }
    if (__OFSUB__(v36, v22)) {
      goto LABEL_140;
    }
    if (v36 - (uint64_t)v22 >= v133) {
      goto LABEL_57;
    }
    if (__OFADD__(v22, v133)) {
      goto LABEL_143;
    }
    Swift::Int v54 = (uint64_t)&v22[v133] >= v12 ? v12 : (Swift::Int)&v22[v133];
    if (v54 < (uint64_t)v22) {
      break;
    }
    if (v36 != v54)
    {
      unsigned int v134 = v20;
      Swift::Int v135 = v54;
      uint64_t v55 = *(void *)(v138 + 72);
      unint64_t v56 = *(void (**)(char *, uint64_t, uint64_t))(v138 + 16);
      uint64_t v140 = v44;
      id v141 = v56;
      uint64_t v155 = v55 * (v36 - 1);
      uint64_t v142 = v55;
      Swift::Int v57 = v36 * v55;
      do
      {
        uint64_t v59 = 0;
        uint64_t v149 = (char *)v36;
        Swift::Int v143 = v57;
        while (1)
        {
          uint64_t v152 = v22;
          Swift::Int v60 = *a1;
          Swift::Int v61 = v57 + v59 + *a1;
          uint64_t v62 = v147;
          uint64_t v63 = v141;
          v141(v147, v61, v3);
          uint64_t v64 = v155 + v59 + v60;
          uint64_t v65 = a1;
          uint64_t v66 = v146;
          v63(v146, v64, v3);
          sub_1001ACB8C();
          LODWORD(v153) = dispatch thunk of static Comparable.< infix(_:_:)();
          uint64_t v67 = *v144;
          (*v144)(v66, v3);
          v67(v62, v3);
          if ((v153 & 1) == 0) {
            break;
          }
          uint64_t v68 = *v65;
          if (!*v65) {
            goto LABEL_145;
          }
          Swift::Int v57 = v143;
          uint64_t v69 = v68 + v155 + v59;
          uint64_t v70 = *v154;
          uint64_t v3 = v150;
          ((void (*)(char *, uint64_t, uint64_t))*v154)(v151, v68 + v143 + v59, v150);
          swift_arrayInitWithTakeFrontToBack();
          ((void (*)(uint64_t, char *, uint64_t))v70)(v69, v151, v3);
          v59 -= v142;
          unint64_t v22 = v152 + 1;
          a1 = v148;
          uint64_t v58 = v149;
          if (v149 == v152 + 1) {
            goto LABEL_50;
          }
        }
        uint64_t v58 = v149;
        uint64_t v3 = v150;
        a1 = v65;
        Swift::Int v57 = v143;
LABEL_50:
        Swift::Int v36 = (Swift::Int)(v58 + 1);
        v155 += v142;
        v57 += v142;
        unint64_t v22 = (char *)v137;
      }
      while (v36 != v135);
      Swift::Int v36 = v135;
      uint64_t v44 = v140;
      unint64_t v20 = v134;
    }
LABEL_57:
    if (v36 < (uint64_t)v22) {
      goto LABEL_135;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v140 = v44;
    uint64_t v149 = (char *)v36;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      unint64_t v20 = sub_1001904C8(0, *((void *)v20 + 2) + 1, 1, v20);
    }
    unint64_t v73 = *((void *)v20 + 2);
    unint64_t v72 = *((void *)v20 + 3);
    unint64_t v21 = v73 + 1;
    if (v73 >= v72 >> 1) {
      unint64_t v20 = sub_1001904C8((char *)(v72 > 1), v73 + 1, 1, v20);
    }
    *((void *)v20 + 2) = v21;
    uint64_t v74 = v20 + 32;
    unint64_t v75 = &v20[16 * v73 + 32];
    uint64_t v76 = v149;
    *(void *)unint64_t v75 = v137;
    *((void *)v75 + 1) = v76;
    if (v73)
    {
      while (1)
      {
        unint64_t v77 = v21 - 1;
        if (v21 >= 4)
        {
          uint64_t v82 = &v74[16 * v21];
          uint64_t v83 = *((void *)v82 - 8);
          uint64_t v84 = *((void *)v82 - 7);
          BOOL v88 = __OFSUB__(v84, v83);
          uint64_t v85 = v84 - v83;
          if (v88) {
            goto LABEL_124;
          }
          uint64_t v87 = *((void *)v82 - 6);
          uint64_t v86 = *((void *)v82 - 5);
          BOOL v88 = __OFSUB__(v86, v87);
          uint64_t v80 = v86 - v87;
          char v81 = v88;
          if (v88) {
            goto LABEL_125;
          }
          unint64_t v89 = v21 - 2;
          objc_super v90 = &v74[16 * v21 - 32];
          uint64_t v92 = *(void *)v90;
          uint64_t v91 = *((void *)v90 + 1);
          BOOL v88 = __OFSUB__(v91, v92);
          uint64_t v93 = v91 - v92;
          if (v88) {
            goto LABEL_127;
          }
          BOOL v88 = __OFADD__(v80, v93);
          uint64_t v94 = v80 + v93;
          if (v88) {
            goto LABEL_130;
          }
          if (v94 >= v85)
          {
            uint64_t v112 = &v74[16 * v77];
            uint64_t v114 = *(void *)v112;
            uint64_t v113 = *((void *)v112 + 1);
            BOOL v88 = __OFSUB__(v113, v114);
            uint64_t v115 = v113 - v114;
            if (v88) {
              goto LABEL_134;
            }
            BOOL v105 = v80 < v115;
            goto LABEL_94;
          }
        }
        else
        {
          if (v21 != 3)
          {
            uint64_t v106 = *((void *)v20 + 4);
            uint64_t v107 = *((void *)v20 + 5);
            BOOL v88 = __OFSUB__(v107, v106);
            uint64_t v99 = v107 - v106;
            char v100 = v88;
            goto LABEL_88;
          }
          uint64_t v79 = *((void *)v20 + 4);
          uint64_t v78 = *((void *)v20 + 5);
          BOOL v88 = __OFSUB__(v78, v79);
          uint64_t v80 = v78 - v79;
          char v81 = v88;
        }
        if (v81) {
          goto LABEL_126;
        }
        unint64_t v89 = v21 - 2;
        char v95 = &v74[16 * v21 - 32];
        uint64_t v97 = *(void *)v95;
        uint64_t v96 = *((void *)v95 + 1);
        BOOL v98 = __OFSUB__(v96, v97);
        uint64_t v99 = v96 - v97;
        char v100 = v98;
        if (v98) {
          goto LABEL_129;
        }
        uint64_t v101 = &v74[16 * v77];
        uint64_t v103 = *(void *)v101;
        uint64_t v102 = *((void *)v101 + 1);
        BOOL v88 = __OFSUB__(v102, v103);
        uint64_t v104 = v102 - v103;
        if (v88) {
          goto LABEL_132;
        }
        if (__OFADD__(v99, v104)) {
          goto LABEL_133;
        }
        if (v99 + v104 >= v80)
        {
          BOOL v105 = v80 < v104;
LABEL_94:
          if (v105) {
            unint64_t v77 = v89;
          }
          goto LABEL_96;
        }
LABEL_88:
        if (v100) {
          goto LABEL_128;
        }
        uint64_t v108 = &v74[16 * v77];
        uint64_t v110 = *(void *)v108;
        uint64_t v109 = *((void *)v108 + 1);
        BOOL v88 = __OFSUB__(v109, v110);
        uint64_t v111 = v109 - v110;
        if (v88) {
          goto LABEL_131;
        }
        if (v111 < v99) {
          goto LABEL_15;
        }
LABEL_96:
        unint64_t v116 = v77 - 1;
        if (v77 - 1 >= v21)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        Swift::Int v117 = *a1;
        if (!*a1) {
          goto LABEL_146;
        }
        char v118 = v20;
        uint64_t v119 = &v74[16 * v116];
        uint64_t v120 = *(void *)v119;
        char v121 = &v74[16 * v77];
        uint64_t v122 = *((void *)v121 + 1);
        uint64_t v123 = v140;
        sub_1001AAD34(v117 + *(void *)(v138 + 72) * *(void *)v119, v117 + *(void *)(v138 + 72) * *(void *)v121, v117 + *(void *)(v138 + 72) * v122, v139);
        uint64_t v140 = v123;
        if (v123) {
          goto LABEL_117;
        }
        if (v122 < v120) {
          goto LABEL_121;
        }
        if (v77 > *((void *)v118 + 2)) {
          goto LABEL_122;
        }
        *(void *)uint64_t v119 = v120;
        *(void *)&v74[16 * v116 + 8] = v122;
        unint64_t v124 = *((void *)v118 + 2);
        if (v77 >= v124) {
          goto LABEL_123;
        }
        unint64_t v20 = v118;
        unint64_t v21 = v124 - 1;
        memmove(&v74[16 * v77], v121 + 16, 16 * (v124 - 1 - v77));
        *((void *)v118 + 2) = v124 - 1;
        a1 = v148;
        if (v124 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v21 = 1;
LABEL_15:
    Swift::Int v12 = a1[1];
    uint64_t v19 = v149;
    uint64_t v4 = v138;
    if ((uint64_t)v149 >= v12)
    {
      BOOL v18 = v132;
      goto LABEL_106;
    }
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001AAA40(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v31 = a1;
  uint64_t v7 = sub_10002F214(&qword_10069D190);
  uint64_t v8 = __chkstk_darwin(v7);
  int v41 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  Swift::Int v37 = (char *)&v29 - v11;
  uint64_t result = __chkstk_darwin(v10);
  Swift::Int v36 = (char *)&v29 - v14;
  uint64_t v39 = a3;
  uint64_t v30 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    uint64_t v15 = v13 + 16;
    uint64_t v17 = *(void *)(v15 + 56);
    unint64_t v32 = (uint64_t (**)(char *, uint64_t))(v15 - 8);
    uint64_t v33 = v16;
    int v34 = a4;
    uint64_t v35 = v15;
    uint64_t v40 = (void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    uint64_t v44 = v17 * (v39 - 1);
    uint64_t v38 = v17;
    uint64_t v43 = v17 * v39;
LABEL_5:
    uint64_t v18 = 0;
    uint64_t v42 = v31;
    while (1)
    {
      uint64_t v19 = *a4;
      uint64_t v20 = v43 + v18 + *a4;
      unint64_t v21 = v36;
      unint64_t v22 = v33;
      v33(v36, v20, v7);
      unint64_t v23 = v37;
      v22(v37, v44 + v18 + v19, v7);
      sub_1001ACB8C();
      LOBYTE(v19) = dispatch thunk of static Comparable.< infix(_:_:)();
      Swift::Int v24 = *v32;
      (*v32)(v23, v7);
      uint64_t v25 = v21;
      a4 = v34;
      uint64_t result = v24(v25, v7);
      if ((v19 & 1) == 0)
      {
LABEL_4:
        v44 += v38;
        v43 += v38;
        if (++v39 == v30) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v26 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v27 = v26 + v44 + v18;
      uint64_t v28 = *v40;
      (*v40)(v41, v26 + v43 + v18, v7);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v28)(v27, v41, v7);
      v18 -= v38;
      if (v39 == ++v42) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1001AAD34(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v57 = sub_10002F214(&qword_10069D190);
  uint64_t v8 = *(void *)(v57 - 8);
  uint64_t v9 = __chkstk_darwin(v57);
  unint64_t v56 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v55 = (char *)&v47 - v11;
  uint64_t v13 = *(void *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_71;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_72;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v13;
  unint64_t v60 = a1;
  unint64_t v59 = a4;
  uint64_t v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v32 = a4 + v18;
      unint64_t v58 = a4 + v18;
      unint64_t v60 = a2;
      unint64_t v52 = (void (*)(char *, unint64_t, uint64_t))a1;
      if (v18 >= 1 && a1 < a2)
      {
        int v34 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
        uint64_t v54 = v8 + 16;
        Swift::Int v49 = (void (**)(char *, uint64_t))(v8 + 8);
        uint64_t v50 = v34;
        uint64_t v35 = -v13;
        unint64_t v51 = a4;
        uint64_t v48 = -v13;
        uint64_t v36 = v57;
        do
        {
          unint64_t v53 = a3 + v35;
          unint64_t v37 = a3;
          uint64_t v38 = v55;
          uint64_t v39 = v50;
          v50(v55, v32 + v35, v36);
          unint64_t v40 = a2 + v35;
          int v41 = v56;
          v39(v56, v40, v36);
          sub_1001ACB8C();
          LOBYTE(v39) = dispatch thunk of static Comparable.< infix(_:_:)();
          uint64_t v42 = *v49;
          (*v49)(v41, v36);
          v42(v38, v36);
          if (v39)
          {
            uint64_t v35 = v48;
            a3 = v53;
            if (v37 < a2 || v53 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v43 = v51;
            }
            else
            {
              unint64_t v43 = v51;
              if (v37 != a2) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v60 += v35;
          }
          else
          {
            unint64_t v44 = v58;
            v58 += v48;
            a3 = v53;
            BOOL v45 = v37 < v44 || v53 >= v44;
            uint64_t v35 = v48;
            if (v45)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v40 = a2;
              unint64_t v43 = v51;
            }
            else
            {
              unint64_t v43 = v51;
              if (v37 != v44) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v40 = a2;
            }
          }
          unint64_t v32 = v58;
          if (v58 <= v43) {
            break;
          }
          a2 = v40;
        }
        while (v40 > (unint64_t)v52);
      }
      goto LABEL_69;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v53 = a4 + v17;
    unint64_t v58 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      unint64_t v52 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
      uint64_t v54 = v8 + 16;
      uint64_t v50 = (void (*)(char *, unint64_t, uint64_t))(v8 + 8);
      uint64_t v20 = v57;
      do
      {
        uint64_t v21 = v13;
        unint64_t v22 = a3;
        unint64_t v23 = v55;
        Swift::Int v24 = v52;
        v52(v55, a2, v20);
        uint64_t v25 = v56;
        v24(v56, a4, v20);
        sub_1001ACB8C();
        LOBYTE(v24) = dispatch thunk of static Comparable.< infix(_:_:)();
        uint64_t v26 = *(void (**)(char *, uint64_t))v50;
        (*(void (**)(char *, uint64_t))v50)(v25, v20);
        v26(v23, v20);
        unint64_t v27 = v60;
        if (v24)
        {
          uint64_t v13 = v21;
          unint64_t v28 = a2 + v21;
          if (v60 < a2 || v60 >= v28)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v22;
          }
          else
          {
            a3 = v22;
            if (v60 == a2) {
              unint64_t v27 = a2;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        else
        {
          uint64_t v13 = v21;
          unint64_t v30 = v59 + v21;
          if (v60 < v59 || v60 >= v30)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v22;
          }
          else
          {
            a3 = v22;
            if (v60 != v59) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v59 = v30;
          unint64_t v28 = a2;
        }
        unint64_t v60 = v27 + v13;
        a4 = v59;
        if (v59 >= v53) {
          break;
        }
        a2 = v28;
      }
      while (v28 < a3);
    }
LABEL_69:
    sub_100190694(&v60, &v59, (uint64_t *)&v58);
    return 1;
  }
LABEL_73:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t _s11MobileNotes09ICArchiveB9PreviewerC4NoteV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  if (static URL.== infix(_:_:)())
  {
    uint64_t v4 = *(int *)(type metadata accessor for ICArchiveNotesPreviewer.Note() + 20);
    uint64_t v5 = (void *)(a1 + v4);
    uint64_t v6 = *(void *)(a1 + v4 + 8);
    uint64_t v7 = (void *)(a2 + v4);
    uint64_t v8 = v7[1];
    if (v6)
    {
      if (v8)
      {
        BOOL v9 = *v5 == *v7 && v6 == v8;
        if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
          return 1;
        }
      }
    }
    else if (!v8)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_1001AB37C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_10002F214(&qword_10069DCD8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001AB48C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_1001AB580(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001AB66C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(sub_10002F214(a5) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001AB7C4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_10002F214(&qword_10069DD08);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

id sub_1001AB8D0(id result, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 2:
      return (id)swift_errorRetain();
    case 1:
      return result;
    case 0:
      id v4 = result;
      return (id)swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_1001AB948()
{
  unint64_t result = qword_10069DB38;
  if (!qword_10069DB38)
  {
    type metadata accessor for ICArchiveNotesPreviewer.Note();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DB38);
  }
  return result;
}

uint64_t type metadata accessor for ICArchiveNotesPreviewer()
{
  return self;
}

uint64_t *initializeBufferWithCopyOfBuffer for ICArchiveNotesPreviewer.Note(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for URL();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ICArchiveNotesPreviewer.Note(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ICArchiveNotesPreviewer.Note(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  void *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ICArchiveNotesPreviewer.Note(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  void *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ICArchiveNotesPreviewer.Note(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for ICArchiveNotesPreviewer.Note(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  void *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ICArchiveNotesPreviewer.Note(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001ABD54);
}

uint64_t sub_1001ABD54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ICArchiveNotesPreviewer.Note(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001ABE38);
}

uint64_t sub_1001ABE38(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for URL();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  }
  return result;
}

uint64_t sub_1001ABEF8()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ICArchiveNotesPreviewer.Note.States(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_1001ABFD4(*(id *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

id sub_1001ABFD4(id result, unsigned __int8 a2)
{
  if (a2 == 2) {
    return (id)swift_errorRetain();
  }
  if (a2 <= 1u) {
    return result;
  }
  return result;
}

void destroy for ICArchiveNotesPreviewer.Note.States(uint64_t a1)
{
}

void sub_1001AC008(id a1, unsigned __int8 a2)
{
  if (a2 == 2)
  {
    swift_errorRelease();
  }
  else if (a2 <= 1u)
  {
  }
}

uint64_t assignWithCopy for ICArchiveNotesPreviewer.Note.States(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_1001ABFD4(*(id *)a2, v4);
  int v5 = *(void **)a1;
  *(void *)a1 = v3;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_1001AC008(v5, v6);
  return a1;
}

uint64_t initializeWithTake for RealtimeCollaborationController.GroupActivityState(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t assignWithTake for ICArchiveNotesPreviewer.Note.States(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  unsigned __int8 v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  unsigned __int8 v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_1001AC008(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for ICArchiveNotesPreviewer.Note.States(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ICArchiveNotesPreviewer.Note.States(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1001AC160(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 2u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_1001AC178(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)uint64_t result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ICArchiveNotesPreviewer.Note.States()
{
  return &type metadata for ICArchiveNotesPreviewer.Note.States;
}

uint64_t sub_1001AC1A0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_10002F214(&qword_10069DC48);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001AC2AC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_10002F214(&qword_1006A00A0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001AC3B8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 8 * a1 + 32;
    unint64_t v7 = a3 + 8 * v5;
    if (v6 >= v7 || v6 + 8 * v5 <= a3)
    {
      sub_10002F214(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001AC4C0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_1001AC5B8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001AC6A0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_10002F214(&qword_10069CE08);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001AC7AC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001AC908(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_10002F214(&qword_10069DC10);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001ACA18(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_1001ACB0C(void *a1, char a2)
{
  if (a2) {
    swift_errorRelease();
  }
  else {
}
  }

uint64_t sub_1001ACB18()
{
  return sub_1001A7CE8() & 1;
}

unint64_t sub_1001ACB38()
{
  unint64_t result = qword_10069DD20;
  if (!qword_10069DD20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DD20);
  }
  return result;
}

unint64_t sub_1001ACB8C()
{
  unint64_t result = qword_10069DD30;
  if (!qword_10069DD30)
  {
    sub_10001DFF4(&qword_10069D190);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DD30);
  }
  return result;
}

void ICMoveDecisionControlling.performDecision(completion:)(uint64_t a1, uint64_t a2)
{
  v4[4] = a1;
  v4[5] = a2;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 1107296256;
  v4[2] = sub_1001ACCA0;
  v4[3] = &unk_10062F800;
  unsigned int v3 = _Block_copy(v4);
  swift_retain();
  swift_release();
  [v2 performDecisionWithCompletion:v3];
  _Block_release(v3);
}

uint64_t sub_1001ACCA0(uint64_t a1)
{
  unint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_1001AD39C();
  uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v1(v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t ICMoveDecisionControlling.performDecision()(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  v2[5] = type metadata accessor for MainActor();
  v2[6] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[7] = v4;
  v2[8] = v3;
  return _swift_task_switch(sub_1001ACDB0, v4, v3);
}

uint64_t sub_1001ACDB0()
{
  long long v6 = *(_OWORD *)(v0 + 24);
  uint64_t v1 = static MainActor.shared.getter();
  *(void *)(v0 + 72) = v1;
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 80) = v2;
  *(_OWORD *)(v2 + 16) = v6;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v3;
  uint64_t v4 = sub_10002F214((uint64_t *)&unk_1006A35B0);
  *uint64_t v3 = v0;
  v3[1] = sub_1001ACED8;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 16, v1, &protocol witness table for MainActor, 0xD000000000000011, 0x800000010054E9D0, sub_1001AD244, v2, v4);
}

uint64_t sub_1001ACED8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = *(void *)(v1 + 56);
  return _swift_task_switch(sub_1001AD038, v3, v2);
}

uint64_t sub_1001AD038()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

void sub_1001AD09C(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_10002F214(&qword_1006A3640);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_1001AD328;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001ACCA0;
  aBlock[3] = &unk_10062F850;
  uint64_t v9 = _Block_copy(aBlock);
  swift_release();
  [a2 performDecisionWithCompletion:v9];
  _Block_release(v9);
}

void sub_1001AD244(uint64_t a1)
{
  sub_1001AD09C(a1, *(void **)(v1 + 24));
}

uint64_t sub_1001AD24C()
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_1001AD294()
{
  uint64_t v1 = sub_10002F214(&qword_1006A3640);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1001AD328()
{
  sub_10002F214(&qword_1006A3640);

  return sub_1001AD24C();
}

unint64_t sub_1001AD39C()
{
  unint64_t result = qword_1006A2780;
  if (!qword_1006A2780)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1006A2780);
  }
  return result;
}

void *AddTagsToNotesIntent.persistentIdentifier.unsafeMutableAddressor()
{
  return &static AddTagsToNotesIntent.persistentIdentifier;
}

unint64_t static AddTagsToNotesIntent.persistentIdentifier.getter()
{
  return 0xD000000000000018;
}

uint64_t sub_1001AD40C()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  sub_100032974(v6, static AddTagsToNotesIntent.title);
  sub_10003293C(v6, (uint64_t)static AddTagsToNotesIntent.title);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t AddTagsToNotesIntent.title.unsafeMutableAddressor()
{
  if (qword_10069AC90 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for LocalizedStringResource();

  return sub_10003293C(v0, (uint64_t)static AddTagsToNotesIntent.title);
}

uint64_t static AddTagsToNotesIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_10069AC90 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_10003293C(v2, (uint64_t)static AddTagsToNotesIntent.title);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t static AddTagsToNotesIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for Locale();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = type metadata accessor for LocalizedStringResource();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v4, 1, 1, v11);
  IntentDescription.init(_:categoryName:searchKeywords:)();
  uint64_t v13 = type metadata accessor for IntentDescription();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 0, 1, v13);
}

uint64_t static AddTagsToNotesIntent.parameterSummary.getter()
{
  uint64_t v0 = sub_10002F214(&qword_10069DD40);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10002F214(&qword_10069DD48);
  __chkstk_darwin(v1);
  sub_1001ADBE0();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._countAndFlagsBits = 0x2065687420646441;
  v2._object = (void *)0xE800000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_10002F214(&qword_10069DD58);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._countAndFlagsBits = 0x6F74207367617420;
  v3._object = (void *)0xED00002065687420;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  swift_getKeyPath();
  sub_10002F214(&qword_10069DD60);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v4._countAndFlagsBits = 0x7365746F6E20;
  v4._object = (void *)0xE600000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v4);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

unint64_t sub_1001ADBE0()
{
  unint64_t result = qword_10069DD50;
  if (!qword_10069DD50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DD50);
  }
  return result;
}

uint64_t sub_1001ADC34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001ADC60@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t AddTagsToNotesIntent.perform()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[13] = a4;
  v5[14] = a5;
  v5[11] = a2;
  v5[12] = a3;
  v5[10] = a1;
  v5[15] = type metadata accessor for BulkModifyNoteTags();
  v5[16] = swift_task_alloc();
  return _swift_task_switch(sub_1001ADD2C, 0, 0);
}

uint64_t sub_1001ADD2C()
{
  uint64_t v1 = v0[16];
  AppDependency.wrappedValue.getter();
  uint64_t v2 = v0[6];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  *(unsigned char *)uint64_t v1 = 0;
  *(void *)(v1 + 8) = v2;
  IntentParameter.wrappedValue.getter();
  uint64_t v3 = v0[7];
  v0[17] = v3;
  IntentParameter.wrappedValue.getter();
  uint64_t v4 = v0[8];
  v0[18] = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[19] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1001613C0;
  return sub_10044D2C4(v3, v4);
}

uint64_t sub_1001ADEA8(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  uint64_t v7 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_100161724;
  return AddTagsToNotesIntent.perform()(a1, v4, v5, v7, v6);
}

uint64_t sub_1001ADF68@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = _s11MobileNotes09AddTagsToB6IntentVACycfC_0();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return result;
}

uint64_t _s11MobileNotes09AddTagsToB6IntentVACycfC_0()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v53 = v0;
  uint64_t v54 = v1;
  __chkstk_darwin(v0);
  unint64_t v52 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  unint64_t v51 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v50 = (char *)&v36 - v6;
  uint64_t v7 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v7 - 8);
  Swift::Int v49 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Locale();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = type metadata accessor for LocalizedStringResource();
  uint64_t v46 = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v48 = sub_10002F214((uint64_t *)&unk_10069B140);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v17 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 104);
  unsigned int v39 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v40 = v9;
  v18(v12, enum case for LocalizedStringResource.BundleDescription.main(_:), v9);
  int v41 = v18;
  uint64_t v42 = v10 + 104;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v18(v12, v17, v9);
  uint64_t v19 = v49;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v20 = *(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56);
  uint64_t v45 = v16 + 56;
  uint64_t v47 = v20;
  v20(v19, 0, 1, v15);
  unint64_t v55 = 0;
  uint64_t v21 = type metadata accessor for IntentDialog();
  uint64_t v22 = *(void *)(v21 - 8);
  unint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
  unint64_t v43 = v23;
  uint64_t v44 = v22 + 56;
  v23(v50, 1, 1, v21);
  v23(v51, 1, 1, v21);
  uint64_t v57 = sub_10023ED64();
  uint64_t v58 = v24;
  uint64_t v59 = v25;
  uint64x2_t v27 = (uint64x2_t)vdupq_n_s64(v26);
  char v60 = v26 & 1;
  int16x8_t v28 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v27, (uint64x2_t)xmmword_100524D00), (int32x4_t)vshlq_u64(v27, (uint64x2_t)xmmword_100524CF0));
  *(int8x8_t *)v28.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v28), (int8x8_t)0x1000100010001);
  unsigned __int32 v61 = vmovn_s16(v28).u32[0];
  unsigned int v37 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v29 = *(void (**)(void))(v54 + 104);
  v54 += 104;
  uint64_t v38 = (void (*)(char *, void, uint64_t))v29;
  v29(v52);
  sub_1001579C0();
  unint64_t v30 = v49;
  uint64_t v48 = IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:query:)();
  uint64_t v36 = sub_10002F214((uint64_t *)&unk_10069B150);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v31 = v39;
  uint64_t v32 = v40;
  uint64_t v33 = v41;
  v41(v12, v39, v40);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v33(v12, v31, v32);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v47(v30, 0, 1, v46);
  uint64_t v57 = 0;
  int v34 = v43;
  v43(v50, 1, 1, v21);
  v34(v51, 1, 1, v21);
  v38(v52, v37, v53);
  sub_100162558((unint64_t *)&unk_1006A3B60, (void (*)(uint64_t))type metadata accessor for TagEntity);
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  sub_10002F214((uint64_t *)&unk_10069CE60);
  unint64_t v55 = 0xD000000000000021;
  unint64_t v56 = 0x8000000100549290;
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  sub_10002F214((uint64_t *)&unk_10069B130);
  unint64_t v55 = 0xD000000000000024;
  unint64_t v56 = 0x8000000100549260;
  AnyHashable.init<A>(_:)();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  return v48;
}

unint64_t sub_1001AE7D0()
{
  unint64_t result = qword_10069DD70;
  if (!qword_10069DD70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DD70);
  }
  return result;
}

unint64_t sub_1001AE828()
{
  unint64_t result = qword_10069DD78;
  if (!qword_10069DD78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DD78);
  }
  return result;
}

uint64_t sub_1001AE87C()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1001AE8B0()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for AddTagsToNotesIntent()
{
  return &type metadata for AddTagsToNotesIntent;
}

uint64_t sub_1001AE8DC()
{
  return sub_10001DFB0(&qword_10069DD88, &qword_10069DD90);
}

void *SetChecklistItemsCheckedIntentv1.persistentIdentifier.unsafeMutableAddressor()
{
  return &static SetChecklistItemsCheckedIntentv1.persistentIdentifier;
}

unint64_t static SetChecklistItemsCheckedIntentv1.persistentIdentifier.getter()
{
  return 0xD000000000000021;
}

uint64_t sub_1001AE940()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  sub_100032974(v6, static SetChecklistItemsCheckedIntentv1.title);
  sub_10003293C(v6, (uint64_t)static SetChecklistItemsCheckedIntentv1.title);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t SetChecklistItemsCheckedIntentv1.title.unsafeMutableAddressor()
{
  return sub_1001B0DD8(&qword_10069AC98, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)static SetChecklistItemsCheckedIntentv1.title);
}

uint64_t static SetChecklistItemsCheckedIntentv1.title.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1001B0E6C(&qword_10069AC98, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)static SetChecklistItemsCheckedIntentv1.title, a1);
}

void *SetChecklistItemsCheckedIntentv1.assistantOnly.unsafeMutableAddressor()
{
  return &static SetChecklistItemsCheckedIntentv1.assistantOnly;
}

uint64_t static SetChecklistItemsCheckedIntentv1.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for Locale();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = type metadata accessor for LocalizedStringResource();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v4, 1, 1, v11);
  IntentDescription.init(_:categoryName:searchKeywords:)();
  uint64_t v13 = type metadata accessor for IntentDescription();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 0, 1, v13);
}

uint64_t SetChecklistItemsCheckedIntentv1.changeOperation.getter()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t SetChecklistItemsCheckedIntentv1.changeOperation.setter()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t SetChecklistItemsCheckedIntentv1.loggingConfiguration.getter()
{
  AppDependency.wrappedValue.getter();
  return v1;
}

uint64_t SetChecklistItemsCheckedIntentv1.loggingConfiguration.setter()
{
  return AppDependency.wrappedValue.setter();
}

uint64_t (*SetChecklistItemsCheckedIntentv1.loggingConfiguration.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = AppDependency.wrappedValue.modify();
  return sub_10015ACE0;
}

uint64_t SetChecklistItemsCheckedIntentv1.$loggingConfiguration.getter()
{
  return AppDependency.projectedValue.getter();
}

uint64_t SetChecklistItemsCheckedIntentv1.perform()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[9] = a4;
  v5[10] = a5;
  v5[7] = a2;
  v5[8] = a3;
  v5[6] = a1;
  uint64_t v6 = *(void *)(type metadata accessor for ChecklistItemEntity() - 8);
  v5[11] = v6;
  v5[12] = *(void *)(v6 + 64);
  v5[13] = swift_task_alloc();
  v5[14] = swift_task_alloc();
  return _swift_task_switch(sub_1001AF0CC, 0, 0);
}

uint64_t sub_1001AF0CC()
{
  IntentParameter.wrappedValue.getter();
  uint64_t v1 = *(void *)(v0 + 16);
  *(void *)(v0 + 120) = v1;
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 128) = v2;
  if (v2)
  {
    uint64_t v4 = *(void *)(v0 + 88);
    uint64_t v3 = *(void *)(v0 + 96);
    LODWORD(v5) = *(_DWORD *)(v4 + 80);
    *(_DWORD *)(v0 + 240) = v5;
    uint64_t v5 = v5;
    uint64_t v6 = (v5 + 16) & ~v5;
    unint64_t v7 = (v3 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(void *)(v0 + 136) = *(void *)(v4 + 72);
    *(void *)(v0 + 144) = 0;
    uint64_t v9 = *(void *)(v0 + 104);
    uint64_t v8 = *(void *)(v0 + 112);
    uint64_t v11 = *(void *)(v0 + 72);
    uint64_t v10 = *(void *)(v0 + 80);
    uint64_t v13 = *(void *)(v0 + 56);
    uint64_t v12 = *(void *)(v0 + 64);
    sub_10017E164(v1 + ((v5 + 32) & ~v5), v8);
    AppDependency.wrappedValue.getter();
    uint64_t v14 = *(void **)(v0 + 32);
    *(void *)(v0 + 152) = [v14 modernManagedObjectContext];

    sub_10017E164(v8, v9);
    uint64_t v15 = swift_allocObject();
    *(void *)(v0 + 160) = v15;
    sub_10017E36C(v9, v15 + v6);
    uint64_t v16 = (void *)(v15 + v7);
    void *v16 = v13;
    v16[1] = v12;
    v16[2] = v11;
    v16[3] = v10;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v17 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v17;
    uint64_t v18 = (char *)sub_10002F214((uint64_t *)&unk_10069C930);
    *uint64_t v17 = v0;
    v17[1] = sub_1001AF3C0;
    uint64_t v19 = sub_1001B2634;
    uint64_t v20 = (void *)v15;
    uint64_t v21 = (void *)(v0 + 24);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v23 = *(void *)(v0 + 72);
    uint64_t v22 = *(void *)(v0 + 80);
    uint64_t v25 = *(void *)(v0 + 56);
    uint64_t v24 = *(void *)(v0 + 64);
    AppDependency.wrappedValue.getter();
    unint64_t v26 = *(void **)(v0 + 40);
    *(void *)(v0 + 208) = [v26 modernManagedObjectContext];

    uint64x2_t v27 = (void *)swift_allocObject();
    *(void *)(v0 + 216) = v27;
    v27[2] = v25;
    v27[3] = v24;
    v27[4] = v23;
    v27[5] = v22;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v21 = (void *)swift_task_alloc();
    *(void *)(v0 + 224) = v21;
    *uint64_t v21 = v0;
    v21[1] = sub_1001AFDA8;
    uint64_t v18 = (char *)&type metadata for () + 8;
    uint64_t v19 = sub_1001B274C;
    uint64_t v20 = v27;
  }
  return NSManagedObjectContext.perform<A>(_:)(v21, v19, v20, v18);
}

uint64_t sub_1001AF3C0()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 152);
  swift_task_dealloc();
  swift_release();

  return _swift_task_switch(sub_1001AF4F0, 0, 0);
}

uint64_t sub_1001AF4F0()
{
  uint64_t v1 = *(void **)(v0 + 24);
  *(void *)(v0 + 176) = v1;
  if (!v1) {
    goto LABEL_6;
  }
  self;
  uint64_t v2 = (void *)swift_dynamicCastObjCClass();
  if (!v2)
  {

LABEL_6:
    sub_10017E494(*(void *)(v0 + 112));
    goto LABEL_8;
  }
  uint64_t v3 = v2;
  id v4 = [v2 managedObjectContext];
  *(void *)(v0 + 184) = v4;
  if (v4)
  {
    uint64_t v5 = *(void *)(v0 + 104);
    uint64_t v39 = *(void *)(v0 + 80);
    uint64_t v6 = *(void *)(v0 + 56);
    uint64_t v37 = *(void *)(v0 + 64);
    uint64_t v38 = *(void *)(v0 + 72);
    unint64_t v7 = (*(unsigned __int8 *)(v0 + 240) + 24) & ~(unint64_t)*(unsigned __int8 *)(v0 + 240);
    unint64_t v8 = (*(void *)(v0 + 96) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
    sub_10017E164(*(void *)(v0 + 112), v5);
    uint64_t v9 = swift_allocObject();
    *(void *)(v0 + 192) = v9;
    *(void *)(v9 + 16) = v3;
    sub_10017E36C(v5, v9 + v7);
    uint64_t v10 = (void *)(v9 + v8);
    *uint64_t v10 = v6;
    v10[1] = v37;
    _OWORD v10[2] = v38;
    v10[3] = v39;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    id v11 = v1;
    uint64_t v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 200) = v12;
    uint64_t v13 = (char *)sub_10002F214((uint64_t *)&unk_1006A2BA0);
    *uint64_t v12 = v0;
    v12[1] = sub_1001AF974;
    uint64_t v14 = sub_1001B2920;
    uint64_t v15 = (void *)(v0 + 244);
    uint64_t v16 = (void *)v9;
    goto LABEL_11;
  }
  sub_10017E494(*(void *)(v0 + 112));

LABEL_8:
  uint64_t v17 = *(void *)(v0 + 144) + 1;
  if (v17 == *(void *)(v0 + 128))
  {
    swift_bridgeObjectRelease();
    uint64_t v19 = *(void *)(v0 + 72);
    uint64_t v18 = *(void *)(v0 + 80);
    uint64_t v21 = *(void *)(v0 + 56);
    uint64_t v20 = *(void *)(v0 + 64);
    AppDependency.wrappedValue.getter();
    uint64_t v22 = *(void **)(v0 + 40);
    *(void *)(v0 + 208) = [v22 modernManagedObjectContext];

    uint64_t v23 = (void *)swift_allocObject();
    *(void *)(v0 + 216) = v23;
    v23[2] = v21;
    v23[3] = v20;
    void v23[4] = v19;
    v23[5] = v18;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v15 = (void *)swift_task_alloc();
    *(void *)(v0 + 224) = v15;
    void *v15 = v0;
    v15[1] = sub_1001AFDA8;
    uint64_t v13 = (char *)&type metadata for () + 8;
    uint64_t v14 = sub_1001B274C;
    uint64_t v16 = v23;
  }
  else
  {
    *(void *)(v0 + 144) = v17;
    uint64_t v24 = *(unsigned __int8 *)(v0 + 240);
    uint64_t v25 = *(void *)(v0 + 112);
    uint64_t v26 = *(void *)(v0 + 104);
    uint64_t v27 = *(void *)(v0 + 80);
    uint64_t v29 = *(void *)(v0 + 56);
    uint64_t v28 = *(void *)(v0 + 64);
    uint64_t v30 = (v24 + 16) & ~v24;
    unint64_t v31 = (*(void *)(v0 + 96) + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v40 = *(void *)(v0 + 72);
    sub_10017E164(*(void *)(v0 + 120) + ((v24 + 32) & ~v24) + *(void *)(v0 + 136) * v17, v25);
    AppDependency.wrappedValue.getter();
    uint64_t v32 = *(void **)(v0 + 32);
    *(void *)(v0 + 152) = [v32 modernManagedObjectContext];

    sub_10017E164(v25, v26);
    uint64_t v33 = swift_allocObject();
    *(void *)(v0 + 160) = v33;
    sub_10017E36C(v26, v33 + v30);
    int v34 = (void *)(v33 + v31);
    *int v34 = v29;
    v34[1] = v28;
    v34[2] = v40;
    v34[3] = v27;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v35 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v35;
    uint64_t v13 = (char *)sub_10002F214((uint64_t *)&unk_10069C930);
    *uint64_t v35 = v0;
    v35[1] = sub_1001AF3C0;
    uint64_t v14 = sub_1001B2634;
    uint64_t v15 = (void *)(v0 + 24);
    uint64_t v16 = (void *)v33;
  }
LABEL_11:
  return NSManagedObjectContext.perform<A>(_:)(v15, v14, v16, v13);
}

uint64_t sub_1001AF974()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 184);
  swift_task_dealloc();
  swift_release();

  return _swift_task_switch(sub_1001AFAA4, 0, 0);
}

uint64_t sub_1001AFAA4()
{
  uint64_t v1 = *(void *)(v0 + 112);

  sub_10017E494(v1);
  uint64_t v2 = *(void *)(v0 + 144) + 1;
  if (v2 == *(void *)(v0 + 128))
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = *(void *)(v0 + 72);
    uint64_t v3 = *(void *)(v0 + 80);
    uint64_t v6 = *(void *)(v0 + 56);
    uint64_t v5 = *(void *)(v0 + 64);
    AppDependency.wrappedValue.getter();
    unint64_t v7 = *(void **)(v0 + 40);
    *(void *)(v0 + 208) = [v7 modernManagedObjectContext];

    unint64_t v8 = (void *)swift_allocObject();
    *(void *)(v0 + 216) = v8;
    v8[2] = v6;
    int64_t v8[3] = v5;
    void v8[4] = v4;
    v8[5] = v3;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 224) = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_1001AFDA8;
    uint64_t v10 = (char *)&type metadata for () + 8;
    id v11 = sub_1001B274C;
    uint64_t v12 = v8;
  }
  else
  {
    *(void *)(v0 + 144) = v2;
    uint64_t v13 = *(unsigned __int8 *)(v0 + 240);
    uint64_t v14 = *(void *)(v0 + 112);
    uint64_t v15 = *(void *)(v0 + 104);
    uint64_t v16 = *(void *)(v0 + 80);
    uint64_t v18 = *(void *)(v0 + 56);
    uint64_t v17 = *(void *)(v0 + 64);
    uint64_t v19 = (v13 + 16) & ~v13;
    unint64_t v20 = (*(void *)(v0 + 96) + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v26 = *(void *)(v0 + 72);
    sub_10017E164(*(void *)(v0 + 120) + ((v13 + 32) & ~v13) + *(void *)(v0 + 136) * v2, v14);
    AppDependency.wrappedValue.getter();
    uint64_t v21 = *(void **)(v0 + 32);
    *(void *)(v0 + 152) = [v21 modernManagedObjectContext];

    sub_10017E164(v14, v15);
    uint64_t v22 = swift_allocObject();
    *(void *)(v0 + 160) = v22;
    sub_10017E36C(v15, v22 + v19);
    uint64_t v23 = (void *)(v22 + v20);
    void *v23 = v18;
    v23[1] = v17;
    v23[2] = v26;
    v23[3] = v16;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v24 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v24;
    uint64_t v10 = (char *)sub_10002F214((uint64_t *)&unk_10069C930);
    *uint64_t v24 = v0;
    v24[1] = sub_1001AF3C0;
    id v11 = sub_1001B2634;
    uint64_t v9 = (void *)(v0 + 24);
    uint64_t v12 = (void *)v22;
  }
  return NSManagedObjectContext.perform<A>(_:)(v9, v11, v12, v10);
}

uint64_t sub_1001AFDA8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 232) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1001AFF40;
  }
  else
  {
    uint64_t v4 = *(void **)(v2 + 208);
    swift_release();

    uint64_t v3 = sub_1001AFEC8;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001AFEC8()
{
  static IntentResult.result<>()();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001AFF40()
{
  uint64_t v1 = *(void **)(v0 + 208);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

id sub_1001AFFC4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unsigned char *a7@<X8>)
{
  uint64_t v36 = a4;
  uint64_t v38 = a5;
  uint64_t v35 = a3;
  uint64_t v11 = type metadata accessor for ChecklistItemEntity();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = [a1 textStorage];
  if (!result) {
    goto LABEL_3;
  }
  uint64_t v16 = result;
  id v34 = ICTTAttributeNameParagraphStyle;
  id v17 = [v16 ic_range];
  uint64_t v32 = v18;
  id v33 = v17;
  sub_10017E164(a2, (uint64_t)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v19 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v20 = (v13 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v30 = a6;
  unint64_t v31 = a7;
  unint64_t v21 = (v20 + 39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = swift_allocObject();
  sub_10017E36C((uint64_t)v14, v22 + v19);
  uint64_t v23 = (void *)(v22 + v20);
  uint64_t v24 = v36;
  void *v23 = v35;
  v23[1] = v24;
  v23[2] = v38;
  v23[3] = a6;
  *(void *)(v22 + v21) = v16;
  *(void *)(v22 + ((v21 + 15) & 0xFFFFFFFFFFFFFFF8)) = a1;
  a7 = v31;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = sub_1001B3304;
  *(void *)(v25 + 24) = v22;
  aBlock[4] = sub_10017EBEC;
  aBlock[5] = v25;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1004A06C8;
  aBlock[3] = &unk_10062FB00;
  uint64_t v26 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  id v27 = v16;
  id v28 = a1;
  swift_retain();
  swift_release();
  uint64_t v29 = v34;
  [v27 enumerateAttribute:v34 inRange:v33 options:v32 usingBlock:0 v26];

  _Block_release(v26);
  LOBYTE(v27) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  id result = (id)swift_release();
  if (v27) {
    __break(1u);
  }
  else {
LABEL_3:
  }
    *a7 = 0;
  return result;
}

void sub_1001B02A4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11)
{
  uint64_t v64 = a7;
  uint64_t v65 = a2;
  uint64_t v66 = a3;
  uint64_t v14 = type metadata accessor for UUID();
  uint64_t v67 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10002F214((uint64_t *)&unk_1006A4F60);
  __chkstk_darwin(v17);
  unint64_t v19 = (char *)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10002F214((uint64_t *)&unk_10069C990);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  uint64_t v23 = (char *)&v61 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v26 = (char *)&v61 - v25;
  __chkstk_darwin(v24);
  id v28 = (char *)&v61 - v27;
  sub_10002F034(a1, (uint64_t)v69, &qword_10069B4D0);
  if (!v70)
  {
    sub_10002B754((uint64_t)v69, &qword_10069B4D0);
    return;
  }
  sub_100031418(0, (unint64_t *)&qword_10069C9A0);
  if ((swift_dynamicCast() & 1) == 0) {
    return;
  }
  id v29 = v68;
  if ([v68 style] != 103)
  {

    return;
  }
  unsigned __int32 v61 = a4;
  uint64_t v30 = type metadata accessor for ChecklistItemID();
  uint64_t v31 = v67;
  (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v28, a5 + *(int *)(v30 + 20), v14);
  uint64_t v32 = 1;
  uint64_t v62 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56);
  v62(v28, 0, 1, v14);
  id v63 = v29;
  id v33 = [v29 uuid];
  if (v33)
  {
    id v34 = v33;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v32 = 0;
  }
  v62(v26, v32, 1, v14);
  uint64_t v35 = (uint64_t)&v19[*(int *)(v17 + 48)];
  sub_10002F034((uint64_t)v28, (uint64_t)v19, (uint64_t *)&unk_10069C990);
  sub_10002F034((uint64_t)v26, v35, (uint64_t *)&unk_10069C990);
  uint64_t v36 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v67 + 48);
  if (v36((uint64_t)v19, 1, v14) == 1)
  {
    sub_10002B754((uint64_t)v26, (uint64_t *)&unk_10069C990);
    sub_10002B754((uint64_t)v28, (uint64_t *)&unk_10069C990);
    int v37 = v36(v35, 1, v14);
    id v38 = v63;
    if (v37 == 1)
    {
      sub_10002B754((uint64_t)v19, (uint64_t *)&unk_10069C990);
      goto LABEL_15;
    }
LABEL_13:
    sub_10002B754((uint64_t)v19, (uint64_t *)&unk_1006A4F60);

    return;
  }
  sub_10002F034((uint64_t)v19, (uint64_t)v23, (uint64_t *)&unk_10069C990);
  if (v36(v35, 1, v14) == 1)
  {
    sub_10002B754((uint64_t)v26, (uint64_t *)&unk_10069C990);
    sub_10002B754((uint64_t)v28, (uint64_t *)&unk_10069C990);
    (*(void (**)(char *, uint64_t))(v67 + 8))(v23, v14);
    id v38 = v63;
    goto LABEL_13;
  }
  uint64_t v39 = v67;
  (*(void (**)(char *, uint64_t, uint64_t))(v67 + 32))(v16, v35, v14);
  sub_1001B33FC(&qword_10069DE60, (void (*)(uint64_t))&type metadata accessor for UUID);
  char v40 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v41 = *(void (**)(char *, uint64_t))(v39 + 8);
  v41(v16, v14);
  sub_10002B754((uint64_t)v26, (uint64_t *)&unk_10069C990);
  sub_10002B754((uint64_t)v28, (uint64_t *)&unk_10069C990);
  v41(v23, v14);
  sub_10002B754((uint64_t)v19, (uint64_t *)&unk_10069C990);
  id v38 = v63;
  if ((v40 & 1) == 0)
  {
LABEL_21:

    return;
  }
LABEL_15:
  id v42 = [v38 mutableCopy];
  if (!v42)
  {
    *unsigned __int32 v61 = 1;
    goto LABEL_21;
  }
  unint64_t v43 = v42;
  IntentParameter.wrappedValue.getter();
  uint64_t v44 = v61;
  if (v69[0])
  {
    if (v69[0] == 1)
    {
      id v45 = [v63 todo];
      if (v45)
      {
        uint64_t v46 = v45;
        id v47 = [v45 todoWithDone:0];
LABEL_30:
        id v55 = v47;

        goto LABEL_31;
      }
    }
    else
    {
      id v49 = v63;
      id v50 = [v63 todo];
      if (v50)
      {
        uint64_t v46 = v50;
        id v51 = [v49 todo];
        if (v51)
        {
          unint64_t v52 = v51;
          unsigned int v53 = [v51 done];

          uint64_t v54 = v53 ^ 1;
        }
        else
        {
          uint64_t v54 = 1;
        }
        id v47 = [v46 todoWithDone:v54];
        goto LABEL_30;
      }
    }
  }
  else
  {
    id v48 = [v63 todo];
    if (v48)
    {
      uint64_t v46 = v48;
      id v47 = [v48 todoWithDone:1];
      goto LABEL_30;
    }
  }
  id v55 = 0;
LABEL_31:
  [v43 setTodo:v55];

  sub_10002F214(&qword_10069DE48);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100524D10;
  uint64_t v57 = (void *)ICTTAttributeNameParagraphStyle;
  *(void *)(inited + 32) = ICTTAttributeNameParagraphStyle;
  *(void *)(inited + 64) = sub_100031418(0, (unint64_t *)&qword_10069DE50);
  *(void *)(inited + 40) = v43;
  id v58 = v57;
  id v59 = v43;
  sub_100168480(inited);
  type metadata accessor for Key(0);
  sub_1001B33FC((unint64_t *)&qword_10069BE28, type metadata accessor for Key);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a10 setAttributes:isa range:v65 v66];

  [a11 updateModificationDateAndChangeCount];
  *uint64_t v44 = 1;
}

id sub_1001B09E8()
{
  AppDependency.wrappedValue.getter();
  id v0 = [v4 modernManagedObjectContext];

  id v4 = 0;
  unsigned int v1 = [v0 save:&v4];

  if (v1) {
    return v4;
  }
  id v3 = v4;
  _convertNSErrorToError(_:)();

  return (id)swift_willThrow();
}

uint64_t sub_1001B0AC8()
{
  uint64_t v0 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Locale();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for LocalizedStringResource();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = type metadata accessor for TypeDisplayRepresentation();
  sub_100032974(v10, static SetChecklistItemsCheckedIntentv1.CheckedChangeOperationTypev1.typeDisplayRepresentation);
  sub_10003293C(v10, (uint64_t)static SetChecklistItemsCheckedIntentv1.CheckedChangeOperationTypev1.typeDisplayRepresentation);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t SetChecklistItemsCheckedIntentv1.CheckedChangeOperationTypev1.typeDisplayRepresentation.unsafeMutableAddressor()
{
  return sub_1001B0DD8(&qword_10069ACA0, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)static SetChecklistItemsCheckedIntentv1.CheckedChangeOperationTypev1.typeDisplayRepresentation);
}

uint64_t sub_1001B0DD8(void *a1, uint64_t (*a2)(void), uint64_t a3)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = a2(0);

  return sub_10003293C(v5, a3);
}

uint64_t static SetChecklistItemsCheckedIntentv1.CheckedChangeOperationTypev1.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1001B0E6C(&qword_10069ACA0, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)static SetChecklistItemsCheckedIntentv1.CheckedChangeOperationTypev1.typeDisplayRepresentation, a1);
}

uint64_t sub_1001B0E6C@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = sub_10003293C(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

unint64_t sub_1001B0F0C()
{
  uint64_t v0 = sub_10002F214((uint64_t *)&unk_10069D360);
  __chkstk_darwin(v0 - 8);
  id v38 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v2 - 8);
  int v37 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v4 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Locale();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = type metadata accessor for LocalizedStringResource();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v39 = v9;
  uint64_t v40 = v10;
  __chkstk_darwin(v9);
  sub_10002F214(&qword_10069DE38);
  uint64_t v11 = (int *)(sub_10002F214(&qword_10069DE40) - 8);
  uint64_t v12 = *(void *)(*(void *)v11 + 72);
  unint64_t v13 = (*(unsigned __int8 *)(*(void *)v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v11 + 80);
  uint64_t v29 = 2 * v12;
  uint64_t v14 = swift_allocObject();
  uint64_t v30 = v14;
  *(_OWORD *)(v14 + 16) = xmmword_100529A00;
  unint64_t v28 = v14 + v13;
  unint64_t v25 = v14 + v13 + v11[14];
  *(unsigned char *)(v14 + v13) = 0;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  unsigned int v26 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  uint64_t v27 = v4 + 104;
  id v33 = v15;
  ((void (*)(char *))v15)(v6);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56);
  v40 += 56;
  uint64_t v35 = v16;
  v16(v37, 1, 1, v39);
  uint64_t v32 = type metadata accessor for DisplayRepresentation.Image();
  uint64_t v17 = *(void *)(v32 - 8);
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  uint64_t v34 = v17 + 56;
  v31(v38, 1, 1, v32);
  DisplayRepresentation.init(title:subtitle:image:)();
  unint64_t v18 = v28;
  unint64_t v25 = v28 + v12 + v11[14];
  *(unsigned char *)(v28 + v12) = 1;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v19 = v26;
  v33(v6, v26, v36);
  uint64_t v20 = v6;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v21 = v37;
  v35(v37, 1, 1, v39);
  uint64_t v22 = v38;
  v31(v38, 1, 1, v32);
  DisplayRepresentation.init(title:subtitle:image:)();
  *(unsigned char *)(v18 + v29) = 2;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v33(v20, v19, v36);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v35(v21, 1, 1, v39);
  v31(v22, 1, 1, v32);
  DisplayRepresentation.init(title:subtitle:image:)();
  unint64_t result = sub_1001684A8(v30);
  static SetChecklistItemsCheckedIntentv1.CheckedChangeOperationTypev1.caseDisplayRepresentations = result;
  return result;
}

uint64_t *SetChecklistItemsCheckedIntentv1.CheckedChangeOperationTypev1.caseDisplayRepresentations.unsafeMutableAddressor()
{
  if (qword_10069ACA8 != -1) {
    swift_once();
  }
  return &static SetChecklistItemsCheckedIntentv1.CheckedChangeOperationTypev1.caseDisplayRepresentations;
}

uint64_t static SetChecklistItemsCheckedIntentv1.CheckedChangeOperationTypev1.caseDisplayRepresentations.getter()
{
  if (qword_10069ACA8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static SetChecklistItemsCheckedIntentv1.CheckedChangeOperationTypev1.caseDisplayRepresentations.setter(uint64_t a1)
{
  if (qword_10069ACA8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  static SetChecklistItemsCheckedIntentv1.CheckedChangeOperationTypev1.caseDisplayRepresentations = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static SetChecklistItemsCheckedIntentv1.CheckedChangeOperationTypev1.caseDisplayRepresentations.modify())()
{
  if (qword_10069ACA8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

_UNKNOWN **static SetChecklistItemsCheckedIntentv1.CheckedChangeOperationTypev1.allCases.getter()
{
  return &off_10062B228;
}

uint64_t SetChecklistItemsCheckedIntentv1.CheckedChangeOperationTypev1.rawValue.getter(char a1)
{
  if (!a1) {
    return 0x6B63656863;
  }
  if (a1 == 1) {
    return 0x6B636568636E75;
  }
  return 0x656C67676F74;
}

uint64_t sub_1001B1740(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_100274ECC(*a1, *a2);
}

unint64_t sub_1001B174C@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = _s11MobileNotes32SetChecklistItemsCheckedIntentv1V0F21ChangeOperationTypev1O8rawValueAESgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_1001B177C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE500000000000000;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = 0x6B636568636E75;
  if (v2 != 1)
  {
    uint64_t v5 = 0x656C67676F74;
    unint64_t v4 = 0xE600000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6B63656863;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

Swift::Int sub_1001B17D4()
{
  return Hasher._finalize()();
}

uint64_t sub_1001B1870()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1001B18F8()
{
  return Hasher._finalize()();
}

uint64_t sub_1001B1990@<X0>(uint64_t a1@<X8>)
{
  return sub_1001B1AA8(&qword_10069ACA0, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)static SetChecklistItemsCheckedIntentv1.CheckedChangeOperationTypev1.typeDisplayRepresentation, a1);
}

uint64_t sub_1001B19C8(uint64_t a1)
{
  unint64_t v2 = sub_100157A5C();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_1001B1A14(uint64_t a1)
{
  unint64_t v2 = sub_1001B2C88();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

void sub_1001B1A60(void *a1@<X8>)
{
  *a1 = &off_10062B250;
}

uint64_t sub_1001B1A70@<X0>(uint64_t a1@<X8>)
{
  return sub_1001B1AA8(&qword_10069AC98, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)static SetChecklistItemsCheckedIntentv1.title, a1);
}

uint64_t sub_1001B1AA8@<X0>(void *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = sub_10003293C(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t sub_1001B1B54(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  uint64_t v7 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_100161724;
  return SetChecklistItemsCheckedIntentv1.perform()(a1, v4, v5, v7, v6);
}

uint64_t sub_1001B1C14@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = _s11MobileNotes32SetChecklistItemsCheckedIntentv1VACycfC_0();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return result;
}

uint64_t sub_1001B1C40()
{
  AppDependency.wrappedValue.getter();
  return v1;
}

uint64_t _s11MobileNotes32SetChecklistItemsCheckedIntentv1VACycfC_0()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v50 = v0;
  uint64_t v51 = v1;
  __chkstk_darwin(v0);
  id v49 = &v32[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  id v48 = &v32[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  id v47 = &v32[-v6];
  uint64_t v7 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v7 - 8);
  uint64_t v46 = &v32[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v32[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = type metadata accessor for Locale();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = type metadata accessor for LocalizedStringResource();
  uint64_t v43 = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  int v37 = &v32[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v45 = sub_10002F214((uint64_t *)&unk_10069B160);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v18 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v19 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v10 + 104);
  unsigned int v33 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v34 = v9;
  v19(v12, enum case for LocalizedStringResource.BundleDescription.main(_:), v9);
  uint64_t v36 = v19;
  uint64_t v35 = v10 + 104;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v19(v12, v18, v9);
  uint64_t v20 = v46;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v21 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v16 + 56);
  uint64_t v42 = v16 + 56;
  uint64_t v44 = v21;
  v21(v20, 0, 1, v15);
  uint64_t v54 = 0;
  uint64_t v22 = type metadata accessor for IntentDialog();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
  id v38 = v24;
  uint64_t v39 = v23 + 56;
  v24(v47, 1, 1, v22);
  v24(v48, 1, 1, v22);
  unsigned int v40 = enum case for InputConnectionBehavior.default(_:);
  unint64_t v25 = *(void (**)(void))(v51 + 104);
  v51 += 104;
  uint64_t v41 = (void (*)(unsigned char *, void, uint64_t))v25;
  v25(v49);
  sub_1001B33FC(qword_1006A4EE0, (void (*)(uint64_t))type metadata accessor for ChecklistItemEntity);
  uint64_t v45 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  sub_10002F214((uint64_t *)&unk_10069B200);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v26 = v33;
  uint64_t v27 = v34;
  unint64_t v28 = v36;
  v36(v12, v33, v34);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v28(v12, v26, v27);
  uint64_t v29 = v46;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v44(v29, 0, 1, v43);
  LOBYTE(v54) = 2;
  uint64_t v30 = v38;
  v38(v47, 1, 1, v22);
  v30(v48, 1, 1, v22);
  v41(v49, v40, v50);
  sub_100157A5C();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
  sub_10002F214((uint64_t *)&unk_10069B130);
  unint64_t v52 = 0xD000000000000024;
  unint64_t v53 = 0x8000000100549260;
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  sub_10002F214((uint64_t *)&unk_10069CE60);
  unint64_t v52 = 0xD000000000000021;
  unint64_t v53 = 0x8000000100549290;
  AnyHashable.init<A>(_:)();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  return v45;
}

uint64_t sub_1001B2488()
{
  uint64_t v1 = (int *)(type metadata accessor for ChecklistItemEntity() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  uint64_t v9 = v6 + *(int *)(type metadata accessor for ChecklistItemID() + 20);
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  v8(v6 + v1[7], v7);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v5, v4);
}

void sub_1001B2634(void *a1@<X8>)
{
  type metadata accessor for ChecklistItemEntity();
  AppDependency.wrappedValue.getter();
  id v2 = ChecklistItemEntity.note(in:)(v3);

  *a1 = v2;
}

uint64_t sub_1001B26FC()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

id sub_1001B274C()
{
  return sub_1001B09E8();
}

uint64_t sub_1001B276C()
{
  uint64_t v1 = (int *)(type metadata accessor for ChecklistItemEntity() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;

  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  uint64_t v9 = v6 + *(int *)(type metadata accessor for ChecklistItemID() + 20);
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  v8(v6 + v1[7], v7);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v5 + 32, v4);
}

id sub_1001B2920@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for ChecklistItemEntity() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1001AFFC4(*(void **)(v1 + 16), v1 + v4, *(void *)(v1 + v5), *(void *)(v1 + v5 + 8), *(void *)(v1 + v5 + 16), *(void *)(v1 + v5 + 24), a1);
}

unint64_t _s11MobileNotes32SetChecklistItemsCheckedIntentv1V0F21ChangeOperationTypev1O8rawValueAESgSS_tcfC_0(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10062B1C0, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return 3;
  }
  else {
    return v3;
  }
}

unint64_t sub_1001B2A14()
{
  unint64_t result = qword_10069DDA0;
  if (!qword_10069DDA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DDA0);
  }
  return result;
}

unint64_t sub_1001B2A6C()
{
  unint64_t result = qword_10069DDA8;
  if (!qword_10069DDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DDA8);
  }
  return result;
}

unint64_t sub_1001B2AC4()
{
  unint64_t result = qword_10069DDB0;
  if (!qword_10069DDB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DDB0);
  }
  return result;
}

unint64_t sub_1001B2B1C()
{
  unint64_t result = qword_10069DDB8;
  if (!qword_10069DDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DDB8);
  }
  return result;
}

void *sub_1001B2B70()
{
  return &protocol witness table for String;
}

unint64_t sub_1001B2B80()
{
  unint64_t result = qword_10069DDC0;
  if (!qword_10069DDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DDC0);
  }
  return result;
}

unint64_t sub_1001B2BD8()
{
  unint64_t result = qword_10069DDC8;
  if (!qword_10069DDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DDC8);
  }
  return result;
}

unint64_t sub_1001B2C30()
{
  unint64_t result = qword_10069DDD0;
  if (!qword_10069DDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DDD0);
  }
  return result;
}

unint64_t sub_1001B2C88()
{
  unint64_t result = qword_10069DDD8;
  if (!qword_10069DDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DDD8);
  }
  return result;
}

uint64_t sub_1001B2CDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001B2F44(a1, a2, a3, (void (*)(void))sub_100157A5C);
}

unint64_t sub_1001B2D0C()
{
  unint64_t result = qword_10069DDE8;
  if (!qword_10069DDE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DDE8);
  }
  return result;
}

unint64_t sub_1001B2D64()
{
  unint64_t result = qword_10069DDF0;
  if (!qword_10069DDF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DDF0);
  }
  return result;
}

unint64_t sub_1001B2DBC()
{
  unint64_t result = qword_10069DDF8;
  if (!qword_10069DDF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DDF8);
  }
  return result;
}

uint64_t sub_1001B2E10()
{
  return sub_10001DFB0(&qword_10069DE00, &qword_10069DE08);
}

unint64_t sub_1001B2E50()
{
  unint64_t result = qword_10069DE10;
  if (!qword_10069DE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DE10);
  }
  return result;
}

unint64_t sub_1001B2EA8()
{
  unint64_t result = qword_10069DE18;
  if (!qword_10069DE18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DE18);
  }
  return result;
}

uint64_t sub_1001B2EFC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001B2F18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001B2F44(a1, a2, a3, (void (*)(void))sub_1001B2F8C);
}

uint64_t sub_1001B2F44(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1001B2F8C()
{
  unint64_t result = qword_10069DE20;
  if (!qword_10069DE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DE20);
  }
  return result;
}

ValueMetadata *type metadata accessor for SetChecklistItemsCheckedIntentv1()
{
  return &type metadata for SetChecklistItemsCheckedIntentv1;
}

unsigned char *storeEnumTagSinglePayload for SetChecklistItemsCheckedIntentv1.CheckedChangeOperationTypev1(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001B30BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SetChecklistItemsCheckedIntentv1.CheckedChangeOperationTypev1()
{
  return &type metadata for SetChecklistItemsCheckedIntentv1.CheckedChangeOperationTypev1;
}

uint64_t sub_1001B30F4()
{
  return sub_10001DFB0((unint64_t *)&qword_10069DE30, (uint64_t *)&unk_10069C980);
}

uint64_t sub_1001B3130()
{
  uint64_t v1 = (int *)(type metadata accessor for ChecklistItemEntity() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  unint64_t v4 = (((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  uint64_t v9 = v6 + *(int *)(type metadata accessor for ChecklistItemID() + 20);
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  v8(v6 + v1[7], v7);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v5 + 8, v12);
}

void sub_1001B3304(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  uint64_t v9 = *(void *)(type metadata accessor for ChecklistItemEntity() - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v11 = (*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1001B02A4(a1, a2, a3, a4, v4 + v10, *(void *)(v4 + v11), *(void *)(v4 + v11 + 8), *(void *)(v4 + v11 + 16), *(void *)(v4 + v11 + 24), *(void **)(v4 + ((v11 + 39) & 0xFFFFFFFFFFFFFFF8)), *(void **)(v4 + ((((v11 + 39) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1001B33EC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B33FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *LockNoteIntent.persistentIdentifier.unsafeMutableAddressor()
{
  return &static LockNoteIntent.persistentIdentifier;
}

uint64_t sub_1001B3450()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  sub_100032974(v6, static LockNoteIntent.title);
  sub_10003293C(v6, (uint64_t)static LockNoteIntent.title);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t LockNoteIntent.title.unsafeMutableAddressor()
{
  if (qword_10069ACB0 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for LocalizedStringResource();

  return sub_10003293C(v0, (uint64_t)static LockNoteIntent.title);
}

uint64_t static LockNoteIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_10069ACB0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_10003293C(v2, (uint64_t)static LockNoteIntent.title);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

void *LockNoteIntent.openAppWhenRun.unsafeMutableAddressor()
{
  return &static LockNoteIntent.openAppWhenRun;
}

void *LockNoteIntent.assistantOnly.unsafeMutableAddressor()
{
  return &static LockNoteIntent.assistantOnly;
}

uint64_t static LockNoteIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for Locale();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = type metadata accessor for LocalizedStringResource();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v4, 1, 1, v11);
  IntentDescription.init(_:categoryName:searchKeywords:)();
  uint64_t v13 = type metadata accessor for IntentDescription();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 0, 1, v13);
}

uint64_t LockNoteIntent.target.setter(uint64_t a1)
{
  uint64_t v2 = sub_10002F214(&qword_10069B1D0);
  __chkstk_darwin(v2 - 8);
  sub_10002F034(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10069B1D0);
  IntentParameter.wrappedValue.setter();
  return sub_10002B754(a1, &qword_10069B1D0);
}

uint64_t LockNoteIntent.perform()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[20] = a3;
  v5[21] = a5;
  v5[18] = a1;
  v5[19] = a2;
  sub_10002F214((uint64_t *)&unk_10069C9B0);
  v5[22] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for LocalizedStringResource.BundleDescription();
  v5[23] = v6;
  v5[24] = *(void *)(v6 - 8);
  v5[25] = swift_task_alloc();
  type metadata accessor for Locale();
  v5[26] = swift_task_alloc();
  type metadata accessor for String.LocalizationValue();
  v5[27] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for LocalizedStringResource();
  v5[28] = v7;
  v5[29] = *(void *)(v7 - 8);
  v5[30] = swift_task_alloc();
  v5[31] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for NoteEntity(0);
  v5[32] = v8;
  v5[33] = *(void *)(v8 - 8);
  v5[34] = swift_task_alloc();
  sub_10002F214(&qword_10069B1D0);
  v5[35] = swift_task_alloc();
  return _swift_task_switch(sub_1001B3D34, 0, 0);
}

uint64_t sub_1001B3D34()
{
  uint64_t v1 = *(void **)(v0 + 168);
  if (!v1)
  {
    type metadata accessor for ICError(0);
    *(void *)(v0 + 128) = 222;
    sub_1001B50CC((uint64_t)_swiftEmptyArrayStorage);
    sub_1001B58CC((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_willThrow();
LABEL_14:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v28 = *(uint64_t (**)(void))(v0 + 8);
    return v28();
  }
  uint64_t v2 = *(void *)(v0 + 280);
  uint64_t v3 = *(void *)(v0 + 256);
  uint64_t v4 = *(void *)(v0 + 264);
  id v5 = v1;
  AppDependency.wrappedValue.getter();
  uint64_t v6 = *(void **)(v0 + 104);
  *(void *)(v0 + 288) = [v6 modernManagedObjectContext];

  uint64_t v7 = swift_allocObject();
  *(void *)(v0 + 296) = v7;
  *(void *)(v7 + 16) = 0;
  IntentParameter.wrappedValue.getter();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3))
  {
    sub_10002B754(*(void *)(v0 + 280), &qword_10069B1D0);
    *(void *)(v0 + 328) = 0;
    uint64_t v8 = *(void *)(v0 + 296);
    swift_beginAccess();
    uint64_t v9 = *(void **)(v8 + 16);
    *(void *)(v0 + 336) = v9;
    if (v9)
    {
      id v10 = v9;
      if (objc_msgSend(v10, "ic_isModernNoteType"))
      {
        uint64_t v11 = *(void **)(v0 + 288);
        id v12 = *(id *)(v0 + 168);
        id v13 = v10;
        id v14 = v11;
        return _swift_task_switch(sub_1001B4808, 0, 0);
      }
      unint64_t v25 = *(void **)(v0 + 288);
      uint64_t v26 = *(void **)(v0 + 168);
      sub_100173F8C();
      swift_allocError();
      *uint64_t v27 = 17;
      swift_willThrow();

      swift_release();
    }
    else
    {
      unsigned int v33 = *(void **)(v0 + 288);
      uint64_t v19 = *(void *)(v0 + 240);
      uint64_t v18 = *(void *)(v0 + 248);
      uint64_t v30 = *(void *)(v0 + 232);
      uint64_t v31 = *(void *)(v0 + 224);
      uint64_t v20 = *(void *)(v0 + 200);
      uint64_t v22 = *(void *)(v0 + 184);
      uint64_t v21 = *(void *)(v0 + 192);
      uint64_t v23 = *(void *)(v0 + 176);
      uint64_t v32 = *(void **)(v0 + 168);
      String.LocalizationValue.init(stringLiteral:)();
      static Locale.current.getter();
      (*(void (**)(uint64_t, void, uint64_t))(v21 + 104))(v20, enum case for LocalizedStringResource.BundleDescription.main(_:), v22);
      LocalizedStringResource.init(_:table:locale:bundle:comment:)();
      IntentParameter.projectedValue.getter();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v19, v18, v31);
      IntentDialog.init(_:)();
      uint64_t v24 = type metadata accessor for IntentDialog();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 0, 1, v24);
      type metadata accessor for AppIntentError();
      sub_1001B58CC((unint64_t *)&unk_1006A2DB0, (void (*)(uint64_t))&type metadata accessor for AppIntentError);
      swift_allocError();
      IntentParameter.needsValueError(_:)();
      swift_release();
      sub_10002B754(v23, (uint64_t *)&unk_10069C9B0);
      swift_willThrow();

      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v18, v31);
      swift_release();
    }
    goto LABEL_14;
  }
  uint64_t v15 = *(void *)(v0 + 280);
  sub_10018991C(v15, *(void *)(v0 + 272));
  sub_10002B754(v15, &qword_10069B1D0);
  AppDependency.wrappedValue.getter();
  uint64_t v16 = *(void *)(v0 + 136);
  *(void *)(v0 + 304) = v16;
  uint64_t v34 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10069CE40 + dword_10069CE40);
  swift_retain();
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v0 + 312) = v17;
  *uint64_t v17 = v0;
  v17[1] = sub_1001B42F0;
  return v34((uint64_t)v34, v16, (uint64_t)sub_1001B5934, v7);
}

uint64_t sub_1001B42F0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 320) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void **)(v2 + 304);
  sub_100189980(*(void *)(v2 + 272));
  swift_release();

  if (v0) {
    uint64_t v4 = sub_1001B4C7C;
  }
  else {
    uint64_t v4 = sub_1001B4460;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1001B4460()
{
  *(void *)(v0 + 328) = *(void *)(v0 + 320);
  uint64_t v1 = *(void *)(v0 + 296);
  swift_beginAccess();
  uint64_t v2 = *(void **)(v1 + 16);
  *(void *)(v0 + 336) = v2;
  if (v2)
  {
    id v3 = v2;
    if (objc_msgSend(v3, "ic_isModernNoteType"))
    {
      uint64_t v4 = *(void **)(v0 + 288);
      id v5 = *(id *)(v0 + 168);
      id v6 = v3;
      id v7 = v4;
      return _swift_task_switch(sub_1001B4808, 0, 0);
    }
    uint64_t v15 = *(void **)(v0 + 288);
    uint64_t v16 = *(void **)(v0 + 168);
    sub_100173F8C();
    swift_allocError();
    *uint64_t v17 = 17;
    swift_willThrow();

    swift_release();
  }
  else
  {
    uint64_t v23 = *(void **)(v0 + 288);
    uint64_t v9 = *(void *)(v0 + 240);
    uint64_t v8 = *(void *)(v0 + 248);
    uint64_t v20 = *(void *)(v0 + 232);
    uint64_t v21 = *(void *)(v0 + 224);
    uint64_t v10 = *(void *)(v0 + 200);
    uint64_t v12 = *(void *)(v0 + 184);
    uint64_t v11 = *(void *)(v0 + 192);
    uint64_t v13 = *(void *)(v0 + 176);
    uint64_t v22 = *(void **)(v0 + 168);
    String.LocalizationValue.init(stringLiteral:)();
    static Locale.current.getter();
    (*(void (**)(uint64_t, void, uint64_t))(v11 + 104))(v10, enum case for LocalizedStringResource.BundleDescription.main(_:), v12);
    LocalizedStringResource.init(_:table:locale:bundle:comment:)();
    IntentParameter.projectedValue.getter();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v9, v8, v21);
    IntentDialog.init(_:)();
    uint64_t v14 = type metadata accessor for IntentDialog();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 0, 1, v14);
    type metadata accessor for AppIntentError();
    sub_1001B58CC((unint64_t *)&unk_1006A2DB0, (void (*)(uint64_t))&type metadata accessor for AppIntentError);
    swift_allocError();
    IntentParameter.needsValueError(_:)();
    swift_release();
    sub_10002B754(v13, (uint64_t *)&unk_10069C9B0);
    swift_willThrow();

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v8, v21);
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t sub_1001B4808()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0;
  id v3 = v0 + 2;
  uint64_t v4 = v1[41];
  uint64_t v5 = v1[42];
  uint64_t v6 = v1[36];
  uint64_t v7 = v1[21];
  v1[2] = v2;
  v1[7] = v1 + 15;
  v1[3] = sub_1001B4944;
  uint64_t v8 = swift_continuation_init();
  uint64_t v9 = (void *)swift_task_alloc();
  id v9[2] = v6;
  v9[3] = v5;
  v9[4] = v7;
  v9[5] = v8;
  NSManagedObjectContext.performAndWait<A>(_:)();
  swift_task_dealloc();
  if (v4)
  {
    sub_10002F214(&qword_1006A3D90);
    swift_allocError();
    *uint64_t v10 = v4;
    swift_continuation_throwingResumeWithError();
  }
  return _swift_continuation_await(v3);
}

uint64_t sub_1001B4944()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 344) = v2;
  if (v2)
  {
    swift_willThrow();
    id v3 = sub_1001B4A80;
  }
  else
  {
    uint64_t v4 = *(void **)(v1 + 336);
    uint64_t v5 = *(void **)(v1 + 168);
    uint64_t v6 = *(void **)(v1 + 120);

    id v3 = sub_1001B4B7C;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001B4A80()
{
  uint64_t v1 = (void *)v0[42];
  uint64_t v2 = (void *)v0[36];
  id v3 = (void *)v0[21];
  swift_willThrow();

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1001B4B7C()
{
  uint64_t v1 = *(void **)(v0 + 288);
  uint64_t v2 = *(void **)(v0 + 168);

  static IntentResult.result<>()();
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1001B4C7C()
{
  uint64_t v1 = *(void **)(v0 + 168);

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_1001B4D58(void *a1, uint64_t a2)
{
  id v3 = [a1 objectID];
  swift_beginAccess();
  uint64_t v4 = *(void **)(a2 + 16);
  *(void *)(a2 + 16) = v3;
}

void sub_1001B4DCC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6 = [a1 ic_existingObjectWithID:a2];
  if (v6)
  {
    uint64_t v7 = v6;
    self;
    uint64_t v8 = (void *)swift_dynamicCastObjCClass();
    if (!v8)
    {
LABEL_5:

      return;
    }
    uint64_t v9 = v8;
    if ([v8 isPasswordProtected])
    {
      sub_100173F8C();
      swift_allocError();
      *uint64_t v10 = 18;
      swift_willThrow();
      goto LABEL_5;
    }
    id v11 = [objc_allocWithZone((Class)ICNoteLockManager) initWithNote:v9];
    [v11 setWindow:a3];
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = a4;
    *(void *)(v12 + 24) = v11;
    v15[4] = sub_1001B5BE8;
    v15[5] = v12;
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 1107296256;
    v15[2] = sub_10048354C;
    v15[3] = &unk_10062FC10;
    uint64_t v13 = _Block_copy(v15);
    id v14 = v11;
    swift_release();
    [v14 addLockWithCompletionHandler:v13];
    _Block_release(v13);
  }
}

uint64_t sub_1001B4F7C(int a1, uint64_t a2, id a3)
{
  id v5 = [a3 updatedNote];
  sub_1001B5BF0((uint64_t)&v5, *(void *)(*(void *)(a2 + 64) + 40));
  return swift_continuation_throwingResume();
}

uint64_t sub_1001B4FEC(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  uint64_t v6 = v1[3];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_100161724;
  return LockNoteIntent.perform()(a1, v4, v5, v7, v6);
}

uint64_t sub_1001B50A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = _s11MobileNotes14LockNoteIntentVACycfC_0();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return result;
}

unint64_t sub_1001B50CC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10002F214(&qword_10069C620);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_10002F034(v6, (uint64_t)&v15, &qword_10069C628);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1004038FC(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    id v11 = (uint64_t *)(v3[6] + 16 * result);
    *id v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_100032E84(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t _s11MobileNotes14LockNoteIntentVACycfC_0()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v36 = *(void *)(v0 - 8);
  uint64_t v37 = v0;
  __chkstk_darwin(v0);
  uint64_t v35 = (char *)v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v34 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  unsigned int v33 = (char *)v31 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069B1D0);
  __chkstk_darwin(v6 - 8);
  uint64_t v32 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v8 - 8);
  v31[0] = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  BOOL v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Locale();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = type metadata accessor for LocalizedStringResource();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  v31[1] = sub_10002F214(&qword_10069B210);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v18 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v19(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v19(v13, v18, v10);
  uint64_t v20 = v31[0];
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
  uint64_t v21 = type metadata accessor for NoteEntity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v32, 1, 1, v21);
  uint64_t v22 = type metadata accessor for IntentDialog();
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(v33, 1, 1, v22);
  v23(v34, 1, 1, v22);
  uint64_t v40 = sub_10023F2DC();
  uint64_t v41 = v24;
  uint64_t v42 = v25;
  uint64x2_t v27 = (uint64x2_t)vdupq_n_s64(v26);
  char v43 = v26 & 1;
  int16x8_t v28 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v27, (uint64x2_t)xmmword_100524D00), (int32x4_t)vshlq_u64(v27, (uint64x2_t)xmmword_100524CF0));
  *(int8x8_t *)v28.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v28), (int8x8_t)0x1000100010001);
  unsigned __int32 v44 = vmovn_s16(v28).u32[0];
  (*(void (**)(char *, void, uint64_t))(v36 + 104))(v35, enum case for InputConnectionBehavior.default(_:), v37);
  sub_1001579C0();
  uint64_t v29 = IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:query:)();
  sub_10002F214((uint64_t *)&unk_10069CE60);
  unint64_t v38 = 0xD000000000000021;
  unint64_t v39 = 0x8000000100549290;
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  sub_10002F214((uint64_t *)&unk_10069B130);
  unint64_t v38 = 0xD000000000000024;
  unint64_t v39 = 0x8000000100549260;
  AnyHashable.init<A>(_:)();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  return v29;
}

uint64_t sub_1001B5894()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001B58CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1001B5914()
{
  sub_1001B4DCC(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

void sub_1001B5934(void *a1)
{
  sub_1001B4D58(a1, v1);
}

uint64_t sub_1001B5950()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001B596C()
{
  return swift_getOpaqueTypeConformance2();
}

void destroy for LockNoteIntent(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v2 = *(void **)(a1 + 24);
}

void *initializeWithCopy for LockNoteIntent(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = (void *)a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  id v5 = v4;
  return a1;
}

void *assignWithCopy for LockNoteIntent(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  uint64_t v4 = (void *)a1[3];
  id v5 = (void *)a2[3];
  a1[3] = v5;
  id v6 = v5;

  return a1;
}

uint64_t assignWithTake for LockNoteIntent(uint64_t a1, _OWORD *a2)
{
  swift_release();
  *(_OWORD *)a1 = *a2;
  swift_release();
  swift_release();
  uint64_t v4 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];

  return a1;
}

ValueMetadata *type metadata accessor for LockNoteIntent()
{
  return &type metadata for LockNoteIntent;
}

unint64_t sub_1001B5B54()
{
  unint64_t result = qword_10069DE30;
  if (!qword_10069DE30)
  {
    sub_10001DFF4((uint64_t *)&unk_10069C980);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DE30);
  }
  return result;
}

uint64_t sub_1001B5BB0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B5BE8(int a1)
{
  return sub_1001B4F7C(a1, *(void *)(v1 + 16), *(id *)(v1 + 24));
}

uint64_t sub_1001B5BF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002F214(&qword_10069DE88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

char *sub_1001B5C58(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  uint64_t v46 = a5;
  id v50 = a1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = sub_10002F214(&qword_10069DEF0);
  uint64_t v52 = v10;
  uint64_t v54 = *(void *)(v10 - 8);
  uint64_t v11 = v54;
  __chkstk_darwin(v10);
  uint64_t v53 = (uint64_t)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_10002F214(&qword_10069DEF8);
  uint64_t v45 = *(void *)(v55 - 8);
  uint64_t v13 = *(void *)(v45 + 64);
  uint64_t v14 = __chkstk_darwin(v55);
  uint64_t v15 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  unint64_t v56 = (char *)&v44 - v16;
  *(void *)&v5[OBJC_IVAR____TtC11MobileNotes39FolderComposerFolderSelectionDataSource_accountsChangeObservation] = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(&v5[OBJC_IVAR____TtC11MobileNotes39FolderComposerFolderSelectionDataSource____lazy_storage___accountsChangePublisher], 1, 1, v10);
  *(void *)&v5[OBJC_IVAR____TtC11MobileNotes39FolderComposerFolderSelectionDataSource_folderSelection] = a3;
  *(void *)&v5[OBJC_IVAR____TtC11MobileNotes39FolderComposerFolderSelectionDataSource_accountObjectID] = a4;
  id v17 = objc_allocWithZone((Class)ICFolderCoreDataIndexer);
  id v18 = a3;
  id v19 = a4;
  id v51 = v19;
  id v20 = [v17 initWithLegacyManagedObjectContext:a1 modernManagedObjectContext:a2];
  [v20 setAccountObjectID:v19];
  [v20 setShouldIncludeSmartFolders:0];
  [v20 setShouldIncludeAccount:2];
  [v20 setShouldIncludeSystemPaper:2];
  [v20 setShouldIncludeMathNotes:2];
  [v20 setShouldIncludeCallNotes:2];
  [v20 setShouldIncludeSharedWithYou:2];
  [v20 setShouldIncludeTrash:0];
  [v20 setShouldIncludeLegacyAccounts:0];
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = a2;
  *(void *)(v21 + 24) = v18;
  sub_100031418(0, &qword_10069DF00);
  sub_100031418(0, (unint64_t *)&qword_10069E810);
  id v49 = v18;
  id v48 = a2;
  uint64_t v22 = v56;
  UICollectionView.CellRegistration.init(handler:)();
  uint64_t v23 = v45;
  uint64_t v24 = v55;
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v15, v22, v55);
  unint64_t v25 = (*(unsigned __int8 *)(v23 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  uint64_t v26 = swift_allocObject();
  uint64x2_t v27 = v46;
  *(void *)(v26 + 16) = v46;
  (*(void (**)(unint64_t, char *, uint64_t))(v23 + 32))(v26 + v25, v15, v24);
  uint64_t v62 = sub_1001B70E0;
  uint64_t v63 = v26;
  aBlock = _NSConcreteStackBlock;
  uint64_t v59 = 1107296256;
  char v60 = sub_100328308;
  unsigned __int32 v61 = &unk_10062FC88;
  int16x8_t v28 = _Block_copy(&aBlock);
  id v29 = v27;
  swift_retain();
  swift_release();
  v57.receiver = v5;
  v57.super_class = ObjectType;
  id v30 = [super initWithCollectionView:v29 cellProvider:v28 indexer:v20];
  _Block_release(v28);
  id v31 = v30;
  [v31 setAutoExpandMode:2];
  sub_10002F214(&qword_10069BA00);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_100529F20;
  id v33 = objc_allocWithZone((Class)NSNumber);
  uint64_t v34 = (char *)v31;
  *(void *)(v32 + 32) = [v33 initWithUnsignedInteger:1];
  aBlock = (void **)v32;
  specialized Array._endMutation()();
  sub_100031418(0, (unint64_t *)&unk_1006A4F50);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v34 setSectionTypes:isa];

  id v36 = [objc_allocWithZone((Class)UICollectionViewDiffableDataSourceSectionSnapshotHandlers) init];
  uint64_t v62 = variable initialization expression of FastSync.LeaveActivityAction.isFinished;
  uint64_t v63 = 0;
  aBlock = _NSConcreteStackBlock;
  uint64_t v59 = 1107296256;
  char v60 = sub_1001B6764;
  unsigned __int32 v61 = &unk_10062FCB0;
  uint64_t v37 = _Block_copy(&aBlock);
  [v36 setShouldExpandItemHandler:v37];
  _Block_release(v37);
  uint64_t v62 = variable initialization expression of FastSync.LeaveActivityAction.isFinished;
  uint64_t v63 = 0;
  aBlock = _NSConcreteStackBlock;
  uint64_t v59 = 1107296256;
  char v60 = sub_1001B6764;
  unsigned __int32 v61 = &unk_10062FCD8;
  unint64_t v38 = _Block_copy(&aBlock);
  [v36 setShouldCollapseItemHandler:v38];
  _Block_release(v38);
  id v39 = [v34 collectionViewDiffableDataSource];
  [v39 setSectionSnapshotHandlers:v36];

  uint64_t v40 = v53;
  sub_1001B67DC(v53);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_10001DFB0(&qword_10069DF08, &qword_10069DEF0);
  uint64_t v41 = v52;
  uint64_t v42 = Publisher<>.sink(receiveValue:)();
  swift_release();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v40, v41);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v56, v55);
  *(void *)&v34[OBJC_IVAR____TtC11MobileNotes39FolderComposerFolderSelectionDataSource_accountsChangeObservation] = v42;
  swift_release();
  return v34;
}

void sub_1001B6404(void *a1, int a2, void *a3, id a4, void *a5)
{
  if (a4)
  {
    id v7 = [a4 ic_existingObjectWithID:*a3];
    if (v7)
    {
      id v17 = v7;
      self;
      uint64_t v8 = swift_dynamicCastObjCClass();
      if (v8)
      {
        uint64_t v9 = (void *)v8;
        [a1 setAllowsExpandCollapse:0];
        [a1 setHasGroupInset:1];
        [a1 setHasDisclosureIndicator:0];
        [a1 setShowsNoteCount:0];
        id v10 = v17;
        [a1 setNoteContainer:v9];
        id v11 = [v9 identifier];

        if (v11)
        {
          uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v14 = v13;

          id v15 = [a5 folderIdentifiers];
          uint64_t v16 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();

          LOBYTE(v15) = sub_1002D62A4(v12, v14, v16);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          [a1 setShowsCheckmark:v15 & 1];
        }
      }
    }
  }
}

uint64_t sub_1001B65C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100032E28(a3, (uint64_t)v10);
  sub_100031418(0, (unint64_t *)&qword_10069E810);
  if (swift_dynamicCast())
  {
    sub_100031418(0, &qword_10069DF00);
    id v4 = v9[0];
    uint64_t v5 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();

    sub_100018FE8((uint64_t)v10);
    return v5;
  }
  else
  {
    sub_100032E28(a3, (uint64_t)v9);
    _StringGuts.grow(_:)(45);
    v7._object = (void *)0x800000010054ED50;
    v7._countAndFlagsBits = 0xD00000000000002ALL;
    String.append(_:)(v7);
    _print_unlocked<A, B>(_:_:)();
    v8._countAndFlagsBits = 125;
    v8._object = (void *)0xE100000000000000;
    String.append(_:)(v8);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_1001B6764(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(uint64_t (**)(void *))(a1 + 32);
  v5[3] = swift_getObjectType();
  v5[0] = a2;
  swift_retain();
  swift_unknownObjectRetain();
  LOBYTE(a2) = v3(v5);
  swift_release();
  sub_100018FE8((uint64_t)v5);
  return a2 & 1;
}

uint64_t sub_1001B67DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10002F214(&qword_10069DF10);
  __chkstk_darwin(v3 - 8);
  uint64_t v34 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride();
  uint64_t v35 = *(void *)(v5 - 8);
  uint64_t v36 = v5;
  __chkstk_darwin(v5);
  id v33 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v8 = __chkstk_darwin(v7);
  __chkstk_darwin(v8);
  uint64_t v32 = sub_10002F214(&qword_10069DF18);
  uint64_t v30 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  id v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10002F214(&qword_10069DF20);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  id v31 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  id v15 = (char *)&v29 - v14;
  uint64_t v16 = v1
      + OBJC_IVAR____TtC11MobileNotes39FolderComposerFolderSelectionDataSource____lazy_storage___accountsChangePublisher;
  swift_beginAccess();
  sub_1001B71B0(v16, (uint64_t)v15);
  uint64_t v17 = sub_10002F214(&qword_10069DEF0);
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v15, 1, v17) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v18 + 32))(a1, v15, v17);
  }
  sub_10002B754((uint64_t)v15, &qword_10069DF20);
  id v19 = self;
  uint64_t v29 = a1;
  id v20 = [v19 defaultCenter];
  NSNotificationCenter.publisher(for:object:)();

  id v21 = [v19 defaultCenter];
  NSNotificationCenter.publisher(for:object:)();

  sub_1001B7218();
  Publishers.Merge.init(_:_:)();
  uint64_t v22 = v33;
  static NSRunLoop.SchedulerTimeType.Stride.milliseconds(_:)();
  id v37 = [self mainRunLoop];
  uint64_t v23 = type metadata accessor for NSRunLoop.SchedulerOptions();
  uint64_t v24 = (uint64_t)v34;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v34, 1, 1, v23);
  sub_100031418(0, &qword_10069DF28);
  sub_10001DFB0(&qword_10069DF30, &qword_10069DF18);
  sub_1001B7270();
  uint64_t v25 = v29;
  uint64_t v26 = v32;
  Publisher.debounce<A>(for:scheduler:options:)();
  sub_10002B754(v24, &qword_10069DF10);

  (*(void (**)(char *, uint64_t))(v35 + 8))(v22, v36);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v26);
  uint64_t v27 = (uint64_t)v31;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v31, v25, v17);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(v27, 0, 1, v17);
  swift_beginAccess();
  sub_1001B72D8(v27, v16);
  return swift_endAccess();
}

void sub_1001B6D48()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    [Strong reloadDataAnimated:1];
  }
}

uint64_t sub_1001B6E6C()
{
  return type metadata accessor for FolderComposerFolderSelectionDataSource();
}

uint64_t type metadata accessor for FolderComposerFolderSelectionDataSource()
{
  uint64_t result = qword_10069DED8;
  if (!qword_10069DED8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1001B6EC0()
{
  sub_1001B6F6C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1001B6F6C()
{
  if (!qword_10069DEE8)
  {
    sub_10001DFF4(&qword_10069DEF0);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10069DEE8);
    }
  }
}

uint64_t sub_1001B6FC8()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1001B7008(void *a1, int a2, void *a3)
{
  sub_1001B6404(a1, a2, a3, *(id *)(v3 + 16), *(void **)(v3 + 24));
}

uint64_t sub_1001B7010()
{
  uint64_t v1 = sub_10002F214(&qword_10069DEF8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1001B70E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10002F214(&qword_10069DEF8);

  return sub_1001B65C4(a1, a2, a3);
}

uint64_t sub_1001B7170()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1001B71A8()
{
}

uint64_t sub_1001B71B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002F214(&qword_10069DF20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1001B7218()
{
  unint64_t result = qword_1006A52C0;
  if (!qword_1006A52C0)
  {
    type metadata accessor for NSNotificationCenter.Publisher();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A52C0);
  }
  return result;
}

unint64_t sub_1001B7270()
{
  unint64_t result = qword_10069DF38;
  if (!qword_10069DF38)
  {
    sub_100031418(255, &qword_10069DF28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DF38);
  }
  return result;
}

uint64_t sub_1001B72D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002F214(&qword_10069DF20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001B7350()
{
  uint64_t v0 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Locale();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for LocalizedStringResource();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = type metadata accessor for TypeDisplayRepresentation();
  sub_100032974(v10, static FolderViewSetting.typeDisplayRepresentation);
  sub_10003293C(v10, (uint64_t)static FolderViewSetting.typeDisplayRepresentation);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t FolderViewSetting.typeDisplayRepresentation.unsafeMutableAddressor()
{
  if (qword_10069ACB8 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for TypeDisplayRepresentation();

  return sub_10003293C(v0, (uint64_t)static FolderViewSetting.typeDisplayRepresentation);
}

uint64_t static FolderViewSetting.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_10069ACB8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for TypeDisplayRepresentation();
  uint64_t v3 = sub_10003293C(v2, (uint64_t)static FolderViewSetting.typeDisplayRepresentation);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

MobileNotes::FolderViewSetting_optional __swiftcall FolderViewSetting.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10062B278, v2);
  swift_bridgeObjectRelease();
  if (v3 == 1) {
    v4.value = MobileNotes_FolderViewSetting_listView;
  }
  else {
    v4.value = MobileNotes_FolderViewSetting_unknownDefault;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t FolderViewSetting.rawValue.getter(char a1)
{
  if (a1) {
    return 0x776569567473696CLL;
  }
  else {
    return 0x567972656C6C6167;
  }
}

uint64_t sub_1001B77CC(char *a1, char *a2)
{
  return sub_1002760C8(*a1, *a2);
}

uint64_t sub_1001B77D8@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10062B278, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

void sub_1001B7838(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x567972656C6C6167;
  if (*v1) {
    uint64_t v2 = 0x776569567473696CLL;
  }
  unint64_t v3 = 0xEB00000000776569;
  if (*v1) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

Swift::Int sub_1001B7880()
{
  return Hasher._finalize()();
}

uint64_t sub_1001B790C()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1001B7984()
{
  return Hasher._finalize()();
}

uint64_t sub_1001B7A0C(uint64_t a1)
{
  unint64_t v2 = sub_100157B04();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1001B7A58()
{
  uint64_t v0 = sub_10002F214((uint64_t *)&unk_10069D360);
  __chkstk_darwin(v0 - 8);
  id v37 = (char *)&v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v2 - 8);
  uint64_t v36 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v4 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Locale();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = type metadata accessor for LocalizedStringResource();
  uint64_t v27 = v11;
  uint64_t v38 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  sub_10002F214(&qword_10069DFA8);
  uint64_t v12 = (int *)(sub_10002F214(&qword_10069C5F8) - 8);
  uint64_t v13 = *(void *)v12;
  uint64_t v34 = *(void *)(*(void *)v12 + 72);
  unint64_t v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = swift_allocObject();
  uint64_t v35 = v15;
  *(_OWORD *)(v15 + 16) = xmmword_100527F30;
  unint64_t v16 = v15 + v14;
  unint64_t v29 = v15 + v14 + v12[14];
  *(unsigned char *)(v15 + v14) = 0;
  String.LocalizationValue.init(stringLiteral:)();
  uint64_t v26 = v9;
  static Locale.current.getter();
  unsigned int v30 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(void))(v4 + 104);
  uint64_t v31 = v4 + 104;
  id v33 = (void (*)(char *, void, uint64_t))v17;
  v17(v6);
  uint64_t v18 = v6;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  id v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56);
  v38 += 56;
  int16x8_t v28 = v19;
  id v20 = v36;
  v19(v36, 1, 1, v11);
  uint64_t v21 = type metadata accessor for DisplayRepresentation.Image();
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
  uint64_t v23 = v37;
  v22(v37, 1, 1, v21);
  DisplayRepresentation.init(title:subtitle:image:)();
  uint64_t v24 = (unsigned char *)(v16 + v34);
  v34 += v16 + v12[14];
  *uint64_t v24 = 1;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v33(v18, v30, v32);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v28(v20, 1, 1, v27);
  v22(v23, 1, 1, v21);
  DisplayRepresentation.init(title:subtitle:image:)();
  unint64_t result = sub_1001684D0(v35);
  static FolderViewSetting.caseDisplayRepresentations = result;
  return result;
}

uint64_t *FolderViewSetting.caseDisplayRepresentations.unsafeMutableAddressor()
{
  if (qword_10069ACC0 != -1) {
    swift_once();
  }
  return &static FolderViewSetting.caseDisplayRepresentations;
}

uint64_t static FolderViewSetting.caseDisplayRepresentations.getter()
{
  if (qword_10069ACC0 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

_UNKNOWN **static FolderViewSetting.allCases.getter()
{
  return &off_10062B2C8;
}

unint64_t sub_1001B8028()
{
  unint64_t result = qword_10069DF40;
  if (!qword_10069DF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DF40);
  }
  return result;
}

unint64_t sub_1001B8080()
{
  unint64_t result = qword_10069DF48;
  if (!qword_10069DF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DF48);
  }
  return result;
}

unint64_t sub_1001B80D8()
{
  unint64_t result = qword_10069DF50;
  if (!qword_10069DF50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DF50);
  }
  return result;
}

unint64_t sub_1001B8130()
{
  unint64_t result = qword_10069DF58;
  if (!qword_10069DF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DF58);
  }
  return result;
}

unint64_t sub_1001B8188()
{
  unint64_t result = qword_10069DF60;
  if (!qword_10069DF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DF60);
  }
  return result;
}

unint64_t sub_1001B81E0()
{
  unint64_t result = qword_10069DF68;
  if (!qword_10069DF68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DF68);
  }
  return result;
}

unint64_t sub_1001B8238()
{
  unint64_t result = qword_10069DF70;
  if (!qword_10069DF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DF70);
  }
  return result;
}

unint64_t sub_1001B8290()
{
  unint64_t result = qword_10069DF78;
  if (!qword_10069DF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DF78);
  }
  return result;
}

uint64_t sub_1001B82E4()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1001B8338()
{
  unint64_t result = qword_10069DF80;
  if (!qword_10069DF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DF80);
  }
  return result;
}

unint64_t sub_1001B8390()
{
  unint64_t result = qword_10069DF88;
  if (!qword_10069DF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DF88);
  }
  return result;
}

unint64_t sub_1001B83E8()
{
  unint64_t result = qword_10069DF90;
  if (!qword_10069DF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DF90);
  }
  return result;
}

uint64_t sub_1001B843C(uint64_t a1)
{
  unint64_t v2 = sub_1001B8290();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_1001B848C()
{
  unint64_t result = qword_10069DF98;
  if (!qword_10069DF98)
  {
    sub_10001DFF4(&qword_10069DFA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DF98);
  }
  return result;
}

void sub_1001B84E8(void *a1@<X8>)
{
  *a1 = &off_10062B2F0;
}

unsigned char *storeEnumTagSinglePayload for FolderViewSetting(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001B85C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FolderViewSetting()
{
  return &type metadata for FolderViewSetting;
}

uint64_t sub_1001B85FC()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100032974(v0, qword_10069DFB0);
  sub_10003293C(v0, (uint64_t)qword_10069DFB0);
  return static Logger.audioTranscription.getter();
}

uint64_t sub_1001B8648()
{
  uint64_t v0 = type metadata accessor for URL();
  sub_100032974(v0, static CallNoteCoordinator.csdDirectory);
  sub_10003293C(v0, (uint64_t)static CallNoteCoordinator.csdDirectory);
  return URL.init(fileURLWithPath:)();
}

uint64_t CallNoteCoordinator.csdDirectory.unsafeMutableAddressor()
{
  if (qword_10069ACD0 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for URL();

  return sub_10003293C(v0, (uint64_t)static CallNoteCoordinator.csdDirectory);
}

uint64_t static CallNoteCoordinator.csdDirectory.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_10069ACD0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = sub_10003293C(v2, (uint64_t)static CallNoteCoordinator.csdDirectory);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

id CallNoteCoordinator.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CallNoteCoordinator();
  return [super init];
}

id CallNoteCoordinator.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CallNoteCoordinator();
  [super dealloc];
}

void sub_1001B8AD8(uint64_t a1, void *a2)
{
  uint64_t v2 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_100031418(0, &qword_10069BDF0);
    sub_1001BC094();
    Set.Iterator.init(_cocoa:)();
    uint64_t v2 = v31;
    uint64_t v28 = v32;
    uint64_t v3 = v33;
    uint64_t v4 = v34;
    unint64_t v5 = v35;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v28 = a1 + 56;
    uint64_t v7 = ~v6;
    uint64_t v8 = -v6;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v5 = v9 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v3 = v7;
    uint64_t v4 = 0;
  }
  int64_t v27 = (unint64_t)(v3 + 64) >> 6;
  uint64_t v29 = v2;
  while (v2 < 0)
  {
    if (!__CocoaSet.Iterator.next()()) {
      goto LABEL_42;
    }
    sub_100031418(0, &qword_10069BDF0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v13 = v36;
    swift_unknownObjectRelease();
    uint64_t v12 = v4;
    uint64_t v10 = v5;
    if (!v36) {
      goto LABEL_42;
    }
LABEL_33:
    id v17 = [v13 identifier];
    if (v17)
    {
      uint64_t v18 = v17;
      uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v21 = v20;
    }
    else
    {
      uint64_t v19 = 0;
      uint64_t v21 = 0;
    }
    id v22 = [a2 UUIDString];
    uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v25 = v24;

    if (v21)
    {
      if (v19 == v23 && v21 == v25)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_42:
        sub_10017B518();
        return;
      }
      char v26 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v26) {
        goto LABEL_42;
      }
    }
    else
    {

      swift_bridgeObjectRelease();
    }
    uint64_t v4 = v12;
    unint64_t v5 = v10;
    uint64_t v2 = v29;
  }
  if (v5)
  {
    uint64_t v10 = (v5 - 1) & v5;
    unint64_t v11 = __clz(__rbit64(v5)) | (v4 << 6);
    uint64_t v12 = v4;
LABEL_32:
    id v13 = *(id *)(*(void *)(v2 + 48) + 8 * v11);
    if (!v13) {
      goto LABEL_42;
    }
    goto LABEL_33;
  }
  int64_t v14 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v14 >= v27) {
      goto LABEL_42;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v14);
    uint64_t v12 = v4 + 1;
    if (!v15)
    {
      uint64_t v12 = v4 + 2;
      if (v4 + 2 >= v27) {
        goto LABEL_42;
      }
      unint64_t v15 = *(void *)(v28 + 8 * v12);
      if (!v15)
      {
        uint64_t v12 = v4 + 3;
        if (v4 + 3 >= v27) {
          goto LABEL_42;
        }
        unint64_t v15 = *(void *)(v28 + 8 * v12);
        if (!v15)
        {
          uint64_t v12 = v4 + 4;
          if (v4 + 4 >= v27) {
            goto LABEL_42;
          }
          unint64_t v15 = *(void *)(v28 + 8 * v12);
          if (!v15)
          {
            uint64_t v12 = v4 + 5;
            if (v4 + 5 >= v27) {
              goto LABEL_42;
            }
            unint64_t v15 = *(void *)(v28 + 8 * v12);
            if (!v15)
            {
              uint64_t v16 = v4 + 6;
              while (v27 != v16)
              {
                unint64_t v15 = *(void *)(v28 + 8 * v16++);
                if (v15)
                {
                  uint64_t v12 = v16 - 1;
                  goto LABEL_31;
                }
              }
              goto LABEL_42;
            }
          }
        }
      }
    }
LABEL_31:
    uint64_t v10 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + (v12 << 6);
    goto LABEL_32;
  }
  __break(1u);
}

uint64_t _s11MobileNotes19CallNoteCoordinatorC8callType3forSo06ICCallG0VSo6NSUUIDC_tFZ_0(void *a1)
{
  id v2 = [self sharedInstance];
  NSString v3 = [a1 UUIDString];
  if (!v3)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v3 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  id v4 = [v2 callWithUniqueProxyIdentifier:v3];

  if (!v4) {
    return 0;
  }
  unsigned int v5 = [v4 service];

  uint64_t v6 = 2;
  if (v5 != 2) {
    uint64_t v6 = 3;
  }
  if (v5 == 1) {
    return 1;
  }
  else {
    return v6;
  }
}

uint64_t sub_1001B8F7C()
{
  if (!qword_1006CDA78)
  {
    sub_100031418(0, &qword_10069DFF8);
    if ([(id)swift_getObjCClassFromMetadata() isOptedInForAnalytics])
    {
      type metadata accessor for CallNoteCoordinator();
      sub_10002F214(&qword_10069E000);
      String.init<A>(describing:)();
      id v0 = objc_allocWithZone((Class)ICNAEventReporter);
      NSString v1 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v2 = [v0 initWithSubTrackerName:v1];

      NSString v3 = (void *)qword_1006CDA78;
      qword_1006CDA78 = (uint64_t)v2;

      if (qword_1006CDA78)
      {
        id v4 = [self defaultCenter];
        [v4 addObserver:_bridgeAnythingNonVerbatimToObjectiveC<A>(_:)() selector:"eventReporterLostSession:" name:ICNAEventReporterLostSessionNotification object:qword_1006CDA78];

        swift_unknownObjectRelease();
      }
    }
  }
  return qword_1006CDA78;
}

void sub_1001B90E4(void *a1, void *a2, void *a3)
{
  uint64_t v6 = sub_10002F214((uint64_t *)&qword_10069DFF0);
  __chkstk_darwin(v6 - 8);
  unint64_t v124 = ((char *)&v120 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for RecordingMetadata();
  Class isa = v8[-1].isa;
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)&v120 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v130 - 8);
  __chkstk_darwin(v130);
  uint64_t v129 = (char *)&v120 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = [self sharedContext];
  [v14 ensureModernAccountExistsInContext:a3];

  id v127 = [self defaultAccountInContext:a3];
  if (v127)
  {
    uint64_t v122 = v11;
    if (qword_10069ACC8 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    uint64_t v16 = sub_10003293C(v15, (uint64_t)qword_10069DFB0);
    id v17 = a1;
    id v18 = a2;
    uint64_t v19 = v17;
    unint64_t v131 = v18;
    unint64_t v126 = v16;
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.info.getter();
    BOOL v22 = os_log_type_enabled(v20, v21);
    uint64_t v123 = v12;
    if (v22)
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v24 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 138412546;
      uint64_t v128 = v8;
      uint64_t v25 = v131;
      Swift::Int v125 = isa;
      uint64_t v132 = v19;
      char v26 = v19;
      char v121 = a3;
      int64_t v27 = v26;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v24 = v19;

      *(_WORD *)(v23 + 12) = 2112;
      uint64_t v132 = v25;
      uint64_t v28 = v25;
      Class isa = v125;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v24[1] = v25;
      uint64_t v8 = v128;

      a3 = v121;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "creating new call note from NSUserActivity with note ID: %@ attachmentID: %@", (uint8_t *)v23, 0x16u);
      sub_10002F214(&qword_10069FD50);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v33 = v131;
    }
    p_ivar_base_size = &ShowQuickNoteIntent.LayoutMonitorBox.ivar_base_size;
    id v35 = [v19 UUIDString];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    id v36 = a3;
    NSString v37 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v38 = self;
    id v39 = [v38 noteWithIdentifier:v37 context:v36];

    if (!v39)
    {
      id v40 = [v127 defaultFolder];
      id v39 = [v38 newEmptyNoteWithUUID:v19 folder:v40];
    }
    Swift::Int v125 = (objc_class *)[self paragraphStyleNamed:0];
    uint64_t v128 = v39;
    [v39 markAsCallNoteIfNeeded:1];
    if (qword_10069ACD0 != -1) {
      swift_once();
    }
    sub_10003293C(v130, (uint64_t)static CallNoteCoordinator.csdDirectory);
    id v41 = [v19 description];
    uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v44 = v43;

    uint64_t v132 = v42;
    uint64_t v133 = v44;
    v45._countAndFlagsBits = 95;
    v45._object = (void *)0xE100000000000000;
    String.append(_:)(v45);
    id v46 = [v131 description];
    uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v49 = v48;

    v50._countAndFlagsBits = v47;
    v50._object = v49;
    String.append(_:)(v50);
    swift_bridgeObjectRelease();
    URL.appendingPathComponent(_:)();
    swift_bridgeObjectRelease();
    uint64_t v51 = (uint64_t)v124;
    sub_100379F08((uint64_t)v124);
    uint64_t v52 = &selRef_isShared;
    if ((*((unsigned int (**)(uint64_t, uint64_t, NSObject *))isa + 6))(v51, 1, v8) == 1)
    {
      sub_10002B754(v51, (uint64_t *)&qword_10069DFF0);
    }
    else
    {
      uint64_t v53 = v122;
      (*((void (**)(char *, uint64_t, NSObject *))isa + 4))(v122, v51, v8);
      RecordingMetadata.remoteHandle.getter();
      uint64_t v54 = static AudioTranscriptionContactsUtility.speakerNameFromContacts(handle:)();
      uint64_t v56 = v55;
      swift_bridgeObjectRelease();
      if (v56)
      {
        id v57 = [self mainBundle];
        NSString v58 = String._bridgeToObjectiveC()();
        uint64_t v59 = (void (**)(void, void *))isa;
        id v60 = [v57 localizedStringForKey:v58 value:0 table:0];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        sub_10002F214((uint64_t *)&unk_1006A1950);
        uint64_t v61 = swift_allocObject();
        *(_OWORD *)(v61 + 16) = xmmword_100524D10;
        *(void *)(v61 + 56) = &type metadata for String;
        *(void *)(v61 + 64) = sub_1001BBFD8();
        *(void *)(v61 + 32) = v54;
        *(void *)(v61 + 40) = v56;
        uint64_t v52 = &selRef_isShared;
        String.init(format:_:)();
        swift_bridgeObjectRelease();
        ((void (**)(char *, NSObject *))v59)[1](v53, v8);
        uint64_t v62 = v128;
        goto LABEL_27;
      }
      (*((void (**)(char *, NSObject *))isa + 1))(v53, v8);
      uint64_t v52 = &selRef_isShared;
    }
    uint64_t v63 = v19;
    uint64_t v64 = Logger.logObject.getter();
    os_log_type_t v65 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v64, v65))
    {
      unint64_t v124 = v19;
      uint64_t v66 = (uint8_t *)swift_slowAlloc();
      uint64_t v67 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v66 = 138412290;
      uint64_t v132 = v63;
      id v68 = v63;
      p_ivar_base_size = (_DWORD *)(&ShowQuickNoteIntent.LayoutMonitorBox + 8);
      uint64_t v19 = v124;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v67 = v63;

      uint64_t v52 = &selRef_isShared;
      _os_log_impl((void *)&_mh_execute_header, v64, v65, "Could not fetch caller name for note id %@. Falling back to default title", v66, 0xCu);
      sub_10002F214(&qword_10069FD50);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v64 = v63;
    }
    uint64_t v62 = v128;

    id v69 = [self mainBundle];
    NSString v70 = String._bridgeToObjectiveC()();
    id v71 = [v69 localizedStringForKey:v70 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
LABEL_27:
    id v72 = [v62 textStorage];
    if (v72)
    {
      unint64_t v73 = v72;
      sub_10002F214(&qword_10069DE48);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_100524D10;
      unint64_t v75 = (void *)ICTTAttributeNameParagraphStyle;
      *(void *)(inited + 32) = ICTTAttributeNameParagraphStyle;
      *(void *)(inited + 64) = sub_100031418(0, (unint64_t *)&qword_10069DE50);
      uint64_t v76 = p_ivar_base_size;
      unint64_t v77 = v125;
      *(void *)(inited + 40) = v125;
      id v78 = v75;
      uint64_t v79 = v77;
      p_ivar_base_size = v76;
      sub_100168480(inited);
      id v80 = objc_allocWithZone((Class)NSAttributedString);
      NSString v81 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      type metadata accessor for Key(0);
      sub_1001BBF80();
      Class v82 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v83 = [v80 initWithString:v81 attributes:v82];

      [v73 appendAttributedString:v83];
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    NSString v84 = [v131 *((SEL *)p_ivar_base_size + 298)];
    if (!v84)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v84 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    id v85 = [v62 addAudioAttachmentWithIdentifier:v84];

    uint64_t v86 = _s11MobileNotes19CallNoteCoordinatorC8callType3forSo06ICCallG0VSo6NSUUIDC_tFZ_0(v19);
    id v87 = [self mainBundle];
    NSString v88 = String._bridgeToObjectiveC()();
    id v89 = [v87 v52[169] v88];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v90 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v85 setTitle:v90];

    id v91 = [v85 audioModel];
    if (v91)
    {
      uint64_t v92 = v91;
      id v93 = [v91 audioDocument];

      if (!v93)
      {
        __break(1u);
        goto LABEL_49;
      }
      [v93 setIsCallRecording:1];
    }
    id v94 = [v85 audioModel];
    if (!v94)
    {
LABEL_38:
      id v97 = [v85 audioModel];
      if (v97)
      {
        BOOL v98 = v97;
        [v97 setMergeableDataDirty:1];
      }
      NSString v99 = String._bridgeToObjectiveC()();
      [v85 updateChangeCountWithReason:v99];

      char v100 = [objc_allocWithZone((Class)ICAttachmentInsertionController) initWithNote:v62];
      [v62 save];
      uint64_t v101 = (void *)sub_1001B8F7C();
      if (v101)
      {
        id v102 = v101;
        id v103 = [v102 subTracker];
        if (v103)
        {
          uint64_t v104 = v103;
          BOOL v105 = self;
          id v106 = [v105 sharedController];
          [v106 enterGroupWithSubtracker:v104];

          [v102 submitNoteCreateEventForModernNote:v62 createApproach:22];
          id v107 = [v105 sharedController];
          [v107 leaveGroupWithSubtracker:v104];
        }
      }
      uint64_t v108 = v19;
      uint64_t v109 = v131;
      uint64_t v110 = v108;
      uint64_t v111 = v109;
      uint64_t v112 = Logger.logObject.getter();
      os_log_type_t v113 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v112, v113))
      {
        uint64_t v114 = swift_slowAlloc();
        uint64_t v115 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v114 = 138412546;
        unint64_t v126 = v112;
        uint64_t v132 = v110;
        unint64_t v116 = v110;
        unint64_t v131 = v100;
        Swift::Int v117 = v116;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v115 = v110;

        *(_WORD *)(v114 + 12) = 2112;
        uint64_t v132 = v111;
        char v118 = v111;
        uint64_t v112 = v126;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        v115[1] = v111;

        char v100 = v131;
        _os_log_impl((void *)&_mh_execute_header, v112, v113, "finalized creaton of new call note from NSUserActivity with note ID: %@ attachmentID: %@", (uint8_t *)v114, 0x16u);
        sub_10002F214(&qword_10069FD50);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        uint64_t v119 = v123;
        uint64_t v111 = v128;
      }
      else
      {

        uint64_t v119 = v123;
      }

      (*(void (**)(char *, uint64_t))(v119 + 8))(v129, v130);
      return;
    }
    char v95 = v94;
    id v96 = [v94 audioDocument];

    if (v96)
    {
      [v96 setCallType:v86];

      goto LABEL_38;
    }
LABEL_49:
    __break(1u);
    return;
  }
  if (qword_10069ACC8 != -1) {
    swift_once();
  }
  uint64_t v29 = type metadata accessor for Logger();
  sub_10003293C(v29, (uint64_t)qword_10069DFB0);
  unint64_t v131 = Logger.logObject.getter();
  os_log_type_t v30 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v131, v30))
  {
    uint64_t v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v31 = 0;
    _os_log_impl((void *)&_mh_execute_header, v131, v30, "Call recording could not create a new note from because we couldnt get a default account", v31, 2u);
    swift_slowDealloc();
  }
  uint64_t v32 = v131;
}

uint64_t sub_1001BA14C(void *a1, void *a2, void *a3)
{
  uint64_t v6 = sub_10002F214(&qword_10069B310);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10069ACC8 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_10003293C(v9, (uint64_t)qword_10069DFB0);
  id v10 = a1;
  id v11 = a2;
  id v12 = v10;
  id v13 = v11;
  id v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    id v17 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 138412546;
    uint64_t v25 = a3;
    id v26 = v12;
    id v18 = v12;
    uint64_t v24 = v8;
    id v19 = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v17 = v12;

    *(_WORD *)(v16 + 12) = 2112;
    id v26 = v13;
    id v20 = v13;
    uint64_t v8 = v24;
    a3 = v25;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v17[1] = v13;

    _os_log_impl((void *)&_mh_execute_header, v14, v15, "ending call recording from NSUserActivity with note ID: %@ attachmentID: %@", (uint8_t *)v16, 0x16u);
    sub_10002F214(&qword_10069FD50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v21 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v8, 1, 1, v21);
  _s11MobileNotes21CallRecordingImporterV016importAndComposecD06noteID09recordingJ020managedObjectContext9directory16fromUserActivityySo6NSUUIDC_AKSo09NSManagedmN0C10Foundation3URLVSgSbtFZ_0(v12, v13, a3, (uint64_t)v8, 1);
  return sub_10002B754((uint64_t)v8, &qword_10069B310);
}

uint64_t _s11MobileNotes19CallNoteCoordinatorC08fetchAllC10Recordings9directorySay10Foundation3URLVGAHSg_tFZ_0(uint64_t a1)
{
  uint64_t v2 = sub_10002F214(&qword_10069B310);
  __chkstk_darwin(v2 - 8);
  id v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1001BC0FC(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    if (qword_10069ACD0 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_10003293C(v5, (uint64_t)static CallNoteCoordinator.csdDirectory);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
    sub_10002B754((uint64_t)v4, &qword_10069B310);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 32))(v8, v4, v5);
  }
  id v10 = [self defaultManager];
  uint64_t v11 = NSFileManager.contentsOfDirectory(at:)();
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);

  return v11;
}

void _s11MobileNotes19CallNoteCoordinatorC06deleteC23RecordingsFromDirectory9directoryy10Foundation3URLV_tFZ_0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = [self defaultManager];
  URL._bridgeToObjectiveC()(v7);
  uint64_t v9 = v8;
  id v29 = 0;
  unsigned int v10 = [v6 removeItemAtURL:v8 error:&v29];

  if (v10)
  {
    uint64_t v11 = qword_10069ACC8;
    id v12 = v29;
    if (v11 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_10003293C(v13, (uint64_t)qword_10069DFB0);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
    id v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      id v29 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136315138;
      id v27 = v6;
      uint64_t v17 = URL.description.getter();
      unint64_t v28 = sub_10045DA1C(v17, v18, (uint64_t *)&v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "deleted call recording from directory: %s", v16, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  else
  {
    id v19 = v29;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_10069ACC8 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_10003293C(v20, (uint64_t)qword_10069DFB0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 138412290;
      swift_errorRetain();
      uint64_t v25 = (void *)_swift_stdlib_bridgeErrorToNSError();
      id v29 = v25;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v24 = v25;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "could not delete directory for call recording: %@", v23, 0xCu);
      sub_10002F214(&qword_10069FD50);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

uint64_t type metadata accessor for CallNoteCoordinator()
{
  return self;
}

uint64_t sub_1001BABC8(void *a1)
{
  uint64_t v2 = (void *)qword_1006CDA78;
  qword_1006CDA78 = 0;

  id v3 = [self defaultCenter];
  v15[0] = type metadata accessor for CallNoteCoordinator();
  sub_10002F214(&qword_10069E000);
  uint64_t v4 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
  uint64_t v5 = ICNAEventReporterLostSessionNotification;
  if (!a1) {
    goto LABEL_7;
  }
  if ([a1 object])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v13 = 0u;
    long long v14 = 0u;
  }
  sub_1001BC02C((uint64_t)&v13, (uint64_t)v15);
  uint64_t v6 = v16;
  if (v16)
  {
    uint64_t v7 = sub_10015E154(v15, v16);
    uint64_t v8 = *(void *)(v6 - 8);
    __chkstk_darwin(v7);
    unsigned int v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v8 + 16))(v10);
    uint64_t v11 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v6);
    sub_100018FE8((uint64_t)v15);
  }
  else
  {
LABEL_7:
    uint64_t v11 = 0;
  }
  [v3 removeObserver:v4 name:v5 object:v13[0]];

  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t _s11MobileNotes19CallNoteCoordinatorC015importAndDeleteC13RecordingFile20managedObjectContext9directory6noteID09recordingP00Q3URLSbSo09NSManagedlM0C_10Foundation0R0VSgSo6NSUUIDCAqNtFZ_0(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v8 = [self defaultManager];
  id v9 = [a3 UUIDString];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v10 = a1;
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v12 = [self noteWithIdentifier:v11 context:v10];

  if (!v12) {
    goto LABEL_14;
  }
  unint64_t v73 = v12;
  id v13 = [v12 attachments];
  if (!v13) {
    goto LABEL_13;
  }
  long long v14 = v13;
  sub_100031418(0, &qword_10069BDF0);
  sub_1001BC094();
  uint64_t v74 = v8;
  uint64_t v15 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  id v16 = a4;
  sub_1001B8AD8(v15, v16);
  unint64_t v18 = v17;
  id v8 = v74;
  swift_bridgeObjectRelease();

  if (!v18)
  {
LABEL_13:

LABEL_14:
    _s11MobileNotes21CallRecordingImporterV016importAndComposecD06noteID09recordingJ020managedObjectContext9directory16fromUserActivityySo6NSUUIDC_AKSo09NSManagedmN0C10Foundation3URLVSgSbtFZ_0(a3, a4, v10, a2, 0);
    if (qword_10069ACC8 != -1) {
      swift_once();
    }
    uint64_t v41 = type metadata accessor for Logger();
    sub_10003293C(v41, (uint64_t)qword_10069DFB0);
    id v42 = a4;
    id v43 = a3;
    id v44 = v42;
    id v45 = v43;
    id v46 = Logger.logObject.getter();
    os_log_type_t v47 = static os_log_type_t.info.getter();
    if (!os_log_type_enabled(v46, v47))
    {

      return 1;
    }
    uint64_t v48 = swift_slowAlloc();
    id v49 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v48 = 138412546;
    id v75 = v8;
    id v50 = v45;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v49 = v45;

    *(_WORD *)(v48 + 12) = 2112;
    id v76 = v44;
    id v51 = v44;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v49[1] = v44;

    _os_log_impl((void *)&_mh_execute_header, v46, v47, "importing call recording source file for new note with note ID: %@ attachmentID: %@", (uint8_t *)v48, 0x16u);
    sub_10002F214(&qword_10069FD50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v52 = v75;
LABEL_26:

    return 1;
  }
  id v72 = v18;
  if (ICInternalSettingsShouldPreserveImportedCallRecordingData()) {
    goto LABEL_20;
  }
  id v19 = [v18 subAttachments];
  if (!v19) {
    goto LABEL_20;
  }
  uint64_t v20 = v19;
  uint64_t v21 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  os_log_type_t v22 = (void *)sub_1002AAE60(v21);
  swift_bridgeObjectRelease();
  if (!v22) {
    goto LABEL_20;
  }
  id v23 = [v22 media];

  if (!v23)
  {

LABEL_20:
    _s11MobileNotes21CallRecordingImporterV016importAndComposecD06noteID09recordingJ020managedObjectContext9directory16fromUserActivityySo6NSUUIDC_AKSo09NSManagedmN0C10Foundation3URLVSgSbtFZ_0(a3, v16, v10, a2, 0);
    if (qword_10069ACC8 != -1) {
      swift_once();
    }
    uint64_t v53 = type metadata accessor for Logger();
    sub_10003293C(v53, (uint64_t)qword_10069DFB0);
    id v54 = v16;
    id v55 = a3;
    id v56 = v54;
    id v57 = v55;
    NSString v58 = Logger.logObject.getter();
    os_log_type_t v59 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v58, v59))
    {
      uint64_t v60 = swift_slowAlloc();
      uint64_t v61 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v60 = 138412546;
      id v62 = v57;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v61 = v57;

      *(_WORD *)(v60 + 12) = 2112;
      id v76 = v56;
      id v63 = v56;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v61[1] = v56;

      _os_log_impl((void *)&_mh_execute_header, v58, v59, "importing call recording source file for existing note with note ID: %@ attachmentID: %@", (uint8_t *)v60, 0x16u);
      sub_10002F214(&qword_10069FD50);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v52 = v73;
    goto LABEL_26;
  }
  URL._bridgeToObjectiveC()(v24);
  uint64_t v26 = v25;
  id v76 = 0;
  unsigned int v27 = [v74 removeItemAtURL:v25 error:&v76];

  if (v27)
  {
    uint64_t v28 = qword_10069ACC8;
    id v29 = v76;
    if (v28 != -1) {
      swift_once();
    }
    uint64_t v30 = type metadata accessor for Logger();
    sub_10003293C(v30, (uint64_t)qword_10069DFB0);
    id v31 = v16;
    id v32 = a3;
    id v33 = v31;
    id v34 = v32;
    id v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = swift_slowAlloc();
      uint64_t v38 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v37 = 138412546;
      id v76 = v34;
      id v39 = v34;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v38 = v34;

      *(_WORD *)(v37 + 12) = 2112;
      id v76 = v33;
      id v40 = v33;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v38[1] = v33;

      _os_log_impl((void *)&_mh_execute_header, v35, v36, "deleting call recording source file for note ID: %@ attachmentID: %@", (uint8_t *)v37, 0x16u);
      sub_10002F214(&qword_10069FD50);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    return 0;
  }
  else
  {
    id v65 = v76;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_10069ACC8 != -1) {
      swift_once();
    }
    uint64_t v66 = type metadata accessor for Logger();
    sub_10003293C(v66, (uint64_t)qword_10069DFB0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v67 = Logger.logObject.getter();
    os_log_type_t v68 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v67, v68))
    {
      id v69 = (uint8_t *)swift_slowAlloc();
      NSString v70 = (void *)swift_slowAlloc();
      *(_DWORD *)id v69 = 138412290;
      swift_errorRetain();
      id v71 = (void *)_swift_stdlib_bridgeErrorToNSError();
      id v76 = v71;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *NSString v70 = v71;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v67, v68, "could not remove call recording:%@", v69, 0xCu);
      sub_10002F214(&qword_10069FD50);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    return 0;
  }
}

void sub_1001BB7B0(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10002F214(&qword_10069B310);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = URL.pathComponents.getter();
  uint64_t v10 = *(void *)(v9 + 16);
  if (!v10) {
    goto LABEL_6;
  }
  uint64_t v11 = v9 + 16 * v10;
  uint64_t v12 = *(void *)(v11 + 16);
  uint64_t v13 = *(void *)(v11 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v34 = v12;
  uint64_t v35 = v13;
  sub_10017B588();
  uint64_t v14 = StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)();
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(v14 + 16);
  if (!v15) {
    goto LABEL_6;
  }
  uint64_t v30 = a3;
  id v31 = a2;
  uint64_t v36 = v3;
  uint64_t v16 = v14 + 32 + 32 * v15;
  uint64_t v17 = *(void *)(v16 - 32);
  uint64_t v32 = *(void *)(v16 - 16);
  uint64_t v33 = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  static String._fromSubstring(_:)();
  swift_bridgeObjectRelease();
  id v18 = objc_allocWithZone((Class)NSUUID);
  NSString v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v20 = [v18 initWithUUIDString:v19];

  if (v20)
  {
    static String._fromSubstring(_:)();
    swift_bridgeObjectRelease();
    id v21 = objc_allocWithZone((Class)NSUUID);
    NSString v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v23 = [v21 initWithUUIDString:v22];

    if (v23)
    {
      uint64_t v24 = type metadata accessor for URL();
      uint64_t v25 = *(void *)(v24 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v8, v30, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v8, 0, 1, v24);
      _s11MobileNotes19CallNoteCoordinatorC015importAndDeleteC13RecordingFile20managedObjectContext9directory6noteID09recordingP00Q3URLSbSo09NSManagedlM0C_10Foundation0R0VSgSo6NSUUIDCAqNtFZ_0(v31, (uint64_t)v8, v20, v23);

      sub_10002B754((uint64_t)v8, &qword_10069B310);
      return;
    }
  }
  else
  {
LABEL_6:
    swift_bridgeObjectRelease();
  }
  if (qword_10069ACC8 != -1) {
    swift_once();
  }
  uint64_t v26 = type metadata accessor for Logger();
  sub_10003293C(v26, (uint64_t)qword_10069DFB0);
  unsigned int v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v27, v28))
  {
    id v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v29 = 0;
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "did not parse directory name for call recording", v29, 2u);
    swift_slowDealloc();
  }
}

uint64_t _s11MobileNotes19CallNoteCoordinatorC015importAndDeleteC22RecordingFilesIfNeeded9directory20managedObjectContexty10Foundation3URLVSg_So09NSManagedoP0CtFZ_0(uint64_t a1, void *a2)
{
  uint64_t v33 = a2;
  uint64_t v3 = sub_10002F214(&qword_10069B310);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v30 - v8;
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v30 - v10;
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  id v18 = (char *)&v30 - v17;
  sub_1001BC0FC(a1, (uint64_t)v11);
  uint64_t v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  uint64_t v36 = v13 + 48;
  if (v35(v11, 1, v12) == 1)
  {
    if (qword_10069ACD0 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_10003293C(v12, (uint64_t)static CallNoteCoordinator.csdDirectory);
    id v20 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    unint64_t v21 = (v13 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v20(v18, v19, v12);
    sub_10002B754((uint64_t)v11, &qword_10069B310);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v11, v12);
    id v20 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    unint64_t v21 = (v13 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v37 = v18;
  unint64_t v34 = v21;
  v20(v9, (uint64_t)v18, v12);
  uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v38(v9, 0, 1, v12);
  uint64_t v22 = _s11MobileNotes19CallNoteCoordinatorC08fetchAllC10Recordings9directorySay10Foundation3URLVGAHSg_tFZ_0((uint64_t)v9);
  sub_10002B754((uint64_t)v9, &qword_10069B310);
  uint64_t v23 = *(void *)(v22 + 16);
  uint64_t v30 = v22;
  uint64_t v31 = v13;
  if (v23)
  {
    uint64_t v32 = (void (*)(char *, unint64_t, uint64_t))v20;
    unint64_t v24 = v22 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    uint64_t v25 = v13;
    uint64_t v26 = *(void *)(v13 + 72);
    unsigned int v27 = (void (**)(char *, char *, uint64_t))(v25 + 32);
    os_log_type_t v28 = (void (**)(char *, uint64_t))(v25 + 8);
    swift_bridgeObjectRetain();
    while (1)
    {
      v32(v6, v24, v12);
      v38(v6, 0, 1, v12);
      if (v35(v6, 1, v12) == 1) {
        break;
      }
      (*v27)(v16, v6, v12);
      sub_1001BB7B0((uint64_t)v16, v33, (uint64_t)v37);
      (*v28)(v16, v12);
      v24 += v26;
      if (!--v23) {
        goto LABEL_12;
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_12:
    v38(v6, 1, 1, v12);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v37, v12);
  return swift_bridgeObjectRelease();
}

unint64_t sub_1001BBF80()
{
  unint64_t result = qword_10069BE28;
  if (!qword_10069BE28)
  {
    type metadata accessor for Key(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069BE28);
  }
  return result;
}

unint64_t sub_1001BBFD8()
{
  unint64_t result = qword_1006A03B0;
  if (!qword_1006A03B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A03B0);
  }
  return result;
}

uint64_t sub_1001BC02C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002F214(&qword_10069B4D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1001BC094()
{
  unint64_t result = qword_10069E008;
  if (!qword_10069E008)
  {
    sub_100031418(255, &qword_10069BDF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069E008);
  }
  return result;
}

uint64_t sub_1001BC0FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002F214(&qword_10069B310);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t ICMoveDecisionType.debugDescription.getter(uint64_t a1)
{
  unint64_t v1 = 0xD000000000000018;
  switch(a1)
  {
    case 0:
      return v1;
    case 1:
      _StringGuts.grow(_:)(26);
      swift_bridgeObjectRelease();
      unint64_t v1 = 0xD00000000000002ALL;
      break;
    case 2:
      unint64_t v1 = 0xD00000000000001ALL;
      break;
    case 3:
      _StringGuts.grow(_:)(28);
      swift_bridgeObjectRelease();
      unint64_t v1 = 0xD00000000000002CLL;
      break;
    default:
      _StringGuts.grow(_:)(16);
      swift_bridgeObjectRelease();
      v2._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v2);
      swift_bridgeObjectRelease();
      v3._countAndFlagsBits = 41;
      v3._object = (void *)0xE100000000000000;
      String.append(_:)(v3);
      unint64_t v1 = 0xD00000000000001DLL;
      break;
  }
  return v1;
}

unint64_t sub_1001BC2D4()
{
  return ICMoveDecisionType.debugDescription.getter(*v0);
}

void *StartRecordingIntent.persistentIdentifier.unsafeMutableAddressor()
{
  return &static StartRecordingIntent.persistentIdentifier;
}

uint64_t sub_1001BC2E8()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  Swift::String v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  sub_100032974(v6, static StartRecordingIntent.title);
  sub_10003293C(v6, (uint64_t)static StartRecordingIntent.title);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t StartRecordingIntent.title.unsafeMutableAddressor()
{
  if (qword_10069ACD8 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for LocalizedStringResource();

  return sub_10003293C(v0, (uint64_t)static StartRecordingIntent.title);
}

uint64_t static StartRecordingIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_10069ACD8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_10003293C(v2, (uint64_t)static StartRecordingIntent.title);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

void *StartRecordingIntent.openAppWhenRun.unsafeMutableAddressor()
{
  return &static StartRecordingIntent.openAppWhenRun;
}

uint64_t static StartRecordingIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for Locale();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = type metadata accessor for LocalizedStringResource();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v4, 1, 1, v11);
  IntentDescription.init(_:categoryName:searchKeywords:)();
  uint64_t v13 = type metadata accessor for IntentDescription();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 0, 1, v13);
}

uint64_t static StartRecordingIntent.parameterSummary.getter()
{
  uint64_t v0 = sub_10002F214(&qword_10069E010);
  __chkstk_darwin(v0 - 8);
  sub_100034754();
  ParameterSummaryString.init(stringLiteral:)();
  return IntentParameterSummary.init(_:table:)();
}

void (*StartRecordingIntent.loggingConfiguration.modify(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = AppDependency.wrappedValue.modify();
  return sub_10015B020;
}

uint64_t sub_1001BCA00()
{
  uint64_t v0 = sub_10002F214(&qword_10069E010);
  __chkstk_darwin(v0 - 8);
  ParameterSummaryString.init(stringLiteral:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_1001BCAC4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = _s11MobileNotes20StartRecordingIntentVACycfC_0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t _s11MobileNotes20StartRecordingIntentVACycfC_0()
{
  sub_10002F214((uint64_t *)&unk_10069CE60);
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t v0 = AppDependency.__allocating_init(key:manager:)();
  sub_10002F214((uint64_t *)&unk_10069B130);
  AnyHashable.init<A>(_:)();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  return v0;
}

uint64_t sub_1001BCBFC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001BCC18()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for StartRecordingIntent()
{
  return &type metadata for StartRecordingIntent;
}

uint64_t sub_1001BCC44()
{
  return sub_10001DFB0(&qword_10069E040, &qword_10069E048);
}

id sub_1001BCC80()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell____lazy_storage___imageView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell____lazy_storage___imageView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell____lazy_storage___imageView);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UIImageView) init];
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell_font);
    if (v5)
    {
      uint64_t v6 = self;
      id v7 = v5;
      id v8 = [v6 configurationWithFont:v7];
      [v4 setSymbolConfiguration:v8];
    }
    [v4 setContentMode:4];
    uint64_t v9 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v10 = v2;
  return v3;
}

id sub_1001BCD88()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell____lazy_storage___textLabel;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell____lazy_storage___textLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell____lazy_storage___textLabel);
  }
  else
  {
    id v4 = sub_1001BCDEC(v0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1001BCDEC(uint64_t a1)
{
  id v2 = [objc_allocWithZone((Class)UILabel) init];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v2 setTextAlignment:1];
  [v2 setFont:*(void *)(a1 + OBJC_IVAR____TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell_font)];
  LODWORD(v3) = 1148846080;
  [v2 setContentHuggingPriority:0 forAxis:v3];
  LODWORD(v4) = 1148846080;
  [v2 setContentCompressionResistancePriority:0 forAxis:v4];
  LODWORD(v5) = 1148846080;
  [v2 setContentHuggingPriority:1 forAxis:v5];
  LODWORD(v6) = 1148846080;
  [v2 setContentCompressionResistancePriority:1 forAxis:v6];
  return v2;
}

id sub_1001BCEDC(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v4[OBJC_IVAR____TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell_horizontalPadding] = 0x4024000000000000;
  *(void *)&v4[OBJC_IVAR____TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell_verticalPadding] = 0x4018000000000000;
  *(void *)&v4[OBJC_IVAR____TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell_imageToTextPadding] = 0x4008000000000000;
  *(void *)&v4[OBJC_IVAR____TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell_cornerRadius] = 0x4020000000000000;
  *(void *)&v4[OBJC_IVAR____TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell_backgroundTintColorRatio] = 0x3FC3333333333333;
  uint64_t v10 = OBJC_IVAR____TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell_font;
  uint64_t v11 = self;
  uint64_t v12 = v4;
  *(void *)&v4[v10] = [v11 ic_preferredFontForStyle:UIFontTextStyleSubheadline withFontWeight:UIFontWeightSemibold];
  *(void *)&v12[OBJC_IVAR____TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell____lazy_storage___imageView] = 0;
  *(void *)&v12[OBJC_IVAR____TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell____lazy_storage___textLabel] = 0;

  v15.receiver = v12;
  v15.super_class = ObjectType;
  [super initWithFrame:a1, a2, a3, a4];
  sub_1001BD048();

  return v13;
}

void sub_1001BD048()
{
  uint64_t v1 = v0;
  sub_10002F214(&qword_10069BA00);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100524CE0;
  *(void *)(v2 + 32) = sub_1001BCC80();
  *(void *)(v2 + 40) = sub_1001BCD88();
  specialized Array._endMutation()();
  id v3 = objc_allocWithZone((Class)UIStackView);
  sub_1001BD5AC();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v5 = [v3 initWithArrangedSubviews:isa];

  [v5 setSpacing:3.0];
  id v6 = [v1 contentView];
  [v6 addSubview:v5];

  [v5 ic_addAnchorsToFillSuperviewWithHorizontalPadding:1 verticalPadding:10.0 usesSafeAreaLayoutGuide:6.0];
  id v7 = [v1 contentView];
  [v7 ic_applyRoundedCornersWithRadius:8.0];
}

id sub_1001BD1D0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v2[OBJC_IVAR____TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell_horizontalPadding] = 0x4024000000000000;
  *(void *)&v2[OBJC_IVAR____TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell_verticalPadding] = 0x4018000000000000;
  *(void *)&v2[OBJC_IVAR____TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell_imageToTextPadding] = 0x4008000000000000;
  *(void *)&v2[OBJC_IVAR____TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell_cornerRadius] = 0x4020000000000000;
  *(void *)&v2[OBJC_IVAR____TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell_backgroundTintColorRatio] = 0x3FC3333333333333;
  uint64_t v5 = OBJC_IVAR____TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell_font;
  id v6 = self;
  id v7 = v2;
  *(void *)&v2[v5] = [v6 ic_preferredFontForStyle:UIFontTextStyleSubheadline withFontWeight:UIFontWeightSemibold];
  *(void *)&v7[OBJC_IVAR____TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell____lazy_storage___imageView] = 0;
  *(void *)&v7[OBJC_IVAR____TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell____lazy_storage___textLabel] = 0;

  v12.receiver = v7;
  v12.super_class = ObjectType;
  [super initWithCoder:a1];
  id v9 = v8;
  if (v8)
  {
    id v10 = v8;
    sub_1001BD048();
  }
  return v9;
}

void sub_1001BD354()
{
  id v1 = sub_1001BCD88();
  NSString v2 = (id)ICLocalizedStringForICFilterType();
  if (!v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v2 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v1 setText:v2];

  id v3 = sub_1001BCC80();
  id v4 = (id)ICSymbolImageNameForICFilterType();
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v6 = [self _systemImageNamed:v5];

  [v3 setImage:v6];
  id v7 = (id)ICTintColorForICFilterType();
  id v8 = sub_1001BCC80();
  [v8 setTintColor:v7];

  id v9 = sub_1001BCD88();
  [v9 setTextColor:v7];

  id v10 = [v0 contentView];
  id v11 = [v7 colorWithAlphaComponent:0.15];
  [v10 setBackgroundColor:v11];
}

uint64_t type metadata accessor for LearnMoreSmartFoldersFiltersCell()
{
  return self;
}

unint64_t sub_1001BD5AC()
{
  unint64_t result = qword_1006A4640;
  if (!qword_1006A4640)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1006A4640);
  }
  return result;
}

void *ChangeFolderViewSettingIntent.persistentIdentifier.unsafeMutableAddressor()
{
  return &static ChangeFolderViewSettingIntent.persistentIdentifier;
}

uint64_t sub_1001BD5F8()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  sub_100032974(v6, static ChangeFolderViewSettingIntent.title);
  sub_10003293C(v6, (uint64_t)static ChangeFolderViewSettingIntent.title);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t ChangeFolderViewSettingIntent.title.unsafeMutableAddressor()
{
  if (qword_10069ACE0 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for LocalizedStringResource();

  return sub_10003293C(v0, (uint64_t)static ChangeFolderViewSettingIntent.title);
}

uint64_t static ChangeFolderViewSettingIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_10069ACE0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_10003293C(v2, (uint64_t)static ChangeFolderViewSettingIntent.title);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

void *ChangeFolderViewSettingIntent.openAppWhenRun.unsafeMutableAddressor()
{
  return &static ChangeFolderViewSettingIntent.openAppWhenRun;
}

uint64_t static ChangeFolderViewSettingIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for Locale();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = type metadata accessor for LocalizedStringResource();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v4, 1, 1, v11);
  IntentDescription.init(_:categoryName:searchKeywords:)();
  uint64_t v13 = type metadata accessor for IntentDescription();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 0, 1, v13);
}

uint64_t static ChangeFolderViewSettingIntent.parameterSummary.getter()
{
  uint64_t v0 = sub_10002F214(&qword_10069E0B8);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10002F214(&qword_10069E0C0);
  __chkstk_darwin(v1);
  sub_100033AC8();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_10002F214(&qword_10069E0C8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._countAndFlagsBits = 0x2065687420;
  v3._object = (void *)0xE500000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  swift_getKeyPath();
  sub_10002F214(&qword_10069E0D0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v4._countAndFlagsBits = 0x676E697474657320;
  v4._object = (void *)0xE800000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v4);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_1001BDDC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001BDDEC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t ChangeFolderViewSettingIntent.changeOperation.setter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ChangeOperation();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  IntentParameter.wrappedValue.setter();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t ChangeFolderViewSettingIntent.setting.setter()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t sub_1001BDF44(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ChangeOperation();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  IntentParameter.wrappedValue.setter();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t sub_1001BE034@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_1001BE070()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t (*SetChecklistItemsCheckedIntent.entities.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = IntentParameter.wrappedValue.modify();
  return sub_10015ACE0;
}

char *sub_1001BE10C@<X0>(char **a1@<X8>)
{
  uint64_t result = _s11MobileNotes29ChangeFolderViewSettingIntentVACycfC_0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

char *_s11MobileNotes29ChangeFolderViewSettingIntentVACycfC_0()
{
  uint64_t v51 = type metadata accessor for InputConnectionBehavior();
  uint64_t v53 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  os_log_type_t v47 = (char *)&v34 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v1 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  id v50 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  id v49 = (char *)&v34 - v4;
  uint64_t v5 = sub_10002F214(&qword_10069B218);
  __chkstk_darwin(v5 - 8);
  uint64_t v48 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v7 - 8);
  uint64_t v52 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Locale();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = type metadata accessor for LocalizedStringResource();
  uint64_t v44 = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  unint64_t v34 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_10002F214(&qword_10069B220);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v18 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 104);
  unsigned int v39 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v40 = v9;
  v19(v12, enum case for LocalizedStringResource.BundleDescription.main(_:), v9);
  uint64_t v41 = v19;
  uint64_t v42 = v10 + 104;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v19(v12, v18, v9);
  id v20 = v52;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  unint64_t v21 = *(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56);
  uint64_t v43 = v16 + 56;
  id v45 = v21;
  v21(v20, 0, 1, v15);
  uint64_t v22 = type metadata accessor for ChangeOperation();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v48, 1, 1, v22);
  uint64_t v23 = type metadata accessor for IntentDialog();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
  uint64_t v35 = v25;
  uint64_t v36 = v24 + 56;
  v25(v49, 1, 1, v23);
  v25(v50, 1, 1, v23);
  unsigned int v37 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v26 = *(void (**)(void))(v53 + 104);
  v53 += 104;
  uint64_t v38 = (void (*)(char *, void, uint64_t))v26;
  unsigned int v27 = v47;
  v26(v47);
  sub_1001BEA08(&qword_10069B228);
  dispatch thunk of static CaseIterable.allCases.getter();
  sub_1001BEA08(&qword_10069B230);
  uint64_t v48 = (char *)IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
  uint64_t v46 = sub_10002F214(&qword_10069B238);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v28 = v39;
  uint64_t v29 = v40;
  uint64_t v30 = v41;
  v41(v12, v39, v40);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v30(v12, v28, v29);
  uint64_t v31 = v52;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v45(v31, 0, 1, v44);
  char v54 = 2;
  uint64_t v32 = v35;
  v35(v49, 1, 1, v23);
  v32(v50, 1, 1, v23);
  v38(v27, v37, v51);
  sub_100157B04();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
  return v48;
}

unint64_t sub_1001BE8EC()
{
  unint64_t result = qword_10069E0E0;
  if (!qword_10069E0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069E0E0);
  }
  return result;
}

uint64_t sub_1001BE948()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001BE964()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for ChangeFolderViewSettingIntent()
{
  return &type metadata for ChangeFolderViewSettingIntent;
}

uint64_t sub_1001BE990()
{
  return sub_10001DFB0(&qword_10069E100, &qword_10069E108);
}

uint64_t sub_1001BE9CC()
{
  return sub_10001DFB0((unint64_t *)&qword_10069DE30, (uint64_t *)&unk_10069C980);
}

uint64_t sub_1001BEA08(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ChangeOperation();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double sub_1001BEA4C()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes30InlineMenuButtonTextAttachment_font;
  [*(id *)(v0 + OBJC_IVAR____TtC11MobileNotes30InlineMenuButtonTextAttachment_font) lineHeight];
  uint64_t v3 = OBJC_IVAR____TtC11MobileNotes30InlineMenuButtonTextAttachment_minimumHeight;
  double v4 = *(double *)(v0 + OBJC_IVAR____TtC11MobileNotes30InlineMenuButtonTextAttachment_minimumHeight);
  double v5 = 4.0;
  double v6 = 4.0;
  if (v2 + 8.0 < v4)
  {
    [*(id *)(v0 + v1) lineHeight];
    double v6 = (v4 - v7) * 0.5;
  }
  [*(id *)(v0 + v1) lineHeight];
  double v9 = v8;
  [*(id *)(v0 + v1) lineHeight];
  double v11 = *(double *)(v0 + v3);
  if (v10 + 8.0 < v11)
  {
    [*(id *)(v0 + v1) lineHeight];
    double v5 = (v11 - v12) * 0.5;
  }
  return v6 + v9 + v5;
}

id sub_1001BEB20()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v0[OBJC_IVAR____TtC11MobileNotes30InlineMenuButtonTextAttachment_menu] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11MobileNotes30InlineMenuButtonTextAttachment_traitCollection] = 0;
  uint64_t v3 = OBJC_IVAR____TtC11MobileNotes30InlineMenuButtonTextAttachment_font;
  double v4 = self;
  double v5 = v0;
  *(void *)&v1[v3] = [v4 preferredFontForTextStyle:UIFontTextStyleBody];
  uint64_t v6 = OBJC_IVAR____TtC11MobileNotes30InlineMenuButtonTextAttachment_foregroundColor;
  *(void *)&v5[v6] = [self labelColor];
  *(void *)&v5[OBJC_IVAR____TtC11MobileNotes30InlineMenuButtonTextAttachment_minimumHeight] = 0;

  double v7 = self;
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v7 textAttachmentViewProviderClassForFileType:v8];

  if (!v9)
  {
    type metadata accessor for InlineMenuButtonTextAttachmentViewProvider();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    NSString v11 = String._bridgeToObjectiveC()();
    [v7 registerTextAttachmentViewProviderClass:ObjCClassFromMetadata forFileType:v11];
  }
  NSString v12 = String._bridgeToObjectiveC()();
  v15.receiver = v5;
  v15.super_class = ObjectType;
  id v13 = [super initWithData:0 ofType:v12];

  return v13;
}

void sub_1001BECF8(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes30InlineMenuButtonTextAttachment_menu] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes30InlineMenuButtonTextAttachment_traitCollection] = 0;
  uint64_t v2 = OBJC_IVAR____TtC11MobileNotes30InlineMenuButtonTextAttachment_font;
  *(void *)&v1[v2] = [self preferredFontForTextStyle:UIFontTextStyleBody];
  uint64_t v3 = OBJC_IVAR____TtC11MobileNotes30InlineMenuButtonTextAttachment_foregroundColor;
  *(void *)&v1[v3] = [self labelColor];
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes30InlineMenuButtonTextAttachment_minimumHeight] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t type metadata accessor for InlineMenuButtonTextAttachment()
{
  return self;
}

void *CreateNoteIntent.persistentIdentifier.unsafeMutableAddressor()
{
  return &static CreateNoteIntent.persistentIdentifier;
}

uint64_t sub_1001BEF00()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  sub_100032974(v6, static CreateNoteIntent.title);
  sub_10003293C(v6, (uint64_t)static CreateNoteIntent.title);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t CreateNoteIntent.title.unsafeMutableAddressor()
{
  if (qword_10069ACE8 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for LocalizedStringResource();

  return sub_10003293C(v0, (uint64_t)static CreateNoteIntent.title);
}

uint64_t static CreateNoteIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_10069ACE8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_10003293C(v2, (uint64_t)static CreateNoteIntent.title);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t static CreateNoteIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for Locale();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = type metadata accessor for LocalizedStringResource();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v4, 1, 1, v11);
  IntentDescription.init(_:categoryName:searchKeywords:)();
  uint64_t v13 = type metadata accessor for IntentDescription();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 0, 1, v13);
}

uint64_t static CreateNoteIntent.parameterSummary.getter()
{
  uint64_t v0 = sub_10002F214(&qword_10069E168);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10002F214((uint64_t *)&unk_10069E170);
  __chkstk_darwin(v1);
  sub_100035308();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._countAndFlagsBits = 0x6120657461657243;
  v2._object = (void *)0xE900000000000020;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_10002F214(&qword_10069E180);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._countAndFlagsBits = 0x6E692065746F6E20;
  v3._object = (void *)0xE900000000000020;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  swift_getKeyPath();
  sub_10002F214(&qword_10069E188);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v4._countAndFlagsBits = 0x6F63207461687420;
  v4._object = (void *)0xEF20736E6961746ELL;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v4);
  swift_getKeyPath();
  sub_10002F214(&qword_10069E190);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v5);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t SetChecklistItemsCheckedIntent.$changeOperation.getter()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_1001BF74C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t SetChecklistItemsCheckedIntent.$note.getter()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_1001BF79C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t SetChecklistItemsCheckedIntent.$entities.getter()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_1001BF7EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

double CreateNoteIntent.init()@<D0>(uint64_t a1@<X8>)
{
  sub_1001C4064(v4);
  double result = *(double *)v4;
  long long v3 = v4[1];
  *(_OWORD *)a1 = v4[0];
  *(_OWORD *)(a1 + 16) = v3;
  *(void *)(a1 + 32) = v5;
  return result;
}

uint64_t CreateChecklistItemIntent.name.getter()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t CreateChecklistItemIntent.name.setter()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t CreateChecklistItemIntent.noteEntity.getter()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t CreateNoteIntent.contents.setter(uint64_t a1)
{
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069CE50);
  __chkstk_darwin(v2 - 8);
  sub_10002F034(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&unk_10069CE50);
  IntentParameter.wrappedValue.setter();
  return sub_10002B754(a1, (uint64_t *)&unk_10069CE50);
}

uint64_t SetChecklistItemsCheckedIntent.note.getter()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t CreateNoteIntent.folder.setter(uint64_t a1)
{
  uint64_t v2 = sub_10002F214(&qword_10069B260);
  __chkstk_darwin(v2 - 8);
  sub_10002F034(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10069B260);
  IntentParameter.wrappedValue.setter();
  return sub_10002B754(a1, &qword_10069B260);
}

uint64_t (*SetChecklistItemsCheckedIntent.note.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = IntentParameter.wrappedValue.modify();
  return sub_10015ACE0;
}

uint64_t ChangeTagSelectionIntent.loggingConfiguration.getter()
{
  AppDependency.wrappedValue.getter();
  return v1;
}

uint64_t ChangeTagSelectionIntent.loggingConfiguration.setter()
{
  return AppDependency.wrappedValue.setter();
}

uint64_t (*ChangeTagSelectionIntent.loggingConfiguration.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = AppDependency.wrappedValue.modify();
  return sub_10015ACE0;
}

uint64_t ChangeTagSelectionIntent.$loggingConfiguration.getter()
{
  return AppDependency.projectedValue.getter();
}

uint64_t CreateNoteIntent.perform()(uint64_t a1)
{
  v2[51] = a1;
  v2[52] = v1;
  uint64_t v3 = type metadata accessor for Logger();
  v2[53] = v3;
  v2[54] = *(void *)(v3 - 8);
  v2[55] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for OpensIntentHint();
  v2[56] = v4;
  v2[57] = *(void *)(v4 - 8);
  v2[58] = swift_task_alloc();
  sub_10002F214(&qword_10069B260);
  v2[59] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for FolderEntity();
  v2[60] = v5;
  v2[61] = *(void *)(v5 - 8);
  v2[62] = swift_task_alloc();
  v2[63] = type metadata accessor for NoteEntity(0);
  v2[64] = swift_task_alloc();
  v2[65] = swift_task_alloc();
  v2[66] = swift_task_alloc();
  v2[67] = swift_task_alloc();
  v2[68] = swift_task_alloc();
  sub_10002F214((uint64_t *)&unk_10069C9B0);
  v2[69] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for LocalizedStringResource.BundleDescription();
  v2[70] = v6;
  v2[71] = *(void *)(v6 - 8);
  v2[72] = swift_task_alloc();
  type metadata accessor for Locale();
  v2[73] = swift_task_alloc();
  type metadata accessor for String.LocalizationValue();
  v2[74] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for LocalizedStringResource();
  v2[75] = v7;
  v2[76] = *(void *)(v7 - 8);
  v2[77] = swift_task_alloc();
  v2[78] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for AttributedString.Index();
  v2[79] = v8;
  v2[80] = *(void *)(v8 - 8);
  v2[81] = swift_task_alloc();
  v2[82] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for AttributedString.CharacterView();
  v2[83] = v9;
  v2[84] = *(void *)(v9 - 8);
  v2[85] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for AttributedString();
  v2[86] = v10;
  v2[87] = *(void *)(v10 - 8);
  v2[88] = swift_task_alloc();
  sub_10002F214((uint64_t *)&unk_10069CE50);
  v2[89] = swift_task_alloc();
  v2[90] = swift_task_alloc();
  v2[91] = swift_task_alloc();
  v2[92] = swift_task_alloc();
  v2[93] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for IntentSystemContext.Kind();
  v2[94] = v11;
  v2[95] = *(void *)(v11 - 8);
  v2[96] = swift_task_alloc();
  v2[97] = sub_10002F214(&qword_10069E1A8);
  v2[98] = swift_task_alloc();
  sub_10002F214(&qword_10069E1B0);
  v2[99] = swift_task_alloc();
  v2[100] = swift_task_alloc();
  v2[101] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for IntentSystemContext.Source();
  v2[102] = v12;
  v2[103] = *(void *)(v12 - 8);
  v2[104] = swift_task_alloc();
  v2[105] = sub_10002F214(&qword_10069E1B8);
  v2[106] = swift_task_alloc();
  sub_10002F214((uint64_t *)&unk_10069E1C0);
  v2[107] = swift_task_alloc();
  v2[108] = swift_task_alloc();
  v2[109] = swift_task_alloc();
  uint64_t v13 = type metadata accessor for IntentSystemContext();
  v2[110] = v13;
  v2[111] = *(void *)(v13 - 8);
  v2[112] = swift_task_alloc();
  v2[113] = swift_task_alloc();
  return _swift_task_switch(sub_1001C02A0, 0, 0);
}

uint64_t sub_1001C02A0()
{
  uint64_t v1 = *(void *)(v0 + 904);
  uint64_t v2 = *(void *)(v0 + 888);
  uint64_t v3 = *(void *)(v0 + 880);
  uint64_t v4 = *(void *)(v0 + 872);
  uint64_t v5 = *(void *)(v0 + 864);
  uint64_t v6 = *(void *)(v0 + 848);
  uint64_t v110 = *(void *)(v0 + 840);
  uint64_t v7 = *(void *)(v0 + 824);
  uint64_t v8 = *(void *)(v0 + 816);
  uint64_t v9 = *(void *)(v0 + 416);
  uint64_t v10 = *(void *)(v9 + 32);
  long long v11 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)(v0 + 136) = *(_OWORD *)v9;
  *(_OWORD *)(v0 + 152) = v11;
  *(void *)(v0 + 168) = v10;
  sub_100035308();
  AppIntent.systemContext.getter();
  IntentSystemContext.source.getter();
  uint64_t v114 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v114(v1, v3);
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v5, enum case for IntentSystemContext.Source.actionButton(_:), v8);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v8);
  uint64_t v12 = v6 + *(int *)(v110 + 48);
  sub_10002F034(v4, v6, (uint64_t *)&unk_10069E1C0);
  sub_10002F034(v5, v12, (uint64_t *)&unk_10069E1C0);
  uint64_t v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v13(v6, 1, v8) == 1)
  {
    uint64_t v14 = *(void *)(v0 + 872);
    uint64_t v15 = *(void *)(v0 + 816);
    sub_10002B754(*(void *)(v0 + 864), (uint64_t *)&unk_10069E1C0);
    sub_10002B754(v14, (uint64_t *)&unk_10069E1C0);
    if (v13(v12, 1, v15) == 1)
    {
      sub_10002B754(*(void *)(v0 + 848), (uint64_t *)&unk_10069E1C0);
      int v16 = 1;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  uint64_t v17 = *(void *)(v0 + 816);
  sub_10002F034(*(void *)(v0 + 848), *(void *)(v0 + 856), (uint64_t *)&unk_10069E1C0);
  unsigned int v18 = v13(v12, 1, v17);
  uint64_t v19 = *(void *)(v0 + 872);
  uint64_t v20 = *(void *)(v0 + 864);
  uint64_t v21 = *(void *)(v0 + 856);
  if (v18 == 1)
  {
    uint64_t v22 = *(void *)(v0 + 824);
    uint64_t v23 = *(void *)(v0 + 816);
    sub_10002B754(*(void *)(v0 + 864), (uint64_t *)&unk_10069E1C0);
    sub_10002B754(v19, (uint64_t *)&unk_10069E1C0);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
LABEL_6:
    sub_10002B754(*(void *)(v0 + 848), &qword_10069E1B8);
    int v16 = 0;
    goto LABEL_8;
  }
  uint64_t v111 = *(void *)(v0 + 848);
  uint64_t v24 = *(void *)(v0 + 832);
  uint64_t v25 = *(void *)(v0 + 824);
  uint64_t v26 = *(void *)(v0 + 816);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v24, v12, v26);
  sub_1001C4D9C(&qword_10069E228, (void (*)(uint64_t))&type metadata accessor for IntentSystemContext.Source);
  int v16 = dispatch thunk of static Equatable.== infix(_:_:)();
  unsigned int v27 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
  v27(v24, v26);
  sub_10002B754(v20, (uint64_t *)&unk_10069E1C0);
  sub_10002B754(v19, (uint64_t *)&unk_10069E1C0);
  v27(v21, v26);
  sub_10002B754(v111, (uint64_t *)&unk_10069E1C0);
LABEL_8:
  int v112 = v16;
  *(unsigned char *)(v0 + 1056) = v16 & 1;
  uint64_t v28 = *(void *)(v0 + 896);
  uint64_t v29 = *(void *)(v0 + 880);
  uint64_t v30 = *(void *)(v0 + 808);
  uint64_t v31 = *(void *)(v0 + 800);
  uint64_t v32 = *(void *)(v0 + 784);
  uint64_t v33 = *(void *)(v0 + 776);
  uint64_t v34 = *(void *)(v0 + 760);
  uint64_t v35 = *(void *)(v0 + 752);
  uint64_t v36 = *(void *)(v0 + 416);
  uint64_t v37 = *(void *)(v36 + 32);
  long long v38 = *(_OWORD *)(v36 + 16);
  *(_OWORD *)(v0 + 96) = *(_OWORD *)v36;
  *(_OWORD *)(v0 + 112) = v38;
  *(void *)(v0 + 128) = v37;
  AppIntent.systemContext.getter();
  IntentSystemContext.kind.getter();
  v114(v28, v29);
  (*(void (**)(uint64_t, void, uint64_t))(v34 + 104))(v31, enum case for IntentSystemContext.Kind.userShortcut(_:), v35);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v35);
  uint64_t v39 = v32 + *(int *)(v33 + 48);
  sub_10002F034(v30, v32, &qword_10069E1B0);
  sub_10002F034(v31, v39, &qword_10069E1B0);
  uint64_t v40 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
  if (v40(v32, 1, v35) == 1)
  {
    uint64_t v41 = *(void *)(v0 + 808);
    uint64_t v42 = *(void *)(v0 + 752);
    sub_10002B754(*(void *)(v0 + 800), &qword_10069E1B0);
    sub_10002B754(v41, &qword_10069E1B0);
    if (v40(v39, 1, v42) == 1)
    {
      uint64_t v43 = *(uint64_t **)(v0 + 416);
      sub_10002B754(*(void *)(v0 + 784), &qword_10069E1B0);
      uint64_t v45 = *v43;
      uint64_t v44 = v43[1];
      LOBYTE(v46) = 1;
      goto LABEL_16;
    }
    goto LABEL_13;
  }
  uint64_t v47 = *(void *)(v0 + 752);
  sub_10002F034(*(void *)(v0 + 784), *(void *)(v0 + 792), &qword_10069E1B0);
  unsigned int v48 = v40(v39, 1, v47);
  uint64_t v49 = *(void *)(v0 + 808);
  uint64_t v50 = *(void *)(v0 + 800);
  uint64_t v51 = *(void *)(v0 + 792);
  if (v48 == 1)
  {
    uint64_t v52 = *(void *)(v0 + 760);
    uint64_t v53 = *(void *)(v0 + 752);
    sub_10002B754(*(void *)(v0 + 800), &qword_10069E1B0);
    sub_10002B754(v49, &qword_10069E1B0);
    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v51, v53);
LABEL_13:
    sub_10002B754(*(void *)(v0 + 784), &qword_10069E1A8);
    int v46 = 0;
    goto LABEL_15;
  }
  uint64_t v117 = *(void *)(v0 + 784);
  uint64_t v54 = *(void *)(v0 + 768);
  uint64_t v55 = *(void *)(v0 + 760);
  uint64_t v56 = *(void *)(v0 + 752);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 32))(v54, v39, v56);
  sub_1001C4D9C(&qword_10069E220, (void (*)(uint64_t))&type metadata accessor for IntentSystemContext.Kind);
  int v46 = dispatch thunk of static Equatable.== infix(_:_:)();
  id v57 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
  v57(v54, v56);
  sub_10002B754(v50, &qword_10069E1B0);
  sub_10002B754(v49, &qword_10069E1B0);
  v57(v51, v56);
  sub_10002B754(v117, &qword_10069E1B0);
LABEL_15:
  NSString v58 = *(uint64_t **)(v0 + 416);
  uint64_t v45 = *v58;
  uint64_t v44 = v58[1];
  if (((v46 | v112) & 1) == 0)
  {
    uint64_t v68 = *(void *)(v0 + 728);
    uint64_t v69 = *(void *)(v0 + 696);
    uint64_t v70 = *(void *)(v0 + 688);
    IntentParameter.wrappedValue.getter();
    int v71 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v69 + 48))(v68, 1, v70);
    uint64_t v72 = *(void *)(v0 + 728);
    if (v71 == 1)
    {
      AttributedString.init()();
      sub_10002B754(v72, (uint64_t *)&unk_10069CE50);
    }
    else
    {
      (*(void (**)(void, void, void))(*(void *)(v0 + 696) + 32))(*(void *)(v0 + 736), *(void *)(v0 + 728), *(void *)(v0 + 688));
    }
    uint64_t v73 = *(void *)(v0 + 736);
    uint64_t v74 = *(void *)(v0 + 720);
    (*(void (**)(uint64_t, void, uint64_t, void))(*(void *)(v0 + 696) + 56))(v73, 0, 1, *(void *)(v0 + 688));
    sub_10002F034(v73, v74, (uint64_t *)&unk_10069CE50);
    IntentParameter.wrappedValue.setter();
    sub_10002B754(v73, (uint64_t *)&unk_10069CE50);
    char v62 = 0;
    LOBYTE(v46) = 0;
    goto LABEL_27;
  }
LABEL_16:
  IntentParameter.wrappedValue.getter();
  unint64_t v59 = *(void *)(v0 + 304);
  if (v59)
  {
    uint64_t v60 = *(void *)(v0 + 296);
    swift_bridgeObjectRelease();
    uint64_t v61 = HIBYTE(v59) & 0xF;
    if ((v59 & 0x2000000000000000) == 0) {
      uint64_t v61 = v60 & 0xFFFFFFFFFFFFLL;
    }
    if (v61)
    {
      char v62 = 1;
LABEL_27:
      *(unsigned char *)(v0 + 1057) = v46 & 1;
      *(void *)(v0 + 920) = v45;
      *(void *)(v0 + 912) = v44;
      *(void *)(v0 + 928) = *(void *)(*(void *)(v0 + 416) + 24);
      AppDependency.wrappedValue.getter();
      id v75 = *(void **)(v0 + 328);
      id v76 = [objc_allocWithZone((Class)ICCreateNoteAction) initWithNoteContext:v75];
      *(void *)(v0 + 936) = v76;

      if ((v62 & 1) == 0) {
        [v76 setAllowsNoContent:1];
      }
      uint64_t v78 = *(void *)(v0 + 480);
      uint64_t v77 = *(void *)(v0 + 488);
      uint64_t v79 = *(void *)(v0 + 472);
      uint64_t v80 = *(void *)(v0 + 416);
      *(void *)(v0 + 944) = *(void *)(v80 + 16);
      *(void *)(v0 + 952) = *(void *)(v80 + 32);
      IntentParameter.wrappedValue.getter();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v77 + 48))(v79, 1, v78) == 1)
      {
        sub_10002B754(*(void *)(v0 + 472), &qword_10069B260);
        IntentParameter.wrappedValue.getter();
        IntentParameter.wrappedValue.getter();
        uint64_t v104 = ICCreateNoteAction.perform(withTitle:contents:container:)();
        sub_10002B754(*(void *)(v0 + 712), (uint64_t *)&unk_10069CE50);
        swift_bridgeObjectRelease();
        *(void *)(v0 + 1000) = v104;
        AppDependency.wrappedValue.getter();
        *(void *)(v0 + 1008) = *(void *)(v0 + 352);
        BOOL v105 = (void *)swift_task_alloc();
        *(void *)(v0 + 1016) = v105;
        uint64_t v106 = sub_10002F214((uint64_t *)&unk_10069E1F0);
        *BOOL v105 = v0;
        v105[1] = sub_1001C1A04;
        return ICUnifiedNoteContext.perform<A, B>(with:using:)(v106, v104, sub_1001C3DBC, 0, v106, (char *)&type metadata for () + 8);
      }
      else
      {
        NSString v81 = *(long long **)(v0 + 416);
        sub_1001C4BB4(*(void *)(v0 + 472), *(void *)(v0 + 496), (uint64_t (*)(void))type metadata accessor for FolderEntity);
        AppDependency.wrappedValue.getter();
        uint64_t v82 = *(void *)(v0 + 392);
        *(void *)(v0 + 960) = v82;
        uint64_t v83 = swift_allocObject();
        *(void *)(v0 + 968) = v83;
        *(void *)(v83 + 16) = v76;
        long long v85 = *v81;
        long long v84 = v81[1];
        *(void *)(v83 + 56) = *((void *)v81 + 4);
        *(_OWORD *)(v83 + 24) = v85;
        *(_OWORD *)(v83 + 40) = v84;
        uint64_t v119 = (uint64_t (*)(uint64_t, uint64_t (*)@<X0>(uint64_t *@<X8>), uint64_t))((char *)&dword_10069CE30 + dword_10069CE30);
        id v86 = v76;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        id v87 = (void *)swift_task_alloc();
        *(void *)(v0 + 976) = v87;
        *id v87 = v0;
        v87[1] = sub_1001C1798;
        return v119(v82, sub_1001C4C7C, v83);
      }
    }
  }
  uint64_t v63 = *(void *)(v0 + 744);
  uint64_t v64 = *(void *)(v0 + 696);
  uint64_t v65 = *(void *)(v0 + 688);
  uint64_t v118 = v44;
  IntentParameter.wrappedValue.getter();
  int v66 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v63, 1, v65);
  uint64_t v67 = *(void *)(v0 + 744);
  if (v66)
  {
    sub_10002B754(*(void *)(v0 + 744), (uint64_t *)&unk_10069CE50);
  }
  else
  {
    uint64_t v116 = *(void *)(v0 + 696);
    uint64_t v89 = *(void *)(v0 + 680);
    uint64_t v113 = *(void *)(v0 + 688);
    uint64_t v115 = *(void *)(v0 + 672);
    uint64_t v108 = *(void *)(v0 + 664);
    uint64_t v90 = *(void *)(v0 + 656);
    uint64_t v91 = *(void *)(v0 + 648);
    uint64_t v92 = *(void *)(v0 + 640);
    uint64_t v93 = *(void *)(v0 + 632);
    uint64_t v109 = *(void *)(v0 + 704);
    (*(void (**)(void))(v116 + 16))();
    sub_10002B754(v67, (uint64_t *)&unk_10069CE50);
    AttributedString.characters.getter();
    sub_1001C4D9C((unint64_t *)&unk_10069E210, (void (*)(uint64_t))&type metadata accessor for AttributedString.CharacterView);
    dispatch thunk of Collection.startIndex.getter();
    dispatch thunk of Collection.endIndex.getter();
    sub_1001C4D9C((unint64_t *)&unk_1006A3E00, (void (*)(uint64_t))&type metadata accessor for AttributedString.Index);
    char v94 = dispatch thunk of static Equatable.== infix(_:_:)();
    char v95 = *(void (**)(uint64_t, uint64_t))(v92 + 8);
    v95(v91, v93);
    v95(v90, v93);
    (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v89, v108);
    (*(void (**)(uint64_t, uint64_t))(v116 + 8))(v109, v113);
    if ((v94 & 1) == 0)
    {
      char v62 = 1;
      uint64_t v44 = v118;
      goto LABEL_27;
    }
  }
  uint64_t v96 = *(void *)(v0 + 624);
  uint64_t v97 = *(void *)(v0 + 616);
  uint64_t v98 = *(void *)(v0 + 608);
  uint64_t v120 = *(void *)(v0 + 600);
  uint64_t v99 = *(void *)(v0 + 576);
  uint64_t v100 = *(void *)(v0 + 568);
  uint64_t v101 = *(void *)(v0 + 560);
  uint64_t v102 = *(void *)(v0 + 552);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(uint64_t, void, uint64_t))(v100 + 104))(v99, enum case for LocalizedStringResource.BundleDescription.main(_:), v101);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  IntentParameter.projectedValue.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v98 + 16))(v97, v96, v120);
  IntentDialog.init(_:)();
  uint64_t v103 = type metadata accessor for IntentDialog();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v103 - 8) + 56))(v102, 0, 1, v103);
  type metadata accessor for AppIntentError();
  sub_1001C4D9C((unint64_t *)&unk_1006A2DB0, (void (*)(uint64_t))&type metadata accessor for AppIntentError);
  swift_allocError();
  IntentParameter.needsValueError(_:)();
  swift_release();
  sub_10002B754(v102, (uint64_t *)&unk_10069C9B0);
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v96, v120);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v107 = *(uint64_t (**)(void))(v0 + 8);
  return v107();
}

uint64_t sub_1001C1798(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[123] = v1;
  swift_task_dealloc();
  uint64_t v5 = (void *)v4[120];
  swift_release();

  if (v1)
  {
    uint64_t v6 = sub_1001C289C;
  }
  else
  {
    v4[124] = a1;
    uint64_t v6 = sub_1001C18F4;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_1001C18F4()
{
  sub_1001C4C9C(v0[62], (uint64_t (*)(void))type metadata accessor for FolderEntity);
  uint64_t v1 = v0[124];
  v0[125] = v1;
  AppDependency.wrappedValue.getter();
  v0[126] = v0[44];
  uint64_t v2 = (void *)swift_task_alloc();
  v0[127] = v2;
  uint64_t v3 = sub_10002F214((uint64_t *)&unk_10069E1F0);
  void *v2 = v0;
  v2[1] = sub_1001C1A04;
  return ICUnifiedNoteContext.perform<A, B>(with:using:)(v3, v1, sub_1001C3DBC, 0, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_1001C1A04()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1024) = v0;
  swift_task_dealloc();

  if (v0) {
    uint64_t v3 = sub_1001C2F5C;
  }
  else {
    uint64_t v3 = sub_1001C1B38;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001C1B38()
{
  id v1 = [*(id *)(v0 + 1000) managedObjectContext];
  *(void *)(v0 + 1032) = v1;
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = [*(id *)(v0 + 1000) objectID];
    id v4 = v2;
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 1040) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_1001C22F8;
    uint64_t v6 = *(void *)(v0 + 536);
    return NoteEntity.init(for:in:)(v6, (uint64_t)v3, (uint64_t)v4);
  }
  uint64_t v8 = *(void **)(v0 + 1000);
  uint64_t v9 = *(void **)(v0 + 936);
  type metadata accessor for ICError(0);
  *(void *)(v0 + 368) = 225;
  sub_1001B50CC((uint64_t)_swiftEmptyArrayStorage);
  sub_1001C4D9C((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);
  _BridgedStoredNSError.init(_:userInfo:)();
  swift_willThrow();

  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_errorRetain();
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 138412290;
    uint64_t v14 = _convertErrorToNSError(_:)();
    *(void *)(v0 + 344) = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v13 = v14;
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "CreateNoteIntent failed with error: %@", v12, 0xCu);
    sub_10002F214(&qword_10069FD50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
  }
  uint64_t v16 = *(void *)(v0 + 432);
  uint64_t v15 = *(void *)(v0 + 440);
  uint64_t v17 = *(void *)(v0 + 424);

  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  type metadata accessor for Code(0);
  *(void *)(v0 + 384) = 228;
  swift_errorRetain();
  sub_1001C4D9C(&qword_10069B868, type metadata accessor for Code);
  LOBYTE(v17) = static _ErrorCodeProtocol.~= infix(_:_:)();
  swift_errorRelease();
  if (v17)
  {
    sub_100173F8C();
    swift_allocError();
    char v19 = 6;
  }
  else
  {
    *(void *)(v0 + 376) = 229;
    swift_errorRetain();
    char v20 = static _ErrorCodeProtocol.~= infix(_:_:)();
    swift_errorRelease();
    if (v20)
    {
      sub_100173F8C();
      swift_allocError();
      char v19 = 7;
    }
    else
    {
      *(void *)(v0 + 336) = 218;
      swift_errorRetain();
      char v21 = static _ErrorCodeProtocol.~= infix(_:_:)();
      swift_errorRelease();
      if ((v21 & 1) == 0)
      {
        *(void *)(v0 + 312) = 218;
        sub_10002F214((uint64_t *)&unk_10069E1D0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_100524D10;
        *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
        *(void *)(inited + 40) = v24;
        swift_getErrorValue();
        uint64_t v25 = *(void *)(v0 + 256);
        uint64_t v26 = *(void *)(v0 + 264);
        *(void *)(inited + 72) = v26;
        unsigned int v27 = sub_10015E0F0((uint64_t *)(inited + 48));
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v27, v25, v26);
        sub_100167B58(inited);
        _BridgedStoredNSError.init(_:userInfo:)();
        goto LABEL_15;
      }
      sub_100173F8C();
      swift_allocError();
      char v19 = 5;
    }
  }
  *unsigned int v18 = v19;
LABEL_15:
  swift_willThrow();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

uint64_t sub_1001C22F8()
{
  *(void *)(*(void *)v1 + 1048) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1001C3604;
  }
  else {
    uint64_t v2 = sub_1001C240C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001C240C()
{
  uint64_t v1 = *(void **)(v0 + 1032);
  uint64_t v2 = *(void **)(v0 + 936);
  char v3 = *(unsigned char *)(v0 + 1057);
  int v4 = *(unsigned __int8 *)(v0 + 1056);
  uint64_t v5 = *(void *)(v0 + 544);
  uint64_t v6 = *(void *)(v0 + 536);
  uint64_t v7 = *(void *)(v0 + 528);
  uint64_t v8 = *(void *)(v0 + 520);
  uint64_t v9 = *(void *)(v0 + 512);

  sub_1001C4BB4(v6, v5, type metadata accessor for NoteEntity);
  sub_10018991C(v5, v7);
  uint64_t v10 = _s11MobileNotes14OpenNoteIntentVACycfC_0();
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  sub_10018991C(v7, v8);
  sub_10018991C(v8, v9);
  IntentParameter.wrappedValue.setter();
  sub_1001C4C9C(v8, type metadata accessor for NoteEntity);
  sub_1001C4C9C(v7, type metadata accessor for NoteEntity);
  uint64_t v15 = *(void *)(v0 + 544);
  if ((v3 & 1) != 0 || !v4)
  {
    *(void *)(v0 + 208) = v10;
    *(void *)(v0 + 216) = v12;
    *(void *)(v0 + 224) = v14;
    sub_1001C4D9C((unint64_t *)&qword_10069CD70, (void (*)(uint64_t))type metadata accessor for NoteEntity);
    sub_100035854();
    static IntentResult.result<A, B>(value:opensIntent:)();
  }
  else
  {
    *(void *)(v0 + 232) = v10;
    uint64_t v17 = *(void *)(v0 + 456);
    uint64_t v16 = *(void *)(v0 + 464);
    uint64_t v18 = *(void *)(v0 + 448);
    *(void *)(v0 + 240) = v12;
    *(void *)(v0 + 248) = v14;
    (*(void (**)(uint64_t, void, uint64_t))(v17 + 104))(v16, enum case for OpensIntentHint.disable(_:), v18);
    sub_1001C4D9C((unint64_t *)&qword_10069CD70, (void (*)(uint64_t))type metadata accessor for NoteEntity);
    sub_100035854();
    static IntentResult.result<A, B>(value:opensIntent:hint:)();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  }
  sub_1001C4C9C(v15, type metadata accessor for NoteEntity);
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19();
}

uint64_t sub_1001C289C()
{
  uint64_t v1 = *(void *)(v0 + 496);

  sub_1001C4C9C(v1, (uint64_t (*)(void))type metadata accessor for FolderEntity);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    int v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)int v4 = 138412290;
    uint64_t v6 = _convertErrorToNSError(_:)();
    *(void *)(v0 + 344) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "CreateNoteIntent failed with error: %@", v4, 0xCu);
    sub_10002F214(&qword_10069FD50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
  }
  uint64_t v8 = *(void *)(v0 + 432);
  uint64_t v7 = *(void *)(v0 + 440);
  uint64_t v9 = *(void *)(v0 + 424);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  type metadata accessor for Code(0);
  *(void *)(v0 + 384) = 228;
  swift_errorRetain();
  sub_1001C4D9C(&qword_10069B868, type metadata accessor for Code);
  LOBYTE(v7) = static _ErrorCodeProtocol.~= infix(_:_:)();
  swift_errorRelease();
  if (v7)
  {
    sub_100173F8C();
    swift_allocError();
    char v11 = 6;
LABEL_10:
    *uint64_t v10 = v11;
    goto LABEL_11;
  }
  *(void *)(v0 + 376) = 229;
  swift_errorRetain();
  char v12 = static _ErrorCodeProtocol.~= infix(_:_:)();
  swift_errorRelease();
  if (v12)
  {
    sub_100173F8C();
    swift_allocError();
    char v11 = 7;
    goto LABEL_10;
  }
  *(void *)(v0 + 336) = 218;
  swift_errorRetain();
  char v13 = static _ErrorCodeProtocol.~= infix(_:_:)();
  swift_errorRelease();
  if (v13)
  {
    sub_100173F8C();
    swift_allocError();
    char v11 = 5;
    goto LABEL_10;
  }
  type metadata accessor for ICError(0);
  *(void *)(v0 + 312) = 218;
  sub_10002F214((uint64_t *)&unk_10069E1D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100524D10;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v17;
  swift_getErrorValue();
  uint64_t v18 = *(void *)(v0 + 256);
  uint64_t v19 = *(void *)(v0 + 264);
  *(void *)(inited + 72) = v19;
  char v20 = sub_10015E0F0((uint64_t *)(inited + 48));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v20, v18, v19);
  sub_100167B58(inited);
  sub_1001C4D9C((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);
  _BridgedStoredNSError.init(_:userInfo:)();
LABEL_11:
  swift_willThrow();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_1001C2F5C()
{
  uint64_t v1 = *(void **)(v0 + 936);

  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    int v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)int v4 = 138412290;
    uint64_t v6 = _convertErrorToNSError(_:)();
    *(void *)(v0 + 344) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "CreateNoteIntent failed with error: %@", v4, 0xCu);
    sub_10002F214(&qword_10069FD50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
  }
  uint64_t v8 = *(void *)(v0 + 432);
  uint64_t v7 = *(void *)(v0 + 440);
  uint64_t v9 = *(void *)(v0 + 424);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  type metadata accessor for Code(0);
  *(void *)(v0 + 384) = 228;
  swift_errorRetain();
  sub_1001C4D9C(&qword_10069B868, type metadata accessor for Code);
  LOBYTE(v7) = static _ErrorCodeProtocol.~= infix(_:_:)();
  swift_errorRelease();
  if (v7)
  {
    sub_100173F8C();
    swift_allocError();
    char v11 = 6;
LABEL_10:
    *uint64_t v10 = v11;
    goto LABEL_11;
  }
  *(void *)(v0 + 376) = 229;
  swift_errorRetain();
  char v12 = static _ErrorCodeProtocol.~= infix(_:_:)();
  swift_errorRelease();
  if (v12)
  {
    sub_100173F8C();
    swift_allocError();
    char v11 = 7;
    goto LABEL_10;
  }
  *(void *)(v0 + 336) = 218;
  swift_errorRetain();
  char v13 = static _ErrorCodeProtocol.~= infix(_:_:)();
  swift_errorRelease();
  if (v13)
  {
    sub_100173F8C();
    swift_allocError();
    char v11 = 5;
    goto LABEL_10;
  }
  type metadata accessor for ICError(0);
  *(void *)(v0 + 312) = 218;
  sub_10002F214((uint64_t *)&unk_10069E1D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100524D10;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v17;
  swift_getErrorValue();
  uint64_t v18 = *(void *)(v0 + 256);
  uint64_t v19 = *(void *)(v0 + 264);
  *(void *)(inited + 72) = v19;
  char v20 = sub_10015E0F0((uint64_t *)(inited + 48));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v20, v18, v19);
  sub_100167B58(inited);
  sub_1001C4D9C((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);
  _BridgedStoredNSError.init(_:userInfo:)();
LABEL_11:
  swift_willThrow();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_1001C3604()
{
  uint64_t v1 = *(void **)(v0 + 1032);
  uint64_t v2 = *(void **)(v0 + 936);

  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_errorRetain();
  os_log_type_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412290;
    uint64_t v7 = _convertErrorToNSError(_:)();
    *(void *)(v0 + 344) = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v6 = v7;
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "CreateNoteIntent failed with error: %@", v5, 0xCu);
    sub_10002F214(&qword_10069FD50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
  }
  uint64_t v9 = *(void *)(v0 + 432);
  uint64_t v8 = *(void *)(v0 + 440);
  uint64_t v10 = *(void *)(v0 + 424);

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  type metadata accessor for Code(0);
  *(void *)(v0 + 384) = 228;
  swift_errorRetain();
  sub_1001C4D9C(&qword_10069B868, type metadata accessor for Code);
  LOBYTE(v8) = static _ErrorCodeProtocol.~= infix(_:_:)();
  swift_errorRelease();
  if (v8)
  {
    sub_100173F8C();
    swift_allocError();
    char v12 = 6;
LABEL_10:
    *char v11 = v12;
    goto LABEL_11;
  }
  *(void *)(v0 + 376) = 229;
  swift_errorRetain();
  char v13 = static _ErrorCodeProtocol.~= infix(_:_:)();
  swift_errorRelease();
  if (v13)
  {
    sub_100173F8C();
    swift_allocError();
    char v12 = 7;
    goto LABEL_10;
  }
  *(void *)(v0 + 336) = 218;
  swift_errorRetain();
  char v14 = static _ErrorCodeProtocol.~= infix(_:_:)();
  swift_errorRelease();
  if (v14)
  {
    sub_100173F8C();
    swift_allocError();
    char v12 = 5;
    goto LABEL_10;
  }
  type metadata accessor for ICError(0);
  *(void *)(v0 + 312) = 218;
  sub_10002F214((uint64_t *)&unk_10069E1D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100524D10;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v18;
  swift_getErrorValue();
  uint64_t v19 = *(void *)(v0 + 256);
  uint64_t v20 = *(void *)(v0 + 264);
  *(void *)(inited + 72) = v20;
  uint64_t v21 = sub_10015E0F0((uint64_t *)(inited + 48));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v21, v19, v20);
  sub_100167B58(inited);
  sub_1001C4D9C((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);
  _BridgedStoredNSError.init(_:userInfo:)();
LABEL_11:
  swift_willThrow();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t sub_1001C3CB4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v8 = a1;
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069CE50);
  __chkstk_darwin(v2 - 8);
  os_log_type_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  IntentParameter.wrappedValue.getter();
  IntentParameter.wrappedValue.getter();
  uint64_t v5 = ICCreateNoteAction.perform(withTitle:contents:container:)();
  sub_10002B754((uint64_t)v4, (uint64_t *)&unk_10069CE50);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v1) {
    uint64_t *v8 = v5;
  }
  return result;
}

void sub_1001C3DBC(void *a1)
{
  self;
  uint64_t v2 = swift_dynamicCastObjCClass();
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    id v4 = a1;
    id v5 = [v3 folder];
    if (v5)
    {
      uint64_t v6 = v5;
      id v7 = [self sharedInstance];
      if (!v7)
      {
        __break(1u);
        return;
      }
      uint64_t v8 = v7;
      id v9 = [v6 objectID];
      [v8 refreshNotesForCollectionWithID:v9];

      swift_unknownObjectRelease();
      id v4 = v9;
    }
  }
}

uint64_t sub_1001C3EB8(uint64_t a1)
{
  long long v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v2 + 32) = v4;
  *(void *)(v2 + 48) = *(void *)(v1 + 32);
  id v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 56) = v5;
  *id v5 = v2;
  v5[1] = sub_1001C3F70;
  return CreateNoteIntent.perform()(a1);
}

uint64_t sub_1001C3F70()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1001C4064@<X0>(void *a1@<X8>)
{
  unint64_t v59 = a1;
  uint64_t v1 = sub_10002F214(&qword_10069B260);
  __chkstk_darwin(v1 - 8);
  NSString v58 = &v50[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = sub_10002F214((uint64_t *)&unk_10069CE50);
  __chkstk_darwin(v3 - 8);
  uint64_t v56 = &v50[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v72 = type metadata accessor for InputConnectionBehavior();
  uint64_t v74 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  uint64_t v73 = &v50[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  id v57 = &v50[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v63 = &v50[-v9];
  uint64_t v10 = sub_10002F214((uint64_t *)&unk_10069E280);
  __chkstk_darwin(v10 - 8);
  uint64_t v55 = &v50[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v12 - 8);
  uint64_t v54 = &v50[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = &v50[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = type metadata accessor for Locale();
  __chkstk_darwin(v18 - 8);
  uint64_t v19 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v19 - 8);
  uint64_t v20 = type metadata accessor for LocalizedStringResource();
  uint64_t v69 = v20;
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  char v62 = &v50[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v53 = sub_10002F214((uint64_t *)&unk_10069B250);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v23 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v24 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v15 + 104);
  unsigned int v51 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v52 = v14;
  v24(v17, enum case for LocalizedStringResource.BundleDescription.main(_:), v14);
  uint64_t v61 = v15 + 104;
  uint64_t v60 = v24;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v24(v17, v23, v14);
  uint64_t v25 = v54;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v26 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v21 + 56);
  uint64_t v68 = v21 + 56;
  uint64_t v70 = v26;
  v26(v25, 0, 1, v20);
  uint64_t v27 = type metadata accessor for String.IntentInputOptions();
  uint64_t v77 = 0;
  uint64_t v78 = 0;
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v55, 1, 1, v27);
  uint64_t v65 = type metadata accessor for IntentDialog();
  uint64_t v28 = *(void *)(v65 - 8);
  int v66 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
  uint64_t v67 = v28 + 56;
  v66(v63, 1, 1, v65);
  unsigned int v71 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v64 = *(void (**)(unsigned char *))(v74 + 104);
  v74 += 104;
  uint64_t v29 = v72;
  v64(v73);
  uint64_t v55 = (unsigned char *)IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)();
  uint64_t v53 = sub_10002F214((uint64_t *)&unk_10069E290);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v30 = v51;
  uint64_t v31 = v52;
  uint64_t v32 = v60;
  v60(v17, v51, v52);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v32(v17, v30, v31);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v33 = v25;
  v70(v25, 0, 1, v69);
  uint64_t v34 = type metadata accessor for AttributedString();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v56, 1, 1, v34);
  uint64_t v35 = v63;
  v66(v63, 1, 1, v65);
  ((void (*)(unsigned char *, void, uint64_t))v64)(v73, v71, v29);
  uint64_t v56 = (unsigned char *)IntentParameter<>.init(title:description:default:requestValueDialog:inputConnectionBehavior:)();
  uint64_t v53 = sub_10002F214(&qword_10069B268);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v36 = v60;
  v60(v17, v30, v31);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v36(v17, v30, v31);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v70(v33, 0, 1, v69);
  uint64_t v37 = type metadata accessor for FolderEntity();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v58, 1, 1, v37);
  uint64_t v38 = v65;
  uint64_t v39 = v66;
  v66(v35, 1, 1, v65);
  v39(v57, 1, 1, v38);
  uint64_t v77 = sub_10017952C();
  uint64_t v78 = v40;
  char v79 = v41 & 1;
  char v80 = v42 & 1;
  char v81 = v43 & 1;
  char v82 = v44 & 1;
  ((void (*)(unsigned char *, void, uint64_t))v64)(v73, v71, v72);
  sub_100157B58();
  uint64_t v45 = IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:query:)();
  sub_10002F214((uint64_t *)&unk_10069CE60);
  unint64_t v75 = 0xD000000000000021;
  unint64_t v76 = 0x8000000100549290;
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t v46 = AppDependency.__allocating_init(key:manager:)();
  sub_10002F214((uint64_t *)&unk_10069B130);
  unint64_t v75 = 0xD000000000000024;
  unint64_t v76 = 0x8000000100549260;
  AnyHashable.init<A>(_:)();
  static AppDependencyManager.shared.getter();
  uint64_t result = AppDependency.__allocating_init(key:manager:)();
  unsigned int v48 = v59;
  uint64_t v49 = v56;
  *unint64_t v59 = v55;
  v48[1] = v49;
  v48[2] = v45;
  v48[3] = v46;
  v48[4] = result;
  return result;
}

uint64_t sub_1001C4BB4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001C4C1C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1001C4C7C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1001C3CB4(a1);
}

uint64_t sub_1001C4C9C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1001C4D00()
{
  unint64_t result = qword_10069E230;
  if (!qword_10069E230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069E230);
  }
  return result;
}

uint64_t sub_1001C4D54()
{
  return sub_1001C4D9C((unint64_t *)&qword_10069B1E0, (void (*)(uint64_t))type metadata accessor for NoteEntity);
}

uint64_t sub_1001C4D9C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001C4DE8()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1001C4E1C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for CreateNoteIntent()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void *initializeWithCopy for CreateNoteIntent(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for CreateNoteIntent(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for FastSyncActivityState(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for CreateNoteIntent(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CreateNoteIntent(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CreateNoteIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CreateNoteIntent()
{
  return &type metadata for CreateNoteIntent;
}

uint64_t sub_1001C50C0()
{
  return sub_10001DFB0(&qword_10069E258, &qword_10069E260);
}

uint64_t sub_1001C50FC()
{
  return sub_10001DFB0(&qword_10069E268, (uint64_t *)&unk_10069E270);
}

uint64_t sub_1001C5138()
{
  return sub_10001DFB0((unint64_t *)&qword_10069CDA0, (uint64_t *)&unk_10069E270);
}

void sub_1001C51A8(void *a1)
{
  id v2 = [a1 interactions];
  sub_10002F214(&qword_10069E2E0);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4) {
      goto LABEL_3;
    }
LABEL_14:
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v4) {
    goto LABEL_14;
  }
LABEL_3:
  if (v4 >= 1)
  {
    for (uint64_t i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_unknownObjectRetain();
      }
      type metadata accessor for UIAppIntentInteraction();
      uint64_t v6 = swift_dynamicCastClass();
      if (v6)
      {
        uint64_t v7 = (void *)v6;
        swift_beginAccess();
        uint64_t v8 = (void *)sub_10039BD10(v7);
        swift_endAccess();

        if (v8) {
          [a1 removeInteraction:v7];
        }
      }
      swift_unknownObjectRelease();
    }
LABEL_16:
    swift_bridgeObjectRelease();
    return;
  }
  __break(1u);
}

uint64_t type metadata accessor for ICAppIntentsInteractionController()
{
  return self;
}

uint64_t sub_1001C53D8(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  *(void *)(v3 + 120) = a1;
  *(void *)(v3 + 128) = a3;
  long long v4 = a2[1];
  *(_OWORD *)(v3 + 136) = *a2;
  *(_OWORD *)(v3 + 152) = v4;
  long long v5 = a2[3];
  *(_OWORD *)(v3 + 168) = a2[2];
  *(_OWORD *)(v3 + 184) = v5;
  type metadata accessor for MainActor();
  *(void *)(v3 + 200) = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v3 + 208) = v7;
  *(void *)(v3 + 216) = v6;
  return _swift_task_switch(sub_1001C5488, v7, v6);
}

uint64_t sub_1001C5488()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong
    && (id v2 = Strong,
        id v3 = objc_msgSend(Strong, "ic_viewControllerManager"),
        v0[28] = v3,
        v2,
        v3))
  {
    long long v4 = (void *)v0[23];
    uint64_t v20 = (void *)v0[24];
    uint64_t v6 = v0[21];
    uint64_t v5 = v0[22];
    uint64_t v8 = v0[19];
    uint64_t v7 = v0[20];
    uint64_t v10 = v0[17];
    uint64_t v9 = v0[18];
    uint64_t v21 = (uint64_t *)v0[15];
    id v11 = v20;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    id v12 = v11;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    id v13 = v4;
    id v14 = [v3 noteEditorViewController];
    v0[29] = v14;
    id v15 = v14;

    v0[2] = v10;
    v0[3] = v9;
    v0[4] = v8;
    v0[5] = v7;
    v0[6] = v6;
    v0[7] = v5;
    v0[8] = v14;
    v0[9] = v20;
    v21[3] = sub_10002F214((uint64_t *)&unk_10069C980);
    v21[4] = sub_1001B5B54();
    uint64_t v16 = sub_10015E0F0(v21);
    uint64_t v17 = (void *)swift_task_alloc();
    v0[30] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_1001C5730;
    return ApplyFormattingIntent.perform()((uint64_t)v16);
  }
  else
  {
    swift_release();
    type metadata accessor for ICError(0);
    v0[14] = 222;
    sub_1001B50CC((uint64_t)_swiftEmptyArrayStorage);
    sub_1001CBD44();
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_willThrow();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    return v19();
  }
}

uint64_t sub_1001C5730()
{
  id v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 248) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[26];
    uint64_t v4 = v2[27];
    uint64_t v5 = sub_1001C5978;
  }
  else
  {
    uint64_t v6 = (void *)v2[29];
    uint64_t v7 = (void *)v2[24];
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    uint64_t v3 = v2[26];
    uint64_t v4 = v2[27];
    uint64_t v5 = sub_1001C58A4;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1001C58A4()
{
  uint64_t v1 = *(void **)(v0 + 232);
  id v2 = *(void **)(v0 + 192);

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1001C5978()
{
  uint64_t v1 = *(void **)(v0 + 232);
  uint64_t v5 = *(void **)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 120);

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  sub_1001CBD9C(v2);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1001C5A98(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  *(void *)(v3 + 152) = a1;
  *(void *)(v3 + 160) = a3;
  uint64_t v5 = type metadata accessor for ChangeOperation();
  *(void *)(v3 + 168) = v5;
  *(void *)(v3 + 176) = *(void *)(v5 - 8);
  *(void *)(v3 + 184) = swift_task_alloc();
  *(_OWORD *)(v3 + 192) = *a2;
  *(void *)(v3 + 208) = type metadata accessor for MainActor();
  *(void *)(v3 + 216) = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v3 + 224) = v7;
  *(void *)(v3 + 232) = v6;
  return _swift_task_switch(sub_1001C5B9C, v7, v6);
}

uint64_t sub_1001C5B9C()
{
  IntentParameter.wrappedValue.getter();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong
    && (uint64_t v2 = Strong,
        id v3 = objc_msgSend(Strong, "ic_viewControllerManager"),
        v2,
        v3))
  {
    if ([v3 canUserChangeNoteContainerViewMode])
    {
      uint64_t v4 = *(void *)(v0 + 184);
      uint64_t v5 = *(void *)(v0 + 168);
      uint64_t v6 = *(void *)(v0 + 176);
      IntentParameter.wrappedValue.getter();
      int v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 88))(v4, v5);
      if (v7 == enum case for ChangeOperation.disable(_:))
      {
        IntentParameter.wrappedValue.getter();
        if (*(unsigned char *)(v0 + 257))
        {
          char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          char v9 = v8 ^ 1;
        }
        else
        {
          swift_bridgeObjectRelease();
          char v9 = 0;
        }
        goto LABEL_19;
      }
      if (v7 == enum case for ChangeOperation.enable(_:))
      {
        IntentParameter.wrappedValue.getter();
        if (*(unsigned char *)(v0 + 258))
        {
          char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          char v9 = 1;
        }
LABEL_19:
        id v13 = *(uint64_t **)(v0 + 152);
        [v3 setNoteContainerViewMode:v9 & 1];

        v13[3] = sub_10002F214((uint64_t *)&unk_10069C980);
        v13[4] = sub_1001B5B54();
        *(void *)(v0 + 240) = sub_10015E0F0(v13);
        *(void *)(v0 + 248) = static MainActor.shared.getter();
        uint64_t v15 = dispatch thunk of Actor.unownedExecutor.getter();
        return _swift_task_switch(sub_1001C6034, v15, v14);
      }
      if (v7 == enum case for ChangeOperation.toggle(_:))
      {
        char v9 = [v3 noteContainerViewMode] != (id)1;
        goto LABEL_19;
      }
      uint64_t v17 = *(void *)(v0 + 176);
      uint64_t v16 = *(void *)(v0 + 184);
      uint64_t v18 = *(void *)(v0 + 168);
      swift_release();
      type metadata accessor for ICError(0);
      *(void *)(v0 + 144) = 223;
      sub_10002F214((uint64_t *)&unk_10069E1D0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_100524D10;
      *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
      *(void *)(inited + 40) = v20;
      *(void *)(inited + 72) = &type metadata for String;
      *(void *)(inited + 48) = 0xD000000000000013;
      *(void *)(inited + 56) = 0x800000010054F4D0;
      sub_100167B58(inited);
      sub_1001CBD44();
      _BridgedStoredNSError.init(_:userInfo:)();
      swift_willThrow();

      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    }
    else
    {
      swift_release();
      sub_100173F8C();
      swift_allocError();
      *uint64_t v10 = 0;
      swift_willThrow();
    }
  }
  else
  {
    swift_release();
    type metadata accessor for ICError(0);
    *(void *)(v0 + 136) = 222;
    sub_1001B50CC((uint64_t)_swiftEmptyArrayStorage);
    sub_1001CBD44();
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_willThrow();
  }
  swift_task_dealloc();
  id v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_1001C6034()
{
  swift_release();
  static IntentResult.result<>()();
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v2 = *(void *)(v0 + 232);
  return _swift_task_switch(sub_1001C60A0, v1, v2);
}

uint64_t sub_1001C60A0()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001C6110(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  *(void *)(v3 + 40) = a1;
  *(void *)(v3 + 48) = a3;
  *(_OWORD *)(v3 + 56) = *a2;
  type metadata accessor for MainActor();
  *(void *)(v3 + 72) = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v3 + 80) = v5;
  *(void *)(v3 + 88) = v4;
  return _swift_task_switch(sub_1001C61B0, v5, v4);
}

uint64_t sub_1001C61B0()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_retain_n();
  swift_retain_n();
  if (Strong)
  {
    id v2 = [Strong window];
  }
  else
  {
    id v2 = 0;
  }
  v0[12] = v2;
  uint64_t v3 = (uint64_t *)v0[5];
  v3[3] = sub_10002F214((uint64_t *)&unk_10069C980);
  v3[4] = sub_1001B5B54();
  uint64_t v4 = sub_10015E0F0(v3);
  id v5 = v2;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[13] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1001C62FC;
  uint64_t v7 = v0[7];
  uint64_t v8 = v0[8];
  return DeleteTagsIntent.perform()((uint64_t)v4, v7, v8, (uint64_t)v2);
}

uint64_t sub_1001C62FC()
{
  id v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[10];
    uint64_t v4 = v2[11];
    id v5 = sub_1001C64B8;
  }
  else
  {
    uint64_t v6 = (void *)v2[12];
    swift_release();
    swift_release();

    uint64_t v3 = v2[10];
    uint64_t v4 = v2[11];
    id v5 = sub_1001C6430;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1001C6430()
{
  uint64_t v1 = *(void **)(v0 + 96);
  swift_release();
  swift_release();
  swift_release();

  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1001C64B8()
{
  uint64_t v1 = (void *)v0[12];
  uint64_t v2 = v0[5];
  swift_release();
  swift_release();
  swift_release();

  sub_1001CBD9C(v2);
  swift_release();
  swift_release();

  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1001C6560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 40) = a1;
  *(void *)(v3 + 48) = a3;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)a2;
  *(void *)(v3 + 72) = *(void *)(a2 + 16);
  type metadata accessor for MainActor();
  *(void *)(v3 + 80) = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v3 + 88) = v5;
  *(void *)(v3 + 96) = v4;
  return _swift_task_switch(sub_1001C6608, v5, v4);
}

uint64_t sub_1001C6608()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  if (Strong)
  {
    id v2 = [Strong window];
  }
  else
  {
    id v2 = 0;
  }
  v0[13] = v2;
  uint64_t v3 = (uint64_t *)v0[5];
  v3[3] = sub_10002F214((uint64_t *)&unk_10069C980);
  v3[4] = sub_1001B5B54();
  uint64_t v4 = sub_10015E0F0(v3);
  id v5 = v2;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[14] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1001C6764;
  uint64_t v7 = v0[8];
  uint64_t v8 = v0[9];
  uint64_t v9 = v0[7];
  return LockNoteIntent.perform()((uint64_t)v4, v9, v7, v8, (uint64_t)v2);
}

uint64_t sub_1001C6764()
{
  id v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[11];
    uint64_t v4 = v2[12];
    id v5 = sub_1001CBE60;
  }
  else
  {
    uint64_t v6 = (void *)v2[13];
    swift_release();
    swift_release();
    swift_release();

    uint64_t v3 = v2[11];
    uint64_t v4 = v2[12];
    id v5 = sub_1001CBE64;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1001C68A4(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  *(void *)(v3 + 80) = a1;
  *(void *)(v3 + 88) = a3;
  long long v4 = *(_OWORD *)((char *)a2 + 24);
  *(_OWORD *)(v3 + 96) = *a2;
  *(_OWORD *)(v3 + 112) = v4;
  type metadata accessor for MainActor();
  *(void *)(v3 + 128) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v3 + 136) = v6;
  *(void *)(v3 + 144) = v5;
  return _swift_task_switch(sub_1001C6948, v6, v5);
}

uint64_t sub_1001C6948()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  if (Strong)
  {
    id v2 = [Strong window];
  }
  else
  {
    id v2 = 0;
  }
  *(void *)(v0 + 152) = v2;
  uint64_t v3 = *(uint64_t **)(v0 + 80);
  long long v4 = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 96);
  *(void *)(v0 + 32) = v2;
  *(_OWORD *)(v0 + 40) = v4;
  v3[3] = sub_10002F214((uint64_t *)&unk_10069C980);
  v3[4] = sub_1001B5B54();
  uint64_t v5 = sub_10015E0F0(v3);
  id v6 = v2;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v7;
  void *v7 = v0;
  v7[1] = sub_1001C6AC4;
  return MoveNotesToFolderIntent.perform()((uint64_t)v5);
}

uint64_t sub_1001C6AC4()
{
  id v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 168) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[17];
    uint64_t v4 = v2[18];
    uint64_t v5 = sub_1001C6CB8;
  }
  else
  {
    id v6 = (void *)v2[19];
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    uint64_t v3 = v2[17];
    uint64_t v4 = v2[18];
    uint64_t v5 = sub_1001C6C14;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1001C6C14()
{
  uint64_t v1 = *(void **)(v0 + 152);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1001C6CB8()
{
  uint64_t v1 = (void *)v0[19];
  uint64_t v2 = v0[10];
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  sub_1001CBD9C(v2);
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1001C6D8C(uint64_t a1, void *a2, uint64_t a3)
{
  v3[7] = a1;
  unsigned char v3[8] = a3;
  v3[9] = *a2;
  v3[10] = type metadata accessor for MainActor();
  v3[11] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[12] = v5;
  v3[13] = v4;
  return _swift_task_switch(sub_1001C6E30, v5, v4);
}

uint64_t sub_1001C6E30()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong
    && (uint64_t v2 = Strong,
        id v3 = objc_msgSend(Strong, "ic_viewControllerManager"),
        *(void *)(v0 + 112) = v3,
        v2,
        v3))
  {
    IntentParameter.wrappedValue.getter();
    if (*(unsigned char *)(v0 + 40)) {
      [v3 showAccountListAnimated:1];
    }
    else {
      [v3 showAttachmentBrowser];
    }
    id v6 = *(uint64_t **)(v0 + 56);
    v6[3] = sub_10002F214((uint64_t *)&unk_10069C980);
    v6[4] = sub_1001B5B54();
    *(void *)(v0 + 120) = sub_10015E0F0(v6);
    *(void *)(v0 + 128) = static MainActor.shared.getter();
    uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_1001C7014, v8, v7);
  }
  else
  {
    swift_release();
    type metadata accessor for ICError(0);
    *(void *)(v0 + 48) = 222;
    sub_1001B50CC((uint64_t)_swiftEmptyArrayStorage);
    sub_1001CBD44();
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_willThrow();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
}

uint64_t sub_1001C7014()
{
  swift_release();
  static IntentResult.result<>()();
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 104);
  return _swift_task_switch(sub_1001C7080, v1, v2);
}

uint64_t sub_1001C7080()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001C70F0(uint64_t a1, void *a2, uint64_t a3)
{
  v3[47] = a1;
  v3[48] = a3;
  v3[49] = *a2;
  v3[50] = type metadata accessor for MainActor();
  v3[51] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[52] = v5;
  v3[53] = v4;
  return _swift_task_switch(sub_1001C7194, v5, v4);
}

uint64_t sub_1001C7194()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong
    && (uint64_t v2 = Strong,
        id v3 = objc_msgSend(Strong, "ic_viewControllerManager"),
        *(void *)(v0 + 432) = v3,
        v2,
        v3))
  {
    IntentParameter.wrappedValue.getter();
    switch(*(unsigned char *)(v0 + 456))
    {
      case 1:
        id v9 = [objc_allocWithZone((Class)ICVirtualSmartFolderItemIdentifier) initWithType:ICVirtualSmartFolderItemIdentifierTypeMathNotes parentIdentifier:0];
        sub_10002F214((uint64_t *)&unk_10069E4E0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_100524D10;
        *(void *)(v0 + 360) = v9;
        sub_100031418(0, &qword_10069D940);
        sub_1001CBDF0();
        id v6 = v9;
        break;
      case 2:
        id v10 = [objc_allocWithZone((Class)ICVirtualSmartFolderItemIdentifier) initWithType:ICVirtualSmartFolderItemIdentifierTypeSystemPaper parentIdentifier:0];
        sub_10002F214((uint64_t *)&unk_10069E4E0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_100524D10;
        *(void *)(v0 + 344) = v10;
        sub_100031418(0, &qword_10069D940);
        sub_1001CBDF0();
        id v6 = v10;
        break;
      case 3:
        id v11 = [objc_allocWithZone((Class)ICVirtualSmartFolderItemIdentifier) initWithType:ICVirtualSmartFolderItemIdentifierTypeSharedWithYou parentIdentifier:0];
        sub_10002F214((uint64_t *)&unk_10069E4E0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_100524D10;
        *(void *)(v0 + 328) = v11;
        sub_100031418(0, &qword_10069D940);
        sub_1001CBDF0();
        id v6 = v11;
        break;
      default:
        id v4 = [objc_allocWithZone((Class)ICVirtualSmartFolderItemIdentifier) initWithType:ICVirtualSmartFolderItemIdentifierTypeCallNotes parentIdentifier:0];
        sub_10002F214((uint64_t *)&unk_10069E4E0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_100524D10;
        *(void *)(v0 + 336) = v4;
        sub_100031418(0, &qword_10069D940);
        sub_1001CBDF0();
        id v6 = v4;
        break;
    }
    AnyHashable.init<A>(_:)();
    id v12 = *(uint64_t **)(v0 + 376);
    sub_1002695F8(inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    Class isa = Set._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    Class v14 = Set._bridgeToObjectiveC()().super.isa;
    [v3 selectContainerWithIdentifiers:isa excludingIdentifiers:v14 usingRootViewController:1 deferUntilDataLoaded:1 animated:1];

    v12[3] = sub_10002F214((uint64_t *)&unk_10069C980);
    void v12[4] = sub_1001B5B54();
    *(void *)(v0 + 440) = sub_10015E0F0(v12);
    *(void *)(v0 + 448) = static MainActor.shared.getter();
    uint64_t v16 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_1001C76C4, v16, v15);
  }
  else
  {
    swift_release();
    type metadata accessor for ICError(0);
    *(void *)(v0 + 352) = 222;
    sub_1001B50CC((uint64_t)_swiftEmptyArrayStorage);
    sub_1001CBD44();
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_willThrow();
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
}

uint64_t sub_1001C76C4()
{
  swift_release();
  static IntentResult.result<>()();
  uint64_t v1 = *(void *)(v0 + 416);
  uint64_t v2 = *(void *)(v0 + 424);
  return _swift_task_switch(sub_1001C7730, v1, v2);
}

uint64_t sub_1001C7730()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001C77A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 56) = a1;
  *(void *)(v3 + 64) = a3;
  *(_OWORD *)(v3 + 72) = *(_OWORD *)a2;
  *(void *)(v3 + 88) = *(void *)(a2 + 16);
  *(void *)(v3 + 96) = type metadata accessor for MainActor();
  *(void *)(v3 + 104) = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v3 + 112) = v5;
  *(void *)(v3 + 120) = v4;
  return _swift_task_switch(sub_1001C784C, v5, v4);
}

uint64_t sub_1001C784C()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong
    && (uint64_t v2 = Strong,
        id v3 = objc_msgSend(Strong, "ic_viewControllerManager"),
        v0[16] = v3,
        v2,
        v3))
  {
    uint64_t v5 = v0[10];
    uint64_t v4 = v0[11];
    uint64_t v6 = v0[9];
    swift_retain();
    swift_retain();
    swift_retain();
    id v9 = sub_100454AC0(v6, v5, v4);
    id v10 = (uint64_t *)v0[7];
    swift_release();
    swift_release();
    swift_release();
    [v3 showObjectWithObjectID:v9];

    v10[3] = sub_10002F214((uint64_t *)&unk_10069C980);
    v10[4] = sub_1001B5B54();
    v0[17] = sub_10015E0F0(v10);
    v0[18] = static MainActor.shared.getter();
    uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_1001C7AA8, v12, v11);
  }
  else
  {
    swift_release();
    type metadata accessor for ICError(0);
    v0[6] = 222;
    sub_1001B50CC((uint64_t)_swiftEmptyArrayStorage);
    sub_1001CBD44();
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_willThrow();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
}

uint64_t sub_1001C7AA8()
{
  swift_release();
  static IntentResult.result<>()();
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 120);
  return _swift_task_switch(sub_1001CBE58, v1, v2);
}

uint64_t sub_1001C7B14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 56) = a1;
  *(void *)(v3 + 64) = a3;
  *(_OWORD *)(v3 + 72) = *(_OWORD *)a2;
  *(void *)(v3 + 88) = *(void *)(a2 + 16);
  *(void *)(v3 + 96) = type metadata accessor for MainActor();
  *(void *)(v3 + 104) = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v3 + 112) = v4;
  *(void *)(v3 + 120) = v5;
  return _swift_task_switch(sub_1001C7BF4, v4, v5);
}

uint64_t sub_1001C7BF4()
{
  uint64_t v34 = v0;
  uint64_t v1 = (id *)(v0 + 5);
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = Strong;
    id v4 = [Strong ic_viewControllerManager];
    v0[16] = v4;

    if (v4)
    {
      uint64_t v6 = v0[10];
      uint64_t v5 = v0[11];
      uint64_t v7 = v0[9];
      swift_retain();
      swift_retain();
      swift_retain();
      id v10 = sub_100454B14(v7, v6, v5);
      swift_release();
      swift_release();
      swift_release();
      [v4 showObjectWithObjectID:v10];

      id v11 = [self sharedContext];
      if (v11)
      {
        uint64_t v12 = v11;
        uint64_t v14 = v0[10];
        uint64_t v13 = v0[11];
        uint64_t v15 = v0[9];
        id v16 = [v11 managedObjectContext];

        swift_retain();
        swift_retain();
        swift_retain();
        id v17 = sub_100454B14(v15, v14, v13);
        swift_release();
        swift_release();
        swift_release();
        id v18 = [v16 objectWithID:v17];

        if (v18)
        {
          self;
          uint64_t v19 = swift_dynamicCastObjCClass();
          if (v19)
          {
            uint64_t v20 = (void *)v19;
            id v21 = [v4 noteEditorViewController];
            id v22 = [v21 textView];

            if (v22)
            {
              id v23 = [v22 icTextLayoutManager];

              if (v23)
              {
                id v24 = [v20 identifier];
                if (v24)
                {
                  uint64_t v25 = v24;
                  static String._unconditionallyBridgeFromObjectiveC(_:)();
                }
                NSString v26 = String._bridgeToObjectiveC()();
                swift_bridgeObjectRelease();
                id v27 = [v23 existingAttachmentViewForIdentifier:v26];

                if (v27)
                {
                  self;
                  uint64_t v28 = (void *)swift_dynamicCastObjCClass();
                  if (v28)
                  {
LABEL_19:
                    id v29 = v28;
                    [v29 openAttachment];

                    goto LABEL_20;
                  }
                }
                id v33 = 0;
                *uint64_t v1 = 0;
                sub_1001C823C(v0 + 5, v23, (uint64_t)v20, v4, &v33);

                uint64_t v28 = v33;
                goto LABEL_19;
              }
            }
          }
        }
      }
LABEL_20:
      uint64_t v30 = (uint64_t *)v0[7];
      v30[3] = sub_10002F214((uint64_t *)&unk_10069C980);
      v30[4] = sub_1001B5B54();
      v0[17] = sub_10015E0F0(v30);
      v0[18] = static MainActor.shared.getter();
      uint64_t v32 = dispatch thunk of Actor.unownedExecutor.getter();
      return _swift_task_switch(sub_1001C8108, v32, v31);
    }
  }
  swift_release();
  type metadata accessor for ICError(0);
  v0[6] = 222;
  sub_1001B50CC((uint64_t)_swiftEmptyArrayStorage);
  sub_1001CBD44();
  _BridgedStoredNSError.init(_:userInfo:)();
  swift_willThrow();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1001C8108()
{
  swift_release();
  static IntentResult.result<>()();
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 120);
  return _swift_task_switch(sub_1001C81A0, v1, v2);
}

uint64_t sub_1001C81A0()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1001C823C(uint64_t *a1, id a2, uint64_t a3, void *a4, void **a5)
{
  id v9 = [a2 rangeForAttachment:a3 withTextAttachment:a1];
  id v10 = [a2 documentRange];
  id v11 = [v10 location];

  id v12 = [a2 locationFromLocation:v11 withOffset:v9];
  swift_unknownObjectRelease();
  uint64_t v13 = *a1;
  if (v13)
  {
    swift_unknownObjectRetain();
    if (v12)
    {
      swift_unknownObjectRetain();
      id v14 = [a4 noteEditorViewController];
      id v15 = [v14 textView];

      if (!v15) {
        goto LABEL_9;
      }
      id v16 = [v15 icTextLayoutManager];

      id v17 = [a4 noteEditorViewController];
      id v18 = [v17 textView];

      id v19 = [v16 viewProviderForTextAttachment:v13 parentView:v18 location:v12];
      if (v19)
      {
        id v20 = v19;
        id v21 = [v20 view];
        swift_unknownObjectRelease();

        swift_unknownObjectRelease_n();
        if (v21)
        {
          self;
          uint64_t v22 = swift_dynamicCastObjCClass();
          if (v22)
          {
LABEL_11:
            id v23 = *a5;
            *a5 = (void *)v22;

            return;
          }
        }
      }
      else
      {
LABEL_9:
        swift_unknownObjectRelease();
        swift_unknownObjectRelease_n();
      }
      uint64_t v22 = 0;
      goto LABEL_11;
    }
  }
  swift_unknownObjectRelease();
}

uint64_t sub_1001C8484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 56) = a1;
  *(void *)(v3 + 64) = a3;
  *(_OWORD *)(v3 + 72) = *(_OWORD *)a2;
  *(void *)(v3 + 88) = *(void *)(a2 + 16);
  *(void *)(v3 + 96) = type metadata accessor for MainActor();
  *(void *)(v3 + 104) = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v3 + 112) = v5;
  *(void *)(v3 + 120) = v4;
  return _swift_task_switch(sub_1001C8530, v5, v4);
}

uint64_t sub_1001C8530()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong
    && (uint64_t v2 = Strong,
        id v3 = objc_msgSend(Strong, "ic_viewControllerManager"),
        v0[16] = v3,
        v2,
        v3))
  {
    id v6 = sub_1003F95E0(v0[9], v0[10], v0[11]);
    uint64_t v7 = (uint64_t *)v0[7];
    [v3 showObjectWithObjectID:v6];

    v7[3] = sub_10002F214((uint64_t *)&unk_10069C980);
    void v7[4] = sub_1001B5B54();
    v0[17] = sub_10015E0F0(v7);
    v0[18] = static MainActor.shared.getter();
    uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_1001C7AA8, v9, v8);
  }
  else
  {
    swift_release();
    type metadata accessor for ICError(0);
    v0[6] = 222;
    sub_1001B50CC((uint64_t)_swiftEmptyArrayStorage);
    sub_1001CBD44();
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_willThrow();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_1001C8724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 56) = a1;
  *(void *)(v3 + 64) = a3;
  *(_OWORD *)(v3 + 72) = *(_OWORD *)a2;
  *(void *)(v3 + 88) = *(void *)(a2 + 16);
  *(void *)(v3 + 96) = type metadata accessor for MainActor();
  *(void *)(v3 + 104) = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v3 + 112) = v5;
  *(void *)(v3 + 120) = v4;
  return _swift_task_switch(sub_1001C87D0, v5, v4);
}

uint64_t sub_1001C87D0()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong
    && (uint64_t v2 = Strong,
        id v3 = objc_msgSend(Strong, "ic_viewControllerManager"),
        v0[16] = v3,
        v2,
        v3))
  {
    uint64_t v5 = v0[10];
    uint64_t v4 = v0[11];
    uint64_t v6 = v0[9];
    swift_retain();
    swift_retain();
    swift_retain();
    id v9 = sub_100454DA8(v6, v5, v4);
    uint64_t v10 = (uint64_t *)v0[7];
    swift_release();
    swift_release();
    swift_release();
    [v3 showObjectWithObjectID:v9];

    v10[3] = sub_10002F214((uint64_t *)&unk_10069C980);
    v10[4] = sub_1001B5B54();
    v0[17] = sub_10015E0F0(v10);
    v0[18] = static MainActor.shared.getter();
    uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_1001C8A2C, v12, v11);
  }
  else
  {
    swift_release();
    type metadata accessor for ICError(0);
    v0[6] = 222;
    sub_1001B50CC((uint64_t)_swiftEmptyArrayStorage);
    sub_1001CBD44();
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_willThrow();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
}

uint64_t sub_1001C8A2C()
{
  swift_release();
  static IntentResult.result<>()();
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 120);
  return _swift_task_switch(sub_1001C8A98, v1, v2);
}

uint64_t sub_1001C8A98()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001C8B08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 56) = a1;
  *(void *)(v3 + 64) = a3;
  *(_OWORD *)(v3 + 72) = *(_OWORD *)a2;
  *(void *)(v3 + 88) = *(void *)(a2 + 16);
  *(void *)(v3 + 96) = type metadata accessor for MainActor();
  *(void *)(v3 + 104) = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v3 + 112) = v5;
  *(void *)(v3 + 120) = v4;
  return _swift_task_switch(sub_1001C8BB4, v5, v4);
}

uint64_t sub_1001C8BB4()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong
    && (uint64_t v2 = Strong,
        id v3 = objc_msgSend(Strong, "ic_viewControllerManager"),
        v0[16] = v3,
        v2,
        v3))
  {
    uint64_t v5 = v0[10];
    uint64_t v4 = v0[11];
    uint64_t v6 = v0[9];
    swift_retain();
    swift_retain();
    swift_retain();
    id v9 = sub_100454DFC(v6, v5, v4);
    uint64_t v10 = (uint64_t *)v0[7];
    swift_release();
    swift_release();
    swift_release();
    [v3 selectNoteStartEditingIfEmptyWithObjectID:v9 scrollState:0 animated:1 ensurePresented:1];

    v10[3] = sub_10002F214((uint64_t *)&unk_10069C980);
    v10[4] = sub_1001B5B54();
    v0[17] = sub_10015E0F0(v10);
    v0[18] = static MainActor.shared.getter();
    uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_1001C7AA8, v12, v11);
  }
  else
  {
    swift_release();
    type metadata accessor for ICError(0);
    v0[6] = 222;
    sub_1001B50CC((uint64_t)_swiftEmptyArrayStorage);
    sub_1001CBD44();
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_willThrow();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
}

uint64_t sub_1001C8E1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 56) = a1;
  *(void *)(v3 + 64) = a3;
  *(_OWORD *)(v3 + 72) = *(_OWORD *)a2;
  *(void *)(v3 + 88) = *(void *)(a2 + 16);
  *(void *)(v3 + 96) = type metadata accessor for MainActor();
  *(void *)(v3 + 104) = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v3 + 112) = v5;
  *(void *)(v3 + 120) = v4;
  return _swift_task_switch(sub_1001C8EC8, v5, v4);
}

uint64_t sub_1001C8EC8()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong
    && (uint64_t v2 = Strong,
        id v3 = objc_msgSend(Strong, "ic_viewControllerManager"),
        v0[16] = v3,
        v2,
        v3))
  {
    uint64_t v5 = v0[10];
    uint64_t v4 = v0[11];
    uint64_t v6 = v0[9];
    swift_retain();
    swift_retain();
    swift_retain();
    id v9 = sub_100454E50(v6, v5, v4);
    uint64_t v10 = (uint64_t *)v0[7];
    swift_release();
    swift_release();
    swift_release();
    [v3 showObjectWithObjectID:v9];

    v10[3] = sub_10002F214((uint64_t *)&unk_10069C980);
    v10[4] = sub_1001B5B54();
    v0[17] = sub_10015E0F0(v10);
    v0[18] = static MainActor.shared.getter();
    uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_1001C7AA8, v12, v11);
  }
  else
  {
    swift_release();
    type metadata accessor for ICError(0);
    v0[6] = 222;
    sub_1001B50CC((uint64_t)_swiftEmptyArrayStorage);
    sub_1001CBD44();
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_willThrow();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
}

uint64_t sub_1001C9124(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  *(void *)(v3 + 56) = a1;
  *(void *)(v3 + 64) = a3;
  *(_OWORD *)(v3 + 72) = *a2;
  *(void *)(v3 + 88) = type metadata accessor for MainActor();
  *(void *)(v3 + 96) = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v3 + 104) = v5;
  *(void *)(v3 + 112) = v4;
  return _swift_task_switch(sub_1001C91C8, v5, v4);
}

uint64_t sub_1001C91C8()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong
    && (uint64_t v2 = Strong,
        id v3 = objc_msgSend(Strong, "ic_viewControllerManager"),
        v0[15] = v3,
        v2,
        v3))
  {
    id v6 = sub_1004550E8(v0[9], v0[10]);
    uint64_t v7 = (uint64_t *)v0[7];
    [v3 selectTagSelection:v6];

    v7[3] = sub_10002F214((uint64_t *)&unk_10069C980);
    void v7[4] = sub_1001B5B54();
    v0[16] = sub_10015E0F0(v7);
    v0[17] = static MainActor.shared.getter();
    uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_1001C93B8, v9, v8);
  }
  else
  {
    swift_release();
    type metadata accessor for ICError(0);
    v0[6] = 222;
    sub_1001B50CC((uint64_t)_swiftEmptyArrayStorage);
    sub_1001CBD44();
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_willThrow();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_1001C93B8()
{
  swift_release();
  static IntentResult.result<>()();
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 112);
  return _swift_task_switch(sub_1001C9424, v1, v2);
}

uint64_t sub_1001C9424()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001C9494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 96) = a1;
  *(void *)(v3 + 104) = a3;
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v3 + 32) = v4;
  *(void *)(v3 + 48) = *(void *)(a2 + 32);
  *(void *)(v3 + 112) = type metadata accessor for MainActor();
  *(void *)(v3 + 120) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v3 + 128) = v6;
  *(void *)(v3 + 136) = v5;
  return _swift_task_switch(sub_1001C9540, v6, v5);
}

uint64_t sub_1001C9540()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong
    && (uint64_t v2 = Strong,
        id v3 = objc_msgSend(Strong, "ic_viewControllerManager"),
        v0[18] = v3,
        v2,
        v3))
  {
    id v6 = sub_10022707C();
    uint64_t v7 = (uint64_t *)v0[12];
    [v3 selectTagSelection:v6];

    v7[3] = sub_10002F214((uint64_t *)&unk_10069C980);
    void v7[4] = sub_1001B5B54();
    v0[19] = sub_10015E0F0(v7);
    v0[20] = static MainActor.shared.getter();
    uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_1001C972C, v9, v8);
  }
  else
  {
    swift_release();
    type metadata accessor for ICError(0);
    v0[11] = 222;
    sub_1001B50CC((uint64_t)_swiftEmptyArrayStorage);
    sub_1001CBD44();
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_willThrow();
    long long v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_1001C972C()
{
  swift_release();
  static IntentResult.result<>()();
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 136);
  return _swift_task_switch(sub_1001C9798, v1, v2);
}

uint64_t sub_1001C9798()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001C9808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 40) = a1;
  *(void *)(v3 + 48) = a3;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)a2;
  *(void *)(v3 + 72) = *(void *)(a2 + 16);
  type metadata accessor for MainActor();
  *(void *)(v3 + 80) = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v3 + 88) = v5;
  *(void *)(v3 + 96) = v4;
  return _swift_task_switch(sub_1001C98B0, v5, v4);
}

uint64_t sub_1001C98B0()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  if (Strong)
  {
    id v2 = [Strong window];
  }
  else
  {
    id v2 = 0;
  }
  v0[13] = v2;
  uint64_t v3 = (uint64_t *)v0[5];
  v3[3] = sub_10002F214((uint64_t *)&unk_10069C980);
  v3[4] = sub_1001B5B54();
  uint64_t v4 = sub_10015E0F0(v3);
  id v5 = v2;
  id v6 = (void *)swift_task_alloc();
  v0[14] = v6;
  *id v6 = v0;
  v6[1] = sub_1001C9A0C;
  uint64_t v7 = v0[8];
  uint64_t v8 = v0[9];
  uint64_t v9 = v0[7];
  return RemoveLockFromNoteIntent.perform()((uint64_t)v4, v9, v7, v8, (uint64_t)v2);
}

uint64_t sub_1001C9A0C()
{
  id v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[11];
    uint64_t v4 = v2[12];
    id v5 = sub_1001C9BDC;
  }
  else
  {
    id v6 = (void *)v2[13];
    swift_release();
    swift_release();
    swift_release();

    uint64_t v3 = v2[11];
    uint64_t v4 = v2[12];
    id v5 = sub_1001C9B4C;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1001C9B4C()
{
  uint64_t v1 = *(void **)(v0 + 104);
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1001C9BDC()
{
  uint64_t v1 = (void *)v0[13];
  uint64_t v2 = v0[5];
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  sub_1001CBD9C(v2);
  swift_release();
  swift_release();
  swift_release();

  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1001C9C9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a1;
  unsigned char v3[8] = a3;
  v3[9] = type metadata accessor for MainActor();
  v3[10] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[11] = v5;
  v3[12] = v4;
  return _swift_task_switch(sub_1001C9D38, v5, v4);
}

uint64_t sub_1001C9D38()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong
    || (uint64_t v2 = Strong,
        id v3 = objc_msgSend(Strong, "ic_viewControllerManager"),
        v0[13] = v3,
        v2,
        !v3))
  {
    swift_release();
    type metadata accessor for ICError(0);
    v0[6] = 222;
    sub_1001B50CC((uint64_t)_swiftEmptyArrayStorage);
    sub_1001CBD44();
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_willThrow();
LABEL_8:
    uint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
  id v4 = [v3 noteEditorViewController];
  unsigned __int8 v5 = [v4 ic_isViewVisible];

  if ((v5 & 1) != 0
    && (id v6 = [v3 noteEditorViewController],
        id v7 = [v6 note],
        v6,
        v7))
  {
    if ([v7 isPasswordProtectedAndLocked])
    {
      swift_release();
      sub_100173F8C();
      swift_allocError();
      char v9 = 11;
LABEL_18:
      char *v8 = v9;
      swift_willThrow();

      goto LABEL_8;
    }
    if (![v7 canAddAttachment])
    {
      swift_release();
      sub_100173F8C();
      swift_allocError();
      char v9 = 21;
      goto LABEL_18;
    }
    id v16 = [v3 noteEditorViewController];
    [v16 showInsertUIWithPreferredSourceType:4];
  }
  else
  {
    id v12 = [v3 showNewNoteWithApproach:10 sender:0 animated:1];
    swift_unknownObjectRelease();
  }
  uint64_t v13 = (uint64_t *)v0[7];
  v13[3] = sub_10002F214((uint64_t *)&unk_10069C980);
  v13[4] = sub_1001B5B54();
  v0[14] = sub_10015E0F0(v13);
  v0[15] = static MainActor.shared.getter();
  uint64_t v15 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1001CA048, v15, v14);
}

uint64_t sub_1001CA048()
{
  swift_release();
  static IntentResult.result<>()();
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 96);
  return _swift_task_switch(sub_1001CA0B4, v1, v2);
}

uint64_t sub_1001CA0B4()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001CA124(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  v3[20] = a1;
  v3[21] = a3;
  uint64_t v5 = type metadata accessor for StringSearchCriteria();
  v3[22] = v5;
  v3[23] = *(void *)(v5 - 8);
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = *a2;
  v3[24] = v6;
  v3[25] = v7;
  v3[26] = type metadata accessor for MainActor();
  v3[27] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[28] = v9;
  v3[29] = v8;
  return _swift_task_switch(sub_1001CA224, v9, v8);
}

uint64_t sub_1001CA224()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong
    && (uint64_t v2 = Strong,
        id v3 = objc_msgSend(Strong, "ic_viewControllerManager"),
        v0[30] = v3,
        v2,
        v3))
  {
    uint64_t v4 = v0[24];
    uint64_t v5 = v0[22];
    uint64_t v6 = v0[23];
    id v7 = [self windowStateArchiveWithEmptyState];
    v0[31] = v7;
    IntentParameter.wrappedValue.getter();
    StringSearchCriteria.term.getter();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v7 setCurrentSearchTerm:v8];

    v0[2] = v0;
    v0[3] = sub_1001CA4BC;
    uint64_t v9 = swift_continuation_init();
    v0[10] = _NSConcreteStackBlock;
    v0[11] = 0x40000000;
    v0[12] = sub_10022AB14;
    v0[13] = &unk_10062FFC8;
    v0[14] = v9;
    [v3 applyStateRestoreArchive:v7 completion:v0 + 10];
    return _swift_continuation_await(v0 + 2);
  }
  else
  {
    swift_release();
    type metadata accessor for ICError(0);
    v0[19] = 222;
    sub_1001B50CC((uint64_t)_swiftEmptyArrayStorage);
    sub_1001CBD44();
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_willThrow();
    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
}

uint64_t sub_1001CA4BC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 232);
  uint64_t v2 = *(void *)(*(void *)v0 + 224);
  return _swift_task_switch(sub_1001CA5C4, v2, v1);
}

uint64_t sub_1001CA5C4()
{
  uint64_t v1 = (uint64_t *)v0[20];
  v1[3] = sub_10002F214((uint64_t *)&unk_10069C980);
  v1[4] = sub_1001B5B54();
  v0[32] = sub_10015E0F0(v1);
  v0[33] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1001CA678, v3, v2);
}

uint64_t sub_1001CA678()
{
  swift_release();
  static IntentResult.result<>()();
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v2 = *(void *)(v0 + 232);
  return _swift_task_switch(sub_1001CA6E4, v1, v2);
}

uint64_t sub_1001CA6E4()
{
  uint64_t v1 = *(void **)(v0 + 240);

  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1001CA76C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a1;
  unsigned char v3[8] = a3;
  v3[9] = type metadata accessor for MainActor();
  v3[10] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[11] = v5;
  v3[12] = v4;
  return _swift_task_switch(sub_1001CA808, v5, v4);
}

uint64_t sub_1001CA808()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong
    || (uint64_t v2 = Strong,
        id v3 = objc_msgSend(Strong, "ic_viewControllerManager"),
        v0[13] = v3,
        v2,
        !v3))
  {
    swift_release();
    type metadata accessor for ICError(0);
    v0[6] = 222;
    sub_1001B50CC((uint64_t)_swiftEmptyArrayStorage);
    sub_1001CBD44();
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_willThrow();
LABEL_8:
    uint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
  id v4 = [v3 noteEditorViewController];
  unsigned __int8 v5 = [v4 ic_isViewVisible];

  if ((v5 & 1) != 0
    && (id v6 = [v3 noteEditorViewController],
        id v7 = [v6 note],
        v6,
        v7))
  {
    if ([v7 isPasswordProtected])
    {
      swift_release();
      sub_100173F8C();
      swift_allocError();
      char v9 = 11;
LABEL_20:
      char *v8 = v9;
      swift_willThrow();

      goto LABEL_8;
    }
    if (![v7 isEditable])
    {
      swift_release();
      sub_100173F8C();
      swift_allocError();
      char v9 = 12;
      goto LABEL_20;
    }
    if (![v7 canAddAttachment])
    {
      swift_release();
      sub_100173F8C();
      swift_allocError();
      char v9 = 21;
      goto LABEL_20;
    }
    id v13 = [v3 noteEditorViewController];
    [v13 showInsertUIWithPreferredSourceType:7];
  }
  else
  {
    id v12 = [v3 showNewNoteWithApproach:8 sender:0 animated:1];
    swift_unknownObjectRelease();
    id v13 = [v3 noteEditorViewController];
    [v13 showInsertUIWithPreferredSourceType:7];
  }
  uint64_t v14 = (uint64_t *)v0[7];

  void v14[3] = sub_10002F214((uint64_t *)&unk_10069C980);
  v14[4] = sub_1001B5B54();
  v0[14] = sub_10015E0F0(v14);
  v0[15] = static MainActor.shared.getter();
  uint64_t v16 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1001CAB84, v16, v15);
}

uint64_t sub_1001CAB84()
{
  swift_release();
  static IntentResult.result<>()();
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 96);
  return _swift_task_switch(sub_1001CBE5C, v1, v2);
}

uint64_t sub_1001CABF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a1;
  unsigned char v3[8] = a3;
  v3[9] = type metadata accessor for MainActor();
  v3[10] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[11] = v5;
  v3[12] = v4;
  return _swift_task_switch(sub_1001CAC8C, v5, v4);
}

uint64_t sub_1001CAC8C()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong
    || (uint64_t v2 = Strong,
        id v3 = objc_msgSend(Strong, "ic_viewControllerManager"),
        v0[13] = v3,
        v2,
        !v3))
  {
    swift_release();
    type metadata accessor for ICError(0);
    v0[6] = 222;
    sub_1001B50CC((uint64_t)_swiftEmptyArrayStorage);
    sub_1001CBD44();
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_willThrow();
LABEL_8:
    uint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
  id v4 = [v3 noteEditorViewController];
  unsigned __int8 v5 = [v4 ic_isViewVisible];

  if ((v5 & 1) != 0
    && (id v6 = [v3 noteEditorViewController],
        id v7 = [v6 note],
        v6,
        v7))
  {
    if ([v7 isPasswordProtectedAndLocked])
    {
      swift_release();
      sub_100173F8C();
      swift_allocError();
      char v9 = 11;
LABEL_18:
      char *v8 = v9;
      swift_willThrow();

      goto LABEL_8;
    }
    if (![v7 canAddAttachment])
    {
      swift_release();
      sub_100173F8C();
      swift_allocError();
      char v9 = 21;
      goto LABEL_18;
    }
    id v16 = [v3 noteEditorViewController];
    [v16 showInsertUIWithPreferredSourceType:1];
  }
  else
  {
    id v12 = [v3 showNewNoteWithApproach:11 sender:0 animated:1];
    swift_unknownObjectRelease();
  }
  id v13 = (uint64_t *)v0[7];
  v13[3] = sub_10002F214((uint64_t *)&unk_10069C980);
  v13[4] = sub_1001B5B54();
  v0[14] = sub_10015E0F0(v13);
  v0[15] = static MainActor.shared.getter();
  uint64_t v15 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1001CAB84, v15, v14);
}

uint64_t sub_1001CAF9C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001CAFD4(uint64_t a1, _OWORD *a2)
{
  id v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *id v6 = v3;
  v6[1] = sub_10017B61C;
  return sub_1001C53D8(a1, a2, v2);
}

uint64_t sub_1001CB080(uint64_t a1, _OWORD *a2)
{
  id v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *id v6 = v3;
  v6[1] = sub_10017B61C;
  return sub_1001C5A98(a1, a2, v2);
}

uint64_t sub_1001CB12C(uint64_t a1, _OWORD *a2)
{
  id v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *id v6 = v3;
  v6[1] = sub_100161724;
  return sub_1001C6110(a1, a2, v2);
}

uint64_t sub_1001CB1D8(uint64_t a1, uint64_t a2)
{
  id v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *id v6 = v3;
  v6[1] = sub_10017B61C;
  return sub_1001C6560(a1, a2, v2);
}

uint64_t sub_1001CB284(uint64_t a1, _OWORD *a2)
{
  id v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *id v6 = v3;
  v6[1] = sub_10017B61C;
  return sub_1001C68A4(a1, a2, v2);
}

uint64_t sub_1001CB330(uint64_t a1, void *a2)
{
  id v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *id v6 = v3;
  v6[1] = sub_10017B61C;
  return sub_1001C6D8C(a1, a2, v2);
}

uint64_t sub_1001CB3DC(uint64_t a1, void *a2)
{
  id v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *id v6 = v3;
  v6[1] = sub_10017B61C;
  return sub_1001C70F0(a1, a2, v2);
}

uint64_t sub_1001CB488(uint64_t a1, uint64_t a2)
{
  id v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *id v6 = v3;
  v6[1] = sub_10017B61C;
  return sub_1001C77A0(a1, a2, v2);
}

uint64_t sub_1001CB534(uint64_t a1, uint64_t a2)
{
  id v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *id v6 = v3;
  v6[1] = sub_10017B61C;
  return sub_1001C7B14(a1, a2, v2);
}

uint64_t sub_1001CB5E0(uint64_t a1, uint64_t a2)
{
  id v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *id v6 = v3;
  v6[1] = sub_10017B61C;
  return sub_1001C8484(a1, a2, v2);
}

uint64_t sub_1001CB68C(uint64_t a1, uint64_t a2)
{
  id v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *id v6 = v3;
  v6[1] = sub_10017B61C;
  return sub_1001C8724(a1, a2, v2);
}

uint64_t sub_1001CB738(uint64_t a1, uint64_t a2)
{
  id v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *id v6 = v3;
  v6[1] = sub_10017B61C;
  return sub_1001C8B08(a1, a2, v2);
}

uint64_t sub_1001CB7E4(uint64_t a1, uint64_t a2)
{
  id v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *id v6 = v3;
  v6[1] = sub_10017B61C;
  return sub_1001C8E1C(a1, a2, v2);
}

uint64_t sub_1001CB890(uint64_t a1, _OWORD *a2)
{
  id v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *id v6 = v3;
  v6[1] = sub_10017B61C;
  return sub_1001C9124(a1, a2, v2);
}

uint64_t sub_1001CB93C(uint64_t a1, uint64_t a2)
{
  id v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *id v6 = v3;
  v6[1] = sub_10017B61C;
  return sub_1001C9494(a1, a2, v2);
}

uint64_t sub_1001CB9E8(uint64_t a1, uint64_t a2)
{
  id v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *id v6 = v3;
  v6[1] = sub_10017B61C;
  return sub_1001C9808(a1, a2, v2);
}

uint64_t sub_1001CBA94(uint64_t a1, uint64_t a2)
{
  id v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *id v6 = v3;
  v6[1] = sub_10017B61C;
  return sub_1001C9C9C(a1, a2, v2);
}

uint64_t sub_1001CBB40(uint64_t a1, uint64_t *a2)
{
  id v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *id v6 = v3;
  v6[1] = sub_10017B61C;
  return sub_1001CA124(a1, a2, v2);
}

uint64_t sub_1001CBBEC(uint64_t a1, uint64_t a2)
{
  id v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *id v6 = v3;
  v6[1] = sub_10017B61C;
  return sub_1001CA76C(a1, a2, v2);
}

uint64_t sub_1001CBC98(uint64_t a1, uint64_t a2)
{
  id v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *id v6 = v3;
  v6[1] = sub_10017B61C;
  return sub_1001CABF0(a1, a2, v2);
}

unint64_t sub_1001CBD44()
{
  unint64_t result = qword_10069E4D0;
  if (!qword_10069E4D0)
  {
    type metadata accessor for ICError(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069E4D0);
  }
  return result;
}

uint64_t sub_1001CBD9C(uint64_t result)
{
  if ((*(_DWORD *)(*(void *)(*(void *)(result + 24) - 8) + 80) & 0x20000) != 0) {
    return swift_slowDealloc();
  }
  return result;
}

unint64_t sub_1001CBDF0()
{
  unint64_t result = qword_10069E4F0;
  if (!qword_10069E4F0)
  {
    sub_100031418(255, &qword_10069D940);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069E4F0);
  }
  return result;
}

uint64_t *sub_1001CBE68(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for EditNoteActivity();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    char v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_10002F214(&qword_10069E510);
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      uint64_t v13 = sub_10002F214(&qword_10069E518);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v15 = a3[6];
    uint64_t v16 = a3[7];
    uint64_t v17 = *(void **)((char *)a2 + v15);
    *(uint64_t *)((char *)a1 + v15) = (uint64_t)v17;
    *(uint64_t *)((char *)a1 + v16) = *(uint64_t *)((char *)a2 + v16);
    uint64_t v18 = a3[8];
    id v19 = (uint64_t *)((char *)a1 + v18);
    id v20 = (uint64_t *)((char *)a2 + v18);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    uint64_t v23 = v20[2];
    uint64_t v24 = v20[3];
    unint64_t v25 = v20[4];
    id v26 = v17;
    sub_1001CC088(v21, v22, v23, v24, v25);
    uint64_t *v19 = v21;
    v19[1] = v22;
    void v19[2] = v23;
    v19[3] = v24;
    v19[4] = v25;
    uint64_t v27 = a3[9];
    uint64_t v28 = (uint64_t *)((char *)a1 + v27);
    id v29 = (uint64_t *)((char *)a2 + v27);
    uint64_t v30 = v29[1];
    *uint64_t v28 = *v29;
    v28[1] = v30;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1001CC088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  switch(a5 >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
      swift_unknownObjectRetain();
      goto LABEL_4;
    case 3uLL:
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
LABEL_4:
      uint64_t result = swift_retain();
      break;
    case 4uLL:
      swift_unknownObjectRetain();
      uint64_t result = swift_errorRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1001CC148(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for EditNoteActivity();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_10002F214(&qword_10069E510);
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }

  uint64_t v8 = a1 + a2[8];
  sub_1001CC274(*(void *)v8, *(void *)(v8 + 8), *(void *)(v8 + 16), *(void *)(v8 + 24), *(void *)(v8 + 32));

  return swift_bridgeObjectRelease();
}

uint64_t sub_1001CC274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  switch(a5 >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
      swift_unknownObjectRelease();
      goto LABEL_4;
    case 3uLL:
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
LABEL_4:
      uint64_t result = swift_release();
      break;
    case 4uLL:
      swift_unknownObjectRelease();
      uint64_t result = swift_errorRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1001CC334(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for EditNoteActivity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  char v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_10002F214(&qword_10069E510);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_10002F214(&qword_10069E518);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = a3[7];
  uint64_t v15 = *(void **)(a2 + v13);
  *(void *)(a1 + v13) = v15;
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  uint64_t v16 = a3[8];
  uint64_t v17 = (uint64_t *)(a1 + v16);
  uint64_t v18 = (uint64_t *)(a2 + v16);
  uint64_t v19 = *v18;
  uint64_t v20 = v18[1];
  uint64_t v21 = v18[2];
  uint64_t v22 = v18[3];
  unint64_t v23 = v18[4];
  id v24 = v15;
  sub_1001CC088(v19, v20, v21, v22, v23);
  *uint64_t v17 = v19;
  v17[1] = v20;
  v17[2] = v21;
  v17[3] = v22;
  void v17[4] = v23;
  uint64_t v25 = a3[9];
  id v26 = (void *)(a1 + v25);
  uint64_t v27 = (void *)(a2 + v25);
  uint64_t v28 = v27[1];
  *id v26 = *v27;
  v26[1] = v28;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1001CC504(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for EditNoteActivity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  char v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_10002F214(&qword_10069E510);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_10002F214(&qword_10069E518);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = a3[6];
  uint64_t v17 = *(void **)(a2 + v16);
  uint64_t v18 = *(void **)(a1 + v16);
  *(void *)(a1 + v16) = v17;
  id v19 = v17;

  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v20 = a3[8];
  uint64_t v21 = (uint64_t *)(a1 + v20);
  uint64_t v22 = (uint64_t *)(a2 + v20);
  uint64_t v23 = *v22;
  uint64_t v24 = v22[1];
  uint64_t v25 = v22[2];
  uint64_t v26 = v22[3];
  unint64_t v27 = v22[4];
  sub_1001CC088(*v22, v24, v25, v26, v27);
  uint64_t v28 = *v21;
  uint64_t v29 = v21[1];
  uint64_t v30 = v21[2];
  uint64_t v31 = v21[3];
  unint64_t v32 = v21[4];
  *uint64_t v21 = v23;
  v21[1] = v24;
  v21[2] = v25;
  v21[3] = v26;
  v21[4] = v27;
  sub_1001CC274(v28, v29, v30, v31, v32);
  uint64_t v33 = a3[9];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (void *)(a2 + v33);
  *uint64_t v34 = *v35;
  v34[1] = v35[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1001CC760(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for EditNoteActivity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  char v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_10002F214(&qword_10069E510);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_10002F214(&qword_10069E518);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  uint64_t v14 = a3[8];
  uint64_t v15 = a3[9];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = a2 + v14;
  long long v18 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v18;
  *(void *)(v16 + 32) = *(void *)(v17 + 32);
  *(_OWORD *)(a1 + v15) = *(_OWORD *)(a2 + v15);
  return a1;
}

uint64_t sub_1001CC8F4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for EditNoteActivity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  char v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_10002F214(&qword_10069E510);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_10002F214(&qword_10069E518);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = a3[6];
  uint64_t v17 = *(void **)(a1 + v16);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);

  uint64_t v18 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  id v19 = (uint64_t *)(a1 + v18);
  uint64_t v20 = a2 + v18;
  uint64_t v21 = *(void *)(v20 + 32);
  uint64_t v22 = *v19;
  uint64_t v23 = v19[1];
  uint64_t v24 = v19[2];
  uint64_t v25 = v19[3];
  unint64_t v26 = v19[4];
  long long v27 = *(_OWORD *)(v20 + 16);
  *(_OWORD *)id v19 = *(_OWORD *)v20;
  *((_OWORD *)v19 + 1) = v27;
  v19[4] = v21;
  sub_1001CC274(v22, v23, v24, v25, v26);
  uint64_t v28 = a3[9];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (uint64_t *)(a2 + v28);
  uint64_t v32 = *v30;
  uint64_t v31 = v30[1];
  void *v29 = v32;
  v29[1] = v31;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1001CCB18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001CCB2C);
}

uint64_t sub_1001CCB2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for EditNoteActivity();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    char v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_10002F214(&qword_10069E518);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    char v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_1001CCC44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001CCC58);
}

uint64_t sub_1001CCC58(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for EditNoteActivity();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_10002F214(&qword_10069E518);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for FastSyncStateMachine()
{
  uint64_t result = qword_10069E578;
  if (!qword_10069E578) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1001CCDB8()
{
  type metadata accessor for EditNoteActivity();
  if (v0 <= 0x3F)
  {
    sub_1001CCEB0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1001CCEB0()
{
  if (!qword_10069E588)
  {
    sub_10001DFF4(&qword_10069E510);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10069E588);
    }
  }
}

void *sub_1001CCF0C()
{
  return &protocol witness table for Int;
}

uint64_t sub_1001CCF18()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100032974(v0, qword_10069E4F8);
  sub_10003293C(v0, (uint64_t)qword_10069E4F8);
  return static Logger.realtimeCollaboration.getter();
}

uint64_t sub_1001CCF64()
{
  sub_10016EFCC(v0, (uint64_t)&v15);
  uint64_t result = 1701602409;
  switch(v16 >> 61)
  {
    case 1uLL:
      v16 &= 0x1FFFFFFFFFFFFFFFuLL;
      uint64_t v2 = 0x28746E6573657270;
      goto LABEL_5;
    case 2uLL:
      v16 &= 0x1FFFFFFFFFFFFFFFuLL;
      uint64_t v2 = 0x28676E697661656CLL;
      goto LABEL_5;
    case 3uLL:
      v16 &= 0x1FFFFFFFFFFFFFFFuLL;
      uint64_t v14 = 0;
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      _StringGuts.grow(_:)(63);
      v5._object = (void *)0x800000010054F4F0;
      v5._countAndFlagsBits = 0xD00000000000002ALL;
      String.append(_:)(v5);
      swift_getObjectType();
      v6._countAndFlagsBits = sub_1001CD290();
      String.append(_:)(v6);
      swift_bridgeObjectRelease();
      v7._countAndFlagsBits = 0x7473202020200A3BLL;
      v7._object = (void *)0xEF20676E69747261;
      String.append(_:)(v7);
      swift_getObjectType();
      v8._countAndFlagsBits = sub_1001CD290();
      String.append(_:)(v8);
      swift_bridgeObjectRelease();
      v9._countAndFlagsBits = 10506;
      v9._object = (void *)0xE200000000000000;
      String.append(_:)(v9);
      swift_unknownObjectRelease();
      goto LABEL_8;
    case 4uLL:
      v16 &= 0x1FFFFFFFFFFFFFFFuLL;
      uint64_t v14 = 0;
      swift_unknownObjectRetain();
      swift_errorRetain();
      _StringGuts.grow(_:)(27);
      v10._countAndFlagsBits = 0x46676E696E696F6ALL;
      v10._object = (void *)0xEE002864656C6961;
      String.append(_:)(v10);
      swift_getObjectType();
      v11._countAndFlagsBits = sub_1001CD290();
      String.append(_:)(v11);
      swift_bridgeObjectRelease();
      v12._countAndFlagsBits = 0x3D726F727265202CLL;
      v12._object = (void *)0xE800000000000000;
      String.append(_:)(v12);
      sub_10002F214(&qword_1006A3D90);
      _print_unlocked<A, B>(_:_:)();
      v13._countAndFlagsBits = 41;
      v13._object = (void *)0xE100000000000000;
      String.append(_:)(v13);
      swift_errorRelease();
      goto LABEL_8;
    case 5uLL:
      return result;
    default:
      v16 &= 0x1FFFFFFFFFFFFFFFuLL;
      uint64_t v2 = 0x676E697472617473;
LABEL_5:
      uint64_t v14 = v2;
      swift_getObjectType();
      swift_unknownObjectRetain();
      v3._countAndFlagsBits = sub_1001CD290();
      String.append(_:)(v3);
      swift_bridgeObjectRelease();
      v4._countAndFlagsBits = 41;
      v4._object = (void *)0xE100000000000000;
      String.append(_:)(v4);
LABEL_8:
      swift_unknownObjectRelease();
      return v14;
  }
}

uint64_t sub_1001CD290()
{
  uint64_t v1 = type metadata accessor for EditNoteActivity();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  Swift::String v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = 0;
  unint64_t v15 = 0xE000000000000000;
  v5._countAndFlagsBits = 0x3D65746F6ELL;
  v5._object = (void *)0xE500000000000000;
  String.append(_:)(v5);
  dispatch thunk of GroupSessionProvider.activity.getter();
  uint64_t v6 = EditNoteActivity.noteID.getter();
  Swift::String v8 = v7;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v9._countAndFlagsBits = v6;
  v9._object = v8;
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  v10._countAndFlagsBits = 0x3D6469202CLL;
  v10._object = (void *)0xE500000000000000;
  String.append(_:)(v10);
  uint64_t v13 = v0;
  _print_unlocked<A, B>(_:_:)();
  return v14;
}

uint64_t sub_1001CD404()
{
  sub_10016EFCC(v0, (uint64_t)v2);
  return sub_1001CCF64();
}

void sub_1001CD43C(void *a1)
{
  uint64_t v3 = type metadata accessor for FastSyncStateMachine();
  uint64_t v4 = EditNoteActivity.noteID.getter();
  unint64_t v6 = v5;
  sub_10016EFCC((long long *)(v1 + *(int *)(v3 + 32)), (uint64_t)v18);
  if (qword_10069ACF0 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_10003293C(v7, (uint64_t)qword_10069E4F8);
  sub_1001D29B8(a1, (void (*)(void, void, void, void, void))sub_1001CC088);
  sub_1001D29B8(v18, (void (*)(void, void, void, void, void))sub_1001CC088);
  sub_1001D29B8(a1, (void (*)(void, void, void, void, void))sub_1001CC088);
  sub_1001D29B8(v18, (void (*)(void, void, void, void, void))sub_1001CC088);
  swift_bridgeObjectRetain();
  Swift::String v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 134218754;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v10 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_10045DA1C(v4, v6, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v10 + 22) = 2080;
    sub_1001D29B8(a1, (void (*)(void, void, void, void, void))sub_1001CC088);
    uint64_t v11 = sub_1001CCF64();
    unint64_t v13 = v12;
    sub_1001D29B8(a1, (void (*)(void, void, void, void, void))sub_1001CC274);
    sub_10045DA1C(v11, v13, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1001D29B8(a1, (void (*)(void, void, void, void, void))sub_1001CC274);
    sub_1001D29B8(a1, (void (*)(void, void, void, void, void))sub_1001CC274);
    *(_WORD *)(v10 + 32) = 2080;
    sub_1001D29B8(v18, (void (*)(void, void, void, void, void))sub_1001CC088);
    uint64_t v14 = sub_1001CCF64();
    unint64_t v16 = v15;
    sub_1001D29B8(v18, (void (*)(void, void, void, void, void))sub_1001CC274);
    sub_10045DA1C(v14, v16, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1001D29B8(v18, (void (*)(void, void, void, void, void))sub_1001CC274);
    sub_1001D29B8(v18, (void (*)(void, void, void, void, void))sub_1001CC274);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "FastSyncStateMachine[id=%ld, note=%s]: state transition from '%s' -> '%s'", (uint8_t *)v10, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_1001D29B8(a1, (void (*)(void, void, void, void, void))sub_1001CC274);
    sub_1001D29B8(a1, (void (*)(void, void, void, void, void))sub_1001CC274);
    sub_1001D29B8(v18, (void (*)(void, void, void, void, void))sub_1001CC274);
    sub_1001D29B8(v18, (void (*)(void, void, void, void, void))sub_1001CC274);
  }
}

uint64_t sub_1001CD7D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = (int *)type metadata accessor for FastSyncStateMachine();
  uint64_t v8 = a4 + v7[5];
  uint64_t v9 = sub_10002F214(&qword_10069E510);
  uint64_t v23 = v8;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v10 = a4 + v7[8];
  *(_OWORD *)uint64_t v10 = 0u;
  *(_OWORD *)(v10 + 16) = 0u;
  *(void *)(v10 + 32) = 0xA000000000000000;
  uint64_t v11 = (void *)(a4 + v7[9]);
  *uint64_t v11 = 0;
  v11[1] = 0;
  id v12 = [self sharedContext];
  EditNoteActivity.accountID.getter();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v14 = [v12 containerForAccountID:v13];

  if (v14)
  {
    uint64_t v15 = type metadata accessor for EditNoteActivity();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(a4, a2, v15);
    *(void *)(a4 + v7[6]) = v14;
    *(void *)(a4 + v7[7]) = a1;
    return sub_1001D3FBC(a3, v23);
  }
  else
  {
    uint64_t v17 = type metadata accessor for FastSyncError();
    sub_1001D3F74(&qword_1006A76A0, (void (*)(uint64_t))&type metadata accessor for FastSyncError);
    swift_allocError();
    id v19 = v18;
    *uint64_t v18 = EditNoteActivity.accountID.getter();
    v19[1] = v20;
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v17 - 8) + 104))(v19, enum case for FastSyncError.failedToCreateSession(_:), v17);
    swift_willThrow();
    sub_10002B754(a3, &qword_10069E518);
    uint64_t v21 = type metadata accessor for EditNoteActivity();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(a2, v21);
    sub_10002B754(v23, &qword_10069E518);
    sub_1001CC274(*(void *)v10, *(void *)(v10 + 8), *(void *)(v10 + 16), *(void *)(v10 + 24), *(void *)(v10 + 32));
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1001CDA88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v49 = a1;
  uint64_t v50 = a2;
  uint64_t v5 = sub_10002F214(&qword_1006A09A0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for FastSyncStateMachine();
  uint64_t v9 = v2 + v8[8];
  uint64_t v11 = *(void *)v9;
  uint64_t v10 = *(void *)(v9 + 8);
  uint64_t v12 = *(void *)(v9 + 24);
  unint64_t v13 = *(void *)(v9 + 32);
  id v14 = v8;
  char v15 = 0;
  switch(v13 >> 61)
  {
    case 2uLL:
      uint64_t v16 = v2 + v8[5];
      uint64_t v17 = *(void *)(v2 + v8[6]);
      uint64_t v18 = *(void *)(v9 + 16);
      swift_unknownObjectRetain();
      swift_retain();
      uint64_t v19 = sub_1001CE008(v2, v16, v17);
      if (v4) {
        goto LABEL_5;
      }
      uint64_t v21 = v19;
      uint64_t v22 = v20;
      uint64_t v23 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v7, 1, 1, v23);
      uint64_t v24 = (void *)swift_allocObject();
      v24[2] = 0;
      void v24[3] = 0;
      v24[4] = v18;
      v24[5] = v21;
      uint64_t v25 = v49;
      v24[6] = v22;
      v24[7] = v25;
      v24[8] = v50;
      swift_retain();
      swift_retain();
      swift_unknownObjectRetain();
      uint64_t v50 = sub_100466E08((uint64_t)v7, (uint64_t)&unk_10069E668, (uint64_t)v24) | 0x6000000000000000;
      sub_10016EFCC((long long *)v9, (uint64_t)v52);
      *(void *)uint64_t v9 = v11;
      *(void *)(v9 + 8) = v10;
      *(void *)(v9 + 16) = v21;
      *(void *)(v9 + 24) = v22;
      *(void *)(v9 + 32) = v50;
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      swift_retain();
      sub_1001CD43C(v52);
      sub_1001D29B8(v52, (void (*)(void, void, void, void, void))sub_1001CC274);
      swift_release();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      goto LABEL_10;
    case 3uLL:
      uint64_t v26 = v13 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v27 = v2 + v8[5];
      uint64_t v28 = *(void *)(v2 + v8[6]);
      uint64_t v29 = *(void *)(v9 + 16);
      swift_unknownObjectRetain();
      swift_retain();
      uint64_t v30 = sub_1001CE008(v2, v27, v28);
      if (v4)
      {
LABEL_5:
        swift_unknownObjectRelease();
        swift_release();
      }
      else
      {
        uint64_t v40 = v30;
        uint64_t v48 = v31;
        sub_10002F214(&qword_10069E5E0);
        sub_10002F214(&qword_1006A3D90);
        Task.cancel()();
        uint64_t v41 = type metadata accessor for TaskPriority();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v7, 1, 1, v41);
        char v42 = (void *)swift_allocObject();
        v42[2] = 0;
        v42[3] = 0;
        v42[4] = v26;
        v42[5] = v29;
        uint64_t v44 = v48;
        uint64_t v43 = v49;
        v42[6] = v12;
        v42[7] = v43;
        v42[8] = v50;
        v42[9] = v40;
        v42[10] = v44;
        swift_retain();
        swift_retain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        uint64_t v45 = sub_100466E08((uint64_t)v7, (uint64_t)&unk_10069E658, (uint64_t)v42);
        uint64_t v50 = v26;
        uint64_t v46 = v45 | 0x6000000000000000;
        sub_10016EFCC((long long *)v9, (uint64_t)v53);
        *(void *)uint64_t v9 = v29;
        *(void *)(v9 + 8) = v12;
        *(void *)(v9 + 16) = v40;
        *(void *)(v9 + 24) = v44;
        *(void *)(v9 + 32) = v46;
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        swift_retain();
        sub_1001CD43C(v53);
        sub_1001D29B8(v53, (void (*)(void, void, void, void, void))sub_1001CC274);
        swift_release();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
LABEL_10:
        swift_release();
LABEL_11:
        char v15 = 1;
      }
      return v15 & 1;
    case 4uLL:
      swift_unknownObjectRetain();
      swift_errorRetain();
      swift_unknownObjectRelease();
      swift_errorRelease();
      goto LABEL_7;
    case 5uLL:
LABEL_7:
      uint64_t v32 = sub_1001CE008(v2, v2 + v14[5], *(void *)(v2 + v14[6]));
      if (v3) {
        return v15 & 1;
      }
      uint64_t v34 = v32;
      uint64_t v35 = v33;
      uint64_t v36 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v7, 1, 1, v36);
      uint64_t v37 = (void *)swift_allocObject();
      v37[2] = 0;
      v37[3] = 0;
      v37[4] = v34;
      v37[5] = v35;
      uint64_t v38 = v50;
      v37[6] = v49;
      v37[7] = v38;
      swift_unknownObjectRetain();
      swift_retain();
      uint64_t v39 = sub_100466E08((uint64_t)v7, (uint64_t)&unk_10069E678, (uint64_t)v37);
      sub_10016EFCC((long long *)v9, (uint64_t)v51);
      *(void *)uint64_t v9 = v34;
      *(void *)(v9 + 8) = v35;
      *(void *)(v9 + 16) = v39;
      *(void *)(v9 + 24) = 0;
      *(void *)(v9 + 32) = 0;
      swift_unknownObjectRetain();
      swift_retain();
      sub_1001CD43C(v51);
      sub_1001D29B8(v51, (void (*)(void, void, void, void, void))sub_1001CC274);
      swift_release();
      swift_unknownObjectRelease();
      goto LABEL_11;
    default:
      return v15 & 1;
  }
}

uint64_t sub_1001CE008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v56 = a3;
  uint64_t v57 = a2;
  uint64_t v4 = type metadata accessor for EditNoteActivity();
  uint64_t v58 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (void (**)(char *, uint64_t))((char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v48 - v8;
  uint64_t v10 = sub_10002F214(&qword_10069E518);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10002F214(&qword_10069E510);
  id v14 = *(unsigned int (***)(char *, uint64_t, uint64_t))(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  EditNoteActivity.validate()();
  if (v17) {
    return a1;
  }
  uint64_t v52 = v9;
  uint64_t v53 = v7;
  uint64_t v54 = v16;
  uint64_t v55 = a1;
  sub_10002F034(v57, (uint64_t)v12, &qword_10069E518);
  if (v14[6](v12, 1, v13) == 1)
  {
    sub_10002B754((uint64_t)v12, &qword_10069E518);
    uint64_t v18 = v4;
LABEL_10:
    uint64_t v38 = v55;
    uint64_t v39 = v53;
    if (qword_10069ACF0 != -1) {
      swift_once();
    }
    uint64_t v57 = 0;
    uint64_t v40 = type metadata accessor for Logger();
    sub_10003293C(v40, (uint64_t)qword_10069E4F8);
    uint64_t v41 = v58;
    (*(void (**)(void (**)(char *, uint64_t), uint64_t, uint64_t))(v58 + 16))(v39, v38, v18);
    char v42 = Logger.logObject.getter();
    os_log_type_t v43 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v56 = v18;
      uint64_t v44 = (uint8_t *)swift_slowAlloc();
      uint64_t v61 = swift_slowAlloc();
      *(_DWORD *)uint64_t v44 = 136315138;
      uint64_t v45 = EditNoteActivity.noteID.getter();
      unint64_t v59 = sub_10045DA1C(v45, v46, &v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(void, uint64_t))(v41 + 8))(v39, v56);
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "Making personal group session provider for activity %s", v44, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(void, uint64_t))(v41 + 8))(v39, v18);
    }

    sub_10002F214(&qword_10069E680);
    a1 = static GroupSessionProvider<>.personalGroupSessionProvider(for:)();
    sub_10001DFB0(&qword_10069E688, &qword_10069E680);
    return a1;
  }
  uint64_t v19 = v54;
  v14[4](v54, (uint64_t)v12, v13);
  sub_100031418(0, &qword_10069E690);
  uint64_t v20 = static NSObject<>.record(from:)();
  uint64_t v18 = v4;
  if (!v20)
  {
    ((void (*)(char *, uint64_t))v14[1])(v19, v13);
    goto LABEL_10;
  }
  uint64_t v21 = (void *)v20;
  uint64_t v53 = (void (**)(char *, uint64_t))v14;
  uint64_t v57 = v13;
  if (qword_10069ACF0 != -1) {
    swift_once();
  }
  uint64_t v22 = type metadata accessor for Logger();
  sub_10003293C(v22, (uint64_t)qword_10069E4F8);
  uint64_t v23 = v58;
  uint64_t v24 = v52;
  (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v52, v55, v4);
  id v25 = v21;
  uint64_t v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.debug.getter();
  int v28 = v27;
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v29 = swift_slowAlloc();
    uint64_t v51 = swift_slowAlloc();
    uint64_t v61 = v51;
    *(_DWORD *)uint64_t v29 = 136315394;
    int v50 = v28;
    os_log_t v49 = v26;
    uint64_t v30 = EditNoteActivity.noteID.getter();
    unint64_t v59 = sub_10045DA1C(v30, v31, &v61);
    uint64_t v48 = &v60;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v24, v18);
    *(_WORD *)(v29 + 12) = 2080;
    uint64_t v32 = v25;
    id v33 = [v25 ic_loggingDescription];
    uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v36 = v35;

    unint64_t v59 = sub_10045DA1C(v34, v36, &v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    os_log_t v37 = v49;
    _os_log_impl((void *)&_mh_execute_header, v49, (os_log_type_t)v50, "Making shared group session provider for activity %s with share %s", (uint8_t *)v29, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v24, v18);

    uint64_t v32 = v25;
  }
  sub_10002F214(&qword_10069E698);
  a1 = static GroupSessionProvider<>.sharedGroupSessionProvider(for:share:container:)();
  v53[1](v54, v57);

  sub_10001DFB0((unint64_t *)&unk_10069E6A0, &qword_10069E698);
  return a1;
}

uint64_t sub_1001CE754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[5] = a7;
  v8[6] = a8;
  int64_t v8[3] = a5;
  void v8[4] = a6;
  v8[2] = a1;
  v8[7] = type metadata accessor for FastSync.PresenceAction(0);
  v8[8] = swift_task_alloc();
  uint64_t v9 = (void *)swift_task_alloc();
  v8[9] = v9;
  *uint64_t v9 = v8;
  v9[1] = sub_1001CE834;
  return Task<>.value.getter();
}

uint64_t sub_1001CE834()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1001CE930, 0, 0);
}

uint64_t sub_1001CE930()
{
  static Task<>.checkCancellation()();
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(int **)(v0 + 40);
  *(_OWORD *)uint64_t v1 = *(_OWORD *)(v0 + 24);
  *(unsigned char *)(v1 + 16) = 0;
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)v2 + *v2);
  swift_unknownObjectRetain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1001CEA88;
  uint64_t v4 = *(void *)(v0 + 64);
  return v6(v4);
}

uint64_t sub_1001CEA88()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1001CEB84, 0, 0);
}

uint64_t sub_1001CEB84()
{
  uint64_t v1 = *(_OWORD **)(v0 + 16);
  long long v4 = *(_OWORD *)(v0 + 24);
  sub_1001D3B18(*(void *)(v0 + 64), type metadata accessor for FastSync.PresenceAction);
  *uint64_t v1 = v4;
  swift_unknownObjectRetain();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1001CEC2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[11] = v17;
  v8[9] = a8;
  v8[10] = v16;
  v8[7] = a6;
  v8[8] = a7;
  v8[5] = a1;
  v8[6] = a5;
  uint64_t v10 = type metadata accessor for EditNoteActivity();
  v8[12] = v10;
  v8[13] = *(void *)(v10 - 8);
  v8[14] = swift_task_alloc();
  v8[15] = type metadata accessor for FastSync.PresenceAction(0);
  v8[16] = swift_task_alloc();
  v8[17] = swift_task_alloc();
  uint64_t v11 = (void *)swift_task_alloc();
  v8[18] = v11;
  uint64_t v12 = sub_10002F214(&qword_10069E5E0);
  uint64_t v13 = sub_10002F214(&qword_1006A3D90);
  *uint64_t v11 = v8;
  v11[1] = sub_1001CEDBC;
  return ((uint64_t (*)(void *, uint64_t, uint64_t, uint64_t, void *))Task.result.getter)(v8 + 2, a4, v12, v13, &protocol self-conformance witness table for Error);
}

uint64_t sub_1001CEDBC()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1001CEEB8, 0, 0);
}

uint64_t sub_1001CEEB8()
{
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 104);
  uint64_t v13 = *(int **)(v0 + 64);
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = *(void *)(v0 + 24);
  *(void *)(v0 + 152) = v5;
  *(void *)(v0 + 160) = v6;
  char v7 = *(unsigned char *)(v0 + 32);
  *(unsigned char *)(v0 + 33) = v7;
  swift_getObjectType();
  dispatch thunk of GroupSessionProvider.activity.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, v3);
  uint64_t v8 = type metadata accessor for FastSync.LeaveActivityAction(0);
  *(unsigned char *)(v1 + *(int *)(v8 + 24)) = 0;
  uint64_t v9 = v1 + *(int *)(v8 + 20);
  *(void *)uint64_t v9 = v5;
  *(void *)(v9 + 8) = v6;
  *(unsigned char *)(v9 + 16) = v7;
  swift_storeEnumTagMultiPayload();
  sub_1001D3564(v5, v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  id v14 = (uint64_t (*)(uint64_t))((char *)v13 + *v13);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 168) = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_1001CF060;
  uint64_t v11 = *(void *)(v0 + 136);
  return v14(v11);
}

uint64_t sub_1001CF060()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1001CF15C, 0, 0);
}

uint64_t sub_1001CF15C()
{
  static Task<>.checkCancellation()();
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(int **)(v0 + 64);
  *(_OWORD *)uint64_t v1 = *(_OWORD *)(v0 + 80);
  *(unsigned char *)(v1 + 16) = 0;
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)v2 + *v2);
  swift_unknownObjectRetain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1001CF318;
  uint64_t v4 = *(void *)(v0 + 128);
  return v6(v4);
}

uint64_t sub_1001CF318()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1001CF414, 0, 0);
}

uint64_t sub_1001CF414()
{
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v3 = *(_OWORD **)(v0 + 40);
  long long v6 = *(_OWORD *)(v0 + 80);
  sub_1001D3570(*(void *)(v0 + 152), *(void *)(v0 + 160), *(unsigned char *)(v0 + 33));
  sub_1001D3B18(v1, type metadata accessor for FastSync.PresenceAction);
  sub_1001D3B18(v2, type metadata accessor for FastSync.PresenceAction);
  *uint64_t v3 = v6;
  swift_unknownObjectRetain();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1001CF4F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[5] = a6;
  v7[6] = a7;
  v7[3] = a4;
  void v7[4] = a5;
  v7[2] = a1;
  v7[7] = type metadata accessor for FastSync.PresenceAction(0);
  v7[8] = swift_task_alloc();
  return _swift_task_switch(sub_1001CF590, 0, 0);
}

uint64_t sub_1001CF590()
{
  static Task<>.checkCancellation()();
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(int **)(v0 + 40);
  *(_OWORD *)uint64_t v1 = *(_OWORD *)(v0 + 24);
  *(unsigned char *)(v1 + 16) = 0;
  swift_storeEnumTagMultiPayload();
  long long v6 = (uint64_t (*)(uint64_t))((char *)v2 + *v2);
  swift_unknownObjectRetain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1001CF6E8;
  uint64_t v4 = *(void *)(v0 + 64);
  return v6(v4);
}

uint64_t sub_1001CF6E8()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1001D430C, 0, 0);
}

void sub_1001CF7E4(uint8_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v27 = a3;
  uint64_t v6 = type metadata accessor for EditNoteActivity();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = v3 + *(int *)(type metadata accessor for FastSyncStateMachine() + 32);
  sub_10016EFCC((long long *)v10, (uint64_t)v30);
  sub_10016EFCC(v30, (uint64_t)v31);
  switch(v32 >> 61)
  {
    case 1uLL:
    case 2uLL:
      v32 &= 0x1FFFFFFFFFFFFFFFuLL;
      swift_unknownObjectRetain();
      swift_retain();
      swift_release();
      swift_unknownObjectRelease();
      goto LABEL_8;
    case 3uLL:
      id v25 = a1;
      uint64_t v26 = v7;
      uint64_t v11 = a2;
      uint64_t v12 = v6;
      v32 &= 0x1FFFFFFFFFFFFFFFuLL;
      uint64_t v13 = v31[2];
      v23[1] = v31[0];
      uint64_t v24 = v31[3];
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      swift_retain();
      swift_unknownObjectRelease();
      goto LABEL_5;
    case 4uLL:
      v32 &= 0x1FFFFFFFFFFFFFFFuLL;
      swift_unknownObjectRetain();
      swift_errorRetain();
      swift_unknownObjectRelease();
      swift_errorRelease();
      goto LABEL_8;
    case 5uLL:
      goto LABEL_8;
    default:
      id v25 = a1;
      uint64_t v26 = v7;
      uint64_t v11 = a2;
      uint64_t v12 = v6;
      v32 &= 0x1FFFFFFFFFFFFFFFuLL;
      uint64_t v13 = v31[0];
      uint64_t v24 = v31[1];
      swift_unknownObjectRetain();
      swift_retain();
LABEL_5:
      swift_release();
      if (v13 == v11)
      {
        uint64_t v22 = v24;
        uint64_t v21 = v25;
        *(void *)uint64_t v10 = v11;
        *(void *)(v10 + 8) = v22;
        *(void *)(v10 + 16) = v21;
        *(_OWORD *)(v10 + 24) = xmmword_10052A870;
        swift_errorRetain();
        swift_unknownObjectRetain();
        sub_1001CD43C(v30);
        swift_unknownObjectRelease();
        sub_1001D29B8(v30, (void (*)(void, void, void, void, void))sub_1001CC274);
      }
      else
      {
        swift_unknownObjectRelease();
        uint64_t v6 = v12;
        uint64_t v7 = v26;
LABEL_8:
        if (qword_10069ACF0 != -1) {
          swift_once();
        }
        uint64_t v14 = type metadata accessor for Logger();
        sub_10003293C(v14, (uint64_t)qword_10069E4F8);
        swift_unknownObjectRetain_n();
        uint64_t v15 = Logger.logObject.getter();
        os_log_type_t v16 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v15, v16))
        {
          uint64_t v17 = (uint8_t *)swift_slowAlloc();
          uint64_t v26 = swift_slowAlloc();
          uint64_t v29 = v26;
          *(_DWORD *)uint64_t v17 = 136315138;
          id v25 = v17 + 4;
          swift_getObjectType();
          dispatch thunk of GroupSessionProvider.activity.getter();
          sub_1001D3F74(&qword_10069E5C8, (void (*)(uint64_t))&type metadata accessor for EditNoteActivity);
          uint64_t v18 = dispatch thunk of CustomStringConvertible.description.getter();
          unint64_t v20 = v19;
          (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
          unint64_t v28 = sub_10045DA1C(v18, v20, &v29);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v15, v16, "Ignoring startActivity(_:didFailWith:) for a group session provider we've stopped tracking (%s)", v17, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_unknownObjectRelease_n();
        }
      }
      return;
  }
}

void sub_1001CFC68(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for EditNoteActivity();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v2 + *(int *)(type metadata accessor for FastSyncStateMachine() + 32);
  sub_10016EFCC((long long *)v9, (uint64_t)v24);
  sub_10016EFCC(v24, (uint64_t)&v25);
  switch(v28 >> 61)
  {
    case 1uLL:
    case 2uLL:
      v28 &= 0x1FFFFFFFFFFFFFFFuLL;
      goto LABEL_4;
    case 3uLL:
      v28 &= 0x1FFFFFFFFFFFFFFFuLL;
      uint64_t v10 = &v27;
      if (v26[1] == a2) {
        goto LABEL_10;
      }
      goto LABEL_4;
    case 5uLL:
      goto LABEL_4;
    default:
      v28 &= 0x1FFFFFFFFFFFFFFFuLL;
      uint64_t v10 = v26;
      if (v25 == a2)
      {
LABEL_10:
        uint64_t v19 = *v10;
        *(void *)uint64_t v9 = a2;
        *(void *)(v9 + 8) = v19;
        *(void *)(v9 + 16) = a1;
        *(_OWORD *)(v9 + 24) = xmmword_10052A880;
        swift_unknownObjectRetain_n();
        swift_retain();
        sub_1001CD43C(v24);
        sub_1001D29B8(v24, (void (*)(void, void, void, void, void))sub_1001CC274);
        swift_unknownObjectRelease();
      }
      else
      {
LABEL_4:
        if (qword_10069ACF0 != -1) {
          swift_once();
        }
        uint64_t v11 = type metadata accessor for Logger();
        sub_10003293C(v11, (uint64_t)qword_10069E4F8);
        swift_unknownObjectRetain_n();
        uint64_t v12 = Logger.logObject.getter();
        os_log_type_t v13 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v12, v13))
        {
          uint64_t v14 = (uint8_t *)swift_slowAlloc();
          uint64_t v21 = swift_slowAlloc();
          uint64_t v23 = v21;
          *(_DWORD *)uint64_t v14 = 136315138;
          unint64_t v20 = v14 + 4;
          swift_getObjectType();
          dispatch thunk of GroupSessionProvider.activity.getter();
          sub_1001D3F74(&qword_10069E5C8, (void (*)(uint64_t))&type metadata accessor for EditNoteActivity);
          uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v16 = v6;
          unint64_t v18 = v17;
          (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v5);
          unint64_t v22 = sub_10045DA1C(v15, v18, &v23);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v12, v13, "Ignoring didStartActivity() for a group session provider we've stopped tracking (%s)", v14, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_unknownObjectRelease_n();
        }
      }
      return;
  }
}

uint64_t sub_1001D0024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_10002F214(&qword_1006A09A0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = v3 + *(int *)(type metadata accessor for FastSyncStateMachine() + 32);
  sub_10016EFCC((long long *)v10, (uint64_t)v27);
  sub_10016EFCC(v27, (uint64_t)&v29);
  switch(v33 >> 61)
  {
    case 1uLL:
      v33 &= 0x1FFFFFFFFFFFFFFFuLL;
      uint64_t v13 = v29;
      uint64_t v25 = v30;
      uint64_t v26 = a2;
      uint64_t v14 = v31;
      swift_unknownObjectRetain();
      swift_retain();
      Task.cancel()();
      sub_10002F034(a1, (uint64_t)v9, &qword_1006A09A0);
      uint64_t v15 = (void *)swift_allocObject();
      v15[2] = 0;
      void v15[3] = 0;
      v15[4] = v14;
      v15[5] = v13;
      uint64_t v17 = v25;
      uint64_t v16 = v26;
      void v15[6] = v25;
      v15[7] = v16;
      v15[8] = a3;
      swift_retain();
      swift_retain();
      swift_unknownObjectRetain();
      uint64_t v18 = sub_10030B6A4((uint64_t)v9, (uint64_t)&unk_10069E5D8, (uint64_t)v15);
      sub_10016EFCC((long long *)v10, (uint64_t)v28);
      *(void *)uint64_t v10 = v13;
      *(void *)(v10 + 8) = v17;
      *(void *)(v10 + 16) = v18;
      *(_OWORD *)(v10 + 24) = xmmword_10052A890;
      swift_unknownObjectRetain();
      swift_retain();
      sub_1001CD43C(v28);
      sub_1001D29B8(v28, (void (*)(void, void, void, void, void))sub_1001CC274);
      swift_unknownObjectRelease();
      swift_release();
      goto LABEL_7;
    case 2uLL:
      v33 &= 0x1FFFFFFFFFFFFFFFuLL;
      swift_unknownObjectRetain();
      swift_retain();
      swift_release();
      return swift_unknownObjectRelease();
    case 3uLL:
      uint64_t v26 = a2;
      uint64_t v12 = v33 & 0x1FFFFFFFFFFFFFFFLL;
      v33 &= 0x1FFFFFFFFFFFFFFFuLL;
      uint64_t v11 = v31;
      uint64_t v24 = v29;
      uint64_t v25 = v32;
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      swift_retain();
      swift_unknownObjectRelease();
      goto LABEL_6;
    case 4uLL:
      v33 &= 0x1FFFFFFFFFFFFFFFuLL;
      swift_unknownObjectRetain();
      swift_errorRetain();
      swift_unknownObjectRelease();
      swift_errorRelease();
      goto LABEL_9;
    case 5uLL:
LABEL_9:
      *(_OWORD *)uint64_t v10 = 0u;
      *(_OWORD *)(v10 + 16) = 0u;
      *(void *)(v10 + 32) = 0xA000000000000000;
      sub_1001CD43C(v27);
      uint64_t result = (uint64_t)sub_1001D29B8(v27, (void (*)(void, void, void, void, void))sub_1001CC274);
      break;
    default:
      uint64_t v26 = a2;
      v33 &= 0x1FFFFFFFFFFFFFFFuLL;
      uint64_t v11 = v29;
      uint64_t v25 = v30;
      uint64_t v12 = v31;
      swift_unknownObjectRetain();
      swift_retain();
LABEL_6:
      sub_10002F214(&qword_10069E5E0);
      sub_10002F214(&qword_1006A3D90);
      Task.cancel()();
      sub_10002F034(a1, (uint64_t)v9, &qword_1006A09A0);
      unint64_t v20 = (void *)swift_allocObject();
      v20[2] = 0;
      v20[3] = 0;
      v20[4] = v12;
      v20[5] = v11;
      uint64_t v22 = v25;
      uint64_t v21 = v26;
      v20[6] = v25;
      v20[7] = v21;
      v20[8] = a3;
      swift_unknownObjectRetain();
      swift_retain();
      uint64_t v23 = sub_10030B6A4((uint64_t)v9, (uint64_t)&unk_10069E5F0, (uint64_t)v20);
      sub_10016EFCC((long long *)v10, (uint64_t)v28);
      *(void *)uint64_t v10 = v11;
      *(void *)(v10 + 8) = v22;
      *(void *)(v10 + 16) = v23;
      *(_OWORD *)(v10 + 24) = xmmword_10052A890;
      swift_unknownObjectRetain();
      swift_retain();
      sub_1001CD43C(v28);
      swift_unknownObjectRelease();
      sub_1001D29B8(v28, (void (*)(void, void, void, void, void))sub_1001CC274);
LABEL_7:
      uint64_t result = swift_release();
      break;
  }
  return result;
}

uint64_t sub_1001D046C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  v8[5] = a4;
  uint64_t v9 = type metadata accessor for EditNoteActivity();
  v8[10] = v9;
  v8[11] = *(void *)(v9 - 8);
  v8[12] = swift_task_alloc();
  v8[13] = type metadata accessor for FastSync.LeaveActivityAction(0);
  v8[14] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for Logger();
  v8[15] = v10;
  v8[16] = *(void *)(v10 - 8);
  v8[17] = swift_task_alloc();
  return _swift_task_switch(sub_1001D05C0, 0, 0);
}

uint64_t sub_1001D05C0()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = swift_task_alloc();
  v0[18] = v2;
  *(void *)(v2 + 16) = v1;
  *(_OWORD *)(v2 + 24) = xmmword_10052A8A0;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[19] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1001D06C0;
  return withTaskGroup<A, B>(of:returning:isolation:body:)(v0 + 21, &type metadata for Bool, &type metadata for Bool, 0, 0, &unk_10069E600, v2, &type metadata for Bool);
}

uint64_t sub_1001D06C0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_1001D07D8, 0, 0);
}

uint64_t sub_1001D07D8()
{
  uint64_t v37 = v0;
  char v1 = *(unsigned char *)(v0 + 168);
  *(unsigned char *)(swift_task_alloc() + 16) = v1;
  swift_unknownObjectRetain_n();
  static Logger.realtimeCollaboration.getter();
  uint64_t v2 = swift_allocObject();
  *(unsigned char *)(v2 + 16) = 2;
  char v3 = sub_100337C04(v2, sub_1001D3640);
  uint64_t v4 = *(void *)(v0 + 136);
  if (v3)
  {
    uint64_t v5 = *(void *)(v0 + 120);
    uint64_t v6 = *(void *)(v0 + 128);
    swift_unknownObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    os_log_type_t v7 = static os_log_type_t.fault.getter();
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = v7;
    BOOL v10 = os_log_type_enabled(v8, v7);
    uint64_t v12 = *(void *)(v0 + 128);
    uint64_t v11 = *(void *)(v0 + 136);
    uint64_t v13 = *(void *)(v0 + 120);
    if (v10)
    {
      uint64_t v32 = *(void *)(v0 + 120);
      uint64_t v30 = *(void *)(v0 + 80);
      uint64_t v31 = *(void *)(v0 + 88);
      uint64_t v29 = *(void *)(v0 + 96);
      uint64_t v14 = swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136315650;
      uint64_t v15 = StaticString.description.getter();
      *(void *)(v0 + 16) = sub_10045DA1C(v15, v16, &v34);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2048;
      *(void *)(v0 + 24) = 231;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v14 + 22) = 2080;
      uint64_t v35 = 0;
      unint64_t v36 = 0xE000000000000000;
      _StringGuts.grow(_:)(80);
      v17._object = (void *)0x800000010054F5A0;
      v17._countAndFlagsBits = 0xD00000000000004DLL;
      String.append(_:)(v17);
      swift_getObjectType();
      dispatch thunk of GroupSessionProvider.activity.getter();
      sub_1001D3F74(&qword_10069E5C8, (void (*)(uint64_t))&type metadata accessor for EditNoteActivity);
      v18._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v18);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v30);
      v19._countAndFlagsBits = 41;
      v19._object = (void *)0xE100000000000000;
      String.append(_:)(v19);
      *(void *)(v0 + 32) = sub_10045DA1C(v35, v36, &v34);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Failed assertion at %s:%lu: %s", (uint8_t *)v14, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_unknownObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v32);
    }
    else
    {

      swift_unknownObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    }
  }
  swift_release();
  uint64_t v21 = *(void *)(v0 + 104);
  uint64_t v20 = *(void *)(v0 + 112);
  uint64_t v23 = *(void *)(v0 + 56);
  uint64_t v22 = *(int **)(v0 + 64);
  uint64_t v24 = *(void *)(v0 + 48);
  swift_task_dealloc();
  swift_getObjectType();
  dispatch thunk of GroupSessionProvider.activity.getter();
  *(unsigned char *)(v20 + *(int *)(v21 + 24)) = 0;
  uint64_t v25 = v20 + *(int *)(v21 + 20);
  *(void *)uint64_t v25 = v24;
  *(void *)(v25 + 8) = v23;
  *(unsigned char *)(v25 + 16) = 0;
  unint64_t v33 = (uint64_t (*)(uint64_t))((char *)v22 + *v22);
  swift_unknownObjectRetain();
  uint64_t v26 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v26;
  *uint64_t v26 = v0;
  v26[1] = sub_1001D0C68;
  uint64_t v27 = *(void *)(v0 + 112);
  return v33(v27);
}

uint64_t sub_1001D0C68()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1001D0D64, 0, 0);
}

uint64_t sub_1001D0D64()
{
  sub_1001D3B18(*(void *)(v0 + 112), type metadata accessor for FastSync.LeaveActivityAction);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001D0E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[7] = a7;
  v8[8] = a8;
  v8[5] = a5;
  v8[6] = a6;
  v8[9] = type metadata accessor for FastSync.LeaveActivityAction(0);
  v8[10] = swift_task_alloc();
  BOOL v10 = (void *)swift_task_alloc();
  v8[11] = v10;
  uint64_t v11 = sub_10002F214(&qword_10069E5E0);
  uint64_t v12 = sub_10002F214(&qword_1006A3D90);
  *BOOL v10 = v8;
  v10[1] = sub_1001D0F14;
  return ((uint64_t (*)(void *, uint64_t, uint64_t, uint64_t, void *))Task.result.getter)(v8 + 2, a4, v11, v12, &protocol self-conformance witness table for Error);
}

uint64_t sub_1001D0F14()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1001D1010, 0, 0);
}

uint64_t sub_1001D1010()
{
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v3 = *(int **)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = *(void *)(v0 + 24);
  *(void *)(v0 + 96) = v4;
  *(void *)(v0 + 104) = v5;
  char v6 = *(unsigned char *)(v0 + 32);
  *(unsigned char *)(v0 + 33) = v6;
  swift_getObjectType();
  dispatch thunk of GroupSessionProvider.activity.getter();
  *(unsigned char *)(v1 + *(int *)(v2 + 24)) = 0;
  uint64_t v7 = v1 + *(int *)(v2 + 20);
  *(void *)uint64_t v7 = v4;
  *(void *)(v7 + 8) = v5;
  *(unsigned char *)(v7 + 16) = v6;
  sub_1001D3564(v4, v5, v6);
  uint64_t v11 = (uint64_t (*)(uint64_t))((char *)v3 + *v3);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v8;
  void *v8 = v0;
  v8[1] = sub_1001D1158;
  uint64_t v9 = *(void *)(v0 + 80);
  return v11(v9);
}

uint64_t sub_1001D1158()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1001D1254, 0, 0);
}

uint64_t sub_1001D1254()
{
  uint64_t v1 = *(void *)(v0 + 80);
  sub_1001D3570(*(void *)(v0 + 96), *(void *)(v0 + 104), *(unsigned char *)(v0 + 33));
  sub_1001D3B18(v1, type metadata accessor for FastSync.LeaveActivityAction);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_1001D12E0()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for FastSyncStateMachine() + 32);
  sub_10016EFCC((long long *)v1, (uint64_t)v23);
  sub_10016EFCC(v23, (uint64_t)&v24);
  switch(v25 >> 61)
  {
    case 2uLL:
    case 3uLL:
      v25 &= 0x1FFFFFFFFFFFFFFFuLL;
      uint64_t v2 = swift_unknownObjectRetain();
      if ((FastSync.LeaveActivityAction.isRelatedTo(_:)(v2) & 1) == 0)
      {
        swift_unknownObjectRelease();
        goto LABEL_7;
      }
      sub_10016EFCC(v23, (uint64_t)v26);
      switch(v28 >> 61)
      {
        case 2uLL:
          v28 &= 0x1FFFFFFFFFFFFFFFuLL;
          swift_unknownObjectRetain();
          swift_retain();
          swift_release();
          swift_unknownObjectRelease();
          *(_OWORD *)uint64_t v1 = 0u;
          *(_OWORD *)(v1 + 16) = 0u;
          *(void *)(v1 + 32) = 0xA000000000000000;
          sub_1001CD43C(v23);
          sub_1001D29B8(v23, (void (*)(void, void, void, void, void))sub_1001CC274);
          goto LABEL_15;
        case 3uLL:
          v28 &= 0x1FFFFFFFFFFFFFFFuLL;
          unint64_t v10 = v28;
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          swift_retain();
          long long v21 = v27;
          swift_unknownObjectRelease();
          *(_OWORD *)uint64_t v1 = v21;
          *(void *)(v1 + 16) = v10;
          *(void *)(v1 + 24) = 0;
          *(void *)(v1 + 32) = 0;
          swift_unknownObjectRetain();
          swift_retain();
          sub_1001CD43C(v23);
          sub_1001D29B8(v23, (void (*)(void, void, void, void, void))sub_1001CC274);
          swift_unknownObjectRelease();
          swift_release();
          goto LABEL_15;
        case 4uLL:
          v28 &= 0x1FFFFFFFFFFFFFFFuLL;
          swift_unknownObjectRetain();
          swift_errorRetain();
          swift_unknownObjectRelease();
          swift_errorRelease();
          goto LABEL_17;
        case 5uLL:
LABEL_15:
          swift_unknownObjectRelease();
          break;
        default:
          v28 &= 0x1FFFFFFFFFFFFFFFuLL;
          swift_unknownObjectRetain();
          swift_retain();
          swift_release();
          swift_unknownObjectRelease();
LABEL_17:
          sub_1001D29B8(v23, (void (*)(void, void, void, void, void))sub_1001CC088);
          sub_1001D29B8(v23, (void (*)(void, void, void, void, void))sub_1001CC088);
          if (qword_10069ACF0 != -1) {
            swift_once();
          }
          uint64_t v11 = type metadata accessor for Logger();
          sub_10003293C(v11, (uint64_t)qword_10069E4F8);
          os_log_type_t v12 = static os_log_type_t.fault.getter();
          uint64_t v13 = Logger.logObject.getter();
          os_log_type_t v14 = v12;
          if (os_log_type_enabled(v13, v12))
          {
            uint64_t v15 = swift_slowAlloc();
            uint64_t v22 = swift_slowAlloc();
            *(_DWORD *)uint64_t v15 = 136315650;
            uint64_t v16 = StaticString.description.getter();
            sub_10045DA1C(v16, v17, &v22);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            *(_WORD *)(v15 + 12) = 2048;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v15 + 22) = 2080;
            _StringGuts.grow(_:)(70);
            v18._object = (void *)0x800000010054F550;
            v18._countAndFlagsBits = 0xD000000000000043;
            String.append(_:)(v18);
            v19._countAndFlagsBits = sub_1001CCF64();
            String.append(_:)(v19);
            swift_bridgeObjectRelease();
            v20._countAndFlagsBits = 39;
            v20._object = (void *)0xE100000000000000;
            String.append(_:)(v20);
            sub_10045DA1C(0, 0xE000000000000000, &v22);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v13, v14, "Failed assertion at %s:%lu: %s", (uint8_t *)v15, 0x20u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }

          swift_unknownObjectRelease();
          sub_1001D29B8(v23, (void (*)(void, void, void, void, void))sub_1001CC274);
          sub_1001D29B8(v23, (void (*)(void, void, void, void, void))sub_1001CC274);
          break;
      }
      break;
    case 5uLL:
      goto LABEL_7;
    default:
      v25 &= 0x1FFFFFFFFFFFFFFFuLL;
LABEL_7:
      if (qword_10069ACF0 != -1) {
        swift_once();
      }
      uint64_t v3 = type metadata accessor for Logger();
      sub_10003293C(v3, (uint64_t)qword_10069E4F8);
      sub_1001D29B8(v23, (void (*)(void, void, void, void, void))sub_1001CC088);
      sub_1001D29B8(v23, (void (*)(void, void, void, void, void))sub_1001CC088);
      uint64_t v4 = Logger.logObject.getter();
      os_log_type_t v5 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v4, v5))
      {
        char v6 = (uint8_t *)swift_slowAlloc();
        v26[0] = swift_slowAlloc();
        *(_DWORD *)char v6 = 136315138;
        sub_1001D29B8(v23, (void (*)(void, void, void, void, void))sub_1001CC088);
        uint64_t v7 = sub_1001CCF64();
        unint64_t v9 = v8;
        sub_1001D29B8(v23, (void (*)(void, void, void, void, void))sub_1001CC274);
        sub_10045DA1C(v7, v9, v26);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_1001D29B8(v23, (void (*)(void, void, void, void, void))sub_1001CC274);
        sub_1001D29B8(v23, (void (*)(void, void, void, void, void))sub_1001CC274);
        _os_log_impl((void *)&_mh_execute_header, v4, v5, "didLeaveActivity(): No state transition for provider unrelated to current state: %s", v6, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_1001D29B8(v23, (void (*)(void, void, void, void, void))sub_1001CC274);
        sub_1001D29B8(v23, (void (*)(void, void, void, void, void))sub_1001CC274);
      }

      break;
  }
}

uint64_t sub_1001D1A00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v36 = a3;
  uint64_t v38 = a2;
  uint64_t v7 = sub_10002F214(&qword_1006A09A0);
  __chkstk_darwin(v7 - 8);
  uint64_t v34 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10002F214(&qword_10069E518);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for EditNoteActivity();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for FastSyncStateMachine();
  unint64_t v17 = (int8x16_t *)(v4 + *(int *)(v16 + 32));
  unint64_t v18 = v17[2].u64[0];
  unint64_t v19 = v18 >> 61;
  BOOL v20 = v18 >> 61 == 2 || v19 == 4;
  uint64_t v37 = a1;
  uint64_t v35 = v16;
  if (v20
    || v19 == 5
    && ((int8x16_t v21 = vorrq_s8(*v17, v17[1]),
         int8x8_t v22 = vorr_s8(*(int8x8_t *)v21.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v21, v21, 8uLL)),
         v18 == 0xA000000000000000)
      ? (BOOL v23 = *(void *)&v22 == 0)
      : (BOOL v23 = 0),
        v23))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
    sub_10002F034(v38, (uint64_t)v11, &qword_10069E518);
    sub_10002B754((uint64_t)v11, &qword_10069E518);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
    sub_10002F034(v38, (uint64_t)v11, &qword_10069E518);
    char v24 = sub_1001D1E04((uint64_t)v15, (uint64_t)v11);
    sub_10002B754((uint64_t)v11, &qword_10069E518);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    if ((v24 & 1) == 0) {
      return result;
    }
  }
  int v26 = 1 << ((unint64_t)v17[2].i64[0] >> 61);
  uint64_t v28 = v36;
  uint64_t v27 = v37;
  if ((v26 & 0x2C) == 0)
  {
    if ((v26 & 3) != 0)
    {
      uint64_t v29 = type metadata accessor for TaskPriority();
      uint64_t v30 = (uint64_t)v34;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v34, 1, 1, v29);
      uint64_t v31 = swift_allocObject();
      *(void *)(v31 + 16) = v28;
      *(void *)(v31 + 24) = a4;
      swift_retain();
      sub_1001D0024(v30, (uint64_t)&unk_10069E648, v31);
      swift_release();
      sub_10002B754(v30, &qword_1006A09A0);
    }
    else
    {
      swift_unknownObjectRetain();
      swift_errorRetain();
      swift_unknownObjectRelease();
      swift_errorRelease();
    }
    uint64_t v27 = v37;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 24))(v4, v27, v12);
  sub_1001D3844(v38, v4 + *(int *)(v35 + 20));
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = v28;
  *(void *)(v32 + 24) = a4;
  swift_retain();
  sub_1001CDA88((uint64_t)&unk_10069E638, v32);
  return swift_release();
}

uint64_t sub_1001D1E04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FastSyncStateMachine();
  __chkstk_darwin(v4);
  char v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10002F214(&qword_10069E518);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v37 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v37 - v14;
  uint64_t v16 = EditNoteActivity.id.getter();
  uint64_t v18 = v17;
  if (v16 == EditNoteActivity.id.getter() && v18 == v19)
  {
    swift_bridgeObjectRelease_n();
    sub_10002F034(a2, (uint64_t)v15, &qword_10069E518);
    sub_1001D3AB0(v2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FastSyncStateMachine);
  }
  else
  {
    char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10002F034(a2, (uint64_t)v15, &qword_10069E518);
    sub_1001D3AB0(v2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FastSyncStateMachine);
    if ((v20 & 1) == 0)
    {
      sub_1001D3B18((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FastSyncStateMachine);
      sub_10002B754((uint64_t)v15, &qword_10069E518);
      goto LABEL_18;
    }
  }
  uint64_t v21 = (uint64_t)v15;
  int8x8_t v22 = v6;
  uint64_t v23 = v4;
  uint64_t v38 = v21;
  sub_10002F034(v21, (uint64_t)v13, &qword_10069E518);
  uint64_t v24 = sub_10002F214(&qword_10069E510);
  uint64_t v25 = *(void *)(v24 - 8);
  int v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
  if (v26(v13, 1, v24) == 1)
  {
    sub_10002B754((uint64_t)v13, &qword_10069E518);
    uint64_t v27 = 0;
  }
  else
  {
    uint64_t v27 = (void *)CloudRecordSnapshot.id.getter();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v24);
  }
  uint64_t v28 = *(int *)(v23 + 20);
  uint64_t v29 = (uint64_t)v22;
  sub_10002F034((uint64_t)&v22[v28], (uint64_t)v10, &qword_10069E518);
  if (v26(v10, 1, v24) == 1)
  {
    sub_10002B754((uint64_t)v10, &qword_10069E518);
    uint64_t v30 = v38;
    if (!v27)
    {
      uint64_t v31 = 0;
LABEL_15:
      sub_1001D3B18(v29, (uint64_t (*)(void))type metadata accessor for FastSyncStateMachine);
      sub_10002B754(v30, &qword_10069E518);
      if (!v31)
      {
        char v34 = 0;
        return v34 & 1;
      }

      goto LABEL_18;
    }
LABEL_14:
    id v35 = v27;
    sub_1001D3B18(v29, (uint64_t (*)(void))type metadata accessor for FastSyncStateMachine);
    sub_10002B754(v30, &qword_10069E518);

LABEL_18:
    char v34 = 1;
    return v34 & 1;
  }
  uint64_t v31 = (void *)CloudRecordSnapshot.id.getter();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v24);
  uint64_t v30 = v38;
  if (!v27) {
    goto LABEL_15;
  }
  if (!v31) {
    goto LABEL_14;
  }
  sub_100031418(0, &qword_1006A75A0);
  id v32 = v27;
  char v33 = static NSObject.== infix(_:_:)();
  sub_1001D3B18(v29, (uint64_t (*)(void))type metadata accessor for FastSyncStateMachine);
  sub_10002B754(v30, &qword_10069E518);

  char v34 = v33 ^ 1;
  return v34 & 1;
}

uint64_t sub_1001D2274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[9] = a2;
  v3[10] = a3;
  unsigned char v3[8] = a1;
  v3[11] = type metadata accessor for FastSync.PresenceAction(0);
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  v3[14] = swift_task_alloc();
  return _swift_task_switch(sub_1001D2328, 0, 0);
}

uint64_t sub_1001D2328()
{
  uint64_t v1 = (int *)v0[9];
  sub_1001D3AB0(v0[8], v0[14], type metadata accessor for FastSync.LeaveActivityAction);
  swift_storeEnumTagMultiPayload();
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)v1 + *v1);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[15] = (uint64_t)v2;
  void *v2 = v0;
  v2[1] = sub_1001D243C;
  uint64_t v3 = v0[14];
  return v5(v3);
}

uint64_t sub_1001D243C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1001D2538, 0, 0);
}

uint64_t sub_1001D2538()
{
  int8x8_t v22 = v0;
  sub_1001D3AB0(v0[14], v0[13], type metadata accessor for FastSync.PresenceAction);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v1 = v0[13];
    uint64_t v2 = v0[14];
    uint64_t v3 = v0[8];
    sub_1001D3B18(v3, type metadata accessor for FastSync.LeaveActivityAction);
    sub_1001D3B78(v1, v3);
    uint64_t v4 = v2;
  }
  else
  {
    swift_unknownObjectRelease();
    if (qword_10069ACF0 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_10003293C(v5, (uint64_t)qword_10069E4F8);
    os_log_type_t v6 = static os_log_type_t.fault.getter();
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = v6;
    BOOL v9 = os_log_type_enabled(v7, v6);
    uint64_t v10 = v0[14];
    if (v9)
    {
      uint64_t v18 = v0[12];
      uint64_t v11 = swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315650;
      uint64_t v12 = StaticString.description.getter();
      v0[5] = sub_10045DA1C(v12, v13, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v11 + 12) = 2048;
      v0[6] = 276;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v11 + 22) = 2080;
      uint64_t v20 = 0;
      unint64_t v21 = 0xE000000000000000;
      _StringGuts.grow(_:)(60);
      v14._object = (void *)0x800000010054F5F0;
      v14._countAndFlagsBits = 0xD00000000000003ALL;
      String.append(_:)(v14);
      swift_beginAccess();
      sub_1001D3AB0(v10, v18, type metadata accessor for FastSync.PresenceAction);
      v15._countAndFlagsBits = String.init<A>(reflecting:)();
      String.append(_:)(v15);
      swift_bridgeObjectRelease();
      v0[7] = sub_10045DA1C(v20, v21, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Failed assertion at %s:%lu: %s", (uint8_t *)v11, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t v4 = v10;
  }
  sub_1001D3B18(v4, type metadata accessor for FastSync.PresenceAction);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_1001D28D0(uint64_t a1, int *a2)
{
  os_log_type_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_10017B61C;
  return v6(a1);
}

uint64_t sub_1001D29A8@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(v2 + *(int *)(result + 28));
  return result;
}

void *sub_1001D29B8(void *a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1001D29F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  void v5[4] = a3;
  v5[2] = a1;
  sub_10002F214(&qword_1006A09A0);
  v5[7] = swift_task_alloc();
  return _swift_task_switch(sub_1001D2A90, 0, 0);
}

uint64_t sub_1001D2A90()
{
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[5];
  uint64_t v5 = type metadata accessor for TaskPriority();
  os_log_type_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  v6(v1, 1, 1, v5);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  void v7[4] = v3;
  swift_retain();
  sub_10030B850(v1, (uint64_t)&unk_10069E610, (uint64_t)v7);
  sub_10002B754(v1, &qword_1006A09A0);
  v6(v1, 1, 1, v5);
  os_log_type_t v8 = (void *)swift_allocObject();
  v8[2] = 0;
  int64_t v8[3] = 0;
  void v8[4] = v4;
  v8[5] = v2;
  sub_10030B850(v1, (uint64_t)&unk_10069E620, (uint64_t)v8);
  sub_10002B754(v1, &qword_1006A09A0);
  BOOL v9 = (void *)swift_task_alloc();
  v0[8] = v9;
  uint64_t v10 = sub_10002F214(&qword_10069E628);
  *BOOL v9 = v0;
  v9[1] = sub_1001D2C80;
  return TaskGroup.next(isolation:)(v0 + 9, 0, 0, v10);
}

uint64_t sub_1001D2C80()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1001D2D7C, 0, 0);
}

uint64_t sub_1001D2D7C()
{
  int v1 = *(unsigned __int8 *)(v0 + 72);
  if (v1 == 2)
  {
    __break(1u);
  }
  else
  {
    **(unsigned char **)(v0 + 16) = v1 & 1;
    TaskGroup.cancelAll()();
    swift_task_dealloc();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  return result;
}

uint64_t sub_1001D2E10(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  void *v2 = v1;
  v2[1] = sub_1001D2EB8;
  return Task<>.value.getter();
}

uint64_t sub_1001D2EB8()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1001D2FB4, 0, 0);
}

uint64_t sub_1001D2FB4()
{
  **(unsigned char **)(v0 + 16) = 1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001D2FD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  void v5[4] = a5;
  v5[2] = a1;
  uint64_t v6 = type metadata accessor for ContinuousClock();
  v5[5] = v6;
  v5[6] = *(void *)(v6 - 8);
  v5[7] = swift_task_alloc();
  return _swift_task_switch(sub_1001D3098, 0, 0);
}

uint64_t sub_1001D3098()
{
  ContinuousClock.init()();
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1006A8EA0 + dword_1006A8EA0);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[8] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1001D3158;
  uint64_t v3 = v0[3];
  uint64_t v2 = v0[4];
  return v5(v3, v2, 0, 0, 1);
}

uint64_t sub_1001D3158()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 56);
  uint64_t v3 = *(void *)(*(void *)v1 + 48);
  uint64_t v4 = *(void *)(*(void *)v1 + 40);
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0) {
    uint64_t v5 = sub_1001D3330;
  }
  else {
    uint64_t v5 = sub_1001D32C8;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1001D32C8()
{
  **(unsigned char **)(v0 + 16) = 0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001D3330()
{
  swift_errorRelease();
  **(unsigned char **)(v0 + 16) = 1;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001D33A8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_10017B61C;
  return sub_1001D046C(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1001D3488(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_10017B61C;
  return sub_1001D0E04(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1001D3564(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_errorRetain();
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1001D3570(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_errorRelease();
  }
  else {
    return swift_unknownObjectRelease();
  }
}

uint64_t sub_1001D357C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_10017B61C;
  return sub_1001D29F4(a1, a2, v6, v7, v8);
}

uint64_t sub_1001D3640()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_1001D3648()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D3658()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001D3698(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10017B61C;
  return sub_1001D2E10(a1);
}

uint64_t sub_1001D374C()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001D3784(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_100161724;
  return sub_1001D2FD4(a1, v4, v5, v7, v6);
}

uint64_t sub_1001D3844(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002F214(&qword_10069E518);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001D38AC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001D38E4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10017B61C;
  uint64_t v8 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v6 = (void *)swift_task_alloc();
  v5[2] = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_10017B61C;
  return v8(a1);
}

uint64_t sub_1001D3A08(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_10017B61C;
  return sub_1001D2274(a1, v5, v4);
}

uint64_t sub_1001D3AB0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001D3B18(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1001D3B78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FastSync.LeaveActivityAction(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001D3BDC()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_1001D3C34(uint64_t a1)
{
  uint64_t v4 = v1[3];
  uint64_t v12 = v1[2];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v9 = v1[8];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_10017B61C;
  return sub_1001CEC2C(a1, v12, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1001D3D2C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1001D3D7C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_100161724;
  return sub_1001CE754(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1001D3E58()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1001D3EA0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_10017B61C;
  return sub_1001CF4F4(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_1001D3F74(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001D3FBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002F214(&qword_10069E518);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t destroy for FastSyncActivityState(uint64_t a1)
{
  return sub_1001CC274(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32));
}

uint64_t *initializeWithCopy for FastSyncActivityState(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  unint64_t v7 = a2[4];
  sub_1001CC088(*a2, v4, v5, v6, v7);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  return a1;
}

uint64_t *assignWithCopy for FastSyncActivityState(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  unint64_t v7 = a2[4];
  sub_1001CC088(*a2, v4, v5, v6, v7);
  uint64_t v8 = *a1;
  uint64_t v9 = a1[1];
  uint64_t v10 = a1[2];
  uint64_t v11 = a1[3];
  unint64_t v12 = a1[4];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  sub_1001CC274(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t *assignWithTake for FastSyncActivityState(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  uint64_t v4 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v7 = a1[3];
  unint64_t v8 = a1[4];
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v9;
  a1[4] = v3;
  sub_1001CC274(v4, v6, v5, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for FastSyncActivityState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x1FFFFA && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 2097147);
  }
  if (((((*(void *)(a1 + 32) >> 43) >> 18) | (8
                                                             * ((*(void *)(a1 + 8) >> 57) & 0x78 | *(void *)(a1 + 8) & 7 | (*(void *)(a1 + 24) >> 50) & 0x3C00 | ((*(void *)(a1 + 24) & 7) << 7) | (*(void *)(a1 + 32) >> 43) & 0x20000 | ((*(void *)(a1 + 32) & 7) << 14)))) ^ 0x1FFFFF) >= 0x1FFFFA)
    int v3 = -1;
  else {
    int v3 = (((*(void *)(a1 + 32) >> 43) >> 18) | (8
  }
                                                              * ((*(void *)(a1 + 8) >> 57) & 0x78 | *(void *)(a1 + 8) & 7 | (*(void *)(a1 + 24) >> 50) & 0x3C00 | ((*(void *)(a1 + 24) & 7) << 7) | (*(void *)(a1 + 32) >> 43) & 0x20000 | ((*(void *)(a1 + 32) & 7) << 14)))) ^ 0x1FFFFF;
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for FastSyncActivityState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x1FFFFB)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 - 2097147;
    if (a3 > 0x1FFFFA) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 > 0x1FFFFA) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2)
    {
      unint64_t v3 = ((-a2 >> 3) & 0x3FFFF) - (a2 << 18);
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(void *)(result + 16) = 0;
      uint64x2_t v4 = (uint64x2_t)vdupq_n_s64(v3);
      *(int8x16_t *)(result + 24) = vorrq_s8(vandq_s8((int8x16_t)vshlq_u64(v4, (uint64x2_t)xmmword_10052A8B0), (int8x16_t)vdupq_n_s64(7uLL)), vandq_s8((int8x16_t)vshlq_u64(v4, (uint64x2_t)xmmword_10052A8C0), (int8x16_t)vdupq_n_s64(0xF000000000000000)));
    }
  }
  return result;
}

uint64_t sub_1001D428C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32) >> 61;
  if (v1 <= 4) {
    return v1;
  }
  else {
    return (*(_DWORD *)a1 + 5);
  }
}

uint64_t sub_1001D42A8(uint64_t result)
{
  *(void *)(result + 32) &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

void *sub_1001D42B8(void *result, uint64_t a2)
{
  if (a2 < 5)
  {
    uint64_t v2 = result[3] & 0xFFFFFFFFFFFFFF8;
    uint64_t v3 = result[4] & 0xFFFFFFFFFFFFFF8 | (a2 << 61);
    result[1] &= 0xFFFFFFFFFFFFFF8uLL;
    result[3] = v2;
    result[4] = v3;
  }
  else
  {
    *uint64_t result = (a2 - 5);
    result[1] = 0;
    result[2] = 0;
    result[3] = 0;
    result[4] = 0xA000000000000000;
  }
  return result;
}

ValueMetadata *type metadata accessor for FastSyncActivityState()
{
  return &type metadata for FastSyncActivityState;
}

uint64_t ICArchiveImporter.Configuration.retainsIdentifiers.getter(char a1)
{
  return a1 & 1;
}

void sub_1001D439C(void *a1, uint64_t (*a2)(), char a3, int a4, char a5, void *a6, void *a7, void *a8)
{
  id v179 = a6;
  LODWORD(v180) = a4;
  id v182 = a2;
  uint64_t v14 = sub_10002F214(&qword_10069D7F0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v151 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10002F214(&qword_10069D7F8);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v20 = (char *)&v151 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  int8x8_t v22 = (char *)&v151 - v21;
  if (!a1 || !a7 || !a8) {
    return;
  }
  id v181 = a1;
  *(void *)&long long v178 = a7;
  id v23 = a7;
  uint64_t v24 = a8;
  id v25 = v23;
  *((void *)&v178 + 1) = v24;
  id v26 = v24;
  [v181 setCurrentNoteContainerViewMode:v182];
  id v27 = [v181 selectionState];
  if (!v27)
  {

    id v33 = v181;

    return;
  }
  uint64_t v28 = v27;
  id v163 = v22;
  uint64_t v171 = v16;
  uint64_t v172 = v20;
  id v177 = v8;
  uint64_t v29 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v31 = v30;

  type metadata accessor for JSONDecoder();
  swift_allocObject();
  JSONDecoder.init()();
  uint64_t v32 = sub_10002F214((uint64_t *)&unk_1006A2B80);
  sub_10001DFB0(&qword_10069E840, (uint64_t *)&unk_1006A2B80);
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  uint64_t v154 = v32;
  unint64_t v161 = v31;
  uint64_t v162 = v29;
  swift_release();
  char v34 = v187;
  uint64_t v160 = (uint64_t (*)(void *))v188;
  uint64_t v156 = v185;
  uint64_t v157 = v189;
  uint64_t v164 = v191;
  id v165 = v190;
  uint64_t v168 = v193;
  int v167 = v194;
  uint64_t v196 = v185;
  uint64_t v197 = v186;
  v198 = v187;
  id v169 = v187;
  uint64_t v170 = v186;
  unsigned long long v203 = v192;
  uint64_t v173 = v195;
  uint64_t v174 = v192;
  uint64_t v204 = v193;
  unsigned __int8 v205 = v194;
  uint64_t v206 = v195;
  uint64_t v35 = swift_allocObject();
  *(unsigned char *)(v35 + 16) = a3 & 1;
  uint64_t v36 = v35;
  uint64_t v176 = v35;
  uint64_t v37 = swift_allocObject();
  uint64_t v175 = v37;
  *(unsigned char *)(v37 + 16) = a5 & 1;
  id v159 = sub_1001DA3E4;
  *(void *)&long long v211 = sub_1001DA3E4;
  *((void *)&v211 + 1) = v36;
  uint64_t v158 = sub_1001D3640;
  *(void *)&long long v212 = sub_1001D3640;
  *((void *)&v212 + 1) = v37;
  long long v213 = v178;
  long long v214 = 0u;
  long long v215 = 0u;
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = v177;
  long long v39 = v211;
  *(_OWORD *)(v38 + 40) = v212;
  long long v40 = v214;
  *(_OWORD *)(v38 + 56) = v213;
  *(_OWORD *)(v38 + 72) = v40;
  *(_OWORD *)(v38 + 88) = v215;
  *(_OWORD *)(v38 + 24) = v39;
  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + 16) = sub_1001DA238;
  *(void *)(v41 + 24) = v38;
  uint64_t v166 = (char *)sub_100025380;
  uint64_t v199 = (char *)sub_100025380;
  uint64_t v200 = (uint64_t (*)())v41;
  char v42 = v34;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  os_log_type_t v43 = v156;
  uint64_t v44 = v42;
  id v45 = v25;
  id v46 = v26;
  uint64_t v47 = v43;
  uint64_t v48 = v44;
  id v155 = v45;
  uint64_t v156 = (void **)v46;
  os_log_t v49 = v47;
  int v50 = v48;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v51 = v49;
  sub_10002E70C((uint64_t)v160);
  uint64_t v201 = sub_1001D5B48;
  uint64_t v202 = 0;
  sub_10002E70C((uint64_t)v165);
  uint64_t v52 = v51;
  uint64_t v53 = v50;
  uint64_t v54 = v166;
  sub_10002E71C((uint64_t)v166);
  sub_10002E71C((uint64_t)sub_1001D5B48);

  uint64_t v157 = (uint64_t (*)())&v151;
  uint64_t v185 = v52;
  uint64_t v186 = v170;
  uint64_t v187 = v169;
  uint64_t v188 = v54;
  uint64_t v189 = (uint64_t (*)())v41;
  uint64_t v190 = sub_1001D5B48;
  unsigned int v191 = 0;
  unint64_t v192 = v174;
  uint64_t v193 = v168;
  unsigned __int8 v194 = v167;
  uint64_t v195 = v173;
  __chkstk_darwin(v55);
  *(&v151 - 2) = (uint64_t)&v185;
  uint64_t v56 = (objc_class *)type metadata accessor for ICSelectionStateModel(0);
  OS_dispatch_queue.sync<A>(execute:)();
  id v165 = (uint64_t (*)(void **, uint64_t *))v53;

  uint64_t v164 = v52;
  uint64_t v160 = (uint64_t (*)(void *))v41;
  sub_10002E70C((uint64_t)v166);
  sub_10002E70C((uint64_t)sub_1001D5B48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v57 = v207[0];
  v207[0] = v159;
  v207[1] = v176;
  v207[2] = v158;
  v207[3] = v175;
  long long v208 = v178;
  long long v209 = 0u;
  long long v210 = 0u;
  uint64_t v58 = (uint64_t (*)())v155;
  unint64_t v59 = v156;
  swift_retain();
  swift_retain();
  *((void *)&v178 + 1) = v57;
  sub_100025674(v57, 0, (uint64_t)v207);

  id v159 = v58;
  swift_release();
  swift_release();
  *(void *)&long long v178 = v56;
  uint64_t v60 = (char *)[objc_allocWithZone(v56) init];
  uint64_t v61 = v60;
  uint64_t v166 = v60;
  uint64_t v158 = v59;
  if (!v182)
  {
    if ((v180 & 1) == 0)
    {
      uint64_t v180 = 0;
      char v81 = v164;

      char v82 = v165;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      unint64_t v62 = v161;
      uint64_t v63 = v162;
      int v66 = (char *)*((void *)&v178 + 1);
LABEL_48:
      [v181 setIsSupplementaryContentVisible:1];
      goto LABEL_49;
    }
    uint64_t v70 = v164;
    unsigned int v71 = v165;
    uint64_t v72 = (uint64_t)v160;
    sub_10002E71C((uint64_t)sub_100025380);
    sub_10002E71C((uint64_t)sub_1001D5B48);

    uint64_t v157 = (uint64_t (*)())&v151;
    uint64_t v74 = __chkstk_darwin(v73);
    uint64_t v156 = (void **)&v151;
    *(&v151 - 2) = (uint64_t)v177;
    *(&v151 - 1) = (uint64_t)&v211;
    uint64_t v185 = v70;
    uint64_t v186 = v170;
    uint64_t v187 = v169;
    uint64_t v188 = (char *)sub_100025380;
    uint64_t v189 = (uint64_t (*)())v72;
    uint64_t v190 = sub_1001D5B48;
    unsigned int v191 = 0;
    unint64_t v192 = v174;
    uint64_t v193 = v168;
    unsigned __int8 v194 = v167;
    uint64_t v195 = v173;
    __chkstk_darwin(v74);
    *(&v151 - 4) = (uint64_t)&v185;
    *(&v151 - 3) = (uint64_t)sub_1001DA2C4;
    *(&v151 - 2) = v75;
    sub_10002F214(&qword_10069E850);
    OS_dispatch_queue.sync<A>(execute:)();
    uint64_t v180 = 0;
    id v182 = (uint64_t (*)())v71;

    unint64_t v76 = v70;
    sub_10002E70C((uint64_t)sub_100025380);
    sub_10002E70C((uint64_t)sub_1001D5B48);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v77 = v184;
    if (v184)
    {
      uint64_t v78 = (void *)sub_10002ECBC();
      int v66 = (char *)*((void *)&v178 + 1);
      if (!v78) {
        uint64_t v78 = sub_100008000();
      }
    }
    else
    {
      uint64_t v78 = 0;
      int v66 = (char *)*((void *)&v178 + 1);
    }
    unint64_t v59 = v158;
    uint64_t v83 = (void *)sub_10002ECBC();
    if (!v83)
    {
      uint64_t v83 = sub_100008000();
      if (!v83)
      {
        id v84 = v78;
        uint64_t v83 = v78;
      }
    }
    uint64_t v157 = v83;
    if (sub_10002EA78())
    {
      self;
      uint64_t v85 = swift_dynamicCastObjCClass();
      if (v85) {
        goto LABEL_32;
      }
      swift_unknownObjectRelease();
    }
    if (sub_10002EA78())
    {
      self;
      uint64_t v85 = swift_dynamicCastObjCClass();
      if (v85) {
        goto LABEL_32;
      }
      swift_unknownObjectRelease();
    }
    id v86 = sub_10002E7D4();
    if (!v86)
    {
      NSString v88 = 0;
      if (v83)
      {
LABEL_33:
        id v155 = v88;
        uint64_t v156 = (void **)v78;
        id v152 = v83;
        id v89 = objc_allocWithZone((Class)type metadata accessor for FolderListSelectionValidator());
        uint64_t v90 = self;
        uint64_t v91 = v159;
        uint64_t v92 = v59;
        id v153 = [v89 initWithModernContext:v91 htmlContext:v92 hidesSystemPaperNotesInCustomFolders:[v90 hidesSystemPaperNotesInCustomFolders] hidesMathNotesInCustomFolders:[v90 hidesMathNotesInCustomFolders] hidesCallNotesInCustomFolders:[v90 hidesCallNotesInCustomFolders]];

        uint64_t v93 = v76;
        char v94 = v182;
        uint64_t v95 = (uint64_t)v160;
        sub_10002E71C((uint64_t)sub_100025380);
        sub_10002E71C((uint64_t)sub_1001D5B48);

        uint64_t v185 = v93;
        uint64_t v186 = v170;
        uint64_t v187 = v169;
        uint64_t v188 = (char *)sub_100025380;
        uint64_t v189 = (uint64_t (*)())v95;
        uint64_t v190 = sub_1001D5B48;
        unsigned int v191 = 0;
        unint64_t v192 = v174;
        uint64_t v193 = v168;
        unsigned __int8 v194 = v167;
        uint64_t v195 = v173;
        __chkstk_darwin(v96);
        *(&v151 - 2) = (uint64_t)&v185;
        uint64_t v97 = v180;
        OS_dispatch_queue.sync<A>(execute:)();
        uint64_t v180 = v97;

        uint64_t v98 = v153;
        sub_10002E70C((uint64_t)sub_100025380);
        sub_10002E70C((uint64_t)sub_1001D5B48);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v99 = v184;
        id v100 = sub_10002E7D4();

        uint64_t v101 = v157;
        uint64_t v102 = (void *)sub_10002CE88(v157);
        if (v102)
        {
          uint64_t v103 = v102;
          char v104 = sub_10002CFD0(v102, (uint64_t)v155, v100);

          swift_bridgeObjectRelease();
          uint64_t v63 = v162;
          int v66 = (char *)*((void *)&v178 + 1);
          uint64_t v61 = v166;
          unint64_t v59 = v158;
          if ((v104 & 1) == 0)
          {

            id v105 = v179;
            uint64_t v101 = (uint64_t (*)())v179;
            [v181 setIsSupplementaryContentVisible:1];
            if (!v105)
            {
              unint64_t v62 = v161;
              goto LABEL_49;
            }
            id v152 = v105;
LABEL_39:
            uint64_t v106 = v101;
            if (objc_msgSend(v106, "ic_isNoteType"))
            {
              if (!objc_msgSend(v106, "ic_isNoteType"))
              {
LABEL_45:

                unint64_t v62 = v161;
                goto LABEL_49;
              }
            }
            else if (!objc_msgSend(v106, "ic_isInvitationType") {
                   || !objc_msgSend(v106, "ic_isInvitationType"))
            }
            {
              goto LABEL_45;
            }
            id v107 = v163;
            *id v163 = v152;
            v107[1] = 0;
            uint64_t v108 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
            swift_storeEnumTagMultiPayload();
            (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v108 - 8) + 56))(v107, 0, 1, v108);
            uint64_t v109 = (uint64_t)&v61[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection];
            swift_beginAccess();
            uint64_t v106 = v106;
            sub_10002B660((uint64_t)v107, v109, &qword_10069D7F8);
            swift_endAccess();
            goto LABEL_45;
          }
        }
        else
        {

          swift_bridgeObjectRelease();
          uint64_t v63 = v162;
          int v66 = (char *)*((void *)&v178 + 1);
          uint64_t v61 = v166;
          unint64_t v59 = v158;
        }
        [v181 setIsSupplementaryContentVisible:1];
        goto LABEL_39;
      }
      goto LABEL_47;
    }
    uint64_t v85 = (uint64_t)v86;
LABEL_32:
    sub_10002F214(&qword_10069BA00);
    uint64_t inited = (void **)swift_initStackObject();
    *((_OWORD *)inited + 1) = xmmword_100529F20;
    inited[4] = (void *)v85;
    uint64_t v185 = inited;
    specialized Array._endMutation()();
    NSString v88 = (void *)sub_10002C73C((unint64_t)v185);
    swift_bridgeObjectRelease();
    if (v83) {
      goto LABEL_33;
    }
LABEL_47:

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    unint64_t v62 = v161;
    uint64_t v63 = v162;
    uint64_t v61 = v166;
    goto LABEL_48;
  }
  uint64_t v180 = 0;
  unint64_t v62 = v161;
  uint64_t v63 = v162;
  if (v182 == (uint64_t (*)())1)
  {
    uint64_t v64 = v164;

    uint64_t v65 = v165;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    int v66 = (char *)*((void *)&v178 + 1);
    if (*(unsigned char *)(*((void *)&v178 + 1) + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_selectionReason) == 1)
    {
      uint64_t v67 = *((void *)&v178 + 1) + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection;
      swift_beginAccess();
      uint64_t v68 = v163;
      sub_10002F034(v67, (uint64_t)v163, &qword_10069D7F8);
      uint64_t v69 = (uint64_t)&v61[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection];
      swift_beginAccess();
      sub_10002B660((uint64_t)v68, v69, &qword_10069D7F8);
      swift_endAccess();
    }
  }
  else
  {
    char v79 = v164;

    char v80 = v165;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    int v66 = (char *)*((void *)&v178 + 1);
  }
LABEL_49:
  if (sub_10002EA78())
  {
    self;
    uint64_t v110 = swift_dynamicCastObjCClass();
    if (v110) {
      goto LABEL_56;
    }
    swift_unknownObjectRelease();
  }
  if (sub_10002EA78())
  {
    self;
    uint64_t v110 = swift_dynamicCastObjCClass();
    if (v110) {
      goto LABEL_56;
    }
    swift_unknownObjectRelease();
  }
  uint64_t v110 = (uint64_t)sub_10002E7D4();
LABEL_56:
  uint64_t v111 = (void *)v110;
  sub_100016BD0(v110, 0);

  int v112 = *(void **)&v66[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_focusedNoteObjectID];
  uint64_t v113 = *(void **)&v61[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_focusedNoteObjectID];
  *(void *)&v61[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_focusedNoteObjectID] = v112;
  id v114 = v112;

  uint64_t v115 = (uint64_t)&v61[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection];
  swift_beginAccess();
  uint64_t v116 = (uint64_t)v172;
  sub_10002F034(v115, (uint64_t)v172, &qword_10069D7F8);
  uint64_t v117 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
  LODWORD(v115) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v117 - 8) + 48))(v116, 1, v117);
  sub_10002B754(v116, &qword_10069D7F8);
  if (v115 == 1
    && (uint64_t v118 = (uint64_t)&v61[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection],
        swift_beginAccess(),
        uint64_t v119 = (uint64_t)v171,
        sub_10002F034(v118, (uint64_t)v171, &qword_10069D7F0),
        uint64_t v120 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0),
        LODWORD(v118) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v120 - 8) + 48))(v119, 1, v120), sub_10002B754(v119, &qword_10069D7F0), v118 == 1))
  {
    uint64_t v121 = v159;

    sub_10017253C(v63, v62);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v122 = v164;
    uint64_t v123 = v165;
    uint64_t v124 = (uint64_t)v160;
    sub_10002E71C((uint64_t)sub_100025380);
    sub_10002E71C((uint64_t)sub_1001D5B48);

    uint64_t v125 = swift_release();
    id v182 = (uint64_t (*)())&v151;
    uint64_t v185 = v122;
    uint64_t v186 = v170;
    uint64_t v187 = v169;
    uint64_t v188 = (char *)sub_100025380;
    uint64_t v189 = (uint64_t (*)())v124;
    uint64_t v190 = sub_1001D5B48;
    unsigned int v191 = 0;
    unint64_t v192 = v174;
    uint64_t v193 = v168;
    unsigned __int8 v194 = v167;
    uint64_t v195 = v173;
    __chkstk_darwin(v125);
    *(&v151 - 2) = (uint64_t)&v185;
    unint64_t v126 = v180;
    OS_dispatch_queue.sync<A>(execute:)();

    sub_10002E70C((uint64_t)sub_100025380);
    sub_10002E70C((uint64_t)sub_1001D5B48);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v127 = v183;
    uint64_t v128 = v159;
    uint64_t v129 = v158;
    swift_retain();
    swift_retain();
    sub_100025674((uint64_t)v127, 0, (uint64_t)v207);
    swift_release();
    swift_release();
    swift_retain();
    swift_retain();
    sub_100025674((uint64_t)v61, 0, (uint64_t)v207);
    id v182 = v129;

    uint64_t v180 = v128;
    swift_release();
    swift_release();
    id v179 = v127;
    if ((static NSObject.== infix(_:_:)() & 1) == 0)
    {
      uint64_t v130 = v196;
      uint64_t v131 = swift_allocObject();
      *(unsigned char *)(v131 + 16) = 0;
      uint64_t v132 = v166;
      *(void *)(v131 + 24) = &v196;
      *(void *)(v131 + 32) = v132;
      *(unsigned char *)(v131 + 40) = 1;
      uint64_t v133 = swift_allocObject();
      *(void *)(v133 + 16) = sub_100034D6C;
      *(void *)(v133 + 24) = v131;
      uint64_t v189 = sub_100031D58;
      uint64_t v190 = (uint64_t (*)(void **, uint64_t *))v133;
      uint64_t v185 = _NSConcreteStackBlock;
      uint64_t v186 = 1107296256;
      uint64_t v187 = sub_100031D30;
      uint64_t v188 = (char *)&unk_1006304E0;
      unsigned int v134 = _Block_copy(&v185);
      Swift::Int v135 = v132;
      id v136 = v130;
      swift_retain();
      swift_release();
      dispatch_sync(v136, v134);

      _Block_release(v134);
      LOBYTE(v134) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      swift_release();
      if (v134)
      {
        __break(1u);
        return;
      }
    }
    type metadata accessor for JSONEncoder();
    swift_allocObject();
    JSONEncoder.init()();
    Swift::Int v137 = v196;
    uint64_t v138 = (uint64_t)v199;
    uint64_t v139 = (uint64_t)v201;
    uint64_t v140 = v203;
    uint64_t v185 = v196;
    uint64_t v186 = v197;
    uint64_t v187 = v198;
    uint64_t v188 = v199;
    uint64_t v189 = v200;
    uint64_t v190 = v201;
    unsigned int v191 = v202;
    unint64_t v192 = v203;
    uint64_t v193 = v204;
    unsigned __int8 v194 = v205;
    uint64_t v195 = v206;
    uint64_t v174 = v198;
    id v177 = v137;
    sub_10002E71C(v138);
    sub_10002E71C(v139);
    sub_10001DFB0(&qword_10069E848, (uint64_t *)&unk_1006A2B80);
    *(void *)&long long v178 = v140;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v141 = dispatch thunk of JSONEncoder.encode<A>(_:)();
    if (v126)
    {
      swift_release();
      swift_errorRelease();

      sub_10002E70C(v138);
      sub_10002E70C(v139);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      Class isa = 0;
    }
    else
    {
      uint64_t v144 = v141;
      unint64_t v145 = v142;

      sub_10002E70C(v138);
      sub_10002E70C(v139);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      sub_10017253C(v144, v145);
    }
    [v181 setSelectionState:isa];
    uint64_t v146 = v180;

    sub_10017253C(v162, v161);
    swift_release();
    swift_release();
    uint64_t v147 = v182;
  }
  uint64_t v149 = v198;
  uint64_t v148 = (uint64_t)v199;
  uint64_t v150 = (uint64_t)v201;

  sub_10002E70C(v148);
  sub_10002E70C(v150);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

void sub_1001D59F4(void *a1, uint64_t a2, uint64_t *a3)
{
  if (a1)
  {
    uint64_t v6 = a3[8];
    uint64_t v5 = a3[9];
    uint64_t v7 = (uint64_t)(a3 + 5);
    long long v14 = *((_OWORD *)a3 + 2);
    long long v15 = *((_OWORD *)a3 + 3);
    uint64_t v8 = a3[3];
    uint64_t v9 = *a3;
    long long v13 = *(_OWORD *)(a3 + 1);
    sub_10002F1B0((uint64_t)(a3 + 4), (uint64_t)&v17, &qword_10069E858);
    sub_10002F1B0(v7, (uint64_t)&v16, &qword_10069E858);
    uint64_t v10 = a3[6];
    uint64_t v11 = a3[8];
    uint64_t v18 = v9;
    long long v19 = v13;
    uint64_t v20 = v8;
    long long v21 = v14;
    long long v22 = v15;
    uint64_t v23 = v6;
    uint64_t v24 = v5;
    swift_retain();
    swift_retain();
    sub_1001DA2EC(&v17);
    sub_1001DA2EC(&v16);
    sub_10002E71C(v10);
    sub_10002E71C(v11);
    id v12 = a1;
    sub_100025674((uint64_t)v12, 0, (uint64_t)&v18);
    swift_release();
    swift_release();
    sub_1001DA318(&v17);
    sub_1001DA318(&v16);
    sub_10002E70C(v10);
    sub_10002E70C(v11);
  }
}

uint64_t sub_1001D5B48(void **a1, uint64_t *a2)
{
  return sub_1001D5C90(*a1, *a2);
}

uint64_t sub_1001D5B54(uint64_t *a1, uint64_t a2, _OWORD *a3)
{
  uint64_t v3 = *a1;
  long long v4 = a3[1];
  v7[0] = *a3;
  v7[1] = v4;
  long long v5 = a3[3];
  v7[2] = a3[2];
  v7[3] = v5;
  void v7[4] = a3[4];
  sub_100025674(v3, 0, (uint64_t)v7);
  uint64_t result = sub_10002ECBC();
  if (result || (uint64_t result = (uint64_t)sub_100008000()) != 0)
  {

    return 1;
  }
  return result;
}

uint64_t sub_1001D5C90(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v50 = (uint64_t)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10002F214((uint64_t *)&unk_10069E830);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10002F214(&qword_10069D7F0);
  __chkstk_darwin(v10 - 8);
  id v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10002F214(&qword_10069D7F8);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v14);
  id v17 = (char *)&v44 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v19 = __chkstk_darwin(v18);
  long long v21 = (char *)&v44 - v20;
  __chkstk_darwin(v19);
  id v25 = (char *)&v44 - v24;
  if (a2)
  {
    if (!a1)
    {
LABEL_17:
      LOBYTE(a2) = 0;
      return a2 & 1;
    }
    uint64_t v46 = v22;
    uint64_t v47 = v23;
    uint64_t v48 = v9;
    uint64_t v26 = (uint64_t)a1 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection;
    swift_beginAccess();
    sub_10002F034(v26, (uint64_t)v25, &qword_10069D7F8);
    os_log_t v49 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
    if (v49(v25, 1, v4) == 1)
    {
      id v27 = &qword_10069D7F8;
      uint64_t v28 = (uint64_t)v25;
LABEL_16:
      sub_10002B754(v28, v27);
      goto LABEL_17;
    }
    id v29 = (id)a2;
    id v30 = a1;
    uint64_t v31 = (uint64_t)v25;
    uint64_t v32 = v29;
    sub_10002B754(v31, &qword_10069D7F8);
    uint64_t v33 = (uint64_t)v29 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection;
    swift_beginAccess();
    sub_10002F034(v33, (uint64_t)v12, &qword_10069D7F0);
    uint64_t v34 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48))(v12, 1, v34) == 1)
    {

      id v27 = &qword_10069D7F0;
      uint64_t v28 = (uint64_t)v12;
      goto LABEL_16;
    }
    sub_10002B754((uint64_t)v12, &qword_10069D7F0);
    uint64_t v35 = (uint64_t)v32 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection;
    swift_beginAccess();
    sub_10002F034(v35, (uint64_t)v21, &qword_10069D7F8);
    if (v49(v21, 1, v4) == 1)
    {

      uint64_t v36 = (uint64_t)v21;
LABEL_12:
      sub_10002B754(v36, &qword_10069D7F8);
      LOBYTE(a2) = 1;
      return a2 & 1;
    }
    id v45 = v32;
    sub_10002B754((uint64_t)v21, &qword_10069D7F8);
    uint64_t v37 = v47;
    sub_10002F034(v35, v47, &qword_10069D7F8);
    sub_10002F034(v26, (uint64_t)v17, &qword_10069D7F8);
    uint64_t v38 = (uint64_t)v48;
    a2 = (uint64_t)&v48[*(int *)(v7 + 48)];
    sub_10002F034(v37, (uint64_t)v48, &qword_10069D7F8);
    long long v39 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v49;
    sub_10002F034((uint64_t)v17, a2, &qword_10069D7F8);
    if (v39(v38, 1, v4) == 1)
    {

      sub_10002B754((uint64_t)v17, &qword_10069D7F8);
      uint64_t v38 = (uint64_t)v48;
      sub_10002B754(v37, &qword_10069D7F8);
      if (v39(a2, 1, v4) == 1)
      {
        uint64_t v36 = v38;
        goto LABEL_12;
      }
    }
    else
    {
      long long v40 = v39;
      uint64_t v41 = v46;
      sub_10002F034(v38, v46, &qword_10069D7F8);
      if (v40(a2, 1, v4) != 1)
      {
        uint64_t v43 = v50;
        sub_100026F8C(a2, v50, type metadata accessor for ICSelectionStateModel.ObjectSelection);
        LOBYTE(a2) = sub_1001A12D4(v41, v43);

        sub_100026FF4(v43);
        sub_10002B754((uint64_t)v17, &qword_10069D7F8);
        sub_10002B754(v47, &qword_10069D7F8);
        sub_100026FF4(v41);
        sub_10002B754(v38, &qword_10069D7F8);
        return a2 & 1;
      }

      sub_10002B754((uint64_t)v17, &qword_10069D7F8);
      sub_10002B754(v47, &qword_10069D7F8);
      sub_100026FF4(v41);
    }
    id v27 = (uint64_t *)&unk_10069E830;
    uint64_t v28 = v38;
    goto LABEL_16;
  }
  return a2 & 1;
}

void sub_1001D6290(uint64_t a1@<X0>, void *a2@<X8>)
{
  id v3 = [self defaultAccountInContext:a1];
  id v4 = v3;
  if (v3)
  {
    id v5 = [v3 defaultFolder];

    id v4 = [v5 objectID];
  }
  *a2 = v4;
}

void sub_1001D6334(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  id v4 = [a1 objectWithID:a2];
  self;
  id v5 = (void *)swift_dynamicCastObjCClass();
  if (v5)
  {
    uint64_t v6 = v5;
    if ([v5 isSystemPaper])
    {
      id v7 = [self globalVirtualSystemPaperFolder];
LABEL_12:

      goto LABEL_13;
    }
    id v8 = [v6 folder];
    if (v8)
    {
      uint64_t v9 = v8;
      unsigned __int8 v10 = [v8 isTrashFolder];
      id v11 = [v9 account];
      id v12 = v11;
      if (v11
        && (unsigned int v13 = [v11 hasAnyCustomFoldersIncludingSystem:0], (v10 & 1) == 0)
        && v13)
      {
        id v12 = v12;
        id v14 = [v12 objectID];
        id v15 = v12;
      }
      else
      {
        id v15 = v9;
        id v14 = [v15 objectID];
      }
      id v7 = v14;

      goto LABEL_12;
    }
  }

  id v7 = 0;
LABEL_13:
  *a3 = v7;
}

void sub_1001D64D4(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  id v4 = [a1 objectWithID:a2];
  self;
  id v5 = (void *)swift_dynamicCastObjCClass();
  id v6 = v5;
  if (!v5) {
    goto LABEL_11;
  }
  id v7 = [v5 store];
  if (!v7
    || (v8 = v7, id v9 = [v7 account], v8, !v9)
    || (unsigned int v10 = [v9 hasAnyCustomFolders], v9, !v10))
  {
    id v14 = [v6 store];
    if (v14)
    {
      id v12 = v14;
      id v13 = [v14 objectID];
      goto LABEL_10;
    }
LABEL_12:

    id v6 = 0;
    goto LABEL_13;
  }
  id v11 = [v6 store];
  id v6 = v11;
  if (v11)
  {
    id v12 = [v11 account];

    if (v12)
    {
      id v13 = [v12 objectID];
LABEL_10:
      id v6 = v13;

      goto LABEL_11;
    }
    goto LABEL_12;
  }
LABEL_11:

LABEL_13:
  *a3 = v6;
}

id sub_1001D664C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  sub_1001D9964(a1, a2);
  if (v5)
  {
    self;
    uint64_t v6 = swift_dynamicCastObjCClass();
    if (v6 || (self, (uint64_t v6 = swift_dynamicCastObjCClass()) != 0))
    {
      *a4 = v6;
      a4[1] = (uint64_t)a3;
      uint64_t v7 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a4, 0, 1, v7);
      return a3;
    }
    swift_unknownObjectRelease();
    uint64_t v5 = 0;
  }
  uint64_t v9 = type metadata accessor for ICSelectionStateModel.ContainerSelection(v5);
  unsigned int v10 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);

  return (id)v10(a4, 1, 1, v9);
}

void sub_1001D67BC(void *a1, uint64_t a2, void **a3)
{
  [a1 ic_existingObjectWithID:a2];
  if (v4)
  {
    id v10 = v4;
    self;
    uint64_t v5 = (void *)swift_dynamicCastObjCClass();
    if (v5)
    {
      id v6 = [v5 note];
      if (v6)
      {
        uint64_t v7 = v6;
        id v8 = [v6 objectID];
      }
      else
      {

        id v8 = 0;
      }
      uint64_t v9 = *a3;
      *a3 = v8;
    }
    else
    {
      uint64_t v9 = v10;
    }
  }
}

BOOL sub_1001D68F0()
{
  uint64_t v1 = sub_10002F214(&qword_10069D7F8);
  __chkstk_darwin(v1 - 8);
  id v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection;
  swift_beginAccess();
  sub_10002F034(v4, (uint64_t)v3, &qword_10069D7F8);
  uint64_t v5 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_10002B754((uint64_t)v3, &qword_10069D7F8);
  return v6;
}

char *sub_1001D69F4@<X0>(char **a1@<X8>)
{
  uint64_t result = sub_1000270B4(1, 1);
  *a1 = result;
  return result;
}

uint64_t sub_1001D6A28(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = v2 & 0xFFFFFFFFFFFFFF8;
  if (!(v2 >> 62))
  {
    uint64_t v4 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_11:
    sub_1001DA3A0((uint64_t)&v12);
    uint64_t v9 = *(void (**)(id *))(a1 + 24);
    if (!v9) {
      return 0;
    }
    id v8 = 0;
    id v10 = 0;
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v4 = result;
  if (!result) {
    goto LABEL_11;
  }
LABEL_3:
  unint64_t v6 = v4 - 1;
  if (__OFSUB__(v4, 1))
  {
    __break(1u);
    goto LABEL_17;
  }
  if ((v2 & 0xC000000000000001) != 0)
  {
LABEL_17:
    id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    sub_1001DA3A0((uint64_t)&v12);
    uint64_t v9 = *(void (**)(id *))(a1 + 24);
    if (!v9) {
      return (uint64_t)v8;
    }
    swift_bridgeObjectRetain();
    id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    sub_1001DA3A0((uint64_t)&v12);
    goto LABEL_13;
  }
  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (v6 >= *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  unint64_t v7 = v2 + 32;
  id v8 = *(id *)(v7 + 8 * v6);
  uint64_t result = sub_1001DA3A0((uint64_t)&v12);
  uint64_t v9 = *(void (**)(id *))(a1 + 24);
  if (!v9) {
    return (uint64_t)v8;
  }
  if (v6 < *(void *)(v3 + 16))
  {
    id v10 = *(id *)(v7 + 8 * v6);
LABEL_13:
    id v11 = v10;
    v9(&v11);

    return (uint64_t)v8;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t ICNavigableQueue.resolution.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 68));
  sub_10002E71C(v2);
  return v2;
}

uint64_t ICNavigableQueue.resolution.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = (uint64_t *)(v3 + *(int *)(a3 + 68));
  uint64_t result = sub_10002E70C(*v6);
  *unint64_t v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*ICNavigableQueue.resolution.modify())()
{
  return ICCloudSyncingObject.MoveAction.Types.rawValue.getter;
}

uint64_t ICNavigableQueue.duplicateCheck.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 72));
  sub_10002E71C(v2);
  return v2;
}

uint64_t ICNavigableQueue.duplicateCheck.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = (uint64_t *)(v3 + *(int *)(a3 + 72));
  uint64_t result = sub_10002E70C(*v6);
  *unint64_t v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*ICNavigableQueue.duplicateCheck.modify())()
{
  return ICCloudSyncingObject.MoveAction.Types.rawValue.getter;
}

unint64_t sub_1001D6CE4(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10062B758, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return 3;
  }
  else {
    return v3;
  }
}

uint64_t sub_1001D6D34(char a1)
{
  if (!a1) {
    return 0x736D657469;
  }
  if (a1 == 1) {
    return 0x49746E6572727563;
  }
  return 0xD00000000000001ELL;
}

uint64_t sub_1001D6D94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return == infix<A>(_:_:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_1001D6E08(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>.hashValue.getter(a1, a2, WitnessTable, &protocol witness table for String);
}

uint64_t sub_1001D6E74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>.hash(into:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_1001D6EE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>._rawHashValue(seed:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

unint64_t sub_1001D6F54@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t v3 = (void *)a1[1];
  v5._countAndFlagsBits = *a1;
  v5._object = v3;
  unint64_t result = sub_1001D6CE4(v5);
  *a2 = result;
  return result;
}

uint64_t sub_1001D6F94@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1001D6D34(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1001D6FCC()
{
  return sub_1001D6D34(*v0);
}

uint64_t sub_1001D6FE0@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1001D6D30(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1001D7018@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1001DA0C4();
  *a1 = result;
  return result;
}

uint64_t sub_1001D7050(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_1001D70A4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t ICNavigableQueue.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  long long v13 = *(_OWORD *)(a2 + 16);
  long long v17 = v13;
  uint64_t v18 = v4;
  long long v14 = *(_OWORD *)(a2 + 40);
  long long v19 = v14;
  type metadata accessor for ICNavigableQueue.CodingKeys();
  swift_getWitnessTable();
  uint64_t v5 = type metadata accessor for KeyedEncodingContainer();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)v12 - v7;
  sub_10015E154(a1, a1[3]);
  uint64_t v9 = v12[1];
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  *(void *)&long long v17 = *(void *)(v9 + *(int *)(a2 + 76));
  char v20 = 0;
  type metadata accessor for Array();
  uint64_t v16 = v14;
  swift_getWitnessTable();
  uint64_t v10 = v15;
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v10)
  {
    LOBYTE(v17) = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    *(void *)&long long v17 = *(void *)(v9 + *(int *)(a2 + 84));
    char v20 = 2;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t type metadata accessor for ICNavigableQueue.CodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t ICNavigableQueue.init(from:)@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v51 = a1;
  uint64_t v38 = a7;
  uint64_t v53 = a2;
  uint64_t v54 = a3;
  uint64_t v55 = a4;
  uint64_t v56 = a5;
  uint64_t v57 = a6;
  uint64_t v48 = (void *)type metadata accessor for ICNavigableQueue.CodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v41 = type metadata accessor for KeyedDecodingContainer();
  uint64_t v39 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v47 = (char *)&v37 - v12;
  uint64_t v13 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  id v45 = *(void **)(v13 - 8);
  uint64_t v46 = v13;
  __chkstk_darwin(v13);
  uint64_t v44 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v15);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v16 - 8);
  uint64_t v53 = a2;
  uint64_t v54 = a3;
  uint64_t v40 = a4;
  uint64_t v55 = a4;
  uint64_t v56 = a5;
  uint64_t v57 = a6;
  long long v17 = (int *)type metadata accessor for ICNavigableQueue();
  uint64_t v42 = *((void *)v17 - 1);
  __chkstk_darwin(v17);
  long long v19 = (uint64_t *)((char *)&v37 - v18);
  uint64_t v43 = sub_100031418(0, (unint64_t *)&qword_10069D2D0);
  static DispatchQoS.unspecified.getter();
  uint64_t v53 = _swiftEmptyArrayStorage;
  sub_1001D797C();
  sub_10002F214((uint64_t *)&unk_10069E6B0);
  sub_10001DFB0((unint64_t *)&qword_10069B290, (uint64_t *)&unk_10069E6B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  ((void (*)(char *, void, uint64_t))v45[13])(v44, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v46);
  uint64_t *v19 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  v19[1] = 50;
  (*(void (**)(char *, uint64_t, uint64_t, void *))(*(a2 - 1) + 56))((char *)v19 + v17[16], 1, 1, a2);
  char v20 = (uint64_t *)((char *)v19 + v17[17]);
  *char v20 = 0;
  v20[1] = 0;
  long long v21 = (uint64_t *)((char *)v19 + v17[18]);
  *long long v21 = 0;
  v21[1] = 0;
  uint64_t v22 = v17[19];
  uint64_t v23 = Array.init()();
  *(uint64_t *)((char *)v19 + v22) = v23;
  uint64_t v24 = (char *)v19 + v17[20];
  *(void *)uint64_t v24 = 0;
  v24[8] = 1;
  id v45 = a2;
  uint64_t v46 = (uint64_t)v17;
  id v25 = (char *)v17[21];
  *(void *)&v25[(void)v19] = Array.init()();
  sub_10015E154(v51, v51[3]);
  uint64_t v26 = v47;
  uint64_t v27 = v50;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v27)
  {
    uint64_t v36 = v51;
    uint64_t v34 = v42;
    uint64_t v35 = v46;
  }
  else
  {
    uint64_t v48 = v24;
    uint64_t WitnessTable = v23;
    uint64_t v50 = v22;
    uint64_t v44 = v25;
    type metadata accessor for Array();
    char v58 = 0;
    uint64_t v52 = v40;
    swift_getWitnessTable();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    swift_bridgeObjectRelease();
    *(uint64_t *)((char *)v19 + v50) = (uint64_t)v53;
    LOBYTE(v53) = 1;
    uint64_t v28 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    id v30 = v48;
    *uint64_t v48 = v28;
    *((unsigned char *)v30 + 8) = v31 & 1;
    char v58 = 2;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v26, v41);
    uint64_t v32 = v53;
    uint64_t v33 = v44;
    swift_bridgeObjectRelease();
    *(void *)&v33[(void)v19] = v32;
    uint64_t v34 = v42;
    uint64_t v35 = v46;
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(v42 + 16))(v38, v19, v46);
    uint64_t v36 = v51;
  }
  sub_100018FE8((uint64_t)v36);
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v34 + 8))(v19, v35);
}

uint64_t type metadata accessor for ICNavigableQueue()
{
  return swift_getGenericMetadata();
}

unint64_t sub_1001D797C()
{
  unint64_t result = qword_10069B280;
  if (!qword_10069B280)
  {
    type metadata accessor for OS_dispatch_queue.Attributes();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069B280);
  }
  return result;
}

uint64_t sub_1001D79D4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return ICNavigableQueue.init(from:)(a1, *(void **)(a2 + 16), *(void *)(a2 + 24), *(void *)(a2 + 32), *(void *)(a2 + 40), *(void *)(a2 + 48), a3);
}

uint64_t sub_1001D79FC(void *a1, uint64_t a2)
{
  return ICNavigableQueue.encode(to:)(a1, a2);
}

void destroy for ICSelectionStateUtilityConfiguration(uint64_t a1)
{
  swift_release();
  swift_release();

  if (*(void *)(a1 + 48)) {
    swift_release();
  }
  if (*(void *)(a1 + 64))
  {
    swift_release();
  }
}

uint64_t initializeWithCopy for ICSelectionStateUtilityConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(void **)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v5;
  uint64_t v7 = (_OWORD *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 48);
  swift_retain();
  swift_retain();
  id v8 = v4;
  id v9 = v5;
  if (v6)
  {
    uint64_t v10 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = v6;
    *(void *)(a1 + 56) = v10;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *v7;
  }
  uint64_t v11 = *(void *)(a2 + 64);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v11;
    *(void *)(a1 + 72) = v12;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  }
  return a1;
}

void *assignWithCopy for ICSelectionStateUtilityConfiguration(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = (void *)a1[4];
  uint64_t v7 = (void *)a2[4];
  a1[4] = v7;
  id v8 = v7;

  id v9 = (void *)a1[5];
  uint64_t v10 = (void *)a2[5];
  a1[5] = v10;
  id v11 = v10;

  uint64_t v12 = a2[6];
  if (a1[6])
  {
    if (v12)
    {
      uint64_t v13 = a2[7];
      a1[6] = v12;
      a1[7] = v13;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v12)
  {
    uint64_t v14 = a2[7];
    a1[6] = v12;
    a1[7] = v14;
    swift_retain();
    goto LABEL_8;
  }
  *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
LABEL_8:
  uint64_t v15 = a2[8];
  if (!a1[8])
  {
    if (v15)
    {
      uint64_t v17 = a2[9];
      a1[8] = v15;
      a1[9] = v17;
      swift_retain();
      return a1;
    }
LABEL_14:
    *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
    return a1;
  }
  if (!v15)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v16 = a2[9];
  a1[8] = v15;
  a1[9] = v16;
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for ICSelectionStateUtilityConfiguration(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for ICSelectionStateUtilityConfiguration(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();

  long long v4 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  uint64_t v5 = *(void *)(a2 + 48);
  if (*(void *)(a1 + 48))
  {
    if (v5)
    {
      uint64_t v6 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = v5;
      *(void *)(a1 + 56) = v6;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v5)
  {
    uint64_t v7 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = v5;
    *(void *)(a1 + 56) = v7;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
LABEL_8:
  uint64_t v8 = *(void *)(a2 + 64);
  if (!*(void *)(a1 + 64))
  {
    if (v8)
    {
      uint64_t v10 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = v8;
      *(void *)(a1 + 72) = v10;
      return a1;
    }
LABEL_14:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    return a1;
  }
  if (!v8)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = v8;
  *(void *)(a1 + 72) = v9;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ICSelectionStateUtilityConfiguration(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ICSelectionStateUtilityConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1001D7E44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 72);
}

uint64_t sub_1001D7E4C()
{
  uint64_t result = type metadata accessor for Optional();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void **sub_1001D7F1C(void **a1, void **a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  int v7 = *(_DWORD *)(v5 + 80);
  uint64_t v8 = v7;
  int v9 = v7 + 16;
  if (*(_DWORD *)(v5 + 84)) {
    size_t v10 = *(void *)(v5 + 64);
  }
  else {
    size_t v10 = *(void *)(v5 + 64) + 1;
  }
  size_t v11 = v10 + 7;
  unint64_t v12 = ((((((((v10 + 7 + ((v7 + 16) & ~(unint64_t)v7)) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)
        + 31) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  int v13 = v7 & 0x100000;
  uint64_t v14 = (char *)*a2;
  *a1 = *a2;
  if (v8 > 7 || v13 != 0 || v12 > 0x18)
  {
    a1 = (void **)&v14[(v8 & 0xF8 ^ 0x1F8) & v9];
    swift_retain();
  }
  else
  {
    uint64_t v17 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v18 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v17 = *v18;
    long long v19 = (void *)(((unint64_t)v17 + v8 + 8) & ~v8);
    char v20 = (const void *)(((unint64_t)v18 + v8 + 8) & ~v8);
    long long v21 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48);
    uint64_t v22 = v14;
    if (v21(v20, 1, v4))
    {
      memcpy(v19, v20, v10);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v19, v20, v4);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v19, 0, 1, v4);
    }
    unint64_t v23 = ((unint64_t)v19 + v11) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v24 = ((unint64_t)v20 + v11) & 0xFFFFFFFFFFFFFFF8;
    if (*(void *)v24 < 0xFFFFFFFFuLL)
    {
      *(_OWORD *)unint64_t v23 = *(_OWORD *)v24;
    }
    else
    {
      uint64_t v25 = *(void *)(v24 + 8);
      *(void *)unint64_t v23 = *(void *)v24;
      *(void *)(v23 + 8) = v25;
      swift_retain();
    }
    unint64_t v26 = (v23 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v27 = (v24 + 23) & 0xFFFFFFFFFFFFFFF8;
    if (*(void *)v27 < 0xFFFFFFFFuLL)
    {
      *(_OWORD *)unint64_t v26 = *(_OWORD *)v27;
    }
    else
    {
      uint64_t v28 = *(void *)(v27 + 8);
      *(void *)unint64_t v26 = *(void *)v27;
      *(void *)(v26 + 8) = v28;
      swift_retain();
    }
    id v29 = (void *)((v26 + 23) & 0xFFFFFFFFFFFFFFF8);
    id v30 = (void *)((v27 + 23) & 0xFFFFFFFFFFFFFFF8);
    void *v29 = *v30;
    unint64_t v31 = ((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v32 = ((unint64_t)v30 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v33 = *(void *)v32;
    *(unsigned char *)(v31 + 8) = *(unsigned char *)(v32 + 8);
    *(void *)unint64_t v31 = v33;
    *(void *)(((unint64_t)v29 + 31) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v30 + 31) & 0xFFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1001D8190(id *a1, uint64_t a2)
{
  unint64_t v3 = (unint64_t)a1 + 15;

  unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5)) {
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v7, v5);
  }
  unint64_t v8 = v7 + *(void *)(v6 + 64);
  if (!*(_DWORD *)(v6 + 84)) {
    ++v8;
  }
  int v9 = (void *)((v8 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (*v9 >= 0xFFFFFFFFuLL) {
    swift_release();
  }
  if (*(void *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8) >= 0xFFFFFFFFuLL) {
    swift_release();
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void **sub_1001D82D8(void **a1, void **a2, uint64_t a3)
{
  unint64_t v4 = *a2;
  *a1 = *a2;
  uint64_t v5 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v5 = *v6;
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  size_t v10 = (void *)(((unint64_t)v5 + v9 + 8) & ~v9);
  size_t v11 = (const void *)(((unint64_t)v6 + v9 + 8) & ~v9);
  unint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48);
  id v13 = v4;
  if (v12(v11, 1, v7))
  {
    int v14 = *(_DWORD *)(v8 + 84);
    size_t v15 = *(void *)(v8 + 64);
    if (v14) {
      size_t v16 = v15;
    }
    else {
      size_t v16 = v15 + 1;
    }
    memcpy(v10, v11, v16);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v10, v11, v7);
    uint64_t v18 = *(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56);
    uint64_t v17 = v8 + 56;
    v18(v10, 0, 1, v7);
    int v14 = *(_DWORD *)(v17 + 28);
    size_t v15 = *(void *)(v17 + 8);
  }
  if (v14) {
    size_t v19 = v15;
  }
  else {
    size_t v19 = v15 + 1;
  }
  unint64_t v20 = ((unint64_t)v10 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = ((unint64_t)v11 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)v21 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)unint64_t v20 = *(_OWORD *)v21;
  }
  else
  {
    uint64_t v22 = *(void *)(v21 + 8);
    *(void *)unint64_t v20 = *(void *)v21;
    *(void *)(v20 + 8) = v22;
    swift_retain();
  }
  unint64_t v23 = (v20 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v24 = (v21 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)v24 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)unint64_t v23 = *(_OWORD *)v24;
  }
  else
  {
    uint64_t v25 = *(void *)(v24 + 8);
    *(void *)unint64_t v23 = *(void *)v24;
    *(void *)(v23 + 8) = v25;
    swift_retain();
  }
  unint64_t v26 = (void *)((v23 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v27 = (void *)((v24 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v26 = *v27;
  unint64_t v28 = ((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v29 = ((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v30 = *(void *)v29;
  *(unsigned char *)(v28 + 8) = *(unsigned char *)(v29 + 8);
  *(void *)unint64_t v28 = v30;
  *(void *)(((unint64_t)v26 + 31) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v27 + 31) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void **sub_1001D84F0(void **a1, void **a2, uint64_t a3)
{
  unint64_t v6 = (unint64_t)a2 + 15;
  uint64_t v5 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  unint64_t v8 = (unint64_t)a1 + 15;
  id v9 = v5;

  unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFF8;
  *(void *)(v8 & 0xFFFFFFFFFFFFFFF8) = *(void *)(v6 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = *(void *)(a3 + 16);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 80);
  int v14 = (void *)((v13 + 8 + v10) & ~v13);
  size_t v15 = (void *)((v13 + 8 + (v6 & 0xFFFFFFFFFFFFFFF8)) & ~v13);
  size_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v17 = v16(v14, 1, v11);
  int v18 = v16(v15, 1, v11);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v14, v15, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v14, 0, 1, v11);
      goto LABEL_12;
    }
    int v19 = *(_DWORD *)(v12 + 84);
    size_t v20 = *(void *)(v12 + 64);
  }
  else
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 24))(v14, v15, v11);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v14, v11);
    int v19 = *(_DWORD *)(v12 + 84);
    size_t v20 = *(void *)(v12 + 64);
  }
  if (v19) {
    size_t v21 = v20;
  }
  else {
    size_t v21 = v20 + 1;
  }
  memcpy(v14, v15, v21);
LABEL_12:
  if (*(_DWORD *)(v12 + 84)) {
    uint64_t v22 = *(void *)(v12 + 64);
  }
  else {
    uint64_t v22 = *(void *)(v12 + 64) + 1;
  }
  unint64_t v23 = (void *)(((unint64_t)v14 + v22 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v24 = (unint64_t *)(((unint64_t)v15 + v22 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v25 = *v24;
  if (*v23 < 0xFFFFFFFFuLL)
  {
    if (v25 >= 0xFFFFFFFF)
    {
      unint64_t v27 = v24[1];
      void *v23 = v25;
      v23[1] = v27;
      swift_retain();
      goto LABEL_22;
    }
  }
  else
  {
    if (v25 >= 0xFFFFFFFF)
    {
      unint64_t v26 = v24[1];
      void *v23 = v25;
      v23[1] = v26;
      swift_retain();
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  *(_OWORD *)unint64_t v23 = *(_OWORD *)v24;
LABEL_22:
  unint64_t v28 = (void *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v29 = (unint64_t *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v30 = *v29;
  if (*v28 < 0xFFFFFFFFuLL)
  {
    if (v30 >= 0xFFFFFFFF)
    {
      unint64_t v32 = v29[1];
      *unint64_t v28 = v30;
      v28[1] = v32;
      swift_retain();
      goto LABEL_29;
    }
LABEL_28:
    *(_OWORD *)unint64_t v28 = *(_OWORD *)v29;
    goto LABEL_29;
  }
  if (v30 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_28;
  }
  unint64_t v31 = v29[1];
  *unint64_t v28 = v30;
  v28[1] = v31;
  swift_retain();
  swift_release();
LABEL_29:
  uint64_t v33 = (void *)(((unint64_t)v29 + 23) & 0xFFFFFFFFFFFFFFF8);
  *(void *)(((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8) = *v33;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v34 = ((((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = ((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = *(void *)v35;
  *(unsigned char *)(v34 + 8) = *(unsigned char *)(v35 + 8);
  *(void *)unint64_t v34 = v36;
  *(void *)(((((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v33 + 31) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_1001D8810(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  unint64_t v4 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v4 = *v5;
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  id v9 = (void *)(((unint64_t)v4 + v8 + 8) & ~v8);
  unint64_t v10 = (const void *)(((unint64_t)v5 + v8 + 8) & ~v8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(v10, 1, v6))
  {
    int v11 = *(_DWORD *)(v7 + 84);
    size_t v12 = *(void *)(v7 + 64);
    if (v11) {
      size_t v13 = v12;
    }
    else {
      size_t v13 = v12 + 1;
    }
    memcpy(v9, v10, v13);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v9, v10, v6);
    size_t v15 = *(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56);
    uint64_t v14 = v7 + 56;
    v15(v9, 0, 1, v6);
    int v11 = *(_DWORD *)(v14 + 28);
    size_t v12 = *(void *)(v14 + 8);
  }
  if (v11) {
    size_t v16 = v12;
  }
  else {
    size_t v16 = v12 + 1;
  }
  unint64_t v17 = ((unint64_t)v9 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = ((unint64_t)v10 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)v18 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)unint64_t v17 = *(_OWORD *)v18;
  }
  else
  {
    uint64_t v19 = *(void *)(v18 + 8);
    *(void *)unint64_t v17 = *(void *)v18;
    *(void *)(v17 + 8) = v19;
  }
  unint64_t v20 = (v17 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = (v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)v21 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)unint64_t v20 = *(_OWORD *)v21;
  }
  else
  {
    uint64_t v22 = *(void *)(v21 + 8);
    *(void *)unint64_t v20 = *(void *)v21;
    *(void *)(v20 + 8) = v22;
  }
  unint64_t v23 = (void *)((v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v24 = (void *)((v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v23 = *v24;
  unint64_t v25 = ((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = ((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v27 = *(void *)v26;
  *(unsigned char *)(v25 + 8) = *(unsigned char *)(v26 + 8);
  *(void *)unint64_t v25 = v27;
  *(void *)(((unint64_t)v23 + 31) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v24 + 31) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

void **sub_1001D8A08(void **a1, void **a2, uint64_t a3)
{
  unint64_t v5 = (unint64_t)a2 + 15;
  uint64_t v6 = *a1;
  *a1 = *a2;
  unint64_t v7 = (unint64_t)a1 + 15;

  *(void *)(v7 & 0xFFFFFFFFFFFFFFF8) = *(void *)(v5 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  int v11 = (void *)((v10 + 8 + (v7 & 0xFFFFFFFFFFFFFFF8)) & ~v10);
  size_t v12 = (void *)((v10 + 8 + (v5 & 0xFFFFFFFFFFFFFFF8)) & ~v10);
  size_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 48);
  int v14 = v13(v11, 1, v8);
  int v15 = v13(v12, 1, v8);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 32))(v11, v12, v8);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v11, 0, 1, v8);
      goto LABEL_12;
    }
    int v16 = *(_DWORD *)(v9 + 84);
    size_t v17 = *(void *)(v9 + 64);
  }
  else
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 40))(v11, v12, v8);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v11, v8);
    int v16 = *(_DWORD *)(v9 + 84);
    size_t v17 = *(void *)(v9 + 64);
  }
  if (v16) {
    size_t v18 = v17;
  }
  else {
    size_t v18 = v17 + 1;
  }
  memcpy(v11, v12, v18);
LABEL_12:
  if (*(_DWORD *)(v9 + 84)) {
    uint64_t v19 = *(void *)(v9 + 64);
  }
  else {
    uint64_t v19 = *(void *)(v9 + 64) + 1;
  }
  unint64_t v20 = (void *)(((unint64_t)v11 + v19 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v21 = (unint64_t *)(((unint64_t)v12 + v19 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v22 = *v21;
  if (*v20 < 0xFFFFFFFFuLL)
  {
    if (v22 >= 0xFFFFFFFF)
    {
      unint64_t v24 = v21[1];
      *unint64_t v20 = v22;
      v20[1] = v24;
      goto LABEL_22;
    }
  }
  else
  {
    if (v22 >= 0xFFFFFFFF)
    {
      unint64_t v23 = v21[1];
      *unint64_t v20 = v22;
      v20[1] = v23;
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  *(_OWORD *)unint64_t v20 = *(_OWORD *)v21;
LABEL_22:
  unint64_t v25 = (void *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v26 = (unint64_t *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v27 = *v26;
  if (*v25 < 0xFFFFFFFFuLL)
  {
    if (v27 >= 0xFFFFFFFF)
    {
      unint64_t v29 = v26[1];
      *unint64_t v25 = v27;
      v25[1] = v29;
      goto LABEL_29;
    }
LABEL_28:
    *(_OWORD *)unint64_t v25 = *(_OWORD *)v26;
    goto LABEL_29;
  }
  if (v27 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_28;
  }
  unint64_t v28 = v26[1];
  *unint64_t v25 = v27;
  v25[1] = v28;
  swift_release();
LABEL_29:
  unint64_t v30 = (unint64_t)v25 + 23;
  unint64_t v31 = (void *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v32 = (v30 & 0xFFFFFFFFFFFFFFF8) + 15;
  *(void *)(v30 & 0xFFFFFFFFFFFFFFF8) = *v31;
  unint64_t v33 = (v30 & 0xFFFFFFFFFFFFFFF8) + 31;
  swift_bridgeObjectRelease();
  unint64_t v34 = v32 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = ((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = *(void *)v35;
  *(unsigned char *)(v34 + 8) = *(unsigned char *)(v35 + 8);
  *(void *)unint64_t v34 = v36;
  *(void *)(v33 & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v31 + 31) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1001D8CFC(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4;
  int v6 = *(_DWORD *)(v4 + 84);
  if (v6) {
    unsigned int v7 = v6 - 1;
  }
  else {
    unsigned int v7 = 0;
  }
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = v7;
  }
  uint64_t v9 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v10 = 7;
  if (!v6) {
    uint64_t v10 = 8;
  }
  if (!a2) {
    return 0;
  }
  if (v8 < a2)
  {
    unint64_t v11 = ((((((((v10 + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + ((v9 + 16) & ~v9)) & 0xFFFFFFFFFFFFFFF8)
              + 23) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)
          + 31) & 0xFFFFFFFFFFFFFFF8)
        + 8;
    unsigned int v12 = a2 - v8;
    uint64_t v13 = v11 & 0xFFFFFFF8;
    if ((v11 & 0xFFFFFFF8) != 0) {
      unsigned int v14 = 2;
    }
    else {
      unsigned int v14 = v12 + 1;
    }
    if (v14 >= 0x10000) {
      unsigned int v15 = 4;
    }
    else {
      unsigned int v15 = 2;
    }
    if (v14 < 0x100) {
      unsigned int v15 = 1;
    }
    if (v14 >= 2) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = 0;
    }
    switch(v16)
    {
      case 1:
        int v17 = *((unsigned __int8 *)a1 + v11);
        if (!v17) {
          break;
        }
        goto LABEL_27;
      case 2:
        int v17 = *(unsigned __int16 *)((char *)a1 + v11);
        if (v17) {
          goto LABEL_27;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1001D8EB4);
      case 4:
        int v17 = *(_DWORD *)((char *)a1 + v11);
        if (!v17) {
          break;
        }
LABEL_27:
        int v19 = v17 - 1;
        if (v13)
        {
          int v19 = 0;
          LODWORD(v13) = *a1;
        }
        return v8 + (v13 | v19) + 1;
      default:
        break;
    }
  }
  if ((v7 & 0x80000000) != 0)
  {
    unsigned int v21 = (*(uint64_t (**)(unint64_t))(v5 + 48))(((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8)
                                                                 + v9
                                                                 + 8) & ~v9);
    if (v21 >= 2) {
      return v21 - 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v20 = *(void *)a1;
    if (*(void *)a1 >= 0xFFFFFFFFuLL) {
      LODWORD(v20) = -1;
    }
    return (v20 + 1);
  }
}

void sub_1001D8EC8(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8);
  int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (!v8) {
    unsigned int v9 = 0;
  }
  if (v9 <= 0x7FFFFFFF) {
    unsigned int v10 = 0x7FFFFFFF;
  }
  else {
    unsigned int v10 = v9;
  }
  uint64_t v11 = *(unsigned __int8 *)(v7 + 80);
  size_t v12 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (!v8) {
    ++v12;
  }
  size_t v13 = ((((((((v12 + ((v11 + 16) & ~v11) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 31) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v10 < a3)
  {
    unsigned int v14 = a3 - v10;
    if (((((((((v12 + ((v11 + 16) & ~v11) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8)
         + 31) & 0xFFFFFFF8) == 0xFFFFFFF8)
      unsigned int v15 = v14 + 1;
    else {
      unsigned int v15 = 2;
    }
    if (v15 >= 0x10000) {
      int v16 = 4;
    }
    else {
      int v16 = 2;
    }
    if (v15 < 0x100) {
      int v16 = 1;
    }
    if (v15 >= 2) {
      int v6 = v16;
    }
    else {
      int v6 = 0;
    }
  }
  if (a2 > v10)
  {
    if (((((((((v12 + ((v11 + 16) & ~v11) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8)
         + 31) & 0xFFFFFFF8) == 0xFFFFFFF8)
      int v17 = a2 - v10;
    else {
      int v17 = 1;
    }
    if (((((((((v12 + ((v11 + 16) & ~v11) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8)
         + 31) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      int v18 = ~v10 + a2;
      bzero(a1, v13);
      *(_DWORD *)a1 = v18;
    }
    switch(v6)
    {
      case 1:
        a1[v13] = v17;
        return;
      case 2:
        *(_WORD *)&a1[v13] = v17;
        return;
      case 3:
        goto LABEL_59;
      case 4:
        *(_DWORD *)&a1[v13] = v17;
        return;
      default:
        return;
    }
  }
  switch(v6)
  {
    case 1:
      a1[v13] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_35;
    case 2:
      *(_WORD *)&a1[v13] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_35;
    case 3:
LABEL_59:
      __break(1u);
      JUMPOUT(0x1001D9178);
    case 4:
      *(_DWORD *)&a1[v13] = 0;
      goto LABEL_34;
    default:
LABEL_34:
      if (a2)
      {
LABEL_35:
        if ((v9 & 0x80000000) != 0)
        {
          uint64_t v20 = (unsigned char *)((((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v11 + 8) & ~v11);
          if (v9 >= a2)
          {
            uint64_t v24 = a2 + 1;
            unint64_t v25 = *(void (**)(unint64_t, uint64_t))(v7 + 56);
            unint64_t v26 = (((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v11 + 8) & ~v11;
            v25(v26, v24);
          }
          else
          {
            if (v12 <= 3) {
              int v21 = ~(-1 << (8 * v12));
            }
            else {
              int v21 = -1;
            }
            if (v12)
            {
              int v22 = v21 & (~v9 + a2);
              if (v12 <= 3) {
                int v23 = v12;
              }
              else {
                int v23 = 4;
              }
              bzero(v20, v12);
              switch(v23)
              {
                case 2:
                  *(_WORD *)uint64_t v20 = v22;
                  break;
                case 3:
                  *(_WORD *)uint64_t v20 = v22;
                  v20[2] = BYTE2(v22);
                  break;
                case 4:
                  *(_DWORD *)uint64_t v20 = v22;
                  break;
                default:
                  *uint64_t v20 = v22;
                  break;
              }
            }
          }
        }
        else
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v19 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v19 = a2 - 1;
          }
          *(void *)a1 = v19;
        }
      }
      return;
  }
}

uint64_t sub_1001D91B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 40);
}

unsigned char *sub_1001D91B8(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001D9284);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_1001D92AC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1001D92C8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1001D92E4()
{
  return swift_getWitnessTable();
}

Swift::Int sub_1001D9300(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_10002F214(&qword_10069C4B8);
    uint64_t v2 = static _DictionaryStorage.convert(_:capacity:)();
    uint64_t v18 = v2;
    __CocoaDictionary.makeIterator()();
    uint64_t v3 = __CocoaDictionary.Iterator.next()();
    if (v3)
    {
      uint64_t v4 = v3;
      sub_100031418(0, (unint64_t *)&qword_10069E810);
      do
      {
        swift_dynamicCast();
        swift_dynamicCast();
        uint64_t v2 = v18;
        unint64_t v12 = *(void *)(v18 + 16);
        if (*(void *)(v18 + 24) <= v12)
        {
          sub_1002B9728(v12 + 1, 1);
          uint64_t v2 = v18;
        }
        Swift::Int result = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
        uint64_t v6 = v2 + 64;
        uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v8 = result & ~v7;
        unint64_t v9 = v8 >> 6;
        if (((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          unint64_t v10 = __clz(__rbit64((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v13 = 0;
          unint64_t v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v15 = v9 == v14;
            if (v9 == v14) {
              unint64_t v9 = 0;
            }
            v13 |= v15;
            uint64_t v16 = *(void *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          unint64_t v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(void *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        uint64_t v11 = 8 * v10;
        *(void *)(*(void *)(v2 + 48) + v11) = v17;
        *(void *)(*(void *)(v2 + 56) + v11) = v4;
        ++*(void *)(v2 + 16);
        uint64_t v4 = __CocoaDictionary.Iterator.next()();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptyDictionarySingleton;
  }
  return v2;
}

uint64_t sub_1001D9534(void *a1, void *a2, void *a3)
{
  uint64_t v6 = sub_10002F214(&qword_10069B310);
  __chkstk_darwin(v6 - 8);
  unint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    return 0;
  }
  id v9 = [a1 selectionState];
  if (!v9) {
    return 0;
  }
  unint64_t v10 = v9;
  uint64_t v11 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v13 = v12;

  type metadata accessor for JSONDecoder();
  swift_allocObject();
  JSONDecoder.init()();
  sub_10002F214((uint64_t *)&unk_1006A2B80);
  sub_10001DFB0(&qword_10069E840, (uint64_t *)&unk_1006A2B80);
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  uint64_t v38 = v11;
  unint64_t v39 = v13;
  id v36 = a2;
  id v37 = a3;
  uint64_t v16 = swift_release();
  uint64_t v42 = &v33;
  uint64_t v17 = (void *)v44[0];
  uint64_t v18 = v45;
  uint64_t v19 = v47;
  uint64_t v20 = v48;
  int v21 = v50;
  __chkstk_darwin(v16);
  *(&v33 - 2) = v44;
  uint64_t v23 = v22;
  id v41 = v24;
  id v25 = v17;
  sub_10002E71C(v18);
  sub_10002E71C(v19);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10002F214(&qword_10069E850);
  OS_dispatch_queue.sync<A>(execute:)();
  id v26 = v41;

  sub_10002E70C(v18);
  sub_10002E70C(v19);
  swift_bridgeObjectRelease();
  uint64_t v40 = v23;
  swift_bridgeObjectRelease();
  unint64_t v27 = v43;
  if (v43)
  {
    unint64_t v28 = v26;
    uint64_t v34 = v19;
    uint64_t v35 = v20;
    uint64_t v42 = v21;
    uint64_t v29 = (uint64_t)v37;
    id v33 = v37;
    id v30 = v36;
    id v31 = v36;
    uint64_t v32 = sub_10002ECBC();
    if (v32)
    {
      uint64_t v14 = v32;
      sub_10017253C(v38, v39);

      sub_10002E70C(v18);
      sub_10002E70C(v34);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1001977A4(v8);
      v44[0] = variable initialization expression of AsyncChannel.Iterator.active;
      v44[1] = 0;
      v44[2] = variable initialization expression of AsyncChannel.Iterator.active;
      uint64_t v45 = 0;
      id v46 = v30;
      uint64_t v47 = v29;
      long long v48 = 0u;
      long long v49 = 0u;
      uint64_t v14 = (uint64_t)sub_10002980C((uint64_t)v8, (uint64_t)v44);
      sub_10017253C(v38, v39);

      sub_10002E70C(v18);
      sub_10002E70C(v34);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10002B754((uint64_t)v8, &qword_10069B310);
    }
  }
  else
  {

    sub_10002E70C(v18);
    sub_10002E70C(v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10017253C(v38, v39);
    return 0;
  }
  return v14;
}

void sub_1001D9964(void *a1, uint64_t a2)
{
  sub_10002F1B0(a2, (uint64_t)v24, (uint64_t *)&unk_10069E7F0);
  uint64_t v5 = v25;
  uint64_t v4 = v26;
  uint64_t v6 = v27;
  uint64_t v7 = sub_10002F1B0(a2, (uint64_t)v28, (uint64_t *)&unk_10069E7F0);
  if (!v28[0])
  {
    unint64_t v8 = 0;
    id v11 = 0;
    if (!a1)
    {
LABEL_31:

      return;
    }
    goto LABEL_15;
  }
  if (!v29 || (unint64_t v8 = (void *)v29(v7)) == 0)
  {
    id v9 = v5;
    unint64_t v8 = v5;
    if (!v6) {
      goto LABEL_10;
    }
    goto LABEL_7;
  }
  if (v6)
  {
LABEL_7:
    id v10 = (id)v6();
    id v11 = v10;
    if (!v10) {
      goto LABEL_10;
    }
    if (!a1) {
      goto LABEL_11;
    }
LABEL_15:
    id v13 = a1;
    if (objc_msgSend(v13, "ic_isInvitationType"))
    {
      [self globalVirtualSharedWithYouFolder];

LABEL_28:
      return;
    }
    id v14 = [v13 ic_isModernNoteType];
    if (v14 && v8)
    {
      __chkstk_darwin(v14);
      id v15 = v8;
      sub_10002F214((uint64_t *)&unk_10069E820);
      NSManagedObjectContext.performAndWait<A>(_:)();

      return;
    }
    id v16 = [v13 ic_isLegacyNoteType];
    if (v16)
    {
      if (v11)
      {
        __chkstk_darwin(v16);
        id v17 = v11;
        sub_10002F214((uint64_t *)&unk_10069E820);
        NSManagedObjectContext.performAndWait<A>(_:)();

        return;
      }
    }
    else
    {
    }
    goto LABEL_31;
  }
LABEL_10:
  id v10 = v4;
  id v11 = v4;
  if (a1) {
    goto LABEL_15;
  }
LABEL_11:
  if (v8)
  {
    __chkstk_darwin(v10);
    id v12 = v8;
    sub_10002F214((uint64_t *)&unk_10069E820);
    NSManagedObjectContext.performAndWait<A>(_:)();

    if (v23)
    {

      return;
    }
  }
  if (!v11) {
    goto LABEL_31;
  }
  uint64_t v18 = self;
  id v19 = v11;
  id v20 = [v18 sharedNotesApp];
  if (v20)
  {
    int v21 = v20;
    id v22 = [v20 noteContext];

    if (v22)
    {
      id v11 = [v22 defaultStoreForNewNote];

      if (v11)
      {
        [v11 objectID];

        goto LABEL_28;
      }
      goto LABEL_34;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_34:
  __break(1u);
}

uint64_t sub_1001D9D1C(void *a1, uint64_t a2)
{
  uint64_t v3 = sub_10002F1B0(a2, (uint64_t)v25, (uint64_t *)&unk_10069E7F0);
  if (!v25[0]) {
    return 0;
  }
  if (!v26) {
    return 0;
  }
  uint64_t v4 = (void *)v26(v3);
  if (!v4) {
    return 0;
  }
  v27[0] = variable initialization expression of AsyncChannel.Iterator.active;
  v27[1] = 0;
  long long v27[2] = variable initialization expression of AsyncChannel.Iterator.active;
  v27[3] = 0;
  long long v28 = 0u;
  long long v29 = 0u;
  v27[4] = v4;
  uint64_t v30 = 0;
  id v5 = v4;
  uint64_t v6 = (void *)sub_10002B7B0(a1, (uint64_t)v27);

  if (!v6)
  {

    return (uint64_t)v6;
  }
  if ((objc_msgSend(v6, "ic_isBaseAttachmentType") & 1) == 0)
  {

    return 0;
  }
  id v24 = 0;
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = v5;
  v7[3] = v6;
  void v7[4] = &v24;
  unint64_t v8 = (void *)swift_allocObject();
  v8[2] = sub_1001DA18C;
  int64_t v8[3] = v7;
  aBlock[4] = sub_100031D5C;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_100031D30;
  aBlock[3] = &unk_1006303C8;
  id v9 = _Block_copy(aBlock);
  id v10 = v5;
  swift_retain();
  id v11 = v6;
  swift_release();
  [v10 performBlockAndWait:v9];
  _Block_release(v9);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
    if (v24)
    {
      id v14 = v24;
      id v15 = v10;
      id v16 = v14;
      id v17 = v15;
      id v10 = v16;
      id v18 = [v10 ic_isModernType];
      if ((v18 & 1) == 0)
      {
        [v10 ic_isLegacyType];

        goto LABEL_16;
      }
      __chkstk_darwin(v18);
      id v19 = v17;
      sub_10002F214(&qword_10069D520);
      NSManagedObjectContext.performAndWait<A>(_:)();

      id v20 = aBlock[0];
      if (v20)
      {
        id v21 = v24;
        swift_release();

        return (uint64_t)v6;
      }
    }
    else
    {

      id v11 = v10;
    }

LABEL_16:
    id v22 = v24;
    swift_release();

    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001DA0C4()
{
  return 3;
}

void sub_1001DA0CC(void *a1@<X8>)
{
  sub_10001D1E4(*(void **)(v1 + 16), *(void **)(v1 + 24), (SEL *)&selRef_isMarkedForDeletion, a1);
}

void sub_1001DA0F8(void *a1@<X8>)
{
  sub_1001D6290(*(void *)(v1 + 16), a1);
}

void sub_1001DA114(void *a1@<X8>)
{
  sub_1001D64D4(*(void **)(v1 + 16), *(void *)(v1 + 24), a1);
}

void sub_1001DA130(void *a1@<X8>)
{
  sub_1001D6334(*(void **)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1001DA14C()
{
  return _swift_deallocObject(v0, 40, 7);
}

void sub_1001DA18C()
{
  sub_1001D67BC(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void ***)(v0 + 32));
}

uint64_t sub_1001DA198()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001DA1A8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001DA1B8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001DA1C8()
{
  swift_release();
  swift_release();

  if (*(void *)(v0 + 72)) {
    swift_release();
  }
  if (*(void *)(v0 + 88)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 104, 7);
}

void sub_1001DA238(void *a1)
{
  sub_1001D59F4(a1, *(void *)(v1 + 16), (uint64_t *)(v1 + 24));
}

uint64_t sub_1001DA244()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001DA27C()
{
  return _swift_deallocObject(v0, 41, 7);
}

uint64_t sub_1001DA2B4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001DA2C4(uint64_t *a1)
{
  return sub_1001D5B54(a1, *(void *)(v1 + 16), *(_OWORD **)(v1 + 24));
}

uint64_t sub_1001DA2CC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1002F9AC4(v1[2], v1[3], v1[4], a1);
}

id *sub_1001DA2EC(id *a1)
{
  id v2 = *a1;
  return a1;
}

id *sub_1001DA318(id *a1)
{
  return a1;
}

uint64_t sub_1001DA344@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v4 = *(void *)(v1 + 16);
  long long v5 = *(_OWORD *)(v4 + 48);
  v8[2] = *(_OWORD *)(v4 + 32);
  int64_t v8[3] = v5;
  void v8[4] = *(_OWORD *)(v4 + 64);
  uint64_t v9 = *(void *)(v4 + 80);
  long long v6 = *(_OWORD *)(v4 + 16);
  v8[0] = *(_OWORD *)v4;
  v8[1] = v6;
  uint64_t result = sub_1001D6A28((uint64_t)v8);
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1001DA3A0(uint64_t a1)
{
  return a1;
}

id sub_1001DA3CC@<X0>(void *a1@<X8>)
{
  return sub_10001B03C(a1);
}

void sub_1001DA3F0(void *a1@<X8>)
{
}

uint64_t sub_1001DA408(uint64_t a1)
{
  uint64_t v40 = sub_10002F214(&qword_10069EDD8);
  uint64_t v42 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v3 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214(&qword_10069EDE0);
  __chkstk_darwin(v4);
  sub_1001FD570();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._countAndFlagsBits = 0x20796D20646441;
  v5._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  unint64_t v38 = sub_1001FF3B0();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._countAndFlagsBits = 0x20796D206F7420;
  v6._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  swift_getKeyPath();
  uint64_t v41 = sub_1001FF454((unint64_t *)&qword_10069CD70, (void (*)(uint64_t))type metadata accessor for NoteEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v7._countAndFlagsBits = 0x2E65746F6E20;
  v7._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  id v37 = v3;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v35 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  unint64_t v8 = *(void (**)(char *, uint64_t))(v42 + 8);
  v42 += 8;
  uint64_t v9 = v40;
  v8(v3, v40);
  unint64_t v39 = v8;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v10._countAndFlagsBits = 543450177;
  v10._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  uint64_t v36 = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v11._countAndFlagsBits = 0x796D206F746E6920;
  v11._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._countAndFlagsBits = 0x2E65746F6E20;
  v12._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  id v13 = v37;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v34 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v8(v13, v9);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v14._countAndFlagsBits = 0x2065687420646441;
  v14._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._countAndFlagsBits = 0x796D206F746E6920;
  v15._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v16._countAndFlagsBits = 0x2E65746F6E20;
  v16._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  id v17 = v37;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v33 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v39(v17, v40);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v18._countAndFlagsBits = 0x7420747265736E49;
  v18._object = (void *)0xEB00000000206568;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v19._countAndFlagsBits = 0x6874206F746E6920;
  v19._object = (void *)0xEA00000000002065;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v20._countAndFlagsBits = 0x2E65746F6E20;
  v20._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v32 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v21 = v40;
  v39(v17, v40);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v22._countAndFlagsBits = 0x2065687420747550;
  v22._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v23._countAndFlagsBits = 0x796D206F746E6920;
  v23._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v24._countAndFlagsBits = 0x2E65746F6E20;
  v24._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v25 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v39(v17, v21);
  sub_10002F214((uint64_t *)&unk_10069EDE8);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_10052AC40;
  uint64_t v27 = v34;
  *(void *)(v26 + 32) = v35;
  *(void *)(v26 + 40) = v27;
  uint64_t v28 = v32;
  *(void *)(v26 + 48) = v33;
  *(void *)(v26 + 56) = v28;
  *(void *)(v26 + 64) = v25;
  uint64_t v29 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v29;
}

uint64_t sub_1001DAC10(uint64_t a1)
{
  uint64_t v2 = sub_10002F214(&qword_10069B538);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  Swift::String v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  Swift::String v7 = (char *)&v9 - v6;
  sub_10002F034(a1, (uint64_t)&v9 - v6, &qword_10069B538);
  sub_10002F034((uint64_t)v7, (uint64_t)v5, &qword_10069B538);
  IntentParameter.wrappedValue.setter();
  return sub_10002B754((uint64_t)v7, &qword_10069B538);
}

uint64_t sub_1001DACEC()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1001FF454((unint64_t *)&qword_10069CD70, (void (*)(uint64_t))type metadata accessor for NoteEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1001FD570();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  Swift::String v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  swift_getKeyPath();
  sub_1001FF3B0();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_10002F214(&qword_10069E960);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100527F30;
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v6;
  uint64_t v8 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1001DAF04()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10052AC50;
  *(void *)(v4 + 32) = v0;
  *(void *)(v4 + 40) = v1;
  *(void *)(v4 + 48) = v2;
  *(void *)(v4 + 56) = v3;
  uint64_t v5 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1001DB000()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10052AC50;
  *(void *)(v4 + 32) = v0;
  *(void *)(v4 + 40) = v1;
  *(void *)(v4 + 48) = v2;
  *(void *)(v4 + 56) = v3;
  uint64_t v5 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1001DB0F8(uint64_t a1)
{
  uint64_t v35 = a1;
  uint64_t v34 = sub_10002F214(&qword_10069EDB0);
  uint64_t v1 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214(&qword_10069EDB8);
  __chkstk_darwin(v4);
  sub_1001FD5C4();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._countAndFlagsBits = 0x20796D206B636F4CLL;
  v5._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  unint64_t v31 = sub_1001FE33C();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._countAndFlagsBits = 0x2E65746F6E20;
  v6._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v30 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v8 = v1 + 8;
  uint64_t v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  uint64_t v9 = v34;
  v7(v3, v34);
  uint64_t v32 = v8;
  uint64_t v33 = v7;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v10._object = (void *)0x8000000100552C60;
  v10._countAndFlagsBits = 0xD000000000000011;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v11._countAndFlagsBits = 0x2E65746F6E20;
  v11._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v29 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v7(v3, v9);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v12._countAndFlagsBits = 0x20796D20747550;
  v12._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v13._countAndFlagsBits = 0xD000000000000015;
  v13._object = (void *)0x8000000100552C80;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v28 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v33(v3, v34);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v14._countAndFlagsBits = 0x20796D206B636F4CLL;
  v14._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._countAndFlagsBits = 0xD000000000000012;
  v15._object = (void *)0x8000000100552CA0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v27 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  id v17 = v33;
  uint64_t v16 = v34;
  v33(v3, v34);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v18._countAndFlagsBits = 0xD000000000000016;
  v18._object = (void *)0x8000000100552CC0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v19._countAndFlagsBits = 0x2E65746F6E20;
  v19._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v20 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v17(v3, v16);
  sub_10002F214(&qword_10069EDC0);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_10052AC40;
  uint64_t v22 = v29;
  *(void *)(v21 + 32) = v30;
  *(void *)(v21 + 40) = v22;
  uint64_t v23 = v27;
  *(void *)(v21 + 48) = v28;
  *(void *)(v21 + 56) = v23;
  *(void *)(v21 + 64) = v20;
  uint64_t v24 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t sub_1001DB6E0(uint64_t a1)
{
  uint64_t v2 = sub_10002F214(&qword_10069B1D0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  Swift::String v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v9 - v6;
  sub_10002F034(a1, (uint64_t)&v9 - v6, &qword_10069B1D0);
  sub_10002F034((uint64_t)v7, (uint64_t)v5, &qword_10069B1D0);
  IntentParameter.wrappedValue.setter();
  return sub_10002B754((uint64_t)v7, &qword_10069B1D0);
}

uint64_t sub_1001DB7BC()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1001FE33C();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1001FD5C4();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  Swift::String v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  swift_getKeyPath();
  sub_1001FF31C();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_10002F214(&qword_10069E960);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100527F30;
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v6;
  uint64_t v8 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1001DB9A4()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10052AC40;
  *(void *)(v5 + 32) = v0;
  *(void *)(v5 + 40) = v1;
  *(void *)(v5 + 48) = v2;
  *(void *)(v5 + 56) = v3;
  *(void *)(v5 + 64) = v4;
  uint64_t v6 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1001DBAC0()
{
  return sub_1001FAB98();
}

uint64_t sub_1001DBAD0(uint64_t a1)
{
  uint64_t v25 = sub_10002F214(&qword_10069EDB0);
  uint64_t v27 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v3 = (char *)v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214(&qword_10069EDB8);
  __chkstk_darwin(v4);
  sub_1001FD5C4();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._object = (void *)0x8000000100552B20;
  v5._countAndFlagsBits = 0xD000000000000018;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  v21[1] = sub_1001FE33C();
  uint64_t v26 = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._countAndFlagsBits = 0x2E65746F6E20;
  v6._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v24 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v21[0] = *(void *)(v27 + 8);
  v27 += 8;
  uint64_t v7 = v25;
  ((void (*)(char *, uint64_t))v21[0])(v3, v25);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v8._countAndFlagsBits = 0x20796D2065766F4DLL;
  v8._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v9._countAndFlagsBits = 0xD000000000000021;
  v9._object = (void *)0x8000000100552B40;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v23 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v10 = (void (*)(char *, uint64_t))v21[0];
  ((void (*)(char *, uint64_t))v21[0])(v3, v7);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._object = (void *)0x8000000100552B70;
  v11._countAndFlagsBits = 0x1000000000000039;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._countAndFlagsBits = 0x2E65746F6E20;
  v12._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v22 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v13 = v25;
  v10(v3, v25);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v14._countAndFlagsBits = 0xD00000000000001FLL;
  v14._object = (void *)0x8000000100552BB0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._countAndFlagsBits = 0x2E65746F6E20;
  v15._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v16 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v10(v3, v13);
  sub_10002F214(&qword_10069EDC0);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_10052AC50;
  uint64_t v18 = v23;
  *(void *)(v17 + 32) = v24;
  *(void *)(v17 + 40) = v18;
  *(void *)(v17 + 48) = v22;
  *(void *)(v17 + 56) = v16;
  uint64_t v19 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_1001DBFF0()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1001FE33C();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1001FD5C4();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  Swift::String v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  swift_getKeyPath();
  sub_1001FF31C();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_10002F214(&qword_10069E960);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100527F30;
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v6;
  uint64_t v8 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1001DC1D8()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10052AC40;
  *(void *)(v5 + 32) = v0;
  *(void *)(v5 + 40) = v1;
  *(void *)(v5 + 48) = v2;
  *(void *)(v5 + 56) = v3;
  *(void *)(v5 + 64) = v4;
  uint64_t v6 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1001DC308()
{
  return sub_1001FAB98();
}

uint64_t sub_1001DC31C(uint64_t a1)
{
  uint64_t v2 = sub_10002F214(&qword_10069ED98);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v42 = v2;
  uint64_t v43 = v3;
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214(&qword_10069EDA0);
  __chkstk_darwin(v6);
  sub_1001ADBE0();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v7._countAndFlagsBits = 0x206120646441;
  v7._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  swift_getKeyPath();
  unint64_t v40 = sub_1001FDE14();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v8._countAndFlagsBits = 0x206F742067617420;
  v8._object = (void *)0xEB0000000020796DLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  swift_getKeyPath();
  unint64_t v39 = sub_100162118();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v9._countAndFlagsBits = 0x2E65746F6E20;
  v9._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v37 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v10 = v42;
  uint64_t v41 = *(void (**)(char *, uint64_t))(v43 + 8);
  v43 += 8;
  v41(v5, v42);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._countAndFlagsBits = 0x6174206120747550;
  v11._object = (void *)0xEE0020726F662067;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  uint64_t v38 = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._countAndFlagsBits = 0x796D206F746E6920;
  v12._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v13._countAndFlagsBits = 0x2E65746F6E20;
  v13._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  uint64_t v33 = v5;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v36 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v14 = v41;
  v41(v5, v10);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v15._countAndFlagsBits = 0x20656874206E49;
  v15._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v16._object = (void *)0x8000000100552AC0;
  v16._countAndFlagsBits = 0xD000000000000018;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v17._countAndFlagsBits = 46;
  v17._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  uint64_t v18 = v33;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v35 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v14(v18, v42);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v19._countAndFlagsBits = 0x6120747265736E49;
  v19._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v20._countAndFlagsBits = 0x746E692067617420;
  v20._object = (void *)0xEE0020656874206FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v21._countAndFlagsBits = 0x2E65746F6E20;
  v21._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v34 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v22 = v42;
  v41(v18, v42);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v23._countAndFlagsBits = 0x6120657461657243;
  v23._object = (void *)0xEA0000000000206ELL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v24._countAndFlagsBits = 0x206E692067617420;
  v24._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v25._countAndFlagsBits = 0x2E65746F6E20;
  v25._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v26 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v41(v18, v22);
  sub_10002F214(&qword_10069EDA8);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_10052AC40;
  uint64_t v28 = v36;
  *(void *)(v27 + 32) = v37;
  *(void *)(v27 + 40) = v28;
  uint64_t v29 = v34;
  *(void *)(v27 + 48) = v35;
  *(void *)(v27 + 56) = v29;
  *(void *)(v27 + 64) = v26;
  uint64_t v30 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v30;
}

uint64_t sub_1001DCB10()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1001FDE14();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1001ADBE0();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  swift_getKeyPath();
  sub_100162118();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_10002F214(&qword_10069E960);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100527F30;
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v6;
  uint64_t v8 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1001DCCF8()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10052AC40;
  *(void *)(v5 + 32) = v0;
  *(void *)(v5 + 40) = v1;
  *(void *)(v5 + 48) = v2;
  *(void *)(v5 + 56) = v3;
  *(void *)(v5 + 64) = v4;
  uint64_t v6 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1001DCE04()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10052AC40;
  *(void *)(v5 + 32) = v0;
  *(void *)(v5 + 40) = v1;
  *(void *)(v5 + 48) = v2;
  *(void *)(v5 + 56) = v3;
  *(void *)(v5 + 64) = v4;
  uint64_t v6 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1001DCF24(uint64_t a1)
{
  uint64_t v44 = sub_10002F214(&qword_10069ED80);
  uint64_t v2 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002F214(&qword_10069ED88);
  __chkstk_darwin(v5);
  unint64_t v6 = sub_10018444C();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v7._countAndFlagsBits = 543450177;
  v7._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  swift_getKeyPath();
  uint64_t v43 = sub_1001FF454(&qword_10069E9F8, (void (*)(uint64_t))&type metadata accessor for AttributedString);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v8._object = (void *)0x80000001005529C0;
  v8._countAndFlagsBits = 0xD000000000000012;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  swift_getKeyPath();
  uint64_t v36 = sub_1001FF454((unint64_t *)&qword_10069CD70, (void (*)(uint64_t))type metadata accessor for NoteEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v9._countAndFlagsBits = 0x2E65746F6E20;
  v9._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  unint64_t v34 = v6;
  uint64_t v39 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v42 = v2 + 8;
  uint64_t v45 = v10;
  uint64_t v11 = v44;
  v10(v4, v44);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v12._object = (void *)0x80000001005529E0;
  v12._countAndFlagsBits = 0xD000000000000012;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v13._countAndFlagsBits = 0x61202C65746F6E20;
  v13._object = (void *)0xEB00000000206464;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v14._countAndFlagsBits = 46;
  v14._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  uint64_t v41 = v4;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v38 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v45(v4, v11);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v15._countAndFlagsBits = 543450177;
  v15._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  swift_getKeyPath();
  uint64_t v40 = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v16._countAndFlagsBits = 0xD000000000000015;
  v16._object = (void *)0x8000000100552A00;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v17._countAndFlagsBits = 0x2E65746F6E20;
  v17._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  uint64_t v18 = v41;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v37 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v19 = v45;
  v45(v18, v44);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v20._countAndFlagsBits = 0xD000000000000014;
  v20._object = (void *)0x8000000100552A20;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v21._countAndFlagsBits = 0x77202C65746F6E20;
  v21._object = (void *)0xED00002065746972;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v22._countAndFlagsBits = 46;
  v22._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  Swift::String v23 = v41;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v35 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v24 = v44;
  v19(v23, v44);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v25._countAndFlagsBits = 0x20796D206E49;
  v25._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v26._countAndFlagsBits = 0x61202C65746F6E20;
  v26._object = (void *)0xEB00000000206464;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v27._countAndFlagsBits = 46;
  v27._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v28 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v45(v23, v24);
  sub_10002F214(&qword_10069ED90);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_10052AC40;
  uint64_t v30 = v38;
  *(void *)(v29 + 32) = v39;
  *(void *)(v29 + 40) = v30;
  uint64_t v31 = v35;
  *(void *)(v29 + 48) = v37;
  *(void *)(v29 + 56) = v31;
  *(void *)(v29 + 64) = v28;
  uint64_t v32 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v32;
}

uint64_t sub_1001DD770(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AttributedString();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  unint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  Swift::String v8 = (char *)&v11 - v7;
  Swift::String v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v11 - v7, a1, v2);
  v9(v6, (uint64_t)v8, v2);
  IntentParameter.wrappedValue.setter();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t sub_1001DD8A4()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1001FF454(&qword_10069E9F8, (void (*)(uint64_t))&type metadata accessor for AttributedString);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_10018444C();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  swift_getKeyPath();
  sub_1001FF454((unint64_t *)&qword_10069CD70, (void (*)(uint64_t))type metadata accessor for NoteEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_10002F214(&qword_10069E960);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100527F30;
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v6;
  uint64_t v8 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1001DDAEC()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10052AC40;
  *(void *)(v5 + 32) = v0;
  *(void *)(v5 + 40) = v1;
  *(void *)(v5 + 48) = v2;
  *(void *)(v5 + 56) = v3;
  *(void *)(v5 + 64) = v4;
  uint64_t v6 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1001DDBF4()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10052AC40;
  *(void *)(v5 + 32) = v0;
  *(void *)(v5 + 40) = v1;
  *(void *)(v5 + 48) = v2;
  *(void *)(v5 + 56) = v3;
  *(void *)(v5 + 64) = v4;
  uint64_t v6 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1001DDD14()
{
  uint64_t v0 = sub_10002F214(&qword_10069ED70);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100034650();
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v4 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v6 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_10002F214(&qword_10069ED78);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10052AC50;
  *(void *)(v9 + 32) = v4;
  *(void *)(v9 + 40) = v6;
  *(void *)(v9 + 48) = v7;
  *(void *)(v9 + 56) = v8;
  uint64_t v10 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1001DDF78()
{
  return sub_1001DE73C();
}

uint64_t sub_1001DDF98()
{
  return sub_1001FAB98();
}

uint64_t sub_1001DDFAC()
{
  uint64_t v0 = sub_10002F214(&qword_10069ED70);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100034650();
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v4 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v6 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_10002F214(&qword_10069ED78);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10052AC50;
  *(void *)(v9 + 32) = v4;
  *(void *)(v9 + 40) = v6;
  *(void *)(v9 + 48) = v7;
  *(void *)(v9 + 56) = v8;
  uint64_t v10 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1001DE214()
{
  return sub_1001DE73C();
}

uint64_t sub_1001DE234()
{
  uint64_t v0 = sub_10002F214(&qword_10069ED70);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100034650();
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v4 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v6 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_10002F214(&qword_10069ED78);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10052AC50;
  *(void *)(v9 + 32) = v4;
  *(void *)(v9 + 40) = v6;
  *(void *)(v9 + 48) = v7;
  *(void *)(v9 + 56) = v8;
  uint64_t v10 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1001DE498()
{
  return sub_1001DE73C();
}

uint64_t sub_1001DE4B8()
{
  uint64_t v0 = sub_10002F214(&qword_10069ED70);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100034650();
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v4 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v6 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_10002F214(&qword_10069ED78);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10052AC50;
  *(void *)(v9 + 32) = v4;
  *(void *)(v9 + 40) = v6;
  *(void *)(v9 + 48) = v7;
  *(void *)(v9 + 56) = v8;
  uint64_t v10 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1001DE71C()
{
  return sub_1001DE73C();
}

uint64_t sub_1001DE73C()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1001FE920(&qword_10069ED58, &qword_10069ED60, (void (*)(void))sub_1001FF050);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_100034650();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_10002F214(&qword_10069E960);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100524D10;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1001DE8C8()
{
  uint64_t v0 = sub_10002F214(&qword_10069ED48);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100033AC8();
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v4 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v6 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_10002F214(&qword_10069ED50);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_100529A00;
  *(void *)(v8 + 32) = v4;
  *(void *)(v8 + 40) = v6;
  *(void *)(v8 + 48) = v7;
  uint64_t v9 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1001DEAD4()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1001B8238();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_100033AC8();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  swift_getKeyPath();
  sub_1001FF454(&qword_10069ED10, (void (*)(uint64_t))&type metadata accessor for ChangeOperation);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_10002F214(&qword_10069E960);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100527F30;
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v6;
  uint64_t v8 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1001DECEC()
{
  return sub_1001FAB98();
}

uint64_t sub_1001DED0C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ChangeOperation();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v11 - v7;
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v11 - v7, a1, v2);
  v9(v6, (uint64_t)v8, v2);
  IntentParameter.wrappedValue.setter();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t sub_1001DEE40()
{
  uint64_t v0 = sub_10002F214(&qword_10069ED48);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100033AC8();
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v4 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_10002F214(&qword_10069ED50);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100524D10;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1001DEF98()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1001B8238();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_100033AC8();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  swift_getKeyPath();
  sub_1001FF454(&qword_10069ED10, (void (*)(uint64_t))&type metadata accessor for ChangeOperation);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_10002F214(&qword_10069E960);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100527F30;
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v6;
  uint64_t v8 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1001DF1B0()
{
  return sub_1001FAB98();
}

uint64_t sub_1001DF1C4()
{
  uint64_t v0 = sub_10002F214(&qword_10069ED48);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100033AC8();
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v4 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v6 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_10002F214(&qword_10069ED50);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100527F30;
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v6;
  uint64_t v8 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1001DF378()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1001B8238();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_100033AC8();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  swift_getKeyPath();
  sub_1001FF454(&qword_10069ED10, (void (*)(uint64_t))&type metadata accessor for ChangeOperation);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_10002F214(&qword_10069E960);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100527F30;
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v6;
  uint64_t v8 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1001DF590()
{
  return sub_1001FAB98();
}

uint64_t sub_1001DF5A8(uint64_t a1)
{
  uint64_t v2 = sub_10002F214(&qword_10069ED30);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v66 = v2;
  uint64_t v67 = v3;
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for _AssistantIntent.PhraseToken();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10002F214(&qword_10069ED38);
  __chkstk_darwin(v10);
  unint64_t v11 = sub_100034190();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v12._object = (void *)0x8000000100552110;
  v12._countAndFlagsBits = 0xD000000000000012;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  LODWORD(v58) = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  Swift::String v13 = *(void (**)(void))(v7 + 104);
  uint64_t v56 = v7 + 104;
  uint64_t v57 = (void (*)(char *, void, uint64_t))v13;
  uint64_t v53 = v6;
  v13(v9);
  uint64_t v52 = v9;
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  Swift::String v14 = *(void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v54 = v7 + 8;
  uint64_t v55 = v14;
  v14(v9, v6);
  v15._countAndFlagsBits = 0x6E69207461687420;
  v15._object = (void *)0xEE00206564756C63;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  swift_getKeyPath();
  unint64_t v64 = sub_1001FDE14();
  uint64_t v65 = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v16._countAndFlagsBits = 46;
  v16._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  unint64_t v62 = v5;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v61 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v17 = v67 + 8;
  uint64_t v63 = *(void (**)(char *, uint64_t))(v67 + 8);
  uint64_t v18 = v5;
  uint64_t v19 = v66;
  v63(v18, v66);
  uint64_t v67 = v17;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v20._countAndFlagsBits = 0xD000000000000023;
  v20._object = (void *)0x8000000100552420;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v21._countAndFlagsBits = 46;
  v21._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  Swift::String v22 = v62;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v60 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v23 = v63;
  v63(v22, v19);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v24._countAndFlagsBits = 0x74207463656C6553;
  v24._object = (void *)0xEB00000000206568;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v25._countAndFlagsBits = 0x2E67617420;
  v25._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  Swift::String v26 = v62;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v59 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v27 = v26;
  v23(v26, v66);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v28._countAndFlagsBits = 0x6D207463656C6553;
  v28._object = (void *)0xEA00000000002079;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v29._countAndFlagsBits = 0x206E692067617420;
  v29._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v29);
  uint64_t v31 = v52;
  uint64_t v30 = v53;
  v57(v52, v58, v53);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  v55(v31, v30);
  v32._countAndFlagsBits = 46;
  v32._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v32);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  v51[1] = v11;
  uint64_t v58 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v33 = v66;
  unint64_t v34 = v63;
  v63(v27, v66);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v35._countAndFlagsBits = 0xD000000000000025;
  v35._object = (void *)0x8000000100552450;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v35);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v36._countAndFlagsBits = 46;
  v36._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v36);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v57 = (void (*)(char *, void, uint64_t))static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v34(v27, v33);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v37._countAndFlagsBits = 0x7463656C65736544;
  v37._object = (void *)0xED00002065687420;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v37);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v38._countAndFlagsBits = 0x2E67617420;
  v38._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v38);
  uint64_t v39 = v27;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v56 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v40 = v27;
  uint64_t v41 = v66;
  v34(v40, v66);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v42._countAndFlagsBits = 0xD000000000000013;
  v42._object = (void *)0x8000000100552480;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v42);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v43._countAndFlagsBits = 0x2E67617420;
  v43._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v43);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v44 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v34(v39, v41);
  sub_10002F214(&qword_10069ED40);
  uint64_t v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_10052AC60;
  uint64_t v46 = v60;
  *(void *)(v45 + 32) = v61;
  *(void *)(v45 + 40) = v46;
  uint64_t v47 = v58;
  *(void *)(v45 + 48) = v59;
  *(void *)(v45 + 56) = v47;
  uint64_t v48 = v56;
  *(void *)(v45 + 64) = v57;
  *(void *)(v45 + 72) = v48;
  *(void *)(v45 + 80) = v44;
  uint64_t v49 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v49;
}

uint64_t sub_1001DFED4()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1001FDE14();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_100034190();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_10002F214(&qword_10069E960);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100527F30;
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v6;
  uint64_t v8 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1001E00C0()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100529A00;
  *(void *)(v3 + 32) = v0;
  *(void *)(v3 + 40) = v1;
  *(void *)(v3 + 48) = v2;
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1001E016C()
{
  return sub_1001FA838();
}

uint64_t sub_1001E01A4(uint64_t a1)
{
  uint64_t v2 = sub_10002F214(&qword_10069ED30);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v22 = v2;
  uint64_t v23 = v3;
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214(&qword_10069ED38);
  __chkstk_darwin(v6);
  sub_100034190();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v7._object = (void *)0x80000001005521C0;
  v7._countAndFlagsBits = 0xD000000000000010;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  swift_getKeyPath();
  sub_1001FDE14();
  v19[1] = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v8._countAndFlagsBits = 0xD00000000000001DLL;
  v8._object = (void *)0x80000001005523E0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v9._countAndFlagsBits = 46;
  v9._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v10 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  unint64_t v11 = *(void (**)(char *, uint64_t))(v23 + 8);
  v23 += 8;
  Swift::String v20 = v11;
  uint64_t v21 = v10;
  v11(v5, v22);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v12._countAndFlagsBits = 0xD000000000000018;
  v12._object = (void *)0x8000000100552200;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v13._countAndFlagsBits = 0xD000000000000011;
  v13._object = (void *)0x8000000100552400;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v14._countAndFlagsBits = 0x2E67617420;
  v14._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v15 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v20(v5, v22);
  sub_10002F214(&qword_10069ED40);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_100527F30;
  *(void *)(v16 + 32) = v21;
  *(void *)(v16 + 40) = v15;
  uint64_t v17 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_1001E059C(uint64_t a1)
{
  return sub_1001E1E9C(a1, (uint64_t)sub_1001FF4E4, (uint64_t)sub_1001E016C, (uint64_t)sub_1001E05DC);
}

uint64_t sub_1001E05DC()
{
  return sub_1001FAB98();
}

uint64_t sub_1001E05EC()
{
  uint64_t v0 = sub_10002F214(&qword_10069ED30);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v20 = v0;
  uint64_t v21 = v1;
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214(&qword_10069ED38);
  __chkstk_darwin(v4);
  sub_100034190();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._countAndFlagsBits = 0xD00000000000001CLL;
  v5._object = (void *)0x8000000100552380;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  sub_1001FDE14();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._object = (void *)0x80000001005523A0;
  v6._countAndFlagsBits = 0xD00000000000001BLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v7._countAndFlagsBits = 46;
  v7._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v9 = v20;
  uint64_t v10 = *(void (**)(char *, uint64_t))(v21 + 8);
  v21 += 8;
  uint64_t v18 = v10;
  uint64_t v19 = v8;
  v10(v3, v20);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._countAndFlagsBits = 0xD000000000000018;
  v11._object = (void *)0x8000000100552200;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._object = (void *)0x80000001005523C0;
  v12._countAndFlagsBits = 0xD00000000000001BLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v13._countAndFlagsBits = 0x2E67617420;
  v13._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v14 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v18(v3, v9);
  sub_10002F214(&qword_10069ED40);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_100527F30;
  *(void *)(v15 + 32) = v19;
  *(void *)(v15 + 40) = v14;
  uint64_t v16 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1001E09E0(uint64_t a1)
{
  return sub_1001E1E9C(a1, (uint64_t)sub_1001FF4E4, (uint64_t)sub_1001E016C, (uint64_t)sub_1001E0A20);
}

uint64_t sub_1001E0A20()
{
  return sub_1001FAB98();
}

uint64_t sub_1001E0A30(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for _AssistantIntent.PhraseToken();
  uint64_t v47 = *(void *)(v2 - 8);
  uint64_t v48 = v2;
  __chkstk_darwin(v2);
  uint64_t v46 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214(&qword_10069ED30);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v54 = v4;
  uint64_t v55 = v5;
  __chkstk_darwin(v4);
  Swift::String v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214(&qword_10069ED38);
  __chkstk_darwin(v8);
  unint64_t v9 = sub_100034190();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v10._countAndFlagsBits = 0xD000000000000025;
  v10._object = (void *)0x80000001005522D0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  unint64_t v11 = sub_1001FDE14();
  uint64_t v51 = a1;
  unint64_t v52 = v11;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._countAndFlagsBits = 46;
  v12._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v50 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v13 = v55 + 8;
  uint64_t v53 = *(void (**)(char *, uint64_t))(v55 + 8);
  v53(v7, v4);
  uint64_t v55 = v13;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v14._countAndFlagsBits = 0xD000000000000017;
  v14._object = (void *)0x8000000100552300;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v49 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v16 = v54;
  v53(v7, v54);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v17._object = (void *)0x8000000100552110;
  v17._countAndFlagsBits = 0xD000000000000012;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  uint64_t v18 = v46;
  uint64_t v19 = v47;
  uint64_t v20 = v48;
  (*(void (**)(char *, void, uint64_t))(v47 + 104))(v46, enum case for _AssistantIntent.PhraseToken.applicationName(_:), v48);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v20);
  v21._countAndFlagsBits = 0x6E69207461687420;
  v21._object = (void *)0xEE00206564756C63;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v22._countAndFlagsBits = 46;
  v22._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  unint64_t v44 = v9;
  uint64_t v48 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v23 = v16;
  Swift::String v24 = v53;
  v53(v7, v23);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v25._countAndFlagsBits = 0xD000000000000021;
  v25._object = (void *)0x8000000100552320;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v26._countAndFlagsBits = 46;
  v26._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v47 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v27 = v54;
  v24(v7, v54);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v28._countAndFlagsBits = 0xD000000000000028;
  v28._object = (void *)0x8000000100552350;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v29._countAndFlagsBits = 46;
  v29._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v29);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v46 = (char *)static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v24(v7, v27);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v30._countAndFlagsBits = 0xD000000000000010;
  v30._object = (void *)0x80000001005521C0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v30);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v31._countAndFlagsBits = 0xD00000000000001FLL;
  v31._object = (void *)0x80000001005521E0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v31);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v32._countAndFlagsBits = 46;
  v32._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v32);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v45 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v33 = v53;
  v53(v7, v54);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v34._countAndFlagsBits = 0xD000000000000018;
  v34._object = (void *)0x8000000100552200;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v35._object = (void *)0x8000000100552220;
  v35._countAndFlagsBits = 0xD000000000000012;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v35);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v36._countAndFlagsBits = 0x2E7367617420;
  v36._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v36);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v37 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v33(v7, v54);
  sub_10002F214(&qword_10069ED40);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_10052AC60;
  uint64_t v39 = v49;
  *(void *)(v38 + 32) = v50;
  *(void *)(v38 + 40) = v39;
  uint64_t v40 = v47;
  *(void *)(v38 + 48) = v48;
  *(void *)(v38 + 56) = v40;
  uint64_t v41 = v45;
  *(void *)(v38 + 64) = v46;
  *(void *)(v38 + 72) = v41;
  *(void *)(v38 + 80) = v37;
  uint64_t v42 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v42;
}

uint64_t sub_1001E13A0(uint64_t a1)
{
  return sub_1001E1E9C(a1, (uint64_t)sub_1001E13E0, (uint64_t)sub_1001E14B4, (uint64_t)sub_1001E05DC);
}

uint64_t sub_1001E13E0()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100529A00;
  *(void *)(v3 + 32) = v0;
  *(void *)(v3 + 40) = v1;
  *(void *)(v3 + 48) = v2;
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1001E14B4()
{
  return sub_1001FA838();
}

uint64_t sub_1001E14EC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for _AssistantIntent.PhraseToken();
  uint64_t v47 = *(void *)(v2 - 8);
  uint64_t v48 = v2;
  __chkstk_darwin(v2);
  uint64_t v46 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214(&qword_10069ED30);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v54 = v4;
  uint64_t v55 = v5;
  __chkstk_darwin(v4);
  Swift::String v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214(&qword_10069ED38);
  __chkstk_darwin(v8);
  unint64_t v9 = sub_100034190();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v10._countAndFlagsBits = 0xD000000000000028;
  v10._object = (void *)0x80000001005520B0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  unint64_t v11 = sub_1001FDE14();
  uint64_t v51 = a1;
  unint64_t v52 = v11;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._countAndFlagsBits = 46;
  v12._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v50 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v13 = v55 + 8;
  uint64_t v53 = *(void (**)(char *, uint64_t))(v55 + 8);
  v53(v7, v4);
  uint64_t v55 = v13;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v14._countAndFlagsBits = 0xD000000000000027;
  v14._object = (void *)0x80000001005520E0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._countAndFlagsBits = 0x2E7367617420;
  v15._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v49 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v16 = v54;
  v53(v7, v54);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v17._object = (void *)0x8000000100552110;
  v17._countAndFlagsBits = 0xD000000000000012;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  uint64_t v18 = v46;
  uint64_t v19 = v47;
  uint64_t v20 = v48;
  (*(void (**)(char *, void, uint64_t))(v47 + 104))(v46, enum case for _AssistantIntent.PhraseToken.applicationName(_:), v48);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v20);
  v21._countAndFlagsBits = 0xD000000000000015;
  v21._object = (void *)0x8000000100552130;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v22._countAndFlagsBits = 46;
  v22._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  unint64_t v44 = v9;
  uint64_t v48 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v23 = v16;
  Swift::String v24 = v53;
  v53(v7, v23);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v25._countAndFlagsBits = 0xD000000000000024;
  v25._object = (void *)0x8000000100552150;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v26._countAndFlagsBits = 46;
  v26._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v47 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v27 = v54;
  v24(v7, v54);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v28._countAndFlagsBits = 0xD000000000000034;
  v28._object = (void *)0x8000000100552180;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v29._countAndFlagsBits = 46;
  v29._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v29);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v46 = (char *)static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v24(v7, v27);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v30._countAndFlagsBits = 0xD000000000000010;
  v30._object = (void *)0x80000001005521C0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v30);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v31._countAndFlagsBits = 0xD00000000000001FLL;
  v31._object = (void *)0x80000001005521E0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v31);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v32._countAndFlagsBits = 46;
  v32._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v32);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v45 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v33 = v53;
  v53(v7, v54);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v34._countAndFlagsBits = 0xD000000000000018;
  v34._object = (void *)0x8000000100552200;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v35._object = (void *)0x8000000100552220;
  v35._countAndFlagsBits = 0xD000000000000012;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v35);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v36._countAndFlagsBits = 0x2E7367617420;
  v36._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v36);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v37 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v33(v7, v54);
  sub_10002F214(&qword_10069ED40);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_10052AC60;
  uint64_t v39 = v49;
  *(void *)(v38 + 32) = v50;
  *(void *)(v38 + 40) = v39;
  uint64_t v40 = v47;
  *(void *)(v38 + 48) = v48;
  *(void *)(v38 + 56) = v40;
  uint64_t v41 = v45;
  *(void *)(v38 + 64) = v46;
  *(void *)(v38 + 72) = v41;
  *(void *)(v38 + 80) = v37;
  uint64_t v42 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v42;
}

uint64_t sub_1001E1E5C(uint64_t a1)
{
  return sub_1001E1E9C(a1, (uint64_t)sub_1001E20E0, (uint64_t)sub_1001E21B0, (uint64_t)sub_1001E0A20);
}

uint64_t sub_1001E1E9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v15[1] = a4;
  uint64_t v4 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  Swift::String v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1001FDE14();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_100034190();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v8 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  unint64_t v9 = *(void (**)(char *, uint64_t))(v5 + 8);
  v9(v7, v4);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v10 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v9(v7, v4);
  swift_getKeyPath();
  sub_1001FEF10();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v11 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v9(v7, v4);
  sub_10002F214(&qword_10069E960);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_100529A00;
  *(void *)(v12 + 32) = v8;
  *(void *)(v12 + 40) = v10;
  *(void *)(v12 + 48) = v11;
  uint64_t v13 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1001E20E0()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100529A00;
  *(void *)(v3 + 32) = v0;
  *(void *)(v3 + 40) = v1;
  *(void *)(v3 + 48) = v2;
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1001E21B0()
{
  return sub_1001FA838();
}

uint64_t sub_1001E21E8()
{
  uint64_t v0 = sub_10002F214(&qword_10069ED18);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001FD618();
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v4 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v6 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_10002F214(&qword_10069ED20);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10052AC50;
  *(void *)(v9 + 32) = v4;
  *(void *)(v9 + 40) = v6;
  *(void *)(v9 + 48) = v7;
  *(void *)(v9 + 56) = v8;
  uint64_t v10 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1001E2444()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1001FED24();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1001FD618();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  swift_getKeyPath();
  sub_1001FF454(&qword_10069ED10, (void (*)(uint64_t))&type metadata accessor for ChangeOperation);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_10002F214(&qword_10069E960);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100527F30;
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v6;
  uint64_t v8 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1001E265C()
{
  return sub_1001FAB98();
}

uint64_t sub_1001E2678()
{
  return sub_1001FAB98();
}

uint64_t sub_1001E2690()
{
  uint64_t v0 = sub_10002F214(&qword_10069ED18);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001FD618();
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v4 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v6 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_10002F214(&qword_10069ED20);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10052AC50;
  *(void *)(v9 + 32) = v4;
  *(void *)(v9 + 40) = v6;
  *(void *)(v9 + 48) = v7;
  *(void *)(v9 + 56) = v8;
  uint64_t v10 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1001E28E8()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1001FED24();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1001FD618();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  swift_getKeyPath();
  sub_1001FF454(&qword_10069ED10, (void (*)(uint64_t))&type metadata accessor for ChangeOperation);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_10002F214(&qword_10069E960);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100527F30;
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v6;
  uint64_t v8 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1001E2B00()
{
  uint64_t v0 = sub_10002F214(&qword_10069ED18);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001FD618();
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v4 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v6 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_10002F214(&qword_10069ED20);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10052AC50;
  *(void *)(v9 + 32) = v4;
  *(void *)(v9 + 40) = v6;
  *(void *)(v9 + 48) = v7;
  *(void *)(v9 + 56) = v8;
  uint64_t v10 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1001E2D5C()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1001FED24();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1001FD618();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  swift_getKeyPath();
  sub_1001FF454(&qword_10069ED10, (void (*)(uint64_t))&type metadata accessor for ChangeOperation);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_10002F214(&qword_10069E960);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100527F30;
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v6;
  uint64_t v8 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1001E2F74()
{
  return sub_1001FAB98();
}

uint64_t sub_1001E2F90()
{
  uint64_t v0 = sub_10002F214(&qword_10069ED18);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001FD618();
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v4 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v6 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_10002F214(&qword_10069ED20);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10052AC50;
  *(void *)(v9 + 32) = v4;
  *(void *)(v9 + 40) = v6;
  *(void *)(v9 + 48) = v7;
  *(void *)(v9 + 56) = v8;
  uint64_t v10 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1001E31E8()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1001FED24();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1001FD618();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  swift_getKeyPath();
  sub_1001FF454(&qword_10069ED10, (void (*)(uint64_t))&type metadata accessor for ChangeOperation);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_10002F214(&qword_10069E960);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100527F30;
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v6;
  uint64_t v8 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1001E3400()
{
  uint64_t v0 = sub_10002F214(&qword_10069ED18);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001FD618();
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v4 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v6 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_10002F214(&qword_10069ED20);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_100529A00;
  *(void *)(v8 + 32) = v4;
  *(void *)(v8 + 40) = v6;
  *(void *)(v8 + 48) = v7;
  uint64_t v9 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1001E360C()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1001FED24();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1001FD618();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  swift_getKeyPath();
  sub_1001FF454(&qword_10069ED10, (void (*)(uint64_t))&type metadata accessor for ChangeOperation);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_10002F214(&qword_10069E960);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100527F30;
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v6;
  uint64_t v8 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1001E3824()
{
  return sub_1001FAB98();
}

uint64_t sub_1001E3844()
{
  uint64_t v0 = sub_10002F214(&qword_10069ED18);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001FD618();
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v13 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v4 = *(void (**)(char *, uint64_t))(v1 + 8);
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v6 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  sub_10002F214(&qword_10069ED20);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10052AC40;
  *(void *)(v9 + 32) = v13;
  *(void *)(v9 + 40) = v5;
  *(void *)(v9 + 48) = v6;
  *(void *)(v9 + 56) = v7;
  *(void *)(v9 + 64) = v8;
  uint64_t v10 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1001E3AF4()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1001FED24();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1001FD618();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  swift_getKeyPath();
  sub_1001FF454(&qword_10069ED10, (void (*)(uint64_t))&type metadata accessor for ChangeOperation);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_10002F214(&qword_10069E960);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100527F30;
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v6;
  uint64_t v8 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1001E3D0C()
{
  uint64_t v0 = sub_10002F214(&qword_10069ED18);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001FD618();
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v13 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v4 = *(void (**)(char *, uint64_t))(v1 + 8);
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v6 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  sub_10002F214(&qword_10069ED20);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10052AC40;
  *(void *)(v9 + 32) = v13;
  *(void *)(v9 + 40) = v5;
  *(void *)(v9 + 48) = v6;
  *(void *)(v9 + 56) = v7;
  *(void *)(v9 + 64) = v8;
  uint64_t v10 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1001E3FC8()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1001FED24();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1001FD618();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  swift_getKeyPath();
  sub_1001FF454(&qword_10069ED10, (void (*)(uint64_t))&type metadata accessor for ChangeOperation);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_10002F214(&qword_10069E960);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100527F30;
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v6;
  uint64_t v8 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1001E41E0()
{
  return sub_1001FAB98();
}

uint64_t sub_1001E41FC()
{
  uint64_t v0 = sub_10002F214(&qword_10069ED18);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001FD618();
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v13 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v4 = *(void (**)(char *, uint64_t))(v1 + 8);
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v6 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  sub_10002F214(&qword_10069ED20);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10052AC40;
  *(void *)(v9 + 32) = v13;
  *(void *)(v9 + 40) = v5;
  *(void *)(v9 + 48) = v6;
  *(void *)(v9 + 56) = v7;
  *(void *)(v9 + 64) = v8;
  uint64_t v10 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1001E44B8()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1001FED24();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1001FD618();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  swift_getKeyPath();
  sub_1001FF454(&qword_10069ED10, (void (*)(uint64_t))&type metadata accessor for ChangeOperation);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_10002F214(&qword_10069E960);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100527F30;
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v6;
  uint64_t v8 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1001E46D0()
{
  return sub_1001FAB98();
}

uint64_t sub_1001E46EC()
{
  uint64_t v0 = sub_10002F214(&qword_10069ED18);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001FD618();
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v13 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v4 = *(void (**)(char *, uint64_t))(v1 + 8);
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v6 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  sub_10002F214(&qword_10069ED20);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10052AC40;
  *(void *)(v9 + 32) = v13;
  *(void *)(v9 + 40) = v5;
  *(void *)(v9 + 48) = v6;
  *(void *)(v9 + 56) = v7;
  *(void *)(v9 + 64) = v8;
  uint64_t v10 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1001E49A0()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1001FED24();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1001FD618();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  swift_getKeyPath();
  sub_1001FF454(&qword_10069ED10, (void (*)(uint64_t))&type metadata accessor for ChangeOperation);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_10002F214(&qword_10069E960);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100527F30;
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v6;
  uint64_t v8 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1001E4BB8()
{
  return sub_1001FAB98();
}

uint64_t sub_1001E4BD4()
{
  uint64_t v0 = sub_10002F214(&qword_10069ED18);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001FD618();
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v13 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v4 = *(void (**)(char *, uint64_t))(v1 + 8);
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v6 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  sub_10002F214(&qword_10069ED20);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10052AC40;
  *(void *)(v9 + 32) = v13;
  *(void *)(v9 + 40) = v5;
  *(void *)(v9 + 48) = v6;
  *(void *)(v9 + 56) = v7;
  *(void *)(v9 + 64) = v8;
  uint64_t v10 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1001E4E88()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1001FED24();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1001FD618();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  swift_getKeyPath();
  sub_1001FF454(&qword_10069ED10, (void (*)(uint64_t))&type metadata accessor for ChangeOperation);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_10002F214(&qword_10069E960);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100527F30;
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v6;
  uint64_t v8 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1001E50A0(uint64_t a1)
{
  uint64_t v34 = a1;
  uint64_t v35 = sub_10002F214(&qword_10069ECF0);
  uint64_t v33 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v2 = (char *)&v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10002F214(&qword_10069ECF8);
  __chkstk_darwin(v3);
  sub_1001FD3CC();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v4._countAndFlagsBits = 0xD000000000000016;
  v4._object = (void *)0x8000000100551670;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v4);
  swift_getKeyPath();
  unint64_t v32 = sub_1001FE33C();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v5._countAndFlagsBits = 0x2E65746F6E20;
  v5._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v31 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v6 = v33 + 8;
  Swift::String v26 = *(void (**)(char *, uint64_t))(v33 + 8);
  uint64_t v7 = v35;
  v26(v2, v35);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v8._countAndFlagsBits = 0xD000000000000017;
  v8._object = (void *)0x8000000100551690;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v9._countAndFlagsBits = 0x2E65746F6E20;
  v9._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v30 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v10 = v26;
  v26(v2, v7);
  uint64_t v33 = v6;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._countAndFlagsBits = 0xD000000000000022;
  v11._object = (void *)0x80000001005516B0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._countAndFlagsBits = 0x2E65746F6E20;
  v12._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v29 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v10(v2, v35);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v13._countAndFlagsBits = 0xD00000000000001BLL;
  v13._object = (void *)0x80000001005516E0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  swift_getKeyPath();
  unint64_t v32 = sub_1001FE920(&qword_10069EC80, &qword_10069EC88, (void (*)(void))sub_1001FDDB8);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v28 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v10(v2, v35);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v15._countAndFlagsBits = 0xD00000000000001FLL;
  v15._object = (void *)0x8000000100551700;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v27 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v17 = v35;
  v10(v2, v35);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v18._countAndFlagsBits = 544503120;
  v18._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v19._object = (void *)0x8000000100551720;
  v19._countAndFlagsBits = 0xD000000000000010;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v20 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v10(v2, v17);
  sub_10002F214(&qword_10069ED00);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_10052AC70;
  uint64_t v22 = v30;
  *(void *)(v21 + 32) = v31;
  *(void *)(v21 + 40) = v22;
  uint64_t v23 = v28;
  *(void *)(v21 + 48) = v29;
  *(void *)(v21 + 56) = v23;
  *(void *)(v21 + 64) = v27;
  *(void *)(v21 + 72) = v20;
  uint64_t v24 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t sub_1001E57A4()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1001FE33C();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1001FD3CC();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  Swift::String v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  swift_getKeyPath();
  sub_1001FE920(&qword_10069EC80, &qword_10069EC88, (void (*)(void))sub_1001FDDB8);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_10002F214(&qword_10069E960);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100527F30;
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v6;
  uint64_t v8 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1001E59B0()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100529A00;
  *(void *)(v3 + 32) = v0;
  *(void *)(v3 + 40) = v1;
  *(void *)(v3 + 48) = v2;
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1001E5A78()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100529A00;
  *(void *)(v3 + 32) = v0;
  *(void *)(v3 + 40) = v1;
  *(void *)(v3 + 48) = v2;
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1001E5B3C(uint64_t a1)
{
  uint64_t v47 = a1;
  uint64_t v1 = sub_10002F214(&qword_10069ECD8);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002F214(&qword_10069ECE0);
  __chkstk_darwin(v5);
  uint64_t FolderIntent = type metadata accessor for CreateFolderIntent();
  uint64_t v7 = sub_1001FF454(&qword_1006A2D90, (void (*)(uint64_t))type metadata accessor for CreateFolderIntent);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v8._countAndFlagsBits = 0xD00000000000001BLL;
  v8._object = (void *)0x8000000100551540;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  swift_getKeyPath();
  uint64_t v52 = sub_1001FE920(&qword_10069EC80, &qword_10069EC88, (void (*)(void))sub_1001FDDB8);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v9._countAndFlagsBits = 46;
  v9._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  uint64_t v48 = v4;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v45 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v51 = *(void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v49 = v1;
  v51(v4, v1);
  uint64_t v50 = v2 + 8;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v10._countAndFlagsBits = 0xD000000000000014;
  v10._object = (void *)0x8000000100551560;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v11._countAndFlagsBits = 46;
  v11._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  Swift::String v12 = v48;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v44 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v13 = v51;
  v51(v12, v1);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v14._countAndFlagsBits = 0xD00000000000001DLL;
  v14._object = (void *)0x8000000100551580;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._countAndFlagsBits = 46;
  v15._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  Swift::String v16 = v48;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v46 = FolderIntent;
  uint64_t v43 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v17 = v49;
  v13(v16, v49);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v18._countAndFlagsBits = 0x6120707520746553;
  v18._object = (void *)0xED00002077656E20;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v19._countAndFlagsBits = 0x2E7265646C6F6620;
  v19._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v42 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v13(v16, v17);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v20._countAndFlagsBits = 0x206120646441;
  v20._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v21._countAndFlagsBits = 0x207265646C6F6620;
  v21._object = (void *)0xEE0020796D206F74;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  swift_getKeyPath();
  v39[2] = sub_1001FEAEC();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v22._countAndFlagsBits = 0x2E7265646C6F6620;
  v22._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  uint64_t v23 = v48;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  v39[1] = v7;
  uint64_t v41 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v24 = v23;
  uint64_t v25 = v49;
  v51(v23, v49);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v26._countAndFlagsBits = 0x206120656B614DLL;
  v26._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v27._object = (void *)0x80000001005515A0;
  v27._countAndFlagsBits = 0xD000000000000011;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v28._countAndFlagsBits = 0x2E7265646C6F6620;
  v28._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v40 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v51(v23, v25);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v29._countAndFlagsBits = 0x20656874206E49;
  v29._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v29);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v30._countAndFlagsBits = 0xD000000000000023;
  v30._object = (void *)0x80000001005515C0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v30);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v31._countAndFlagsBits = 46;
  v31._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v31);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v32 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v51(v24, v49);
  sub_10002F214(&qword_10069ECE8);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_10052AC60;
  uint64_t v34 = v44;
  *(void *)(v33 + 32) = v45;
  *(void *)(v33 + 40) = v34;
  uint64_t v35 = v42;
  *(void *)(v33 + 48) = v43;
  *(void *)(v33 + 56) = v35;
  uint64_t v36 = v40;
  *(void *)(v33 + 64) = v41;
  *(void *)(v33 + 72) = v36;
  *(void *)(v33 + 80) = v32;
  uint64_t v37 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v37;
}

uint64_t sub_1001E6498()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1001FE920(&qword_10069EC80, &qword_10069EC88, (void (*)(void))sub_1001FDDB8);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1001FF454(&qword_1006A2D90, (void (*)(uint64_t))type metadata accessor for CreateFolderIntent);
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  swift_getKeyPath();
  sub_1001FEAEC();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_10002F214(&qword_10069E960);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100527F30;
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v6;
  uint64_t v8 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1001E66D4()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10052AC40;
  *(void *)(v5 + 32) = v0;
  *(void *)(v5 + 40) = v1;
  *(void *)(v5 + 48) = v2;
  *(void *)(v5 + 56) = v3;
  *(void *)(v5 + 64) = v4;
  uint64_t v6 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1001E6804()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10052AC50;
  *(void *)(v4 + 32) = v0;
  *(void *)(v4 + 40) = v1;
  *(void *)(v4 + 48) = v2;
  *(void *)(v4 + 56) = v3;
  uint64_t v5 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1001E68F4(uint64_t a1)
{
  uint64_t v49 = a1;
  uint64_t v1 = sub_10002F214(&qword_10069ECC0);
  uint64_t v47 = v1;
  uint64_t v50 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214(&qword_10069ECC8);
  __chkstk_darwin(v4);
  sub_100035308();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._countAndFlagsBits = 0xD00000000000001ELL;
  v5._object = (void *)0x8000000100551420;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  uint64_t v6 = sub_1001FE920(&qword_10069EC80, &qword_10069EC88, (void (*)(void))sub_1001FDDB8);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v7._countAndFlagsBits = 46;
  v7._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v44 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v50 + 8);
  v50 += 8;
  v8(v3, v1);
  uint64_t v46 = v8;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v9._countAndFlagsBits = 0x6120657461657243;
  v9._object = (void *)0xED00002077656E20;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  swift_getKeyPath();
  uint64_t v48 = v6;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v10._countAndFlagsBits = 0x2E65746F6E20;
  v10._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v43 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v8(v3, v47);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._object = (void *)0x8000000100551440;
  v11._countAndFlagsBits = 0xD000000000000017;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._countAndFlagsBits = 0xD000000000000018;
  v12._object = (void *)0x8000000100551460;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v42 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v13 = v47;
  v46(v3, v47);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v14._countAndFlagsBits = 0xD000000000000016;
  v14._object = (void *)0x8000000100551480;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._countAndFlagsBits = 46;
  v15._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v41 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v16 = v46;
  v46(v3, v13);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v17._object = (void *)0x80000001005514A0;
  v17._countAndFlagsBits = 0xD000000000000017;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v18._countAndFlagsBits = 46;
  v18._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v40 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v16(v3, v13);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v19._countAndFlagsBits = 0xD000000000000012;
  v19._object = (void *)0x80000001005514C0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v20._countAndFlagsBits = 0x20796D206F7420;
  v20._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  swift_getKeyPath();
  unint64_t v45 = sub_1001FEAEC();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v21._countAndFlagsBits = 0x7265646C6F6620;
  v21._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v39 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v22 = (void (*)(char *))v16;
  v16(v3, v47);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v23._countAndFlagsBits = 0x2061207472617453;
  v23._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v24._countAndFlagsBits = 0x6E692065746F6E20;
  v24._object = (void *)0xED00002065687420;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v25._countAndFlagsBits = 0x7265646C6F6620;
  v25._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v38 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v26 = v47;
  v22(v3);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v27._countAndFlagsBits = 0xD000000000000015;
  v27._object = (void *)0x80000001005514E0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v28._countAndFlagsBits = 0x20796D206E6920;
  v28._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v29._countAndFlagsBits = 0x7265646C6F6620;
  v29._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v29);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v30 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v46(v3, v26);
  sub_10002F214(&qword_10069ECD0);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_10052AC80;
  uint64_t v32 = v43;
  *(void *)(v31 + 32) = v44;
  *(void *)(v31 + 40) = v32;
  uint64_t v33 = v41;
  *(void *)(v31 + 48) = v42;
  *(void *)(v31 + 56) = v33;
  uint64_t v34 = v39;
  *(void *)(v31 + 64) = v40;
  *(void *)(v31 + 72) = v34;
  *(void *)(v31 + 80) = v38;
  *(void *)(v31 + 88) = v30;
  uint64_t v35 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v35;
}

uint64_t sub_1001E72F0(uint64_t a1)
{
  uint64_t v2 = sub_10002F214(&qword_10069B260);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  Swift::String v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  Swift::String v7 = (char *)&v9 - v6;
  sub_10002F034(a1, (uint64_t)&v9 - v6, &qword_10069B260);
  sub_10002F034((uint64_t)v7, (uint64_t)v5, &qword_10069B260);
  IntentParameter.wrappedValue.setter();
  return sub_10002B754((uint64_t)v7, &qword_10069B260);
}

uint64_t sub_1001E73CC()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1001FE920(&qword_10069EC80, &qword_10069EC88, (void (*)(void))sub_1001FDDB8);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_100035308();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  Swift::String v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  swift_getKeyPath();
  sub_1001FEAEC();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_10002F214(&qword_10069E960);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100527F30;
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v6;
  uint64_t v8 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1001E75D8()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10052AC40;
  *(void *)(v5 + 32) = v0;
  *(void *)(v5 + 40) = v1;
  *(void *)(v5 + 48) = v2;
  *(void *)(v5 + 56) = v3;
  *(void *)(v5 + 64) = v4;
  uint64_t v6 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1001E7700()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10052AC50;
  *(void *)(v4 + 32) = v0;
  *(void *)(v4 + 40) = v1;
  *(void *)(v4 + 48) = v2;
  *(void *)(v4 + 56) = v3;
  uint64_t v5 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1001E77D4(uint64_t a1)
{
  uint64_t v47 = sub_10002F214(&qword_10069ECA8);
  uint64_t v44 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v3 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214(&qword_10069ECB0);
  __chkstk_darwin(v4);
  sub_1001FD420();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._countAndFlagsBits = 0xD000000000000014;
  v5._object = (void *)0x80000001005512E0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  uint64_t v45 = sub_1001FF454((unint64_t *)&qword_10069CD70, (void (*)(uint64_t))type metadata accessor for NoteEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._countAndFlagsBits = 0x2E65746F6E20;
  v6._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v41 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v7 = v44 + 8;
  uint64_t v46 = *(void (**)(char *, uint64_t))(v44 + 8);
  v46(v3, v47);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v8._object = (void *)0x8000000100551300;
  uint64_t v39 = (void *)0x8000000100551300;
  v8._countAndFlagsBits = 0xD000000000000017;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v9._countAndFlagsBits = 0x2E65746F6E20;
  v9._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v40 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v46(v3, v47);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v10._countAndFlagsBits = 0xD00000000000001ELL;
  v10._object = (void *)0x8000000100551320;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  uint64_t v42 = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v11._countAndFlagsBits = 0x2E65746F6E20;
  v11._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v38 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v12 = v46;
  uint64_t v44 = v7;
  v46(v3, v47);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v13._countAndFlagsBits = 0x20796D206E49;
  v13._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v14._countAndFlagsBits = 0xD00000000000001ALL;
  v14._object = (void *)0x8000000100551340;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v37 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v15 = v47;
  v12(v3, v47);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v16._object = (void *)0x8000000100551360;
  v16._countAndFlagsBits = 0xD000000000000017;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  swift_getKeyPath();
  uint64_t v43 = sub_1001FE920(&qword_10069EC80, &qword_10069EC88, (void (*)(void))sub_1001FDDB8);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v17._countAndFlagsBits = 0x6D206F746E692027;
  v17._object = (void *)0xEA00000000002079;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v18._countAndFlagsBits = 0x2E65746F6E20;
  v18._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v36 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v46(v3, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v19._countAndFlagsBits = 0xD000000000000018;
  v19._object = (void *)0x8000000100551380;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v20._countAndFlagsBits = 0xD000000000000019;
  v20._object = (void *)0x80000001005513A0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v21._countAndFlagsBits = 11815;
  v21._object = (void *)0xE200000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v35 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v22 = v46;
  uint64_t v23 = v47;
  v46(v3, v47);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v24._countAndFlagsBits = 0xD000000000000017;
  v24._object = v39;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v25._countAndFlagsBits = 0xD000000000000016;
  v25._object = (void *)0x80000001005513C0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v26._countAndFlagsBits = 11815;
  v26._object = (void *)0xE200000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v27 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v22(v3, v23);
  sub_10002F214(&qword_10069ECB8);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_10052AC60;
  uint64_t v29 = v40;
  *(void *)(v28 + 32) = v41;
  *(void *)(v28 + 40) = v29;
  uint64_t v30 = v37;
  *(void *)(v28 + 48) = v38;
  *(void *)(v28 + 56) = v30;
  uint64_t v31 = v35;
  *(void *)(v28 + 64) = v36;
  *(void *)(v28 + 72) = v31;
  *(void *)(v28 + 80) = v27;
  uint64_t v32 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v32;
}

uint64_t sub_1001E8108(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NoteEntity(0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  Swift::String v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1001FE240(a1, (uint64_t)&v9 - v6, type metadata accessor for NoteEntity);
  sub_1001FE240((uint64_t)v7, (uint64_t)v5, type metadata accessor for NoteEntity);
  IntentParameter.wrappedValue.setter();
  return sub_1001FE2A8((uint64_t)v7, type metadata accessor for NoteEntity);
}

uint64_t sub_1001E81F0()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1001FF454((unint64_t *)&qword_10069CD70, (void (*)(uint64_t))type metadata accessor for NoteEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1001FD420();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  Swift::String v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  swift_getKeyPath();
  sub_1001FE920(&qword_10069EC80, &qword_10069EC88, (void (*)(void))sub_1001FDDB8);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_10002F214(&qword_10069E960);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100527F30;
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v6;
  uint64_t v8 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1001E842C()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100529A00;
  *(void *)(v3 + 32) = v0;
  *(void *)(v3 + 40) = v1;
  *(void *)(v3 + 48) = v2;
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1001E8508()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100529A00;
  *(void *)(v3 + 32) = v0;
  *(void *)(v3 + 40) = v1;
  *(void *)(v3 + 48) = v2;
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1001E85D4(uint64_t a1)
{
  uint64_t v35 = a1;
  uint64_t v34 = sub_10002F214(&qword_10069EC90);
  uint64_t v1 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214(&qword_10069EC98);
  __chkstk_darwin(v4);
  sub_1001FD474();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._countAndFlagsBits = 0x6174206120646441;
  v5._object = (void *)0xEE0020726F662067;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  uint64_t v33 = sub_1001FE920(&qword_10069EC80, &qword_10069EC88, (void (*)(void))sub_1001FDDB8);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._countAndFlagsBits = 46;
  v6._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v30 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v8 = v1 + 8;
  uint64_t v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  uint64_t v9 = v34;
  v7(v3, v34);
  uint64_t v31 = v8;
  uint64_t v32 = v7;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v10._countAndFlagsBits = 0xD000000000000015;
  v10._object = (void *)0x8000000100551200;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v11._countAndFlagsBits = 46;
  v11._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v29 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v7(v3, v9);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v12._countAndFlagsBits = 0xD00000000000002FLL;
  v12._object = (void *)0x8000000100551220;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v13._countAndFlagsBits = 46;
  v13._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v28 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v32(v3, v34);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v14._object = (void *)0x8000000100551250;
  v14._countAndFlagsBits = 0xD000000000000011;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._countAndFlagsBits = 46;
  v15._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v27 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v16 = v34;
  Swift::String v17 = v32;
  v32(v3, v34);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v18._countAndFlagsBits = 0x206120657355;
  v18._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v19._countAndFlagsBits = 0x2E67617420;
  v19._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v20 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v17(v3, v16);
  sub_10002F214(&qword_10069ECA0);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_10052AC40;
  uint64_t v22 = v29;
  *(void *)(v21 + 32) = v30;
  *(void *)(v21 + 40) = v22;
  uint64_t v23 = v27;
  *(void *)(v21 + 48) = v28;
  *(void *)(v21 + 56) = v23;
  *(void *)(v21 + 64) = v20;
  uint64_t v24 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t sub_1001E8BC0()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1001FE920(&qword_10069EC80, &qword_10069EC88, (void (*)(void))sub_1001FDDB8);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1001FD474();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_10002F214(&qword_10069E960);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100524D10;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1001E8D4C()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10052AC50;
  *(void *)(v4 + 32) = v0;
  *(void *)(v4 + 40) = v1;
  *(void *)(v4 + 48) = v2;
  *(void *)(v4 + 56) = v3;
  uint64_t v5 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1001E8E2C(uint64_t a1)
{
  uint64_t v30 = a1;
  uint64_t v1 = sub_10002F214(&qword_10069EC68);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002F214(&qword_10069EC70);
  __chkstk_darwin(v5);
  sub_1001FD66C();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v6._countAndFlagsBits = 0x74206574656C6544;
  v6._object = (void *)0xEB00000000206568;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  swift_getKeyPath();
  v25[1] = sub_1001FE804();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v7._countAndFlagsBits = 0x6D68636174746120;
  v7._object = (void *)0xEC0000002E746E65;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v29 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v32 = v2 + 8;
  uint64_t v33 = v8;
  uint64_t v31 = v1;
  v8(v4, v1);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v9._countAndFlagsBits = 0xD000000000000021;
  v9._object = (void *)0x8000000100551190;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v10._countAndFlagsBits = 46;
  v10._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v28 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v33(v4, v1);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._countAndFlagsBits = 0x742065766F6D6552;
  v11._object = (void *)0xEB00000000206568;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._object = (void *)0x80000001005511C0;
  v12._countAndFlagsBits = 0xD000000000000012;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v27 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v33(v4, v31);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v13._countAndFlagsBits = 0x2064697220746547;
  v13._object = (void *)0xEF2065687420666FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v14._countAndFlagsBits = 0x6D68636174746120;
  v14._object = (void *)0xEC0000002E746E65;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v26 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v15 = v31;
  uint64_t v16 = v33;
  v33(v4, v31);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v17._countAndFlagsBits = 0x742065766F6D6552;
  v17._object = (void *)0xEB00000000206568;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v18._countAndFlagsBits = 46;
  v18._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v19 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v16(v4, v15);
  sub_10002F214(&qword_10069EC78);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_10052AC40;
  uint64_t v21 = v28;
  *(void *)(v20 + 32) = v29;
  *(void *)(v20 + 40) = v21;
  uint64_t v22 = v26;
  *(void *)(v20 + 48) = v27;
  *(void *)(v20 + 56) = v22;
  *(void *)(v20 + 64) = v19;
  uint64_t v23 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_1001E9440(uint64_t a1)
{
  return sub_1001F8EE8(a1, (uint64_t)&unk_10052B288, (void (*)(void))sub_1001FE804, (void (*)(uint64_t))sub_1001FD66C);
}

uint64_t sub_1001E9488()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10052AC40;
  *(void *)(v5 + 32) = v0;
  *(void *)(v5 + 40) = v1;
  *(void *)(v5 + 48) = v2;
  *(void *)(v5 + 56) = v3;
  *(void *)(v5 + 64) = v4;
  uint64_t v6 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1001E9598(uint64_t a1)
{
  uint64_t v36 = a1;
  uint64_t v35 = sub_10002F214(&qword_10069EC48);
  uint64_t v1 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v3 = (char *)v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214(&qword_10069EC50);
  __chkstk_darwin(v4);
  sub_10017C0D4();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._countAndFlagsBits = 0x74206574656C6544;
  v5._object = (void *)0xEB00000000206568;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  v28[1] = sub_1001FDAAC();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._object = (void *)0x80000001005509C0;
  v6._countAndFlagsBits = 0xD000000000000013;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v9 = v1 + 8;
  uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  uint64_t v32 = v7;
  uint64_t v33 = v8;
  uint64_t v10 = v35;
  v8(v3, v35);
  uint64_t v34 = v9;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._countAndFlagsBits = 0x742065766F6D6552;
  v11._object = (void *)0xEB00000000206568;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._countAndFlagsBits = 0xD000000000000011;
  v12._object = (void *)0x80000001005509E0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v31 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v13 = v33;
  v33(v3, v10);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v14._countAndFlagsBits = 0x206574656C6544;
  v14._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._object = (void *)0x8000000100550A00;
  v15._countAndFlagsBits = 0xD000000000000013;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v30 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v13(v3, v35);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v16._countAndFlagsBits = 0x2064697220746547;
  v16._object = (void *)0xEF2065687420666FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v17._countAndFlagsBits = 0xD000000000000019;
  v17._object = (void *)0x8000000100550A40;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v29 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v18 = v35;
  uint64_t v19 = v33;
  v33(v3, v35);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v20._countAndFlagsBits = 0xD00000000000001DLL;
  v20._object = (void *)0x80000001005510F0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v21._countAndFlagsBits = 46;
  v21._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v22 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v19(v3, v18);
  sub_10002F214(&qword_10069EC58);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_10052AC40;
  uint64_t v24 = v31;
  *(void *)(v23 + 32) = v32;
  *(void *)(v23 + 40) = v24;
  uint64_t v25 = v29;
  *(void *)(v23 + 48) = v30;
  *(void *)(v23 + 56) = v25;
  *(void *)(v23 + 64) = v22;
  uint64_t v26 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v26;
}

uint64_t sub_1001E9BAC(uint64_t a1)
{
  return sub_1001F8EE8(a1, (uint64_t)&unk_10052B260, (void (*)(void))sub_1001FDAAC, (void (*)(uint64_t))sub_10017C0D4);
}

uint64_t sub_1001E9BF4()
{
  uint64_t v40 = type metadata accessor for _AssistantIntent.PhraseToken();
  uint64_t v42 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v39 = (char *)&v29 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v1 = sub_10002F214(&qword_10069EC30);
  uint64_t v41 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214(&qword_10069EC38);
  __chkstk_darwin(v4);
  sub_1001FD6C0();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._countAndFlagsBits = 0x6D206574656C6544;
  v5._object = (void *)0xEA00000000002079;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  unint64_t v38 = sub_1001FE6D8();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._countAndFlagsBits = 0x2E7265646C6F6620;
  v6._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v36 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v37 = v1;
  uint64_t v7 = *(void (**)(char *, uint64_t))(v41 + 8);
  v41 += 8;
  uint64_t v29 = v7;
  v7(v3, v1);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v8._countAndFlagsBits = 0x6D206574656C6544;
  v8._object = (void *)0xEA00000000002079;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v9._countAndFlagsBits = 0x207265646C6F6620;
  v9._object = (void *)0xED0000206D6F7266;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  unsigned int v34 = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  uint64_t v10 = v42;
  uint64_t v32 = *(void (**)(char *))(v42 + 104);
  uint64_t v33 = v42 + 104;
  Swift::String v12 = v39;
  uint64_t v11 = v40;
  v32(v39);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  Swift::String v13 = *(void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v42 = v10 + 8;
  uint64_t v31 = v13;
  v13(v12, v11);
  v14._countAndFlagsBits = 46;
  v14._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v35 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v15 = v1;
  Swift::String v16 = v29;
  v29(v3, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v17._countAndFlagsBits = 0x6D2065766F6D6552;
  v17._object = (void *)0xEA00000000002079;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v18._countAndFlagsBits = 0x2E7265646C6F6620;
  v18._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v30 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v16(v3, v37);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v19._countAndFlagsBits = 0x20796D2065766F4DLL;
  v19._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v20._countAndFlagsBits = 0x207265646C6F6620;
  v20._object = (void *)0xEB00000000206E69;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  Swift::String v21 = v39;
  uint64_t v22 = v40;
  ((void (*)(char *, void, uint64_t))v32)(v39, v34, v40);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  v31(v21, v22);
  v23._countAndFlagsBits = 0x20656874206F7420;
  v23._object = (void *)0xEE002E6873617254;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v24 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v16(v3, v37);
  sub_10002F214(&qword_10069EC40);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_10052AC50;
  uint64_t v26 = v35;
  *(void *)(v25 + 32) = v36;
  *(void *)(v25 + 40) = v26;
  *(void *)(v25 + 48) = v30;
  *(void *)(v25 + 56) = v24;
  uint64_t v27 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v27;
}

uint64_t sub_1001EA274(uint64_t a1)
{
  return sub_1001F8EE8(a1, (uint64_t)&unk_10052B238, (void (*)(void))sub_1001FE6D8, (void (*)(uint64_t))sub_1001FD6C0);
}

uint64_t sub_1001EA2BC()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10052AC50;
  *(void *)(v4 + 32) = v0;
  *(void *)(v4 + 40) = v1;
  *(void *)(v4 + 48) = v2;
  *(void *)(v4 + 56) = v3;
  uint64_t v5 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1001EA3A8(uint64_t a1)
{
  uint64_t v2 = sub_10002F214(&qword_10069EC10);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v29 = v2;
  uint64_t v30 = v3;
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214(&qword_10069EC18);
  __chkstk_darwin(v6);
  sub_1001FD714();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v7._countAndFlagsBits = 0x6D206574656C6544;
  v7._object = (void *)0xEA00000000002079;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  swift_getKeyPath();
  unint64_t v27 = sub_100162118();
  uint64_t v23 = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v8._countAndFlagsBits = 0x2E65746F6E20;
  v8._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v26 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v9 = v29;
  uint64_t v28 = *(void (**)(char *, uint64_t))(v30 + 8);
  v30 += 8;
  v28(v5, v29);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v10._countAndFlagsBits = 0x2064697220746547;
  v10._object = (void *)0xEE0020796D20666FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v11._countAndFlagsBits = 0x2E65746F6E20;
  v11._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v25 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v12 = v28;
  v28(v5, v9);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v13._countAndFlagsBits = 0x6D2065766F6D6552;
  v13._object = (void *)0xEA00000000002079;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v14._countAndFlagsBits = 0x2E65746F6E20;
  v14._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v24 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v15 = v29;
  v12(v5, v29);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v16._object = (void *)0x80000001005510B0;
  v16._countAndFlagsBits = 0xD000000000000014;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v17._countAndFlagsBits = 0x20656874206F7420;
  v17._object = (void *)0xEE002E6873617254;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v18 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v28(v5, v15);
  sub_10002F214(&qword_10069EC20);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_10052AC50;
  uint64_t v20 = v25;
  *(void *)(v19 + 32) = v26;
  *(void *)(v19 + 40) = v20;
  *(void *)(v19 + 48) = v24;
  *(void *)(v19 + 56) = v18;
  uint64_t v21 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_1001EA8C4(uint64_t a1)
{
  return sub_1001F8EE8(a1, (uint64_t)&unk_10052B210, (void (*)(void))sub_100162118, (void (*)(uint64_t))sub_1001FD714);
}

uint64_t sub_1001EA90C()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10052AC50;
  *(void *)(v4 + 32) = v0;
  *(void *)(v4 + 40) = v1;
  *(void *)(v4 + 48) = v2;
  *(void *)(v4 + 56) = v3;
  uint64_t v5 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1001EA9FC(uint64_t a1)
{
  uint64_t v35 = a1;
  uint64_t v34 = sub_10002F214(&qword_10069EBF8);
  uint64_t v1 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214(&qword_10069EC00);
  __chkstk_darwin(v4);
  sub_1001FD768();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._countAndFlagsBits = 0xD000000000000016;
  v5._object = (void *)0x8000000100550FA0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  unint64_t v33 = sub_1001FE5B4();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._countAndFlagsBits = 0x6E69206F666E6920;
  v6._object = (void *)0xEC0000002E746920;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v30 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v8 = v1 + 8;
  Swift::String v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  uint64_t v9 = v34;
  v7(v3, v34);
  uint64_t v31 = v8;
  uint64_t v32 = v7;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v10._countAndFlagsBits = 0xD00000000000001BLL;
  v10._object = (void *)0x8000000100550FC0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v11._object = (void *)0x8000000100550FE0;
  v11._countAndFlagsBits = 0xD000000000000013;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v29 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v7(v3, v9);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v12._countAndFlagsBits = 0xD000000000000025;
  v12._object = (void *)0x8000000100551000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v13._countAndFlagsBits = 46;
  v13._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v28 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v32(v3, v34);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v14._countAndFlagsBits = 0xD00000000000001FLL;
  v14._object = (void *)0x8000000100551030;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._countAndFlagsBits = 46;
  v15._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v27 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v16 = v34;
  Swift::String v17 = v32;
  v32(v3, v34);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v18._countAndFlagsBits = 0xD000000000000015;
  v18._object = (void *)0x8000000100551050;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v19._countAndFlagsBits = 0x2E7469206E6920;
  v19._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v20 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v17(v3, v16);
  sub_10002F214(&qword_10069EC08);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_10052AC40;
  uint64_t v22 = v29;
  *(void *)(v21 + 32) = v30;
  *(void *)(v21 + 40) = v22;
  uint64_t v23 = v27;
  *(void *)(v21 + 48) = v28;
  *(void *)(v21 + 56) = v23;
  *(void *)(v21 + 64) = v20;
  uint64_t v24 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t sub_1001EAFF8(uint64_t a1)
{
  return sub_1001F8EE8(a1, (uint64_t)&unk_10052B1E8, (void (*)(void))sub_1001FE5B4, (void (*)(uint64_t))sub_1001FD768);
}

uint64_t sub_1001EB040()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10052AC40;
  *(void *)(v5 + 32) = v0;
  *(void *)(v5 + 40) = v1;
  *(void *)(v5 + 48) = v2;
  *(void *)(v5 + 56) = v3;
  *(void *)(v5 + 64) = v4;
  uint64_t v6 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1001EB160(uint64_t a1)
{
  uint64_t v36 = a1;
  uint64_t v35 = sub_10002F214(&qword_10069EBD0);
  uint64_t v1 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v3 = (char *)v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214(&qword_10069EBD8);
  __chkstk_darwin(v4);
  sub_100035204();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._countAndFlagsBits = 0x74206574656C6544;
  v5._object = (void *)0xEB00000000206568;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  v28[1] = sub_1001FDE14();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._countAndFlagsBits = 0x2E67617420;
  v6._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v9 = v1 + 8;
  uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  uint64_t v32 = v7;
  unint64_t v33 = v8;
  uint64_t v10 = v35;
  v8(v3, v35);
  uint64_t v34 = v9;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._countAndFlagsBits = 0x2064697220746547;
  v11._object = (void *)0xEE0020796D20666FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._countAndFlagsBits = 0x2E67617420;
  v12._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v31 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v13 = v33;
  v33(v3, v10);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v14._countAndFlagsBits = 0x796D206873617254;
  v14._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._countAndFlagsBits = 0x2E67617420;
  v15._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v30 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v13(v3, v35);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v16._countAndFlagsBits = 0xD000000000000023;
  v16._object = (void *)0x8000000100550F50;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v17._countAndFlagsBits = 0x65746F4E206E6920;
  v17._object = (void *)0xEA00000000002E73;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v29 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v18 = v35;
  Swift::String v19 = v33;
  v33(v3, v35);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v20._countAndFlagsBits = 0x6568742065766F4DLL;
  v20._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v21._object = (void *)0x8000000100550F80;
  v21._countAndFlagsBits = 0xD000000000000012;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v22 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v19(v3, v18);
  sub_10002F214(&qword_10069EBE0);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_10052AC40;
  uint64_t v24 = v31;
  *(void *)(v23 + 32) = v32;
  *(void *)(v23 + 40) = v24;
  uint64_t v25 = v29;
  *(void *)(v23 + 48) = v30;
  *(void *)(v23 + 56) = v25;
  *(void *)(v23 + 64) = v22;
  uint64_t v26 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v26;
}

uint64_t sub_1001EB76C(uint64_t a1)
{
  return sub_1001F8EE8(a1, (uint64_t)&unk_10052B1C0, (void (*)(void))sub_1001FDE14, (void (*)(uint64_t))sub_100035204);
}

uint64_t sub_1001EB7B4()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10052AC40;
  *(void *)(v5 + 32) = v0;
  *(void *)(v5 + 40) = v1;
  *(void *)(v5 + 48) = v2;
  *(void *)(v5 + 56) = v3;
  *(void *)(v5 + 64) = v4;
  uint64_t v6 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1001EB8B4(uint64_t a1)
{
  uint64_t v27 = a1;
  uint64_t v1 = sub_10002F214(&qword_10069EBB8);
  uint64_t v26 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214(&qword_10069EBC0);
  __chkstk_darwin(v4);
  sub_1001FD7BC();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._object = (void *)0x8000000100550E60;
  v5._countAndFlagsBits = 0xD00000000000002ALL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  v21[1] = sub_1001FF454((unint64_t *)&qword_10069CD70, (void (*)(uint64_t))type metadata accessor for NoteEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._countAndFlagsBits = 0x2E65746F6E20;
  v6._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v25 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v7 = v26 + 8;
  uint64_t v22 = *(void (**)(char *, uint64_t))(v26 + 8);
  v21[0] = v1;
  v22(v3, v1);
  uint64_t v26 = v7;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v8._countAndFlagsBits = 0xD000000000000037;
  v8._object = (void *)0x8000000100550E90;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v9._countAndFlagsBits = 0x2E65746F6E20;
  v9._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v24 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v10 = v22;
  v22(v3, v1);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._countAndFlagsBits = 0xD00000000000002ELL;
  v11._object = (void *)0x8000000100550ED0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._countAndFlagsBits = 0x2E65746F6E20;
  v12._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v23 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v13 = v21[0];
  v10(v3, v21[0]);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v14._countAndFlagsBits = 0xD00000000000002BLL;
  v14._object = (void *)0x8000000100550F00;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._countAndFlagsBits = 0x2E65746F6E20;
  v15._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v16 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v10(v3, v13);
  sub_10002F214(&qword_10069EBC8);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_10052AC50;
  uint64_t v18 = v24;
  *(void *)(v17 + 32) = v25;
  *(void *)(v17 + 40) = v18;
  *(void *)(v17 + 48) = v23;
  *(void *)(v17 + 56) = v16;
  uint64_t v19 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_1001EBE08()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1001FF454((unint64_t *)&qword_10069CD70, (void (*)(uint64_t))type metadata accessor for NoteEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1001FD7BC();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_10002F214(&qword_10069E960);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100524D10;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1001EBFA0()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10052AC50;
  *(void *)(v4 + 32) = v0;
  *(void *)(v4 + 40) = v1;
  *(void *)(v4 + 48) = v2;
  *(void *)(v4 + 56) = v3;
  uint64_t v5 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1001EC07C(uint64_t a1)
{
  uint64_t v35 = a1;
  uint64_t v36 = sub_10002F214(&qword_10069EBA0);
  uint64_t v1 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214(&qword_10069EBA8);
  __chkstk_darwin(v4);
  sub_1001FD810();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._countAndFlagsBits = 0xD000000000000017;
  v5._object = (void *)0x8000000100550D50;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  unint64_t v34 = sub_1001FE33C();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._countAndFlagsBits = 0x2E65746F6E20;
  v6._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  uint64_t v29 = v1 + 8;
  uint64_t v32 = v7;
  unint64_t v33 = v8;
  uint64_t v9 = v36;
  v8(v3, v36);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v10._object = (void *)0x8000000100550D70;
  v10._countAndFlagsBits = 0x1000000000000013;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v11._countAndFlagsBits = 0x2E65746F6E20;
  v11._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v31 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v12 = v9;
  uint64_t v13 = v33;
  v33(v3, v12);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v14._countAndFlagsBits = 0xD00000000000001ELL;
  v14._object = (void *)0x8000000100550D90;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._countAndFlagsBits = 0x2E65746F6E20;
  v15._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v30 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v13(v3, v36);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v16._countAndFlagsBits = 0x1000000000000021;
  v16._object = (void *)0x8000000100550DB0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v17._countAndFlagsBits = 0x2E65746F6E20;
  v17._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v35 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v18 = v36;
  uint64_t v19 = v33;
  v33(v3, v36);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v20 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v19(v3, v18);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v21 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v19(v3, v18);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v22 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v19(v3, v18);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v23 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v19(v3, v18);
  sub_10002F214(&qword_10069EBB0);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_10052AC80;
  uint64_t v25 = v31;
  *(void *)(v24 + 32) = v32;
  *(void *)(v24 + 40) = v25;
  uint64_t v26 = v35;
  *(void *)(v24 + 48) = v30;
  *(void *)(v24 + 56) = v26;
  *(void *)(v24 + 64) = v20;
  *(void *)(v24 + 72) = v21;
  *(void *)(v24 + 80) = v22;
  *(void *)(v24 + 88) = v23;
  uint64_t v27 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v27;
}

uint64_t sub_1001EC6F0(uint64_t a1)
{
  uint64_t v2 = sub_10002F214(&qword_10069B1D0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  Swift::String v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v9 - v6;
  sub_10002F034(a1, (uint64_t)&v9 - v6, &qword_10069B1D0);
  sub_10002F034((uint64_t)v7, (uint64_t)v5, &qword_10069B1D0);
  IntentParameter.wrappedValue.setter();
  return sub_10002B754((uint64_t)v7, &qword_10069B1D0);
}

uint64_t sub_1001EC7CC(uint64_t a1)
{
  return sub_1001F8EE8(a1, (uint64_t)&unk_10052B170, (void (*)(void))sub_1001FE33C, (void (*)(uint64_t))sub_1001FD810);
}

uint64_t sub_1001EC814(uint64_t a1)
{
  uint64_t v33 = sub_10002F214(&qword_10069EB88);
  uint64_t v31 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v3 = (char *)v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214(&qword_10069EB90);
  __chkstk_darwin(v4);
  unint64_t v5 = sub_1001FD4C8();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v6._countAndFlagsBits = 0x206E6F69746E654DLL;
  v6._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  swift_getKeyPath();
  unint64_t v30 = sub_1001FDDB8();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v7._countAndFlagsBits = 0x20796D206E6920;
  v7._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  swift_getKeyPath();
  v25[1] = sub_1001FE33C();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v8._countAndFlagsBits = 0x2E65746F6E20;
  v8._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  unint64_t v29 = v5;
  uint64_t v28 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v31 + 8);
  v31 += 8;
  uint64_t v32 = v9;
  uint64_t v10 = v33;
  v9(v3, v33);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._countAndFlagsBits = 0x9D80E274419C80E2;
  v11._object = (void *)0xA900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  v25[0] = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._countAndFlagsBits = 0x20796D206E6920;
  v12._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v13._countAndFlagsBits = 0x2E65746F6E20;
  v13._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v27 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v32(v3, v10);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v14._object = (void *)0x8000000100550D10;
  v14._countAndFlagsBits = 0xD000000000000011;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._countAndFlagsBits = 0x6874206F746E6920;
  v15._object = (void *)0xEA00000000002065;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v16._countAndFlagsBits = 0x2E65746F6E20;
  v16._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v26 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v32(v3, v33);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v17._object = (void *)0x8000000100550D30;
  v17._countAndFlagsBits = 0x1000000000000011;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v18._countAndFlagsBits = 0x20656874206E6920;
  v18._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v19._countAndFlagsBits = 0x2E65746F6E20;
  v19._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v20 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v32(v3, v33);
  sub_10002F214(&qword_10069EB98);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_10052AC50;
  uint64_t v22 = v27;
  *(void *)(v21 + 32) = v28;
  *(void *)(v21 + 40) = v22;
  *(void *)(v21 + 48) = v26;
  *(void *)(v21 + 56) = v20;
  uint64_t v23 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_1001ECEA8()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1001FDDB8();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1001FD4C8();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  unint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  swift_getKeyPath();
  sub_1001FE33C();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_10002F214(&qword_10069E960);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100527F30;
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v6;
  uint64_t v8 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1001ED090()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10052AC40;
  *(void *)(v5 + 32) = v0;
  *(void *)(v5 + 40) = v1;
  *(void *)(v5 + 48) = v2;
  *(void *)(v5 + 56) = v3;
  *(void *)(v5 + 64) = v4;
  uint64_t v6 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1001ED180()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10052AC50;
  *(void *)(v4 + 32) = v0;
  *(void *)(v4 + 40) = v1;
  *(void *)(v4 + 48) = v2;
  *(void *)(v4 + 56) = v3;
  uint64_t v5 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1001ED274(uint64_t a1)
{
  uint64_t v54 = sub_10002F214(&qword_10069EB70);
  uint64_t v56 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v3 = (char *)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214(&qword_10069EB78);
  __chkstk_darwin(v4);
  sub_1000349B0();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._object = (void *)0x8000000100550C30;
  uint64_t v48 = (void *)0x8000000100550C30;
  v5._countAndFlagsBits = 0xD000000000000011;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  uint64_t v6 = sub_1001FF454((unint64_t *)&qword_10069CD70, (void (*)(uint64_t))type metadata accessor for NoteEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v7._countAndFlagsBits = 0x6E692065746F6E20;
  v7._object = (void *)0xEC00000020796D20;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  swift_getKeyPath();
  unint64_t v52 = sub_1001FE33C();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v8._countAndFlagsBits = 0x2E65746F6E20;
  v8._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v50 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v55 = *(void (**)(char *, uint64_t))(v56 + 8);
  v56 += 8;
  uint64_t v9 = v54;
  v55(v3, v54);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v10._object = (void *)0x8000000100550C50;
  uint64_t v46 = (void *)0x8000000100550C50;
  v10._countAndFlagsBits = 0xD000000000000011;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  uint64_t v51 = v6;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v11._countAndFlagsBits = 0x6E692065746F6E20;
  v11._object = (void *)0xED00002065687420;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._countAndFlagsBits = 0x2E65746F6E20;
  v12._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v49 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v55(v3, v9);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v13._countAndFlagsBits = 0xD000000000000015;
  v13._object = (void *)0x8000000100550C70;
  uint64_t v44 = (void *)0x8000000100550C70;
  unint64_t v45 = 0xD000000000000015;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v14._countAndFlagsBits = 0x6E692065746F6E20;
  v14._object = (void *)0xED00002065687420;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._countAndFlagsBits = 0x2E65746F6E20;
  v15._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v47 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v16 = v54;
  v55(v3, v54);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v17._countAndFlagsBits = 0x20796D206E49;
  v17._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  swift_getKeyPath();
  uint64_t v53 = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v18._countAndFlagsBits = 0xD000000000000018;
  v18._object = (void *)0x8000000100550C90;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v19._countAndFlagsBits = 0x2E65746F6E20;
  v19._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v43 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v20 = v55;
  v55(v3, v16);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v21._countAndFlagsBits = 0x206F74206B6E694CLL;
  v21._object = (void *)0xEB0000000020796DLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v22._countAndFlagsBits = 0x72662065746F6E20;
  v22._object = (void *)0xEE0020796D206D6FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v23._countAndFlagsBits = 0x2E65746F6E20;
  v23._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  unint64_t v52 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v24 = v54;
  v20(v3, v54);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v25._countAndFlagsBits = 0xD000000000000011;
  v25._object = v48;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v26._countAndFlagsBits = 0x2E65746F6E20;
  v26._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v48 = (void *)static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v20(v3, v24);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v27._countAndFlagsBits = 0xD000000000000011;
  v27._object = v46;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v28._countAndFlagsBits = 0x2E65746F6E20;
  v28._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v46 = (void *)static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v55(v3, v54);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v29._object = v44;
  v29._countAndFlagsBits = v45;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v29);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v30._countAndFlagsBits = 0x2E65746F6E20;
  v30._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v30);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  unint64_t v45 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v32 = v54;
  uint64_t v31 = v55;
  v55(v3, v54);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v33._countAndFlagsBits = 0x206F74206B6E694CLL;
  v33._object = (void *)0xEB0000000020796DLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v33);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v34._countAndFlagsBits = 0x2E65746F6E20;
  v34._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v35 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v31(v3, v32);
  sub_10002F214(&qword_10069EB80);
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_10052AC90;
  uint64_t v37 = v49;
  *(void *)(v36 + 32) = v50;
  *(void *)(v36 + 40) = v37;
  uint64_t v38 = v43;
  *(void *)(v36 + 48) = v47;
  *(void *)(v36 + 56) = v38;
  uint64_t v39 = v48;
  *(void *)(v36 + 64) = v52;
  *(void *)(v36 + 72) = v39;
  unint64_t v40 = v45;
  *(void *)(v36 + 80) = v46;
  *(void *)(v36 + 88) = v40;
  *(void *)(v36 + 96) = v35;
  uint64_t v41 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v41;
}

uint64_t sub_1001EDE0C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NoteEntity(0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  Swift::String v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  Swift::String v7 = (char *)&v9 - v6;
  sub_1001FE240(a1, (uint64_t)&v9 - v6, type metadata accessor for NoteEntity);
  sub_1001FE240((uint64_t)v7, (uint64_t)v5, type metadata accessor for NoteEntity);
  IntentParameter.wrappedValue.setter();
  return sub_1001FE2A8((uint64_t)v7, type metadata accessor for NoteEntity);
}

uint64_t sub_1001EDEF4()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1001FE33C();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1000349B0();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  Swift::String v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  swift_getKeyPath();
  sub_1001FF454((unint64_t *)&qword_10069CD70, (void (*)(uint64_t))type metadata accessor for NoteEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_10002F214(&qword_10069E960);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100527F30;
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v6;
  uint64_t v8 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1001EE10C()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10052AC50;
  *(void *)(v4 + 32) = v0;
  *(void *)(v4 + 40) = v1;
  *(void *)(v4 + 48) = v2;
  *(void *)(v4 + 56) = v3;
  uint64_t v5 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1001EE20C()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10052AC40;
  *(void *)(v5 + 32) = v0;
  *(void *)(v5 + 40) = v1;
  *(void *)(v5 + 48) = v2;
  *(void *)(v5 + 56) = v3;
  *(void *)(v5 + 64) = v4;
  uint64_t v6 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1001EE32C(uint64_t a1)
{
  uint64_t v46 = sub_10002F214(&qword_10069EB50);
  uint64_t v48 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v39 = (char *)v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for _AssistantIntent.PhraseToken();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10002F214(&qword_10069EB58);
  __chkstk_darwin(v7);
  unint64_t v8 = sub_100036010();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v9._countAndFlagsBits = 0x6568742065766F4DLL;
  v9._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  swift_getKeyPath();
  v38[1] = sub_100162118();
  uint64_t v44 = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v10._countAndFlagsBits = 0x6F742065746F6E20;
  v10._object = (void *)0xED00002065687420;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  uint64_t v47 = sub_1001FF454((unint64_t *)&unk_1006A2DC0, (void (*)(uint64_t))type metadata accessor for FolderEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v11._object = (void *)0xEB00000000206E69;
  v11._countAndFlagsBits = 0x207265646C6F6620;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for _AssistantIntent.PhraseToken.applicationName(_:), v3);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v12._countAndFlagsBits = 46;
  v12._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  Swift::String v13 = v39;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v42 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v14 = *(void (**)(char *, uint64_t))(v48 + 8);
  v48 += 8;
  unint64_t v45 = v14;
  uint64_t v15 = v46;
  v14(v13, v46);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v16._object = (void *)0x8000000100550B60;
  v16._countAndFlagsBits = 0xD000000000000014;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v17._countAndFlagsBits = 0x796D206F746E6920;
  v17._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v18._countAndFlagsBits = 0x2E7265646C6F6620;
  v18._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  unint64_t v43 = v8;
  uint64_t v41 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v19 = v13;
  v45(v13, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v20._countAndFlagsBits = 0x7420747265736E49;
  v20._object = (void *)0xEB00000000206568;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v21._countAndFlagsBits = 0x6E692065746F6E20;
  v21._object = (void *)0xEF20656874206F74;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v22._countAndFlagsBits = 0x2E7265646C6F6620;
  v22._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v40 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v23 = v46;
  v45(v19, v46);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v24._countAndFlagsBits = 0x20796D20747550;
  v24._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v25._countAndFlagsBits = 0x6E692065746F6E20;
  v25._object = (void *)0xEC00000020796D20;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v26._countAndFlagsBits = 0x2E7265646C6F6620;
  v26._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  v38[0] = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v27 = v23;
  Swift::String v28 = v45;
  v45(v19, v27);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v29._countAndFlagsBits = 0x6568742065766F4DLL;
  v29._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v29);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v30._countAndFlagsBits = 0x6E692065746F6E20;
  v30._object = (void *)0xEE0020796D206F74;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v30);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v31._countAndFlagsBits = 0x2E7265646C6F6620;
  v31._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v31);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v32 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v28(v19, v46);
  sub_10002F214(&qword_10069EB60);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_10052AC40;
  uint64_t v34 = v41;
  *(void *)(v33 + 32) = v42;
  *(void *)(v33 + 40) = v34;
  uint64_t v35 = v38[0];
  *(void *)(v33 + 48) = v40;
  *(void *)(v33 + 56) = v35;
  *(void *)(v33 + 64) = v32;
  uint64_t v36 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v36;
}

uint64_t sub_1001EEC80(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FolderEntity();
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1001FE240(a1, (uint64_t)&v9 - v6, (uint64_t (*)(void))type metadata accessor for FolderEntity);
  sub_1001FE240((uint64_t)v7, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FolderEntity);
  IntentParameter.wrappedValue.setter();
  return sub_1001FE2A8((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FolderEntity);
}

uint64_t sub_1001EED68()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_100162118();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_100036010();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  swift_getKeyPath();
  sub_1001FF454((unint64_t *)&unk_1006A2DC0, (void (*)(uint64_t))type metadata accessor for FolderEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_10002F214(&qword_10069E960);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100527F30;
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v6;
  uint64_t v8 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1001EEF80()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10052AC50;
  *(void *)(v4 + 32) = v0;
  *(void *)(v4 + 40) = v1;
  *(void *)(v4 + 48) = v2;
  *(void *)(v4 + 56) = v3;
  uint64_t v5 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1001EF078()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10052AC40;
  *(void *)(v5 + 32) = v0;
  *(void *)(v5 + 40) = v1;
  *(void *)(v5 + 48) = v2;
  *(void *)(v5 + 56) = v3;
  *(void *)(v5 + 64) = v4;
  uint64_t v6 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1001EF188(uint64_t a1)
{
  uint64_t v2 = sub_10002F214(&qword_10069EB38);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v31 = v2;
  uint64_t v32 = v3;
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214(&qword_10069EB40);
  __chkstk_darwin(v6);
  sub_100034BB8();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v7._countAndFlagsBits = 0x20796D206E65704FLL;
  v7._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  swift_getKeyPath();
  uint64_t v30 = sub_1001FF454(&qword_1006A6FB0, (void (*)(uint64_t))type metadata accessor for AccountEntity);
  uint64_t v25 = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v8._countAndFlagsBits = 0x746E756F63636120;
  v8._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v9 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v10 = v31;
  Swift::String v11 = *(void (**)(char *, uint64_t))(v32 + 8);
  uint64_t v28 = v9;
  Swift::String v29 = v11;
  v32 += 8;
  v11(v5, v31);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v12._countAndFlagsBits = 0x6874206F74206F47;
  v12._object = (void *)0xEA00000000002065;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v13._countAndFlagsBits = 0x746E756F63636120;
  v13._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v27 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v14 = v29;
  v29(v5, v10);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v15._countAndFlagsBits = 0x20796D20776F6853;
  v15._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v16._countAndFlagsBits = 0x746E756F63636120;
  v16._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v26 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v17 = v31;
  v14(v5, v31);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v18._object = (void *)0x8000000100550AE0;
  v18._countAndFlagsBits = 0xD00000000000001CLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v19._countAndFlagsBits = 0x746E756F63636120;
  v19._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v20 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v29(v5, v17);
  sub_10002F214(&qword_10069EB48);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_10052AC50;
  uint64_t v22 = v27;
  *(void *)(v21 + 32) = v28;
  *(void *)(v21 + 40) = v22;
  *(void *)(v21 + 48) = v26;
  *(void *)(v21 + 56) = v20;
  uint64_t v23 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_1001EF6C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  uint64_t v8 = a5(0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  Swift::String v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  Swift::String v13 = (char *)&v15 - v12;
  sub_1001FE240(a1, (uint64_t)&v15 - v12, a6);
  sub_1001FE240((uint64_t)v13, (uint64_t)v11, a6);
  IntentParameter.wrappedValue.setter();
  return sub_1001FE2A8((uint64_t)v13, a6);
}

uint64_t sub_1001EF79C()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1001FF454(&qword_1006A6FB0, (void (*)(uint64_t))type metadata accessor for AccountEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_100034BB8();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_10002F214(&qword_10069E960);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100524D10;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1001EF934()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10052AC50;
  *(void *)(v4 + 32) = v0;
  *(void *)(v4 + 40) = v1;
  *(void *)(v4 + 48) = v2;
  *(void *)(v4 + 56) = v3;
  uint64_t v5 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1001EFA18()
{
  uint64_t v0 = sub_10002F214(&qword_10069EB20);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v22 = v0;
  uint64_t v23 = v1;
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214(&qword_10069EB28);
  __chkstk_darwin(v4);
  sub_100034858();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._countAndFlagsBits = 0x2079616C70736944;
  v5._object = (void *)0xEC00000020656874;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  sub_1001FF454(&qword_10069EEF0, (void (*)(uint64_t))type metadata accessor for AttachmentEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._countAndFlagsBits = 0x6D68636174746120;
  v6._object = (void *)0xEC0000002E746E65;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v21 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v7 = v22;
  Swift::String v19 = *(void (**)(char *, uint64_t))(v23 + 8);
  v23 += 8;
  v19(v3, v22);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v8._countAndFlagsBits = 0x656874206E65704FLL;
  v8._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v9._countAndFlagsBits = 0x6D68636174746120;
  v9._object = (void *)0xEC0000002E746E65;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v20 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v10 = v19;
  v19(v3, v7);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._countAndFlagsBits = 0x65687420776F6853;
  v11._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._countAndFlagsBits = 0x6D68636174746120;
  v12._object = (void *)0xEC0000002E746E65;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v13 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v10(v3, v22);
  sub_10002F214(&qword_10069EB30);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_100529A00;
  uint64_t v15 = v20;
  *(void *)(v14 + 32) = v21;
  *(void *)(v14 + 40) = v15;
  *(void *)(v14 + 48) = v13;
  uint64_t v16 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1001EFE8C()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1001FF454(&qword_10069EEF0, (void (*)(uint64_t))type metadata accessor for AttachmentEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_100034858();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_10002F214(&qword_10069E960);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100524D10;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1001F0024()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10052AC50;
  *(void *)(v4 + 32) = v0;
  *(void *)(v4 + 40) = v1;
  *(void *)(v4 + 48) = v2;
  *(void *)(v4 + 56) = v3;
  uint64_t v5 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1001F0110(uint64_t a1)
{
  uint64_t v28 = sub_10002F214(&qword_10069EB08);
  uint64_t v30 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214(&qword_10069EB10);
  __chkstk_darwin(v4);
  sub_1000343BC();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._countAndFlagsBits = 0x65687420776F6853;
  v5._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  uint64_t v23 = sub_1001FF454(&qword_1006A4F00, (void (*)(uint64_t))type metadata accessor for ChecklistItemEntity);
  uint64_t v29 = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._object = (void *)0x80000001005509C0;
  v6._countAndFlagsBits = 0xD000000000000013;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v30 + 8);
  uint64_t v26 = v7;
  uint64_t v27 = v8;
  v30 += 8;
  uint64_t v9 = v28;
  v8(v3, v28);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v10._countAndFlagsBits = 0x656874206E65704FLL;
  v10._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v11._countAndFlagsBits = 0xD000000000000011;
  v11._object = (void *)0x80000001005509E0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v25 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v12 = v27;
  v27(v3, v9);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v13._countAndFlagsBits = 0x2079616C70736944;
  v13._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v14._object = (void *)0x8000000100550A00;
  v14._countAndFlagsBits = 0xD000000000000013;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v24 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v15 = v28;
  v12(v3, v28);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v16._countAndFlagsBits = 0xD000000000000010;
  v16._object = (void *)0x8000000100550A20;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v17._countAndFlagsBits = 0xD000000000000019;
  v17._object = (void *)0x8000000100550A40;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v18 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v27(v3, v15);
  sub_10002F214(&qword_10069EB18);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_10052AC50;
  uint64_t v20 = v25;
  *(void *)(v19 + 32) = v26;
  *(void *)(v19 + 40) = v20;
  *(void *)(v19 + 48) = v24;
  *(void *)(v19 + 56) = v18;
  uint64_t v21 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_1001F067C()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1001FF454(&qword_1006A4F00, (void (*)(uint64_t))type metadata accessor for ChecklistItemEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1000343BC();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_10002F214(&qword_10069E960);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100524D10;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1001F0814()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10052AC40;
  *(void *)(v5 + 32) = v0;
  *(void *)(v5 + 40) = v1;
  *(void *)(v5 + 48) = v2;
  *(void *)(v5 + 56) = v3;
  *(void *)(v5 + 64) = v4;
  uint64_t v6 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1001F0940(uint64_t a1)
{
  uint64_t v52 = a1;
  uint64_t v1 = sub_10002F214(&qword_10069EAF0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v58 = v1;
  uint64_t v59 = v2;
  __chkstk_darwin(v1);
  uint64_t v57 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for _AssistantIntent.PhraseToken();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214(&qword_10069EAF8);
  __chkstk_darwin(v8);
  sub_100034CBC();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v9._countAndFlagsBits = 0x20796D206E65704FLL;
  v9._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  swift_getKeyPath();
  uint64_t v53 = sub_1001FF454((unint64_t *)&unk_1006A2DC0, (void (*)(uint64_t))type metadata accessor for FolderEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v10._countAndFlagsBits = 32;
  v10._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  unsigned int v49 = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  Swift::String v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  uint64_t v50 = v5 + 104;
  uint64_t v54 = v11;
  uint64_t v48 = v7;
  uint64_t v44 = v4;
  ((void (*)(char *))v11)(v7);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  uint64_t v51 = *(void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v56 = v5 + 8;
  v51(v7, v4);
  v12._countAndFlagsBits = 0x2E7265646C6F6620;
  v12._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  Swift::String v13 = v57;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v47 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v14 = v58;
  uint64_t v16 = v59 + 8;
  uint64_t v15 = *(void (**)(char *, uint64_t))(v59 + 8);
  v15(v13, v58);
  uint64_t v55 = v15;
  uint64_t v59 = v16;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v17._countAndFlagsBits = 0x656874206E65704FLL;
  v17._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v18._countAndFlagsBits = 0x2E7265646C6F6620;
  v18._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  uint64_t v19 = v57;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v46 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v15(v19, v14);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v20._countAndFlagsBits = 0x656874206E65704FLL;
  v20._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v21._countAndFlagsBits = 0x207265646C6F6620;
  v21._object = (void *)0xEB00000000206E69;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  uint64_t v22 = v48;
  uint64_t v23 = v49;
  uint64_t v24 = v44;
  v54(v48, v49, v44);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  v51(v22, v24);
  v25._countAndFlagsBits = 46;
  v25._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  uint64_t v26 = v57;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v45 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v55(v26, v58);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v27._object = (void *)0x8000000100550940;
  v27._countAndFlagsBits = 0x1000000000000017;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v28._countAndFlagsBits = 0x207265646C6F6620;
  v28._object = (void *)0xEF20656874206E69;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  uint64_t v29 = v48;
  v54(v48, v23, v24);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  uint64_t v30 = v51;
  v51(v29, v24);
  v31._countAndFlagsBits = 0x2E70706120;
  v31._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v31);
  uint64_t v32 = v57;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v43 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v55(v32, v58);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v33._object = (void *)0x8000000100550960;
  v33._countAndFlagsBits = 0xD000000000000019;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v33);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v34._countAndFlagsBits = 0x207265646C6F6620;
  v34._object = (void *)0xEB00000000206E69;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  v54(v29, v49, v24);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  v30(v29, v24);
  v35._countAndFlagsBits = 46;
  v35._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v35);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v36 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v55(v32, v58);
  sub_10002F214(&qword_10069EB00);
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_10052AC40;
  uint64_t v38 = v46;
  *(void *)(v37 + 32) = v47;
  *(void *)(v37 + 40) = v38;
  uint64_t v39 = v43;
  *(void *)(v37 + 48) = v45;
  *(void *)(v37 + 56) = v39;
  *(void *)(v37 + 64) = v36;
  uint64_t v40 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v40;
}

uint64_t sub_1001F119C()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1001FF454((unint64_t *)&unk_1006A2DC0, (void (*)(uint64_t))type metadata accessor for FolderEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_100034CBC();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_10002F214(&qword_10069E960);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100524D10;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1001F1334()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10052AC40;
  *(void *)(v5 + 32) = v0;
  *(void *)(v5 + 40) = v1;
  *(void *)(v5 + 48) = v2;
  *(void *)(v5 + 56) = v3;
  *(void *)(v5 + 64) = v4;
  uint64_t v6 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1001F144C(uint64_t a1)
{
  uint64_t v27 = a1;
  uint64_t v1 = sub_10002F214(&qword_10069EAD8);
  uint64_t v26 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214(&qword_10069EAE0);
  __chkstk_darwin(v4);
  sub_100035854();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._countAndFlagsBits = 0x656874206E65704FLL;
  v5._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  v21[1] = sub_1001FF454((unint64_t *)&qword_10069CD70, (void (*)(uint64_t))type metadata accessor for NoteEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._countAndFlagsBits = 0x2E65746F6E20;
  v6._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v25 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v7 = v26 + 8;
  uint64_t v22 = *(void (**)(char *, uint64_t))(v26 + 8);
  v21[0] = v1;
  v22(v3, v1);
  uint64_t v26 = v7;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v8._countAndFlagsBits = 0x20796D206E65704FLL;
  v8._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v9._countAndFlagsBits = 0x2E65746F6E20;
  v9._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v24 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v10 = v22;
  v22(v3, v1);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._countAndFlagsBits = 0x6874206F74206F47;
  v11._object = (void *)0xEA00000000002065;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._countAndFlagsBits = 0x2E65746F6E20;
  v12._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v23 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v13 = v21[0];
  v10(v3, v21[0]);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v14._countAndFlagsBits = 0x20796D20776F6853;
  v14._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._countAndFlagsBits = 0x2E65746F6E20;
  v15._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v16 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v10(v3, v13);
  sub_10002F214(&qword_10069EAE8);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_10052AC50;
  uint64_t v18 = v24;
  *(void *)(v17 + 32) = v25;
  *(void *)(v17 + 40) = v18;
  *(void *)(v17 + 48) = v23;
  *(void *)(v17 + 56) = v16;
  uint64_t v19 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_1001F198C()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1001FF454((unint64_t *)&qword_10069CD70, (void (*)(uint64_t))type metadata accessor for NoteEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_100035854();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_10002F214(&qword_10069E960);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100524D10;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1001F1B24()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100529A00;
  *(void *)(v3 + 32) = v0;
  *(void *)(v3 + 40) = v1;
  *(void *)(v3 + 48) = v2;
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1001F1BEC()
{
  uint64_t v0 = sub_10002F214(&qword_10069EAC8);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100035F0C();
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v13 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v4 = *(void (**)(char *, uint64_t))(v1 + 8);
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v6 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  sub_10002F214(&qword_10069EAD0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10052AC40;
  *(void *)(v9 + 32) = v13;
  *(void *)(v9 + 40) = v5;
  *(void *)(v9 + 48) = v6;
  *(void *)(v9 + 56) = v7;
  *(void *)(v9 + 64) = v8;
  uint64_t v10 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1001F1E9C(uint64_t a1)
{
  return sub_1001F8EE8(a1, (uint64_t)&unk_10052AF90, (void (*)(void))sub_1001FE0AC, (void (*)(uint64_t))sub_100035F0C);
}

uint64_t sub_1001F1EE4()
{
  return sub_1001FAB98();
}

uint64_t sub_1001F1F00()
{
  uint64_t v0 = sub_10002F214(&qword_10069EAC8);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100035F0C();
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v13 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v4 = *(void (**)(char *, uint64_t))(v1 + 8);
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v6 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  sub_10002F214(&qword_10069EAD0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10052AC40;
  *(void *)(v9 + 32) = v13;
  *(void *)(v9 + 40) = v5;
  *(void *)(v9 + 48) = v6;
  *(void *)(v9 + 56) = v7;
  *(void *)(v9 + 64) = v8;
  uint64_t v10 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1001F21B4(uint64_t a1)
{
  return sub_1001F8EE8(a1, (uint64_t)&unk_10052AF90, (void (*)(void))sub_1001FE0AC, (void (*)(uint64_t))sub_100035F0C);
}

uint64_t sub_1001F21FC()
{
  return sub_1001FAB98();
}

uint64_t sub_1001F2218()
{
  uint64_t v0 = sub_10002F214(&qword_10069EAB0);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003408C();
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v13 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v4 = *(void (**)(char *, uint64_t))(v1 + 8);
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v6 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  sub_10002F214(&qword_10069EAB8);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10052AC40;
  *(void *)(v9 + 32) = v13;
  *(void *)(v9 + 40) = v5;
  *(void *)(v9 + 48) = v6;
  *(void *)(v9 + 56) = v7;
  *(void *)(v9 + 64) = v8;
  uint64_t v10 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1001F24CC(uint64_t a1)
{
  return sub_1001F8EE8(a1, (uint64_t)&unk_10052AF68, (void (*)(void))sub_1001FDFE4, (void (*)(uint64_t))sub_10003408C);
}

uint64_t sub_1001F2514()
{
  return sub_1001FAB98();
}

uint64_t sub_1001F2530()
{
  uint64_t v0 = sub_10002F214(&qword_10069EAB0);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003408C();
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v13 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v4 = *(void (**)(char *, uint64_t))(v1 + 8);
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v6 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  sub_10002F214(&qword_10069EAB8);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10052AC40;
  *(void *)(v9 + 32) = v13;
  *(void *)(v9 + 40) = v5;
  *(void *)(v9 + 48) = v6;
  *(void *)(v9 + 56) = v7;
  *(void *)(v9 + 64) = v8;
  uint64_t v10 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1001F27E4(uint64_t a1)
{
  return sub_1001F8EE8(a1, (uint64_t)&unk_10052AF68, (void (*)(void))sub_1001FDFE4, (void (*)(uint64_t))sub_10003408C);
}

uint64_t sub_1001F282C()
{
  return sub_1001FAB98();
}

uint64_t sub_1001F2850()
{
  uint64_t v0 = sub_10002F214(&qword_10069EA90);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v22 = v0;
  uint64_t v23 = v1;
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214(&qword_10069EA98);
  __chkstk_darwin(v4);
  sub_100035750();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._object = (void *)0x8000000100550510;
  v5._countAndFlagsBits = 0xD000000000000014;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  sub_1001FF454(&qword_10069D3D8, (void (*)(uint64_t))type metadata accessor for TableEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._countAndFlagsBits = 0x6E69206F666E6920;
  v6._object = (void *)0xEC0000002E746920;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v21 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v7 = v22;
  uint64_t v19 = *(void (**)(char *, uint64_t))(v23 + 8);
  v23 += 8;
  v19(v3, v22);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v8._countAndFlagsBits = 0xD00000000000001ELL;
  v8._object = (void *)0x8000000100550530;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v9._countAndFlagsBits = 0x2E6F666E6920;
  v9._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v20 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v10 = v19;
  v19(v3, v7);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._countAndFlagsBits = 0xD00000000000001DLL;
  v11._object = (void *)0x8000000100550550;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._countAndFlagsBits = 46;
  v12._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v13 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v10(v3, v22);
  sub_10002F214(&qword_10069EAA0);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_100529A00;
  uint64_t v15 = v20;
  *(void *)(v14 + 32) = v21;
  *(void *)(v14 + 40) = v15;
  *(void *)(v14 + 48) = v13;
  uint64_t v16 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1001F2CB0()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1001FF454(&qword_10069D3D8, (void (*)(uint64_t))type metadata accessor for TableEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_100035750();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_10002F214(&qword_10069E960);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100524D10;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1001F2E48(uint64_t a1)
{
  uint64_t v34 = a1;
  uint64_t v1 = sub_10002F214(&qword_10069EA78);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002F214(&qword_10069EA80);
  __chkstk_darwin(v5);
  sub_100035A5C();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v6._countAndFlagsBits = 0xD000000000000025;
  v6._object = (void *)0x80000001005503D0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  swift_getKeyPath();
  uint64_t v33 = sub_1001FF454(&qword_1006A0140, (void (*)(uint64_t))type metadata accessor for TagEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v7._countAndFlagsBits = 0x2E67617420;
  v7._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v29 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v30 = v1;
  uint64_t v8 = *(void (**)(char *, uint64_t))(v2 + 8);
  v8(v4, v1);
  uint64_t v31 = v2 + 8;
  uint64_t v32 = v8;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v9._countAndFlagsBits = 0xD000000000000020;
  v9._object = (void *)0x8000000100550400;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v10._countAndFlagsBits = 0x2E67617420;
  v10._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v28 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v8(v4, v1);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._countAndFlagsBits = 0xD000000000000015;
  v11._object = (void *)0x8000000100550430;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._countAndFlagsBits = 0xD000000000000018;
  v12._object = (void *)0x8000000100550450;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v27 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v32(v4, v30);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v13._object = (void *)0x8000000100550470;
  v13._countAndFlagsBits = 0xD00000000000001DLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v14._countAndFlagsBits = 0x2E67617420;
  v14._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v26 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v15 = v30;
  uint64_t v16 = v32;
  v32(v4, v30);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v17._object = (void *)0x8000000100550490;
  v17._countAndFlagsBits = 0xD00000000000001DLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v18._countAndFlagsBits = 0x2E67617420;
  v18._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v19 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v16(v4, v15);
  sub_10002F214(&qword_10069EA88);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_10052AC40;
  uint64_t v21 = v28;
  *(void *)(v20 + 32) = v29;
  *(void *)(v20 + 40) = v21;
  uint64_t v22 = v26;
  *(void *)(v20 + 48) = v27;
  *(void *)(v20 + 56) = v22;
  *(void *)(v20 + 64) = v19;
  uint64_t v23 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_1001F3468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  uint64_t v8 = a5(0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  Swift::String v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  Swift::String v13 = (char *)&v15 - v12;
  sub_1001FE240(a1, (uint64_t)&v15 - v12, a6);
  sub_1001FE240((uint64_t)v13, (uint64_t)v11, a6);
  IntentParameter.wrappedValue.setter();
  return sub_1001FE2A8((uint64_t)v13, a6);
}

uint64_t sub_1001F3544()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1001FF454(&qword_1006A0140, (void (*)(uint64_t))type metadata accessor for TagEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_100035A5C();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_10002F214(&qword_10069E960);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100524D10;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1001F36DC()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10052AC40;
  *(void *)(v5 + 32) = v0;
  *(void *)(v5 + 40) = v1;
  *(void *)(v5 + 48) = v2;
  *(void *)(v5 + 56) = v3;
  *(void *)(v5 + 64) = v4;
  uint64_t v6 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1001F37E0(uint64_t a1)
{
  uint64_t v40 = type metadata accessor for _AssistantIntent.PhraseToken();
  uint64_t v38 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v37 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10002F214(&qword_10069EA60);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v43 = v3;
  uint64_t v44 = v4;
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10002F214(&qword_10069EA68);
  __chkstk_darwin(v7);
  sub_1001FD864();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v8._object = (void *)0x8000000100550360;
  v8._countAndFlagsBits = 0xD000000000000010;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  swift_getKeyPath();
  unint64_t v9 = sub_100162118();
  uint64_t v41 = a1;
  unint64_t v42 = v9;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v10._countAndFlagsBits = 0x2E65746F6E20;
  v10._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v39 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v11 = v43;
  uint64_t v12 = *(void (**)(char *, uint64_t))(v44 + 8);
  v44 += 8;
  uint64_t v34 = v12;
  v12(v6, v43);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v13._countAndFlagsBits = 0x72757320656B614DLL;
  v13._object = (void *)0xED000020796D2065;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v14._countAndFlagsBits = 0xD00000000000002BLL;
  v14._object = (void *)0x8000000100550380;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v36 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v15 = v34;
  v34(v6, v11);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v16._countAndFlagsBits = 0x20656874206E6950;
  v16._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v17._countAndFlagsBits = 0x2E65746F6E20;
  v17._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v35 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v15(v6, v43);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v18._countAndFlagsBits = 544106832;
  v18._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v19._countAndFlagsBits = 544106784;
  v19._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  uint64_t v20 = v37;
  uint64_t v21 = v38;
  uint64_t v22 = v40;
  (*(void (**)(char *, void, uint64_t))(v38 + 104))(v37, enum case for _AssistantIntent.PhraseToken.applicationName(_:), v40);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v20, v22);
  v23._countAndFlagsBits = 46;
  v23._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v40 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v24 = v43;
  v15(v6, v43);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v25._object = (void *)0x80000001005503B0;
  v25._countAndFlagsBits = 0xD000000000000010;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v26._countAndFlagsBits = 0x2E65746F6E20;
  v26._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v27 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v15(v6, v24);
  sub_10002F214(&qword_10069EA70);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_10052AC40;
  uint64_t v29 = v36;
  *(void *)(v28 + 32) = v39;
  *(void *)(v28 + 40) = v29;
  uint64_t v30 = v40;
  *(void *)(v28 + 48) = v35;
  *(void *)(v28 + 56) = v30;
  *(void *)(v28 + 64) = v27;
  uint64_t v31 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v31;
}

uint64_t sub_1001F3EB0()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_100162118();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1001FD864();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  swift_getKeyPath();
  sub_1001FF454(&qword_10069EA58, (void (*)(uint64_t))&type metadata accessor for FavoriteOperation);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_10002F214(&qword_10069E960);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100527F30;
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v6;
  uint64_t v8 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1001F40C8()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10052AC40;
  *(void *)(v5 + 32) = v0;
  *(void *)(v5 + 40) = v1;
  *(void *)(v5 + 48) = v2;
  *(void *)(v5 + 56) = v3;
  *(void *)(v5 + 64) = v4;
  uint64_t v6 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1001F41E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v15 - v11;
  Swift::String v13 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v13((char *)&v15 - v11, a1, v6);
  v13(v10, (uint64_t)v12, v6);
  IntentParameter.wrappedValue.setter();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
}

uint64_t sub_1001F4318(uint64_t a1)
{
  v15[1] = a1;
  uint64_t v17 = sub_10002F214(&qword_10069EA60);
  uint64_t v1 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v3 = (char *)v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214(&qword_10069EA68);
  __chkstk_darwin(v4);
  sub_1001FD864();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._object = (void *)0x80000001005502E0;
  v5._countAndFlagsBits = 0xD000000000000017;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  sub_100162118();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._countAndFlagsBits = 0x2E65746F6E20;
  v6._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v16 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  uint64_t v8 = v17;
  v7(v3, v17);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v9._countAndFlagsBits = 0x796D206E69706E55;
  v9._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v10._countAndFlagsBits = 0x2E65746F6E20;
  v10._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v11 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v7(v3, v8);
  sub_10002F214(&qword_10069EA70);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_100527F30;
  *(void *)(v12 + 32) = v16;
  *(void *)(v12 + 40) = v11;
  uint64_t v13 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1001F464C()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_100162118();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1001FD864();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  Swift::String v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  swift_getKeyPath();
  sub_1001FF454(&qword_10069EA58, (void (*)(uint64_t))&type metadata accessor for FavoriteOperation);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_10002F214(&qword_10069E960);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100527F30;
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v6;
  uint64_t v8 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1001F4864()
{
  return sub_1001FAB98();
}

uint64_t sub_1001F4880(uint64_t a1)
{
  uint64_t v2 = sub_10002F214(&qword_10069EA40);
  uint64_t v41 = *(void *)(v2 - 8);
  uint64_t v42 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002F214(&qword_10069EA48);
  __chkstk_darwin(v5);
  sub_100160EBC();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v6._countAndFlagsBits = 0xD00000000000001CLL;
  v6._object = (void *)0x8000000100550250;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  swift_getKeyPath();
  unint64_t v44 = sub_1001FDE14();
  uint64_t v38 = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v7._countAndFlagsBits = 0x6F72662067617420;
  v7._object = (void *)0xED000020796D206DLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  swift_getKeyPath();
  unint64_t v40 = sub_100162118();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v8._countAndFlagsBits = 0x2E65746F6E20;
  v8._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  uint64_t v39 = v4;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v37 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v9 = v42;
  uint64_t v43 = *(void (**)(char *, uint64_t))(v41 + 8);
  v41 += 8;
  v43(v4, v42);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v10._countAndFlagsBits = 0x20796D206E49;
  v10._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v11._countAndFlagsBits = 0xD00000000000001FLL;
  v11._object = (void *)0x8000000100550270;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._countAndFlagsBits = 0x2E67617420;
  v12._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  uint64_t v13 = v39;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v36 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v14 = v9;
  uint64_t v15 = v43;
  v43(v13, v14);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v16._countAndFlagsBits = 0x742065766F6D6552;
  v16._object = (void *)0xEB00000000206568;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v17._countAndFlagsBits = 0x6F72662067617420;
  v17._object = (void *)0xED000020796D206DLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v18._countAndFlagsBits = 0x2E65746F6E20;
  v18._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  Swift::String v19 = v39;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v35 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v15(v19, v42);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v20._countAndFlagsBits = 0x2064697220746547;
  v20._object = (void *)0xEF2065687420666FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v21._countAndFlagsBits = 0x206E692067617420;
  v21._object = (void *)0xEB0000000020796DLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v22._countAndFlagsBits = 0x2E65746F6E20;
  v22._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v34 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v23 = v42;
  v43(v19, v42);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v24._object = (void *)0x8000000100550290;
  v24._countAndFlagsBits = 0xD000000000000018;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v25._countAndFlagsBits = 0x6F72662067617420;
  v25._object = (void *)0xED000020796D206DLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v26._countAndFlagsBits = 0x2E65746F6E20;
  v26._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v27 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v43(v19, v23);
  sub_10002F214(&qword_10069EA50);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_10052AC40;
  uint64_t v29 = v36;
  *(void *)(v28 + 32) = v37;
  *(void *)(v28 + 40) = v29;
  uint64_t v30 = v34;
  *(void *)(v28 + 48) = v35;
  *(void *)(v28 + 56) = v30;
  *(void *)(v28 + 64) = v27;
  uint64_t v31 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v31;
}

uint64_t sub_1001F5098()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1001FDE14();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_100160EBC();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  swift_getKeyPath();
  sub_100162118();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_10002F214(&qword_10069E960);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100527F30;
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v6;
  uint64_t v8 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1001F5280()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10052AC40;
  *(void *)(v5 + 32) = v0;
  *(void *)(v5 + 40) = v1;
  *(void *)(v5 + 48) = v2;
  *(void *)(v5 + 56) = v3;
  *(void *)(v5 + 64) = v4;
  uint64_t v6 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1001F5384()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10052AC40;
  *(void *)(v5 + 32) = v0;
  *(void *)(v5 + 40) = v1;
  *(void *)(v5 + 48) = v2;
  *(void *)(v5 + 56) = v3;
  *(void *)(v5 + 64) = v4;
  uint64_t v6 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1001F547C(uint64_t a1)
{
  uint64_t v60 = sub_10002F214(&qword_10069EA20);
  uint64_t v62 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v58 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for _AssistantIntent.PhraseToken();
  uint64_t v3 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214(&qword_10069EA28);
  __chkstk_darwin(v6);
  unint64_t v7 = sub_1001FD8B8();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v8._countAndFlagsBits = 0x6D20656D616E6552;
  v8._object = (void *)0xEA00000000002079;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  swift_getKeyPath();
  uint64_t v51 = sub_1001FF454((unint64_t *)&unk_1006A2DC0, (void (*)(uint64_t))type metadata accessor for FolderEntity);
  uint64_t v52 = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v9._countAndFlagsBits = 0x207265646C6F6620;
  v9._object = (void *)0xEB00000000206E69;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  unsigned int v55 = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  uint64_t v56 = v3 + 104;
  uint64_t v57 = v10;
  uint64_t v11 = v61;
  ((void (*)(char *))v10)(v5);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  uint64_t v53 = *(void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v54 = v3 + 8;
  v53(v5, v11);
  v12._countAndFlagsBits = 0xD00000000000001CLL;
  v12._object = (void *)0x8000000100550120;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  uint64_t v13 = v58;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v49 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v62 + 8);
  v62 += 8;
  uint64_t v59 = v14;
  uint64_t v15 = v60;
  v14(v13, v60);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v16._countAndFlagsBits = 0x6D20657461647055;
  v16._object = (void *)0xEA00000000002079;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v17._countAndFlagsBits = 0xD000000000000026;
  v17._object = (void *)0x8000000100550140;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  uint64_t v18 = v61;
  v57(v5, v55, v61);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  v53(v5, v18);
  v19._countAndFlagsBits = 46;
  v19._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  Swift::String v20 = v58;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  unint64_t v50 = v7;
  uint64_t v48 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v59(v20, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v21._countAndFlagsBits = 0x6D2065676E616843;
  v21._object = (void *)0xEA00000000002079;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v22._countAndFlagsBits = 0xD000000000000020;
  v22._object = (void *)0x8000000100550170;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  uint64_t v45 = v5;
  uint64_t v23 = v55;
  uint64_t v24 = v61;
  Swift::String v25 = v57;
  v57(v5, v55, v61);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  Swift::String v26 = v53;
  v53(v5, v24);
  v27._countAndFlagsBits = 46;
  v27._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  uint64_t v28 = v58;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v47 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v59(v28, v60);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v29._countAndFlagsBits = 2125385;
  v29._object = (void *)0xE300000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v29);
  uint64_t v30 = v45;
  uint64_t v31 = v61;
  v25(v45, v23, v61);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  v26(v30, v31);
  v32._object = (void *)0x80000001005501A0;
  v32._countAndFlagsBits = 0xD00000000000001ALL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v32);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v33._countAndFlagsBits = 0xD000000000000030;
  v33._object = (void *)0x80000001005501C0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v33);
  uint64_t v34 = v58;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v46 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v59(v34, v60);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v35._countAndFlagsBits = 0x6120657661682049;
  v35._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v35);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v36._countAndFlagsBits = 0x207265646C6F6620;
  v36._object = (void *)0xEB00000000206E69;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v36);
  uint64_t v37 = v61;
  v57(v30, v55, v61);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  v53(v30, v37);
  v38._object = (void *)0x8000000100550200;
  v38._countAndFlagsBits = 0x1000000000000023;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v38);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v39 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v59(v34, v60);
  sub_10002F214(&qword_10069EA30);
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_10052AC40;
  uint64_t v41 = v48;
  *(void *)(v40 + 32) = v49;
  *(void *)(v40 + 40) = v41;
  uint64_t v42 = v46;
  *(void *)(v40 + 48) = v47;
  *(void *)(v40 + 56) = v42;
  *(void *)(v40 + 64) = v39;
  uint64_t v43 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v43;
}

uint64_t sub_1001F5D54()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1001FF454((unint64_t *)&unk_1006A2DC0, (void (*)(uint64_t))type metadata accessor for FolderEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1001FD8B8();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  swift_getKeyPath();
  sub_1001FDDB8();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_10002F214(&qword_10069E960);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100527F30;
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v6;
  uint64_t v8 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1001F5F6C()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10052AC40;
  *(void *)(v5 + 32) = v0;
  *(void *)(v5 + 40) = v1;
  *(void *)(v5 + 48) = v2;
  *(void *)(v5 + 56) = v3;
  *(void *)(v5 + 64) = v4;
  uint64_t v6 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1001F6094()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10052AC40;
  *(void *)(v5 + 32) = v0;
  *(void *)(v5 + 40) = v1;
  *(void *)(v5 + 48) = v2;
  *(void *)(v5 + 56) = v3;
  *(void *)(v5 + 64) = v4;
  uint64_t v6 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1001F61B0(uint64_t a1)
{
  uint64_t v34 = a1;
  uint64_t v1 = sub_10002F214(&qword_10069EA00);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002F214(&qword_10069EA08);
  __chkstk_darwin(v5);
  sub_1000344C0();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v6._countAndFlagsBits = 0xD00000000000001FLL;
  v6._object = (void *)0x8000000100550010;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  swift_getKeyPath();
  uint64_t v33 = sub_1001FF454(&qword_10069E9F8, (void (*)(uint64_t))&type metadata accessor for AttributedString);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v7._countAndFlagsBits = 46;
  v7._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v29 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v30 = v1;
  uint64_t v8 = *(void (**)(char *, uint64_t))(v2 + 8);
  v8(v4, v1);
  uint64_t v31 = v2 + 8;
  Swift::String v32 = v8;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v9._countAndFlagsBits = 543450177;
  v9._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v10._countAndFlagsBits = 0xD00000000000001DLL;
  v10._object = (void *)0x8000000100550030;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v28 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v8(v4, v1);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._countAndFlagsBits = 0xD000000000000025;
  v11._object = (void *)0x8000000100550050;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._countAndFlagsBits = 46;
  v12._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v27 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v32(v4, v30);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v13._countAndFlagsBits = 0x206E69206C6C6946;
  v13._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v14._object = (void *)0x8000000100550080;
  v14._countAndFlagsBits = 0xD00000000000001ALL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v26 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v15 = v30;
  Swift::String v16 = v32;
  v32(v4, v30);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v17._countAndFlagsBits = 0x20747265736E49;
  v17._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v18._countAndFlagsBits = 0x6874206F746E6920;
  v18._object = (void *)0xEF2E65746F6E2065;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v19 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v16(v4, v15);
  sub_10002F214(&qword_10069EA10);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_10052AC40;
  uint64_t v21 = v28;
  *(void *)(v20 + 32) = v29;
  *(void *)(v20 + 40) = v21;
  uint64_t v22 = v26;
  *(void *)(v20 + 48) = v27;
  *(void *)(v20 + 56) = v22;
  *(void *)(v20 + 64) = v19;
  uint64_t v23 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_1001F67C0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AttributedString();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  Swift::String v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v11 - v7;
  Swift::String v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v11 - v7, a1, v2);
  v9(v6, (uint64_t)v8, v2);
  IntentParameter.wrappedValue.setter();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t sub_1001F68F4()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1001FF454(&qword_10069E9F8, (void (*)(uint64_t))&type metadata accessor for AttributedString);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1000344C0();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_10002F214(&qword_10069E960);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100524D10;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1001F6A8C()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10052AC40;
  *(void *)(v5 + 32) = v0;
  *(void *)(v5 + 40) = v1;
  *(void *)(v5 + 48) = v2;
  *(void *)(v5 + 56) = v3;
  *(void *)(v5 + 64) = v4;
  uint64_t v6 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1001F6BA8()
{
  uint64_t v0 = sub_10002F214(&qword_10069E9E0);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for _AssistantIntent.PhraseToken();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214(&qword_10069E9E8);
  __chkstk_darwin(v8);
  sub_100034AB4();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v9._object = (void *)0x800000010054FE60;
  v9._countAndFlagsBits = 0xD00000000000001DLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for _AssistantIntent.PhraseToken.applicationName(_:), v4);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v23 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v1 + 8);
  v11(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v22 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v11(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v21 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v11(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v12 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v11(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v13 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v11(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v14 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v11(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v15 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v11(v3, v0);
  sub_10002F214(&qword_10069E9F0);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_10052AC60;
  uint64_t v17 = v22;
  *(void *)(v16 + 32) = v23;
  *(void *)(v16 + 40) = v17;
  *(void *)(v16 + 48) = v21;
  *(void *)(v16 + 56) = v12;
  *(void *)(v16 + 64) = v13;
  *(void *)(v16 + 72) = v14;
  *(void *)(v16 + 80) = v15;
  uint64_t v18 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_1001F704C(uint64_t a1)
{
  uint64_t v32 = a1;
  uint64_t v1 = sub_10002F214(&qword_10069E9C8);
  uint64_t v34 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214(&qword_10069E9D0);
  __chkstk_darwin(v4);
  sub_1001FD90C();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._countAndFlagsBits = 0x6573616572636544;
  v5._object = (void *)0xED00002065687420;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  uint64_t v6 = sub_1001FF454(&qword_10069EEF0, (void (*)(uint64_t))type metadata accessor for AttachmentEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v7._object = (void *)0x800000010054FE40;
  v7._countAndFlagsBits = 0xD000000000000013;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v31 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v34 + 8);
  v34 += 8;
  uint64_t v28 = v8;
  uint64_t v26 = v1;
  v8(v3, v1);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v9._countAndFlagsBits = 0x65687420656B614DLL;
  v9._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  swift_getKeyPath();
  uint64_t v27 = v6;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v10._countAndFlagsBits = 0x6D68636174746120;
  v10._object = (void *)0xEC00000020746E65;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  unint64_t v33 = sub_1001FDC84();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v11._countAndFlagsBits = 46;
  v11._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v30 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v12 = v28;
  v28(v3, v1);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v13._countAndFlagsBits = 0x2079616C70736944;
  v13._object = (void *)0xEC00000020656874;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v14._countAndFlagsBits = 0x736120656C696620;
  v14._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._countAndFlagsBits = 46;
  v15._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v29 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v16 = v26;
  v12(v3, v26);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v17._countAndFlagsBits = 0x20747265766E6F43;
  v17._object = (void *)0xEC00000020656874;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v18._countAndFlagsBits = 0x6D68636174746120;
  v18._object = (void *)0xEF206F7420746E65;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v19._countAndFlagsBits = 0x2E657A697320;
  v19._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v20 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v12(v3, v16);
  sub_10002F214(&qword_10069E9D8);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_10052AC50;
  uint64_t v22 = v30;
  *(void *)(v21 + 32) = v31;
  *(void *)(v21 + 40) = v22;
  *(void *)(v21 + 48) = v29;
  *(void *)(v21 + 56) = v20;
  uint64_t v23 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_1001F76D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  uint64_t v8 = a5(0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  Swift::String v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  Swift::String v13 = (char *)&v15 - v12;
  sub_1001FE240(a1, (uint64_t)&v15 - v12, a6);
  sub_1001FE240((uint64_t)v13, (uint64_t)v11, a6);
  IntentParameter.wrappedValue.setter();
  return sub_1001FE2A8((uint64_t)v13, a6);
}

uint64_t sub_1001F77B4()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1001FF454(&qword_10069EEF0, (void (*)(uint64_t))type metadata accessor for AttachmentEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1001FD90C();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  Swift::String v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  swift_getKeyPath();
  sub_1001FDC84();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_10002F214(&qword_10069E960);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100527F30;
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v6;
  uint64_t v8 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1001F79CC()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100529A00;
  *(void *)(v3 + 32) = v0;
  *(void *)(v3 + 40) = v1;
  *(void *)(v3 + 48) = v2;
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1001F7AA4()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100529A00;
  *(void *)(v3 + 32) = v0;
  *(void *)(v3 + 40) = v1;
  *(void *)(v3 + 48) = v2;
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1001F7B54()
{
  uint64_t v0 = sub_10002F214(&qword_10069E9B0);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v22 = v0;
  uint64_t v23 = v1;
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214(&qword_10069E9B8);
  __chkstk_darwin(v4);
  sub_1001FD960();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._countAndFlagsBits = 0x6874206B63656843;
  v5._object = (void *)0xEA00000000002065;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  sub_1001FDAAC();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._countAndFlagsBits = 0x2E6D65746920;
  v6._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v21 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v7 = v22;
  Swift::String v19 = *(void (**)(char *, uint64_t))(v23 + 8);
  v23 += 8;
  v19(v3, v22);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v8._countAndFlagsBits = 0x666F206B63656843;
  v8._object = (void *)0xEE00206568742066;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v9._countAndFlagsBits = 0x2E6D65746920;
  v9._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v20 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v10 = v19;
  v19(v3, v7);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._countAndFlagsBits = 0x6863206120646441;
  v11._object = (void *)0xEF206F74206B6365;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._countAndFlagsBits = 46;
  v12._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v13 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v10(v3, v22);
  sub_10002F214(&qword_10069E9C0);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_100529A00;
  uint64_t v15 = v20;
  *(void *)(v14 + 32) = v21;
  *(void *)(v14 + 40) = v15;
  *(void *)(v14 + 48) = v13;
  uint64_t v16 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1001F7F78()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1001FDAAC();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1001FD960();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  Swift::String v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  swift_getKeyPath();
  sub_1001FDBC4();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_10002F214(&qword_10069E960);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100527F30;
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v6;
  uint64_t v8 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1001F8160()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10052AC40;
  *(void *)(v5 + 32) = v0;
  *(void *)(v5 + 40) = v1;
  *(void *)(v5 + 48) = v2;
  *(void *)(v5 + 56) = v3;
  *(void *)(v5 + 64) = v4;
  uint64_t v6 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1001F8280()
{
  return sub_1001FAB98();
}

uint64_t sub_1001F8294(uint64_t a1)
{
  uint64_t v22 = sub_10002F214(&qword_10069E9B0);
  uint64_t v24 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214(&qword_10069E9B8);
  __chkstk_darwin(v4);
  sub_1001FD960();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._countAndFlagsBits = 0x6874207261656C43;
  v5._object = (void *)0xEA00000000002065;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  sub_1001FDAAC();
  uint64_t v19 = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._countAndFlagsBits = 0x2E6E6F6974706F20;
  v6._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v24 + 8);
  uint64_t v23 = v7;
  v24 += 8;
  uint64_t v8 = v22;
  v20(v3, v22);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v9._object = (void *)0x800000010054FE00;
  v9._countAndFlagsBits = 0xD00000000000001ALL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v10._countAndFlagsBits = 0x2E6D65746920;
  v10._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v21 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v11 = v20;
  v20(v3, v8);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v12._countAndFlagsBits = 0x206B636568636E55;
  v12._object = (void *)0xEC00000020656874;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v13._countAndFlagsBits = 0x2E6D65746920;
  v13._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v14 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v11(v3, v8);
  sub_10002F214(&qword_10069E9C0);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_100529A00;
  uint64_t v16 = v21;
  *(void *)(v15 + 32) = v23;
  *(void *)(v15 + 40) = v16;
  *(void *)(v15 + 48) = v14;
  uint64_t v17 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_1001F86C0()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1001FDAAC();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1001FD960();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  Swift::String v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  swift_getKeyPath();
  sub_1001FDBC4();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_10002F214(&qword_10069E960);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100527F30;
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v6;
  uint64_t v8 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1001F88A8()
{
  return sub_1001FAB98();
}

uint64_t sub_1001F88C0(uint64_t a1)
{
  uint64_t v2 = sub_10002F214(&qword_10069E988);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v33 = v2;
  uint64_t v34 = v3;
  __chkstk_darwin(v2);
  Swift::String v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214(&qword_10069E990);
  __chkstk_darwin(v6);
  sub_1000342B8();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v7._countAndFlagsBits = 0xD000000000000019;
  v7._object = (void *)0x800000010054FD00;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  swift_getKeyPath();
  unint64_t v31 = sub_1001FDA50();
  v26[1] = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v8._countAndFlagsBits = 46;
  v8._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v30 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v9 = v33;
  uint64_t v32 = *(void (**)(char *, uint64_t))(v34 + 8);
  v34 += 8;
  v32(v5, v33);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v10._countAndFlagsBits = 0x100000000000002ALL;
  v10._object = (void *)0x800000010054FD20;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v11._countAndFlagsBits = 46;
  v11._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v29 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v12 = v32;
  v32(v5, v9);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v13._countAndFlagsBits = 0x206120646441;
  v13._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v14._countAndFlagsBits = 0xD000000000000020;
  v14._object = (void *)0x800000010054FD50;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v28 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v12(v5, v33);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v15._object = (void *)0x800000010054FD80;
  v15._countAndFlagsBits = 0xD000000000000017;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v16._countAndFlagsBits = 46;
  v16._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v27 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v17 = v33;
  v32(v5, v33);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v18._object = (void *)0x800000010054FDA0;
  v18._countAndFlagsBits = 0x100000000000001FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v19._countAndFlagsBits = 46;
  v19._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v20 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v32(v5, v17);
  sub_10002F214(&qword_10069E998);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_10052AC40;
  uint64_t v22 = v29;
  *(void *)(v21 + 32) = v30;
  *(void *)(v21 + 40) = v22;
  uint64_t v23 = v27;
  *(void *)(v21 + 48) = v28;
  *(void *)(v21 + 56) = v23;
  *(void *)(v21 + 64) = v20;
  uint64_t v24 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t sub_1001F8EA0(uint64_t a1)
{
  return sub_1001F8EE8(a1, (uint64_t)&unk_10052AD38, (void (*)(void))sub_1001FDA50, (void (*)(uint64_t))sub_1000342B8);
}

uint64_t sub_1001F8EE8(uint64_t a1, uint64_t a2, void (*a3)(void), void (*a4)(uint64_t))
{
  uint64_t v6 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  a3();
  _AssistantIntent.IntentProjection.subscript.getter();
  uint64_t v10 = swift_release();
  a4(v10);
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v11 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_10002F214(&qword_10069E960);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_100524D10;
  *(void *)(v12 + 32) = v11;
  uint64_t v13 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1001F9060()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v5 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v6 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v7 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v8 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10052AC90;
  *(void *)(v9 + 32) = v0;
  *(void *)(v9 + 40) = v1;
  *(void *)(v9 + 48) = v2;
  *(void *)(v9 + 56) = v3;
  *(void *)(v9 + 64) = v4;
  *(void *)(v9 + 72) = v5;
  *(void *)(v9 + 80) = v6;
  *(void *)(v9 + 88) = v7;
  *(void *)(v9 + 96) = v8;
  uint64_t v10 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1001F920C(uint64_t a1)
{
  uint64_t v35 = a1;
  uint64_t v34 = sub_10002F214(&qword_10069E968);
  uint64_t v1 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214(&qword_10069E970);
  __chkstk_darwin(v4);
  sub_100035E08();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._countAndFlagsBits = 0x6620686372616553;
  v5._object = (void *)0xEE0020796D20726FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  uint64_t v33 = sub_1001FF454(&qword_10069E958, (void (*)(uint64_t))&type metadata accessor for StringSearchCriteria);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._countAndFlagsBits = 0x2E65746F6E20;
  v6._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v30 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v8 = v1 + 8;
  uint64_t v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  uint64_t v9 = v34;
  v7(v3, v34);
  uint64_t v31 = v8;
  uint64_t v32 = v7;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v10._countAndFlagsBits = 0xD00000000000001CLL;
  v10._object = (void *)0x800000010054FCA0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v11._countAndFlagsBits = 46;
  v11._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v29 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v7(v3, v9);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v12._object = (void *)0x800000010054FCC0;
  v12._countAndFlagsBits = 0xD000000000000015;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v13._countAndFlagsBits = 46;
  v13._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v28 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v32(v3, v34);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v14._countAndFlagsBits = 0xD000000000000018;
  v14._object = (void *)0x800000010054FCE0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._countAndFlagsBits = 46;
  v15._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v27 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v16 = v34;
  uint64_t v17 = v32;
  v32(v3, v34);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v18._countAndFlagsBits = 0x20656D20776F6853;
  v18._object = (void *)0xEB0000000020796DLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v19._countAndFlagsBits = 0x2E7365746F6E20;
  v19._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v20 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v17(v3, v16);
  sub_10002F214(&qword_10069E978);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_10052AC40;
  uint64_t v22 = v29;
  *(void *)(v21 + 32) = v30;
  *(void *)(v21 + 40) = v22;
  uint64_t v23 = v27;
  *(void *)(v21 + 48) = v28;
  *(void *)(v21 + 56) = v23;
  *(void *)(v21 + 64) = v20;
  uint64_t v24 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t sub_1001F981C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StringSearchCriteria();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  Swift::String v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v11 - v7;
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v11 - v7, a1, v2);
  v9(v6, (uint64_t)v8, v2);
  IntentParameter.wrappedValue.setter();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t sub_1001F9950()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1001FF454(&qword_10069E958, (void (*)(uint64_t))&type metadata accessor for StringSearchCriteria);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_100035E08();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_10002F214(&qword_10069E960);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100524D10;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1001F9AE8()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10052AC50;
  *(void *)(v4 + 32) = v0;
  *(void *)(v4 + 40) = v1;
  *(void *)(v4 + 48) = v2;
  *(void *)(v4 + 56) = v3;
  uint64_t v5 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1001F9BBC()
{
  uint64_t v19 = type metadata accessor for _AssistantIntent.PhraseToken();
  uint64_t v0 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v2 = (char *)&v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10002F214(&qword_10069E940);
  __chkstk_darwin(v3);
  uint64_t v4 = sub_10002F214(&qword_10069E948);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001FD51C();
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v20 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v5 + 8);
  v8(v7, v4);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v9._countAndFlagsBits = 0xD000000000000019;
  v9._object = (void *)0x800000010054FC10;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  uint64_t v10 = v19;
  (*(void (**)(char *, void, uint64_t))(v0 + 104))(v2, enum case for _AssistantIntent.PhraseToken.applicationName(_:), v19);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  (*(void (**)(char *, uint64_t))(v0 + 8))(v2, v10);
  v11._countAndFlagsBits = 46;
  v11._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v12 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v8(v7, v4);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v13 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v8(v7, v4);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v14 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v8(v7, v4);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v15 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v8(v7, v4);
  sub_10002F214(&qword_10069E950);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_10052AC40;
  *(void *)(v16 + 32) = v20;
  *(void *)(v16 + 40) = v12;
  *(void *)(v16 + 48) = v13;
  *(void *)(v16 + 56) = v14;
  *(void *)(v16 + 64) = v15;
  uint64_t v17 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_1001F9FD0()
{
  uint64_t v32 = type metadata accessor for _AssistantIntent.PhraseToken();
  uint64_t v0 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v2 = (char *)&v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10002F214(&qword_10069E928);
  __chkstk_darwin(v3);
  uint64_t v4 = sub_10002F214(&qword_10069E930);
  uint64_t v24 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100034754();
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v31 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v5 + 8);
  v23(v7, v4);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v8._object = (void *)0x800000010054FB50;
  v8._countAndFlagsBits = 0xD000000000000010;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  unsigned int v28 = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  uint64_t v27 = *(void (**)(char *))(v0 + 104);
  uint64_t v9 = v32;
  v27(v2);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v0 + 8);
  uint64_t v25 = v0 + 8;
  uint64_t v26 = v10;
  v10(v2, v9);
  v11._countAndFlagsBits = 46;
  v11._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v30 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v13 = v23;
  uint64_t v12 = v24;
  v23(v7, v24);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v29 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v13(v7, v12);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v14._countAndFlagsBits = 0xD00000000000001CLL;
  v14._object = (void *)0x800000010054FBA0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  uint64_t v15 = v32;
  ((void (*)(char *, void, uint64_t))v27)(v2, v28, v32);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  v26(v2, v15);
  v16._countAndFlagsBits = 46;
  v16._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v17 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v13(v7, v12);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v18 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v13(v7, v12);
  sub_10002F214(&qword_10069E938);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_10052AC40;
  uint64_t v20 = v30;
  *(void *)(v19 + 32) = v31;
  *(void *)(v19 + 40) = v20;
  *(void *)(v19 + 48) = v29;
  *(void *)(v19 + 56) = v17;
  *(void *)(v19 + 64) = v18;
  uint64_t v21 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_1001FA488()
{
  uint64_t v0 = sub_10002F214(&qword_10069E918);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003564C();
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v13 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v4 = *(void (**)(char *, uint64_t))(v1 + 8);
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v6 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  sub_10002F214(&qword_10069E920);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10052AC40;
  *(void *)(v9 + 32) = v13;
  *(void *)(v9 + 40) = v5;
  *(void *)(v9 + 48) = v6;
  *(void *)(v9 + 56) = v7;
  *(void *)(v9 + 64) = v8;
  uint64_t v10 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1001FA738()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100529A00;
  *(void *)(v3 + 32) = v0;
  *(void *)(v3 + 40) = v1;
  *(void *)(v3 + 48) = v2;
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1001FA800()
{
  return sub_1001FA838();
}

uint64_t sub_1001FA838()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100527F30;
  *(void *)(v2 + 32) = v0;
  *(void *)(v2 + 40) = v1;
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1001FA8BC()
{
  return sub_1001FAB98();
}

uint64_t sub_1001FA8D8()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100529A00;
  *(void *)(v3 + 32) = v0;
  *(void *)(v3 + 40) = v1;
  *(void *)(v3 + 48) = v2;
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1001FA9A0()
{
  return sub_1001FAB98();
}

uint64_t sub_1001FA9BC()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10052AC50;
  *(void *)(v4 + 32) = v0;
  *(void *)(v4 + 40) = v1;
  *(void *)(v4 + 48) = v2;
  *(void *)(v4 + 56) = v3;
  uint64_t v5 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1001FAAB4()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100529A00;
  *(void *)(v3 + 32) = v0;
  *(void *)(v3 + 40) = v1;
  *(void *)(v3 + 48) = v2;
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1001FAB7C()
{
  return sub_1001FAB98();
}

uint64_t sub_1001FAB98()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10002F214(&qword_10069E898);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100524D10;
  *(void *)(v1 + 32) = v0;
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v2;
}

ValueMetadata *type metadata accessor for NotesAssistantIntentsProvider()
{
  return &type metadata for NotesAssistantIntentsProvider;
}

uint64_t sub_1001FAC18()
{
  uint64_t FolderIntent = type metadata accessor for CreateFolderIntent();
  __chkstk_darwin(FolderIntent);
  uint64_t v2 = (uint64_t *)((char *)&v139 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v3 = type metadata accessor for _AssistantIntent();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v139 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100479E78(&TagIntentVACycfC_0);
  sub_1001FD570();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v201 = static _AssistantIntent.Builder.buildExpression(_:)();
  uint64_t v7 = *(void (**)(char *, uint64_t))(v4 + 8);
  v7(v6, v3);
  sub_100486B18((uint64_t *)&TagIntentVACycfC_0);
  sub_1001FD5C4();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v200 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  sub_100486B18((uint64_t *)&TagIntentVACycfC_0);
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v199 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  TagIntentVACycfC_0 = (char *)_s11MobileNotes09AddTagsToB6IntentVACycfC_0();
  uint64_t v203 = v8;
  uint64_t v204 = v9;
  uint64_t v205 = v10;
  sub_1001ADBE0();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v198 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  TagIntentVACycfC_0 = _s11MobileNotes18AppendToNoteIntentVACycfC_0();
  uint64_t v203 = v11;
  uint64_t v204 = v12;
  sub_10018444C();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v197 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  sub_10025E5AC((uint64_t *)&TagIntentVACycfC_0);
  sub_100034650();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v196 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  sub_10025E5AC((uint64_t *)&TagIntentVACycfC_0);
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v195 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  sub_10025E5AC((uint64_t *)&TagIntentVACycfC_0);
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v194 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  sub_10025E5AC((uint64_t *)&TagIntentVACycfC_0);
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v193 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  TagIntentVACycfC_0 = _s11MobileNotes29ChangeFolderViewSettingIntentVACycfC_0();
  uint64_t v203 = v13;
  sub_100033AC8();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v192 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  TagIntentVACycfC_0 = _s11MobileNotes29ChangeFolderViewSettingIntentVACycfC_0();
  uint64_t v203 = v14;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v191 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  TagIntentVACycfC_0 = _s11MobileNotes29ChangeFolderViewSettingIntentVACycfC_0();
  uint64_t v203 = v15;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v190 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  sub_100228BC8((uint64_t *)&TagIntentVACycfC_0);
  sub_100034190();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v189 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  sub_100228BC8((uint64_t *)&TagIntentVACycfC_0);
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v188 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  sub_100228BC8((uint64_t *)&TagIntentVACycfC_0);
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v187 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  sub_100228BC8((uint64_t *)&TagIntentVACycfC_0);
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v186 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  sub_100228BC8((uint64_t *)&TagIntentVACycfC_0);
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v185 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  TagIntentVACycfC_0 = _s11MobileNotes19ChangeSettingIntentVACycfC_0();
  uint64_t v203 = v16;
  uint64_t v204 = v17;
  uint64_t v205 = v18;
  sub_1001FD618();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v184 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  TagIntentVACycfC_0 = _s11MobileNotes19ChangeSettingIntentVACycfC_0();
  uint64_t v203 = v19;
  uint64_t v204 = v20;
  uint64_t v205 = v21;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v183 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  TagIntentVACycfC_0 = _s11MobileNotes19ChangeSettingIntentVACycfC_0();
  uint64_t v203 = v22;
  uint64_t v204 = v23;
  uint64_t v205 = v24;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v182 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  TagIntentVACycfC_0 = _s11MobileNotes19ChangeSettingIntentVACycfC_0();
  uint64_t v203 = v25;
  uint64_t v204 = v26;
  uint64_t v205 = v27;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v181 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  TagIntentVACycfC_0 = _s11MobileNotes19ChangeSettingIntentVACycfC_0();
  uint64_t v203 = v28;
  uint64_t v204 = v29;
  uint64_t v205 = v30;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v180 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  TagIntentVACycfC_0 = _s11MobileNotes19ChangeSettingIntentVACycfC_0();
  uint64_t v203 = v31;
  uint64_t v204 = v32;
  uint64_t v205 = v33;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v179 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  TagIntentVACycfC_0 = _s11MobileNotes19ChangeSettingIntentVACycfC_0();
  uint64_t v203 = v34;
  uint64_t v204 = v35;
  uint64_t v205 = v36;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v178 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  TagIntentVACycfC_0 = _s11MobileNotes19ChangeSettingIntentVACycfC_0();
  uint64_t v203 = v37;
  uint64_t v204 = v38;
  uint64_t v205 = v39;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v177 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  TagIntentVACycfC_0 = _s11MobileNotes19ChangeSettingIntentVACycfC_0();
  uint64_t v203 = v40;
  uint64_t v204 = v41;
  uint64_t v205 = v42;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v176 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  TagIntentVACycfC_0 = _s11MobileNotes19ChangeSettingIntentVACycfC_0();
  uint64_t v203 = v43;
  uint64_t v204 = v44;
  uint64_t v205 = v45;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v175 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  sub_1002233C8(&TagIntentVACycfC_0);
  sub_1001FD3CC();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v174 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  CreateFolderIntent.init()(v2);
  sub_1001FF454(&qword_1006A2D90, (void (*)(uint64_t))type metadata accessor for CreateFolderIntent);
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v173 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  sub_1001C4064(&TagIntentVACycfC_0);
  sub_100035308();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v172 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  sub_100403CBC((uint64_t *)&TagIntentVACycfC_0);
  sub_1001FD420();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v171 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  TagIntentVACycfC_0 = (char *)_s11MobileNotes15CreateTagIntentVACycfC_0();
  sub_1001FD474();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v170 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  TagIntentVACycfC_0 = (char *)_s11MobileNotes23DeleteAttachmentsIntentVACycfC_0();
  uint64_t v203 = v46;
  uint64_t v204 = v47;
  sub_1001FD66C();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v169 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  TagIntentVACycfC_0 = (char *)_s11MobileNotes26DeleteChecklistItemsIntentVACycfC_0();
  uint64_t v203 = v48;
  uint64_t v204 = v49;
  sub_10017C0D4();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v168 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  TagIntentVACycfC_0 = (char *)_s11MobileNotes19DeleteFoldersIntentVACycfC_0();
  uint64_t v203 = v50;
  sub_1001FD6C0();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v167 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  TagIntentVACycfC_0 = (char *)_s11MobileNotes06DeleteB6IntentVACycfC_0();
  uint64_t v203 = v51;
  uint64_t v204 = v52;
  sub_1001FD714();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v166 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  TagIntentVACycfC_0 = (char *)_s11MobileNotes18DeleteTablesIntentVACycfC_0();
  uint64_t v203 = v53;
  uint64_t v204 = v54;
  sub_1001FD768();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v165 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  TagIntentVACycfC_0 = (char *)_s11MobileNotes16DeleteTagsIntentVACycfC_0();
  uint64_t v203 = v55;
  uint64_t v204 = v56;
  sub_100035204();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v164 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  TagIntentVACycfC_0 = (char *)_s11MobileNotes09GetLinkedB6IntentVACycfC_0();
  uint64_t v203 = v57;
  sub_1001FD7BC();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v163 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  sub_10047C754((uint64_t)&TagIntentVACycfC_0);
  sub_1001FD810();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v162 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  sub_1002AF0B0(&TagIntentVACycfC_0);
  sub_1001FD4C8();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v161 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  sub_1003CD2A4((uint64_t *)&TagIntentVACycfC_0);
  sub_1000349B0();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v160 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  sub_100331EF0(&TagIntentVACycfC_0);
  sub_100036010();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v159 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  TagIntentVACycfC_0 = (char *)_s11MobileNotes17OpenAccountIntentVACycfC_0();
  uint64_t v203 = v58;
  uint64_t v204 = v59;
  sub_100034BB8();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v158 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  TagIntentVACycfC_0 = (char *)_s11MobileNotes20OpenAttachmentIntentVACycfC_0();
  uint64_t v203 = v60;
  uint64_t v204 = v61;
  sub_100034858();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v157 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  TagIntentVACycfC_0 = (char *)_s11MobileNotes23OpenChecklistItemIntentVACycfC_0();
  uint64_t v203 = v62;
  uint64_t v204 = v63;
  sub_1000343BC();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v156 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  TagIntentVACycfC_0 = (char *)_s11MobileNotes16OpenFolderIntentVACycfC_0();
  uint64_t v203 = v64;
  uint64_t v204 = v65;
  sub_100034CBC();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v155 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  TagIntentVACycfC_0 = (char *)_s11MobileNotes14OpenNoteIntentVACycfC_0();
  uint64_t v203 = v66;
  uint64_t v204 = v67;
  sub_100035854();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v154 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  TagIntentVACycfC_0 = (char *)_s11MobileNotes04OpenB10ViewIntentVACycfC_0();
  uint64_t v203 = v68;
  sub_100035F0C();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v153 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  TagIntentVACycfC_0 = (char *)_s11MobileNotes04OpenB10ViewIntentVACycfC_0();
  uint64_t v203 = v69;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v152 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  TagIntentVACycfC_0 = (char *)_s11MobileNotes24OpenTopLevelFolderIntentVACycfC_0();
  uint64_t v203 = v70;
  sub_10003408C();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v151 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  TagIntentVACycfC_0 = (char *)_s11MobileNotes24OpenTopLevelFolderIntentVACycfC_0();
  uint64_t v203 = v71;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v150 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  TagIntentVACycfC_0 = (char *)_s11MobileNotes15OpenTableIntentVACycfC_0();
  uint64_t v203 = v72;
  uint64_t v204 = v73;
  sub_100035750();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v149 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  TagIntentVACycfC_0 = (char *)_s11MobileNotes13OpenTagIntentVACycfC_0();
  uint64_t v203 = v74;
  sub_100035A5C();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v148 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  TagIntentVACycfC_0 = _s11MobileNotes03PinB6IntentVACycfC_0();
  uint64_t v203 = v75;
  uint64_t v204 = v76;
  uint64_t v205 = v77;
  sub_1001FD864();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v147 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  TagIntentVACycfC_0 = _s11MobileNotes03PinB6IntentVACycfC_0();
  uint64_t v203 = v78;
  uint64_t v204 = v79;
  uint64_t v205 = v80;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v146 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  TagIntentVACycfC_0 = (char *)_s11MobileNotes014RemoveTagsFromB6IntentVACycfC_0();
  uint64_t v203 = v81;
  uint64_t v204 = v82;
  uint64_t v205 = v83;
  sub_100160EBC();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v145 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  TagIntentVACycfC_0 = _s11MobileNotes18RenameFolderIntentVACycfC_0();
  uint64_t v203 = v84;
  uint64_t v204 = v85;
  uint64_t v205 = v86;
  sub_1001FD8B8();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v144 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  TagIntentVACycfC_0 = (char *)_s11MobileNotes22ReplaceSelectionIntentVACycfC_0();
  uint64_t v203 = v87;
  uint64_t v204 = v88;
  sub_1000344C0();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v143 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  TagIntentVACycfC_0 = (char *)_s11MobileNotes20StartRecordingIntentVACycfC_0();
  uint64_t v203 = v89;
  sub_100034AB4();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v142 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  TagIntentVACycfC_0 = _s11MobileNotes23SetAttachmentSizeIntentVACycfC_0();
  uint64_t v203 = v90;
  uint64_t v204 = v91;
  uint64_t v205 = v92;
  sub_1001FD90C();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v141 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  sub_1004AE968((uint64_t *)&TagIntentVACycfC_0);
  sub_1001FD960();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v140 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  sub_1004AE968((uint64_t *)&TagIntentVACycfC_0);
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v93 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  TagIntentVACycfC_0 = (char *)_s11MobileNotes23SetParagraphStyleIntentVACycfC_0();
  uint64_t v203 = v94;
  uint64_t v204 = v95;
  sub_1000342B8();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v96 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  TagIntentVACycfC_0 = (char *)sub_1001A5E58();
  sub_100035E08();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v97 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  id v98 = [self configurationForDefaultMainDisplayMonitor];
  id v99 = [self monitorWithConfiguration:v98];

  type metadata accessor for ShowQuickNoteIntent.LayoutMonitorBox();
  uint64_t v100 = swift_allocObject();
  *(void *)(v100 + 16) = v99;
  TagIntentVACycfC_0 = (char *)v100;
  sub_1001FD51C();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v101 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  TagIntentVACycfC_0 = (char *)_s11MobileNotes20StartRecordingIntentVACycfC_0();
  uint64_t v203 = v102;
  sub_100034754();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v103 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  TagIntentVACycfC_0 = (char *)_s11MobileNotes20StartRecordingIntentVACycfC_0();
  uint64_t v203 = v104;
  sub_10003564C();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v105 = static _AssistantIntent.Builder.buildExpression(_:)();
  v7(v6, v3);
  sub_10002F214(&qword_10069E910);
  uint64_t v106 = swift_allocObject();
  uint64_t v107 = v200;
  *(void *)(v106 + 32) = v201;
  *(void *)(v106 + 40) = v107;
  uint64_t v108 = v198;
  *(void *)(v106 + 48) = v199;
  *(void *)(v106 + 56) = v108;
  uint64_t v109 = v196;
  *(void *)(v106 + 64) = v197;
  *(void *)(v106 + 72) = v109;
  uint64_t v110 = v194;
  *(void *)(v106 + 80) = v195;
  *(void *)(v106 + 88) = v110;
  uint64_t v111 = v192;
  *(void *)(v106 + 96) = v193;
  *(void *)(v106 + 104) = v111;
  uint64_t v112 = v190;
  *(void *)(v106 + 112) = v191;
  *(void *)(v106 + 120) = v112;
  uint64_t v113 = v188;
  *(void *)(v106 + 128) = v189;
  *(void *)(v106 + 136) = v113;
  uint64_t v114 = v186;
  *(void *)(v106 + 144) = v187;
  *(void *)(v106 + 152) = v114;
  uint64_t v115 = v184;
  *(void *)(v106 + 160) = v185;
  *(void *)(v106 + 168) = v115;
  uint64_t v116 = v182;
  *(void *)(v106 + 176) = v183;
  *(void *)(v106 + 184) = v116;
  uint64_t v117 = v180;
  *(void *)(v106 + 192) = v181;
  *(void *)(v106 + 200) = v117;
  uint64_t v118 = v178;
  *(void *)(v106 + 208) = v179;
  *(void *)(v106 + 216) = v118;
  uint64_t v119 = v176;
  *(void *)(v106 + 224) = v177;
  *(void *)(v106 + 232) = v119;
  uint64_t v120 = v174;
  *(void *)(v106 + 240) = v175;
  *(void *)(v106 + 248) = v120;
  uint64_t v121 = v172;
  *(void *)(v106 + 256) = v173;
  *(void *)(v106 + 264) = v121;
  uint64_t v122 = v170;
  *(void *)(v106 + 272) = v171;
  *(void *)(v106 + 280) = v122;
  uint64_t v123 = v168;
  *(void *)(v106 + 288) = v169;
  *(void *)(v106 + 296) = v123;
  uint64_t v124 = v166;
  *(void *)(v106 + 304) = v167;
  *(void *)(v106 + 312) = v124;
  uint64_t v125 = v164;
  *(void *)(v106 + 320) = v165;
  *(void *)(v106 + 328) = v125;
  uint64_t v126 = v162;
  *(void *)(v106 + 336) = v163;
  *(void *)(v106 + 344) = v126;
  *(_OWORD *)(v106 + 16) = xmmword_10052ACA0;
  uint64_t v127 = v160;
  *(void *)(v106 + 352) = v161;
  *(void *)(v106 + 360) = v127;
  uint64_t v128 = v158;
  *(void *)(v106 + 368) = v159;
  *(void *)(v106 + 376) = v128;
  uint64_t v129 = v156;
  *(void *)(v106 + 384) = v157;
  *(void *)(v106 + 392) = v129;
  uint64_t v130 = v154;
  *(void *)(v106 + 400) = v155;
  *(void *)(v106 + 408) = v130;
  uint64_t v131 = v152;
  *(void *)(v106 + 416) = v153;
  *(void *)(v106 + 424) = v131;
  uint64_t v132 = v150;
  *(void *)(v106 + 432) = v151;
  *(void *)(v106 + 440) = v132;
  uint64_t v133 = v148;
  *(void *)(v106 + 448) = v149;
  *(void *)(v106 + 456) = v133;
  uint64_t v134 = v146;
  *(void *)(v106 + 464) = v147;
  *(void *)(v106 + 472) = v134;
  uint64_t v135 = v144;
  *(void *)(v106 + 480) = v145;
  *(void *)(v106 + 488) = v135;
  uint64_t v136 = v142;
  *(void *)(v106 + 496) = v143;
  *(void *)(v106 + 504) = v136;
  *(void *)(v106 + 512) = v141;
  *(void *)(v106 + 520) = v140;
  *(void *)(v106 + 528) = v93;
  *(void *)(v106 + 536) = v96;
  *(void *)(v106 + 544) = v97;
  *(void *)(v106 + 552) = v101;
  *(void *)(v106 + 560) = v103;
  *(void *)(v106 + 568) = v105;
  uint64_t v137 = static _AssistantIntent.Builder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v137;
}

uint64_t sub_1001FCFE0()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.NegativeAssistantIntentPhrases();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001FD3CC();
  _AssistantIntent.NegativeAssistantIntentPhrases.init<A>(for:phrases:)();
  uint64_t v16 = static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildExpression(_:)();
  uint64_t v4 = *(void (**)(char *, uint64_t))(v1 + 8);
  v4(v3, v0);
  type metadata accessor for CreateFolderIntent();
  sub_1001FF454(&qword_1006A2D90, (void (*)(uint64_t))type metadata accessor for CreateFolderIntent);
  _AssistantIntent.NegativeAssistantIntentPhrases.init<A>(for:phrases:)();
  uint64_t v15 = static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildExpression(_:)();
  v4(v3, v0);
  sub_100035308();
  _AssistantIntent.NegativeAssistantIntentPhrases.init<A>(for:phrases:)();
  uint64_t v5 = static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildExpression(_:)();
  v4(v3, v0);
  sub_1001FD420();
  _AssistantIntent.NegativeAssistantIntentPhrases.init<A>(for:phrases:)();
  uint64_t v6 = static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildExpression(_:)();
  v4(v3, v0);
  sub_1001FD474();
  _AssistantIntent.NegativeAssistantIntentPhrases.init<A>(for:phrases:)();
  uint64_t v7 = static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildExpression(_:)();
  v4(v3, v0);
  sub_1001FD4C8();
  _AssistantIntent.NegativeAssistantIntentPhrases.init<A>(for:phrases:)();
  uint64_t v8 = static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildExpression(_:)();
  v4(v3, v0);
  sub_1000349B0();
  _AssistantIntent.NegativeAssistantIntentPhrases.init<A>(for:phrases:)();
  uint64_t v9 = static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildExpression(_:)();
  v4(v3, v0);
  sub_1001FD51C();
  _AssistantIntent.NegativeAssistantIntentPhrases.init<A>(for:phrases:)();
  uint64_t v10 = static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildExpression(_:)();
  v4(v3, v0);
  sub_10002F214(&qword_10069E890);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_10052AC80;
  uint64_t v12 = v15;
  *(void *)(v11 + 32) = v16;
  *(void *)(v11 + 40) = v12;
  *(void *)(v11 + 48) = v5;
  *(void *)(v11 + 56) = v6;
  *(void *)(v11 + 64) = v7;
  *(void *)(v11 + 72) = v8;
  *(void *)(v11 + 80) = v9;
  *(void *)(v11 + 88) = v10;
  uint64_t v13 = static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v13;
}

unint64_t sub_1001FD3CC()
{
  unint64_t result = qword_10069E860;
  if (!qword_10069E860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069E860);
  }
  return result;
}

unint64_t sub_1001FD420()
{
  unint64_t result = qword_10069E868;
  if (!qword_10069E868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069E868);
  }
  return result;
}

unint64_t sub_1001FD474()
{
  unint64_t result = qword_10069E870;
  if (!qword_10069E870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069E870);
  }
  return result;
}

unint64_t sub_1001FD4C8()
{
  unint64_t result = qword_10069E878;
  if (!qword_10069E878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069E878);
  }
  return result;
}

unint64_t sub_1001FD51C()
{
  unint64_t result = qword_10069E888;
  if (!qword_10069E888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069E888);
  }
  return result;
}

unint64_t sub_1001FD570()
{
  unint64_t result = qword_10069E8A0;
  if (!qword_10069E8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069E8A0);
  }
  return result;
}

unint64_t sub_1001FD5C4()
{
  unint64_t result = qword_10069E8A8;
  if (!qword_10069E8A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069E8A8);
  }
  return result;
}

unint64_t sub_1001FD618()
{
  unint64_t result = qword_10069E8B0;
  if (!qword_10069E8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069E8B0);
  }
  return result;
}

unint64_t sub_1001FD66C()
{
  unint64_t result = qword_10069E8B8;
  if (!qword_10069E8B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069E8B8);
  }
  return result;
}

unint64_t sub_1001FD6C0()
{
  unint64_t result = qword_10069E8C0;
  if (!qword_10069E8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069E8C0);
  }
  return result;
}

unint64_t sub_1001FD714()
{
  unint64_t result = qword_10069E8C8;
  if (!qword_10069E8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069E8C8);
  }
  return result;
}

unint64_t sub_1001FD768()
{
  unint64_t result = qword_10069E8D0;
  if (!qword_10069E8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069E8D0);
  }
  return result;
}

unint64_t sub_1001FD7BC()
{
  unint64_t result = qword_10069E8D8;
  if (!qword_10069E8D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069E8D8);
  }
  return result;
}

unint64_t sub_1001FD810()
{
  unint64_t result = qword_10069E8E0;
  if (!qword_10069E8E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069E8E0);
  }
  return result;
}

unint64_t sub_1001FD864()
{
  unint64_t result = qword_10069E8E8;
  if (!qword_10069E8E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069E8E8);
  }
  return result;
}

unint64_t sub_1001FD8B8()
{
  unint64_t result = qword_10069E8F0;
  if (!qword_10069E8F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069E8F0);
  }
  return result;
}

unint64_t sub_1001FD90C()
{
  unint64_t result = qword_10069E900;
  if (!qword_10069E900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069E900);
  }
  return result;
}

unint64_t sub_1001FD960()
{
  unint64_t result = qword_1006A9380;
  if (!qword_1006A9380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A9380);
  }
  return result;
}

uint64_t sub_1001FD9B4()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_1001FD9DC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_1001FDA18()
{
  return IntentParameter.wrappedValue.setter();
}

unint64_t sub_1001FDA50()
{
  unint64_t result = qword_10069E980;
  if (!qword_10069E980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069E980);
  }
  return result;
}

unint64_t sub_1001FDAAC()
{
  unint64_t result = qword_10069E9A0;
  if (!qword_10069E9A0)
  {
    sub_10001DFF4(qword_1006A4F10);
    sub_1001FF454(&qword_1006A4F00, (void (*)(uint64_t))type metadata accessor for ChecklistItemEntity);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069E9A0);
  }
  return result;
}

uint64_t sub_1001FDB50@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_1001FDB8C()
{
  return IntentParameter.wrappedValue.setter();
}

unint64_t sub_1001FDBC4()
{
  unint64_t result = qword_10069E9A8;
  if (!qword_10069E9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069E9A8);
  }
  return result;
}

uint64_t sub_1001FDC18()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_1001FDC3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001F76D8(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for AttachmentEntity, (uint64_t (*)(void))type metadata accessor for AttachmentEntity);
}

unint64_t sub_1001FDC84()
{
  unint64_t result = qword_1006A5610;
  if (!qword_1006A5610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5610);
  }
  return result;
}

uint64_t sub_1001FDCD8()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_1001FDD00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001F76D8(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for FolderEntity, (uint64_t (*)(void))type metadata accessor for FolderEntity);
}

uint64_t sub_1001FDD40@<X0>(void *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1001FDD7C()
{
  return IntentParameter.wrappedValue.setter();
}

unint64_t sub_1001FDDB8()
{
  unint64_t result = qword_10069EA18;
  if (!qword_10069EA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069EA18);
  }
  return result;
}

unint64_t sub_1001FDE14()
{
  unint64_t result = qword_10069EA38;
  if (!qword_10069EA38)
  {
    sub_10001DFF4(&qword_10069C410);
    sub_1001FF454(&qword_1006A0140, (void (*)(uint64_t))type metadata accessor for TagEntity);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069EA38);
  }
  return result;
}

uint64_t sub_1001FDEC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001F41E0(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for FavoriteOperation);
}

uint64_t sub_1001FDEF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001F3468(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for TagEntity, (uint64_t (*)(void))type metadata accessor for TagEntity);
}

uint64_t sub_1001FDF30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001EF6C0(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for TableEntity, (uint64_t (*)(void))type metadata accessor for TableEntity);
}

uint64_t sub_1001FDF70@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_1001FDFAC()
{
  return IntentParameter.wrappedValue.setter();
}

unint64_t sub_1001FDFE4()
{
  unint64_t result = qword_10069EAA8;
  if (!qword_10069EAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069EAA8);
  }
  return result;
}

uint64_t sub_1001FE038@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_1001FE074()
{
  return IntentParameter.wrappedValue.setter();
}

unint64_t sub_1001FE0AC()
{
  unint64_t result = qword_10069EAC0;
  if (!qword_10069EAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069EAC0);
  }
  return result;
}

uint64_t sub_1001FE100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001EF6C0(a1, a2, a3, a4, type metadata accessor for NoteEntity, type metadata accessor for NoteEntity);
}

uint64_t sub_1001FE140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001EF6C0(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for FolderEntity, (uint64_t (*)(void))type metadata accessor for FolderEntity);
}

uint64_t sub_1001FE180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001EF6C0(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for ChecklistItemEntity, (uint64_t (*)(void))type metadata accessor for ChecklistItemEntity);
}

uint64_t sub_1001FE1C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001EF6C0(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for AttachmentEntity, (uint64_t (*)(void))type metadata accessor for AttachmentEntity);
}

uint64_t sub_1001FE200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001EF6C0(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for AccountEntity, (uint64_t (*)(void))type metadata accessor for AccountEntity);
}

uint64_t sub_1001FE240(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001FE2A8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1001FE314()
{
  return IntentParameter.wrappedValue.getter();
}

unint64_t sub_1001FE33C()
{
  unint64_t result = qword_10069EB68;
  if (!qword_10069EB68)
  {
    sub_10001DFF4(&qword_10069B1D0);
    sub_1001FF454((unint64_t *)&qword_10069CD70, (void (*)(uint64_t))type metadata accessor for NoteEntity);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069EB68);
  }
  return result;
}

uint64_t sub_1001FE3E0()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_1001FE408@<X0>(void *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1001FE444()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t sub_1001FE480()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_1001FE4A8()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_1001FE4D0()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_1001FE4F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001F3468(a1, a2, a3, a4, type metadata accessor for NoteEntity, type metadata accessor for NoteEntity);
}

uint64_t sub_1001FE534@<X0>(void *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_1001FE570()
{
  return IntentParameter.wrappedValue.setter();
}

unint64_t sub_1001FE5B4()
{
  unint64_t result = qword_10069EBE8;
  if (!qword_10069EBE8)
  {
    sub_10001DFF4(&qword_10069EBF0);
    sub_1001FF454(&qword_10069D3D8, (void (*)(uint64_t))type metadata accessor for TableEntity);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069EBE8);
  }
  return result;
}

uint64_t sub_1001FE660@<X0>(void *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_1001FE69C()
{
  return IntentParameter.wrappedValue.setter();
}

unint64_t sub_1001FE6D8()
{
  unint64_t result = qword_10069EC28;
  if (!qword_10069EC28)
  {
    sub_10001DFF4(qword_10069C890);
    sub_1001FF454((unint64_t *)&unk_1006A2DC0, (void (*)(uint64_t))type metadata accessor for FolderEntity);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069EC28);
  }
  return result;
}

uint64_t sub_1001FE788@<X0>(void *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_1001FE7C8()
{
  return IntentParameter.wrappedValue.setter();
}

unint64_t sub_1001FE804()
{
  unint64_t result = qword_10069EC60;
  if (!qword_10069EC60)
  {
    sub_10001DFF4(qword_1006A1690);
    sub_1001FF454(&qword_10069EEF0, (void (*)(uint64_t))type metadata accessor for AttachmentEntity);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069EC60);
  }
  return result;
}

double sub_1001FE8A8@<D0>(_OWORD *a1@<X8>)
{
  IntentParameter.wrappedValue.getter();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1001FE8E4()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t sub_1001FE920(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001DFF4(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001FE998()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_1001FE9BC(uint64_t a1)
{
  return sub_1001E8108(a1);
}

double sub_1001FE9D4@<D0>(_OWORD *a1@<X8>)
{
  IntentParameter.wrappedValue.getter();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1001FEA10()
{
  return IntentParameter.wrappedValue.setter();
}

double sub_1001FEA4C@<D0>(_OWORD *a1@<X8>)
{
  IntentParameter.wrappedValue.getter();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1001FEA88()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t sub_1001FEAC4()
{
  return IntentParameter.wrappedValue.getter();
}

unint64_t sub_1001FEAEC()
{
  unint64_t result = qword_1006A0250;
  if (!qword_1006A0250)
  {
    sub_10001DFF4(&qword_10069B260);
    sub_1001FF454((unint64_t *)&unk_1006A2DC0, (void (*)(uint64_t))type metadata accessor for FolderEntity);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0250);
  }
  return result;
}

double sub_1001FEB90@<D0>(_OWORD *a1@<X8>)
{
  IntentParameter.wrappedValue.getter();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1001FEBCC()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t sub_1001FEC08()
{
  return IntentParameter.wrappedValue.getter();
}

double sub_1001FEC30@<D0>(_OWORD *a1@<X8>)
{
  IntentParameter.wrappedValue.getter();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1001FEC6C()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t sub_1001FECAC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_1001FECEC()
{
  return IntentParameter.wrappedValue.setter();
}

unint64_t sub_1001FED24()
{
  unint64_t result = qword_10069ED08;
  if (!qword_10069ED08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069ED08);
  }
  return result;
}

uint64_t sub_1001FED78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001F41E0(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for ChangeOperation);
}

uint64_t sub_1001FEDA4@<X0>(void *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_1001FEDE0()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t sub_1001FEE20@<X0>(void *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_1001FEE60()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t sub_1001FEE9C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_1001FEED8()
{
  return IntentParameter.wrappedValue.setter();
}

unint64_t sub_1001FEF10()
{
  unint64_t result = qword_10069ED28;
  if (!qword_10069ED28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069ED28);
  }
  return result;
}

uint64_t sub_1001FEF64@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_1001FEFA0()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t sub_1001FEFDC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_1001FF018()
{
  return IntentParameter.wrappedValue.setter();
}

unint64_t sub_1001FF050()
{
  unint64_t result = qword_10069ED68;
  if (!qword_10069ED68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069ED68);
  }
  return result;
}

uint64_t sub_1001FF0A4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_1001FF0E0()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t sub_1001FF118@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_1001FF154()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t sub_1001FF18C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_1001FF1C8()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t sub_1001FF200()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_1001FF228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001EF6C0(a1, a2, a3, a4, type metadata accessor for NoteEntity, type metadata accessor for NoteEntity);
}

uint64_t sub_1001FF270@<X0>(void *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_1001FF2B0()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t sub_1001FF2EC()
{
  return IntentParameter.wrappedValue.getter();
}

unint64_t sub_1001FF31C()
{
  unint64_t result = qword_10069FC80;
  if (!qword_10069FC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069FC80);
  }
  return result;
}

uint64_t sub_1001FF370(uint64_t a1)
{
  return sub_1001E8108(a1);
}

uint64_t sub_1001FF388()
{
  return IntentParameter.wrappedValue.getter();
}

unint64_t sub_1001FF3B0()
{
  unint64_t result = qword_10069EDC8;
  if (!qword_10069EDC8)
  {
    sub_10001DFF4(&qword_10069B538);
    sub_1001FF454(&qword_10069EDD0, (void (*)(uint64_t))&type metadata accessor for IntentFile);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069EDC8);
  }
  return result;
}

uint64_t sub_1001FF454(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001FF4F0()
{
  uint64_t result = _s11MobileNotes23VisibleAttachmentsQueryVACycfC_0();
  static AttachmentEntity.defaultQuery = result;
  unk_1006CDAD0 = v1;
  byte_1006CDAD8 = v2 & 1;
  return result;
}

uint64_t *AttachmentEntity.defaultQuery.unsafeMutableAddressor()
{
  if (qword_10069ACF8 != -1) {
    swift_once();
  }
  return &static AttachmentEntity.defaultQuery;
}

uint64_t static AttachmentEntity.defaultQuery.getter()
{
  if (qword_10069ACF8 != -1) {
    swift_once();
  }
  uint64_t v0 = static AttachmentEntity.defaultQuery;
  swift_retain();
  swift_retain();
  return v0;
}

uint64_t sub_1001FF5E8()
{
  uint64_t v0 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v0 - 8);
  char v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Locale();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for LocalizedStringResource();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = type metadata accessor for TypeDisplayRepresentation();
  sub_100032974(v10, static AttachmentEntity.typeDisplayRepresentation);
  sub_10003293C(v10, (uint64_t)static AttachmentEntity.typeDisplayRepresentation);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  LocalizedStringResource.init(stringLiteral:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v2, 0, 1, v8);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t AttachmentEntity.typeDisplayRepresentation.unsafeMutableAddressor()
{
  if (qword_10069AD00 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for TypeDisplayRepresentation();

  return sub_10003293C(v0, (uint64_t)static AttachmentEntity.typeDisplayRepresentation);
}

uint64_t static AttachmentEntity.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_10069AD00 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for TypeDisplayRepresentation();
  uint64_t v3 = sub_10003293C(v2, (uint64_t)static AttachmentEntity.typeDisplayRepresentation);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t AttachmentEntity.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for AttachmentID();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t AttachmentEntity.id.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for AttachmentID();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t AttachmentEntity.managedObjectURI.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AttachmentEntity() + 20);
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AttachmentEntity.managedObjectURI.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AttachmentEntity() + 20);
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AttachmentEntity.managedObjectURI.modify())()
{
  return ICCloudSyncingObject.MoveAction.Types.rawValue.getter;
}

uint64_t AttachmentEntity.typeUTI.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for AttachmentEntity() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AttachmentEntity.typeUTI.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for AttachmentEntity() + 24));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*AttachmentEntity.typeUTI.modify())()
{
  return ICCloudSyncingObject.MoveAction.Types.rawValue.getter;
}

uint64_t AttachmentEntity.fileURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for AttachmentEntity();
  return sub_10002F034(v1 + *(int *)(v3 + 28), a1, &qword_10069B310);
}

uint64_t AttachmentEntity.fileURL.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AttachmentEntity() + 28);

  return sub_1001FFD48(a1, v3);
}

uint64_t sub_1001FFD48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002F214(&qword_10069B310);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*AttachmentEntity.fileURL.modify())()
{
  return ICCloudSyncingObject.MoveAction.Types.rawValue.getter;
}

uint64_t AttachmentEntity.title.getter()
{
  type metadata accessor for AttachmentEntity();
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t AttachmentEntity.title.setter()
{
  return EntityProperty.wrappedValue.setter();
}

void (*AttachmentEntity.title.modify(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for AttachmentEntity();
  v2[4] = EntityProperty.wrappedValue.modify();
  return sub_10015B020;
}

uint64_t AttachmentEntity.$title.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t AttachmentEntity.subtitle.getter()
{
  uint64_t v1 = sub_10002F214(&qword_10069EDF8);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for AttachmentEntity() + 24) + 8);
  if (v4)
  {
    swift_bridgeObjectRetain();
    UTType.init(_:)();
    uint64_t v5 = type metadata accessor for UTType();
    uint64_t v6 = *(void *)(v5 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v3, 1, v5) == 1)
    {
      sub_10002B754((uint64_t)v3, &qword_10069EDF8);
LABEL_5:
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v4 = UTType.localizedDescription.getter();
    uint64_t v8 = v7;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v3, v5);
    if (!v8) {
      goto LABEL_5;
    }
  }
  return v4;
}

uint64_t sub_100200088@<X0>(uint64_t a1@<X8>)
{
  if (qword_10069ACF8 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1006CDAD0;
  char v3 = byte_1006CDAD8;
  *(void *)a1 = static AttachmentEntity.defaultQuery;
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
  swift_retain();

  return swift_retain();
}

uint64_t sub_100200108(uint64_t a1)
{
  uint64_t v2 = sub_1000190D4((unint64_t *)&qword_10069EF80, (void (*)(uint64_t))type metadata accessor for AttachmentEntity);

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

uint64_t AttachmentEntity.displayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  v18[1] = a1;
  uint64_t v1 = sub_10002F214((uint64_t *)&unk_10069D360);
  __chkstk_darwin(v1 - 8);
  char v3 = (char *)v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for LocalizedStringResource();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = type metadata accessor for String.LocalizationValue.StringInterpolation();
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  __chkstk_darwin(v10);
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v11);
  type metadata accessor for AttachmentEntity();
  EntityProperty.wrappedValue.getter();
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v19);
  swift_bridgeObjectRelease();
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v12);
  LocalizedStringResource.init(stringInterpolation:)();
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v13);
  v14._countAndFlagsBits = AttachmentEntity.subtitle.getter();
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v14);
  swift_bridgeObjectRelease();
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v15);
  LocalizedStringResource.init(stringInterpolation:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  uint64_t v16 = type metadata accessor for DisplayRepresentation.Image();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v3, 1, 1, v16);
  return DisplayRepresentation.init(title:subtitle:image:)();
}

uint64_t sub_100200470(uint64_t a1)
{
  uint64_t v2 = sub_1000190D4(&qword_10069EF10, (void (*)(uint64_t))type metadata accessor for AttachmentEntity);

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t static AttachmentEntity.transferRepresentation.getter()
{
  uint64_t v0 = type metadata accessor for UTType();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10002F214(&qword_10069EE00);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UTType.item.getter();
  type metadata accessor for AttachmentEntity();
  sub_1000190D4(&qword_10069EE10, (void (*)(uint64_t))type metadata accessor for AttachmentEntity);
  FileRepresentation.init(exportedContentType:shouldAllowToOpenInPlace:exporting:)();
  sub_10001DFB0(&qword_10069EE18, &qword_10069EE00);
  TransferRepresentation.exportingCondition(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_1002006C8(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  sub_10002F214(&qword_10069B310);
  v2[4] = swift_task_alloc();
  return _swift_task_switch(sub_10020075C, 0, 0);
}

uint64_t sub_10020075C()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  uint64_t v3 = type metadata accessor for AttachmentEntity();
  sub_10002F034(v1 + *(int *)(v3 + 28), v2, &qword_10069B310);
  uint64_t v4 = type metadata accessor for URL();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v2, 1, v4);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    SentTransferredFile.init(_:allowAccessingOriginalFile:)();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
  return result;
}

BOOL sub_100200840(uint64_t a1)
{
  uint64_t v2 = sub_10002F214(&qword_10069B310);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for AttachmentEntity();
  sub_10002F034(a1 + *(int *)(v5 + 28), (uint64_t)v4, &qword_10069B310);
  uint64_t v6 = type metadata accessor for URL();
  BOOL v7 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v4, 1, v6) != 1;
  sub_10002B754((uint64_t)v4, &qword_10069B310);
  return v7;
}

uint64_t sub_100200928()
{
  uint64_t v0 = type metadata accessor for UTType();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10002F214(&qword_10069EE00);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UTType.item.getter();
  FileRepresentation.init(exportedContentType:shouldAllowToOpenInPlace:exporting:)();
  sub_10001DFB0(&qword_10069EE18, &qword_10069EE00);
  TransferRepresentation.exportingCondition(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t static AttachmentEntity.uriTypeName.getter()
{
  return static AttachmentID.uriTypeName.getter();
}

uint64_t sub_100200AD4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v56 = a1;
  uint64_t v3 = sub_10002F214(&qword_10069B310);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v62 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v54 = (char *)&v52 - v7;
  __chkstk_darwin(v6);
  uint64_t v53 = (char *)&v52 - v8;
  uint64_t v9 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  Swift::String v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Locale();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = (int *)type metadata accessor for AttachmentEntity();
  uint64_t v17 = (uint64_t *)(a2 + v16[6]);
  *uint64_t v17 = 0;
  v17[1] = 0;
  uint64_t v57 = v17;
  uint64_t v18 = a2 + v16[7];
  uint64_t v19 = type metadata accessor for URL();
  uint64_t v52 = *(void *)(v19 - 8);
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 56);
  uint64_t v60 = v19;
  uint64_t v61 = v18;
  uint64_t v58 = v20;
  uint64_t v59 = v52 + 56;
  ((void (*)(uint64_t, uint64_t, uint64_t))v20)(v18, 1, 1);
  uint64_t v21 = v16[8];
  sub_10002F214((uint64_t *)&unk_10069EE20);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for LocalizedStringResource.BundleDescription.main(_:), v9);
  uint64_t v22 = v56;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v23 = EntityProperty<>.init(title:)();
  uint64_t v55 = v21;
  *(void *)(a2 + v21) = v23;
  sub_1002015CC(v22);
  id v24 = [v22 objectID];
  id v25 = [v24 URIRepresentation];

  static URL._unconditionallyBridgeFromObjectiveC(_:)();
  id v26 = [v22 title];
  if (v26)
  {
    uint64_t v27 = v26;
    uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v30 = v29;

    uint64_t v31 = v60;
    uint64_t v32 = v58;
  }
  else
  {
    uint64_t v34 = v52;
    uint64_t v33 = (uint64_t)v53;
    uint64_t v35 = (uint64_t)v54;
    id v36 = [v22 fileURL];
    if (v36)
    {
      uint64_t v37 = v36;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v38 = 0;
    }
    else
    {
      uint64_t v38 = 1;
    }
    uint64_t v31 = v60;
    uint64_t v32 = v58;
    v58(v35, v38, 1, v60);
    uint64_t v39 = v33;
    sub_100192ED0(v35, v33);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v33, 1, v31) == 1)
    {
      sub_10002B754(v33, &qword_10069B310);
      uint64_t v28 = 0;
      unint64_t v30 = 0xE000000000000000;
    }
    else
    {
      uint64_t v28 = URL.lastPathComponent.getter();
      unint64_t v30 = v40;
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v39, v31);
    }
  }
  uint64_t v63 = v28;
  unint64_t v64 = v30;
  EntityProperty.wrappedValue.setter();
  id v41 = [v22 typeUTI];
  if (v41)
  {
    uint64_t v42 = v41;
    uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v45 = v44;
  }
  else
  {
    uint64_t v43 = 0;
    uint64_t v45 = 0;
  }
  uint64_t v46 = v57;
  swift_bridgeObjectRelease();
  *uint64_t v46 = v43;
  v46[1] = v45;
  id v47 = [v22 fileURL];
  if (v47)
  {
    uint64_t v48 = v47;
    uint64_t v49 = (uint64_t)v62;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v50 = 0;
  }
  else
  {
    uint64_t v50 = 1;
    uint64_t v49 = (uint64_t)v62;
  }

  v32(v49, v50, 1, v31);
  return sub_1001FFD48(v49, v61);
}

uint64_t AttachmentEntity.init<A>(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v56 = a1;
  uint64_t v3 = sub_10002F214(&qword_10069B310);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v62 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v54 = (char *)&v52 - v7;
  __chkstk_darwin(v6);
  uint64_t v53 = (char *)&v52 - v8;
  uint64_t v9 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  Swift::String v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Locale();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = (int *)type metadata accessor for AttachmentEntity();
  uint64_t v17 = (uint64_t *)(a2 + v16[6]);
  *uint64_t v17 = 0;
  v17[1] = 0;
  uint64_t v57 = v17;
  uint64_t v18 = a2 + v16[7];
  uint64_t v19 = type metadata accessor for URL();
  uint64_t v52 = *(void *)(v19 - 8);
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 56);
  uint64_t v60 = v19;
  uint64_t v61 = v18;
  uint64_t v58 = v20;
  uint64_t v59 = v52 + 56;
  ((void (*)(uint64_t, uint64_t, uint64_t))v20)(v18, 1, 1);
  uint64_t v21 = v16[8];
  sub_10002F214((uint64_t *)&unk_10069EE20);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for LocalizedStringResource.BundleDescription.main(_:), v9);
  uint64_t v22 = v56;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v23 = EntityProperty<>.init(title:)();
  uint64_t v55 = v21;
  *(void *)(a2 + v21) = v23;
  static AttachmentEntity.identifier<A>(for:)(v22);
  id v24 = [v22 objectID];
  id v25 = [v24 URIRepresentation];

  static URL._unconditionallyBridgeFromObjectiveC(_:)();
  id v26 = [v22 title];
  if (v26)
  {
    uint64_t v27 = v26;
    uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v30 = v29;

    uint64_t v31 = v60;
    uint64_t v32 = v58;
  }
  else
  {
    uint64_t v34 = v52;
    uint64_t v33 = (uint64_t)v53;
    uint64_t v35 = (uint64_t)v54;
    id v36 = [v22 fileURL];
    if (v36)
    {
      uint64_t v37 = v36;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v38 = 0;
    }
    else
    {
      uint64_t v38 = 1;
    }
    uint64_t v31 = v60;
    uint64_t v32 = v58;
    v58(v35, v38, 1, v60);
    uint64_t v39 = v33;
    sub_100192ED0(v35, v33);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v33, 1, v31) == 1)
    {
      sub_10002B754(v33, &qword_10069B310);
      uint64_t v28 = 0;
      unint64_t v30 = 0xE000000000000000;
    }
    else
    {
      uint64_t v28 = URL.lastPathComponent.getter();
      unint64_t v30 = v40;
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v39, v31);
    }
  }
  uint64_t v63 = v28;
  unint64_t v64 = v30;
  EntityProperty.wrappedValue.setter();
  id v41 = [v22 typeUTI];
  if (v41)
  {
    uint64_t v42 = v41;
    uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v45 = v44;
  }
  else
  {
    uint64_t v43 = 0;
    uint64_t v45 = 0;
  }
  uint64_t v46 = v57;
  swift_bridgeObjectRelease();
  *uint64_t v46 = v43;
  v46[1] = v45;
  id v47 = [v22 fileURL];
  if (v47)
  {
    uint64_t v48 = v47;
    uint64_t v49 = (uint64_t)v62;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v50 = 0;
  }
  else
  {
    uint64_t v50 = 1;
    uint64_t v49 = (uint64_t)v62;
  }

  v32(v49, v50, 1, v31);
  return sub_1001FFD48(v49, v61);
}

void sub_1002015CC(void *a1)
{
  uint64_t v2 = sub_10002F214(&qword_10069D370);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)v24 - v6;
  self;
  uint64_t v8 = swift_dynamicCastObjCClass();
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    uint64_t v10 = enum case for ManagedEntityContextType.modern(_:);
    uint64_t v11 = type metadata accessor for ManagedEntityContextType();
    uint64_t v12 = *(void *)(v11 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 104))(v7, v10, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
    id v13 = a1;
    id v14 = [v9 identifier];
    if (v14) {
      goto LABEL_6;
    }
    goto LABEL_7;
  }
  void v24[3] = &OBJC_PROTOCOL___ICLegacyAttachment;
  uint64_t v15 = swift_dynamicCastObjCProtocolConditional();
  if (v15)
  {
    uint64_t v16 = (void *)v15;
    uint64_t v17 = enum case for ManagedEntityContextType.html(_:);
    uint64_t v18 = type metadata accessor for ManagedEntityContextType();
    uint64_t v19 = *(void *)(v18 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 104))(v5, v17, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v5, 0, 1, v18);
    id v20 = a1;
    id v14 = [v16 contentID];
    if (v14)
    {
LABEL_6:
      uint64_t v21 = v14;
      static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
LABEL_7:
    AttachmentID.init(contextType:managedIdentifier:)();

    return;
  }
  v24[1] = 0;
  long long v24[2] = 0xE000000000000000;
  _StringGuts.grow(_:)(65);
  v22._object = (void *)0x8000000100552DC0;
  v22._countAndFlagsBits = 0xD00000000000003FLL;
  String.append(_:)(v22);
  sub_10002F214((uint64_t *)&unk_10069F060);
  v23._countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v23);
  swift_bridgeObjectRelease();
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void static AttachmentEntity.identifier<A>(for:)(void *a1)
{
  uint64_t v2 = sub_10002F214(&qword_10069D370);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)v24 - v6;
  self;
  uint64_t v8 = swift_dynamicCastObjCClass();
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    uint64_t v10 = enum case for ManagedEntityContextType.modern(_:);
    uint64_t v11 = type metadata accessor for ManagedEntityContextType();
    uint64_t v12 = *(void *)(v11 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 104))(v7, v10, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
    id v13 = a1;
    id v14 = [v9 identifier];
    if (v14) {
      goto LABEL_6;
    }
    goto LABEL_7;
  }
  void v24[3] = &OBJC_PROTOCOL___ICLegacyAttachment;
  uint64_t v15 = swift_dynamicCastObjCProtocolConditional();
  if (v15)
  {
    uint64_t v16 = (void *)v15;
    uint64_t v17 = enum case for ManagedEntityContextType.html(_:);
    uint64_t v18 = type metadata accessor for ManagedEntityContextType();
    uint64_t v19 = *(void *)(v18 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 104))(v5, v17, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v5, 0, 1, v18);
    id v20 = a1;
    id v14 = [v16 contentID];
    if (v14)
    {
LABEL_6:
      uint64_t v21 = v14;
      static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
LABEL_7:
    AttachmentID.init(contextType:managedIdentifier:)();

    return;
  }
  v24[1] = 0;
  long long v24[2] = 0xE000000000000000;
  _StringGuts.grow(_:)(65);
  v22._object = (void *)0x8000000100552DC0;
  v22._countAndFlagsBits = 0xD00000000000003FLL;
  String.append(_:)(v22);
  swift_getObjectType();
  v23._countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v23);
  swift_bridgeObjectRelease();
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t AttachmentEntity.init(for:in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v3[5] = type metadata accessor for AttachmentEntity();
  v3[6] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for LocalizedStringResource.BundleDescription();
  v3[7] = v4;
  unsigned char v3[8] = *(void *)(v4 - 8);
  v3[9] = swift_task_alloc();
  type metadata accessor for Locale();
  v3[10] = swift_task_alloc();
  type metadata accessor for String.LocalizationValue();
  v3[11] = swift_task_alloc();
  type metadata accessor for LocalizedStringResource();
  v3[12] = swift_task_alloc();
  return _swift_task_switch(sub_100201E08, 0, 0);
}

uint64_t sub_100201E08()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v4 = *(int **)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v19 = *(void **)(v0 + 24);
  id v20 = *(void **)(v0 + 32);
  uint64_t v6 = v4[6];
  *(_DWORD *)(v0 + 120) = v6;
  uint64_t v7 = (void *)(v5 + v6);
  void *v7 = 0;
  v7[1] = 0;
  uint64_t v8 = v4[7];
  *(_DWORD *)(v0 + 124) = v8;
  uint64_t v9 = v5 + v8;
  uint64_t v10 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  uint64_t v11 = v4[8];
  *(_DWORD *)(v0 + 128) = v11;
  sub_10002F214((uint64_t *)&unk_10069EE20);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v1, enum case for LocalizedStringResource.BundleDescription.main(_:), v2);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  *(void *)(v5 + v11) = EntityProperty<>.init(title:)();
  id v12 = v19;
  id v13 = v20;
  id v14 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v14;
  void *v14 = v0;
  v14[1] = sub_100201FE0;
  uint64_t v15 = *(void *)(v0 + 48);
  uint64_t v16 = *(void *)(v0 + 24);
  uint64_t v17 = *(void *)(v0 + 32);
  return AttachmentEntity.init(for:in:includeContents:)(v15, v16, v17);
}

uint64_t sub_100201FE0()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1002021F4;
  }
  else {
    uint64_t v2 = sub_1002020F4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002020F4()
{
  uint64_t v1 = *(int *)(v0 + 124);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 16);

  swift_bridgeObjectRelease();
  sub_10002B754(v4 + v1, &qword_10069B310);
  swift_release();
  sub_100202988(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1002021F4()
{
  uint64_t v1 = *(int *)(v0 + 124);
  uint64_t v2 = *(void **)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 16);

  swift_bridgeObjectRelease();
  sub_10002B754(v3 + v1, &qword_10069B310);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t AttachmentEntity.init(for:in:includeContents:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v3[5] = type metadata accessor for AttachmentEntity();
  v3[6] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for LocalizedStringResource.BundleDescription();
  v3[7] = v4;
  unsigned char v3[8] = *(void *)(v4 - 8);
  v3[9] = swift_task_alloc();
  type metadata accessor for Locale();
  v3[10] = swift_task_alloc();
  type metadata accessor for String.LocalizationValue();
  v3[11] = swift_task_alloc();
  type metadata accessor for LocalizedStringResource();
  v3[12] = swift_task_alloc();
  return _swift_task_switch(sub_100202460, 0, 0);
}

uint64_t sub_100202460()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v4 = *(int **)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v19 = *(void **)(v0 + 32);
  id v20 = *(void **)(v0 + 24);
  uint64_t v6 = v4[6];
  *(_DWORD *)(v0 + 128) = v6;
  uint64_t v7 = (void *)(v5 + v6);
  void *v7 = 0;
  v7[1] = 0;
  uint64_t v8 = v4[7];
  *(_DWORD *)(v0 + 132) = v8;
  uint64_t v9 = v5 + v8;
  uint64_t v10 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  uint64_t v11 = v4[8];
  *(_DWORD *)(v0 + 136) = v11;
  sub_10002F214((uint64_t *)&unk_10069EE20);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v1, enum case for LocalizedStringResource.BundleDescription.main(_:), v2);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  *(void *)(v5 + v11) = EntityProperty<>.init(title:)();
  uint64_t v12 = swift_allocObject();
  *(void *)(v0 + 104) = v12;
  *(void *)(v12 + 16) = v19;
  *(void *)(v12 + 24) = v20;
  id v13 = v19;
  id v14 = v20;
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v15;
  void *v15 = v0;
  v15[1] = sub_10020266C;
  uint64_t v17 = *(void *)(v0 + 40);
  uint64_t v16 = *(void *)(v0 + 48);
  return NSManagedObjectContext.perform<A>(_:)(v16, sub_100202B14, v12, v17);
}

uint64_t sub_10020266C()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100202888;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_100202788;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100202788()
{
  uint64_t v1 = *(int *)(v0 + 132);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 16);

  swift_bridgeObjectRelease();
  sub_10002B754(v4 + v1, &qword_10069B310);
  swift_release();
  sub_100202988(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_100202888()
{
  uint64_t v1 = *(int *)(v0 + 132);
  uint64_t v2 = *(void **)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 16);

  swift_release();
  swift_bridgeObjectRelease();
  sub_10002B754(v3 + v1, &qword_10069B310);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100202988(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AttachmentEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002029EC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v10[0] = 0;
  id v4 = [a1 existingObjectWithID:a2 error:v10];
  id v5 = v10[0];
  if (v4)
  {
    v10[1] = &OBJC_PROTOCOL___ICAttachmentObject;
    uint64_t v6 = (void *)swift_dynamicCastObjCProtocolUnconditional();
    id v7 = v5;
    return sub_100200AD4(v6, a3);
  }
  else
  {
    id v9 = v10[0];
    _convertNSErrorToError(_:)();

    return swift_willThrow();
  }
}

uint64_t sub_100202AD4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100202B14@<X0>(uint64_t a1@<X8>)
{
  return sub_1002029EC(*(void **)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t AttachmentEntity.init(for:in:includeContents:noteContext:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  *(unsigned char *)(v5 + 140) = a4;
  *(void *)(v5 + 32) = a3;
  *(void *)(v5 + 40) = a5;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  *(void *)(v5 + 48) = type metadata accessor for AttachmentEntity();
  *(void *)(v5 + 56) = swift_task_alloc();
  uint64_t v6 = type metadata accessor for LocalizedStringResource.BundleDescription();
  *(void *)(v5 + 64) = v6;
  *(void *)(v5 + 72) = *(void *)(v6 - 8);
  *(void *)(v5 + 80) = swift_task_alloc();
  type metadata accessor for Locale();
  *(void *)(v5 + 88) = swift_task_alloc();
  type metadata accessor for String.LocalizationValue();
  *(void *)(v5 + 96) = swift_task_alloc();
  type metadata accessor for LocalizedStringResource();
  *(void *)(v5 + 104) = swift_task_alloc();
  return _swift_task_switch(sub_100202CAC, 0, 0);
}

uint64_t sub_100202CAC()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 72);
  id v4 = *(int **)(v0 + 48);
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v19 = *(void **)(v0 + 24);
  id v20 = *(void **)(v0 + 32);
  uint64_t v6 = v4[6];
  *(_DWORD *)(v0 + 128) = v6;
  id v7 = (void *)(v5 + v6);
  void *v7 = 0;
  v7[1] = 0;
  uint64_t v8 = v4[7];
  *(_DWORD *)(v0 + 132) = v8;
  uint64_t v9 = v5 + v8;
  uint64_t v10 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  uint64_t v11 = v4[8];
  *(_DWORD *)(v0 + 136) = v11;
  sub_10002F214((uint64_t *)&unk_10069EE20);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v1, enum case for LocalizedStringResource.BundleDescription.main(_:), v2);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  *(void *)(v5 + v11) = EntityProperty<>.init(title:)();
  id v12 = v19;
  id v13 = v20;
  id v14 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v14;
  void *v14 = v0;
  v14[1] = sub_100202E88;
  uint64_t v15 = *(void *)(v0 + 56);
  uint64_t v16 = *(void *)(v0 + 24);
  uint64_t v17 = *(void *)(v0 + 32);
  return AttachmentEntity.init(for:in:includeContents:)(v15, v16, v17);
}

uint64_t sub_100202E88()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1002030A4;
  }
  else {
    uint64_t v2 = sub_100202F9C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100202F9C()
{
  uint64_t v1 = *(int *)(v0 + 132);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = *(void **)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v4 = *(void **)(v0 + 24);

  swift_bridgeObjectRelease();
  sub_10002B754(v5 + v1, &qword_10069B310);
  swift_release();
  sub_100202988(v2, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1002030A4()
{
  uint64_t v1 = *(int *)(v0 + 132);
  uint64_t v2 = *(void **)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void **)(v0 + 24);

  swift_bridgeObjectRelease();
  sub_10002B754(v3 + v1, &qword_10069B310);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t static AttachmentEntity.managedObjectID(for:in:)(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_10069EEB0 + dword_10069EEB0);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1001942B8;
  return v7(a1, a2);
}

void sub_100203250(void *a1@<X1>, void *a2@<X8>)
{
  AttachmentID.managedIdentifier.getter();
  id v4 = a1;
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v6 = [self attachmentWithIdentifier:v5 context:v4];

  if (v6)
  {
    id v7 = [v6 objectID];
  }
  else
  {
    id v7 = 0;
  }
  *a2 = v7;
}

void sub_100203320(void *a1@<X0>, void *a2@<X8>)
{
  AttachmentID.managedIdentifier.getter();
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v5 = [a1 legacyAttachmentWithIdentifier:v4];

  if (!v5) {
    goto LABEL_5;
  }
  self;
  id v6 = (void *)swift_dynamicCastObjCClass();
  if (!v6)
  {
    swift_unknownObjectRelease();
LABEL_5:
    id v7 = 0;
    goto LABEL_6;
  }
  id v7 = [v6 objectID];
  swift_unknownObjectRelease();
LABEL_6:
  *a2 = v7;
}

uint64_t sub_1002033F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_10017B61C;
  return AttachmentEntity.init(for:in:)(a1, a2, a3);
}

uint64_t sub_1002034A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_10017B61C;
  return AttachmentEntity.init(for:in:includeContents:)(a1, a2, a3);
}

uint64_t sub_100203554(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_100161724;
  return AttachmentEntity.init(for:in:includeContents:noteContext:)(a1, a2, a3, a4, a5);
}

uint64_t sub_10020361C(uint64_t a1, uint64_t a2)
{
  id v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_10069EEB0 + dword_10069EEB0);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1001947D4;
  return v7(a1, a2);
}

uint64_t sub_1002036D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10002F214(&qword_10069D370);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002F034(a1, (uint64_t)v8, &qword_10069D370);
  uint64_t v9 = type metadata accessor for ManagedEntityContextType();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1
    || (int v11 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v8, v9),
        v11 == enum case for ManagedEntityContextType.modern(_:)))
  {
    a2 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
    a3 = dispatch thunk of AnyKeyPath._kvcKeyPathString.getter();
    uint64_t v13 = v12;
    int v11 = swift_release();
    if (v13) {
      return a3;
    }
    __break(1u);
  }
  if (v11 == enum case for ManagedEntityContextType.html(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(a3 + 32))(a2, a3);
    a3 = dispatch thunk of AnyKeyPath._kvcKeyPathString.getter();
    uint64_t v15 = v14;
    swift_release();
    if (v15) {
      return a3;
    }
    __break(1u);
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_1002038B0@<X0>(char *a1@<X8>)
{
  sub_10002F214(&qword_10069F040);
  EntityQuerySort.by.getter();
  EntityQuerySort.order.getter();
  type metadata accessor for AttachmentEntity();
  sub_1000190D4((unint64_t *)&qword_10069EF80, (void (*)(uint64_t))type metadata accessor for AttachmentEntity);
  char v2 = static EntityQuerySort.Ordering.== infix(_:_:)();
  swift_getKeyPath();
  sub_10002F214(&qword_10069F048);
  char v3 = dispatch thunk of static Equatable.== infix(_:_:)();
  swift_release();
  uint64_t result = swift_release();
  char v5 = (v2 & 1) == 0;
  if ((v3 & 1) == 0) {
    char v5 = 2;
  }
  *a1 = v5;
  return result;
}

uint64_t sub_1002039D0(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = type metadata accessor for Logger();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for AttachmentID();
  v2[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[11] = v5;
  v2[12] = *(void *)(v5 + 64);
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  sub_10002F214(&qword_10069D370);
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  return _swift_task_switch(sub_100203B44, 0, 0);
}

uint64_t sub_100203B44()
{
  uint64_t v50 = v0;
  uint64_t v1 = *(void *)(v0 + 128);
  AttachmentID.contextType.getter();
  uint64_t v2 = type metadata accessor for ManagedEntityContextType();
  uint64_t v3 = *(void *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
LABEL_2:
    uint64_t v4 = *(void **)(v0 + 48);
    sub_10002B754(*(void *)(v0 + 128), &qword_10069D370);
    AttachmentID.managedIdentifier.getter();
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v6 = [v4 managedObjectIDForURIString:v5];

    if (!v6)
    {
      uint64_t v7 = *(void *)(v0 + 104);
      uint64_t v9 = *(void *)(v0 + 80);
      uint64_t v8 = *(void *)(v0 + 88);
      uint64_t v10 = *(void *)(v0 + 40);
      static Logger.link.getter();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v10, v9);
      int v11 = Logger.logObject.getter();
      os_log_type_t v12 = static os_log_type_t.error.getter();
      BOOL v13 = os_log_type_enabled(v11, v12);
      uint64_t v14 = *(void *)(v0 + 104);
      uint64_t v15 = *(void *)(v0 + 80);
      uint64_t v16 = *(void *)(v0 + 88);
      uint64_t v18 = *(void *)(v0 + 64);
      uint64_t v17 = *(void *)(v0 + 72);
      uint64_t v19 = *(void *)(v0 + 56);
      if (v13)
      {
        uint64_t v48 = *(void *)(v0 + 56);
        id v20 = (uint8_t *)swift_slowAlloc();
        uint64_t v49 = swift_slowAlloc();
        *(_DWORD *)id v20 = 136315138;
        sub_1000190D4((unint64_t *)&unk_10069F050, (void (*)(uint64_t))&type metadata accessor for AttachmentID);
        uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v0 + 16) = sub_10045DA1C(v21, v22, &v49);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "AttachmentEntity: Unable to resolve managed object ID for entity ID: %s", v20, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v48);
      }
      else
      {
        (*(void (**)(void, void))(v16 + 8))(*(void *)(v0 + 104), *(void *)(v0 + 80));

        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
      }
      id v6 = 0;
    }
    goto LABEL_16;
  }
  uint64_t v23 = *(void *)(v0 + 120);
  sub_10002F034(*(void *)(v0 + 128), v23, &qword_10069D370);
  int v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v23, v2);
  if (v24 == enum case for ManagedEntityContextType.modern(_:))
  {
    uint64_t v25 = *(void *)(v0 + 112);
    uint64_t v27 = *(void *)(v0 + 88);
    uint64_t v26 = *(void *)(v0 + 96);
    uint64_t v28 = *(void *)(v0 + 80);
    uint64_t v29 = *(void *)(v0 + 40);
    id v30 = [*(id *)(v0 + 48) modernManagedObjectContext];
    *(void *)(v0 + 136) = v30;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v25, v29, v28);
    unint64_t v31 = (*(unsigned __int8 *)(v27 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
    uint64_t v32 = swift_allocObject();
    *(void *)(v0 + 144) = v32;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v27 + 32))(v32 + v31, v25, v28);
    *(void *)(v32 + ((v26 + v31 + 7) & 0xFFFFFFFFFFFFFFF8)) = v30;
    v30;
    uint64_t v33 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v33;
    uint64_t v34 = sub_10002F214(&qword_10069D520);
    *uint64_t v33 = v0;
    v33[1] = sub_1002041A8;
    uint64_t v35 = sub_100205754;
    uint64_t v36 = v0 + 32;
    uint64_t v37 = v32;
  }
  else
  {
    if (v24 != enum case for ManagedEntityContextType.html(_:))
    {
      (*(void (**)(void, uint64_t))(v3 + 8))(*(void *)(v0 + 120), v2);
      goto LABEL_2;
    }
    id v6 = [*(id *)(v0 + 48) htmlManagedObjectContext];
    *(void *)(v0 + 160) = v6;
    if (!v6)
    {
      sub_10002B754(*(void *)(v0 + 128), &qword_10069D370);
LABEL_16:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v46 = *(uint64_t (**)(id))(v0 + 8);
      return v46(v6);
    }
    uint64_t v38 = *(void *)(v0 + 112);
    uint64_t v39 = *(void *)(v0 + 88);
    uint64_t v40 = *(void *)(v0 + 80);
    id v41 = *(void **)(v0 + 48);
    (*(void (**)(uint64_t, void, uint64_t))(v39 + 16))(v38, *(void *)(v0 + 40), v40);
    unint64_t v42 = (*(unsigned __int8 *)(v39 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
    uint64_t v43 = swift_allocObject();
    *(void *)(v0 + 168) = v43;
    *(void *)(v43 + 16) = v41;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v39 + 32))(v43 + v42, v38, v40);
    v6;
    id v44 = v41;
    uint64_t v45 = (void *)swift_task_alloc();
    *(void *)(v0 + 176) = v45;
    uint64_t v34 = sub_10002F214(&qword_10069D520);
    *uint64_t v45 = v0;
    v45[1] = sub_100204378;
    uint64_t v35 = sub_100205640;
    uint64_t v36 = v0 + 24;
    uint64_t v37 = v43;
  }
  return NSManagedObjectContext.perform<A>(_:)(v36, v35, v37, v34);
}

uint64_t sub_1002041A8()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_1002042C0, 0, 0);
}

uint64_t sub_1002042C0()
{
  uint64_t v1 = *(void *)(v0 + 128);

  uint64_t v2 = *(void *)(v0 + 32);
  sub_10002B754(v1, &qword_10069D370);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v2);
}

uint64_t sub_100204378()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 160);
  swift_task_dealloc();
  swift_release();

  return _swift_task_switch(sub_1002044A8, 0, 0);
}

uint64_t sub_1002044A8()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_10002B754(*(void *)(v0 + 128), &qword_10069D370);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_100204564()
{
  return sub_1000190D4(&qword_10069EEF8, (void (*)(uint64_t))&type metadata accessor for AttachmentID);
}

uint64_t sub_1002045AC()
{
  return sub_10001DFB0(&qword_10069EF00, &qword_10069EF08);
}

uint64_t sub_1002045E8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100204604(uint64_t a1)
{
  uint64_t result = sub_1000190D4((unint64_t *)&qword_10069EF80, (void (*)(uint64_t))type metadata accessor for AttachmentEntity);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for AttachmentEntity(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = type metadata accessor for AttachmentID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for URL();
    uint64_t v12 = *(void *)(v11 - 8);
    BOOL v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v13(v9, v10, v11);
    uint64_t v14 = a3[6];
    uint64_t v15 = a3[7];
    uint64_t v16 = (uint64_t *)((char *)a1 + v14);
    uint64_t v17 = (uint64_t *)((char *)a2 + v14);
    uint64_t v18 = v17[1];
    void *v16 = *v17;
    v16[1] = v18;
    __dst = (char *)a1 + v15;
    uint64_t v19 = (char *)a2 + v15;
    id v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v20(v19, 1, v11))
    {
      uint64_t v21 = sub_10002F214(&qword_10069B310);
      memcpy(__dst, v19, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      v13(__dst, v19, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    *(uint64_t *)((char *)a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
  }
  swift_retain();
  return a1;
}

uint64_t destroy for AttachmentEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AttachmentID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  swift_bridgeObjectRelease();
  uint64_t v9 = a1 + *(int *)(a2 + 28);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6)) {
    v8(v9, v6);
  }

  return swift_release();
}

uint64_t initializeWithCopy for AttachmentEntity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for AttachmentID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 16);
  v12(v8, v9, v10);
  uint64_t v13 = a3[6];
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)(a1 + v13);
  uint64_t v16 = (void *)(a2 + v13);
  uint64_t v17 = v16[1];
  void *v15 = *v16;
  v15[1] = v17;
  __dst = (void *)(a1 + v14);
  uint64_t v18 = (const void *)(a2 + v14);
  uint64_t v19 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v19(v18, 1, v10))
  {
    uint64_t v20 = sub_10002F214(&qword_10069B310);
    memcpy(__dst, v18, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    v12(__dst, v18, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for AttachmentEntity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for AttachmentID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 24);
  v12(v8, v9, v10);
  uint64_t v13 = a3[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  void *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = a2;
  int v24 = a3;
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (const void *)(a2 + v16);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  LODWORD(a2) = v19(a1 + v16, 1, v10);
  int v20 = v19((uint64_t)v18, 1, v10);
  if (!a2)
  {
    if (!v20)
    {
      v12((uint64_t)v17, (uint64_t)v18, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v17, v10);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    uint64_t v21 = sub_10002F214(&qword_10069B310);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v17, v18, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
LABEL_7:
  *(void *)(a1 + v24[8]) = *(void *)(v23 + v24[8]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for AttachmentEntity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for AttachmentID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 32);
  v12(v8, v9, v10);
  uint64_t v13 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a2 + v13, 1, v10))
  {
    uint64_t v16 = sub_10002F214(&qword_10069B310);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v12(v14, v15, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  return a1;
}

uint64_t assignWithTake for AttachmentEntity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for AttachmentID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  uint64_t v13 = a3[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  void *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  uint64_t v25 = a2;
  uint64_t v26 = a3;
  uint64_t v18 = a3[7];
  uint64_t v19 = (void *)(a1 + v18);
  int v20 = (const void *)(a2 + v18);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  LODWORD(a2) = v21(a1 + v18, 1, v10);
  int v22 = v21((uint64_t)v20, 1, v10);
  if (!a2)
  {
    if (!v22)
    {
      v12((uint64_t)v19, (uint64_t)v20, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v19, v10);
    goto LABEL_6;
  }
  if (v22)
  {
LABEL_6:
    uint64_t v23 = sub_10002F214(&qword_10069B310);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v19, v20, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v19, 0, 1, v10);
LABEL_7:
  *(void *)(a1 + v26[8]) = *(void *)(v25 + v26[8]);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AttachmentEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100205158);
}

uint64_t sub_100205158(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for AttachmentID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for URL();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = sub_10002F214(&qword_10069B310);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_7;
  }
  unint64_t v16 = *(void *)(a1 + a3[8]);
  if (v16 >= 0xFFFFFFFF) {
    LODWORD(v16) = -1;
  }
  return (v16 + 1);
}

uint64_t storeEnumTagSinglePayload for AttachmentEntity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002052D0);
}

uint64_t sub_1002052D0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = type metadata accessor for AttachmentID();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = type metadata accessor for URL();
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      uint64_t result = sub_10002F214(&qword_10069B310);
      if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
      {
        *(void *)(a1 + a4[8]) = (a2 - 1);
        return result;
      }
      uint64_t v10 = result;
      uint64_t v14 = *(void *)(result - 8);
      uint64_t v15 = a4[7];
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_100205430()
{
  return sub_10001DFB0(&qword_10069F030, &qword_10069F038);
}

unsigned char *storeEnumTagSinglePayload for AttachmentEntity.SortType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100205538);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AttachmentEntity.SortType()
{
  return &type metadata for AttachmentEntity.SortType;
}

uint64_t sub_100205574()
{
  uint64_t v1 = type metadata accessor for AttachmentID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_100205640(void *a1@<X8>)
{
  type metadata accessor for AttachmentID();
  sub_100203320(*(void **)(v1 + 16), a1);
}

uint64_t sub_1002056B0()
{
  uint64_t v1 = type metadata accessor for AttachmentID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6 + 8, v5);
}

void sub_100205754(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for AttachmentID() - 8);
  sub_100203250(*(void **)(v1+ ((*(void *)(v3 + 64)+ ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ 7) & 0xFFFFFFFFFFFFFFF8)), a1);
}

uint64_t CreateTagIntent.name.getter()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t CreateTagIntent.name.setter()
{
  return IntentParameter.wrappedValue.setter();
}

void *CreateTagIntent.persistentIdentifier.unsafeMutableAddressor()
{
  return &static CreateTagIntent.persistentIdentifier;
}

unint64_t static CreateTagIntent.persistentIdentifier.getter()
{
  return 0xD000000000000013;
}

uint64_t sub_100205880()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  sub_100032974(v6, static CreateTagIntent.title);
  sub_10003293C(v6, (uint64_t)static CreateTagIntent.title);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t CreateTagIntent.title.unsafeMutableAddressor()
{
  if (qword_10069AD08 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for LocalizedStringResource();

  return sub_10003293C(v0, (uint64_t)static CreateTagIntent.title);
}

uint64_t static CreateTagIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_10069AD08 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_10003293C(v2, (uint64_t)static CreateTagIntent.title);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t static CreateTagIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for Locale();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = type metadata accessor for LocalizedStringResource();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v4, 1, 1, v11);
  IntentDescription.init(_:categoryName:searchKeywords:)();
  uint64_t v13 = type metadata accessor for IntentDescription();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 0, 1, v13);
}

uint64_t static CreateTagIntent.parameterSummary.getter()
{
  uint64_t v0 = sub_10002F214(&qword_10069F070);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10002F214(&qword_10069F078);
  __chkstk_darwin(v1);
  sub_1001FD474();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._countAndFlagsBits = 0x6120657461657243;
  v2._object = (void *)0xE900000000000020;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_10002F214(&qword_10069F080);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._countAndFlagsBits = 1734439968;
  v3._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t CreateTagIntent.perform()(uint64_t a1, uint64_t a2)
{
  v2[38] = a1;
  v2[39] = a2;
  sub_10002F214((uint64_t *)&unk_10069C9B0);
  unsigned char v2[40] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for LocalizedStringResource.BundleDescription();
  v2[41] = v3;
  v2[42] = *(void *)(v3 - 8);
  v2[43] = swift_task_alloc();
  type metadata accessor for Locale();
  v2[44] = swift_task_alloc();
  type metadata accessor for String.LocalizationValue();
  v2[45] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for LocalizedStringResource();
  v2[46] = v4;
  v2[47] = *(void *)(v4 - 8);
  v2[48] = swift_task_alloc();
  v2[49] = swift_task_alloc();
  v2[50] = type metadata accessor for TagEntity();
  v2[51] = swift_task_alloc();
  v2[52] = swift_task_alloc();
  v2[53] = swift_task_alloc();
  v2[54] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for CharacterSet();
  v2[55] = v5;
  v2[56] = *(void *)(v5 - 8);
  v2[57] = swift_task_alloc();
  return _swift_task_switch(sub_100206260, 0, 0);
}

uint64_t sub_100206260()
{
  id v1 = [self defaultAccount];
  *(void *)(v0 + 464) = v1;
  if (v1)
  {
    Swift::String v2 = v1;
    self;
    uint64_t v3 = swift_dynamicCastObjCClass();
    if (v3)
    {
      uint64_t v4 = v3;
      id v5 = v2;
      id v6 = [v5 managedObjectContext];
      *(void *)(v0 + 472) = v6;
      if (v6)
      {
        uint64_t v7 = v6;
        uint64_t v54 = v5;
        IntentParameter.wrappedValue.getter();
        uint64_t v8 = *(void *)(v0 + 232);
        if (v8)
        {
          uint64_t v9 = *(void *)(v0 + 448);
          uint64_t v10 = *(void *)(v0 + 456);
          uint64_t v11 = *(void *)(v0 + 440);
          *(void *)(v0 + 192) = *(void *)(v0 + 224);
          *(void *)(v0 + 200) = v8;
          static CharacterSet.whitespacesAndNewlines.getter();
          unint64_t v12 = sub_10017B588();
          StringProtocol.trimmingCharacters(in:)();
          uint64_t v53 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
          v53(v10, v11);
          swift_bridgeObjectRelease();
          NSString v13 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v14 = [v13 ic_withoutHashtagPrefix];

          uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v17 = v16;

          uint64_t v18 = HIBYTE(v17) & 0xF;
          if ((v17 & 0x2000000000000000) == 0) {
            uint64_t v18 = v15 & 0xFFFFFFFFFFFFLL;
          }
          if (v18)
          {
            uint64_t v19 = *(void *)(v0 + 456);
            uint64_t v52 = *(void *)(v0 + 440);
            *(void *)(v0 + 256) = v15;
            *(void *)(v0 + 264) = v17;
            strcpy((char *)(v0 + 240), "[\\p{C}\\p{Z}]+");
            *(_WORD *)(v0 + 254) = -4864;
            *(void *)(v0 + 208) = 45;
            *(void *)(v0 + 216) = 0xE100000000000000;
            StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
            swift_bridgeObjectRelease();
            id v20 = [self ic_hashtagAllowedCharacterSet];
            static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)();

            uint64_t v21 = String.removingCharacters(notContainedIn:)();
            uint64_t v23 = v22;
            swift_bridgeObjectRelease();
            v53(v19, v52);
            int v24 = (void *)swift_allocObject();
            *(void *)(v0 + 480) = v24;
            long long v24[2] = v21;
            void v24[3] = v23;
            void v24[4] = v4;
            v24[5] = v7;
            id v25 = v54;
            v7;
            uint64_t v26 = (void *)swift_task_alloc();
            *(void *)(v0 + 488) = v26;
            *uint64_t v26 = v0;
            v26[1] = sub_100206B0C;
            uint64_t v27 = *(void *)(v0 + 432);
            uint64_t v28 = *(void *)(v0 + 400);
            return NSManagedObjectContext.perform<A>(_:)(v27, sub_100207B5C, v24, v28);
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v42 = *(void *)(v0 + 384);
        uint64_t v41 = *(void *)(v0 + 392);
        uint64_t v50 = *(void *)(v0 + 376);
        uint64_t v51 = *(void *)(v0 + 368);
        uint64_t v43 = *(void *)(v0 + 344);
        uint64_t v45 = *(void *)(v0 + 328);
        uint64_t v44 = *(void *)(v0 + 336);
        uint64_t v46 = *(void *)(v0 + 320);
        String.LocalizationValue.init(stringLiteral:)();
        static Locale.current.getter();
        (*(void (**)(uint64_t, void, uint64_t))(v44 + 104))(v43, enum case for LocalizedStringResource.BundleDescription.main(_:), v45);
        LocalizedStringResource.init(_:table:locale:bundle:comment:)();
        IntentParameter.projectedValue.getter();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v42, v41, v51);
        IntentDialog.init(_:)();
        uint64_t v47 = type metadata accessor for IntentDialog();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v46, 0, 1, v47);
        type metadata accessor for AppIntentError();
        sub_100207C7C((unint64_t *)&unk_1006A2DB0, (void (*)(uint64_t))&type metadata accessor for AppIntentError);
        swift_allocError();
        IntentParameter.needsValueError(_:)();
        swift_release();
        sub_100207B7C(v46);
        swift_willThrow();

        (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v41, v51);
      }
      else
      {
        type metadata accessor for ICError(0);
        *(void *)(v0 + 288) = 225;
        sub_10002F214((uint64_t *)&unk_10069E1D0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_100524D10;
        *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
        *(void *)(inited + 40) = v40;
        *(void *)(inited + 72) = &type metadata for String;
        *(void *)(inited + 48) = 0xD000000000000035;
        *(void *)(inited + 56) = 0x8000000100552F00;
        sub_100167B58(inited);
        sub_100207C7C((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);
        _BridgedStoredNSError.init(_:userInfo:)();
        swift_willThrow();
      }
    }
    else
    {
      uint64_t v37 = swift_allocObject();
      *(void *)(v37 + 16) = 0;
      id v38 = v2;
      sub_100207964(v37);

      swift_release();
      swift_willThrow();
    }
  }
  else
  {
    ICInternalSettingsIsAppleAccountBrandingEnabled();
    id v29 = [self mainBundle];
    NSString v30 = String._bridgeToObjectiveC()();
    id v31 = [v29 localizedStringForKey:v30 value:0 table:0];

    uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v34 = v33;

    type metadata accessor for ICError(0);
    *(void *)(v0 + 280) = 203;
    sub_10002F214((uint64_t *)&unk_10069E1D0);
    uint64_t v35 = swift_initStackObject();
    *(_OWORD *)(v35 + 16) = xmmword_100524D10;
    *(void *)(v35 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(v35 + 40) = v36;
    *(void *)(v35 + 72) = &type metadata for String;
    *(void *)(v35 + 48) = v32;
    *(void *)(v35 + 56) = v34;
    sub_100167B58(v35);
    sub_100207C7C((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_willThrow();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v48 = *(uint64_t (**)(void))(v0 + 8);
  return v48();
}

uint64_t sub_100206B0C()
{
  *(void *)(*(void *)v1 + 496) = v0;
  swift_task_dealloc();
  if (v0)
  {
    Swift::String v2 = sub_100206E18;
  }
  else
  {
    swift_release();
    Swift::String v2 = sub_100206C28;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100206C28()
{
  uint64_t v1 = (void *)v0[58];
  uint64_t v11 = (void *)v0[59];
  uint64_t v2 = v0[53];
  uint64_t v3 = v0[54];
  uint64_t v4 = v0[51];
  uint64_t v5 = v0[52];
  sub_10016B494(v3, v2);
  uint64_t v6 = _s11MobileNotes13OpenTagIntentVACycfC_0();
  uint64_t v8 = v7;
  sub_10016B494(v2, v5);
  sub_10016B494(v5, v4);
  IntentParameter.wrappedValue.setter();
  sub_10016B4F8(v5);
  sub_10016B4F8(v2);
  v0[22] = v6;
  v0[23] = v8;
  sub_100207C7C(&qword_1006A0140, (void (*)(uint64_t))type metadata accessor for TagEntity);
  sub_100035A5C();
  static IntentResult.result<A, B>(value:opensIntent:)();

  swift_release();
  swift_release();
  sub_10016B4F8(v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100206E18()
{
  uint64_t v1 = (void *)v0[59];
  uint64_t v2 = (void *)v0[58];

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

void sub_100206F28(void *a1@<X2>, void *a2@<X3>, uint64_t a3@<X8>)
{
  swift_bridgeObjectRetain();
  id v6 = a1;
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v8 = [self hashtagWithDisplayText:v7 account:v6 createIfNecessary:1];

  if (v8)
  {
    id v19 = 0;
    if ([a2 save:&v19])
    {
      id v9 = v19;
      TagEntity.init(_:)(v8, a3);
    }
    else
    {
      id v18 = v19;
      _convertNSErrorToError(_:)();

      swift_willThrow();
    }
  }
  else
  {
    type metadata accessor for ICError(0);
    sub_10002F214((uint64_t *)&unk_10069E1D0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100524D10;
    *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 40) = v11;
    id v12 = [self mainBundle];
    NSString v13 = String._bridgeToObjectiveC()();
    id v14 = [v12 localizedStringForKey:v13 value:0 table:0];

    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v17 = v16;

    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = v15;
    *(void *)(inited + 56) = v17;
    sub_100167B58(inited);
    sub_100207C7C((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_willThrow();
  }
}

uint64_t sub_1002071AC()
{
  uint64_t v0 = sub_10002F214(&qword_10069F070);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10002F214(&qword_10069F078);
  __chkstk_darwin(v1);
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._countAndFlagsBits = 0x6120657461657243;
  v2._object = (void *)0xE900000000000020;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_10002F214(&qword_10069F080);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._countAndFlagsBits = 1734439968;
  v3._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_10020733C(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100161724;
  return CreateTagIntent.perform()(a1, v4);
}

uint64_t sub_1002073DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = _s11MobileNotes15CreateTagIntentVACycfC_0();
  *a1 = result;
  return result;
}

uint64_t _s11MobileNotes15CreateTagIntentVACycfC_0()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  uint64_t v26 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  __chkstk_darwin(v2 - 8);
  id v25 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214((uint64_t *)&unk_10069E280);
  __chkstk_darwin(v4 - 8);
  int v24 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  uint64_t v23 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v22 = sub_10002F214((uint64_t *)&unk_10069B250);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  id v18 = v23;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  uint64_t v19 = type metadata accessor for String.IntentInputOptions();
  uint64_t v29 = 0;
  uint64_t v30 = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v24, 1, 1, v19);
  uint64_t v20 = type metadata accessor for IntentDialog();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v25, 1, 1, v20);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, enum case for InputConnectionBehavior.default(_:), v28);
  return IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)();
}

uint64_t sub_100207900@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10020792C()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_100207964(uint64_t a1)
{
  uint64_t v2 = (void **)(a1 + 16);
  uint64_t v1 = *(void **)(a1 + 16);
  if (v1)
  {
    id v3 = *(id *)(a1 + 16);
  }
  else
  {
    type metadata accessor for ICError(0);
    sub_10002F214((uint64_t *)&unk_10069E1D0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100524D10;
    *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 40) = v5;
    _StringGuts.grow(_:)(93);
    v6._object = (void *)0x8000000100552FD0;
    v6._countAndFlagsBits = 0xD00000000000005BLL;
    String.append(_:)(v6);
    swift_getObjectType();
    v7._countAndFlagsBits = _typeName(_:qualified:)();
    String.append(_:)(v7);
    swift_bridgeObjectRelease();
    v8._countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    String.append(_:)(v8);
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = 0;
    *(void *)(inited + 56) = 0xE000000000000000;
    sub_1001B50CC(inited);
    sub_100207C7C((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_beginAccess();
    uint64_t v9 = *v2;
    void *v2 = 0;
    id v3 = 0;

    uint64_t v1 = 0;
  }
  id v10 = v1;
  return v3;
}

uint64_t sub_100207B14()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_100207B5C(uint64_t a1@<X8>)
{
  sub_100206F28(*(void **)(v1 + 32), *(void **)(v1 + 40), a1);
}

uint64_t sub_100207B7C(uint64_t a1)
{
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100207BE0()
{
  unint64_t result = qword_10069F090;
  if (!qword_10069F090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069F090);
  }
  return result;
}

uint64_t sub_100207C34()
{
  return sub_100207C7C((unint64_t *)&unk_1006A3B60, (void (*)(uint64_t))type metadata accessor for TagEntity);
}

uint64_t sub_100207C7C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100207CCC()
{
  unint64_t result = qword_10069F098;
  if (!qword_10069F098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069F098);
  }
  return result;
}

unint64_t sub_100207D24()
{
  unint64_t result = qword_10069F0A0;
  if (!qword_10069F0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069F0A0);
  }
  return result;
}

uint64_t sub_100207D78()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_100207DAC()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for CreateTagIntent()
{
  return &type metadata for CreateTagIntent;
}

uint64_t sub_100207DD8()
{
  return sub_10001DFB0(&qword_10069F0B0, &qword_10069F0B8);
}

uint64_t sub_100207E14()
{
  return sub_10001DFB0(&qword_10069F0C0, &qword_10069F0C8);
}

uint64_t sub_100207E50()
{
  return sub_10001DFB0(&qword_10069F0D0, &qword_10069F0C8);
}

void sub_100207E8C(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_100031418(0, (unint64_t *)&qword_1006A0020);
    sub_10002C8EC(&qword_10069F128, (unint64_t *)&qword_1006A0020);
    Set.Iterator.init(_cocoa:)();
    uint64_t v1 = v19;
    uint64_t v17 = v20;
    uint64_t v3 = v21;
    uint64_t v2 = v22;
    unint64_t v4 = v23;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v17 = a1 + 56;
    uint64_t v3 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v2 = 0;
  }
  int64_t v8 = (unint64_t)(v3 + 64) >> 6;
  while (v1 < 0)
  {
    if (!__CocoaSet.Iterator.next()()) {
      goto LABEL_38;
    }
    sub_100031418(0, (unint64_t *)&qword_1006A0020);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v12 = v18;
    swift_unknownObjectRelease();
    uint64_t v11 = v2;
    uint64_t v9 = v4;
    if (!v18) {
      goto LABEL_38;
    }
LABEL_33:
    self;
    uint64_t v16 = (void *)swift_dynamicCastObjCClass();
    if (v16 && (objc_msgSend(v16, "ic_isHashtagType") & 1) != 0)
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    else
    {
    }
    uint64_t v2 = v11;
    unint64_t v4 = v9;
  }
  if (v4)
  {
    uint64_t v9 = (v4 - 1) & v4;
    unint64_t v10 = __clz(__rbit64(v4)) | (v2 << 6);
    uint64_t v11 = v2;
LABEL_32:
    id v12 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
    if (!v12) {
      goto LABEL_38;
    }
    goto LABEL_33;
  }
  int64_t v13 = v2 + 1;
  if (!__OFADD__(v2, 1))
  {
    if (v13 >= v8) {
      goto LABEL_38;
    }
    unint64_t v14 = *(void *)(v17 + 8 * v13);
    uint64_t v11 = v2 + 1;
    if (!v14)
    {
      uint64_t v11 = v2 + 2;
      if (v2 + 2 >= v8) {
        goto LABEL_38;
      }
      unint64_t v14 = *(void *)(v17 + 8 * v11);
      if (!v14)
      {
        uint64_t v11 = v2 + 3;
        if (v2 + 3 >= v8) {
          goto LABEL_38;
        }
        unint64_t v14 = *(void *)(v17 + 8 * v11);
        if (!v14)
        {
          uint64_t v11 = v2 + 4;
          if (v2 + 4 >= v8) {
            goto LABEL_38;
          }
          unint64_t v14 = *(void *)(v17 + 8 * v11);
          if (!v14)
          {
            uint64_t v11 = v2 + 5;
            if (v2 + 5 >= v8) {
              goto LABEL_38;
            }
            unint64_t v14 = *(void *)(v17 + 8 * v11);
            if (!v14)
            {
              uint64_t v15 = v2 + 6;
              while (v8 != v15)
              {
                unint64_t v14 = *(void *)(v17 + 8 * v15++);
                if (v14)
                {
                  uint64_t v11 = v15 - 1;
                  goto LABEL_31;
                }
              }
LABEL_38:
              sub_10017B518();
              return;
            }
          }
        }
      }
    }
LABEL_31:
    uint64_t v9 = (v14 - 1) & v14;
    unint64_t v10 = __clz(__rbit64(v14)) + (v11 << 6);
    goto LABEL_32;
  }
  __break(1u);
}

id sub_100208220(uint64_t a1, uint64_t a2, char a3, char a4, char a5)
{
  uint64_t v11 = objc_allocWithZone(v5);
  *(void *)&v11[OBJC_IVAR___ICFolderListSelectionValidator_modernContext] = a1;
  *(void *)&v11[OBJC_IVAR___ICFolderListSelectionValidator_htmlContext] = a2;
  v11[OBJC_IVAR___ICFolderListSelectionValidator_hidesSystemPaperNotesInCustomFolders] = a3;
  v11[OBJC_IVAR___ICFolderListSelectionValidator_hidesMathNotesInCustomFolders] = a4;
  v11[OBJC_IVAR___ICFolderListSelectionValidator_hidesCallNotesInCustomFolders] = a5;
  v13.receiver = v11;
  v13.super_class = v5;
  return [super init];
}

uint64_t sub_10020870C(void *a1, id a2)
{
  id v4 = [a2 type];
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;
  if (v5 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v7 == v8)
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_9;
  }
  char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v10)
  {
LABEL_9:
    char v13 = 1;
    return v13 & 1;
  }
  self;
  uint64_t v11 = swift_dynamicCastObjCClass();
  if (v11)
  {
    __chkstk_darwin(v11);
    id v12 = a1;
    NSManagedObjectContext.performAndWait<A>(_:)();

    char v13 = v21;
  }
  else
  {
    self;
    if (swift_dynamicCastObjCClass())
    {
      id v15 = a1;
      id v16 = [a2 type];
      uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v19 = v18;
      if (v17 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v19 == v20) {
        char v13 = 1;
      }
      else {
        char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      char v13 = 0;
    }
  }
  return v13 & 1;
}

void sub_100208A14(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t v7 = *(void **)(a1 + OBJC_IVAR___ICFolderListSelectionValidator_modernContext);
  id v8 = objc_allocWithZone((Class)type metadata accessor for ICQueryResultsController());
  id v9 = v7;
  id v10 = a2;
  uint64_t v11 = (void *)ICQueryResultsController.init(managedObjectContext:query:)();
  uint64_t v12 = ICQueryResultsController.performFetch()();
  id v13 = [a3 objectID];
  LOBYTE(v7) = sub_100428334(v13, v12);

  swift_bridgeObjectRelease();
  *a4 = v7 & 1;
}

id sub_100208AD8(int a1, id a2)
{
  id v3 = [a2 ic_isLegacyFolderType];
  if (v3)
  {
    __chkstk_darwin(v3);
    NSManagedObjectContext.performAndWait<A>(_:)();
    return (id)v5;
  }
  else
  {
    id result = [a2 ic_isLegacyAccountType];
    if (result)
    {
      __chkstk_darwin(result);
      NSManagedObjectContext.performAndWait<A>(_:)();
      return (id)v6;
    }
  }
  return result;
}

void sub_100208C00(void *a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  id v5 = [a1 store];
  if (v5 && (unsigned __int8 v6 = v5, v7 = [v5 objectID], v6, v7))
  {
    sub_100031418(0, (unint64_t *)&qword_10069E810);
    id v8 = a2;
    id v9 = v7;
    char v10 = static NSObject.== infix(_:_:)();
  }
  else
  {
    char v10 = 0;
  }
  *a3 = v10 & 1;
}

void sub_100208CD0(void *a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  id v5 = [a1 store];
  if (v5
    && (unsigned __int8 v6 = v5, v7 = [v5 account], v6, v7)
    && (id v8 = [v7 objectID], v7, v8))
  {
    sub_100031418(0, (unint64_t *)&qword_10069E810);
    id v9 = a2;
    id v10 = v8;
    char v11 = static NSObject.== infix(_:_:)();
  }
  else
  {
    char v11 = 0;
  }
  *a3 = v11 & 1;
}

void sub_100208DC4(void *a1@<X0>, void *a2@<X2>, unsigned char *a3@<X8>)
{
  id v6 = [a1 query];
  id v7 = [v6 entityName];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v8 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v10 = [v8 initWithEntityName:v9];

  [v10 setResultType:1];
  id v11 = [a1 query];
  id v12 = [v11 predicate];

  [v10 setPredicate:v12];
  sub_100031418(0, (unint64_t *)&qword_10069E810);
  uint64_t v13 = NSManagedObjectContext.fetch<A>(_:)();
  if (v3)
  {
    swift_errorRelease();

    char v14 = 0;
  }
  else
  {
    unint64_t v15 = v13;
    id v16 = [a2 objectID];
    char v17 = sub_1002D64C4((uint64_t)v16, v15);
    swift_bridgeObjectRelease();

    char v14 = v17 & 1;
  }
  *a3 = v14;
}

void sub_100208FCC(unsigned char *a1@<X8>)
{
  sub_100208A14(*(void *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), a1);
}

void sub_100208FEC(unsigned char *a1@<X8>)
{
  sub_100208CD0(*(void **)(v1 + 16), *(void **)(v1 + 24), a1);
}

void sub_100209008(unsigned char *a1@<X8>)
{
  sub_100208C00(*(void **)(v1 + 16), *(void **)(v1 + 24), a1);
}

void sub_100209024(unsigned char *a1@<X8>)
{
  sub_100208DC4(*(void **)(v1 + 16), *(void **)(v1 + 32), a1);
}

id sub_100209044@<X0>(void *a1@<X8>)
{
  return sub_10000A508(&OBJC_IVAR___ICFolderListSelectionValidator_htmlContext, a1);
}

void sub_100209064(unsigned char *a1@<X8>)
{
}

id sub_10020907C(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v4[OBJC_IVAR___ICMovePreviewView_maximumImageViewsCount] = 3;
  *(void *)&v4[OBJC_IVAR___ICMovePreviewView_size] = 0x4046000000000000;
  *(void *)&v4[OBJC_IVAR___ICMovePreviewView_cornerRadius] = 0x4010000000000000;
  *(void *)&v4[OBJC_IVAR___ICMovePreviewView____lazy_storage___stackView] = 0;
  *(void *)&v4[OBJC_IVAR___ICMovePreviewView_modernContext] = 0;
  *(void *)&v4[OBJC_IVAR___ICMovePreviewView_htmlContext] = 0;
  *(void *)&v4[OBJC_IVAR___ICMovePreviewView_objectIds] = _swiftEmptyArrayStorage;
  v13.receiver = v4;
  v13.super_class = ObjectType;
  [super initWithFrame:a1, a2, a3, a4];
  sub_1002091D0();
  sub_10002F214(&qword_10069F190);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_100524D10;
  *(void *)(v11 + 32) = type metadata accessor for UITraitUserInterfaceStyle();
  *(void *)(v11 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
  UIView.registerForTraitChanges(_:action:)();

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v10;
}

void sub_1002091D0()
{
  [v0 setClipsToBounds:1];
  [v0 ic_applyRoundedCornersWithRadius:*(double *)&v0[OBJC_IVAR___ICMovePreviewView_cornerRadius]];
  id v1 = sub_1002095E8();
  [v0 addSubview:v1];

  uint64_t v2 = self;
  sub_10002F214(&qword_10069BA00);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100527150;
  id v4 = sub_1002095E8();
  id v5 = [v4 topAnchor];

  id v6 = [v0 topAnchor];
  id v7 = [v5 constraintEqualToAnchor:v6];

  *(void *)(v3 + 32) = v7;
  id v8 = sub_1002095E8();
  id v9 = [v8 leadingAnchor];

  id v10 = [v0 leadingAnchor];
  id v11 = [v9 constraintEqualToAnchor:v10];

  *(void *)(v3 + 40) = v11;
  id v12 = sub_1002095E8();
  id v13 = [v12 trailingAnchor];

  id v14 = [v0 trailingAnchor];
  id v15 = [v13 constraintEqualToAnchor:v14];

  *(void *)(v3 + 48) = v15;
  specialized Array._endMutation()();
  sub_100031418(0, (unint64_t *)&qword_1006A5260);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 activateConstraints:isa];
}

id sub_100209450(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR___ICMovePreviewView_maximumImageViewsCount] = 3;
  *(void *)&v1[OBJC_IVAR___ICMovePreviewView_size] = 0x4046000000000000;
  *(void *)&v1[OBJC_IVAR___ICMovePreviewView_cornerRadius] = 0x4010000000000000;
  *(void *)&v1[OBJC_IVAR___ICMovePreviewView____lazy_storage___stackView] = 0;
  *(void *)&v1[OBJC_IVAR___ICMovePreviewView_modernContext] = 0;
  *(void *)&v1[OBJC_IVAR___ICMovePreviewView_htmlContext] = 0;
  *(void *)&v1[OBJC_IVAR___ICMovePreviewView_objectIds] = _swiftEmptyArrayStorage;
  v9.receiver = v1;
  v9.super_class = ObjectType;
  id v4 = [super initWithCoder:a1];
  id v5 = v4;
  if (v4)
  {
    id v6 = v4;
    sub_1002091D0();
    sub_10002F214(&qword_10069F190);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_100524D10;
    *(void *)(v7 + 32) = type metadata accessor for UITraitUserInterfaceStyle();
    *(void *)(v7 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
    UIView.registerForTraitChanges(_:action:)();

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
  }
  return v5;
}

id sub_1002095E8()
{
  uint64_t v1 = OBJC_IVAR___ICMovePreviewView____lazy_storage___stackView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR___ICMovePreviewView____lazy_storage___stackView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR___ICMovePreviewView____lazy_storage___stackView);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UIStackView) init];
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    [v4 setAxis:1];
    [v4 setSpacing:*(double *)(v0 + OBJC_IVAR___ICMovePreviewView_cornerRadius) * 1.5- *(double *)(v0 + OBJC_IVAR___ICMovePreviewView_size)];
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_1002096B8(uint64_t a1, void *a2)
{
  unint64_t v5 = *(void *)(v2 + OBJC_IVAR___ICMovePreviewView_objectIds);
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  id v7 = sub_100209960(a2);
  id v8 = [objc_allocWithZone((Class)UIImageView) initWithImage:v7];

  [v8 setTranslatesAutoresizingMaskIntoConstraints:0];
  if (__OFADD__(a1, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v9 = 3;
    if (v6 < 3) {
      uint64_t v9 = v6;
    }
    [v8 setAlpha:1.0 / (double)v9 * (double)(a1 + 1)];
    [v8 ic_applyRoundedCornersWithRadius:*(double *)(v2 + OBJC_IVAR___ICMovePreviewView_cornerRadius)];
    if (objc_msgSend(self, "ic_isVision")) {
      [v8 setOverrideUserInterfaceStyle:1];
    }
    id v10 = sub_1002095E8();
    [v10 addArrangedSubview:v8];

    id v11 = self;
    sub_10002F214(&qword_10069BA00);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_100524CE0;
    id v13 = [v8 heightAnchor];
    double v14 = *(double *)(v2 + OBJC_IVAR___ICMovePreviewView_size);
    id v15 = [v13 constraintEqualToConstant:v14];

    *(void *)(v12 + 32) = v15;
    id v16 = [v8 widthAnchor];
    id v17 = [v16 constraintEqualToConstant:v14];

    *(void *)(v12 + 40) = v17;
    specialized Array._endMutation()();
    sub_100031418(0, (unint64_t *)&qword_1006A5260);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v11 activateConstraints:isa];
  }
}

id sub_100209960(void *a1)
{
  if (objc_msgSend(a1, "ic_isModernFolderType"))
  {
    id v3 = *(void **)(v1 + OBJC_IVAR___ICMovePreviewView_modernContext);
    if (v3)
    {
      id v4 = [v3 objectWithID:a1];
      if (v4)
      {
        unint64_t v5 = v4;
        self;
        uint64_t v6 = (void *)swift_dynamicCastObjCClass();
        id v7 = v6;
        if (v6)
        {
          id v8 = [v6 navigationBarIconWithSize:*(double *)(v1 + OBJC_IVAR___ICMovePreviewView_size), *(double *)(v1 + OBJC_IVAR___ICMovePreviewView_size)];
          if (!v8) {
            goto LABEL_22;
          }
LABEL_12:
          id v12 = v8;

          return v12;
        }
        goto LABEL_21;
      }
    }
    id v7 = 0;
    goto LABEL_22;
  }
  if (objc_msgSend(a1, "ic_isModernNoteType"))
  {
    uint64_t v9 = *(void **)(v1 + OBJC_IVAR___ICMovePreviewView_modernContext);
    if (v9 && (id v10 = [v9 objectWithID:a1]) != 0)
    {
      unint64_t v5 = v10;
      self;
      id v11 = (void *)swift_dynamicCastObjCClass();
      id v7 = v11;
      if (!v11)
      {
LABEL_21:

        goto LABEL_22;
      }
      id v8 = [v11 navigationBarIconWithSize:*(double *)(v1 + OBJC_IVAR___ICMovePreviewView_size) * (double *)(v1 + OBJC_IVAR___ICMovePreviewView_size)];
      if (v8) {
        goto LABEL_12;
      }
    }
    else
    {
      id v7 = 0;
    }
LABEL_22:
    id v12 = [self defaultNavigationBarIcon];

    return v12;
  }
  if (!objc_msgSend(a1, "ic_isLegacyFolderType")) {
    [a1 ic_isLegacyNoteType];
  }
  id v13 = [self defaultNavigationBarIcon];

  return v13;
}

void sub_100209D48()
{
  id v1 = sub_1002095E8();
  id v2 = [v1 arrangedSubviews];

  sub_100031418(0, (unint64_t *)&qword_1006A4640);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    if (!v4) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v4) {
      goto LABEL_10;
    }
  }
  if (v4 < 1) {
    goto LABEL_20;
  }
  for (uint64_t i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0) {
      id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v6 = *(id *)(v3 + 8 * i + 32);
    }
    id v7 = v6;
    [v6 removeFromSuperview];
  }
LABEL_10:
  swift_bridgeObjectRelease_n();
  unint64_t v8 = *(void *)&v0[OBJC_IVAR___ICMovePreviewView_objectIds];
  swift_bridgeObjectRetain();
  sub_10041A714(3, v8);
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  unint64_t v14 = v13;
  swift_bridgeObjectRelease();
  BOOL v15 = __OFSUB__(v14 >> 1, v12);
  uint64_t v16 = (v14 >> 1) - v12;
  if (v16)
  {
    if ((v16 < 0) ^ v15 | (v16 == 0))
    {
LABEL_21:
      __break(1u);
      return;
    }
    id v17 = v0;
    uint64_t v18 = 0;
    uint64_t v19 = v10 + 8 * v12;
    while (!__OFADD__(v18, 1))
    {
      id v20 = *(id *)(v19 + 8 * v18);
      sub_1002096B8(v18, v20);

      if (v16 == ++v18)
      {

        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
LABEL_16:

  swift_unknownObjectRelease();
}

uint64_t type metadata accessor for MovePreviewView()
{
  return self;
}

uint64_t static ChecklistItemID.uriTypeName.getter()
{
  return 0x73696C6B63656863;
}

uint64_t ChecklistItemID.contextType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for ManagedEntityContextType.modern(_:);
  uint64_t v3 = type metadata accessor for ManagedEntityContextType();
  uint64_t v6 = *(void *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 104))(a1, v2, v3);
  uint64_t v4 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56);

  return v4(a1, 0, 1, v3);
}

uint64_t ChecklistItemID.noteObjectURI.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t ChecklistItemID.noteObjectURI.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t ChecklistItemID.paragraphUUID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ChecklistItemID() + 20);
  uint64_t v4 = type metadata accessor for UUID();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ChecklistItemID()
{
  uint64_t result = qword_10069F280;
  if (!qword_10069F280) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ChecklistItemID.paragraphUUID.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ChecklistItemID() + 20);
  uint64_t v4 = type metadata accessor for UUID();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ChecklistItemID.paragraphUUID.modify())()
{
  return ICCloudSyncingObject.MoveAction.Types.rawValue.getter;
}

uint64_t ChecklistItemID.init(noteObjectID:paragraphUUID:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v6 = [a1 URIRepresentation];
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v7 = a3 + *(int *)(type metadata accessor for ChecklistItemID() + 20);
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32);

  return v9(v7, a2, v8);
}

uint64_t ChecklistItemID.init(noteManagedIdentifier:paragraphIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, void (*a3)(char *, char *, uint64_t)@<X3>, uint64_t a4@<X8>)
{
  uint64_t v31 = a1;
  uint64_t v32 = a3;
  v28[1] = a2;
  uint64_t v5 = sub_10002F214((uint64_t *)&unk_10069C990);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v29 = *(void *)(v8 - 8);
  uint64_t v30 = v8;
  __chkstk_darwin(v8);
  v28[0] = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10002F214(&qword_10069B310);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for ChecklistItemID();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  id v20 = (char *)v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(string:)();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    swift_bridgeObjectRelease();
    sub_10002B754((uint64_t)v12, &qword_10069B310);
    uint64_t v21 = 1;
  }
  else
  {
    uint64_t v31 = a4;
    uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v22(v16, v12, v13);
    UUID.init(uuidString:)();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v7, 1, v30) == 1)
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      sub_10002B754((uint64_t)v7, (uint64_t *)&unk_10069C990);
      uint64_t v21 = 1;
      a4 = v31;
    }
    else
    {
      uint64_t v32 = v22;
      unint64_t v23 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
      int v24 = (char *)v28[0];
      id v25 = v7;
      uint64_t v26 = v30;
      v23((char *)v28[0], v25, v30);
      v32(v20, v16, v13);
      v23(&v20[*(int *)(v17 + 20)], v24, v26);
      a4 = v31;
      sub_10020A7D0((uint64_t)v20, v31);
      uint64_t v21 = 0;
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(a4, v21, 1, v17);
}

uint64_t sub_10020A7D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ChecklistItemID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ChecklistItemID.init(url:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = type metadata accessor for ChecklistItemID();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);

  return v6(a2, 1, 1, v5);
}

uint64_t ChecklistItemID.note(in:)@<X0>(void *a1@<X0>, NSURL *a2@<X8>)
{
  URL._bridgeToObjectiveC()(a2);
  uint64_t v4 = v3;
  id v5 = [a1 managedObjectIDForURIRepresentation:v3];

  if (v5)
  {
    id v6 = [a1 managedObjectContextForObjectID:v5];
    if (v6)
    {
      uint64_t v7 = v6;
      id v8 = [v6 objectWithID:v5];

      if (v8)
      {
        uint64_t result = swift_dynamicCastObjCProtocolConditional();
        if (result) {
          return result;
        }
      }
    }
    else
    {
    }
  }
  return 0;
}

uint64_t ChecklistItemID.hash(into:)()
{
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t static ChecklistItemID.__derived_struct_equals(_:_:)()
{
  if ((static URL.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  type metadata accessor for ChecklistItemID();

  return static UUID.== infix(_:_:)();
}

Swift::Int ChecklistItemID.hashValue.getter()
{
  return Hasher._finalize()();
}

unint64_t ChecklistItemID.debugDescription.getter()
{
  uint64_t v0 = sub_10002F214(&qword_10069B310);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for ManagedEntityContextType();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for ManagedEntityContextType.modern(_:), v3);
  uint64_t v7 = ManagedEntityContextType.rawValue.getter();
  unint64_t v9 = v8;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  unint64_t v26 = v7;
  unint64_t v27 = v9;
  uint64_t v10 = String.init<A>(reflecting:)();
  uint64_t v12 = v11;
  ChecklistItemID.uriRepresentation.getter((uint64_t)v2);
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v2, 1, v13) == 1)
  {
    sub_10002B754((uint64_t)v2, &qword_10069B310);
    uint64_t v15 = 0;
    unint64_t v16 = 0xE000000000000000;
  }
  else
  {
    uint64_t v15 = URL.absoluteString.getter();
    unint64_t v16 = v17;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v2, v13);
  }
  unint64_t v26 = v15;
  unint64_t v27 = v16;
  uint64_t v18 = String.init<A>(reflecting:)();
  id v20 = v19;
  unint64_t v26 = 0;
  unint64_t v27 = 0xE000000000000000;
  _StringGuts.grow(_:)(28);
  swift_bridgeObjectRelease();
  unint64_t v26 = 0xD00000000000001DLL;
  unint64_t v27 = 0x80000001005533A0;
  v21._countAndFlagsBits = v10;
  v21._object = v12;
  String.append(_:)(v21);
  swift_bridgeObjectRelease();
  v22._countAndFlagsBits = 0x203A697275202CLL;
  v22._object = (void *)0xE700000000000000;
  String.append(_:)(v22);
  v23._countAndFlagsBits = v18;
  v23._object = v20;
  String.append(_:)(v23);
  swift_bridgeObjectRelease();
  v24._countAndFlagsBits = 41;
  v24._object = (void *)0xE100000000000000;
  String.append(_:)(v24);
  return v26;
}

uint64_t ChecklistItemID.entityIdentifierString.getter()
{
  uint64_t v0 = sub_10002F214(&qword_10069B310);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  ChecklistItemID.uriRepresentation.getter((uint64_t)v2);
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_10002B754((uint64_t)v2, &qword_10069B310);
    return 0;
  }
  else
  {
    uint64_t v5 = URL.absoluteString.getter();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v2, v3);
  }
  return v5;
}

uint64_t static ChecklistItemID.entityIdentifier(for:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void (*v74)(unint64_t *__return_ptr, char *);
  uint64_t v75;
  int v76;
  uint64_t v77;
  char *v78;
  unint64_t v79;
  unint64_t v80;
  char v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(char *, char *, uint64_t);
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void (*v99)(char *, char *, uint64_t);
  uint64_t v100;
  void (*v101)(char *, char *, uint64_t);
  char v102;
  void (*v103)(char *, uint64_t);
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  char *v113;
  char *v114;
  char *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  char *v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  unint64_t v135;
  unint64_t v136;
  char v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  unint64_t v143;

  uint64_t v6 = sub_10002F214(&qword_10069D370);
  __chkstk_darwin(v6 - 8);
  uint64_t v112 = (char *)&v106 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ManagedEntityContextType();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v111 = (char *)&v106 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v113 = (char *)&v106 - v12;
  uint64_t v126 = type metadata accessor for FilePath.Component();
  uint64_t v128 = *(void *)(v126 - 8);
  __chkstk_darwin(v126);
  uint64_t v114 = (char *)&v106 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = type metadata accessor for FilePath.ComponentView.Index();
  uint64_t v123 = *(void *)(v124 - 8);
  uint64_t v14 = __chkstk_darwin(v124);
  uint64_t v121 = (char *)&v106 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v120 = (char *)&v106 - v16;
  uint64_t v17 = sub_10002F214(&qword_10069F198);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v125 = (uint64_t)&v106 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v127 = (char *)&v106 - v20;
  uint64_t v21 = sub_10002F214(&qword_10069F1A0);
  __chkstk_darwin(v21 - 8);
  uint64_t v119 = (char *)&v106 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = type metadata accessor for FilePath.ComponentView();
  uint64_t v130 = *(void *)(v122 - 8);
  __chkstk_darwin(v122);
  uint64_t v129 = (char *)&v106 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_10002F214(&qword_10069F1A8);
  __chkstk_darwin(v116);
  uint64_t v117 = (char *)&v106 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_10002F214(&qword_10069F1B0);
  __chkstk_darwin(v118);
  uint64_t v134 = (char *)&v106 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_10002F214(&qword_10069F1B8);
  __chkstk_darwin(v26 - 8);
  uint64_t v115 = (char *)&v106 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for FilePath();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v132 = v28;
  uint64_t v133 = v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v32 = (char *)&v106 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v131 = (char *)&v106 - v33;
  uint64_t v34 = sub_10002F214(&qword_10069B310);
  __chkstk_darwin(v34 - 8);
  uint64_t v36 = (char *)&v106 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = a1;
  uint64_t v143 = a2;
  uint64_t v140 = 58;
  uint64_t v141 = 0xE100000000000000;
  sub_10020DACC();
  sub_10020DB20();
  BidirectionalCollection<>.firstRange<A>(of:)();
  if (v137)
  {
    uint64_t v37 = type metadata accessor for ChecklistItemID();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(a3, 1, 1, v37);
  }
  uint64_t v107 = v9;
  uint64_t v108 = v8;
  uint64_t v110 = a3;
  uint64_t v109 = v136;
  swift_bridgeObjectRetain();
  String.subscript.getter();
  swift_bridgeObjectRelease();
  static String._fromSubstring(_:)();
  swift_bridgeObjectRelease();
  NSString v39 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  int v40 = ICIsNotesURLScheme();

  if (!v40) {
    goto LABEL_37;
  }
  URL.init(string:)();
  sub_10002B754((uint64_t)v36, &qword_10069B310);
  uint64_t v140 = a1;
  uint64_t v141 = a2;
  uint64_t v138 = 63;
  uint64_t v139 = 0xE100000000000000;
  BidirectionalCollection<>.firstRange<A>(of:)();
  if (v137)
  {
    swift_bridgeObjectRetain();
    sub_10020C6E8(v109, a1, a2);
    swift_bridgeObjectRelease();
    uint64_t v41 = static String._fromSubstring(_:)();
    unint64_t v43 = v42;
    uint64_t v44 = v133;
    uint64_t v46 = v129;
    uint64_t v45 = v130;
  }
  else
  {
    uint64_t result = v109;
    uint64_t v44 = v133;
    uint64_t v46 = v129;
    uint64_t v45 = v130;
    if (v135 >> 14 < v109 >> 14)
    {
      __break(1u);
      return result;
    }
    String.subscript.getter();
    uint64_t v41 = static String._fromSubstring(_:)();
    unint64_t v43 = v47;
  }
  swift_bridgeObjectRelease();
  uint64_t v142 = v41;
  uint64_t v143 = v43;
  swift_bridgeObjectRetain();
  v48._countAndFlagsBits = 12079;
  v48._object = (void *)0xE200000000000000;
  Swift::Bool v49 = String.hasPrefix(_:)(v48);
  swift_bridgeObjectRelease();
  uint64_t v50 = v122;
  if (v49) {
    sub_10020C734(2);
  }
  uint64_t v51 = v131;
  FilePath.init(_:)();
  uint64_t v52 = type metadata accessor for FilePath.Root();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v115, 1, 1, v52);
  FilePath.root.setter();
  (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v32, v51, v132);
  FilePath.components.getter();
  uint64_t v53 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
  uint64_t v54 = (uint64_t)v119;
  v53(v119, v46, v50);
  uint64_t v55 = v117;
  uint64_t v115 = *(char **)(v45 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v115)(v117, v54, v50);
  uint64_t v56 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))&v55[*(int *)(v116 + 44)];
  *uint64_t v56 = sub_10020C7BC;
  v56[1] = 0;
  sub_10002B754(v54, &qword_10069F1A0);
  v53(v46, v55, v50);
  sub_10001DCE8(&qword_10069F1D0, (void (*)(uint64_t))&type metadata accessor for FilePath.ComponentView);
  uint64_t v57 = v134;
  dispatch thunk of Sequence.makeIterator()();
  uint64_t v58 = v50;
  long long v59 = *(_OWORD *)v56;
  uint64_t v119 = &v57[*(int *)(v118 + 44)];
  *(_OWORD *)uint64_t v119 = v59;
  uint64_t v60 = sub_10002F214(&qword_10069F1D8);
  uint64_t v61 = v123;
  uint64_t v62 = *(void (**)(char *))(v123 + 16);
  uint64_t v63 = v120;
  uint64_t v118 = (uint64_t)&v57[*(int *)(v60 + 36)];
  uint64_t v64 = v124;
  v62(v120);
  sub_10001DCE8(&qword_10069F1E0, (void (*)(uint64_t))&type metadata accessor for FilePath.ComponentView);
  uint64_t v65 = v121;
  dispatch thunk of Collection.endIndex.getter();
  sub_10001DCE8(&qword_10069F1E8, (void (*)(uint64_t))&type metadata accessor for FilePath.ComponentView.Index);
  LOBYTE(v51) = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v66 = *(void (**)(char *, uint64_t))(v61 + 8);
  v66(v65, v64);
  v66(v63, v64);
  uint64_t v67 = 1;
  uint64_t v68 = v126;
  if ((v51 & 1) == 0)
  {
    uint64_t v69 = v134;
    uint64_t v70 = (void (*)(unint64_t *, void))dispatch thunk of Collection.subscript.read();
    (*(void (**)(char *))(v128 + 16))(v127);
    v70(&v135, 0);
    uint64_t v71 = v129;
    ((void (*)(char *, char *, uint64_t))v115)(v129, v69, v58);
    dispatch thunk of Collection.formIndex(after:)();
    (*(void (**)(char *, uint64_t))(v130 + 8))(v71, v58);
    uint64_t v67 = 0;
  }
  uint64_t v72 = (uint64_t)v127;
  uint64_t v73 = v128;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v128 + 56))(v127, v67, 1, v68);
  uint64_t v74 = *(void (**)(unint64_t *__return_ptr, char *))v119;
  uint64_t v75 = v125;
  sub_10002F1B0(v72, v125, &qword_10069F198);
  uint64_t v76 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v73 + 48))(v75, 1, v68);
  uint64_t v77 = (uint64_t)v134;
  if (v76 != 1)
  {
    uint64_t v78 = v114;
    (*(void (**)(char *, uint64_t, uint64_t))(v73 + 32))(v114, v75, v68);
    v74(&v135, v78);
    uint64_t v80 = v135;
    uint64_t v79 = v136;
    (*(void (**)(char *, uint64_t))(v73 + 8))(v78, v68);
    if (v80 == 0x73696C6B63656863 && v79 == 0xED00006D65746974)
    {
      swift_bridgeObjectRelease();
LABEL_17:
      uint64_t v82 = sub_10020C900();
      if (v83)
      {
        uint64_t v135 = v82;
        uint64_t v136 = v83;
        sub_10017B588();
        uint64_t v84 = StringProtocol.removingPercentEncoding.getter();
        uint64_t v86 = v85;
        swift_bridgeObjectRelease();
        if (v86)
        {
          swift_bridgeObjectRetain();
          uint64_t v87 = (uint64_t)v112;
          ManagedEntityContextType.init(rawValue:)();
          uint64_t v88 = v107;
          uint64_t v89 = v108;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v107 + 48))(v87, 1, v108) == 1)
          {
            sub_10002B754(v87, &qword_10069D370);
            uint64_t v90 = sub_10020C900();
            if (v91)
            {
              ChecklistItemID.init(noteManagedIdentifier:paragraphIdentifier:)(v84, v90, v91, v110);
              uint64_t v92 = v77;
LABEL_22:
              sub_10002B754(v92, &qword_10069F1B0);
              return (*(uint64_t (**)(char *, uint64_t))(v133 + 8))(v131, v132);
            }
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t, uint64_t))(v88 + 32))(v113, v87, v89);
            uint64_t v93 = sub_10020C900();
            if (v94)
            {
              uint64_t v135 = v93;
              uint64_t v136 = v94;
              uint64_t v95 = StringProtocol.removingPercentEncoding.getter();
              uint64_t v97 = v96;
              swift_bridgeObjectRelease();
              if (v97)
              {
                id v98 = sub_10020C900();
                if (v99)
                {
                  uint64_t v100 = v98;
                  uint64_t v101 = v99;
                  (*(void (**)(char *, void, uint64_t))(v88 + 104))(v111, enum case for ManagedEntityContextType.modern(_:), v108);
                  sub_10001DCE8(&qword_10069F1F8, (void (*)(uint64_t))&type metadata accessor for ManagedEntityContextType);
                  dispatch thunk of RawRepresentable.rawValue.getter();
                  dispatch thunk of RawRepresentable.rawValue.getter();
                  if (v135 == v140 && v136 == v141) {
                    uint64_t v102 = 1;
                  }
                  else {
                    uint64_t v102 = _stringCompareWithSmolCheck(_:_:expecting:)();
                  }
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  uint64_t v103 = *(void (**)(char *, uint64_t))(v88 + 8);
                  uint64_t v104 = v108;
                  v103(v111, v108);
                  if (v102)
                  {
                    ChecklistItemID.init(noteManagedIdentifier:paragraphIdentifier:)(v95, v100, v101, v110);
                    v103(v113, v104);
                    uint64_t v92 = (uint64_t)v134;
                    goto LABEL_22;
                  }
                  swift_bridgeObjectRelease();
                  uint64_t v77 = (uint64_t)v134;
                }
                swift_bridgeObjectRelease();
              }
            }
            (*(void (**)(char *, uint64_t))(v88 + 8))(v113, v108);
          }
        }
      }
      goto LABEL_36;
    }
    uint64_t v81 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v81) {
      goto LABEL_17;
    }
  }
LABEL_36:
  sub_10002B754(v77, &qword_10069F1B0);
  (*(void (**)(char *, uint64_t))(v133 + 8))(v131, v132);
LABEL_37:
  uint64_t v105 = type metadata accessor for ChecklistItemID();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v105 - 8) + 56))(v110, 1, 1, v105);
}

Swift::Int sub_10020C00C()
{
  return Hasher._finalize()();
}

uint64_t sub_10020C0F8()
{
  return dispatch thunk of Hashable.hash(into:)();
}

Swift::Int sub_10020C1CC()
{
  return Hasher._finalize()();
}

uint64_t sub_10020C2B4()
{
  if ((static URL.== infix(_:_:)() & 1) == 0) {
    return 0;
  }

  return static UUID.== infix(_:_:)();
}

uint64_t sub_10020C31C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v4 = sub_10002F214(&qword_10069F2C0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = type metadata accessor for AttributedString.Index();
  uint64_t v38 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_10002F214(&qword_1006A3DF0);
  uint64_t v13 = __chkstk_darwin(v37);
  int v40 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v31 - v15;
  uint64_t v17 = type metadata accessor for AttributedString.CharacterView();
  uint64_t v18 = v2;
  uint64_t v35 = sub_10001DCE8((unint64_t *)&unk_10069E210, (void (*)(uint64_t))&type metadata accessor for AttributedString.CharacterView);
  uint64_t v36 = v17;
  dispatch thunk of Collection.endIndex.getter();
  sub_10001DCE8(&qword_10069F2C8, (void (*)(uint64_t))&type metadata accessor for AttributedString.Index);
  uint64_t v19 = a1;
  uint64_t result = dispatch thunk of static Comparable.<= infix(_:_:)();
  if (result)
  {
    uint64_t v21 = &v9[*(int *)(v4 + 48)];
    uint64_t v22 = v38;
    uint64_t v34 = v16;
    uint64_t v31 = v12;
    uint64_t v32 = v4;
    uint64_t v23 = v4;
    uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v38 + 16);
    v24(v9, v19, v10);
    uint64_t v33 = v18;
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
    v25(v21, v31, v10);
    uint64_t v26 = &v7[*(int *)(v23 + 48)];
    v24(v7, (uint64_t)v9, v10);
    v24(v26, (uint64_t)v21, v10);
    uint64_t v27 = (uint64_t)v40;
    v25(v40, v7, v10);
    uint64_t v28 = *(void (**)(char *, uint64_t))(v22 + 8);
    v28(v26, v10);
    uint64_t v29 = &v7[*(int *)(v32 + 48)];
    v25(v7, v9, v10);
    v25(v29, v21, v10);
    v25((char *)(v27 + *(int *)(v37 + 36)), v29, v10);
    v28(v7, v10);
    uint64_t v30 = (uint64_t)v34;
    sub_10002F1B0(v27, (uint64_t)v34, &qword_1006A3DF0);
    dispatch thunk of Collection.subscript.getter();
    return sub_10002B754(v30, &qword_1006A3DF0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_10020C6E8(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (4 * v3 >= result >> 14) {
    return String.subscript.getter();
  }
  __break(1u);
  return result;
}

uint64_t sub_10020C734(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if (result < 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t result = String.index(_:offsetBy:limitedBy:)();
      if ((v1 & 1) == 0)
      {
        uint64_t v2 = result;
        uint64_t result = 15;
        uint64_t v1 = v2;
        return String.removeSubrange(_:)(result, v1);
      }
    }
    __break(1u);
    return String.removeSubrange(_:)(result, v1);
  }
  return result;
}

uint64_t sub_10020C7BC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for FilePath.Component();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = FilePath.Component.string.getter();
  v14[1] = v8;
  sub_10017B588();
  uint64_t v9 = StringProtocol.removingPercentEncoding.getter();
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  if (!v11)
  {
    uint64_t v9 = FilePath.Component.string.getter();
    uint64_t v11 = v12;
  }
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *a2 = v9;
  a2[1] = v11;
  return result;
}

uint64_t sub_10020C900()
{
  void (*v31)(uint64_t *__return_ptr, char *);
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  uint64_t v1 = type metadata accessor for FilePath.Component();
  unint64_t v42 = *(void *)(v1 - 8);
  unint64_t v43 = v1;
  __chkstk_darwin(v1);
  int v40 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for FilePath.ComponentView();
  uint64_t v38 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v37 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FilePath.ComponentView.Index();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v36 - v10;
  uint64_t v12 = sub_10002F214(&qword_10069F198);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v41 = (uint64_t)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v36 - v15;
  uint64_t v17 = sub_10002F214(&qword_10069F1D8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v11, v0 + *(int *)(v17 + 36), v5);
  sub_10001DCE8(&qword_10069F1E0, (void (*)(uint64_t))&type metadata accessor for FilePath.ComponentView);
  uint64_t v18 = v0;
  uint64_t v39 = v3;
  dispatch thunk of Collection.endIndex.getter();
  sub_10001DCE8(&qword_10069F1E8, (void (*)(uint64_t))&type metadata accessor for FilePath.ComponentView.Index);
  char v19 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v6 + 8);
  v20(v9, v5);
  v20(v11, v5);
  if (v19)
  {
    uint64_t v21 = 1;
    uint64_t v23 = v42;
    uint64_t v22 = v43;
  }
  else
  {
    uint64_t v24 = v18;
    uint64_t v25 = v39;
    uint64_t v26 = (void (*)(uint64_t *, void))dispatch thunk of Collection.subscript.read();
    uint64_t v28 = v42;
    uint64_t v27 = v43;
    (*(void (**)(char *))(v42 + 16))(v16);
    v26(&v44, 0);
    uint64_t v29 = v37;
    uint64_t v30 = v38;
    (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v37, v24, v25);
    dispatch thunk of Collection.formIndex(after:)();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v29, v25);
    uint64_t v21 = 0;
    uint64_t v22 = v27;
    uint64_t v23 = v28;
    uint64_t v18 = v24;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v16, v21, 1, v22);
  uint64_t v31 = *(void (**)(uint64_t *__return_ptr, char *))(v18 + *(int *)(sub_10002F214(&qword_10069F1B0) + 44));
  uint64_t v32 = v41;
  sub_10002F1B0((uint64_t)v16, v41, &qword_10069F198);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v32, 1, v22) == 1) {
    return 0;
  }
  uint64_t v34 = v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 32))(v40, v32, v22);
  v31(&v44, v34);
  uint64_t v33 = v44;
  (*(void (**)(char *, uint64_t))(v23 + 8))(v34, v22);
  return v33;
}

void sub_10020CDE0()
{
  void (*v9)(void **__return_ptr, uint64_t *);
  uint64_t v10;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  void *v17;
  uint64_t v18;

  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  if ((*v0 & 0x8000000000000000) != 0)
  {
    uint64_t v10 = __CocoaSet.Iterator.next()();
    if (v10)
    {
      uint64_t v18 = v10;
      sub_10020E410();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      uint64_t v7 = v17;
      swift_unknownObjectRelease();
      if (v17) {
        goto LABEL_6;
      }
    }
    return;
  }
  int64_t v4 = v0[3];
  unint64_t v3 = v1[4];
  if (v3)
  {
    uint64_t v5 = (v3 - 1) & v3;
    unint64_t v6 = __clz(__rbit64(v3)) | (v4 << 6);
LABEL_4:
    uint64_t v7 = *(void **)(*(void *)(v2 + 48) + 8 * v6);
    id v8 = v7;
    goto LABEL_5;
  }
  uint64_t v11 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    return;
  }
  uint64_t v12 = (unint64_t)(v1[2] + 64) >> 6;
  if (v11 >= v12)
  {
    uint64_t v7 = 0;
    uint64_t v5 = 0;
    goto LABEL_5;
  }
  uint64_t v13 = v1[1];
  uint64_t v14 = *(void *)(v13 + 8 * v11);
  if (v14)
  {
LABEL_13:
    uint64_t v5 = (v14 - 1) & v14;
    unint64_t v6 = __clz(__rbit64(v14)) + (v11 << 6);
    int64_t v4 = v11;
    goto LABEL_4;
  }
  uint64_t v15 = v4 + 2;
  if (v4 + 2 >= v12) {
    goto LABEL_29;
  }
  uint64_t v14 = *(void *)(v13 + 8 * v15);
  if (v14)
  {
LABEL_17:
    uint64_t v11 = v15;
    goto LABEL_13;
  }
  if (v4 + 3 >= v12) {
    goto LABEL_30;
  }
  uint64_t v14 = *(void *)(v13 + 8 * (v4 + 3));
  if (v14)
  {
    uint64_t v11 = v4 + 3;
    goto LABEL_13;
  }
  uint64_t v15 = v4 + 4;
  if (v4 + 4 < v12)
  {
    uint64_t v14 = *(void *)(v13 + 8 * v15);
    if (v14) {
      goto LABEL_17;
    }
    uint64_t v11 = v4 + 5;
    if (v4 + 5 < v12)
    {
      uint64_t v14 = *(void *)(v13 + 8 * v11);
      if (v14) {
        goto LABEL_13;
      }
      uint64_t v11 = v12 - 1;
      uint64_t v16 = v4 + 6;
      while (v12 != v16)
      {
        uint64_t v14 = *(void *)(v13 + 8 * v16++);
        if (v14)
        {
          uint64_t v11 = v16 - 1;
          goto LABEL_13;
        }
      }
LABEL_29:
      uint64_t v7 = 0;
      uint64_t v5 = 0;
      int64_t v4 = v11;
      goto LABEL_5;
    }
LABEL_30:
    uint64_t v7 = 0;
    uint64_t v5 = 0;
    int64_t v4 = v15;
    goto LABEL_5;
  }
  uint64_t v7 = 0;
  uint64_t v5 = 0;
  v4 += 3;
LABEL_5:
  v1[3] = v4;
  v1[4] = v5;
  if (v7)
  {
LABEL_6:
    uint64_t v9 = (void (*)(void **__return_ptr, uint64_t *))v1[5];
    uint64_t v18 = (uint64_t)v7;
    v9(&v17, &v18);
  }
}

uint64_t ChecklistItemID.uriRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v107 = a1;
  uint64_t v1 = type metadata accessor for URLComponents();
  uint64_t v100 = *(void *)(v1 - 8);
  uint64_t v101 = v1;
  __chkstk_darwin(v1);
  id v99 = (char *)&v81 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for ManagedEntityContextType();
  uint64_t v94 = *(void *)(v3 - 8);
  uint64_t v95 = v3;
  __chkstk_darwin(v3);
  uint64_t v93 = (char *)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002F214(&qword_10069F1B8);
  __chkstk_darwin(v5 - 8);
  uint64_t v92 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FilePath();
  uint64_t v97 = *(void *)(v7 - 8);
  uint64_t v98 = v7;
  __chkstk_darwin(v7);
  uint64_t v96 = (char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = type metadata accessor for CharacterSet();
  uint64_t v108 = *(void *)(v106 - 8);
  __chkstk_darwin(v106);
  uint64_t v105 = (char *)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10002F214(&qword_10069F198);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v91 = (char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v102 = (char *)&v81 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v103 = (char *)&v81 - v16;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v81 - v17;
  uint64_t v19 = type metadata accessor for FilePath.Component();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v81 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v26 = (char *)&v81 - v25;
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v29 = (char *)&v81 - v28;
  uint64_t v30 = __chkstk_darwin(v27);
  uint64_t v32 = (char *)&v81 - v31;
  __chkstk_darwin(v30);
  uint64_t v34 = (char *)&v81 - v33;
  FilePath.Component.init(_:)();
  uint64_t v104 = v20;
  uint64_t v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  uint64_t v35 = v20 + 48;
  uint64_t v36 = v37;
  uint64_t v38 = v19;
  if (v37(v18, 1, v19) == 1)
  {
    uint64_t v39 = v107;
LABEL_13:
    sub_10002B754((uint64_t)v18, &qword_10069F198);
    uint64_t v74 = type metadata accessor for URL();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v39, 1, 1, v74);
  }
  uint64_t v89 = v36;
  uint64_t v87 = v35;
  uint64_t v82 = v26;
  uint64_t v84 = v23;
  uint64_t v85 = v29;
  uint64_t v88 = v32;
  uint64_t v40 = v104;
  uint64_t v41 = (char *)(v104 + 32);
  unint64_t v42 = *(void (**)(char *, char *, uint64_t))(v104 + 32);
  uint64_t v90 = v34;
  v42(v34, v18, v19);
  uint64_t v109 = URL.absoluteString.getter();
  uint64_t v110 = v43;
  uint64_t v44 = self;
  id v45 = [v44 ic_uriIdentifierAllowedCharacterSet];
  uint64_t v46 = v105;
  static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v86 = sub_10017B588();
  StringProtocol.addingPercentEncoding(withAllowedCharacters:)();
  uint64_t v48 = v47;
  Swift::Bool v49 = *(void (**)(char *, uint64_t))(v108 + 8);
  v108 += 8;
  v49(v46, v106);
  swift_bridgeObjectRelease();
  if (!v48)
  {
    uint64_t v18 = v103;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56))(v103, 1, 1, v38);
    goto LABEL_10;
  }
  uint64_t v83 = v42;
  uint64_t v18 = v103;
  FilePath.Component.init(_:)();
  if (v89(v18, 1, v38) == 1)
  {
LABEL_10:
    (*(void (**)(char *, uint64_t))(v40 + 8))(v90, v38);
    uint64_t v39 = v107;
    goto LABEL_13;
  }
  uint64_t v103 = v41;
  v83(v88, v18, v38);
  type metadata accessor for ChecklistItemID();
  uint64_t v109 = UUID.uuidString.getter();
  uint64_t v110 = v50;
  id v51 = [v44 ic_uriIdentifierAllowedCharacterSet];
  uint64_t v52 = v105;
  static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)();

  StringProtocol.addingPercentEncoding(withAllowedCharacters:)();
  uint64_t v54 = v53;
  v49(v52, v106);
  swift_bridgeObjectRelease();
  uint64_t v55 = v90;
  if (!v54)
  {
    uint64_t v56 = v102;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56))(v102, 1, 1, v38);
    uint64_t v39 = v107;
    goto LABEL_12;
  }
  uint64_t v56 = v102;
  FilePath.Component.init(_:)();
  unsigned int v57 = v89(v56, 1, v38);
  uint64_t v39 = v107;
  if (v57 == 1)
  {
LABEL_12:
    uint64_t v72 = v38;
    uint64_t v73 = *(void (**)(char *, uint64_t))(v40 + 8);
    v73(v88, v72);
    v73(v55, v72);
    uint64_t v18 = v56;
    goto LABEL_13;
  }
  v83(v85, v56, v38);
  uint64_t v58 = type metadata accessor for FilePath.Root();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v92, 1, 1, v58);
  sub_10002F214((uint64_t *)&unk_10069F200);
  unint64_t v59 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  uint64_t v60 = swift_allocObject();
  *(_OWORD *)(v60 + 16) = xmmword_100524D10;
  uint64_t v61 = *(void (**)(unint64_t, char *, uint64_t))(v40 + 16);
  v61(v60 + v59, v55, v38);
  uint64_t v62 = v96;
  FilePath.init(root:components:)();
  uint64_t v63 = v93;
  uint64_t v64 = v94;
  uint64_t v65 = v95;
  (*(void (**)(char *, void, uint64_t))(v94 + 104))(v93, enum case for ManagedEntityContextType.modern(_:), v95);
  uint64_t v66 = (uint64_t)v91;
  ManagedEntityContextType.uriPathComponent.getter();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v63, v65);
  if (v89((char *)v66, 1, v38) == 1)
  {
    sub_10002B754(v66, &qword_10069F198);
    uint64_t v68 = v99;
    uint64_t v67 = v100;
    uint64_t v69 = v97;
    uint64_t v70 = v88;
    uint64_t v71 = v84;
  }
  else
  {
    uint64_t v76 = v82;
    v83(v82, (char *)v66, v38);
    uint64_t v71 = v84;
    v61((unint64_t)v84, v76, v38);
    FilePath.append(_:)();
    (*(void (**)(char *, uint64_t))(v104 + 8))(v76, v38);
    uint64_t v68 = v99;
    uint64_t v67 = v100;
    uint64_t v69 = v97;
    uint64_t v70 = v88;
  }
  v61((unint64_t)v71, v70, v38);
  FilePath.append(_:)();
  uint64_t v77 = v85;
  v61((unint64_t)v71, v85, v38);
  FilePath.append(_:)();
  URLComponents.init()();
  uint64_t v78 = v38;
  id v79 = (id)ICNotesAppURLScheme();
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  URLComponents.scheme.setter();
  FilePath.string.getter();
  URLComponents.path.setter();
  URLComponents.url.getter();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v68, v101);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v62, v98);
  uint64_t v80 = *(void (**)(char *, uint64_t))(v104 + 8);
  v80(v77, v78);
  v80(v88, v78);
  return ((uint64_t (*)(char *, uint64_t))v80)(v90, v78);
}

unint64_t sub_10020DACC()
{
  unint64_t result = qword_10069F1C0;
  if (!qword_10069F1C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069F1C0);
  }
  return result;
}

unint64_t sub_10020DB20()
{
  unint64_t result = qword_10069F1C8;
  if (!qword_10069F1C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069F1C8);
  }
  return result;
}

uint64_t sub_10020DB74()
{
  return sub_10001DCE8(&qword_1006A4A20, (void (*)(uint64_t))type metadata accessor for ChecklistItemID);
}

uint64_t sub_10020DBBC()
{
  return sub_10001DCE8((unint64_t *)&unk_10069F210, (void (*)(uint64_t))type metadata accessor for ChecklistItemID);
}

uint64_t sub_10020DC04()
{
  return sub_10001DCE8(&qword_1006A4A40, (void (*)(uint64_t))type metadata accessor for ChecklistItemID);
}

uint64_t sub_10020DC4C()
{
  return sub_10001DCE8(&qword_10069F220, (void (*)(uint64_t))type metadata accessor for ChecklistItemID);
}

uint64_t *initializeBufferWithCopyOfBuffer for ChecklistItemID(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for URL();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for ChecklistItemID(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for ChecklistItemID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for ChecklistItemID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for ChecklistItemID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for ChecklistItemID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ChecklistItemID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10020E138);
}

uint64_t sub_10020E138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for UUID();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for ChecklistItemID(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10020E244);
}

uint64_t sub_10020E244(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for UUID();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_10020E348()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for UUID();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t sub_10020E410()
{
  unint64_t result = qword_1006A4DB0;
  if (!qword_1006A4DB0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1006A4DB0);
  }
  return result;
}

uint64_t sub_10020E450()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 96);
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    if (v2)
    {
      swift_getObjectType();
      uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v5 = v4;
    }
    else
    {
      uint64_t v3 = 0;
      uint64_t v5 = 0;
    }
    uint64_t v6 = sub_10020E734;
  }
  else
  {
    if (v2)
    {
      swift_getObjectType();
      uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v5 = v7;
    }
    else
    {
      uint64_t v3 = 0;
      uint64_t v5 = 0;
    }
    uint64_t v6 = sub_10020E5E8;
  }
  return _swift_task_switch(v6, v3, v5);
}

uint64_t sub_10020E5E8()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 88);
  return _swift_task_switch(sub_10020E64C, v1, v2);
}

uint64_t sub_10020E64C()
{
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v4 = v0[4];
  uint64_t v3 = v0[5];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v5 = type metadata accessor for Notification();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5) != 1) {
    sub_10020E7B8(v0[4]);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_10020E734()
{
  *(void *)(v0 + 16) = *(void *)(v0 + 112);
  sub_10002F214(&qword_1006A3D90);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

uint64_t sub_10020E7B8(uint64_t a1)
{
  uint64_t v2 = sub_10002F214(qword_10069F2D8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10020E818()
{
  swift_unknownObjectRelease();

  return swift_release();
}

uint64_t sub_10020E854(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_unknownObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_10020E89C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t sub_10020E914(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t sub_10020E96C(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_10020E9B4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for CollaborationPopoverDetailView()
{
  return sub_100183A74();
}

uint64_t sub_10020EA14()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10020EA5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, a1, a2);
}

uint64_t sub_10020EA94@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v48 = a2;
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v45 = *(void *)(a1 + 24);
  uint64_t v5 = v4;
  uint64_t v6 = type metadata accessor for CollaborationPopoverDetailView.CollaborationListLabelStyle();
  uint64_t v47 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (uint64_t *)((char *)&v37 - v7);
  uint64_t v9 = sub_10002F214(&qword_10069F360);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = sub_100215334();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v51 = v9;
  uint64_t v52 = v6;
  uint64_t v13 = v9;
  unint64_t v53 = v12;
  uint64_t v54 = WitnessTable;
  uint64_t v43 = &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v46 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  uint64_t v38 = (char *)&v37 - v14;
  uint64_t v15 = type metadata accessor for ModifiedContent();
  uint64_t v44 = *(void *)(v15 - 8);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v40 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  unint64_t v42 = (char *)&v37 - v18;
  uint64_t v19 = v3;
  uint64_t v20 = v3;
  uint64_t v21 = v5;
  uint64_t v22 = v5;
  uint64_t v23 = v45;
  sub_10020EED4(v19, v22, v45, (uint64_t)v11);
  sub_10020FC64(v8);
  uint64_t v24 = v13;
  uint64_t v25 = WitnessTable;
  View.labelStyle<A>(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v47 + 8))(v8, v6);
  sub_10002B754((uint64_t)v11, &qword_10069F360);
  uint64_t v26 = *(void *)(v20 + 8);
  uint64_t v27 = (void *)swift_allocObject();
  long long v27[2] = v21;
  v27[3] = v23;
  v27[4] = v26;
  swift_unknownObjectRetain();
  uint64_t v51 = v24;
  uint64_t v52 = v6;
  unint64_t v53 = v12;
  uint64_t v54 = v25;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v30 = v40;
  uint64_t v29 = OpaqueTypeMetadata2;
  uint64_t v31 = v38;
  View.onAppear(perform:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v31, v29);
  uint64_t v49 = OpaqueTypeConformance2;
  uint64_t v50 = &protocol witness table for _AppearanceActionModifier;
  swift_getWitnessTable();
  uint64_t v32 = v44;
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
  uint64_t v34 = v42;
  v33(v42, v30, v15);
  uint64_t v35 = *(void (**)(char *, uint64_t))(v32 + 8);
  v35(v30, v15);
  v33(v48, v34, v15);
  return ((uint64_t (*)(char *, uint64_t))v35)(v34, v15);
}

uint64_t sub_10020EED4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v102 = a4;
  uint64_t v7 = sub_10002F214(&qword_10069F388);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v103 = (uint64_t)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v108 = (uint64_t)&v85 - v10;
  uint64_t v11 = sub_10002F214(&qword_10069F390);
  uint64_t v100 = *(void *)(v11 - 8);
  uint64_t v101 = v11;
  uint64_t v12 = __chkstk_darwin(v11);
  id v99 = (char *)&v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v107 = (char *)&v85 - v14;
  uint64_t v15 = sub_10002F214(&qword_10069F398);
  uint64_t v91 = *(void *)(v15 - 8);
  uint64_t v92 = v15;
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v90 = (char *)&v85 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v85 - v18;
  uint64_t v89 = sub_10002F214(&qword_10069F3A0);
  uint64_t v20 = *(void *)(v89 - 8);
  uint64_t v21 = __chkstk_darwin(v89);
  uint64_t v23 = (char *)&v85 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v85 - v24;
  uint64_t v26 = sub_10002F214(&qword_10069F3A8);
  uint64_t v27 = __chkstk_darwin(v26 - 8);
  uint64_t v96 = (char *)&v85 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v97 = (uint64_t)&v85 - v29;
  uint64_t v30 = sub_10002F214(&qword_10069F3B0);
  uint64_t v94 = *(void *)(v30 - 8);
  uint64_t v95 = v30;
  uint64_t v31 = __chkstk_darwin(v30);
  uint64_t v93 = (char *)&v85 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v98 = (char *)&v85 - v33;
  uint64_t v34 = sub_10002F214(&qword_10069F3B8);
  uint64_t v35 = __chkstk_darwin(v34 - 8);
  uint64_t v106 = (char *)&v85 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  uint64_t v109 = (uint64_t)&v85 - v37;
  uint64_t v104 = type metadata accessor for CollaborationPopoverDetailView();
  uint64_t v105 = a1;
  uint64_t v38 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  swift_unknownObjectRetain();
  uint64_t v39 = (void *)v38(a2, a3);
  swift_unknownObjectRelease();
  if (!v39) {
    goto LABEL_6;
  }
  self;
  uint64_t v40 = swift_dynamicCastObjCClass();
  if (!v40)
  {

LABEL_6:
    uint64_t v57 = sub_10002F214(&qword_10069F3C0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v109, 1, 1, v57);
    goto LABEL_9;
  }
  uint64_t v41 = (void *)v40;
  id v88 = v39;
  uint64_t v42 = v104;
  sub_10020FBF4(v104, &qword_10069F528, (void (*)(void))sub_100217480);
  if (_s11MobileNotes31RealtimeCollaborationControllerC02iscD7Enabled3forSbSo6ICNoteC_tFZ_0(v41))
  {
    uint64_t v87 = v25;
    sub_10020F974();
    unint64_t v86 = v19;
    sub_10020FAC0(v42, &qword_10069F3F0, &qword_10069F3F8);
    uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
    uint64_t v44 = v23;
    uint64_t v45 = v25;
    uint64_t v46 = v89;
    v43(v23, v45, v89);
    uint64_t v47 = v91;
    uint64_t v85 = *(void (**)(char *, char *, uint64_t))(v91 + 16);
    uint64_t v48 = v90;
    uint64_t v49 = v19;
    uint64_t v50 = v92;
    v85(v90, v49, v92);
    uint64_t v51 = (uint64_t)v96;
    v43(v96, v44, v46);
    uint64_t v52 = sub_10002F214(&qword_10069F3E8);
    v85((char *)(v51 + *(int *)(v52 + 48)), v48, v50);
    unint64_t v53 = *(void (**)(char *, uint64_t))(v47 + 8);
    v53(v86, v50);
    uint64_t v54 = *(void (**)(char *, uint64_t))(v20 + 8);
    v54(v87, v46);
    v53(v48, v50);
    v54(v44, v46);
    uint64_t v55 = sub_10002F214(&qword_10069F3D8);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v51, 0, 1, v55);
    uint64_t v56 = v97;
    sub_10002F1B0(v51, v97, &qword_10069F3A8);
  }
  else
  {
    uint64_t v58 = sub_10002F214(&qword_10069F3D8);
    uint64_t v56 = v97;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v97, 1, 1, v58);
    uint64_t v51 = (uint64_t)v96;
  }
  unint64_t v59 = v93;
  uint64_t v60 = v94;
  uint64_t v61 = *(void (**)(char *, char *, uint64_t))(v94 + 16);
  uint64_t v62 = v98;
  uint64_t v63 = v95;
  v61(v93, v98, v95);
  sub_10002F034(v56, v51, &qword_10069F3A8);
  uint64_t v64 = (uint64_t)v106;
  v61(v106, v59, v63);
  uint64_t v65 = sub_10002F214(&qword_10069F3E0);
  sub_10002F034(v51, v64 + *(int *)(v65 + 48), &qword_10069F3A8);

  sub_10002B754(v56, &qword_10069F3A8);
  uint64_t v66 = *(void (**)(char *, uint64_t))(v60 + 8);
  v66(v62, v63);
  sub_10002B754(v51, &qword_10069F3A8);
  v66(v59, v63);
  uint64_t v67 = sub_10002F214(&qword_10069F3C0);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v64, 0, 1, v67);
  sub_10002F1B0(v64, v109, &qword_10069F3B8);
LABEL_9:
  uint64_t v68 = v104;
  sub_10020FAC0(v104, &qword_10069F658, &qword_10069F660);
  char v69 = sub_10020FB48(v68);
  uint64_t v70 = v108;
  if (v69)
  {
    sub_10020FBF4(v68, &qword_10069F618, (void (*)(void))sub_100217840);
    uint64_t v71 = sub_10002F214(&qword_10069F3C8);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v70, 0, 1, v71);
  }
  else
  {
    uint64_t v72 = sub_10002F214(&qword_10069F3C8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56))(v70, 1, 1, v72);
  }
  uint64_t v73 = (uint64_t)v106;
  sub_10002F034(v109, (uint64_t)v106, &qword_10069F3B8);
  uint64_t v74 = v99;
  uint64_t v75 = v100;
  uint64_t v76 = *(void (**)(char *, char *, uint64_t))(v100 + 16);
  uint64_t v77 = v107;
  uint64_t v78 = v101;
  v76(v99, v107, v101);
  uint64_t v79 = v70;
  uint64_t v80 = v103;
  sub_10002F034(v79, v103, &qword_10069F388);
  uint64_t v81 = v102;
  sub_10002F034(v73, v102, &qword_10069F3B8);
  uint64_t v82 = sub_10002F214(&qword_10069F3D0);
  v76((char *)(v81 + *(int *)(v82 + 48)), v74, v78);
  sub_10002F034(v80, v81 + *(int *)(v82 + 64), &qword_10069F388);
  sub_10002B754(v108, &qword_10069F388);
  uint64_t v83 = *(void (**)(char *, uint64_t))(v75 + 8);
  v83(v77, v78);
  sub_10002B754(v109, &qword_10069F3B8);
  sub_10002B754(v80, &qword_10069F388);
  v83(v74, v78);
  return sub_10002B754(v73, &qword_10069F3B8);
}

uint64_t sub_10020F974()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 localizedStringForKey:v1 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10002F214(&qword_10069F400);
  sub_10001DFB0(&qword_10069F408, &qword_10069F400);
  sub_10017B588();
  return Section<>.init<A>(_:content:)();
}

uint64_t sub_10020FAC0(uint64_t a1, uint64_t *a2, unint64_t *a3)
{
  return Section<>.init(content:)();
}

uint64_t sub_10020FB48(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v1 = *(void *)(a1 + 24);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 16);
  swift_unknownObjectRetain();
  uint64_t v4 = (void *)v3(v2, v1);
  swift_unknownObjectRelease();
  if (!v4) {
    return 1;
  }
  self;
  uint64_t v5 = (void *)swift_dynamicCastObjCClass();
  if (v5) {
    uint64_t v6 = (uint64_t)[v5 canBeSharedViaICloud];
  }
  else {
    uint64_t v6 = 1;
  }

  return v6;
}

uint64_t sub_10020FBF4(uint64_t a1, uint64_t *a2, void (*a3)(void))
{
  return Section<>.init(content:)();
}

uint64_t sub_10020FC64@<X0>(uint64_t *a1@<X8>)
{
  *a1 = swift_getKeyPath();
  sub_10002F214(&qword_10069F380);

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_10020FCBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v37 = a4;
  uint64_t v7 = sub_10002F214(&qword_10069F550);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10002F214(&qword_10069F540);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10002F214(&qword_10069F528);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = static HorizontalAlignment.leading.getter();
  unsigned int v19 = [self deviceIsVision];
  uint64_t v20 = 0x4020000000000000;
  if (!v19) {
    uint64_t v20 = 0;
  }
  *(void *)uint64_t v9 = v18;
  *((void *)v9 + 1) = v20;
  v9[16] = 0;
  uint64_t v21 = sub_10002F214(&qword_10069F558);
  sub_10020FF30(a1, a2, a3, (uint64_t *)&v9[*(int *)(v21 + 44)]);
  uint64_t v22 = static Font.subheadline.getter();
  uint64_t KeyPath = swift_getKeyPath();
  sub_10002F034((uint64_t)v9, (uint64_t)v13, &qword_10069F550);
  uint64_t v24 = (uint64_t *)&v13[*(int *)(v11 + 44)];
  *uint64_t v24 = KeyPath;
  v24[1] = v22;
  sub_10002B754((uint64_t)v9, &qword_10069F550);
  char v25 = static Edge.Set.vertical.getter();
  [self ic_isVision];
  EdgeInsets.init(_all:)();
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  sub_10002F034((uint64_t)v13, (uint64_t)v17, &qword_10069F540);
  uint64_t v34 = &v17[*(int *)(v15 + 44)];
  *uint64_t v34 = v25;
  *((void *)v34 + 1) = v27;
  *((void *)v34 + 2) = v29;
  *((void *)v34 + 3) = v31;
  *((void *)v34 + 4) = v33;
  v34[40] = 0;
  sub_10002B754((uint64_t)v13, &qword_10069F540);
  return sub_10002F1B0((uint64_t)v17, v37, &qword_10069F528);
}

uint64_t sub_10020FF30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v133 = a2;
  uint64_t v134 = a3;
  uint64_t v131 = a4;
  uint64_t v132 = a1;
  uint64_t v130 = sub_10002F214(&qword_10069F560);
  __chkstk_darwin(v130);
  uint64_t v118 = (uint64_t *)((char *)&v109 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_10002F214(&qword_10069F568);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v112 = (uint64_t)&v109 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v111 = (uint64_t *)((char *)&v109 - v8);
  uint64_t v9 = sub_10002F214(&qword_10069F570);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v116 = (uint64_t *)((char *)&v109 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  uint64_t v117 = (uint64_t)&v109 - v12;
  uint64_t v126 = sub_10002F214(&qword_10069F578);
  __chkstk_darwin(v126);
  uint64_t v127 = (uint64_t *)((char *)&v109 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_10002F214(&qword_1006A47A0);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v119 = (uint64_t)&v109 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v109 - v17;
  uint64_t v19 = type metadata accessor for ICActivityStreamDigest.Summary();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v135 = v19;
  uint64_t v136 = v20;
  __chkstk_darwin(v19);
  uint64_t v122 = (char *)&v109 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10002F214(&qword_10069F580);
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  uint64_t v129 = (uint64_t)&v109 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v128 = (char *)&v109 - v25;
  id v115 = self;
  id v26 = [v115 mainBundle];
  NSString v27 = String._bridgeToObjectiveC()();
  id v28 = [v26 localizedStringForKey:v27 value:0 table:0];

  uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v31 = v30;

  uint64_t v137 = v29;
  uint64_t v138 = v31;
  unint64_t v114 = sub_10017B588();
  uint64_t v32 = Text.init<A>(_:)();
  uint64_t v34 = v33;
  char v36 = v35 & 1;
  static Color.secondary.getter();
  uint64_t v37 = Text.foregroundColor(_:)();
  uint64_t v39 = v38;
  char v41 = v40;
  swift_release();
  sub_1001839EC(v32, v34, v36);
  swift_bridgeObjectRelease();
  static Font.headline.getter();
  uint64_t v42 = Text.font(_:)();
  uint64_t v44 = v43;
  LOBYTE(v34) = v45;
  swift_release();
  char v46 = v41 & 1;
  uint64_t v47 = v134;
  sub_1001839EC(v37, v39, v46);
  uint64_t v48 = v133;
  swift_bridgeObjectRelease();
  uint64_t v49 = Text.bold()();
  uint64_t v123 = v50;
  uint64_t v124 = v49;
  int v121 = v51;
  uint64_t v125 = v52;
  sub_1001839EC(v42, v44, v34 & 1);
  swift_bridgeObjectRelease();
  unsigned int v120 = [self deviceIsMac];
  unint64_t v53 = *(void (**)(uint64_t, uint64_t))(v47 + 32);
  swift_unknownObjectRetain();
  uint64_t v54 = v18;
  uint64_t v113 = v53;
  v53(v48, v47);
  uint64_t v55 = v136;
  swift_unknownObjectRelease();
  uint64_t v56 = *(unsigned int (**)(char *, uint64_t))(v55 + 48);
  uint64_t v57 = (uint64_t)v54;
  uint64_t v58 = v54;
  uint64_t v59 = v135;
  if (v56(v58, 1) == 1)
  {
    sub_10002B754(v57, &qword_1006A47A0);
    id v60 = [v115 mainBundle];
    NSString v61 = String._bridgeToObjectiveC()();
    id v62 = [v60 localizedStringForKey:v61 value:0 table:0];

    uint64_t v63 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v65 = v64;

    uint64_t v137 = v63;
    uint64_t v138 = v65;
    uint64_t v66 = Text.init<A>(_:)();
    uint64_t v68 = v67;
    char v70 = v69 & 1;
    static Color.secondary.getter();
    uint64_t v71 = Text.foregroundColor(_:)();
    uint64_t v73 = v72;
    char v75 = v74;
    uint64_t v77 = v76;
    swift_release();
    sub_1001839EC(v66, v68, v70);
    swift_bridgeObjectRelease();
    uint64_t v78 = v127;
    *uint64_t v127 = v71;
    v78[1] = v73;
    *((unsigned char *)v78 + 16) = v75 & 1;
    v78[3] = v77;
    swift_storeEnumTagMultiPayload();
    sub_10001DFB0(&qword_10069F588, &qword_10069F560);
    uint64_t v79 = (uint64_t)v128;
    _ConditionalContent<>.init(storage:)();
    goto LABEL_9;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v55 + 32))(v122, v57, v59);
  uint64_t v80 = ICActivityStreamDigest.Summary.formattedText.getter();
  id v115 = v81;
  unint64_t v114 = v82;
  uint64_t v110 = v83;
  swift_unknownObjectRetain();
  uint64_t v84 = v119;
  v113(v48, v47);
  swift_unknownObjectRelease();
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v56)(v84, 1, v59) == 1)
  {
    sub_10002B754(v119, &qword_1006A47A0);
    uint64_t v79 = (uint64_t)v128;
LABEL_7:
    uint64_t v95 = sub_10002F214(&qword_10069F598);
    uint64_t v94 = v117;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v95 - 8) + 56))(v117, 1, 1, v95);
    uint64_t v91 = (uint64_t)v116;
    goto LABEL_8;
  }
  uint64_t v85 = v119;
  char v86 = ICActivityStreamDigest.Summary.isNavigable.getter();
  (*(void (**)(uint64_t, uint64_t))(v136 + 8))(v85, v59);
  uint64_t v79 = (uint64_t)v128;
  if ((v86 & 1) == 0) {
    goto LABEL_7;
  }
  uint64_t v87 = static VerticalAlignment.center.getter();
  uint64_t v88 = (uint64_t)v111;
  *uint64_t v111 = v87;
  *(void *)(v88 + 8) = 0;
  *(unsigned char *)(v88 + 16) = 1;
  uint64_t v89 = sub_10002F214(&qword_10069F5A8);
  sub_100210AA8(v132, v133, v134, v88 + *(int *)(v89 + 44));
  uint64_t v90 = v112;
  sub_10002F034(v88, v112, &qword_10069F568);
  uint64_t v91 = (uint64_t)v116;
  *uint64_t v116 = 0x4010000000000000;
  *(unsigned char *)(v91 + 8) = 0;
  uint64_t v92 = sub_10002F214(&qword_10069F5B0);
  sub_10002F034(v90, v91 + *(int *)(v92 + 48), &qword_10069F568);
  sub_10002B754(v88, &qword_10069F568);
  sub_10002B754(v90, &qword_10069F568);
  uint64_t v93 = sub_10002F214(&qword_10069F598);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v93 - 8) + 56))(v91, 0, 1, v93);
  uint64_t v94 = v117;
  sub_10002F1B0(v91, v117, &qword_10069F570);
LABEL_8:
  sub_10002F034(v94, v91, &qword_10069F570);
  uint64_t v96 = v118;
  uint64_t v97 = (uint64_t)v115;
  uint64_t *v118 = v80;
  v96[1] = v97;
  char v98 = v114;
  uint64_t v99 = v110;
  v96[2] = v114;
  v96[3] = v99;
  uint64_t v100 = sub_10002F214(&qword_10069F5A0);
  sub_10002F034(v91, (uint64_t)v96 + *(int *)(v100 + 48), &qword_10069F570);
  sub_100216694(v80, v97, v98, v99);
  sub_100216694(v80, v97, v98, v99);
  sub_10002B754(v91, &qword_10069F570);
  sub_1002166D8(v80, v97, v98, v99);
  sub_10002F034((uint64_t)v96, (uint64_t)v127, &qword_10069F560);
  swift_storeEnumTagMultiPayload();
  sub_10001DFB0(&qword_10069F588, &qword_10069F560);
  _ConditionalContent<>.init(storage:)();
  sub_10002B754((uint64_t)v96, &qword_10069F560);
  sub_10002B754(v94, &qword_10069F570);
  sub_1002166D8(v80, v97, v98, v99);
  (*(void (**)(char *, uint64_t))(v136 + 8))(v122, v135);
LABEL_9:
  char v101 = v121 & 1;
  if (v120) {
    uint64_t v102 = 0x4018000000000000;
  }
  else {
    uint64_t v102 = 0;
  }
  uint64_t v103 = v129;
  sub_10002F034(v79, v129, &qword_10069F580);
  uint64_t v104 = v131;
  uint64_t v106 = v123;
  uint64_t v105 = v124;
  *uint64_t v131 = v124;
  v104[1] = v106;
  *((unsigned char *)v104 + 16) = v101;
  v104[3] = v125;
  v104[4] = v102;
  *((unsigned char *)v104 + 40) = 0;
  uint64_t v107 = sub_10002F214(&qword_10069F590);
  sub_10002F034(v103, (uint64_t)v104 + *(int *)(v107 + 64), &qword_10069F580);
  sub_1001839DC(v105, v106, v101);
  swift_bridgeObjectRetain();
  sub_10002B754(v79, &qword_10069F580);
  sub_10002B754(v103, &qword_10069F580);
  sub_1001839EC(v105, v106, v101);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100210AA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v110 = a3;
  uint64_t v92 = a2;
  uint64_t v109 = a4;
  uint64_t v108 = type metadata accessor for AvatarStackView();
  uint64_t v105 = *(void *)(v108 - 8);
  __chkstk_darwin(v108);
  uint64_t v102 = (char *)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_10002F214(&qword_10069F5B8) - 8;
  __chkstk_darwin(v103);
  char v101 = (char *)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_10002F214(&qword_10069F5C0) - 8;
  uint64_t v8 = __chkstk_darwin(v107);
  uint64_t v104 = (uint64_t)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v106 = (uint64_t)&v82 - v10;
  uint64_t v100 = type metadata accessor for ButtonBorderShape();
  uint64_t v99 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  char v98 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = type metadata accessor for ControlSize();
  uint64_t v96 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  uint64_t v95 = (char *)&v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = type metadata accessor for BorderedProminentButtonStyle();
  uint64_t v90 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  uint64_t v85 = (char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10002F214(&qword_10069F4F0);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v82 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_10002F214(&qword_10069F5C8);
  __chkstk_darwin(v83);
  uint64_t v19 = (char *)&v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_10002F214(&qword_10069F5D0);
  uint64_t v87 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  unint64_t v82 = (char *)&v82 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10002F214(&qword_10069F5D8);
  uint64_t v22 = v21 - 8;
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v82 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_10002F214(&qword_10069F5E0);
  uint64_t v26 = v25 - 8;
  __chkstk_darwin(v25);
  char v86 = (char *)&v82 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_10002F214(&qword_10069F5E8) - 8;
  uint64_t v28 = __chkstk_darwin(v94);
  uint64_t v91 = (uint64_t)&v82 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v93 = (uint64_t)&v82 - v30;
  uint64_t v31 = *(void *)(a1 + 8);
  uint64_t v32 = (void *)swift_allocObject();
  uint64_t v33 = v110;
  v32[2] = a2;
  v32[3] = v33;
  uint64_t v84 = v31;
  unsigned char v32[4] = v31;
  swift_unknownObjectRetain();
  Button.init(action:label:)();
  uint64_t v34 = static Font.footnote.getter();
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v19, v17, v14);
  char v36 = (uint64_t *)&v19[*(int *)(v83 + 36)];
  *char v36 = KeyPath;
  v36[1] = v34;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  uint64_t v37 = v85;
  BorderedProminentButtonStyle.init()();
  sub_100217618();
  sub_1002176DC();
  uint64_t v38 = v82;
  uint64_t v39 = v89;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v37, v39);
  sub_10002B754((uint64_t)v19, &qword_10069F5C8);
  uint64_t v40 = v96;
  char v41 = v95;
  uint64_t v42 = v97;
  (*(void (**)(char *, void, uint64_t))(v96 + 104))(v95, enum case for ControlSize.small(_:), v97);
  uint64_t v43 = swift_getKeyPath();
  uint64_t v44 = (uint64_t *)&v24[*(int *)(v22 + 44)];
  uint64_t v45 = sub_10002F214(&qword_10069F600);
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))((char *)v44 + *(int *)(v45 + 28), v41, v42);
  *uint64_t v44 = v43;
  uint64_t v46 = v87;
  uint64_t v47 = v88;
  (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v24, v38, v88);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v42);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v38, v47);
  uint64_t v48 = v98;
  static ButtonBorderShape.capsule.getter();
  uint64_t v49 = swift_getKeyPath();
  uint64_t v50 = (uint64_t)v86;
  int v51 = (uint64_t *)&v86[*(int *)(v26 + 44)];
  uint64_t v52 = sub_10002F214(&qword_10069F608);
  uint64_t v53 = v99;
  uint64_t v54 = v100;
  (*(void (**)(char *, char *, uint64_t))(v99 + 16))((char *)v51 + *(int *)(v52 + 28), v48, v100);
  *int v51 = v49;
  sub_10002F034((uint64_t)v24, v50, &qword_10069F5D8);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v48, v54);
  sub_10002B754((uint64_t)v24, &qword_10069F5D8);
  static AvatarStackView.avatarDimension.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v55 = v91;
  sub_10002F034(v50, v91, &qword_10069F5E0);
  uint64_t v56 = (_OWORD *)(v55 + *(int *)(v94 + 44));
  long long v57 = v112;
  *uint64_t v56 = v111;
  v56[1] = v57;
  v56[2] = v113;
  sub_10002B754(v50, &qword_10069F5E0);
  uint64_t v58 = v93;
  sub_10002F1B0(v55, v93, &qword_10069F5E8);
  uint64_t v59 = v110;
  id v60 = *(void (**)(uint64_t, uint64_t))(v110 + 40);
  swift_unknownObjectRetain();
  v60(v92, v59);
  swift_unknownObjectRelease();
  NSString v61 = v102;
  AvatarStackView.init(participants:)();
  uint64_t v62 = static Color.quaternary.getter();
  uint64_t v63 = v105;
  uint64_t v64 = (uint64_t)v101;
  uint64_t v65 = v108;
  (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v101, v61, v108);
  uint64_t v66 = v64 + *(int *)(v103 + 44);
  *(void *)uint64_t v66 = v62;
  *(_OWORD *)(v66 + 8) = xmmword_10052BCF0;
  *(void *)(v66 + 24) = 0x3FF0000000000000;
  (*(void (**)(char *, uint64_t))(v63 + 8))(v61, v65);
  LOBYTE(v62) = static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)();
  uint64_t v68 = v67;
  uint64_t v70 = v69;
  uint64_t v72 = v71;
  uint64_t v74 = v73;
  uint64_t v75 = v104;
  sub_10002F034(v64, v104, &qword_10069F5B8);
  uint64_t v76 = v75 + *(int *)(v107 + 44);
  *(unsigned char *)uint64_t v76 = v62;
  *(void *)(v76 + 8) = v68;
  *(void *)(v76 + 16) = v70;
  *(void *)(v76 + 24) = v72;
  *(void *)(v76 + 32) = v74;
  *(unsigned char *)(v76 + 40) = 0;
  sub_10002B754(v64, &qword_10069F5B8);
  uint64_t v77 = v106;
  sub_10002F1B0(v75, v106, &qword_10069F5C0);
  sub_10002F034(v58, v55, &qword_10069F5E8);
  sub_10002F034(v77, v75, &qword_10069F5C0);
  uint64_t v78 = v109;
  sub_10002F034(v55, v109, &qword_10069F5E8);
  uint64_t v79 = sub_10002F214(&qword_10069F610);
  uint64_t v80 = v78 + *(int *)(v79 + 48);
  *(void *)uint64_t v80 = 0;
  *(unsigned char *)(v80 + 8) = 1;
  sub_10002F034(v75, v78 + *(int *)(v79 + 64), &qword_10069F5C0);
  sub_10002B754(v77, &qword_10069F5C0);
  sub_10002B754(v58, &qword_10069F5E8);
  sub_10002B754(v75, &qword_10069F5C0);
  return sub_10002B754(v55, &qword_10069F5E8);
}

uint64_t sub_1002115E8@<X0>(uint64_t a1@<X8>)
{
  id v2 = [self mainBundle];
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v2 localizedStringForKey:v3 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10017B588();
  uint64_t v5 = Text.init<A>(_:)();
  uint64_t v7 = v6;
  char v9 = v8 & 1;
  static Font.body.getter();
  uint64_t v10 = Text.font(_:)();
  uint64_t v12 = v11;
  char v14 = v13;
  swift_release();
  char v15 = v14 & 1;
  sub_1001839EC(v5, v7, v9);
  swift_bridgeObjectRelease();
  static Color.white.getter();
  uint64_t v16 = Text.foregroundColor(_:)();
  uint64_t v18 = v17;
  char v20 = v19;
  uint64_t v22 = v21;
  swift_release();
  sub_1001839EC(v10, v12, v15);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v16;
  *(void *)(a1 + 8) = v18;
  *(unsigned char *)(a1 + 16) = v20 & 1;
  *(void *)(a1 + 24) = v22;
  return result;
}

uint64_t sub_100211794@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v46 = a4;
  uint64_t v7 = sub_10002F214(&qword_10069F410);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v45 = (uint64_t)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v44 = (uint64_t)&v38 - v10;
  uint64_t v11 = sub_10002F214(&qword_10069F418);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v43 = (uint64_t)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v48 = (uint64_t)&v38 - v14;
  uint64_t v42 = sub_10002F214(&qword_10069F420);
  uint64_t v40 = *(void *)(v42 - 8);
  uint64_t v15 = v40;
  uint64_t v16 = __chkstk_darwin(v42);
  uint64_t v47 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  char v19 = (char *)&v38 - v18;
  uint64_t v20 = type metadata accessor for CollaborationPopoverDetailView();
  uint64_t v49 = sub_100211BE8(v20);
  uint64_t KeyPath = swift_getKeyPath();
  long long v21 = *(_OWORD *)a1;
  long long v50 = *(_OWORD *)(a1 + 16);
  long long v51 = v21;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = a2;
  *(void *)(v22 + 24) = a3;
  long long v23 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v22 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v22 + 48) = v23;
  *(void *)(v22 + 64) = *(void *)(a1 + 32);
  sub_100215DD0((uint64_t)&v51);
  sub_100183670((uint64_t)&v50);
  sub_10002F214(&qword_1006A0090);
  sub_10002F214(&qword_10069F428);
  sub_10001DFB0(&qword_10069F430, &qword_1006A0090);
  sub_100215DFC();
  sub_10001DFB0(&qword_10069F450, &qword_10069F428);
  uint64_t v24 = v19;
  uint64_t v39 = v19;
  ForEach<>.init(_:id:content:)();
  uint64_t v26 = *(void *)(v20 + 16);
  uint64_t v25 = *(void **)(v20 + 24);
  uint64_t v27 = v48;
  sub_100212D24((long long *)a1, v26, (uint64_t)v25, v48);
  uint64_t v28 = v44;
  sub_10021205C((long long *)a1, v26, v25, v44);
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  uint64_t v30 = v47;
  uint64_t v31 = v42;
  v29(v47, v24, v42);
  uint64_t v32 = v43;
  sub_10002F034(v27, v43, &qword_10069F418);
  uint64_t v33 = v45;
  sub_10002F034(v28, v45, &qword_10069F410);
  uint64_t v34 = v46;
  v29(v46, v30, v31);
  uint64_t v35 = sub_10002F214(&qword_10069F458);
  sub_10002F034(v32, (uint64_t)&v34[*(int *)(v35 + 48)], &qword_10069F418);
  sub_10002F034(v33, (uint64_t)&v34[*(int *)(v35 + 64)], &qword_10069F410);
  sub_10002B754(v28, &qword_10069F410);
  sub_10002B754(v48, &qword_10069F418);
  char v36 = *(void (**)(char *, uint64_t))(v40 + 8);
  v36(v39, v31);
  sub_10002B754(v33, &qword_10069F410);
  sub_10002B754(v32, &qword_10069F418);
  return ((uint64_t (*)(char *, uint64_t))v36)(v47, v31);
}

void *sub_100211BE8(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v2 = *(void *)(a1 + 24);
  id v4 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 88);
  swift_unknownObjectRetain();
  unint64_t v5 = v4(v3, v2);
  swift_unknownObjectRelease();
  uint64_t v6 = sub_100211F68(a1);
  uint64_t v7 = sub_10041A728(v6, v5);
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  unint64_t v13 = v12;
  swift_bridgeObjectRelease();
  if ((v13 & 1) == 0) {
    goto LABEL_2;
  }
  type metadata accessor for __ContiguousArrayStorageBase();
  swift_unknownObjectRetain_n();
  uint64_t v15 = (void *)swift_dynamicCastClass();
  if (!v15)
  {
    swift_unknownObjectRelease();
    uint64_t v15 = _swiftEmptyArrayStorage;
  }
  uint64_t v16 = v15[2];
  swift_release();
  if (__OFSUB__(v13 >> 1, v11))
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v16 != (v13 >> 1) - v11)
  {
LABEL_11:
    swift_unknownObjectRelease();
LABEL_2:
    uint64_t v14 = sub_1001A98D4(v7, v9, v11, v13);
    goto LABEL_9;
  }
  uint64_t v14 = (void *)swift_dynamicCastClass();
  if (!v14)
  {
    swift_unknownObjectRelease();
    uint64_t v14 = _swiftEmptyArrayStorage;
  }
LABEL_9:
  swift_unknownObjectRelease();
  return v14;
}

uint64_t sub_100211D34(void **a1, long long *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *a1;
  long long v8 = *a2;
  long long v13 = a2[1];
  long long v14 = v8;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a3;
  *(void *)(v9 + 24) = a4;
  long long v10 = a2[1];
  *(_OWORD *)(v9 + 32) = *a2;
  *(_OWORD *)(v9 + 48) = v10;
  *(void *)(v9 + 64) = *((void *)a2 + 4);
  *(void *)(v9 + 72) = v7;
  sub_100215DD0((uint64_t)&v14);
  sub_100183670((uint64_t)&v13);
  sub_100217350();
  id v11 = v7;
  return Button.init(action:label:)();
}

uint64_t sub_100211E18@<X0>(void *a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  long long v10 = *(uint64_t (**)(void))(a4 + 96);
  swift_unknownObjectRetain();
  id v11 = a1;
  uint64_t v12 = v10();
  swift_unknownObjectRelease();
  long long v13 = *a2;
  long long v21 = a2[1];
  long long v22 = v13;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a3;
  *(void *)(v14 + 24) = a4;
  long long v15 = a2[1];
  *(_OWORD *)(v14 + 32) = *a2;
  *(_OWORD *)(v14 + 48) = v15;
  *(void *)(v14 + 64) = *((void *)a2 + 4);
  *(void *)(v14 + 72) = v11;
  id v16 = objc_allocWithZone((Class)UIView);
  id v17 = v11;
  sub_100215DD0((uint64_t)&v22);
  sub_100183670((uint64_t)&v21);
  [v16 init];
  sub_100031418(0, (unint64_t *)&qword_1006A4640);
  uint64_t result = State.init(wrappedValue:)();
  *a5 = v17;
  a5[1] = v12;
  a5[2] = sub_1002173F0;
  a5[3] = v14;
  a5[4] = v19;
  a5[5] = v20;
  return result;
}

uint64_t sub_100211F68(uint64_t a1)
{
  sub_10002F214(&qword_10069CCD8);
  State.wrappedValue.getter();
  if (v10 != 1) {
    return *(void *)(v1 + 32);
  }
  uint64_t v5 = a1 + 16;
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(v5 + 8);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 88);
  swift_unknownObjectRetain();
  unint64_t v7 = v6(v3, v4);
  swift_unknownObjectRelease();
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
  }
  return v8;
}

uint64_t sub_10021205C@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v120 = a4;
  uint64_t v119 = sub_10002F214(&qword_10069F460);
  __chkstk_darwin(v119);
  uint64_t v117 = (_OWORD *)((char *)&v104 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v113 = sub_10002F214(&qword_10069F468);
  __chkstk_darwin(v113);
  uint64_t v114 = (uint64_t)&v104 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_10002F214(&qword_10069F470);
  __chkstk_darwin(v118);
  uint64_t v116 = (char *)&v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_10002F214(&qword_10069F478);
  __chkstk_darwin(v110);
  id v11 = (uint64_t *)((char *)&v104 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v112 = type metadata accessor for OpenURLAction();
  uint64_t v111 = *(void *)(v112 - 8);
  __chkstk_darwin(v112);
  long long v13 = (char *)&v104 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = sub_10002F214(&qword_10069F480);
  uint64_t v14 = __chkstk_darwin(v121);
  id v16 = (uint64_t *)((char *)&v104 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  uint64_t v115 = (uint64_t)&v104 - v17;
  uint64_t v18 = (uint64_t (*)(uint64_t, void *))a3[7];
  swift_unknownObjectRetain();
  uint64_t v19 = a2;
  char v20 = v18(a2, a3);
  swift_unknownObjectRelease();
  if ((v20 & 1) == 0)
  {
    uint64_t v33 = sub_100215ED8();
    uint64_t v107 = v34;
    uint64_t v108 = v35;
    uint64_t v109 = (uint64_t *)v36;
    uint64_t v37 = static Color.secondary.getter();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v106 = swift_getKeyPath();
    long long v39 = a1[1];
    long long v126 = *a1;
    long long v122 = v39;
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = v19;
    *(void *)(v40 + 24) = a3;
    long long v41 = a1[1];
    *(_OWORD *)(v40 + 32) = *a1;
    *(_OWORD *)(v40 + 48) = v41;
    *(void *)(v40 + 64) = *((void *)a1 + 4);
    sub_100215DD0((uint64_t)&v126);
    sub_100183670((uint64_t)&v122);
    OpenURLAction.init(handler:)();
    uint64_t v42 = v111;
    uint64_t v43 = v112;
    (*(void (**)(char *, char *, uint64_t))(v111 + 16))((char *)v11 + *(int *)(v110 + 28), v13, v112);
    *id v11 = v106;
    sub_10002F034((uint64_t)v11, (uint64_t)v16 + *(int *)(v121 + 36), &qword_10069F478);
    uint64_t v44 = v107;
    uint64_t *v16 = v33;
    v16[1] = v44;
    char v45 = (char)v108;
    uint64_t v46 = (uint64_t)v109;
    v16[2] = (uint64_t)v108;
    v16[3] = v46;
    void v16[4] = KeyPath;
    void v16[5] = v37;
    sub_100216694(v33, v44, v45, v46);
    swift_retain();
    swift_retain();
    sub_10002B754((uint64_t)v11, &qword_10069F478);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v13, v43);
    sub_1002166D8(v33, v44, v45, (uint64_t)v109);
    swift_release();
    swift_release();
    uint64_t v47 = v115;
    sub_10002F1B0((uint64_t)v16, v115, &qword_10069F480);
    sub_10002F034(v47, v114, &qword_10069F480);
LABEL_9:
    swift_storeEnumTagMultiPayload();
    sub_10021671C();
    uint64_t v68 = (uint64_t)v116;
    _ConditionalContent<>.init(storage:)();
    sub_10002F034(v68, (uint64_t)v117, &qword_10069F470);
    swift_storeEnumTagMultiPayload();
    sub_10002F214(&qword_10069F4C8);
    sub_1002168C8();
    sub_10021693C();
    _ConditionalContent<>.init(storage:)();
    sub_10002B754(v68, &qword_10069F470);
    return sub_10002B754(v47, &qword_10069F480);
  }
  uint64_t v108 = v13;
  uint64_t v109 = v11;
  long long v21 = (uint64_t (*)(uint64_t, void *))a3[9];
  swift_unknownObjectRetain();
  char v22 = v21(a2, a3);
  swift_unknownObjectRelease();
  if ((v22 & 1) == 0)
  {
    uint64_t v107 = sub_100216A2C();
    uint64_t v106 = v48;
    uint64_t v50 = v49;
    uint64_t v52 = v51;
    uint64_t v53 = static Color.secondary.getter();
    uint64_t v54 = swift_getKeyPath();
    uint64_t v105 = swift_getKeyPath();
    long long v55 = a1[1];
    long long v126 = *a1;
    long long v122 = v55;
    uint64_t v56 = swift_allocObject();
    *(void *)(v56 + 16) = v19;
    *(void *)(v56 + 24) = a3;
    long long v57 = a1[1];
    *(_OWORD *)(v56 + 32) = *a1;
    *(_OWORD *)(v56 + 48) = v57;
    *(void *)(v56 + 64) = *((void *)a1 + 4);
    sub_100215DD0((uint64_t)&v126);
    sub_100183670((uint64_t)&v122);
    uint64_t v58 = v108;
    OpenURLAction.init(handler:)();
    uint64_t v59 = v109;
    uint64_t v60 = v111;
    uint64_t v61 = v112;
    (*(void (**)(uint64_t, char *, uint64_t))(v111 + 16))((uint64_t)v109 + *(int *)(v110 + 28), v58, v112);
    *uint64_t v59 = v105;
    sub_10002F034((uint64_t)v59, (uint64_t)v16 + *(int *)(v121 + 36), &qword_10069F478);
    uint64_t v62 = v107;
    uint64_t v63 = v106;
    uint64_t *v16 = v107;
    v16[1] = v63;
    char v64 = v50;
    uint64_t v104 = v50;
    v16[2] = v50;
    v16[3] = v52;
    uint64_t v65 = v52;
    void v16[4] = v54;
    void v16[5] = v53;
    uint64_t v66 = v62;
    uint64_t v67 = v63;
    sub_100216694(v62, v63, v64, v65);
    swift_retain();
    swift_retain();
    sub_10002B754((uint64_t)v59, &qword_10069F478);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v58, v61);
    sub_1002166D8(v66, v67, v104, v65);
    swift_release();
    swift_release();
    uint64_t v47 = v115;
    sub_10002F1B0((uint64_t)v16, v115, &qword_10069F480);
    sub_10002F034(v47, v114, &qword_10069F480);
    goto LABEL_9;
  }
  long long v23 = (uint64_t (*)(uint64_t, void *))a3[11];
  swift_unknownObjectRetain();
  unint64_t v24 = v23(a2, a3);
  swift_unknownObjectRelease();
  if (v24 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v25)
  {
    long long v124 = 0u;
    memset(v125, 0, 25);
    long long v122 = 0u;
    long long v123 = 0u;
    v125[25] = 1;
    sub_10002F214(&qword_10069F4E8);
    sub_1002169B8();
    _ConditionalContent<>.init(storage:)();
    uint64_t v26 = v130;
    char v27 = v131;
    char v28 = v132;
    long long v29 = v127;
    uint64_t v30 = v117;
    *uint64_t v117 = v126;
    v30[1] = v29;
    long long v31 = v129;
    long long v30[2] = v128;
    v30[3] = v31;
    *((void *)v30 + 8) = v26;
    *((unsigned char *)v30 + 72) = v27;
    *((unsigned char *)v30 + 73) = v28;
    swift_storeEnumTagMultiPayload();
    sub_10002F214(&qword_10069F4C8);
    sub_1002168C8();
    sub_10021693C();
    return _ConditionalContent<>.init(storage:)();
  }
  else
  {
    id v69 = [self mainBundle];
    NSString v70 = String._bridgeToObjectiveC()();
    id v71 = [v69 localizedStringForKey:v70 value:0 table:0];

    uint64_t v72 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v74 = v73;

    *(void *)&long long v126 = v72;
    *((void *)&v126 + 1) = v74;
    sub_10017B588();
    uint64_t v75 = Text.init<A>(_:)();
    uint64_t v77 = v76;
    char v79 = v78 & 1;
    static Font.subheadline.getter();
    uint64_t v80 = Text.font(_:)();
    uint64_t v82 = v81;
    uint64_t v83 = v117;
    char v85 = v84;
    swift_release();
    char v86 = v85 & 1;
    sub_1001839EC(v75, v77, v79);
    swift_bridgeObjectRelease();
    static Color.secondary.getter();
    uint64_t v87 = Text.foregroundColor(_:)();
    uint64_t v89 = v88;
    char v91 = v90;
    uint64_t v93 = v92;
    swift_release();
    sub_1001839EC(v80, v82, v86);
    swift_bridgeObjectRelease();
    unsigned __int8 v94 = static Edge.Set.vertical.getter();
    EdgeInsets.init(_all:)();
    *(void *)&long long v122 = v87;
    *((void *)&v122 + 1) = v89;
    *(void *)&long long v123 = v91 & 1;
    *((void *)&v123 + 1) = v93;
    *(void *)&long long v124 = v94;
    *((void *)&v124 + 1) = v95;
    *(void *)uint64_t v125 = v96;
    *(void *)&v125[8] = v97;
    *(void *)&v125[16] = v98;
    *(_WORD *)&v125[24] = 0;
    sub_1001839DC(v87, v89, v91 & 1);
    swift_bridgeObjectRetain();
    sub_10002F214(&qword_10069F4E8);
    sub_1002169B8();
    _ConditionalContent<>.init(storage:)();
    uint64_t v99 = v130;
    char v100 = v131;
    char v101 = v132;
    long long v102 = v127;
    *uint64_t v83 = v126;
    v83[1] = v102;
    long long v103 = v129;
    v83[2] = v128;
    v83[3] = v103;
    *((void *)v83 + 8) = v99;
    *((unsigned char *)v83 + 72) = v100;
    *((unsigned char *)v83 + 73) = v101;
    swift_storeEnumTagMultiPayload();
    sub_10002F214(&qword_10069F4C8);
    sub_1002168C8();
    sub_10021693C();
    _ConditionalContent<>.init(storage:)();
    sub_1001839EC(v87, v89, v91 & 1);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100212C2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(a4 + 64);
  swift_unknownObjectRetain();
  v6(a3, a4);
  uint64_t v7 = swift_unknownObjectRelease();

  return static OpenURLAction.Result.handled.getter(v7);
}

uint64_t sub_100212CA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(a4 + 80);
  swift_unknownObjectRetain();
  v6(a3, a4);
  uint64_t v7 = swift_unknownObjectRelease();

  return static OpenURLAction.Result.handled.getter(v7);
}

uint64_t sub_100212D24@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v34 = a4;
  uint64_t v35 = sub_10002F214(&qword_10069F4F0);
  uint64_t v30 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  long long v29 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_10002F214(&qword_10069F4F8);
  __chkstk_darwin(v31);
  uint64_t v33 = (uint64_t)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10002F214(&qword_10069F500);
  __chkstk_darwin(v9);
  id v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_10002F214(&qword_10069F508);
  __chkstk_darwin(v32);
  long long v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 88);
  swift_unknownObjectRetain();
  uint64_t v28 = a2;
  unint64_t v15 = v14(a2, a3);
  swift_unknownObjectRelease();
  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  uint64_t v17 = v30;
  if (*((void *)a1 + 4) >= v16)
  {
    swift_storeEnumTagMultiPayload();
    sub_10001DFB0(&qword_10069F510, &qword_10069F4F0);
    _ConditionalContent<>.init(storage:)();
    sub_10002F034((uint64_t)v13, v33, &qword_10069F508);
    swift_storeEnumTagMultiPayload();
    sub_10021712C();
    _ConditionalContent<>.init(storage:)();
    return sub_10002B754((uint64_t)v13, &qword_10069F508);
  }
  else
  {
    long long v37 = a1[1];
    long long v38 = v37;
    sub_10002F214(&qword_10069CCD8);
    State.wrappedValue.getter();
    long long v37 = *a1;
    if (v36 == 1)
    {
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = v28;
      *(void *)(v18 + 24) = a3;
      long long v19 = a1[1];
      *(_OWORD *)(v18 + 32) = *a1;
      *(_OWORD *)(v18 + 48) = v19;
      *(void *)(v18 + 64) = *((void *)a1 + 4);
      sub_100215DD0((uint64_t)&v37);
      sub_100183670((uint64_t)&v38);
      char v20 = v29;
      Button.init(action:label:)();
      uint64_t v21 = v35;
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v11, v20, v35);
      swift_storeEnumTagMultiPayload();
      sub_10001DFB0(&qword_10069F510, &qword_10069F4F0);
      _ConditionalContent<>.init(storage:)();
      sub_10002F034((uint64_t)v13, v33, &qword_10069F508);
      swift_storeEnumTagMultiPayload();
      sub_10021712C();
      _ConditionalContent<>.init(storage:)();
      sub_10002B754((uint64_t)v13, &qword_10069F508);
      return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v20, v21);
    }
    else
    {
      uint64_t v23 = swift_allocObject();
      *(void *)(v23 + 16) = v28;
      *(void *)(v23 + 24) = a3;
      long long v24 = a1[1];
      *(_OWORD *)(v23 + 32) = *a1;
      *(_OWORD *)(v23 + 48) = v24;
      *(void *)(v23 + 64) = *((void *)a1 + 4);
      sub_100183670((uint64_t)&v38);
      sub_100215DD0((uint64_t)&v37);
      uint64_t v25 = v29;
      Button.init(action:label:)();
      uint64_t v26 = v35;
      (*(void (**)(uint64_t, char *, uint64_t))(v17 + 16))(v33, v25, v35);
      swift_storeEnumTagMultiPayload();
      sub_10021712C();
      sub_10001DFB0(&qword_10069F510, &qword_10069F4F0);
      _ConditionalContent<>.init(storage:)();
      return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v25, v26);
    }
  }
}

uint64_t sub_100213314@<X0>(uint64_t a1@<X8>)
{
  id v2 = [self mainBundle];
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v2 localizedStringForKey:v3 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10017B588();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = v7 & 1;
  *(void *)(a1 + 24) = v8;
  return result;
}

uint64_t sub_1002133F8()
{
  return swift_release();
}

uint64_t sub_10021345C@<X0>(uint64_t a1@<X8>)
{
  id v2 = [self mainBundle];
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v2 localizedStringForKey:v3 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10017B588();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = v7 & 1;
  *(void *)(a1 + 24) = v8;
  return result;
}

uint64_t sub_100213540()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 localizedStringForKey:v1 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  type metadata accessor for CollaborationPopoverDetailView();
  ObservedObject.projectedValue.getter();
  swift_getKeyPath();
  ObservedObject.Wrapper.subscript.getter();
  swift_release();
  swift_unknownObjectRelease();
  sub_10017B588();
  return Toggle<>.init<A>(_:isOn:)();
}

uint64_t sub_1002136A8@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v70 = a4;
  uint64_t v7 = sub_10002F214(&qword_10069F668);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v71 = (uint64_t)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v69 = (uint64_t)&v61 - v10;
  uint64_t v65 = sub_10002F214(&qword_10069F670);
  __chkstk_darwin(v65);
  uint64_t v66 = (uint64_t)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_10002F214(&qword_10069F650);
  __chkstk_darwin(v73);
  uint64_t v75 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10002F214(&qword_10069F640);
  uint64_t v72 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v74 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_10002F214(&qword_10069F630);
  uint64_t v67 = *(void *)(v78 - 8);
  uint64_t v15 = __chkstk_darwin(v78);
  uint64_t v63 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  long long v19 = (char *)&v61 - v18;
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v61 - v20;
  uint64_t v22 = sub_10002F214(&qword_10069F678);
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  uint64_t v68 = (uint64_t)&v61 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v77 = (uint64_t)&v61 - v25;
  uint64_t v26 = (uint64_t (*)(uint64_t, void *))a3[2];
  swift_unknownObjectRetain();
  uint64_t v76 = a2;
  char v64 = v26;
  uint64_t v27 = (void *)v26(a2, a3);
  swift_unknownObjectRelease();
  if (v27 && (self, uint64_t v28 = swift_dynamicCastObjCClass(), v27, v28))
  {
    long long v29 = (void (*)(uint64_t, void *))a3[18];
    swift_unknownObjectRetain();
    uint64_t v30 = v76;
    v29(v76, a3);
    swift_unknownObjectRelease();
    uint64_t v31 = (void (**)(char *, char *, uint64_t))(v72 + 16);
    uint64_t v61 = (void (**)(char *, uint64_t))(v72 + 8);
    long long v32 = *a1;
    long long v81 = a1[1];
    v82[0] = v32;
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = v30;
    *(void *)(v33 + 24) = a3;
    long long v34 = a1[1];
    *(_OWORD *)(v33 + 32) = *a1;
    *(_OWORD *)(v33 + 48) = v34;
    *(void *)(v33 + 64) = *((void *)a1 + 4);
    sub_100215DD0((uint64_t)v82);
    sub_100183670((uint64_t)&v81);
    sub_10002F214(&qword_10069CD10);
    sub_10001DFB0(&qword_10069CD20, &qword_10069CD10);
    uint64_t v35 = v74;
    Button.init(action:label:)();
    uint64_t v62 = *v31;
    v62(v75, v35, v13);
    swift_storeEnumTagMultiPayload();
    sub_10001DFB0(&qword_10069F638, &qword_10069F640);
    _ConditionalContent<>.init(storage:)();
    uint64_t v43 = *v61;
    (*v61)(v35, v13);
    sub_10002F034((uint64_t)v21, v66, &qword_10069F630);
    swift_storeEnumTagMultiPayload();
    sub_1002178E0();
    _ConditionalContent<>.init(storage:)();
  }
  else
  {
    char v36 = (void (*)(uint64_t, void *))a3[18];
    swift_unknownObjectRetain();
    uint64_t v37 = v76;
    v36(v76, a3);
    swift_unknownObjectRelease();
    long long v38 = (void (**)(char *, char *, uint64_t))(v72 + 16);
    uint64_t v61 = (void (**)(char *, uint64_t))(v72 + 8);
    long long v39 = *a1;
    long long v81 = a1[1];
    v82[0] = v39;
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = v37;
    *(void *)(v40 + 24) = a3;
    long long v41 = a1[1];
    *(_OWORD *)(v40 + 32) = *a1;
    *(_OWORD *)(v40 + 48) = v41;
    *(void *)(v40 + 64) = *((void *)a1 + 4);
    sub_100215DD0((uint64_t)v82);
    sub_100183670((uint64_t)&v81);
    sub_10002F214(&qword_10069CD10);
    sub_10001DFB0(&qword_10069CD20, &qword_10069CD10);
    uint64_t v42 = v74;
    Button.init(action:label:)();
    uint64_t v62 = *v38;
    v62(v75, v42, v13);
    swift_storeEnumTagMultiPayload();
    sub_10001DFB0(&qword_10069F638, &qword_10069F640);
    _ConditionalContent<>.init(storage:)();
    uint64_t v43 = *v61;
    (*v61)(v42, v13);
    sub_10002F034((uint64_t)v19, v66, &qword_10069F630);
    swift_storeEnumTagMultiPayload();
    sub_1002178E0();
    _ConditionalContent<>.init(storage:)();
    uint64_t v21 = v19;
  }
  sub_10002B754((uint64_t)v21, &qword_10069F630);
  swift_unknownObjectRetain();
  uint64_t v44 = v76;
  char v45 = (void *)v64(v76, a3);
  swift_unknownObjectRelease();
  if (v45 && (self, uint64_t v46 = swift_dynamicCastObjCClass(), v45, v46))
  {
    uint64_t v47 = (void (*)(uint64_t, void *))a3[20];
    swift_unknownObjectRetain();
    v47(v44, a3);
    swift_unknownObjectRelease();
    long long v48 = *a1;
    long long v79 = a1[1];
    long long v80 = v48;
    uint64_t v49 = swift_allocObject();
    *(void *)(v49 + 16) = v44;
    *(void *)(v49 + 24) = a3;
    long long v50 = a1[1];
    *(_OWORD *)(v49 + 32) = *a1;
    *(_OWORD *)(v49 + 48) = v50;
    *(void *)(v49 + 64) = *((void *)a1 + 4);
    sub_100215DD0((uint64_t)&v80);
    sub_100183670((uint64_t)&v79);
    sub_10002F214(&qword_10069CD10);
    sub_10001DFB0(&qword_10069CD20, &qword_10069CD10);
    uint64_t v51 = v74;
    Button.init(action:label:)();
    v62(v75, v51, v13);
    swift_storeEnumTagMultiPayload();
    sub_10001DFB0(&qword_10069F638, &qword_10069F640);
    uint64_t v52 = (uint64_t)v63;
    _ConditionalContent<>.init(storage:)();
    v43(v51, v13);
    uint64_t v53 = v69;
    sub_10002F1B0(v52, v69, &qword_10069F630);
    uint64_t v54 = 0;
  }
  else
  {
    uint64_t v54 = 1;
    uint64_t v53 = v69;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 56))(v53, v54, 1, v78);
  uint64_t v55 = v77;
  uint64_t v56 = v68;
  sub_10002F034(v77, v68, &qword_10069F678);
  uint64_t v57 = v71;
  sub_10002F034(v53, v71, &qword_10069F668);
  uint64_t v58 = v70;
  sub_10002F034(v56, v70, &qword_10069F678);
  uint64_t v59 = sub_10002F214(&qword_10069F680);
  sub_10002F034(v57, v58 + *(int *)(v59 + 48), &qword_10069F668);
  sub_10002B754(v53, &qword_10069F668);
  sub_10002B754(v55, &qword_10069F678);
  sub_10002B754(v57, &qword_10069F668);
  return sub_10002B754(v56, &qword_10069F678);
}

uint64_t sub_100214418()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 localizedStringForKey:v1 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10017B588();
  return Label<>.init<A>(_:systemImage:)();
}

uint64_t sub_100214514()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 localizedStringForKey:v1 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10017B588();
  return Label<>.init<A>(_:systemImage:)();
}

uint64_t sub_100214610()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 localizedStringForKey:v1 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10017B588();
  return Label<>.init<A>(_:systemImage:)();
}

uint64_t sub_10021470C()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 localizedStringForKey:v1 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10017B588();
  return Label<>.init<A>(_:systemImage:)();
}

uint64_t sub_100214808()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 localizedStringForKey:v1 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10017B588();
  return Label<>.init<A>(_:systemImage:)();
}

uint64_t sub_100214900()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 localizedStringForKey:v1 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10017B588();
  return Label<>.init<A>(_:systemImage:)();
}

uint64_t sub_1002149F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v32 = a4;
  uint64_t v28 = sub_10002F214(&qword_10069F648);
  __chkstk_darwin(v28);
  uint64_t v31 = (uint64_t)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_10002F214(&qword_10069F650);
  __chkstk_darwin(v26);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_10002F214(&qword_10069F630);
  __chkstk_darwin(v29);
  uint64_t v27 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10002F214(&qword_10069F640);
  uint64_t v30 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a1 + 8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  swift_unknownObjectRetain();
  uint64_t v16 = (void *)v15(a2, a3);
  swift_unknownObjectRelease();
  if (v16)
  {
    self;
    uint64_t v17 = swift_dynamicCastObjCClass();

    if (v17) {
      goto LABEL_5;
    }
  }
  swift_unknownObjectRetain();
  uint64_t v18 = (void *)v15(a2, a3);
  swift_unknownObjectRelease();
  if (v18 && (self, uint64_t v19 = swift_dynamicCastObjCClass(), v18, v19))
  {
LABEL_5:
    uint64_t v20 = (void *)swift_allocObject();
    v20[2] = a2;
    v20[3] = a3;
    v20[4] = v14;
    swift_unknownObjectRetain();
    sub_10002F214(&qword_10069CD10);
    sub_10001DFB0(&qword_10069CD20, &qword_10069CD10);
    Button.init(action:label:)();
    uint64_t v21 = v30;
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v9, v13, v11);
    swift_storeEnumTagMultiPayload();
    sub_10001DFB0(&qword_10069F638, &qword_10069F640);
    uint64_t v22 = (uint64_t)v27;
    _ConditionalContent<>.init(storage:)();
    sub_10002F034(v22, v31, &qword_10069F630);
    swift_storeEnumTagMultiPayload();
    sub_1002178E0();
    _ConditionalContent<>.init(storage:)();
    sub_10002B754(v22, &qword_10069F630);
  }
  else
  {
    uint64_t v23 = (void *)swift_allocObject();
    long long v23[2] = a2;
    v23[3] = a3;
    void v23[4] = v14;
    swift_unknownObjectRetain();
    sub_10002F214(&qword_10069CD10);
    sub_10001DFB0(&qword_10069CD20, &qword_10069CD10);
    Button.init(action:label:)();
    uint64_t v21 = v30;
    (*(void (**)(uint64_t, char *, uint64_t))(v30 + 16))(v31, v13, v11);
    swift_storeEnumTagMultiPayload();
    sub_1002178E0();
    sub_10001DFB0(&qword_10069F638, &qword_10069F640);
    _ConditionalContent<>.init(storage:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v13, v11);
}

uint64_t sub_100214FF4()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 localizedStringForKey:v1 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10017B588();
  return Label<>.init<A>(_:systemImage:)();
}

uint64_t sub_1002150F0()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 localizedStringForKey:v1 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10017B588();
  return Label<>.init<A>(_:systemImage:)();
}

uint64_t sub_1002151EC()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 localizedStringForKey:v1 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10017B588();
  return Label<>.init<A>(_:systemImage:)();
}

uint64_t sub_1002152E0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_10020EA94(a1, a2);
}

uint64_t type metadata accessor for CollaborationPopoverDetailView.CollaborationListLabelStyle()
{
  return sub_100183A74();
}

unint64_t sub_100215334()
{
  unint64_t result = qword_10069F368;
  if (!qword_10069F368)
  {
    sub_10001DFF4(&qword_10069F360);
    sub_10001DFB0(&qword_10069F370, &qword_10069F378);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069F368);
  }
  return result;
}

uint64_t sub_1002153CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10002F214(&qword_10069F718);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)id v4 = static VerticalAlignment.center.getter();
  *((void *)v4 + 1) = 0;
  v4[16] = 0;
  uint64_t v5 = sub_10002F214(&qword_10069F720);
  sub_1002154C4(&v4[*(int *)(v5 + 44)]);
  uint64_t v6 = static Color.primary.getter();
  uint64_t KeyPath = swift_getKeyPath();
  sub_10002F034((uint64_t)v4, a1, &qword_10069F718);
  uint64_t v8 = (uint64_t *)(a1 + *(int *)(sub_10002F214(&qword_10069F728) + 36));
  uint64_t *v8 = KeyPath;
  v8[1] = v6;
  return sub_10002B754((uint64_t)v4, &qword_10069F718);
}

uint64_t sub_1002154C4@<X0>(char *a1@<X8>)
{
  uint64_t v54 = a1;
  uint64_t v46 = type metadata accessor for Image.Scale();
  uint64_t v1 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v3 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for LabelStyleConfiguration.Icon();
  uint64_t v48 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214(&qword_10069F730);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10002F214(&qword_10069F738);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_10002F214(&qword_10069F740) - 8;
  uint64_t v14 = __chkstk_darwin(v53);
  uint64_t v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v51 = (uint64_t)&v44 - v17;
  uint64_t v52 = type metadata accessor for LabelStyleConfiguration.Title();
  uint64_t v49 = *(void *)(v52 - 8);
  uint64_t v18 = __chkstk_darwin(v52);
  uint64_t v47 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  char v45 = (char *)&v44 - v20;
  LabelStyleConfiguration.title.getter();
  LabelStyleConfiguration.icon.getter();
  uint64_t v21 = v46;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Image.Scale.large(_:), v46);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v23 = (uint64_t *)&v9[*(int *)(v7 + 44)];
  uint64_t v24 = sub_10002F214(&qword_10069CCC8);
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))((char *)v23 + *(int *)(v24 + 28), v3, v21);
  uint64_t *v23 = KeyPath;
  uint64_t v25 = v48;
  uint64_t v26 = v50;
  (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v9, v5, v50);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v21);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v5, v26);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_10002F034((uint64_t)v9, (uint64_t)v13, &qword_10069F730);
  uint64_t v27 = &v13[*(int *)(v11 + 44)];
  long long v28 = v57;
  *(_OWORD *)uint64_t v27 = v56;
  *((_OWORD *)v27 + 1) = v28;
  *((_OWORD *)v27 + 2) = v58;
  sub_10002B754((uint64_t)v9, &qword_10069F730);
  uint64_t v29 = static Color.accentColor.getter();
  uint64_t v30 = swift_getKeyPath();
  sub_10002F034((uint64_t)v13, (uint64_t)v16, &qword_10069F738);
  uint64_t v31 = (uint64_t *)&v16[*(int *)(v53 + 44)];
  *uint64_t v31 = v30;
  v31[1] = v29;
  sub_10002B754((uint64_t)v13, &qword_10069F738);
  uint64_t v32 = v51;
  sub_10002F1B0((uint64_t)v16, v51, &qword_10069F740);
  uint64_t v33 = v49;
  long long v34 = *(void (**)(char *, char *, uint64_t))(v49 + 16);
  uint64_t v35 = v47;
  char v36 = v45;
  uint64_t v37 = v52;
  v34(v47, v45, v52);
  char v55 = 1;
  sub_10002F034(v32, (uint64_t)v16, &qword_10069F740);
  long long v38 = v54;
  v34(v54, v35, v37);
  uint64_t v39 = sub_10002F214(&qword_10069F748);
  uint64_t v40 = &v38[*(int *)(v39 + 48)];
  char v41 = v55;
  *(void *)uint64_t v40 = 0;
  v40[8] = v41;
  sub_10002F034((uint64_t)v16, (uint64_t)&v38[*(int *)(v39 + 64)], &qword_10069F740);
  sub_10002B754(v32, &qword_10069F740);
  uint64_t v42 = *(void (**)(char *, uint64_t))(v33 + 8);
  v42(v36, v37);
  sub_10002B754((uint64_t)v16, &qword_10069F740);
  return ((uint64_t (*)(char *, uint64_t))v42)(v35, v37);
}

uint64_t sub_100215A30@<X0>(uint64_t a1@<X8>)
{
  return sub_1002153CC(a1);
}

uint64_t sub_100215A48@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100215A74()
{
  return EnvironmentValues.font.setter();
}

uint64_t sub_100215AA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t (*a6)(char *))
{
  a5(0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_100215B70@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100215B9C()
{
  return EnvironmentValues.foregroundColor.setter();
}

uint64_t sub_100215BC8()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100215C00()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 24) + 24))(*(void *)(v0 + 16));
}

uint64_t sub_100215C38()
{
  return EnvironmentValues.colorSchemeContrast.getter();
}

uint64_t sub_100215C5C()
{
  return sub_100213540();
}

uint64_t sub_100215C68@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unsigned char *a3@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a2 + a1 - 8) + 120))(*(void *)(a2 + a1 - 16));
  *a3 = result & 1;
  return result;
}

uint64_t sub_100215CB4(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a4 + a3 - 8) + 128))(*a1, *(void *)(a4 + a3 - 16));
}

uint64_t sub_100215CF8()
{
  return 16;
}

__n128 sub_100215D04(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100215D10@<X0>(char *a1@<X8>)
{
  return sub_100211794(v1[4], v1[2], v1[3], a1);
}

const char *sub_100215D1C()
{
  return "userIdentity";
}

id sub_100215D28@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 userIdentity];
  *a2 = result;
  return result;
}

id sub_100215D64(void *a1, id *a2)
{
  return [*a2 setUserIdentity:*a1];
}

const char *sub_100215D78()
{
  return "userRecordID";
}

id sub_100215D84@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 userRecordID];
  *a2 = result;
  return result;
}

uint64_t sub_100215DC4(void **a1)
{
  return sub_100211D34(a1, (long long *)(v1 + 32), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100215DD0(uint64_t a1)
{
  return a1;
}

unint64_t sub_100215DFC()
{
  unint64_t result = qword_10069F438;
  if (!qword_10069F438)
  {
    sub_10001DFF4(&qword_10069F440);
    sub_100215E70();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069F438);
  }
  return result;
}

unint64_t sub_100215E70()
{
  unint64_t result = qword_10069F448;
  if (!qword_10069F448)
  {
    sub_100031418(255, &qword_1006A75A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069F448);
  }
  return result;
}

uint64_t sub_100215ED8()
{
  uint64_t v0 = type metadata accessor for AttributedString.MarkdownParsingOptions.FailurePolicy();
  uint64_t v62 = *(void *)(v0 - 8);
  uint64_t v63 = v0;
  __chkstk_darwin(v0);
  uint64_t v61 = (uint64_t)&v55 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = type metadata accessor for AttributedString.MarkdownParsingOptions.InterpretedSyntax();
  uint64_t v2 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v59 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for AttributedString.MarkdownParsingOptions();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_10002F214(&qword_10069B310);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214((uint64_t *)&unk_10069CE50);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for AttributedString();
  uint64_t v64 = *(void *)(v11 - 8);
  uint64_t v65 = v11;
  uint64_t v12 = __chkstk_darwin(v11);
  char v55 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  long long v57 = (char *)&v55 - v14;
  uint64_t v15 = self;
  id v16 = [v15 mainBundle];
  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = [v16 localizedStringForKey:v17 value:0 table:0];

  uint64_t v56 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v58 = v19;

  id v20 = [v15 mainBundle];
  NSString v21 = String._bridgeToObjectiveC()();
  id v22 = [v20 localizedStringForKey:v21 value:0 table:0];

  uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v25 = v24;

  uint64_t v66 = 0;
  unint64_t v67 = 0xE000000000000000;
  _StringGuts.grow(_:)(50);
  swift_bridgeObjectRelease();
  uint64_t v66 = 91;
  unint64_t v67 = 0xE100000000000000;
  v26._countAndFlagsBits = v23;
  v26._object = v25;
  String.append(_:)(v26);
  swift_bridgeObjectRelease();
  v27._object = (void *)0x80000001005534A0;
  v27._countAndFlagsBits = 0xD00000000000002FLL;
  String.append(_:)(v27);
  uint64_t v28 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v7, 1, 1, v28);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v59, enum case for AttributedString.MarkdownParsingOptions.InterpretedSyntax.full(_:), v60);
  (*(void (**)(uint64_t, void, uint64_t))(v62 + 104))(v61, enum case for AttributedString.MarkdownParsingOptions.FailurePolicy.throwError(_:), v63);
  AttributedString.MarkdownParsingOptions.init(allowsExtendedAttributes:interpretedSyntax:failurePolicy:languageCode:)();
  AttributedString.init(markdown:options:baseURL:)();
  uint64_t v30 = v56;
  uint64_t v29 = v57;
  uint64_t v32 = v64;
  uint64_t v31 = v65;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v10, 0, 1, v65);
  int v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48))(v10, 1, v31);
  unint64_t v34 = v58;
  if (v33 == 1)
  {
    swift_bridgeObjectRelease();
    sub_10002B754((uint64_t)v10, (uint64_t *)&unk_10069CE50);
    return 0;
  }
  else
  {
    uint64_t v36 = v64;
    uint64_t v37 = v29;
    long long v38 = v29;
    uint64_t v39 = v65;
    (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v38, v10, v65);
    uint64_t v66 = v30;
    unint64_t v67 = v34;
    sub_10017B588();
    uint64_t v40 = Text.init<A>(_:)();
    uint64_t v42 = v41;
    char v44 = v43 & 1;
    uint64_t v61 = static Text.+ infix(_:_:)();
    uint64_t v62 = v45;
    uint64_t v63 = v46;
    char v48 = v47 & 1;
    sub_1001839EC(v40, v42, v44);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v55, v37, v39);
    uint64_t v49 = Text.init(_:)();
    uint64_t v51 = v50;
    LOBYTE(v39) = v52 & 1;
    uint64_t v53 = v63;
    uint64_t v35 = static Text.+ infix(_:_:)();
    sub_1001839EC(v49, v51, v39);
    swift_bridgeObjectRelease();
    sub_1001839EC(v61, v53, v48);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v64 + 8))(v57, v65);
  }
  return v35;
}

uint64_t sub_1002165C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1002165F4()
{
  return EnvironmentValues.foregroundColor.setter();
}

uint64_t sub_100216620()
{
  return EnvironmentValues.openURL.getter();
}

uint64_t sub_100216644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100215AA0(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for OpenURLAction, (uint64_t (*)(char *))&EnvironmentValues.openURL.setter);
}

uint64_t sub_100216688(uint64_t a1)
{
  return sub_100212C2C(a1, v1 + 32, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100216694(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1001839DC(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1002166D8(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1001839EC(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_10021671C()
{
  unint64_t result = qword_10069F488;
  if (!qword_10069F488)
  {
    sub_10001DFF4(&qword_10069F480);
    sub_1002167BC();
    sub_10001DFB0(&qword_10069F4C0, &qword_10069F478);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069F488);
  }
  return result;
}

unint64_t sub_1002167BC()
{
  unint64_t result = qword_10069F490;
  if (!qword_10069F490)
  {
    sub_10001DFF4(&qword_10069F498);
    sub_10021685C();
    sub_10001DFB0(&qword_10069F4B0, &qword_10069F4B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069F490);
  }
  return result;
}

unint64_t sub_10021685C()
{
  unint64_t result = qword_10069F4A0;
  if (!qword_10069F4A0)
  {
    sub_10001DFF4(&qword_10069F4A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069F4A0);
  }
  return result;
}

unint64_t sub_1002168C8()
{
  unint64_t result = qword_10069F4D0;
  if (!qword_10069F4D0)
  {
    sub_10001DFF4(&qword_10069F470);
    sub_10021671C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069F4D0);
  }
  return result;
}

unint64_t sub_10021693C()
{
  unint64_t result = qword_10069F4D8;
  if (!qword_10069F4D8)
  {
    sub_10001DFF4(&qword_10069F4C8);
    sub_1002169B8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069F4D8);
  }
  return result;
}

unint64_t sub_1002169B8()
{
  unint64_t result = qword_10069F4E0;
  if (!qword_10069F4E0)
  {
    sub_10001DFF4(&qword_10069F4E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069F4E0);
  }
  return result;
}

uint64_t sub_100216A2C()
{
  uint64_t v0 = type metadata accessor for AttributedString.MarkdownParsingOptions.FailurePolicy();
  uint64_t v62 = *(void *)(v0 - 8);
  uint64_t v63 = v0;
  __chkstk_darwin(v0);
  uint64_t v61 = (uint64_t)&v55 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = type metadata accessor for AttributedString.MarkdownParsingOptions.InterpretedSyntax();
  uint64_t v2 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v59 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for AttributedString.MarkdownParsingOptions();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_10002F214(&qword_10069B310);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214((uint64_t *)&unk_10069CE50);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for AttributedString();
  uint64_t v64 = *(void *)(v11 - 8);
  uint64_t v65 = v11;
  uint64_t v12 = __chkstk_darwin(v11);
  char v55 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  long long v57 = (char *)&v55 - v14;
  uint64_t v15 = self;
  id v16 = [v15 mainBundle];
  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = [v16 localizedStringForKey:v17 value:0 table:0];

  uint64_t v56 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v58 = v19;

  id v20 = [v15 mainBundle];
  NSString v21 = String._bridgeToObjectiveC()();
  id v22 = [v20 localizedStringForKey:v21 value:0 table:0];

  uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v25 = v24;

  uint64_t v66 = 0;
  unint64_t v67 = 0xE000000000000000;
  _StringGuts.grow(_:)(50);
  swift_bridgeObjectRelease();
  uint64_t v66 = 91;
  unint64_t v67 = 0xE100000000000000;
  v26._countAndFlagsBits = v23;
  v26._object = v25;
  String.append(_:)(v26);
  swift_bridgeObjectRelease();
  v27._object = (void *)0x80000001005534A0;
  v27._countAndFlagsBits = 0xD00000000000002FLL;
  String.append(_:)(v27);
  uint64_t v28 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v7, 1, 1, v28);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v59, enum case for AttributedString.MarkdownParsingOptions.InterpretedSyntax.full(_:), v60);
  (*(void (**)(uint64_t, void, uint64_t))(v62 + 104))(v61, enum case for AttributedString.MarkdownParsingOptions.FailurePolicy.throwError(_:), v63);
  AttributedString.MarkdownParsingOptions.init(allowsExtendedAttributes:interpretedSyntax:failurePolicy:languageCode:)();
  AttributedString.init(markdown:options:baseURL:)();
  uint64_t v30 = v56;
  uint64_t v29 = v57;
  uint64_t v32 = v64;
  uint64_t v31 = v65;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v10, 0, 1, v65);
  int v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48))(v10, 1, v31);
  unint64_t v34 = v58;
  if (v33 == 1)
  {
    swift_bridgeObjectRelease();
    sub_10002B754((uint64_t)v10, (uint64_t *)&unk_10069CE50);
    return 0;
  }
  else
  {
    uint64_t v36 = v64;
    uint64_t v37 = v29;
    long long v38 = v29;
    uint64_t v39 = v65;
    (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v38, v10, v65);
    uint64_t v66 = v30;
    unint64_t v67 = v34;
    sub_10017B588();
    uint64_t v40 = Text.init<A>(_:)();
    uint64_t v42 = v41;
    char v44 = v43 & 1;
    uint64_t v61 = static Text.+ infix(_:_:)();
    uint64_t v62 = v45;
    uint64_t v63 = v46;
    char v48 = v47 & 1;
    sub_1001839EC(v40, v42, v44);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v55, v37, v39);
    uint64_t v49 = Text.init(_:)();
    uint64_t v51 = v50;
    LOBYTE(v39) = v52 & 1;
    uint64_t v53 = v63;
    uint64_t v35 = static Text.+ infix(_:_:)();
    sub_1001839EC(v49, v51, v39);
    swift_bridgeObjectRelease();
    sub_1001839EC(v61, v53, v48);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v64 + 8))(v57, v65);
  }
  return v35;
}

uint64_t sub_100217120(uint64_t a1)
{
  return sub_100212CA8(a1, v1 + 32, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_10021712C()
{
  unint64_t result = qword_10069F518;
  if (!qword_10069F518)
  {
    sub_10001DFF4(&qword_10069F508);
    sub_10001DFB0(&qword_10069F510, &qword_10069F4F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069F518);
  }
  return result;
}

uint64_t sub_1002171D0()
{
  return sub_1002133F8();
}

uint64_t sub_100217208()
{
  return sub_1002133F8();
}

uint64_t sub_10021723C()
{
  return sub_100217274();
}

uint64_t sub_100217258()
{
  return sub_100217274();
}

uint64_t sub_100217274()
{
  return State.wrappedValue.setter();
}

uint64_t sub_1002172D0()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[9];
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 104);
  swift_unknownObjectRetain();
  v4(v3, v1, v2);

  return swift_unknownObjectRelease();
}

uint64_t sub_100217344@<X0>(void *a1@<X8>)
{
  return sub_100211E18(*(void **)(v1 + 32), *(long long **)(v1 + 40), *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_100217350()
{
  unint64_t result = qword_10069F520;
  if (!qword_10069F520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069F520);
  }
  return result;
}

uint64_t sub_1002173A8()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1002173F0(uint64_t a1)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[9];
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 112);
  swift_unknownObjectRetain();
  v6(v5, a1, v3, v4);

  return swift_unknownObjectRelease();
}

uint64_t sub_100217474@<X0>(uint64_t a1@<X8>)
{
  return sub_10020FCBC(v1[4], v1[2], v1[3], a1);
}

unint64_t sub_100217480()
{
  unint64_t result = qword_10069F530;
  if (!qword_10069F530)
  {
    sub_10001DFF4(&qword_10069F528);
    sub_1002174FC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069F530);
  }
  return result;
}

unint64_t sub_1002174FC()
{
  unint64_t result = qword_10069F538;
  if (!qword_10069F538)
  {
    sub_10001DFF4(&qword_10069F540);
    sub_10001DFB0(&qword_10069F548, &qword_10069F550);
    sub_10001DFB0(&qword_10069CC48, &qword_10069CC38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069F538);
  }
  return result;
}

uint64_t sub_1002175C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1002175EC()
{
  return EnvironmentValues.font.setter();
}

unint64_t sub_100217618()
{
  unint64_t result = qword_10069F5F0;
  if (!qword_10069F5F0)
  {
    sub_10001DFF4(&qword_10069F5C8);
    sub_10001DFB0(&qword_10069F510, &qword_10069F4F0);
    sub_10001DFB0(&qword_10069CC48, &qword_10069CC38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069F5F0);
  }
  return result;
}

unint64_t sub_1002176DC()
{
  unint64_t result = qword_10069F5F8;
  if (!qword_10069F5F8)
  {
    type metadata accessor for BorderedProminentButtonStyle();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069F5F8);
  }
  return result;
}

uint64_t sub_100217734()
{
  return EnvironmentValues.controlSize.getter();
}

uint64_t sub_100217758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100215AA0(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for ControlSize, (uint64_t (*)(char *))&EnvironmentValues.controlSize.setter);
}

uint64_t sub_100217798()
{
  return EnvironmentValues._buttonBorderShape.getter();
}

uint64_t sub_1002177BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100215AA0(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for ButtonBorderShape, (uint64_t (*)(char *))&EnvironmentValues._buttonBorderShape.setter);
}

uint64_t sub_1002177FC()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 24) + 48))(*(void *)(v0 + 16));
}

uint64_t sub_100217834@<X0>(uint64_t a1@<X8>)
{
  return sub_1002149F8(v1[4], v1[2], v1[3], a1);
}

unint64_t sub_100217840()
{
  unint64_t result = qword_10069F620;
  if (!qword_10069F620)
  {
    sub_10001DFF4(&qword_10069F618);
    sub_1002178E0();
    sub_10001DFB0(&qword_10069F638, &qword_10069F640);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069F620);
  }
  return result;
}

unint64_t sub_1002178E0()
{
  unint64_t result = qword_10069F628;
  if (!qword_10069F628)
  {
    sub_10001DFF4(&qword_10069F630);
    sub_10001DFB0(&qword_10069F638, &qword_10069F640);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069F628);
  }
  return result;
}

uint64_t sub_10021797C()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 24) + 176))(*(void *)(v0 + 16));
}

uint64_t sub_1002179B4@<X0>(uint64_t a1@<X8>)
{
  return sub_1002136A8(*(long long **)(v1 + 32), *(void *)(v1 + 16), *(void **)(v1 + 24), a1);
}

uint64_t sub_1002179C4()
{
  return sub_100217AAC(1);
}

uint64_t sub_1002179D0()
{
  return sub_1002179E4(1);
}

uint64_t sub_1002179DC()
{
  return sub_1002179E4(0);
}

uint64_t sub_1002179E4(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 168);
  swift_unknownObjectRetain();
  v5(a1, v3, v4);

  return swift_unknownObjectRelease();
}

uint64_t sub_100217A5C()
{
  return sub_100217AAC(0);
}

uint64_t sub_100217A6C()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_100217AAC(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 152);
  swift_unknownObjectRetain();
  v5(a1, v3, v4);

  return swift_unknownObjectRelease();
}

uint64_t sub_100217B20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

void sub_100217B28()
{
  sub_1002181A0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *sub_100217BB4(uint64_t *a1, uint64_t *a2)
{
  int v4 = *(_DWORD *)(*(void *)(sub_10002F214(&qword_10069F380) - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100217CC0(uint64_t a1)
{
  sub_10002F214(&qword_10069F380);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = type metadata accessor for ColorSchemeContrast();
    uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v3(a1, v2);
  }
  else
  {
    return swift_release();
  }
}

void *sub_100217D64(void *a1, void *a2)
{
  sub_10002F214(&qword_10069F380);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_100217E20(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_10002B754((uint64_t)a1, &qword_10069F380);
    sub_10002F214(&qword_10069F380);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_100217EF4(void *a1, const void *a2)
{
  uint64_t v4 = sub_10002F214(&qword_10069F380);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  return a1;
}

void *sub_100217FB8(void *a1, const void *a2)
{
  if (a1 != a2)
  {
    sub_10002B754((uint64_t)a1, &qword_10069F380);
    uint64_t v4 = sub_10002F214(&qword_10069F380);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100218094(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002180A8);
}

uint64_t sub_1002180A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002F214(qword_10069F688);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_100218118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10021812C);
}

uint64_t sub_10021812C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002F214(qword_10069F688);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

void sub_1002181A0()
{
  if (!qword_10069F710)
  {
    type metadata accessor for ColorSchemeContrast();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10069F710);
    }
  }
}

uint64_t sub_1002181F8()
{
  return swift_getWitnessTable();
}

uint64_t sub_100218308()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100218358()
{
  unint64_t result = qword_10069F750;
  if (!qword_10069F750)
  {
    sub_10001DFF4(&qword_10069F728);
    sub_10001DFB0(&qword_10069F758, &qword_10069F718);
    sub_10001DFB0(&qword_10069F4B0, &qword_10069F4B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069F750);
  }
  return result;
}

uint64_t sub_100218470()
{
  swift_beginAccess();
  id v1 = objc_getAssociatedObject(v0, &unk_10069F760);
  swift_endAccess();
  if (v1)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v4, 0, sizeof(v4));
  }
  sub_1001BC02C((uint64_t)v4, (uint64_t)&v5);
  if (v6)
  {
    sub_100032E84(&v5, &v7);
    type metadata accessor for ICDebugStatusWindow();
    swift_dynamicCast();
    return v3;
  }
  else
  {
    sub_100015BE0((uint64_t)&v5);
    return 0;
  }
}

void sub_10021861C()
{
  id v1 = v0;
  id v2 = [v0 viewControllerManager];
  if (v2)
  {
    uint64_t v3 = v2;
    unsigned __int8 v4 = [v2 isAuxiliary];

    if ((v4 & 1) == 0)
    {
      swift_beginAccess();
      id v5 = objc_getAssociatedObject(v1, &unk_10069F761);
      swift_endAccess();
      if (v5)
      {
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();
        sub_100015BE0((uint64_t)v8);
      }
      else
      {
        memset(v8, 0, sizeof(v8));
        sub_100015BE0((uint64_t)v8);
        *(void *)&v8[0] = [self standardUserDefaults];
        swift_getKeyPath();
        swift_allocObject();
        swift_unknownObjectUnownedInit();
        uint64_t v6 = (void *)_KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
        swift_release();
        swift_release();

        swift_beginAccess();
        id v7 = v6;
        objc_setAssociatedObject(v1, &unk_10069F761, v7, (void *)1);
        swift_endAccess();
      }
    }
  }
}

void sub_1002187E0()
{
  sub_10002F214(&qword_10069F828);
  NSKeyValueObservedChange.newValue.getter();
  if (v2 != 2 && (v2 & 1) != 0) {
    unint64_t v0 = &selRef_showDebugStatusWindow_;
  }
  else {
    unint64_t v0 = &selRef_hideDebugStatusWindow_;
  }
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  [Strong *v0];
}

void sub_100218970()
{
  if (ICDebugModeEnabled() && ([v0 isDebugWindowVisible] & 1) == 0)
  {
    id v1 = objc_allocWithZone((Class)type metadata accessor for ICDebugStatusWindow());
    id v2 = v0;
    id v3 = sub_100218B84(v2);
    [v3 setHidden:0];
    id v5 = v3;
    id v4 = [v2 windowScene];
    [v5 setWindowScene:v4];

    [v2 setDebugWindow:v5];
  }
}

id sub_100218B84(void *a1)
{
  v11.receiver = v1;
  v11.super_class = (Class)swift_getObjectType();
  id v3 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v4 = (objc_class *)type metadata accessor for ICDebugStatusRootViewController();
  id v5 = (char *)objc_allocWithZone(v4);
  *(void *)&v5[OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC431ICDebugStatusRootViewController_rootView] = 0;
  swift_unknownObjectUnownedInit();
  v10.receiver = v5;
  v10.super_class = v4;
  id v6 = v3;
  [super initWithNibName:0 bundle:0];
  [v6 setRootViewController:v7];

  type metadata accessor for Level(0);
  [a1 windowLevel];
  sub_10021B600();
  static _UIKitNumericRawRepresentable.+ infix(_:_:)();
  [v6 setWindowLevel:v9];

  return v6;
}

uint64_t type metadata accessor for ICDebugStatusWindow()
{
  return self;
}

uint64_t sub_100218DE4(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v4 = &v1[OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_panStart];
  *(void *)id v4 = 0;
  *((void *)v4 + 1) = 0;
  v4[16] = 1;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_xPosition] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_yPosition] = 0;
  swift_unknownObjectUnownedInit();
  id v5 = objc_allocWithZone((Class)UIView);
  id v6 = v1;
  id v7 = [v5 init];
  *(void *)&v6[OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_container] = v7;

  v35.receiver = v6;
  v35.super_class = ObjectType;
  uint64_t v8 = (char *)[super initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v9 = OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_container;
  objc_super v10 = *(void **)&v8[OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_container];
  objc_super v11 = v8;
  id v12 = [v10 layer];
  LODWORD(v13) = 1058642330;
  [v12 setShadowOpacity:v13];

  id v14 = [*(id *)&v8[v9] layer];
  [v14 setShadowRadius:4.0];

  uint64_t v15 = *(void **)&v8[v9];
  [v15 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v11 addSubview:v15];
  id v16 = [v15 leftAnchor];
  id v17 = [v11 leftAnchor];
  id v18 = [v16 constraintEqualToAnchor:v17];

  uint64_t v19 = OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_xPosition;
  id v20 = *(void **)&v11[OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_xPosition];
  *(void *)&v11[OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_xPosition] = v18;

  id v21 = [*(id *)&v8[v9] topAnchor];
  id v22 = [v11 topAnchor];
  id v23 = [v21 constraintEqualToAnchor:v22];

  uint64_t v24 = OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_yPosition;
  uint64_t v25 = *(void **)&v11[OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_yPosition];
  *(void *)&v11[OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_yPosition] = v23;

  sub_100219170();
  sub_10002F214(&qword_10069BA00);
  uint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_100524CE0;
  Swift::String v27 = *(void **)&v11[v19];
  if (v27)
  {
    uint64_t v28 = result;
    *(void *)(result + 32) = v27;
    uint64_t v29 = *(void **)&v11[v24];
    if (v29)
    {
      uint64_t v30 = self;
      *(void *)(v28 + 40) = v29;
      specialized Array._endMutation()();
      sub_100031418(0, (unint64_t *)&qword_1006A5260);
      id v31 = v27;
      id v32 = v29;
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v30 activateConstraints:isa];

      id v34 = [objc_allocWithZone((Class)UIPanGestureRecognizer) initWithTarget:v11 action:"handlePanGesture:"];
      [*(id *)&v8[v9] addGestureRecognizer:v34];
      sub_100219360();
      sub_100219460();

      return (uint64_t)v11;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_100219170()
{
  id v1 = [v0 safeAreaLayoutGuide];
  [v1 layoutFrame];
  double v3 = v2;

  if (v3 < 24.0) {
    return;
  }
  id v4 = [v0 safeAreaLayoutGuide];
  [v4 layoutFrame];
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  CGFloat v10 = v9;
  CGFloat v12 = v11;

  v29.origin.CGFloat x = v6;
  v29.origin.CGFloat y = v8;
  v29.size.CGFloat width = v10;
  v29.size.CGFloat height = v12;
  CGRect v30 = CGRectInset(v29, 12.0, 0.0);
  CGFloat x = v30.origin.x;
  CGFloat y = v30.origin.y;
  CGFloat width = v30.size.width;
  CGFloat height = v30.size.height;
  id v17 = [v0 traitCollection];
  id v18 = [v17 layoutDirection];

  CGFloat v19 = x;
  CGFloat v20 = y;
  CGFloat v21 = width;
  CGFloat v22 = height;
  if (v18)
  {
    double MinX = CGRectGetMinX(*(CGRect *)&v19);
  }
  else
  {
    double MaxX = CGRectGetMaxX(*(CGRect *)&v19);
    [*(id *)&v0[OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_container] frame];
    double MinX = MaxX - CGRectGetWidth(v31);
    if (MinX <= 0.0) {
      double MinX = 0.0;
    }
  }
  uint64_t v25 = *(void **)&v0[OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_xPosition];
  if (!v25)
  {
    __break(1u);
    goto LABEL_12;
  }
  [v25 setConstant:MinX];
  Swift::String v26 = *(void **)&v0[OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_yPosition];
  if (!v26)
  {
LABEL_12:
    __break(1u);
    return;
  }
  id v27 = v26;
  v32.origin.CGFloat x = x;
  v32.origin.CGFloat y = y;
  v32.size.CGFloat width = width;
  v32.size.CGFloat height = height;
  [v27 setConstant:CGRectGetMinY(v32)];
}

void sub_100219360()
{
  id v1 = [*(id *)&v0[OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_container] layer];
  id v2 = [v0 traitCollection];
  unsigned int v3 = [v2 ic_isDark];

  id v4 = self;
  double v5 = &selRef_clearColor;
  if (!v3) {
    double v5 = &selRef_systemGrayColor;
  }
  id v6 = [v4 *v5];
  id v7 = [v6 CGColor];

  [v1 setShadowColor:v7];
}

void sub_100219460()
{
  id v1 = *(void **)&v0[OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_container];
  [v1 frame];
  double v3 = v2;
  double v5 = v4;
  [v0 bounds];
  double MaxX = CGRectGetMaxX(v12);
  if (MaxX <= 1.0) {
    double MaxX = 1.0;
  }
  double v7 = v3 / MaxX;
  [v0 bounds];
  double MaxY = CGRectGetMaxY(v13);
  if (MaxY <= 1.0) {
    double MaxY = 1.0;
  }
  double v9 = v5 / MaxY;
  id v10 = [v1 layer];
  [v10 setShadowOffset:v7 + v7, v9 * 3.0 + 1.0];
}

CGAffineTransform *sub_1002197C4(void *a1)
{
  if ((unint64_t)[a1 state] <= 1)
  {
    uint64_t result = (CGAffineTransform *)[*(id *)(v1+ OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_container) frame];
    uint64_t v4 = v1 + OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_panStart;
    *(void *)uint64_t v4 = v5;
    *(void *)(v4 + 8) = v6;
    *(unsigned char *)(v4 + 16) = 0;
    return result;
  }
  [a1 translationInView:v1];
  uint64_t result = CGAffineTransformMakeTranslation(&v10, v7, v8);
  if ((*(unsigned char *)(v1
                 + OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_panStart
                 + 16) & 1) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  CGPoint v9 = CGPointApplyAffineTransform(*(CGPoint *)(v1+ OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_panStart), &v10);
  uint64_t result = *(CGAffineTransform **)(v1
                                 + OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_xPosition);
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  [(CGAffineTransform *)result setConstant:v9.x];
  uint64_t result = *(CGAffineTransform **)(v1
                                 + OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_yPosition);
  if (result) {
    return (CGAffineTransform *)[(CGAffineTransform *)result setConstant:v9.y];
  }
LABEL_9:
  __break(1u);
  return result;
}

void sub_1002199E0()
{
}

uint64_t type metadata accessor for ICDebugStatusRootView()
{
  return self;
}

void sub_100219B18()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UIHostingControllerSizingOptions();
  __chkstk_darwin(v2 - 8);
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  id v4 = objc_allocWithZone((Class)type metadata accessor for ICDebugStatusRootView());
  uint64_t v5 = (void *)sub_100218DE4(Strong);
  uint64_t v6 = OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC431ICDebugStatusRootViewController_rootView;
  CGFloat v7 = *(void **)&v1[OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC431ICDebugStatusRootViewController_rootView];
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC431ICDebugStatusRootViewController_rootView] = v5;
  id v8 = v5;

  [v1 setView:*(void *)&v1[v6]];
  CGPoint v9 = *(void **)&v1[v6];
  if (!v9)
  {
    __break(1u);
    goto LABEL_17;
  }
  [v9 setAlpha:0.0];
  LOBYTE(v50) = 0;
  LOBYTE(v51) = 0;
  id v10 = objc_allocWithZone((Class)sub_10002F214(&qword_10069F818));
  double v11 = (void *)UIHostingController.init(rootView:)();
  static UIHostingControllerSizingOptions.intrinsicContentSize.getter();
  dispatch thunk of UIHostingController.sizingOptions.setter();
  id v12 = [v11 view:sub_10017FFD0, 0, v50, sub_10017FFF4, 0, v51];
  if (!v12)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  CGRect v13 = v12;
  id v14 = [self clearColor];
  [v13 setBackgroundColor:v14];

  id v15 = [v11 view];
  if (!v15)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  id v16 = v15;
  [v15 setOpaque:0];

  [v1 addChildViewController:v11];
  uint64_t v17 = *(void *)&v1[v6];
  if (!v17)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  id v18 = objc_retain(*(id *)(v17
                          + OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_container));
  id v19 = [v11 view];
  if (!v19)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  CGFloat v20 = v19;
  [v18 addSubview:v19];

  sub_10002F214(&qword_10069BA00);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_100524CD0;
  id v22 = [v11 view];
  if (!v22)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  id v23 = v22;
  id v24 = [v22 leadingAnchor];

  uint64_t v25 = *(void *)&v1[v6];
  if (!v25)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  id v26 = [*(id *)(v25+ OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_container) leadingAnchor];
  id v27 = [v24 constraintEqualToAnchor:v26];

  *(void *)(v21 + 32) = v27;
  id v28 = [v11 view];
  if (!v28)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  CGRect v29 = v28;
  id v30 = [v28 topAnchor];

  uint64_t v31 = *(void *)&v1[v6];
  if (!v31)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  id v32 = [*(id *)(v31+ OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_container) topAnchor];
  id v33 = [v30 constraintEqualToAnchor:v32];

  *(void *)(v21 + 40) = v33;
  id v34 = [v11 view];
  if (!v34)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  objc_super v35 = v34;
  id v36 = [v34 trailingAnchor];

  uint64_t v37 = *(void *)&v1[v6];
  if (!v37)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  id v38 = [*(id *)(v37+ OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_container) trailingAnchor];
  id v39 = [v36 constraintEqualToAnchor:v38];

  *(void *)(v21 + 48) = v39;
  id v40 = [v11 view];
  if (!v40)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v41 = v40;
  id v42 = [v40 bottomAnchor];

  uint64_t v43 = *(void *)&v1[v6];
  if (!v43)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  char v44 = self;
  id v45 = [*(id *)(v43+ OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_container) bottomAnchor];
  id v46 = [v42 constraintEqualToAnchor:v45];

  *(void *)(v21 + 56) = v46;
  specialized Array._endMutation()();
  sub_100031418(0, (unint64_t *)&qword_1006A5260);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v44 activateConstraints:isa, v21];

  id v48 = [v11 view];
  if (v48)
  {
    uint64_t v49 = v48;
    [v48 setTranslatesAutoresizingMaskIntoConstraints:0];

    [v11 didMoveToParentViewController:v1];
    return;
  }
LABEL_29:
  __break(1u);
}

id sub_10021A0F4(char a1)
{
  v12.receiver = v1;
  v12.super_class = (Class)swift_getObjectType();
  [super viewDidAppear:a1 & 1];
  id result = (id)sub_10021A248();
  if (!result) {
    goto LABEL_10;
  }
  id v4 = *(unsigned char **)&v1[OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC431ICDebugStatusRootViewController_rootView];
  if (!v4)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v5 = result;
  if (v4[OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_panStart + 16] != 1)
  {
LABEL_9:

LABEL_10:
    id result = *(id *)&v1[OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC431ICDebugStatusRootViewController_rootView];
    if (result) {
      return [result setAlpha:1.0];
    }
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v6 = v4;
  CGFloat v7 = (char *)[v5 topViewController];
  if (!v7)
  {
LABEL_8:

    uint64_t v5 = v6;
    goto LABEL_9;
  }
  id v8 = v7;
  id result = [v7 view];
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  CGPoint v9 = result;
  [result safeAreaInsets];
  double v11 = v10;

  id result = *(id *)&v6[OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_yPosition];
  if (result)
  {
    [result setConstant:v11 + 8.0];

    uint64_t v5 = v6;
    uint64_t v6 = v8;
    goto LABEL_8;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_10021A248()
{
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  id v1 = [Strong rootViewController];

  if (v1)
  {
    sub_10002F214(&qword_10069DC40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100524D10;
    *(void *)(inited + 32) = v1;
    *(void *)(inited + 40) = 0;
    id v15 = v1;
    int64_t v3 = 1;
    while (1)
    {
      uint64_t v4 = *(void *)(inited + 40);
      id v5 = *(id *)(inited + 32);
      char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
      if (!isUniquelyReferenced_nonNull_native || (unint64_t)(v3 - 1) > *(void *)(inited + 24) >> 1) {
        uint64_t inited = (uint64_t)sub_1001A858C(isUniquelyReferenced_nonNull_native, v3, 1, (void *)inited);
      }
      sub_10002F214(&qword_10069DC48);
      swift_arrayDestroy();
      uint64_t v7 = *(void *)(inited + 16);
      if (!v7) {
        break;
      }
      memmove((void *)(inited + 32), (const void *)(inited + 48), 16 * v7 - 16);
      *(void *)(inited + 16) = v7 - 1;
      uint64_t v17 = inited;
      self;
      uint64_t v8 = swift_dynamicCastObjCClass();
      if (v8)
      {
        int64_t v3 = v8;
LABEL_18:

        swift_bridgeObjectRelease();
        return v3;
      }
      if (v4 > 2)
      {

        int64_t v3 = *(void *)(inited + 16);
        if (!v3) {
          goto LABEL_18;
        }
      }
      else
      {
        uint64_t v9 = swift_allocObject();
        *(void *)(v9 + 16) = sub_100156D20;
        *(void *)(v9 + 24) = 0;
        id v10 = [v5 childViewControllers];
        sub_100031418(0, &qword_1006A0070);
        uint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (v11 < 0 || (v11 & 0x4000000000000000) != 0)
        {
          unint64_t v13 = swift_bridgeObjectRetain();
          unint64_t v12 = (unint64_t)sub_1001A9A68(v13);
          swift_bridgeObjectRelease();
        }
        else
        {
          unint64_t v12 = v11 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain();
        }
        unint64_t v16 = v12;
        sub_10021A668((uint64_t *)&v16);
        swift_bridgeObjectRelease();
        v18[0] = v16;
        v18[1] = v4 + 1;
        __int16 v19 = 256;
        CGFloat v20 = sub_10021B574;
        uint64_t v21 = v9;
        char v22 = 0;
        swift_retain();
        sub_10022B350(v18);
        swift_release();

        uint64_t inited = v17;
        int64_t v3 = *(void *)(v17 + 16);
        if (!v3) {
          goto LABEL_18;
        }
      }
    }
    _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for ICDebugStatusRootViewController()
{
  return self;
}

uint64_t sub_10021A668(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v2 = sub_100190D94(v2);
    *a1 = v2;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_10021A6E4(v6);
  return specialized ContiguousArray._endMutation()();
}

void sub_10021A6E4(uint64_t *a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = a1[1];
  Swift::Int v5 = _minimumMergeRunLength(_:)(v4);
  if (v5 >= v4)
  {
    if (v4 < 0) {
      goto LABEL_152;
    }
    if (v4) {
      sub_10021AFC4(0, v4, 1, a1);
    }
    return;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_160;
  }
  Swift::Int v7 = v5;
  Swift::Int v119 = v4;
  uint64_t v114 = a1;
  if (v4 < 2)
  {
    id v10 = (char *)_swiftEmptyArrayStorage;
    uint64_t v124 = (uint64_t)_swiftEmptyArrayStorage;
    __dst = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      unint64_t v13 = _swiftEmptyArrayStorage[2];
      if (v13 < 2)
      {
LABEL_129:
        swift_bridgeObjectRelease();
        *(void *)((v124 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
        specialized Array._endMutation()();
        swift_bridgeObjectRelease();
        return;
      }
LABEL_117:
      uint64_t v107 = *v114;
      while (1)
      {
        unint64_t v108 = v13 - 2;
        if (v13 < 2) {
          goto LABEL_147;
        }
        if (!v107) {
          goto LABEL_159;
        }
        uint64_t v109 = *(void *)&v10[16 * v108 + 32];
        uint64_t v110 = *(void *)&v10[16 * v13 + 24];
        sub_10021B130((void **)(v107 + 8 * v109), (id *)(v107 + 8 * *(void *)&v10[16 * v13 + 16]), v107 + 8 * v110, __dst);
        if (v2) {
          goto LABEL_129;
        }
        if (v110 < v109) {
          goto LABEL_148;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v10 = sub_100190A20((uint64_t)v10);
        }
        if (v108 >= *((void *)v10 + 2)) {
          goto LABEL_149;
        }
        uint64_t v111 = &v10[16 * v108 + 32];
        *(void *)uint64_t v111 = v109;
        *((void *)v111 + 1) = v110;
        unint64_t v112 = *((void *)v10 + 2);
        if (v13 > v112) {
          goto LABEL_150;
        }
        memmove(&v10[16 * v13 + 16], &v10[16 * v13 + 32], 16 * (v112 - v13));
        *((void *)v10 + 2) = v112 - 1;
        unint64_t v13 = v112 - 1;
        if (v112 <= 2) {
          goto LABEL_129;
        }
      }
    }
  }
  else
  {
    uint64_t v8 = v6 >> 1;
    sub_100031418(0, &qword_1006A0070);
    uint64_t v9 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
    Swift::Int v4 = v119;
    __dst = (void **)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v124 = v9;
  }
  Swift::Int v116 = v7;
  Swift::Int v11 = 0;
  uint64_t v12 = *a1;
  uint64_t v115 = *a1 - 8;
  id v10 = (char *)_swiftEmptyArrayStorage;
LABEL_15:
  Swift::Int v14 = v11++;
  if (v11 < v4)
  {
    id v15 = v10;
    unint64_t v16 = *(void **)(v12 + 8 * v14);
    id v17 = *(id *)(v12 + 8 * v11);
    id v18 = v16;
    id v19 = [v17 viewIfLoaded];
    if (v19)
    {
      CGFloat v20 = v19;
      id v21 = [v18 viewIfLoaded];
      if (v21)
      {
        char v22 = v21;
        [v20 frame];
        double MinX = CGRectGetMinX(v125);
        [v22 frame];
        double v24 = CGRectGetMinX(v126);

        BOOL v121 = MinX < v24;
        Swift::Int v25 = v14 + 2;
        if (v14 + 2 < v119) {
          goto LABEL_26;
        }
LABEL_34:
        id v10 = v15;
        if (!v121) {
          goto LABEL_42;
        }
        if (v25 < v14) {
          goto LABEL_153;
        }
LABEL_36:
        if (v14 < v25)
        {
          id v36 = (uint64_t *)(v115 + 8 * v25);
          Swift::Int v37 = v25;
          Swift::Int v38 = v14;
          id v39 = (uint64_t *)(v12 + 8 * v14);
          do
          {
            if (v38 != --v37)
            {
              if (!v12) {
                goto LABEL_158;
              }
              uint64_t v40 = *v39;
              *id v39 = *v36;
              *id v36 = v40;
            }
            ++v38;
            --v36;
            ++v39;
          }
          while (v38 < v37);
        }
LABEL_42:
        Swift::Int v11 = v25;
LABEL_43:
        Swift::Int v4 = v119;
        goto LABEL_44;
      }

      id v17 = v18;
    }
    else
    {
      CGFloat v20 = v18;
    }

    Swift::Int v25 = v14 + 2;
    if (v14 + 2 >= v119)
    {
      id v10 = v15;
      goto LABEL_36;
    }
    BOOL v121 = 1;
LABEL_26:
    while (1)
    {
      id v30 = *(void **)(v12 + 8 * v11);
      id v31 = *(id *)(v12 + 8 * v25);
      id v32 = v30;
      id v33 = [v31 viewIfLoaded];
      if (!v33) {
        break;
      }
      id v34 = v33;
      id v35 = [v32 viewIfLoaded];
      if (!v35)
      {

        id v31 = v32;
        goto LABEL_30;
      }
      id v26 = v35;
      [v34 frame];
      double v27 = CGRectGetMinX(v127);
      [v26 frame];
      double v28 = CGRectGetMinX(v128);

      if (((v121 ^ (v27 >= v28)) & 1) == 0) {
        goto LABEL_34;
      }
LABEL_25:
      Swift::Int v29 = v25 + 1;
      Swift::Int v11 = v25;
      Swift::Int v25 = v29;
      if (v29 >= v119)
      {
        Swift::Int v25 = v29;
        goto LABEL_34;
      }
    }
    id v34 = v32;
LABEL_30:

    if (!v121)
    {
      Swift::Int v11 = v25;
      id v10 = v15;
      goto LABEL_43;
    }
    goto LABEL_25;
  }
LABEL_44:
  if (v11 >= v4) {
    goto LABEL_67;
  }
  if (__OFSUB__(v11, v14)) {
    goto LABEL_151;
  }
  if (v11 - v14 >= v116) {
    goto LABEL_67;
  }
  if (__OFADD__(v14, v116)) {
    goto LABEL_154;
  }
  if (v14 + v116 >= v4) {
    Swift::Int v41 = v4;
  }
  else {
    Swift::Int v41 = v14 + v116;
  }
  if (v41 >= v14)
  {
    if (v11 == v41) {
      goto LABEL_67;
    }
    uint64_t v113 = v10;
    uint64_t v42 = v115 + 8 * v11;
    Swift::Int v117 = v41;
    Swift::Int v118 = v14;
LABEL_55:
    uint64_t v43 = *(void **)(v12 + 8 * v11);
    uint64_t v122 = v42;
    while (1)
    {
      char v44 = *(void **)v42;
      id v45 = v43;
      id v46 = v44;
      id v47 = [v45 viewIfLoaded];
      if (v47)
      {
        id v48 = v47;
        id v49 = [v46 viewIfLoaded];
        if (v49)
        {
          uint64_t v50 = v49;
          [v48 frame];
          double v51 = CGRectGetMinX(v129);
          [v50 frame];
          double v52 = CGRectGetMinX(v130);

          if (v51 >= v52) {
            goto LABEL_54;
          }
          goto LABEL_63;
        }

        id v45 = v46;
      }
      else
      {
        id v48 = v46;
      }

LABEL_63:
      if (!v12) {
        goto LABEL_156;
      }
      uint64_t v53 = *(void **)v42;
      uint64_t v43 = *(void **)(v42 + 8);
      *(void *)uint64_t v42 = v43;
      *(void *)(v42 + 8) = v53;
      v42 -= 8;
      if (v11 == ++v14)
      {
LABEL_54:
        ++v11;
        uint64_t v42 = v122 + 8;
        Swift::Int v14 = v118;
        if (v11 != v117) {
          goto LABEL_55;
        }
        Swift::Int v11 = v117;
        id v10 = v113;
LABEL_67:
        if (v11 < v14) {
          goto LABEL_146;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v10 = sub_1001904C8(0, *((void *)v10 + 2) + 1, 1, v10);
        }
        unint64_t v55 = *((void *)v10 + 2);
        unint64_t v54 = *((void *)v10 + 3);
        unint64_t v13 = v55 + 1;
        if (v55 >= v54 >> 1) {
          id v10 = sub_1001904C8((char *)(v54 > 1), v55 + 1, 1, v10);
        }
        *((void *)v10 + 2) = v13;
        long long v123 = v10 + 32;
        uint64_t v56 = &v10[16 * v55 + 32];
        *(void *)uint64_t v56 = v14;
        *((void *)v56 + 1) = v11;
        if (v55)
        {
          long long v57 = v10 + 32;
          while (1)
          {
            unint64_t v58 = v13 - 1;
            if (v13 >= 4)
            {
              uint64_t v63 = &v57[16 * v13];
              uint64_t v64 = *((void *)v63 - 8);
              uint64_t v65 = *((void *)v63 - 7);
              BOOL v69 = __OFSUB__(v65, v64);
              uint64_t v66 = v65 - v64;
              if (v69) {
                goto LABEL_135;
              }
              uint64_t v68 = *((void *)v63 - 6);
              uint64_t v67 = *((void *)v63 - 5);
              BOOL v69 = __OFSUB__(v67, v68);
              uint64_t v61 = v67 - v68;
              char v62 = v69;
              if (v69) {
                goto LABEL_136;
              }
              unint64_t v70 = v13 - 2;
              uint64_t v71 = &v57[16 * v13 - 32];
              uint64_t v73 = *(void *)v71;
              uint64_t v72 = *((void *)v71 + 1);
              BOOL v69 = __OFSUB__(v72, v73);
              uint64_t v74 = v72 - v73;
              if (v69) {
                goto LABEL_138;
              }
              BOOL v69 = __OFADD__(v61, v74);
              uint64_t v75 = v61 + v74;
              if (v69) {
                goto LABEL_141;
              }
              if (v75 >= v66)
              {
                uint64_t v93 = &v57[16 * v58];
                uint64_t v95 = *(void *)v93;
                uint64_t v94 = *((void *)v93 + 1);
                BOOL v69 = __OFSUB__(v94, v95);
                uint64_t v96 = v94 - v95;
                if (v69) {
                  goto LABEL_145;
                }
                BOOL v86 = v61 < v96;
                goto LABEL_105;
              }
            }
            else
            {
              if (v13 != 3)
              {
                uint64_t v87 = *((void *)v10 + 4);
                uint64_t v88 = *((void *)v10 + 5);
                BOOL v69 = __OFSUB__(v88, v87);
                uint64_t v80 = v88 - v87;
                char v81 = v69;
                goto LABEL_99;
              }
              uint64_t v60 = *((void *)v10 + 4);
              uint64_t v59 = *((void *)v10 + 5);
              BOOL v69 = __OFSUB__(v59, v60);
              uint64_t v61 = v59 - v60;
              char v62 = v69;
            }
            if (v62) {
              goto LABEL_137;
            }
            unint64_t v70 = v13 - 2;
            uint64_t v76 = &v57[16 * v13 - 32];
            uint64_t v78 = *(void *)v76;
            uint64_t v77 = *((void *)v76 + 1);
            BOOL v79 = __OFSUB__(v77, v78);
            uint64_t v80 = v77 - v78;
            char v81 = v79;
            if (v79) {
              goto LABEL_140;
            }
            uint64_t v82 = &v57[16 * v58];
            uint64_t v84 = *(void *)v82;
            uint64_t v83 = *((void *)v82 + 1);
            BOOL v69 = __OFSUB__(v83, v84);
            uint64_t v85 = v83 - v84;
            if (v69) {
              goto LABEL_143;
            }
            if (__OFADD__(v80, v85)) {
              goto LABEL_144;
            }
            if (v80 + v85 >= v61)
            {
              BOOL v86 = v61 < v85;
LABEL_105:
              if (v86) {
                unint64_t v58 = v70;
              }
              goto LABEL_107;
            }
LABEL_99:
            if (v81) {
              goto LABEL_139;
            }
            uint64_t v89 = &v57[16 * v58];
            uint64_t v91 = *(void *)v89;
            uint64_t v90 = *((void *)v89 + 1);
            BOOL v69 = __OFSUB__(v90, v91);
            uint64_t v92 = v90 - v91;
            if (v69) {
              goto LABEL_142;
            }
            if (v92 < v80) {
              goto LABEL_14;
            }
LABEL_107:
            unint64_t v97 = v58 - 1;
            if (v58 - 1 >= v13)
            {
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
LABEL_147:
              __break(1u);
LABEL_148:
              __break(1u);
LABEL_149:
              __break(1u);
LABEL_150:
              __break(1u);
LABEL_151:
              __break(1u);
LABEL_152:
              __break(1u);
LABEL_153:
              __break(1u);
LABEL_154:
              __break(1u);
              goto LABEL_155;
            }
            uint64_t v98 = v12;
            if (!v12) {
              goto LABEL_157;
            }
            uint64_t v99 = v10;
            char v100 = v57;
            char v101 = &v57[16 * v97];
            uint64_t v102 = *(void *)v101;
            long long v103 = &v100[16 * v58];
            uint64_t v104 = *((void *)v103 + 1);
            uint64_t v105 = v98;
            sub_10021B130((void **)(v98 + 8 * *(void *)v101), (id *)(v98 + 8 * *(void *)v103), v98 + 8 * v104, __dst);
            if (v1) {
              goto LABEL_129;
            }
            if (v104 < v102) {
              goto LABEL_132;
            }
            if (v58 > *((void *)v99 + 2)) {
              goto LABEL_133;
            }
            *(void *)char v101 = v102;
            long long v57 = v123;
            *(void *)&v123[16 * v97 + 8] = v104;
            unint64_t v106 = *((void *)v99 + 2);
            if (v58 >= v106) {
              goto LABEL_134;
            }
            id v10 = v99;
            unint64_t v13 = v106 - 1;
            memmove(v103, v103 + 16, 16 * (v106 - 1 - v58));
            *((void *)v99 + 2) = v106 - 1;
            uint64_t v12 = v105;
            if (v106 <= 2) {
              goto LABEL_14;
            }
          }
        }
        unint64_t v13 = 1;
LABEL_14:
        Swift::Int v4 = v119;
        if (v11 >= v119)
        {
          uint64_t v2 = v1;
          if (v13 < 2) {
            goto LABEL_129;
          }
          goto LABEL_117;
        }
        goto LABEL_15;
      }
    }
  }
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_10021AFC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v5 = *a4;
    uint64_t v6 = *a4 + 8 * a3 - 8;
LABEL_5:
    Swift::Int v7 = *(void **)(v5 + 8 * v4);
    uint64_t v8 = a1;
    uint64_t v21 = v6;
    while (1)
    {
      uint64_t v9 = *(void **)v6;
      id v10 = v7;
      id v11 = v9;
      id v12 = [v10 viewIfLoaded];
      if (!v12) {
        break;
      }
      unint64_t v13 = v12;
      id v14 = [v11 viewIfLoaded];
      if (!v14)
      {

        id v10 = v11;
        goto LABEL_12;
      }
      id v15 = v14;
      [v13 frame];
      double MinX = CGRectGetMinX(v22);
      [v15 frame];
      double v17 = CGRectGetMinX(v23);

      if (MinX >= v17) {
        goto LABEL_4;
      }
LABEL_13:
      if (!v5)
      {
        __break(1u);
        return;
      }
      id v18 = *(void **)v6;
      Swift::Int v7 = *(void **)(v6 + 8);
      *(void *)uint64_t v6 = v7;
      *(void *)(v6 + 8) = v18;
      v6 -= 8;
      if (v4 == ++v8)
      {
LABEL_4:
        ++v4;
        uint64_t v6 = v21 + 8;
        if (v4 == a2) {
          return;
        }
        goto LABEL_5;
      }
    }
    unint64_t v13 = v11;
LABEL_12:

    goto LABEL_13;
  }
}

uint64_t sub_10021B130(void **__src, id *a2, unint64_t a3, void **__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  Swift::Int v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  id v49 = __src;
  id v48 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 < -7) {
      goto LABEL_54;
    }
    if (__dst != a2 || &a2[v13] <= __dst) {
      memmove(__dst, a2, 8 * v13);
    }
    double v28 = &v4[v13];
    id v47 = v28;
    id v49 = v6;
    if (v7 >= v6 || v11 < 8)
    {
LABEL_53:
      sub_1001907D8((void **)&v49, (const void **)&v48, &v47);
      return 1;
    }
    Swift::Int v29 = (id *)(a3 - 8);
    id v30 = v6;
    uint64_t v42 = v4;
    char v44 = v7;
    while (1)
    {
      id v45 = v29 + 1;
      unint64_t v46 = (unint64_t)v28;
      id v31 = v28 - 1;
      id v32 = *--v30;
      id v33 = *(v28 - 1);
      id v34 = v32;
      id v35 = [v33 viewIfLoaded];
      if (!v35) {
        break;
      }
      id v36 = v35;
      id v37 = [v34 viewIfLoaded];
      if (!v37)
      {

        id v33 = v34;
        uint64_t v4 = v42;
        goto LABEL_47;
      }
      Swift::Int v38 = v37;
      [v36 frame];
      double MinX = CGRectGetMinX(v52);
      [v38 frame];
      double v40 = CGRectGetMinX(v53);

      uint64_t v4 = v42;
      if (MinX >= v40)
      {
        id v47 = v31;
        if ((unint64_t)v45 < v46 || (unint64_t)v29 >= v46 || v45 != (id *)v46) {
          id *v29 = *v31;
        }
        id v30 = v6;
        double v28 = v31;
        if (v6 <= v44) {
          goto LABEL_53;
        }
        goto LABEL_52;
      }
LABEL_48:
      if (v45 != v6 || v29 >= v6) {
        id *v29 = *v30;
      }
      id v49 = v30;
      double v28 = (void **)v46;
      if (v30 <= v44) {
        goto LABEL_53;
      }
LABEL_52:
      --v29;
      uint64_t v6 = v30;
      if (v28 <= v4) {
        goto LABEL_53;
      }
    }
    id v36 = v34;
LABEL_47:

    goto LABEL_48;
  }
  if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    id v14 = &v4[v10];
    id v47 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      id v15 = &selRef_unsupportedFolderButton;
      while (1)
      {
        unint64_t v16 = v4;
        double v17 = *v4;
        id v18 = *v6;
        id v19 = v17;
        id v20 = [v18 v15[231]];
        if (!v20) {
          break;
        }
        uint64_t v21 = v15;
        CGRect v22 = v20;
        uint64_t v43 = v7;
        id v23 = [v19 v21[231]];
        if (!v23)
        {

          id v18 = v19;
          goto LABEL_21;
        }
        double v24 = v23;
        [v22 frame];
        double v25 = CGRectGetMinX(v50);
        [v24 frame];
        double v26 = CGRectGetMinX(v51);

        uint64_t v4 = v16;
        Swift::Int v7 = v43;
        if (v25 < v26) {
          goto LABEL_22;
        }
        id v15 = &selRef_unsupportedFolderButton;
        if (v43 != v16) {
          void *v43 = *v16;
        }
        uint64_t v4 = v16 + 1;
        id v48 = v16 + 1;
        double v27 = v6;
LABEL_26:
        ++v7;
        if (v4 < v14)
        {
          uint64_t v6 = v27;
          if ((unint64_t)v27 < a3) {
            continue;
          }
        }
        id v49 = v7;
        goto LABEL_53;
      }
      CGRect v22 = v19;
LABEL_21:

      uint64_t v4 = v16;
LABEL_22:
      double v27 = v6 + 1;
      id v15 = &selRef_unsupportedFolderButton;
      if (v7 < v6 || v7 >= v27 || v7 != v6) {
        id *v7 = *v6;
      }
      goto LABEL_26;
    }
    goto LABEL_53;
  }
LABEL_54:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10021B53C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void *sub_10021B574@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  void *(*v7)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v8;
  uint64_t v9;
  char v10;

  int64_t v3 = result;
  uint64_t v5 = *result;
  char v6 = *((unsigned char *)result + 8);
  if (*((unsigned char *)result + 9) == 1)
  {
    *((unsigned char *)result + 9) = 0;
  }
  else if (result[1])
  {
    char v6 = 1;
  }
  else
  {
    Swift::Int v7 = *(void *(**)(uint64_t *__return_ptr, uint64_t *))(v2 + 16);
    int64_t v8 = *result;
    uint64_t result = v7(&v9, &v8);
    uint64_t v5 = v9;
    char v6 = v10;
    *int64_t v3 = v9;
    *((unsigned char *)v3 + 8) = v6;
  }
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v6;
  return result;
}

unint64_t sub_10021B600()
{
  unint64_t result = qword_10069F820;
  if (!qword_10069F820)
  {
    type metadata accessor for Level(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069F820);
  }
  return result;
}

const char *sub_10021B658()
{
  return "_ICDebugWindowEnabled";
}

id sub_10021B664@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 _ICDebugWindowEnabled];
  *a2 = (_BYTE)result;
  return result;
}

id sub_10021B698(unsigned __int8 *a1, id *a2)
{
  return [*a2 set_ICDebugWindowEnabled:*a1];
}

uint64_t sub_10021B6AC()
{
  swift_unknownObjectUnownedDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10021B6E4()
{
}

uint64_t sub_10021B6EC()
{
  sub_10002F214(&qword_10069D0C8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100527F30;
  sub_10002F214(&qword_10069BA00);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100524CE0;
  uint64_t v2 = self;
  *(void *)(v1 + 32) = [v2 traitCollectionWithUserInterfaceStyle:1];
  *(void *)(v1 + 40) = [v2 traitCollectionWithUserInterfaceStyle:2];
  specialized Array._endMutation()();
  *(void *)(v0 + 32) = v1;
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100524CE0;
  *(void *)(v3 + 32) = [v2 traitCollectionWithAccessibilityContrast:0];
  *(void *)(v3 + 40) = [v2 traitCollectionWithAccessibilityContrast:1];
  uint64_t result = specialized Array._endMutation()();
  *(void *)(v0 + 40) = v3;
  off_10069F830 = (_UNKNOWN *)v0;
  return result;
}

uint64_t sub_10021B848()
{
  uint64_t v1 = *(void **)(v0
                  + OBJC_IVAR____TtC11MobileNotes33ICSystemPaperChromeLayerGenerator____lazy_storage___chromeLayerTraitCollections);
  if (v1)
  {
    swift_bridgeObjectRetain();
    return (uint64_t)v1;
  }
  uint64_t v40 = OBJC_IVAR____TtC11MobileNotes33ICSystemPaperChromeLayerGenerator____lazy_storage___chromeLayerTraitCollections;
  uint64_t v41 = v0;
  if (qword_10069AD10 != -1) {
    goto LABEL_61;
  }
LABEL_4:
  uint64_t v2 = off_10069F830;
  sub_10002F214(&qword_10069D0C8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100524D10;
  sub_10002F214(&qword_10069BA00);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100529F20;
  id v5 = objc_allocWithZone((Class)UITraitCollection);
  swift_bridgeObjectRetain();
  *(void *)(v4 + 32) = [v5 init];
  specialized Array._endMutation()();
  *(void *)(inited + 32) = v4;
  uint64_t v43 = v2[2];
  if (v43)
  {
    uint64_t v42 = (char *)(v2 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
    Swift::Int v7 = (void *)inited;
    while (1)
    {
      uint64_t v46 = v7[2];
      if (v46) {
        break;
      }
      swift_bridgeObjectRelease();
      Swift::Int v7 = _swiftEmptyArrayStorage;
LABEL_7:
      if (++v6 == v43)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        uint64_t v33 = v7[2];
        if (v33) {
          goto LABEL_48;
        }
LABEL_52:
        swift_bridgeObjectRelease();
        uint64_t v1 = _swiftEmptyArrayStorage;
        goto LABEL_53;
      }
    }
    unint64_t v8 = *(void *)&v42[8 * v6];
    uint64_t v44 = v6;
    if (v8 >> 62)
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t v10 = 0;
    id v45 = v7 + 4;
    uint64_t v11 = _swiftEmptyArrayStorage;
    while (1)
    {
      if (__OFADD__(v10, 1))
      {
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        swift_once();
        goto LABEL_4;
      }
      uint64_t v48 = v10 + 1;
      if (v9)
      {
        id v47 = v11;
        uint64_t v13 = v45[v10];
        swift_bridgeObjectRetain();
        sub_100169B8C(0, v9 & ~(v9 >> 63), 0);
        if (v9 < 0) {
          goto LABEL_58;
        }
        for (uint64_t i = 0; i != v9; ++i)
        {
          if ((v8 & 0xC000000000000001) != 0) {
            id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v15 = *(id *)(v8 + 8 * i + 32);
          }
          unint64_t v16 = v15;
          swift_bridgeObjectRetain();
          id v17 = v16;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();

          unint64_t v19 = _swiftEmptyArrayStorage[2];
          unint64_t v18 = _swiftEmptyArrayStorage[3];
          if (v19 >= v18 >> 1) {
            sub_100169B8C(v18 > 1, v19 + 1, 1);
          }
          _swiftEmptyArrayStorage[2] = v19 + 1;
          _swiftEmptyArrayStorage[v19 + 4] = v13;
        }
        swift_bridgeObjectRelease();
        uint64_t v11 = v47;
      }
      uint64_t v20 = _swiftEmptyArrayStorage[2];
      int64_t v21 = v11[2];
      int64_t v22 = v21 + v20;
      if (__OFADD__(v21, v20)) {
        goto LABEL_56;
      }
      id v23 = v11;
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      double v25 = v23;
      if ((isUniquelyReferenced_nonNull_native & 1) != 0 && v22 <= v23[3] >> 1)
      {
        if (_swiftEmptyArrayStorage[2]) {
          goto LABEL_36;
        }
      }
      else
      {
        if (v21 <= v22) {
          int64_t v26 = v21 + v20;
        }
        else {
          int64_t v26 = v21;
        }
        double v25 = sub_1001A869C((void *)isUniquelyReferenced_nonNull_native, v26, 1, v23);
        if (_swiftEmptyArrayStorage[2])
        {
LABEL_36:
          uint64_t v27 = v25[2];
          if ((v25[3] >> 1) - v27 < v20) {
            goto LABEL_59;
          }
          double v28 = &v25[v27 + 4];
          if (&_swiftEmptyArrayStorage[4] < &v28[v20] && v28 < &_swiftEmptyArrayStorage[v20 + 4])
          {
            uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
            __break(1u);
            return result;
          }
          uint64_t v12 = v25;
          sub_10002F214((uint64_t *)&unk_10069D0D0);
          swift_arrayInitWithCopy();
          if (v20)
          {
            uint64_t v30 = v12[2];
            BOOL v31 = __OFADD__(v30, v20);
            uint64_t v32 = v30 + v20;
            if (v31) {
              goto LABEL_60;
            }
            void v12[2] = v32;
          }
          goto LABEL_13;
        }
      }
      uint64_t v12 = v25;
      if (v20) {
        goto LABEL_57;
      }
LABEL_13:
      swift_bridgeObjectRelease();
      uint64_t v10 = v48;
      uint64_t v11 = v12;
      if (v48 == v46)
      {
        Swift::Int v7 = v12;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        uint64_t v6 = v44;
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v33 = *(void *)(inited + 16);
  if (!v33) {
    goto LABEL_52;
  }
LABEL_48:
  specialized ContiguousArray.reserveCapacity(_:)();
  id v34 = self;
  sub_10021C998();
  uint64_t v35 = 0;
  do
  {
    uint64_t v36 = v35 + 1;
    swift_bridgeObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v38 = [v34 traitCollectionWithTraitsFromCollections:isa];

    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
    uint64_t v35 = v36;
  }
  while (v33 != v36);
  uint64_t v1 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
LABEL_53:
  *(void *)(v41 + v40) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return (uint64_t)v1;
}

void sub_10021BE58(void *a1, id a2)
{
  id v3 = [a2 view];
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = [v3 layer];

    id v6 = [a1 CGContext];
    [v5 renderInContext:v6];
  }
  else
  {
    __break(1u);
  }
}

void sub_10021BF14(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void (**)(void))(a1 + 32);
  id v3 = a2;
  v2();
}

uint64_t type metadata accessor for ICSystemPaperChromeLayerGenerator()
{
  return self;
}

void sub_10021C0C4(unint64_t a1)
{
  if (![self isMainThread])
  {
    __break(1u);
    goto LABEL_21;
  }
  id v6 = [self sharedContext];
  if (!v6) {
    goto LABEL_29;
  }
  Swift::Int v7 = v6;
  id v8 = [v6 managedObjectContext];

  if (!v8) {
    goto LABEL_29;
  }
  id v9 = [self newEmptyNoteInContext:v8];
  sub_10002F214(&qword_10069BA00);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_100524CE0;
  *(void *)(v10 + 32) = a1;
  uint64_t v11 = self;
  id v3 = (id)a1;
  *(void *)(v10 + 40) = [v11 traitCollectionWithUserInterfaceLevel:1];
  aBlock[0] = v10;
  specialized Array._endMutation()();
  sub_10021C998();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v46 = [v11 traitCollectionWithTraitsFromCollections:isa];

  uint64_t v2 = (char *)sub_1003B8194(0, (uint64_t)_swiftEmptyArrayStorage);
  uint64_t v1 = &selRef_unsupportedFolderButton;
  id v13 = [v2 view];
  if (!v13)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  id v14 = v13;
  type metadata accessor for ThumbnailGeneratorSystemPaper();
  static ThumbnailGeneratorSystemPaper.chromeSize.getter();
  [v14 setBounds:0.0, 0.0, v15, v16];

  id v17 = [v2 view];
  if (!v17)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  unint64_t v18 = v17;
  [v17 _setLocalOverrideTraitCollection:v3];

  id v19 = [v2 view];
  if (!v19)
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v20 = v19;
  if ([v3 layoutDirection] == (id)1) {
    uint64_t v21 = 4;
  }
  else {
    uint64_t v21 = 3;
  }
  [v20 setSemanticContentAttribute:v21];

  id v22 = [v2 view];
  if (!v22) {
    goto LABEL_33;
  }
  id v23 = v22;
  [v22 setNeedsLayout];

  id v24 = [v2 view];
  if (!v24)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  double v25 = v24;
  [v24 layoutIfNeeded];

  unint64_t v26 = sub_1003A763C();
  a1 = v26;
  id v45 = v8;
  uint64_t v4 = v9;
  if (v26 >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain();
    uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
    if (!v27) {
      goto LABEL_22;
    }
    goto LABEL_14;
  }
  uint64_t v27 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v27) {
    goto LABEL_22;
  }
LABEL_14:
  if (v27 < 1)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  for (uint64_t i = 0; i != v27; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v29 = *(id *)(a1 + 8 * i + 32);
    }
    uint64_t v30 = v29;
    [v29 setAlpha:0.0];
  }
LABEL_22:
  swift_bridgeObjectRelease_n();
  id v31 = v4;
  sub_1003ADBE8(v4, 0, 0, 0, 0);

  uint64_t v32 = *(void **)&v2[OBJC_IVAR___ICSystemPaperViewController_currentNoteEditorViewController];
  if (!v32)
  {
LABEL_25:
    id v37 = [self formatForTraitCollection:v3];
    static ThumbnailGeneratorSystemPaper.chromeSize.getter();
    id v40 = [objc_allocWithZone((Class)UIGraphicsImageRenderer) initWithSize:v37 format:v38];
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 16) = v2;
    uint64_t v42 = swift_allocObject();
    *(void *)(v42 + 16) = sub_10021CA10;
    *(void *)(v42 + 24) = v41;
    aBlock[4] = sub_10021CA28;
    aBlock[5] = v42;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10021BF14;
    aBlock[3] = &unk_100630AD8;
    uint64_t v43 = _Block_copy(aBlock);
    uint64_t v44 = v2;
    swift_retain();
    swift_release();
    [v40 imageWithActions:v43];

    _Block_release(v43);
    LOBYTE(v44) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v44 & 1) == 0)
    {
      [v45 deleteObject:v31];
      swift_release();

      return;
    }
    __break(1u);
    goto LABEL_28;
  }
  id v33 = [v32 v1[220]];
  if (v33)
  {
    id v34 = v33;
    id v35 = [self systemBackgroundColor];
    id v36 = [v35 resolvedColorWithTraitCollection:v46];

    [v34 setBackgroundColor:v36];
    goto LABEL_25;
  }
LABEL_35:
  __break(1u);
}

uint64_t sub_10021C6E4(unint64_t a1)
{
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v27 = v3;
  uint64_t v28 = v4;
  __chkstk_darwin(v3);
  id v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    id v8 = _swiftEmptyArrayStorage;
    if (!v7) {
      return (uint64_t)v8;
    }
    id v29 = _swiftEmptyArrayStorage;
    uint64_t result = sub_100169BAC(0, v7 & ~(v7 >> 63), 0);
    if (v7 < 0) {
      break;
    }
    id v8 = v29;
    unint64_t v26 = a1 & 0xC000000000000001;
    uint64_t v10 = type metadata accessor for ThumbnailGeneratorSystemPaper();
    unint64_t v24 = a1;
    uint64_t v25 = v10;
    uint64_t v11 = 0;
    v22[1] = v28 + 32;
    uint64_t v23 = v7;
    while (v7 != v11)
    {
      if (v26) {
        id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v12 = *(id *)(a1 + 8 * v11 + 32);
      }
      id v13 = v12;
      static ThumbnailGeneratorSystemPaper.chromeBackdropImageUrl(for:)();
      sub_10021C0C4((unint64_t)v13);
      double v15 = v14;
      id v16 = [v14 ic_PNGData];
      uint64_t v17 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v19 = v18;

      Data.write(to:options:)();
      if (v1)
      {
        (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v27);
        sub_10017253C(v17, v19);
        swift_release();

        return (uint64_t)v8;
      }

      sub_10017253C(v17, v19);
      id v29 = v8;
      unint64_t v21 = v8[2];
      unint64_t v20 = v8[3];
      if (v21 >= v20 >> 1)
      {
        sub_100169BAC(v20 > 1, v21 + 1, 1);
        id v8 = v29;
      }
      ++v11;
      _OWORD v8[2] = v21 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v28 + 32))((unint64_t)v8+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v28 + 72) * v21, v6, v27);
      uint64_t v7 = v23;
      a1 = v24;
      if (v23 == v11) {
        return (uint64_t)v8;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

unint64_t sub_10021C998()
{
  unint64_t result = qword_10069C280;
  if (!qword_10069C280)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10069C280);
  }
  return result;
}

uint64_t sub_10021C9D8()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10021CA10(void *a1)
{
  sub_10021BE58(a1, *(id *)(v1 + 16));
}

uint64_t sub_10021CA18()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10021CA28()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10021CE3C(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR___ICQuotaExceededAlertController_lastShowDate;
  swift_beginAccess();
  sub_10021E924(a1, v3);
  swift_endAccess();
  id v4 = [self standardUserDefaults];
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  NSString v6 = String._bridgeToObjectiveC()();
  [v4 setObject:isa forKey:v6];

  return sub_10002B754(a1, (uint64_t *)&unk_1006A3E20);
}

uint64_t sub_10021D0C0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = &v21[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v7 = &v21[-v6];
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = &v21[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((*(unsigned char *)(v1 + OBJC_IVAR___ICQuotaExceededAlertController_ignoresDebouncing) & 1) == 0)
  {
    if (*(unsigned char *)(v1 + OBJC_IVAR___ICQuotaExceededAlertController_didShowForRecord)) {
      return 0;
    }
    *(unsigned char *)(v1 + OBJC_IVAR___ICQuotaExceededAlertController_didShowForRecord) = 1;
    NSString v13 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                                + OBJC_IVAR___ICQuotaExceededAlertController_recordID), "recordName"));
    if (!v13)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v13 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    [self setDidShowExceededStorageQuotaAlert:1 forNoteWithIdentifier:v13];

    uint64_t v14 = v1 + OBJC_IVAR___ICQuotaExceededAlertController_lastShowDate;
    swift_beginAccess();
    sub_10021E8BC(v14, (uint64_t)v7);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      sub_10002B754((uint64_t)v7, (uint64_t *)&unk_1006A3E20);
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 32))(v11, v7, v8);
      Date.timeIntervalSince(_:)();
      double v16 = v15;
      (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
      if (v16 < *(double *)(v1 + OBJC_IVAR___ICQuotaExceededAlertController_minimumLastShowDateInterval)) {
        return 0;
      }
    }
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 16))(v5, v1 + OBJC_IVAR___ICQuotaExceededAlertController_date, v8);
    uint64_t v12 = 1;
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
    swift_beginAccess();
    sub_10021E924((uint64_t)v5, v14);
    swift_endAccess();
    id v17 = [self standardUserDefaults];
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    NSString v19 = String._bridgeToObjectiveC()();
    [v17 setObject:isa forKey:v19];

    sub_10002B754((uint64_t)v5, (uint64_t *)&unk_1006A3E20);
    return v12;
  }
  return 1;
}

uint64_t sub_10021D54C()
{
  id v1 = [self mainBundle];
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v1 localizedStringForKey:v2 value:0 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  v16[0] = v4;
  v16[1] = v6;
  uint64_t v7 = *(void **)&v0[OBJC_IVAR___ICQuotaExceededAlertController_managedObjectContext];
  if (!v7) {
    return v4;
  }
  uint64_t v8 = (void *)swift_allocObject();
  _OWORD v8[2] = v0;
  int64_t v8[3] = v7;
  void v8[4] = v16;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_10021E858;
  *(void *)(v9 + 24) = v8;
  v15[4] = sub_100031D5C;
  v15[5] = v9;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  void v15[2] = sub_100031D30;
  void v15[3] = &unk_100630B78;
  uint64_t v10 = _Block_copy(v15);
  id v11 = v7;
  uint64_t v12 = v0;
  swift_retain();
  swift_release();
  [v11 performBlockAndWait:v10];

  _Block_release(v10);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
    uint64_t v4 = v16[0];
    swift_release();
    return v4;
  }
  __break(1u);
  return result;
}

void sub_10021D75C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR___ICQuotaExceededAlertController_recordID);
  id v6 = *(id *)(a1 + OBJC_IVAR___ICQuotaExceededAlertController_cloudContext);
  NSString v7 = String._bridgeToObjectiveC()();
  sub_10002F214(&qword_10069D1E0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_100524D10;
  *(void *)(v8 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v8 + 40) = v9;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v22 = [v6 existingCloudObjectForRecordID:v5 recordType:0 accountID:v7 context:a2 excludingRecordTypes:isa];

  if (v22)
  {
    self;
    id v11 = (void *)swift_dynamicCastObjCClass();
    if (!v11) {
      goto LABEL_10;
    }
    uint64_t v12 = v11;
    id v13 = [v11 quotedTitle];
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v16 = v15;

    swift_bridgeObjectRelease();
    uint64_t v17 = HIBYTE(v16) & 0xF;
    if ((v16 & 0x2000000000000000) == 0) {
      uint64_t v17 = v14 & 0xFFFFFFFFFFFFLL;
    }
    if (v17)
    {
      id v18 = [v12 quotedTitle];
      uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v21 = v20;

      *a3 = v19;
      a3[1] = v21;
      swift_bridgeObjectRelease();
    }
    else
    {
LABEL_10:
    }
  }
}

id sub_10021D974()
{
  sub_10021DD34();
  sub_10021DE28();
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v3 = [self alertControllerWithTitle:v1 message:v2 preferredStyle:1];

  LOBYTE(v2) = [*(id *)(v0 + OBJC_IVAR___ICQuotaExceededAlertController_recordID) ic_isOwnedByCurrentUser];
  uint64_t v4 = self;
  id v5 = [v4 mainBundle];
  if (v2)
  {
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [v5 localizedStringForKey:v6 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v9 = self;
    id v10 = [v9 actionWithTitle:v8 style:1 handler:0];

    id v11 = [v4 mainBundle];
    NSString v12 = String._bridgeToObjectiveC()();
    id v13 = [v11 localizedStringForKey:v12 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v21[4] = sub_10021E03C;
    v21[5] = 0;
    v21[0] = _NSConcreteStackBlock;
    v21[1] = 1107296256;
    void v21[2] = sub_1002B6294;
    v21[3] = &unk_100630B00;
    unint64_t v15 = _Block_copy(v21);
    swift_release();
    id v16 = [v9 actionWithTitle:v14 style:0 handler:v15];
    _Block_release(v15);

    [v3 addAction:v10];
    [v3 addAction:v16];
  }
  else
  {
    NSString v17 = String._bridgeToObjectiveC()();
    id v18 = [v5 localizedStringForKey:v17 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v16 = [self actionWithTitle:v19 style:1 handler:0];

    [v3 addAction:v16];
  }

  return v3;
}

uint64_t sub_10021DD34()
{
  [*(id *)(v0 + OBJC_IVAR___ICQuotaExceededAlertController_recordID) ic_isOwnedByCurrentUser];
  id v1 = [self mainBundle];
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v1 localizedStringForKey:v2 value:0 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v4;
}

char *sub_10021DE28()
{
  if (objc_msgSend(*(id *)(v0 + OBJC_IVAR___ICQuotaExceededAlertController_recordID), "ic_isOwnedByCurrentUser"))
  {
    id v1 = [self mainBundle];
    NSString v2 = String._bridgeToObjectiveC()();
    id v3 = [v1 localizedStringForKey:v2 value:0 table:0];

    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    return (char *)v4;
  }
  else
  {
    sub_10002F214((uint64_t *)&unk_1006A1950);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100524D10;
    uint64_t v7 = sub_10021D54C();
    uint64_t v9 = v8;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_1001BBFD8();
    *(void *)(inited + 32) = v7;
    *(void *)(inited + 40) = v9;
    id v10 = [self mainBundle];
    NSString v11 = String._bridgeToObjectiveC()();
    id v12 = [v10 localizedStringForKey:v11 value:0 table:0];

    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v15 = v14;

    swift_bridgeObjectRetain();
    id v16 = sub_10015DE40(inited, v13, v15);
    swift_bridgeObjectRelease_n();
    swift_setDeallocating();
    sub_10002F214(&qword_10069C1A8);
    swift_arrayDestroy();
    return v16;
  }
}

id sub_10021E03C()
{
  uint64_t v0 = self;

  return [v0 ic_openICloudStorageSettings];
}

void sub_10021E0B8(uint64_t a1, void *a2)
{
  id v3 = [self sharedApplication];
  id v4 = [v3 applicationState];

  if (v4 != (id)2)
  {
    id v7 = sub_10021D974();
    id v5 = [a2 rootViewController];
    if (v5)
    {
      NSString v6 = v5;
      [v5 presentViewController:v7 animated:1 completion:0];
    }
  }
}

uint64_t sub_10021E2A8()
{
  return type metadata accessor for QuotaExceededAlertController();
}

uint64_t type metadata accessor for QuotaExceededAlertController()
{
  uint64_t result = qword_10069F8A0;
  if (!qword_10069F8A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10021E2FC()
{
  type metadata accessor for Date();
  if (v0 <= 0x3F)
  {
    sub_100005808();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

id sub_10021E40C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v5 = v4;
  uint64_t v37 = a4;
  uint64_t v32 = a2;
  uint64_t v33 = a3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v7 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4[OBJC_IVAR___ICQuotaExceededAlertController_ignoresDebouncing] = 0;
  id v10 = &v4[OBJC_IVAR___ICQuotaExceededAlertController_lastShowDate];
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  id v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v35 = (uint64_t)v10;
  v34(v10, 1, 1, v11);
  uint64_t v13 = OBJC_IVAR___ICQuotaExceededAlertController_cloudContext;
  uint64_t v14 = self;
  uint64_t v15 = v5;
  *(void *)&v5[v13] = [v14 sharedContext];
  id v16 = [self sharedContext];
  if (v16)
  {
    NSString v17 = v16;
    id v18 = [v16 snapshotManagedObjectContext];
  }
  else
  {
    id v18 = 0;
  }
  *(void *)&v15[OBJC_IVAR___ICQuotaExceededAlertController_managedObjectContext] = v18;
  *(void *)&v15[OBJC_IVAR___ICQuotaExceededAlertController_minimumLastShowDateInterval] = 0x408C200000000000;
  NSString v19 = &v15[OBJC_IVAR___ICQuotaExceededAlertController_lastShowDateKey];
  *(void *)NSString v19 = 0xD000000000000028;
  *((void *)v19 + 1) = 0x8000000100553DA0;
  *(void *)&v15[OBJC_IVAR___ICQuotaExceededAlertController_recordID] = a1;
  uint64_t v20 = &v15[OBJC_IVAR___ICQuotaExceededAlertController_accountID];
  uint64_t v21 = v33;
  *(void *)uint64_t v20 = v32;
  *((void *)v20 + 1) = v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(&v15[OBJC_IVAR___ICQuotaExceededAlertController_date], v37, v11);
  NSString v22 = [a1 recordName];
  if (!v22)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  unsigned __int8 v23 = [self didShowExceededStorageQuotaAlertForNoteWithIdentifier:v22];

  v15[OBJC_IVAR___ICQuotaExceededAlertController_didShowForRecord] = v23;
  id v24 = [self standardUserDefaults];
  swift_bridgeObjectRetain();
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v26 = [v24 objectForKey:v25];

  if (v26)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v39, 0, sizeof(v39));
  }
  sub_1001BC02C((uint64_t)v39, (uint64_t)v40);
  if (v41)
  {
    uint64_t v27 = swift_dynamicCast() ^ 1;
    uint64_t v28 = v9;
  }
  else
  {
    sub_10002B754((uint64_t)v40, &qword_10069B4D0);
    uint64_t v28 = v9;
    uint64_t v27 = 1;
  }
  v34(v28, v27, 1, v11);
  uint64_t v29 = v35;
  swift_beginAccess();
  sub_10021E98C((uint64_t)v9, v29);
  swift_endAccess();

  v38.receiver = v15;
  v38.super_class = ObjectType;
  id v30 = [super init];
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v37, v11);
  return v30;
}

uint64_t sub_10021E818()
{
  return _swift_deallocObject(v0, 40, 7);
}

void sub_10021E858()
{
  sub_10021D75C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(uint64_t **)(v0 + 32));
}

uint64_t sub_10021E864()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10021E874()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_10021E8B4()
{
  sub_10021E0B8(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10021E8BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10021E924(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_10021E98C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10021EA04()
{
  uint64_t v0 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v0 - 8);
  NSString v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  id v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Locale();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for LocalizedStringResource();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = type metadata accessor for TypeDisplayRepresentation();
  sub_100032974(v10, static TopLevelFolder.typeDisplayRepresentation);
  sub_10003293C(v10, (uint64_t)static TopLevelFolder.typeDisplayRepresentation);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t TopLevelFolder.typeDisplayRepresentation.unsafeMutableAddressor()
{
  if (qword_10069AD18 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for TypeDisplayRepresentation();

  return sub_10003293C(v0, (uint64_t)static TopLevelFolder.typeDisplayRepresentation);
}

uint64_t static TopLevelFolder.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_10069AD18 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for TypeDisplayRepresentation();
  uint64_t v3 = sub_10003293C(v2, (uint64_t)static TopLevelFolder.typeDisplayRepresentation);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t TopLevelFolder.rawValue.getter(char a1)
{
  uint64_t result = 0x65746F4E6C6C6163;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x65746F4E6874616DLL;
      break;
    case 2:
      uint64_t result = 0x746F4E6B63697571;
      break;
    case 3:
      uint64_t result = 0x6957646572616873;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10021EE90(unsigned __int8 *a1, char *a2)
{
  return sub_1002762F4(*a1, *a2);
}

unint64_t sub_10021EE9C@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = _s11MobileNotes14TopLevelFolderO8rawValueACSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_10021EECC(uint64_t a1@<X8>)
{
  uint64_t v2 = 0x65746F4E6C6C6163;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 0x65746F4E6874616DLL;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x746F4E6B63697571;
      *(void *)(a1 + 8) = 0xEA00000000007365;
      break;
    case 3:
      strcpy((char *)a1, "sharedWithYou");
      *(_WORD *)(a1 + 14) = -4864;
      break;
    default:
LABEL_3:
      *(void *)a1 = v2;
      *(void *)(a1 + 8) = 0xE900000000000073;
      break;
  }
}

Swift::Int sub_10021EF78()
{
  return Hasher._finalize()();
}

uint64_t sub_10021F064()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10021F138()
{
  return Hasher._finalize()();
}

uint64_t sub_10021F220(uint64_t a1)
{
  unint64_t v2 = sub_1001580B0();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10021F26C()
{
  uint64_t v0 = sub_10002F214((uint64_t *)&unk_10069D360);
  __chkstk_darwin(v0 - 8);
  uint64_t v41 = (char *)&v28 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v2 - 8);
  uint64_t v37 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Locale();
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v11 - 8);
  uint64_t v12 = type metadata accessor for LocalizedStringResource();
  uint64_t v42 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  sub_10002F214((uint64_t *)&unk_10069F910);
  uint64_t v13 = (int *)(sub_10002F214(&qword_10069C5E8) - 8);
  uint64_t v14 = *(void *)v13;
  uint64_t v34 = *(void *)(*(void *)v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v16 = swift_allocObject();
  uint64_t v31 = v16;
  *(_OWORD *)(v16 + 16) = xmmword_10052AC50;
  unint64_t v38 = v16 + v15;
  *(unsigned char *)(v16 + v15) = 0;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  unsigned int v40 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  NSString v17 = *(void (**)(void))(v5 + 104);
  uint64_t v39 = v5 + 104;
  uint64_t v32 = v7;
  uint64_t v33 = (void (*)(char *, void, uint64_t))v17;
  uint64_t v18 = v4;
  uint64_t v35 = v4;
  v17(v7);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  NSString v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56);
  v42 += 56;
  id v36 = v19;
  uint64_t v20 = v37;
  v19(v37, 1, 1, v12);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
  DisplayRepresentation.init(title:subtitle:image:)();
  uint64_t v21 = v34;
  uint64_t v29 = (unsigned char *)(v38 + v34 + v13[14]);
  *(unsigned char *)(v38 + v34) = 1;
  String.LocalizationValue.init(stringLiteral:)();
  uint64_t v28 = v10;
  static Locale.current.getter();
  NSString v22 = v33;
  v33(v32, v40, v18);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v30 = v12;
  v36(v20, 1, 1, v12);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
  DisplayRepresentation.init(title:subtitle:image:)();
  unsigned __int8 v23 = (unsigned char *)(v38 + 2 * v21);
  uint64_t v29 = &v23[v13[14]];
  unsigned char *v23 = 2;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  id v24 = v32;
  v22(v32, v40, v35);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  id v26 = v36;
  NSString v25 = v37;
  v36(v37, 1, 1, v12);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
  DisplayRepresentation.init(title:subtitle:image:)();
  *(unsigned char *)(v38 + 2 * v21 + v34) = 3;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v33(v24, v40, v35);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v26(v25, 1, 1, v30);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
  DisplayRepresentation.init(title:subtitle:image:)();
  unint64_t result = sub_100168604(v31);
  static TopLevelFolder.caseDisplayRepresentations = result;
  return result;
}

uint64_t *TopLevelFolder.caseDisplayRepresentations.unsafeMutableAddressor()
{
  if (qword_10069AD20 != -1) {
    swift_once();
  }
  return &static TopLevelFolder.caseDisplayRepresentations;
}

uint64_t static TopLevelFolder.caseDisplayRepresentations.getter()
{
  if (qword_10069AD20 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

_UNKNOWN **static TopLevelFolder.allCases.getter()
{
  return &off_10062B9F8;
}

uint64_t sub_10021FA3C(uint64_t a1)
{
  unint64_t v2 = sub_10021FCFC();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

void sub_10021FA88(void *a1@<X8>)
{
  *a1 = &off_10062B398;
}

unint64_t _s11MobileNotes14TopLevelFolderO8rawValueACSgSS_tcfC_0(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10062B978, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 4) {
    return 4;
  }
  else {
    return v3;
  }
}

unint64_t sub_10021FAE8()
{
  unint64_t result = qword_10069F8B0;
  if (!qword_10069F8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069F8B0);
  }
  return result;
}

unint64_t sub_10021FB40()
{
  unint64_t result = qword_10069F8B8;
  if (!qword_10069F8B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069F8B8);
  }
  return result;
}

unint64_t sub_10021FB98()
{
  unint64_t result = qword_10069F8C0;
  if (!qword_10069F8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069F8C0);
  }
  return result;
}

unint64_t sub_10021FBF0()
{
  unint64_t result = qword_10069F8C8;
  if (!qword_10069F8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069F8C8);
  }
  return result;
}

unint64_t sub_10021FC48()
{
  unint64_t result = qword_10069F8D0;
  if (!qword_10069F8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069F8D0);
  }
  return result;
}

unint64_t sub_10021FCA0()
{
  unint64_t result = qword_10069F8D8;
  if (!qword_10069F8D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069F8D8);
  }
  return result;
}

unint64_t sub_10021FCFC()
{
  unint64_t result = qword_10069F8E0;
  if (!qword_10069F8E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069F8E0);
  }
  return result;
}

uint64_t sub_10021FD50()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10021FDA4()
{
  unint64_t result = qword_10069F8E8;
  if (!qword_10069F8E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069F8E8);
  }
  return result;
}

unint64_t sub_10021FDFC()
{
  unint64_t result = qword_10069F8F0;
  if (!qword_10069F8F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069F8F0);
  }
  return result;
}

unint64_t sub_10021FE54()
{
  unint64_t result = qword_10069F8F8;
  if (!qword_10069F8F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069F8F8);
  }
  return result;
}

unint64_t sub_10021FEAC()
{
  unint64_t result = qword_10069F900;
  if (!qword_10069F900)
  {
    sub_10001DFF4(&qword_10069F908);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069F900);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TopLevelFolder(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TopLevelFolder(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100220064);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TopLevelFolder()
{
  return &type metadata for TopLevelFolder;
}

void sub_10022024C()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v1 = (void *)Strong;
  int v2 = self;
  id v3 = [v2 mainBundle];
  NSString v4 = String._bridgeToObjectiveC()();
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v3 localizedStringForKey:v4 value:v5 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v1 setText:v7];

  uint64_t v8 = swift_unknownObjectWeakLoadStrong();
  if (!v8)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v9 = (void *)v8;
  id v10 = [v2 mainBundle];
  NSString v11 = String._bridgeToObjectiveC()();
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [v10 localizedStringForKey:v11 value:v12 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v9 setText:v14];

  uint64_t v15 = swift_unknownObjectWeakLoadStrong();
  if (!v15)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v16 = (void *)v15;
  NSString v17 = self;
  [v17 ic_isVision];
  id v18 = [v2 mainBundle];
  NSString v19 = String._bridgeToObjectiveC()();
  NSString v20 = String._bridgeToObjectiveC()();
  id v21 = [v18 localizedStringForKey:v19 value:v20 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v16 setText:v22];

  uint64_t v23 = swift_unknownObjectWeakLoadStrong();
  if (!v23)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  id v24 = (void *)v23;
  id v25 = [v2 mainBundle];
  NSString v26 = String._bridgeToObjectiveC()();
  NSString v27 = String._bridgeToObjectiveC()();
  id v28 = [v25 localizedStringForKey:v26 value:v27 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v24 setText:v29];

  uint64_t v30 = swift_unknownObjectWeakLoadStrong();
  if (!v30)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v31 = (void *)v30;
  [v17 ic_isVision];
  id v32 = [v2 mainBundle];
  NSString v33 = String._bridgeToObjectiveC()();
  NSString v34 = String._bridgeToObjectiveC()();
  id v35 = [v32 localizedStringForKey:v33 value:v34 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v36 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v31 setText:v36];

  uint64_t v37 = swift_unknownObjectWeakLoadStrong();
  if (!v37)
  {
LABEL_15:
    __break(1u);
    return;
  }
  unint64_t v38 = (void *)v37;
  id v39 = [v2 mainBundle];
  NSString v40 = String._bridgeToObjectiveC()();
  NSString v41 = String._bridgeToObjectiveC()();
  id v42 = [v39 localizedStringForKey:v40 value:v41 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v43 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v38 setText:v43];
}

uint64_t sub_1002208F0()
{
  sub_10002F214((uint64_t *)&unk_10069CAA0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100524D10;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v4 = *(void *)(v0 + OBJC_IVAR___ICLearnMoreTagsViewController_learnMoreEllipsisPlaceholder);
    uint64_t v3 = *(void *)(v0 + OBJC_IVAR___ICLearnMoreTagsViewController_learnMoreEllipsisPlaceholder + 8);
    *(void *)(v1 + 32) = result;
    *(void *)(v1 + 40) = v4;
    *(void *)(v1 + 48) = v3;
    *(unsigned char *)(v1 + 56) = 1;
    swift_bridgeObjectRetain();
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100220978(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  NSString v7 = &v3[OBJC_IVAR___ICLearnMoreTagsViewController_learnMoreEllipsisPlaceholder];
  *(void *)NSString v7 = 0xD000000000000024;
  *((void *)v7 + 1) = 0x80000001005547F0;
  if (a2)
  {
    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v8 = 0;
  }
  v11.receiver = v3;
  v11.super_class = ObjectType;
  [super initWithNibName:v8 bundle:a3];

  return v9;
}

id sub_100220B14(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  uint64_t v4 = &v1[OBJC_IVAR___ICLearnMoreTagsViewController_learnMoreEllipsisPlaceholder];
  *(void *)uint64_t v4 = 0xD000000000000024;
  *((void *)v4 + 1) = 0x80000001005547F0;
  v7.receiver = v1;
  v7.super_class = ObjectType;
  [super initWithCoder:a1];

  return v5;
}

uint64_t sub_100220C3C()
{
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();

  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for LearnMoreTagsViewController()
{
  return self;
}

uint64_t sub_100220E98(void *a1)
{
  int v2 = v1;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v5 = (void *)Strong;
    sub_10017FF38();
    id v6 = a1;
    char v7 = static NSObject.== infix(_:_:)();

    if (v7)
    {
      id v8 = [v2 presentingViewController];
      if (v8)
      {
        id v9 = v8;
        type metadata accessor for LearnMoreSmartFoldersViewController();
        sub_1004A9954(v9);
      }
    }
  }
  return 0;
}

double CreateChecklistItemIntent.init()@<D0>(uint64_t a1@<X8>)
{
  sub_1002233C8(v4);
  long long v2 = v4[1];
  *(_OWORD *)a1 = v4[0];
  *(_OWORD *)(a1 + 16) = v2;
  double result = *(double *)&v5;
  *(_OWORD *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 48) = v6;
  return result;
}

uint64_t CreateChecklistItemIntent.noteEntity.setter(uint64_t a1)
{
  uint64_t v2 = sub_10002F214(&qword_10069B1D0);
  __chkstk_darwin(v2 - 8);
  sub_10002F034(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10069B1D0);
  IntentParameter.wrappedValue.setter();
  return sub_10002B754(a1, &qword_10069B1D0);
}

void *CreateChecklistItemIntent.persistentIdentifier.unsafeMutableAddressor()
{
  return &static CreateChecklistItemIntent.persistentIdentifier;
}

unint64_t static CreateChecklistItemIntent.persistentIdentifier.getter()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_10022106C()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  sub_100032974(v6, static CreateChecklistItemIntent.title);
  sub_10003293C(v6, (uint64_t)static CreateChecklistItemIntent.title);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t CreateChecklistItemIntent.title.unsafeMutableAddressor()
{
  if (qword_10069AD28 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for LocalizedStringResource();

  return sub_10003293C(v0, (uint64_t)static CreateChecklistItemIntent.title);
}

uint64_t static CreateChecklistItemIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_10069AD28 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_10003293C(v2, (uint64_t)static CreateChecklistItemIntent.title);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t static CreateChecklistItemIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for Locale();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = type metadata accessor for LocalizedStringResource();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v4, 1, 1, v11);
  IntentDescription.init(_:categoryName:searchKeywords:)();
  uint64_t v13 = type metadata accessor for IntentDescription();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 0, 1, v13);
}

uint64_t static CreateChecklistItemIntent.parameterSummary.getter()
{
  uint64_t v0 = sub_10002F214(&qword_10069F980);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10002F214(&qword_10069F988);
  __chkstk_darwin(v1);
  sub_1001FD3CC();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._object = (void *)0x8000000100554870;
  v2._countAndFlagsBits = 0xD000000000000016;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_10002F214(&qword_10069F990);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._countAndFlagsBits = 544175136;
  v3._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  swift_getKeyPath();
  sub_10002F214(&qword_10069F998);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v4);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t SetChecklistItemsCheckedIntent.loggingConfiguration.setter()
{
  return AppDependency.wrappedValue.setter();
}

uint64_t (*SetChecklistItemsCheckedIntent.loggingConfiguration.modify(void *a1))()
{
  Swift::String v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = AppDependency.wrappedValue.modify();
  return sub_10015ACE0;
}

uint64_t SetChecklistItemsCheckedIntent.$loggingConfiguration.getter()
{
  return AppDependency.projectedValue.getter();
}

uint64_t CreateChecklistItemIntent.perform()(uint64_t a1)
{
  v2[10] = a1;
  v2[11] = v1;
  sub_10002F214((uint64_t *)&unk_10069C9B0);
  v2[12] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for LocalizedStringResource.BundleDescription();
  v2[13] = v3;
  v2[14] = *(void *)(v3 - 8);
  v2[15] = swift_task_alloc();
  type metadata accessor for Locale();
  v2[16] = swift_task_alloc();
  type metadata accessor for String.LocalizationValue();
  v2[17] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for LocalizedStringResource();
  v2[18] = v4;
  v2[19] = *(void *)(v4 - 8);
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for ChecklistItemEntity();
  v2[22] = v5;
  v2[23] = *(void *)(v5 - 8);
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  v2[26] = swift_task_alloc();
  v2[27] = swift_task_alloc();
  sub_10002F214(&qword_10069B4D8);
  v2[28] = swift_task_alloc();
  v2[29] = swift_task_alloc();
  sub_10002F214(&qword_10069B1D0);
  v2[30] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for NoteEntity(0);
  v2[31] = v6;
  v2[32] = *(void *)(v6 - 8);
  v2[33] = swift_task_alloc();
  return _swift_task_switch(sub_100221BE4, 0, 0);
}

uint64_t sub_100221BE4()
{
  IntentParameter.wrappedValue.getter();
  unint64_t v1 = v0[6];
  if (!v1) {
    goto LABEL_8;
  }
  uint64_t v2 = v0[5];
  uint64_t v3 = HIBYTE(v1) & 0xF;
  if ((v1 & 0x2000000000000000) == 0) {
    uint64_t v3 = v2 & 0xFFFFFFFFFFFFLL;
  }
  if (!v3)
  {
    swift_bridgeObjectRelease();
LABEL_8:
    uint64_t v14 = v0[20];
    uint64_t v13 = v0[21];
    uint64_t v15 = v0[19];
    uint64_t v34 = v0[18];
    uint64_t v16 = v0[14];
    uint64_t v17 = v0[15];
    uint64_t v18 = v0[12];
    uint64_t v19 = v0[13];
    String.LocalizationValue.init(stringLiteral:)();
    static Locale.current.getter();
    (*(void (**)(uint64_t, void, uint64_t))(v16 + 104))(v17, enum case for LocalizedStringResource.BundleDescription.main(_:), v19);
    LocalizedStringResource.init(_:table:locale:bundle:comment:)();
    IntentParameter.projectedValue.getter();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v14, v13, v34);
    IntentDialog.init(_:)();
    uint64_t v20 = type metadata accessor for IntentDialog();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v18, 0, 1, v20);
    type metadata accessor for AppIntentError();
    sub_100224300((unint64_t *)&unk_1006A2DB0, (void (*)(uint64_t))&type metadata accessor for AppIntentError);
    swift_allocError();
    IntentParameter.needsValueError(_:)();
    swift_release();
    sub_10002B754(v18, (uint64_t *)&unk_10069C9B0);
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v34);
    goto LABEL_9;
  }
  uint64_t v4 = v0[31];
  uint64_t v5 = v0[32];
  uint64_t v6 = v0[30];
  IntentParameter.wrappedValue.getter();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4) == 1)
  {
    uint64_t v7 = v0[30];
    uint64_t v31 = v0[21];
    uint64_t v32 = v0[19];
    uint64_t v33 = v0[18];
    uint64_t v35 = v0[20];
    uint64_t v8 = v0[15];
    uint64_t v9 = v0[13];
    uint64_t v10 = v0[14];
    uint64_t v11 = v0[12];
    swift_bridgeObjectRelease();
    sub_10002B754(v7, &qword_10069B1D0);
    String.LocalizationValue.init(stringLiteral:)();
    static Locale.current.getter();
    (*(void (**)(uint64_t, void, uint64_t))(v10 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v9);
    LocalizedStringResource.init(_:table:locale:bundle:comment:)();
    IntentParameter.projectedValue.getter();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v35, v31, v33);
    IntentDialog.init(_:)();
    uint64_t v12 = type metadata accessor for IntentDialog();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 0, 1, v12);
    type metadata accessor for AppIntentError();
    sub_100224300((unint64_t *)&unk_1006A2DB0, (void (*)(uint64_t))&type metadata accessor for AppIntentError);
    swift_allocError();
    IntentParameter.needsValueError(_:)();
    swift_release();
    sub_10002B754(v11, (uint64_t *)&unk_10069C9B0);
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
LABEL_9:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v21 = (uint64_t (*)(void))v0[1];
    return v21();
  }
  uint64_t v23 = (long long *)v0[11];
  sub_100223DCC(v0[30], v0[33], type metadata accessor for NoteEntity);
  AppDependency.wrappedValue.getter();
  uint64_t v24 = v0[7];
  v0[34] = v24;
  uint64_t v25 = swift_allocObject();
  v0[35] = v25;
  long long v27 = v23[1];
  long long v26 = v23[2];
  long long v28 = *v23;
  *(unsigned char *)(v25 + 64) = *((unsigned char *)v23 + 48);
  *(_OWORD *)(v25 + 32) = v27;
  *(_OWORD *)(v25 + 48) = v26;
  *(_OWORD *)(v25 + 16) = v28;
  *(void *)(v25 + 72) = v2;
  *(void *)(v25 + 80) = v1;
  NSString v36 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10069CE20 + dword_10069CE20);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  NSString v29 = (void *)swift_task_alloc();
  v0[36] = v29;
  void *v29 = v0;
  v29[1] = sub_100222264;
  uint64_t v30 = v0[29];
  return v36(v30, v24, (uint64_t)sub_100223DAC, v25);
}

uint64_t sub_100222264()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 296) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void **)(v2 + 272);
  swift_release();

  if (v0) {
    uint64_t v4 = sub_100222804;
  }
  else {
    uint64_t v4 = sub_1002223B0;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1002223B0()
{
  uint64_t v1 = v0[28];
  uint64_t v2 = v0[22];
  uint64_t v3 = v0[23];
  sub_10002F034(v0[29], v1, &qword_10069B4D8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v4 = v0[33];
    uint64_t v5 = v0[29];
    sub_10002B754(v0[28], &qword_10069B4D8);
    type metadata accessor for ICError(0);
    v0[9] = 227;
    sub_1001B50CC((uint64_t)_swiftEmptyArrayStorage);
    sub_100224300((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_willThrow();
    sub_10002B754(v5, &qword_10069B4D8);
    sub_1002243B0(v4, type metadata accessor for NoteEntity);
  }
  else
  {
    uint64_t v18 = v0[33];
    uint64_t v7 = v0[26];
    uint64_t v8 = v0[27];
    uint64_t v9 = v0[24];
    uint64_t v10 = v0[25];
    uint64_t v17 = v0[29];
    sub_100223DCC(v0[28], v8, (uint64_t (*)(void))type metadata accessor for ChecklistItemEntity);
    sub_100224348(v8, v7, (uint64_t (*)(void))type metadata accessor for ChecklistItemEntity);
    uint64_t v11 = _s11MobileNotes23OpenChecklistItemIntentVACycfC_0();
    uint64_t v13 = v12;
    uint64_t v15 = v14;
    sub_100224348(v7, v10, (uint64_t (*)(void))type metadata accessor for ChecklistItemEntity);
    sub_100224348(v10, v9, (uint64_t (*)(void))type metadata accessor for ChecklistItemEntity);
    IntentParameter.wrappedValue.setter();
    sub_1002243B0(v10, (uint64_t (*)(void))type metadata accessor for ChecklistItemEntity);
    sub_1002243B0(v7, (uint64_t (*)(void))type metadata accessor for ChecklistItemEntity);
    v0[2] = v11;
    v0[3] = v13;
    v0[4] = v15;
    sub_100224300(&qword_1006A4F00, (void (*)(uint64_t))type metadata accessor for ChecklistItemEntity);
    sub_1000343BC();
    static IntentResult.result<A, B>(value:opensIntent:)();
    sub_1002243B0(v8, (uint64_t (*)(void))type metadata accessor for ChecklistItemEntity);
    sub_10002B754(v17, &qword_10069B4D8);
    sub_1002243B0(v18, type metadata accessor for NoteEntity);
    swift_release();
    swift_release();
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_100222804()
{
  sub_1002243B0(*(void *)(v0 + 264), type metadata accessor for NoteEntity);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_100222940(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  v84._countAndFlagsBits = a3;
  v84._object = a4;
  uint64_t v9 = type metadata accessor for ChecklistItemID();
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v85 = (uint64_t)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v74 - v12;
  uint64_t v14 = type metadata accessor for UUID();
  uint64_t v86 = *(void *)(v14 - 8);
  uint64_t v87 = v14;
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v74 - v18;
  self;
  uint64_t v20 = swift_dynamicCastObjCClass();
  if (!v20)
  {
    uint64_t v24 = type metadata accessor for ChecklistItemEntity();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(a5, 1, 1, v24);
    return;
  }
  id v21 = (void *)v20;
  id v22 = a1;
  if ([v21 isPasswordProtectedAndLocked])
  {
    sub_100173F8C();
    swift_allocError();
    unsigned char *v23 = 11;
    swift_willThrow();
LABEL_9:

    return;
  }
  id v83 = [v21 textStorage];
  if (!v83)
  {
    uint64_t v27 = type metadata accessor for ChecklistItemEntity();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(a5, 1, 1, v27);
    goto LABEL_9;
  }
  uint64_t v75 = a5;
  char v25 = *(unsigned char *)(a2 + 48);
  uint64_t v76 = v5;
  id v81 = v22;
  if (v25)
  {
    long long v26 = (char *)[v83 length];
    uint64_t v78 = 0;
  }
  else
  {
    long long v28 = *(char **)(a2 + 32);
    uint64_t v78 = *(void *)(a2 + 40);
    long long v26 = v28;
  }
  UUID.init()();
  id v29 = [self paragraphStyleNamed:103];
  UUID.init()();
  id v30 = objc_allocWithZone((Class)ICTTTodo);
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  id v32 = [v30 initWithIdentifier:isa done:0];

  uint64_t v33 = *(void (**)(char *, uint64_t))(v86 + 8);
  uint64_t v80 = v86 + 8;
  BOOL v79 = v33;
  v33(v17, v87);
  [v29 setTodo:v32];

  Class v34 = UUID._bridgeToObjectiveC()().super.isa;
  id v82 = v29;
  [v29 setUuid:v34];

  uint64_t v35 = (uint64_t)(v26 - 1);
  if (__OFSUB__(v26, 1)) {
    __break(1u);
  }
  id v36 = [v83 length];
  uint64_t v77 = v26;
  if (v35 < 0 || v35 >= (uint64_t)v36) {
    goto LABEL_18;
  }
  id v37 = v83;
  id v38 = [v83 string];
  uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v41 = v40;

  uint64_t v88 = v39;
  unint64_t v89 = v41;
  sub_10017B588();
  String.Index.init<A>(utf16Offset:in:)();
  id v42 = [v37 string];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v43 = String.subscript.getter();
  uint64_t v45 = v44;
  swift_bridgeObjectRelease();
  if (v43 == 10 && v45 == 0xE100000000000000)
  {
    swift_bridgeObjectRelease();
LABEL_18:
    swift_bridgeObjectRetain();
    goto LABEL_19;
  }
  char v46 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v46) {
    goto LABEL_18;
  }
  uint64_t v88 = 10;
  unint64_t v89 = 0xE100000000000000;
  String.append(_:)(v84);
LABEL_19:
  sub_10002F214(&qword_10069DE48);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100524D10;
  uint64_t v48 = (void *)ICTTAttributeNameParagraphStyle;
  *(void *)(inited + 32) = ICTTAttributeNameParagraphStyle;
  *(void *)(inited + 64) = sub_1002242C0();
  id v49 = v82;
  *(void *)(inited + 40) = v82;
  id v50 = v48;
  v84._object = v49;
  sub_100168480(inited);
  id v51 = objc_allocWithZone((Class)NSAttributedString);
  NSString v52 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_100224300((unint64_t *)&qword_10069BE28, type metadata accessor for Key);
  Class v53 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v54 = [v51 initWithString:v52 attributes:v53];

  id v55 = [v54 ic_range];
  [v83 ic_replaceCharactersInRange:v77 withAttributedSubstring:v78 fromRange:v54, v55, v56];
  [v21 updateModificationDateAndChangeCount];
  id v57 = [v21 managedObjectContext];
  if (v57)
  {
    unint64_t v58 = v57;
    uint64_t v88 = 0;
    unsigned int v59 = [v57 save:&v88];

    if (!v59)
    {
      id v71 = (id)v88;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      v79(v19, v87);
      return;
    }
    id v60 = (id)v88;
  }
  id v61 = [v21 objectID];
  (*(void (**)(char *, char *, uint64_t))(v86 + 16))(&v13[*(int *)(v9 + 20)], v19, v87);
  id v62 = [v61 URIRepresentation];
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  sub_100224348((uint64_t)v13, v85, (uint64_t (*)(void))type metadata accessor for ChecklistItemID);
  id v63 = [v21 objectID];
  id v64 = [v54 string];
  uint64_t v65 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v67 = v66;

  id v68 = [v84._object todo];
  if (v68)
  {
    BOOL v69 = v68;
    int v70 = [v68 done];
  }
  else
  {
    int v70 = 0;
  }
  uint64_t v72 = v75;
  ChecklistItemEntity.init(id:managedObjectID:text:checked:)(v85, v63, v65, v67, v70, v75);

  sub_1002243B0((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ChecklistItemID);
  v79(v19, v87);
  uint64_t v73 = type metadata accessor for ChecklistItemEntity();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56))(v72, 0, 1, v73);
}

uint64_t sub_100223214(uint64_t a1)
{
  long long v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v2 + 32) = v4;
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(v1 + 32);
  *(unsigned char *)(v2 + 64) = *(unsigned char *)(v1 + 48);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 72) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1002232D4;
  return CreateChecklistItemIntent.perform()(a1);
}

uint64_t sub_1002232D4()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1002233C8@<X0>(void *a1@<X8>)
{
  uint64_t v65 = a1;
  uint64_t v1 = sub_10002F214(&qword_10069B1D0);
  __chkstk_darwin(v1 - 8);
  id v64 = &v47[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = type metadata accessor for InputConnectionBehavior();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v68 = v3;
  uint64_t v69 = v4;
  __chkstk_darwin(v3);
  uint64_t v67 = &v47[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  id v63 = &v47[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  id v62 = &v47[-v9];
  uint64_t v10 = sub_10002F214((uint64_t *)&unk_10069E280);
  __chkstk_darwin(v10 - 8);
  id v61 = &v47[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v12 - 8);
  uint64_t v66 = &v47[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = &v47[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = type metadata accessor for Locale();
  __chkstk_darwin(v18 - 8);
  uint64_t v19 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v19 - 8);
  uint64_t v20 = type metadata accessor for LocalizedStringResource();
  uint64_t v56 = v20;
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  NSString v52 = &v47[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v58 = sub_10002F214((uint64_t *)&unk_10069B250);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v23 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v24 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v15 + 104);
  unsigned int v48 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v49 = v14;
  v24(v17, enum case for LocalizedStringResource.BundleDescription.main(_:), v14);
  id v50 = v24;
  uint64_t v51 = v15 + 104;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v24(v17, v23, v14);
  char v25 = v66;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  long long v26 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v21 + 56);
  uint64_t v55 = v21 + 56;
  id v57 = v26;
  v26(v25, 0, 1, v20);
  uint64_t v27 = type metadata accessor for String.IntentInputOptions();
  uint64_t v72 = 0;
  uint64_t v73 = 0;
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v61, 1, 1, v27);
  uint64_t v28 = type metadata accessor for IntentDialog();
  uint64_t v29 = *(void *)(v28 - 8);
  Class v53 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v29 + 56);
  uint64_t v54 = v29 + 56;
  id v30 = v62;
  v53(v62, 1, 1, v28);
  unsigned int v59 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v31 = *(void (**)(void))(v69 + 104);
  v69 += 104;
  id v60 = (void (*)(unsigned char *, void, uint64_t))v31;
  v31(v67);
  id v61 = (unsigned char *)IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)();
  uint64_t v58 = sub_10002F214(&qword_10069B210);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v32 = v48;
  uint64_t v33 = v49;
  Class v34 = v50;
  v50(v17, v48, v49);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v34(v17, v32, v33);
  uint64_t v35 = v66;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v57(v35, 0, 1, v56);
  uint64_t v36 = type metadata accessor for NoteEntity(0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v64, 1, 1, v36);
  id v37 = v53;
  v53(v30, 1, 1, v28);
  v37(v63, 1, 1, v28);
  uint64_t v72 = sub_10023ED64();
  uint64_t v73 = v38;
  uint64_t v74 = v39;
  char v75 = v40 & 1;
  uint64x2_t v41 = (uint64x2_t)vdupq_n_s64(v40);
  int16x8_t v42 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v41, (uint64x2_t)xmmword_100524D00), (int32x4_t)vshlq_u64(v41, (uint64x2_t)xmmword_100524CF0));
  *(int8x8_t *)v42.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v42), (int8x8_t)0x1000100010001);
  unsigned __int32 v76 = vmovn_s16(v42).u32[0];
  v60(v67, v59, v68);
  sub_1001579C0();
  uint64_t v43 = IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:query:)();
  sub_10002F214((uint64_t *)&unk_10069CE60);
  unint64_t v70 = 0xD000000000000021;
  unint64_t v71 = 0x8000000100549290;
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t v44 = AppDependency.__allocating_init(key:manager:)();
  sub_10002F214((uint64_t *)&unk_10069B130);
  unint64_t v70 = 0xD000000000000024;
  unint64_t v71 = 0x8000000100549260;
  AnyHashable.init<A>(_:)();
  static AppDependencyManager.shared.getter();
  uint64_t result = AppDependency.__allocating_init(key:manager:)();
  char v46 = v65;
  *uint64_t v65 = v61;
  v46[1] = v43;
  v46[2] = v44;
  v46[3] = result;
  v46[4] = 0;
  v46[5] = 0;
  *((unsigned char *)v46 + 48) = 1;
  return result;
}

uint64_t sub_100223CFC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100223D28@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100223D54()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 88, 7);
}

void sub_100223DAC(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100222940(a1, v2 + 16, *(void *)(v2 + 72), *(void **)(v2 + 80), a2);
}

uint64_t sub_100223DCC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_100223E38()
{
  unint64_t result = qword_10069F9A8;
  if (!qword_10069F9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069F9A8);
  }
  return result;
}

uint64_t sub_100223E8C()
{
  return sub_100224300(qword_1006A4EE0, (void (*)(uint64_t))type metadata accessor for ChecklistItemEntity);
}

unint64_t sub_100223EDC()
{
  unint64_t result = qword_10069F9B0;
  if (!qword_10069F9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069F9B0);
  }
  return result;
}

unint64_t sub_100223F34()
{
  unint64_t result = qword_10069F9B8;
  if (!qword_10069F9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069F9B8);
  }
  return result;
}

uint64_t sub_100223F88()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_100223FBC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeWithCopy for CreateChecklistItemIntent(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for CreateChecklistItemIntent(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v4;
  return a1;
}

__n128 initializeWithTake for CreateChecklistItemIntent(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for CreateChecklistItemIntent(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for CreateChecklistItemIntent(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 49)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CreateChecklistItemIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CreateChecklistItemIntent()
{
  return &type metadata for CreateChecklistItemIntent;
}

uint64_t sub_10022420C()
{
  return sub_10001DFB0(&qword_10069F9C8, &qword_10069F9D0);
}

uint64_t sub_100224248()
{
  return sub_10001DFB0(&qword_10069F9D8, &qword_10069F9E0);
}

uint64_t sub_100224284()
{
  return sub_10001DFB0(&qword_10069F9E8, &qword_10069F9E0);
}

unint64_t sub_1002242C0()
{
  unint64_t result = qword_10069DE50;
  if (!qword_10069DE50)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10069DE50);
  }
  return result;
}

uint64_t sub_100224300(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100224348(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1002243B0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100224410()
{
  return sub_1002264E8(&qword_10069F9F0, (void (*)(uint64_t))_s3TagVMa);
}

uint64_t _s3TagVMa()
{
  uint64_t result = qword_10069FA70;
  if (!qword_10069FA70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1002244A4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10021E8BC(v1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    Hasher._combine(_:)(1u);
    sub_1002264E8((unint64_t *)&unk_1006A4CF0, (void (*)(uint64_t))&type metadata accessor for Date);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  _s3TagVMa();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1002246A0(void *a1)
{
  uint64_t v3 = sub_10002F214(&qword_10069FAC8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10015E154(a1, a1[3]);
  sub_10022526C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v8[15] = 0;
  type metadata accessor for Date();
  sub_1002264E8(&qword_10069FAD0, (void (*)(uint64_t))&type metadata accessor for Date);
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  if (!v1)
  {
    _s3TagVMa();
    v8[14] = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

Swift::Int sub_100224858()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  Hasher.init(_seed:)();
  sub_10021E8BC(v1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    Hasher._combine(_:)(1u);
    sub_1002264E8((unint64_t *)&unk_1006A4CF0, (void (*)(uint64_t))&type metadata accessor for Date);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  _s3TagVMa();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_100224A68@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v4 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  __chkstk_darwin(v4 - 8);
  uint64_t v23 = (uint64_t)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214(&qword_10069F9F8);
  uint64_t v21 = *(void *)(v6 - 8);
  uint64_t v22 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = _s3TagVMa();
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  sub_10015E154(a1, a1[3]);
  sub_10022526C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    sub_100018FE8((uint64_t)a1);
    return sub_10002B754((uint64_t)v11, (uint64_t *)&unk_1006A3E20);
  }
  else
  {
    uint64_t v13 = v21;
    char v25 = 0;
    sub_1002264E8(&qword_10069FA08, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v14 = v22;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    sub_10021E98C(v23, (uint64_t)v11);
    char v24 = 1;
    uint64_t v15 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v17 = v16;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v14);
    uint64_t v18 = (uint64_t *)&v11[*(int *)(v9 + 20)];
    *uint64_t v18 = v15;
    v18[1] = v17;
    sub_1002252C0((uint64_t)v11, v20);
    sub_100018FE8((uint64_t)a1);
    return sub_100225324((uint64_t)v11);
  }
}

uint64_t sub_100224D68()
{
  if (*v0) {
    return 1954047348;
  }
  else {
    return 0x4164657461657263;
  }
}

uint64_t sub_100224DA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1002263F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100224DC8(uint64_t a1)
{
  unint64_t v2 = sub_10022526C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100224E04(uint64_t a1)
{
  unint64_t v2 = sub_10022526C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100224E40@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100224A68(a1, a2);
}

uint64_t sub_100224E58(void *a1)
{
  return sub_1002246A0(a1);
}

Swift::Int sub_100224E78()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  Hasher.init(_seed:)();
  sub_10021E8BC(v1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    Hasher._combine(_:)(1u);
    sub_1002264E8((unint64_t *)&unk_1006A4CF0, (void (*)(uint64_t))&type metadata accessor for Date);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_100225094()
{
  uint64_t v0 = _s3TagVMa();
  sub_100032974(v0, qword_1006CDB88);
  uint64_t v1 = sub_10003293C(v0, (uint64_t)qword_1006CDB88);
  uint64_t v2 = type metadata accessor for Date();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v4 = (void *)(v1 + *(int *)(v0 + 20));
  *uint64_t v4 = 0;
  v4[1] = 0xE000000000000000;
  return result;
}

uint64_t sub_10022512C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (qword_10069AD30 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_10003293C(a1, (uint64_t)qword_1006CDB88);

  return sub_1002252C0(v4, a2);
}

uint64_t sub_1002251A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a4, 1, 1, v8);
  uint64_t v9 = (void *)(a4 + *(int *)(a3 + 20));
  *uint64_t v9 = a1;
  v9[1] = a2;
  uint64_t v10 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56);

  return v10(a4, 0, 1, a3);
}

unint64_t sub_10022526C()
{
  unint64_t result = qword_10069FA00;
  if (!qword_10069FA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069FA00);
  }
  return result;
}

uint64_t sub_1002252C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s3TagVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100225324(uint64_t a1)
{
  uint64_t v2 = _s3TagVMa();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100225380(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214((uint64_t *)&unk_1006A0050);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v31 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v31 - v19;
  uint64_t v31 = a1;
  sub_10021E8BC(a1, (uint64_t)&v31 - v19);
  uint64_t v32 = a2;
  sub_10021E8BC(a2, (uint64_t)v18);
  uint64_t v21 = (uint64_t)&v11[*(int *)(v9 + 56)];
  sub_10021E8BC((uint64_t)v20, (uint64_t)v11);
  sub_10021E8BC((uint64_t)v18, v21);
  uint64_t v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v22((uint64_t)v11, 1, v4) != 1)
  {
    sub_10021E8BC((uint64_t)v11, (uint64_t)v15);
    if (v22(v21, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v21, v4);
      sub_1002264E8(&qword_10069FA10, (void (*)(uint64_t))&type metadata accessor for Date);
      char v23 = dispatch thunk of static Equatable.== infix(_:_:)();
      char v24 = *(void (**)(char *, uint64_t))(v5 + 8);
      v24(v7, v4);
      sub_10002B754((uint64_t)v18, (uint64_t *)&unk_1006A3E20);
      sub_10002B754((uint64_t)v20, (uint64_t *)&unk_1006A3E20);
      v24(v15, v4);
      sub_10002B754((uint64_t)v11, (uint64_t *)&unk_1006A3E20);
      if (v23) {
        goto LABEL_8;
      }
LABEL_11:
      char v29 = 0;
      return v29 & 1;
    }
    sub_10002B754((uint64_t)v18, (uint64_t *)&unk_1006A3E20);
    sub_10002B754((uint64_t)v20, (uint64_t *)&unk_1006A3E20);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v15, v4);
LABEL_6:
    sub_10002B754((uint64_t)v11, (uint64_t *)&unk_1006A0050);
    goto LABEL_11;
  }
  sub_10002B754((uint64_t)v18, (uint64_t *)&unk_1006A3E20);
  sub_10002B754((uint64_t)v20, (uint64_t *)&unk_1006A3E20);
  if (v22(v21, 1, v4) != 1) {
    goto LABEL_6;
  }
  sub_10002B754((uint64_t)v11, (uint64_t *)&unk_1006A3E20);
LABEL_8:
  uint64_t v25 = *(int *)(_s3TagVMa() + 20);
  long long v26 = (void *)(v31 + v25);
  uint64_t v27 = *(void *)(v31 + v25 + 8);
  uint64_t v28 = (void *)(v32 + v25);
  if (*v26 == *v28 && v27 == v28[1]) {
    char v29 = 1;
  }
  else {
    char v29 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  return v29 & 1;
}

unsigned char *_s3TagV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100225830);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s3TagV10CodingKeysOMa()
{
  return &_s3TagV10CodingKeysON;
}

uint64_t *sub_100225868(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_10002F214((uint64_t *)&unk_1006A3E20);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = (uint64_t *)((char *)a1 + v11);
    uint64_t v13 = (uint64_t *)((char *)a2 + v11);
    uint64_t v14 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v14;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1002259EC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2)) {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }

  return swift_bridgeObjectRelease();
}

char *sub_100225ABC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = *((void *)v11 + 1);
  *(void *)uint64_t v10 = *(void *)v11;
  *((void *)v10 + 1) = v12;
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_100225BF0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_100225D9C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_100225EC4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v16 = *(void *)v14;
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = v16;
  *((void *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100226060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100226074);
}

uint64_t sub_100226074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10022613C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100226150);
}

uint64_t sub_100226150(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_10002F214((uint64_t *)&unk_1006A3E20);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

void sub_100226214()
{
  sub_100005808();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_1002262AC()
{
  unint64_t result = qword_10069FAA8;
  if (!qword_10069FAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069FAA8);
  }
  return result;
}

uint64_t sub_100226300()
{
  return sub_1002264E8(&qword_10069FAB0, (void (*)(uint64_t))_s3TagVMa);
}

unint64_t sub_10022634C()
{
  unint64_t result = qword_10069FAB8;
  if (!qword_10069FAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069FAB8);
  }
  return result;
}

unint64_t sub_1002263A4()
{
  unint64_t result = qword_10069FAC0;
  if (!qword_10069FAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069FAC0);
  }
  return result;
}

uint64_t sub_1002263F8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4164657461657263 && a2 == 0xE900000000000074;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1954047348 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1002264E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_100226628(void *a1)
{
  uint64_t v3 = &v1[OBJC_IVAR____TtC11MobileNotes22FolderComposerJoinCell____lazy_storage___buttonHorizontalMargin];
  *(void *)uint64_t v3 = 0;
  unsigned char v3[8] = 1;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes22FolderComposerJoinCell____lazy_storage___textView] = 0;
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for FolderComposerJoinCell();
  id v4 = [super initWithCoder:a1];
  if (v4)
  {
    sub_100031418(0, (unint64_t *)&qword_10069C280);
    id v5 = v4;
    static UITraitCollection.traitsAffectingSizeAndColor.getter();
    UIView.registerForTraitChanges(_:action:)();

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
  }
  return v4;
}

uint64_t sub_100226734()
{
  uint64_t v1 = v0;
  uint64_t isEscapingClosureAtFileLocation = type metadata accessor for UIListContentConfiguration();
  uint64_t v3 = *(void *)(isEscapingClosureAtFileLocation - 8);
  __chkstk_darwin(isEscapingClosureAtFileLocation);
  id v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIListContentConfiguration.cell()();
  UIListContentConfiguration.directionalLayoutMargins.getter();
  double v7 = v6;
  [v0 layoutMargins];
  if (v7 <= v8) {
    double v7 = v8;
  }
  id v9 = sub_100226D54();
  id v10 = [v9 superview];

  if (v10) {
    goto LABEL_6;
  }
  id v11 = [v1 contentView];
  id v12 = sub_100226D54();
  [v11 addSubview:v12];

  uint64_t v13 = sub_100226D54();
  if (qword_10069AD38 != -1) {
    goto LABEL_8;
  }
  while (1)
  {
    [v13 ic_addAnchorsToFillSuperviewWithHorizontalPadding:1 verticalPadding:v7 usesSafeAreaLayoutGuide:*((double *)&qword_10069FAD8)];

LABEL_6:
    uint64_t v14 = self;
    uint64_t v13 = (void *)swift_allocObject();
    id v13[2] = v1;
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = sub_100226F38;
    *(void *)(v15 + 24) = v13;
    aBlock[4] = sub_100031D5C;
    aBlock[5] = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100031D30;
    aBlock[3] = &unk_100630E28;
    uint64_t v16 = _Block_copy(aBlock);
    id v17 = v1;
    swift_retain();
    swift_release();
    [v14 performWithoutAnimation:v16];
    _Block_release(v16);
    uint64_t v18 = *(void (**)(char *, uint64_t))(v3 + 8);
    v3 += 8;
    v18(v5, isEscapingClosureAtFileLocation);
    uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      break;
    }
    __break(1u);
LABEL_8:
    swift_once();
  }
  return result;
}

void sub_100226A40(void *a1)
{
  id v2 = sub_100226D54();
  (*(void (**)(void))((swift_isaMask & *a1) + 0x80))();
  sub_10002F214(&qword_10069DE48);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100527F30;
  *(void *)(inited + 32) = NSFontAttributeName;
  uint64_t v4 = self;
  id v5 = NSFontAttributeName;
  id v6 = [v4 preferredFontForTextStyle:UIFontTextStyleSubheadline];
  uint64_t v7 = sub_100031418(0, (unint64_t *)&unk_1006A83B0);
  *(void *)(inited + 40) = v6;
  *(void *)(inited + 64) = v7;
  *(void *)(inited + 72) = NSForegroundColorAttributeName;
  double v8 = self;
  id v9 = NSForegroundColorAttributeName;
  id v10 = [v8 labelColor];
  *(void *)(inited + 104) = sub_100031418(0, &qword_10069C290);
  *(void *)(inited + 80) = v10;
  sub_100168480(inited);
  id v11 = objc_allocWithZone((Class)NSAttributedString);
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1001BBF80();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v14 = [v11 initWithString:v12 attributes:isa];

  [v2 setAttributedText:v14];
}

void sub_100226D44()
{
  qword_10069FAD8 = 0x4020000000000000;
}

id sub_100226D54()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes22FolderComposerJoinCell____lazy_storage___textView;
  id v2 = *(void **)((char *)v0 + OBJC_IVAR____TtC11MobileNotes22FolderComposerJoinCell____lazy_storage___textView);
  if (v2)
  {
    id v3 = *(id *)((char *)v0 + OBJC_IVAR____TtC11MobileNotes22FolderComposerJoinCell____lazy_storage___textView);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x78))();
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;
    id v9 = self;
    id v10 = UIFontTextStyleSubheadline;
    id v11 = [v9 labelColor];
    id v12 = objc_allocWithZone((Class)type metadata accessor for InlineMenuButtonTextView());
    id v13 = sub_1004A0D84(v5, v6, v8, v10, 0x100000000, v11);
    id v14 = *(void **)((char *)v4 + v1);
    *(void *)((char *)v4 + v1) = v13;
    id v3 = v13;

    id v2 = 0;
  }
  id v15 = v2;
  return v3;
}

id sub_100226E98()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FolderComposerJoinCell();
  [super dealloc];
}

uint64_t type metadata accessor for FolderComposerJoinCell()
{
  return self;
}

uint64_t sub_100226F00()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100226F38()
{
  sub_100226A40(*(void **)(v0 + 16));
}

uint64_t sub_100226F40()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100226F50()
{
  return 2;
}

unint64_t sub_100226F58()
{
  return sub_10022703C();
}

uint64_t type metadata accessor for FolderComposerFilterCellDateEdited()
{
  return self;
}

unint64_t sub_10022703C()
{
  unint64_t result = qword_10069FB40;
  if (!qword_10069FB40)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10069FB40);
  }
  return result;
}

id sub_10022707C()
{
  IntentParameter.wrappedValue.getter();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v0 = sub_100228A3C((uint64_t)v9);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1002695C8((unint64_t)v0);
  swift_bridgeObjectRelease();
  IntentParameter.wrappedValue.getter();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v1 = sub_100228A3C((uint64_t)v9);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1002695C8((unint64_t)v1);
  swift_bridgeObjectRelease();
  AppDependency.wrappedValue.getter();
  id v2 = [v9 modernManagedObjectContext];

  IntentParameter.wrappedValue.getter();
  if ((_BYTE)v9) {
    uint64_t v3 = 1;
  }
  else {
    uint64_t v3 = 2;
  }
  id v4 = objc_allocWithZone((Class)ICTagSelection);
  sub_100229C2C();
  sub_100229C6C((unint64_t *)&qword_10069FFE0, (void (*)(uint64_t))sub_100229C2C);
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  Class v6 = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v7 = [v4 initWithManagedObjectContext:v2 includedObjectIDs:isa excludedObjectIDs:v6 tagOperator:v3];

  return v7;
}

double ChangeTagSelectionIntent.init()@<D0>(uint64_t a1@<X8>)
{
  sub_100228BC8((uint64_t *)v4);
  double result = *(double *)v4;
  long long v3 = v4[1];
  *(_OWORD *)a1 = v4[0];
  *(_OWORD *)(a1 + 16) = v3;
  *(void *)(a1 + 32) = v5;
  return result;
}

uint64_t ChangeTagSelectionIntent.includedTags.getter()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t ChangeTagSelectionIntent.includedTags.setter()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t SetChecklistItemsCheckedIntent.entities.getter()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t SetChecklistItemsCheckedIntent.entities.setter()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t ChangeTagSelectionIntent.selectionOperator.getter()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t ChangeTagSelectionIntent.selectionOperator.setter()
{
  return IntentParameter.wrappedValue.setter();
}

void *ChangeTagSelectionIntent.persistentIdentifier.unsafeMutableAddressor()
{
  return &static ChangeTagSelectionIntent.persistentIdentifier;
}

uint64_t sub_10022748C()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  long long v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  sub_100032974(v6, static ChangeTagSelectionIntent.title);
  sub_10003293C(v6, (uint64_t)static ChangeTagSelectionIntent.title);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t ChangeTagSelectionIntent.title.unsafeMutableAddressor()
{
  return sub_1001B0DD8(&qword_10069AD40, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)static ChangeTagSelectionIntent.title);
}

uint64_t static ChangeTagSelectionIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1001B0E6C(&qword_10069AD40, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)static ChangeTagSelectionIntent.title, a1);
}

void *ChangeTagSelectionIntent.openAppWhenRun.unsafeMutableAddressor()
{
  return &static ChangeTagSelectionIntent.openAppWhenRun;
}

uint64_t static ChangeTagSelectionIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for Locale();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = type metadata accessor for LocalizedStringResource();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v4, 1, 1, v11);
  IntentDescription.init(_:categoryName:searchKeywords:)();
  uint64_t v13 = type metadata accessor for IntentDescription();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 0, 1, v13);
}

uint64_t static ChangeTagSelectionIntent.parameterSummary.getter()
{
  uint64_t v0 = sub_10002F214(&qword_10069FB50);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10002F214(&qword_10069FB58);
  __chkstk_darwin(v1);
  sub_100034190();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._countAndFlagsBits = 0x207463656C6553;
  v2._object = (void *)0xE700000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_10002F214(&qword_10069FB60);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._countAndFlagsBits = 0x6964756C636E6920;
  v3._object = (void *)0xEB0000000020676ELL;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  swift_getKeyPath();
  sub_10002F214(&qword_10069FB68);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v4._countAndFlagsBits = 0x63786520646E6120;
  v4._object = (void *)0xEF20676E6964756CLL;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v4);
  swift_getKeyPath();
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v5);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t TagSelectionOperatorEnum.tagSelectionOperator.getter(char a1)
{
  if (a1) {
    return 1;
  }
  else {
    return 2;
  }
}

uint64_t sub_100227C24@<X0>(uint64_t a1@<X8>)
{
  return sub_1002288F0(&qword_10069AD40, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)static ChangeTagSelectionIntent.title, a1);
}

uint64_t sub_100227C64()
{
  uint64_t v0 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v0 - 8);
  Swift::String v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  Swift::String v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Locale();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for LocalizedStringResource();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = type metadata accessor for TypeDisplayRepresentation();
  sub_100032974(v10, static TagSelectionOperatorEnum.typeDisplayRepresentation);
  sub_10003293C(v10, (uint64_t)static TagSelectionOperatorEnum.typeDisplayRepresentation);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t TagSelectionOperatorEnum.typeDisplayRepresentation.unsafeMutableAddressor()
{
  return sub_1001B0DD8(&qword_10069AD48, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)static TagSelectionOperatorEnum.typeDisplayRepresentation);
}

uint64_t static TagSelectionOperatorEnum.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1001B0E6C(&qword_10069AD48, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)static TagSelectionOperatorEnum.typeDisplayRepresentation, a1);
}

unint64_t sub_100227FAC()
{
  uint64_t v0 = sub_10002F214((uint64_t *)&unk_10069D360);
  __chkstk_darwin(v0 - 8);
  id v37 = (char *)&v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v2 - 8);
  uint64_t v36 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v4 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Locale();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for LocalizedStringResource();
  uint64_t v27 = v11;
  uint64_t v38 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  sub_10002F214(&qword_10069FBF8);
  uint64_t v12 = (int *)(sub_10002F214(&qword_10069C5D8) - 8);
  uint64_t v13 = *(void *)v12;
  uint64_t v34 = *(void *)(*(void *)v12 + 72);
  unint64_t v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = swift_allocObject();
  uint64_t v35 = v15;
  *(_OWORD *)(v15 + 16) = xmmword_100527F30;
  unint64_t v16 = v15 + v14;
  unint64_t v29 = v15 + v14 + v12[14];
  *(unsigned char *)(v15 + v14) = 0;
  long long v26 = v10;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  unsigned int v30 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  id v17 = *(void (**)(void))(v4 + 104);
  uint64_t v31 = v4 + 104;
  uint64_t v33 = (void (*)(char *, void, uint64_t))v17;
  v17(v6);
  uint64_t v18 = v6;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56);
  v38 += 56;
  uint64_t v28 = v19;
  uint64_t v20 = v36;
  v19(v36, 1, 1, v11);
  uint64_t v21 = type metadata accessor for DisplayRepresentation.Image();
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
  char v23 = v37;
  v22(v37, 1, 1, v21);
  DisplayRepresentation.init(title:subtitle:image:)();
  char v24 = (unsigned char *)(v16 + v34);
  v34 += v16 + v12[14];
  *char v24 = 1;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v33(v18, v30, v32);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v28(v20, 1, 1, v27);
  v22(v23, 1, 1, v21);
  DisplayRepresentation.init(title:subtitle:image:)();
  unint64_t result = sub_100168828(v35);
  static TagSelectionOperatorEnum.caseDisplayRepresentations = result;
  return result;
}

uint64_t *TagSelectionOperatorEnum.caseDisplayRepresentations.unsafeMutableAddressor()
{
  if (qword_10069AD50 != -1) {
    swift_once();
  }
  return &static TagSelectionOperatorEnum.caseDisplayRepresentations;
}

uint64_t static TagSelectionOperatorEnum.caseDisplayRepresentations.getter()
{
  if (qword_10069AD50 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static TagSelectionOperatorEnum.caseDisplayRepresentations.setter(uint64_t a1)
{
  if (qword_10069AD50 != -1) {
    swift_once();
  }
  swift_beginAccess();
  static TagSelectionOperatorEnum.caseDisplayRepresentations = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static TagSelectionOperatorEnum.caseDisplayRepresentations.modify())()
{
  if (qword_10069AD50 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

BOOL TagSelectionOperatorEnum.init(tagSelectionOperator:)(uint64_t a1)
{
  return a1 != 2;
}

MobileNotes::TagSelectionOperatorEnum_optional __swiftcall TagSelectionOperatorEnum.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10062BA48, v2);
  swift_bridgeObjectRelease();
  if (v3 == 1) {
    v4.value = MobileNotes_TagSelectionOperatorEnum_all;
  }
  else {
    v4.value = MobileNotes_TagSelectionOperatorEnum_unknownDefault;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

_UNKNOWN **static TagSelectionOperatorEnum.allCases.getter()
{
  return &off_10062BA98;
}

uint64_t TagSelectionOperatorEnum.rawValue.getter(char a1)
{
  if (a1) {
    return 7105633;
  }
  else {
    return 7958113;
  }
}

uint64_t sub_10022870C(char *a1, char *a2)
{
  return sub_1002750D8(*a1, *a2);
}

Swift::Int sub_100228718()
{
  return Hasher._finalize()();
}

uint64_t sub_100228780()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1002287CC()
{
  return Hasher._finalize()();
}

uint64_t sub_100228830@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10062BA48, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

void sub_100228890(uint64_t *a1@<X8>)
{
  uint64_t v2 = 7958113;
  if (*v1) {
    uint64_t v2 = 7105633;
  }
  *a1 = v2;
  a1[1] = 0xE300000000000000;
}

uint64_t sub_1002288B8@<X0>(uint64_t a1@<X8>)
{
  return sub_1002288F0(&qword_10069AD48, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)static TagSelectionOperatorEnum.typeDisplayRepresentation, a1);
}

uint64_t sub_1002288F0@<X0>(void *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = sub_10003293C(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t sub_100228994(uint64_t a1)
{
  unint64_t v2 = sub_100157C08();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_1002289E0(uint64_t a1)
{
  unint64_t v2 = sub_1002298B8();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

void sub_100228A2C(void *a1@<X8>)
{
  *a1 = &off_10062B5C8;
}

void *sub_100228A3C(uint64_t a1)
{
  uint64_t result = _swiftEmptyArrayStorage;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = type metadata accessor for TagEntity();
    uint64_t v5 = a1
       + ((*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80));
    uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 72);
    swift_bridgeObjectRetain();
    do
    {
      AppDependency.wrappedValue.getter();
      URL._bridgeToObjectiveC()((NSURL *)*(int *)(v4 + 20));
      uint64_t v8 = v7;
      id v9 = [v10 managedObjectIDForURIRepresentation:v7];

      if (v9)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      v5 += v6;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_100228BC8@<X0>(uint64_t *a1@<X8>)
{
  unsigned int v48 = a1;
  uint64_t v1 = type metadata accessor for InputConnectionBehavior();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v65 = v1;
  uint64_t v66 = v2;
  __chkstk_darwin(v1);
  id v64 = (char *)v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  id v63 = (char *)v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  id v62 = (char *)v45 - v7;
  uint64_t v8 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v8 - 8);
  uint64_t v54 = (char *)v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Locale();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = type metadata accessor for LocalizedStringResource();
  uint64_t v58 = v16;
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  id v61 = (char *)v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_10002F214((uint64_t *)&unk_10069B150);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v19 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  unsigned int v50 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v51 = v10;
  v20(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  uint64_t v49 = v20;
  uint64_t v52 = v11 + 104;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v20(v13, v19, v10);
  uint64_t v21 = v54;
  uint64_t v22 = v13;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  char v23 = *(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56);
  uint64_t v57 = v17 + 56;
  unsigned int v59 = v23;
  char v24 = v21;
  v23(v21, 0, 1, v16);
  uint64_t v69 = 0;
  uint64_t v25 = type metadata accessor for IntentDialog();
  uint64_t v53 = v25;
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56);
  v45[1] = v26 + 56;
  v27(v62, 1, 1, v25);
  v27(v63, 1, 1, v25);
  unsigned int v56 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v28 = *(void (**)(void))(v66 + 104);
  v66 += 104;
  uint64_t v55 = (void (*)(char *, void, uint64_t))v28;
  v28(v64);
  uint64_t v46 = sub_100229C6C((unint64_t *)&unk_1006A3B60, (void (*)(uint64_t))type metadata accessor for TagEntity);
  uint64_t v47 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  unint64_t v29 = v22;
  unsigned int v30 = v22;
  uint64_t v31 = v50;
  uint64_t v32 = v51;
  uint64_t v33 = v49;
  v49(v30, v50, v51);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v33(v29, v31, v32);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v59(v24, 0, 1, v58);
  uint64_t v69 = 0;
  uint64_t v34 = v53;
  v27(v62, 1, 1, v53);
  v27(v63, 1, 1, v34);
  v55(v64, v56, v65);
  uint64_t v60 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  uint64_t v46 = sub_10002F214(&qword_10069B298);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v35 = v50;
  uint64_t v36 = v51;
  id v37 = v49;
  v49(v29, v50, v51);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v37(v29, v35, v36);
  uint64_t v38 = v54;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v59(v38, 0, 1, v58);
  LOBYTE(v69) = 2;
  uint64_t v39 = v53;
  v27(v62, 1, 1, v53);
  v27(v63, 1, 1, v39);
  v55(v64, v56, v65);
  sub_100157C08();
  uint64_t v40 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
  sub_10002F214((uint64_t *)&unk_10069CE60);
  unint64_t v67 = 0xD000000000000021;
  unint64_t v68 = 0x8000000100549290;
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t v41 = AppDependency.__allocating_init(key:manager:)();
  sub_10002F214((uint64_t *)&unk_10069B130);
  unint64_t v67 = 0xD000000000000024;
  unint64_t v68 = 0x8000000100549260;
  AnyHashable.init<A>(_:)();
  static AppDependencyManager.shared.getter();
  uint64_t result = AppDependency.__allocating_init(key:manager:)();
  uint64_t v43 = v48;
  uint64_t v44 = v60;
  *unsigned int v48 = v47;
  v43[1] = v44;
  v43[2] = v40;
  v43[3] = v41;
  v43[4] = result;
  return result;
}

uint64_t sub_1002295E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100229610@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10022963C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100229668()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100229684()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1002296A4()
{
  unint64_t result = qword_10069FB88;
  if (!qword_10069FB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069FB88);
  }
  return result;
}

unint64_t sub_1002296FC()
{
  unint64_t result = qword_10069FB90;
  if (!qword_10069FB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069FB90);
  }
  return result;
}

unint64_t sub_100229754()
{
  unint64_t result = qword_10069FB98;
  if (!qword_10069FB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069FB98);
  }
  return result;
}

unint64_t sub_1002297AC()
{
  unint64_t result = qword_10069FBA0;
  if (!qword_10069FBA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069FBA0);
  }
  return result;
}

unint64_t sub_100229804()
{
  unint64_t result = qword_10069FBA8;
  if (!qword_10069FBA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069FBA8);
  }
  return result;
}

unint64_t sub_10022985C()
{
  unint64_t result = qword_10069FBB0;
  if (!qword_10069FBB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069FBB0);
  }
  return result;
}

unint64_t sub_1002298B8()
{
  unint64_t result = qword_10069FBB8;
  if (!qword_10069FBB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069FBB8);
  }
  return result;
}

uint64_t sub_10022990C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100229960()
{
  unint64_t result = qword_10069FBC0;
  if (!qword_10069FBC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069FBC0);
  }
  return result;
}

unint64_t sub_1002299B8()
{
  unint64_t result = qword_10069FBC8;
  if (!qword_10069FBC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069FBC8);
  }
  return result;
}

unint64_t sub_100229A10()
{
  unint64_t result = qword_10069FBD0;
  if (!qword_10069FBD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069FBD0);
  }
  return result;
}

uint64_t sub_100229A64()
{
  return sub_10001DFB0(&qword_10069FBD8, &qword_10069FBE0);
}

ValueMetadata *type metadata accessor for ChangeTagSelectionIntent()
{
  return &type metadata for ChangeTagSelectionIntent;
}

unsigned char *storeEnumTagSinglePayload for TagSelectionOperatorEnum(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100229B7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TagSelectionOperatorEnum()
{
  return &type metadata for TagSelectionOperatorEnum;
}

uint64_t sub_100229BB4()
{
  return sub_10001DFB0(&qword_10069FBE8, &qword_10069FBF0);
}

uint64_t sub_100229BF0()
{
  return sub_10001DFB0((unint64_t *)&qword_10069DE30, (uint64_t *)&unk_10069C980);
}

unint64_t sub_100229C2C()
{
  unint64_t result = qword_10069E810;
  if (!qword_10069E810)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10069E810);
  }
  return result;
}

uint64_t sub_100229C6C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *TakePhotoIntent.persistentIdentifier.unsafeMutableAddressor()
{
  return &static TakePhotoIntent.persistentIdentifier;
}

uint64_t sub_100229CC0()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  sub_100032974(v6, static TakePhotoIntent.title);
  sub_10003293C(v6, (uint64_t)static TakePhotoIntent.title);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t TakePhotoIntent.title.unsafeMutableAddressor()
{
  if (qword_10069AD58 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for LocalizedStringResource();

  return sub_10003293C(v0, (uint64_t)static TakePhotoIntent.title);
}

uint64_t static TakePhotoIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_10069AD58 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_10003293C(v2, (uint64_t)static TakePhotoIntent.title);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

void *TakePhotoIntent.openAppWhenRun.unsafeMutableAddressor()
{
  return &static TakePhotoIntent.openAppWhenRun;
}

uint64_t static TakePhotoIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for Locale();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = type metadata accessor for LocalizedStringResource();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v4, 1, 1, v11);
  IntentDescription.init(_:categoryName:searchKeywords:)();
  uint64_t v13 = type metadata accessor for IntentDescription();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 0, 1, v13);
}

uint64_t static TakePhotoIntent.parameterSummary.getter()
{
  uint64_t v0 = sub_10002F214(&qword_10069FC08);
  __chkstk_darwin(v0 - 8);
  sub_10003564C();
  ParameterSummaryString.init(stringLiteral:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_10022A378()
{
  uint64_t v0 = sub_10002F214(&qword_10069FC08);
  __chkstk_darwin(v0 - 8);
  ParameterSummaryString.init(stringLiteral:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_10022A43C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10022A458()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for TakePhotoIntent()
{
  return &type metadata for TakePhotoIntent;
}

uint64_t sub_10022A484()
{
  return sub_10001DFB0(&qword_10069FC28, (uint64_t *)&unk_10069FC30);
}

uint64_t VisibleNotesQuery.init(includeHTMLNotes:includeContents:)(uint64_t a1, uint64_t a2)
{
  return sub_10022F9C4(a1, a2, sub_10023ED64);
}

uint64_t sub_10022A4D8(unint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for NoteID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v9 = _swiftEmptyArrayStorage;
    if (!v8) {
      return (uint64_t)v9;
    }
    uint64_t v18 = _swiftEmptyArrayStorage;
    uint64_t result = sub_100169BCC(0, v8 & ~(v8 >> 63), 0);
    if (v8 < 0) {
      break;
    }
    uint64_t v11 = 0;
    uint64_t v9 = v18;
    unint64_t v16 = a1 & 0xC000000000000001;
    unint64_t v17 = a1;
    v15[0] = v2;
    v15[1] = v5 + 32;
    while (v8 != v11)
    {
      if (v16) {
        id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v12 = *(id *)(a1 + 8 * v11 + 32);
      }
      uint64_t v13 = v12;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, (uint64_t)v12 + OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_id, v4);

      uint64_t v18 = v9;
      unint64_t v2 = v9[2];
      unint64_t v14 = v9[3];
      if (v2 >= v14 >> 1)
      {
        sub_100169BCC(v14 > 1, v2 + 1, 1);
        uint64_t v9 = v18;
      }
      ++v11;
      id v9[2] = v2 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))((unint64_t)v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v2, v7, v4);
      a1 = v17;
      if (v8 == v11) {
        return (uint64_t)v9;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void *sub_10022A708(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = _swiftEmptyArrayStorage;
    if (!v2) {
      break;
    }
    uint64_t result = (void *)specialized ContiguousArray.reserveCapacity(_:)();
    if (v2 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v5 = *(id *)(a1 + 8 * v4 + 32);
      }
      uint64_t v6 = v5;
      ++v4;
      id v7 = objc_allocWithZone((Class)type metadata accessor for NoteSearchResult(0));
      id v8 = v6;
      sub_100242720(v8, v7, (unint64_t *)&qword_10069FD10);

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (v2 == v4) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_10022A884(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for VisibleNotesQuery.Comparator(0);
  __chkstk_darwin(v3);
  uint64_t v6 = (void *)((char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7) {
    return _swiftEmptyArrayStorage;
  }
  v23[0] = a1;
  v23[1] = v1;
  uint64_t v8 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = *(void *)(v4 + 72);
  swift_bridgeObjectRetain();
  uint64_t v10 = _swiftEmptyArrayStorage;
  v23[3] = v3;
  do
  {
    sub_10023FD38(v8, (uint64_t)v6, type metadata accessor for VisibleNotesQuery.Comparator);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      unint64_t v11 = v6[1];
      uint64_t v12 = HIBYTE(v11) & 0xF;
      if ((v11 & 0x2000000000000000) == 0) {
        uint64_t v12 = *v6 & 0xFFFFFFFFFFFFLL;
      }
      if (v12)
      {
        uint64_t v13 = self;
        NSString v14 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v15 = [v13 prefixMatchingQueryStringForSearchString:v14];

        uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v18 = v17;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v10 = sub_1001A847C(0, v10[2] + 1, 1, v10);
        }
        unint64_t v20 = v10[2];
        unint64_t v19 = v10[3];
        if (v20 >= v19 >> 1) {
          uint64_t v10 = sub_1001A847C((void *)(v19 > 1), v20 + 1, 1, v10);
        }
        id v10[2] = v20 + 1;
        uint64_t v21 = &v10[2 * v20];
        v21[4] = v16;
        v21[5] = v18;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      sub_100241CB0((uint64_t)v6, type metadata accessor for VisibleNotesQuery.Comparator);
    }
    v8 += v9;
    --v7;
  }
  while (v7);
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t VisibleNotesQuery.init(nonPasswordProtectedOnly:includeHTMLNotes:includeContents:)()
{
  return sub_10023F2DC();
}

uint64_t sub_10022AB14()
{
  return swift_continuation_resume();
}

uint64_t sub_10022AB1C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_10022AB58()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t sub_10022AB90(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v22 = v4 + v2;
  }
  else {
    int64_t v22 = v4;
  }
  unint64_t v3 = sub_1001A8358(isUniquelyReferenced_nonNull_native, v22, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = (*(void *)(v3 + 24) >> 1) - v8;
  uint64_t v10 = *(void *)(sub_10002F214(&qword_10069D190) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = v3 + v12 + v11 * v8;
  unint64_t v14 = a1 + v12;
  uint64_t v15 = v11 * v2;
  unint64_t v16 = v13 + v15;
  unint64_t v17 = v14 + v15;
  if (v14 < v16 && v13 < v17) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFADD__(v19, v2);
  uint64_t v21 = v19 + v2;
  if (!v20)
  {
    *(void *)(v3 + 16) = v21;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10022AD38(uint64_t result)
{
  int64_t v4 = v2;
  uint64_t v5 = result;
  if ((result & 0xC000000000000001) != 0)
  {
    uint64_t result = __CocoaSet.count.getter();
    uint64_t v6 = result;
  }
  else
  {
    uint64_t v6 = *(void *)(result + 16);
  }
  if ((unint64_t)*v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v8 = v18 + v6;
    if (!__OFADD__(v18, v6)) {
      goto LABEL_6;
    }
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 + v6;
  if (__OFADD__(v7, v6)) {
    goto LABEL_21;
  }
LABEL_6:
  unint64_t v9 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *int64_t v4 = v9;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v9 & 0x8000000000000000) != 0
    || (v9 & 0x4000000000000000) != 0
    || (uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8, v8 > *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain();
    uint64_t v12 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    *int64_t v4 = v12;
    uint64_t v11 = v12 & 0xFFFFFFFFFFFFFF8;
  }
  uint64_t v13 = *(void *)(v11 + 16);
  uint64_t v14 = (*(void *)(v11 + 24) >> 1) - v13;
  uint64_t result = (uint64_t)sub_10023D0E0(&v42, (void *)(v11 + 8 * v13 + 32), v14, v5, (unint64_t *)&qword_10069E810, (uint64_t)NSManagedObjectID_ptr, (unint64_t *)&qword_10069FFE0);
  if (result < v6) {
    goto LABEL_22;
  }
  if (result >= 1)
  {
    uint64_t v15 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v16 = __OFADD__(v15, result);
    uint64_t v17 = v15 + result;
    if (v16)
    {
      __break(1u);
LABEL_29:
      if (!__CocoaSet.Iterator.next()()) {
        goto LABEL_18;
      }
      sub_100031418(0, (unint64_t *)&qword_10069E810);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      int64_t v22 = v41;
      swift_unknownObjectRelease();
      while (2)
      {
        if (!v22) {
          goto LABEL_18;
        }
        while (1)
        {
          uint64_t v24 = *v4 & 0xFFFFFFFFFFFFFF8;
          if (v3 + 1 > *(void *)(v24 + 0x18) >> 1)
          {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            uint64_t v24 = *v4 & 0xFFFFFFFFFFFFFF8;
          }
          uint64_t v25 = *(void *)(v24 + 24) >> 1;
          if (v3 < v25) {
            break;
          }
LABEL_33:
          *(void *)(v24 + 16) = v3;
        }
        uint64_t v26 = v24 + 32;
        while (1)
        {
          *(void *)(v26 + 8 * v3++) = v22;
          int64_t v27 = v45;
          if (v42 < 0)
          {
            if (!__CocoaSet.Iterator.next()()) {
              goto LABEL_70;
            }
            sub_100031418(0, (unint64_t *)&qword_10069E810);
            swift_unknownObjectRetain();
            swift_dynamicCast();
            int64_t v22 = v41;
            swift_unknownObjectRelease();
            goto LABEL_45;
          }
          if (!v46) {
            break;
          }
          unint64_t v28 = (v46 - 1) & v46;
          unint64_t v29 = __clz(__rbit64(v46)) | (v45 << 6);
LABEL_41:
          int64_t v22 = *(void **)(*(void *)(v42 + 48) + 8 * v29);
          id v30 = v22;
LABEL_42:
          int64_t v45 = v27;
          unint64_t v46 = v28;
LABEL_45:
          if (!v22)
          {
LABEL_70:
            *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) = v3;
            goto LABEL_18;
          }
          if (v3 >= v25)
          {
            uint64_t v24 = *v4 & 0xFFFFFFFFFFFFFF8;
            goto LABEL_33;
          }
        }
        int64_t v31 = v45 + 1;
        if (__OFADD__(v45, 1))
        {
          __break(1u);
LABEL_94:
          int64_t v22 = 0;
          unint64_t v20 = 0;
          int64_t v19 = v1;
LABEL_27:
          int64_t v45 = v19;
          unint64_t v46 = v20;
          continue;
        }
        break;
      }
      int64_t v32 = (unint64_t)(v44 + 64) >> 6;
      if (v31 >= v32)
      {
        int64_t v22 = 0;
        unint64_t v28 = 0;
        goto LABEL_42;
      }
      unint64_t v33 = *(void *)(v43 + 8 * v31);
      if (!v33)
      {
        int64_t v34 = v45 + 2;
        if (v45 + 2 >= v32) {
          goto LABEL_67;
        }
        unint64_t v33 = *(void *)(v43 + 8 * v34);
        if (!v33)
        {
          int64_t v1 = v45 + 3;
          if (v45 + 3 >= v32) {
            goto LABEL_68;
          }
          unint64_t v33 = *(void *)(v43 + 8 * v1);
          if (v33)
          {
            int64_t v31 = v45 + 3;
            goto LABEL_51;
          }
          int64_t v34 = v45 + 4;
          if (v45 + 4 >= v32)
          {
            int64_t v22 = 0;
            unint64_t v28 = 0;
            int64_t v27 = v45 + 3;
            goto LABEL_42;
          }
          unint64_t v33 = *(void *)(v43 + 8 * v34);
          if (!v33)
          {
            int64_t v31 = v45 + 5;
            if (v45 + 5 >= v32)
            {
LABEL_68:
              int64_t v22 = 0;
              unint64_t v28 = 0;
              int64_t v27 = v34;
              goto LABEL_42;
            }
            unint64_t v33 = *(void *)(v43 + 8 * v31);
            if (!v33)
            {
              int64_t v31 = v32 - 1;
              uint64_t v35 = v45 + 6;
              while (v32 != v35)
              {
                unint64_t v33 = *(void *)(v43 + 8 * v35++);
                if (v33)
                {
                  int64_t v31 = v35 - 1;
                  goto LABEL_51;
                }
              }
LABEL_67:
              int64_t v22 = 0;
              unint64_t v28 = 0;
              int64_t v27 = v31;
              goto LABEL_42;
            }
            goto LABEL_51;
          }
        }
        int64_t v31 = v34;
      }
LABEL_51:
      unint64_t v28 = (v33 - 1) & v33;
      unint64_t v29 = __clz(__rbit64(v33)) + (v31 << 6);
      int64_t v27 = v31;
      goto LABEL_41;
    }
    *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) = v17;
  }
  if (result != v14)
  {
LABEL_18:
    sub_10017B518();
    return specialized Array._endMutation()();
  }
LABEL_23:
  uint64_t v3 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  int64_t v19 = v45;
  if (v42 < 0) {
    goto LABEL_29;
  }
  if (v46)
  {
    unint64_t v20 = (v46 - 1) & v46;
    unint64_t v21 = __clz(__rbit64(v46)) | (v45 << 6);
LABEL_26:
    int64_t v22 = *(void **)(*(void *)(v42 + 48) + 8 * v21);
    id v23 = v22;
    goto LABEL_27;
  }
  int64_t v36 = v45 + 1;
  if (!__OFADD__(v45, 1))
  {
    int64_t v37 = (unint64_t)(v44 + 64) >> 6;
    if (v36 >= v37)
    {
      int64_t v22 = 0;
      unint64_t v20 = 0;
      goto LABEL_27;
    }
    unint64_t v38 = *(void *)(v43 + 8 * v36);
    if (v38) {
      goto LABEL_75;
    }
    int64_t v39 = v45 + 2;
    if (v45 + 2 >= v37)
    {
LABEL_91:
      int64_t v22 = 0;
      unint64_t v20 = 0;
      int64_t v19 = v36;
      goto LABEL_27;
    }
    unint64_t v38 = *(void *)(v43 + 8 * v39);
    if (v38) {
      goto LABEL_79;
    }
    int64_t v1 = v45 + 3;
    if (v45 + 3 < v37)
    {
      unint64_t v38 = *(void *)(v43 + 8 * v1);
      if (v38)
      {
        int64_t v36 = v45 + 3;
        goto LABEL_75;
      }
      int64_t v39 = v45 + 4;
      if (v45 + 4 >= v37) {
        goto LABEL_94;
      }
      unint64_t v38 = *(void *)(v43 + 8 * v39);
      if (v38)
      {
LABEL_79:
        int64_t v36 = v39;
LABEL_75:
        unint64_t v20 = (v38 - 1) & v38;
        unint64_t v21 = __clz(__rbit64(v38)) + (v36 << 6);
        int64_t v19 = v36;
        goto LABEL_26;
      }
      int64_t v36 = v45 + 5;
      if (v45 + 5 < v37)
      {
        unint64_t v38 = *(void *)(v43 + 8 * v36);
        if (!v38)
        {
          int64_t v36 = v37 - 1;
          uint64_t v40 = v45 + 6;
          do
          {
            if (v37 == v40) {
              goto LABEL_91;
            }
            unint64_t v38 = *(void *)(v43 + 8 * v40++);
          }
          while (!v38);
          int64_t v36 = v40 - 1;
        }
        goto LABEL_75;
      }
    }
    int64_t v22 = 0;
    unint64_t v20 = 0;
    int64_t v19 = v39;
    goto LABEL_27;
  }
  __break(1u);
  return result;
}

uint64_t sub_10022B350(unint64_t *a1)
{
  uint64_t v2 = v1;
  unint64_t v3 = *a1;
  unint64_t v26 = v3;
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    sub_1001DA3A0((uint64_t)&v26);
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v5 = v4 & (v4 >> 63);
  uint64_t v6 = (void *)*v1;
  int64_t v7 = *(void *)(*v1 + 16);
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || (int64_t v9 = v6[3] >> 1, v9 < v7 + v5))
  {
    uint64_t v6 = sub_1001A858C(isUniquelyReferenced_nonNull_native, v7, 1, v6);
    int64_t v9 = v6[3] >> 1;
  }
  uint64_t v10 = v6[2];
  int64_t v11 = v9 - v10;
  int64_t v12 = sub_10023D3DC((unint64_t)v25, &v6[2 * v10 + 4], v9 - v10);
  if (v12 < v5)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v12 >= 1)
  {
    uint64_t v13 = v6[2];
    BOOL v14 = __OFADD__(v13, v12);
    uint64_t v15 = v13 + v12;
    if (v14)
    {
      __break(1u);
      goto LABEL_26;
    }
    uint64_t v6[2] = v15;
  }
  if (v12 == v11)
  {
LABEL_14:
    int64_t v11 = v6[2];
    unint64_t v17 = sub_1003D0A94();
    if (!v17) {
      goto LABEL_11;
    }
    while (1)
    {
      unint64_t v19 = v6[3];
      int64_t v20 = v19 >> 1;
      if ((uint64_t)(v19 >> 1) < v11 + 1)
      {
        unint64_t v22 = v17;
        uint64_t v23 = v18;
        uint64_t v24 = sub_1001A858C((void *)(v19 > 1), v11 + 1, 1, v6);
        uint64_t v18 = v23;
        uint64_t v6 = v24;
        unint64_t v17 = v22;
        int64_t v20 = v6[3] >> 1;
        if (v11 < v20)
        {
LABEL_19:
          unint64_t v21 = &v6[2 * v11 + 5];
          while (1)
          {
            *(v21 - 1) = v17;
            *unint64_t v21 = v18;
            ++v11;
            unint64_t v17 = sub_1003D0A94();
            if (!v17) {
              break;
            }
            v21 += 2;
            if (v20 == v11)
            {
              int64_t v11 = v20;
              goto LABEL_16;
            }
          }
LABEL_26:
          uint64_t v6[2] = v11;
          break;
        }
      }
      else if (v11 < v20)
      {
        goto LABEL_19;
      }
LABEL_16:
      uint64_t v6[2] = v11;
    }
  }
LABEL_11:
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = v6;
  return result;
}

uint64_t sub_10022B528(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v23 = v4 + v2;
  }
  else {
    int64_t v23 = v4;
  }
  unint64_t v3 = sub_1001A893C(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v10 = (*(void *)(v3 + 24) >> 1) - v9;
  uint64_t v11 = *(void *)(type metadata accessor for CollaboratorStatus() - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v14 = v3 + v13 + v12 * v9;
  unint64_t v15 = a1 + v13;
  uint64_t v16 = v12 * v8;
  unint64_t v17 = v14 + v16;
  unint64_t v18 = v15 + v16;
  if (v15 < v17 && v14 < v18) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v20 = *(void *)(v3 + 16);
  BOOL v21 = __OFADD__(v20, v8);
  uint64_t v22 = v20 + v8;
  if (!v21)
  {
    *(void *)(v3 + 16) = v22;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *int64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10022B6D8(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  unint64_t v3 = sub_1001A8A98(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v9 = (char *)v3 + v8 + 32;
  if (a1 + 32 < (unint64_t)&v9[v2] && (unint64_t)v9 < a1 + 32 + v2) {
    goto LABEL_24;
  }
  memcpy(v9, (const void *)(a1 + 32), v2);
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10022B820(unint64_t a1)
{
  return sub_10022C570(a1, (unint64_t *)type metadata accessor for AttachmentSearchResult, &qword_1006A1600, (uint64_t *)&unk_1006A00D0, (uint64_t *)sub_1003485CC);
}

uint64_t sub_10022B85C(unint64_t a1)
{
  return sub_10022C360(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_10023E238);
}

uint64_t sub_10022B874(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  unint64_t v3 = sub_1001A8C44(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[v9 + 4];
  if (a1 + 32 < v10 + 8 * v8 && v10 < a1 + 32 + 8 * v8) {
    goto LABEL_24;
  }
  sub_10002F214(&qword_1006A00A0);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10022B9E4(uint64_t a1)
{
  uint64_t v4 = _s3TagVMa();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v79 = (uint64_t)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10002F214(&qword_10069FFF0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v80 = (uint64_t)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v78 = (uint64_t)&v66 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v66 - v13;
  uint64_t v15 = *(void *)(a1 + 16);
  unint64_t v16 = *v1;
  int64_t v17 = *(void *)(*v1 + 16);
  int64_t v18 = v17 + v15;
  if (__OFADD__(v17, v15))
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v2 = v5;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v1 = v16;
  uint64_t v81 = v4;
  if (!isUniquelyReferenced_nonNull_native || (int64_t v20 = *(void *)(v16 + 24) >> 1, v20 < v18))
  {
    if (v17 <= v18) {
      int64_t v21 = v17 + v15;
    }
    else {
      int64_t v21 = v17;
    }
    unint64_t v16 = sub_1001A8FB0(isUniquelyReferenced_nonNull_native, v21, 1, v16);
    *uint64_t v1 = v16;
    int64_t v20 = *(void *)(v16 + 24) >> 1;
  }
  uint64_t v22 = *(void *)(v16 + 16);
  int64_t v17 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  int64_t v18 = *(void *)(v5 + 72);
  int64_t v23 = v20 - v22;
  uint64_t v24 = sub_10023DA74(&v82, v16 + v17 + v18 * v22, v20 - v22, a1);
  if (v24 < v15) {
    goto LABEL_17;
  }
  if (v24)
  {
    uint64_t v26 = *(void *)(v16 + 16);
    BOOL v27 = __OFADD__(v26, v24);
    uint64_t v28 = v26 + v24;
    if (v27)
    {
      __break(1u);
      goto LABEL_22;
    }
    *(void *)(v16 + 16) = v28;
  }
  if (v24 == v23)
  {
LABEL_18:
    int64_t v68 = *(void *)(v16 + 16);
    uint64_t v25 = v82;
    int64_t v23 = v85;
    uint64_t v76 = v83;
    uint64_t v77 = v84;
    if (v86)
    {
      unint64_t v75 = (v86 - 1) & v86;
      unint64_t v30 = __clz(__rbit64(v86)) | (v85 << 6);
      uint64_t v31 = v81;
LABEL_20:
      uint64_t v32 = v25;
      sub_10023FD38(*(void *)(v25 + 48) + v30 * v18, (uint64_t)v14, (uint64_t (*)(void))_s3TagVMa);
      unint64_t v70 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
      v70(v14, 0, 1, v31);
      uint64_t v15 = v23;
      goto LABEL_44;
    }
LABEL_22:
    int64_t v33 = v23 + 1;
    uint64_t v31 = v81;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
LABEL_42:
      uint64_t v31 = v81;
      uint64_t v25 = v12;
    }
    else
    {
      int64_t v34 = (unint64_t)(v77 + 64) >> 6;
      uint64_t v15 = v23;
      if (v33 < v34)
      {
        unint64_t v35 = *(void *)(v76 + 8 * v33);
        if (v35)
        {
LABEL_25:
          unint64_t v75 = (v35 - 1) & v35;
          unint64_t v30 = __clz(__rbit64(v35)) + (v33 << 6);
          int64_t v23 = v33;
          goto LABEL_20;
        }
        int64_t v36 = v23 + 2;
        uint64_t v15 = v23 + 1;
        if (v23 + 2 < v34)
        {
          uint64_t v12 = v25;
          unint64_t v35 = *(void *)(v76 + 8 * v36);
          if (v35)
          {
LABEL_28:
            int64_t v33 = v36;
LABEL_29:
            uint64_t v31 = v81;
            goto LABEL_25;
          }
          uint64_t v15 = v23 + 2;
          uint64_t v31 = v81;
          if (v23 + 3 < v34)
          {
            unint64_t v35 = *(void *)(v76 + 8 * (v23 + 3));
            if (v35)
            {
              int64_t v33 = v23 + 3;
              goto LABEL_29;
            }
            int64_t v36 = v23 + 4;
            uint64_t v15 = v23 + 3;
            uint64_t v31 = v81;
            if (v23 + 4 < v34)
            {
              unint64_t v35 = *(void *)(v76 + 8 * v36);
              if (v35) {
                goto LABEL_28;
              }
              int64_t v33 = v23 + 5;
              uint64_t v15 = v23 + 4;
              uint64_t v31 = v81;
              if (v23 + 5 < v34)
              {
                unint64_t v35 = *(void *)(v76 + 8 * v33);
                if (v35) {
                  goto LABEL_25;
                }
                uint64_t v15 = v34 - 1;
                int64_t v37 = v23 + 6;
                do
                {
                  if (v34 == v37) {
                    goto LABEL_42;
                  }
                  unint64_t v35 = *(void *)(v76 + 8 * v37++);
                }
                while (!v35);
                int64_t v33 = v37 - 1;
                goto LABEL_29;
              }
            }
          }
        }
      }
    }
    uint64_t v32 = v25;
    unint64_t v70 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
    v70(v14, 1, 1, v31);
    unint64_t v75 = 0;
LABEL_44:
    uint64_t v38 = v32;
    uint64_t v82 = v32;
    uint64_t v83 = v76;
    uint64_t v84 = v77;
    int64_t v85 = v15;
    uint64_t v71 = v15;
    unint64_t v86 = v75;
    uint64_t v39 = v78;
    sub_10002F034((uint64_t)v14, v78, &qword_10069FFF0);
    uint64_t v74 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
    if (v74(v39, 1, v31) == 1)
    {
      uint64_t v40 = v78;
LABEL_46:
      sub_10002B754((uint64_t)v14, &qword_10069FFF0);
      sub_10017B518();
      return sub_10002B754(v40, &qword_10069FFF0);
    }
    uint64_t v69 = v5 + 56;
    uint64_t v40 = v78;
    int64_t v41 = v68;
    while (1)
    {
      uint64_t v67 = v38;
      sub_10002B754(v40, &qword_10069FFF0);
      unint64_t v42 = *v1;
      unint64_t v43 = *(void *)(*v1 + 24);
      int64_t v44 = v43 >> 1;
      int64_t v68 = v41;
      if ((uint64_t)(v43 >> 1) < v41 + 1)
      {
        unint64_t v42 = sub_1001A8FB0(v43 > 1, v41 + 1, 1, v42);
        *uint64_t v1 = v42;
        int64_t v44 = *(void *)(v42 + 24) >> 1;
      }
      uint64_t v45 = v80;
      sub_10002F034((uint64_t)v14, v80, &qword_10069FFF0);
      if (v74(v45, 1, v81) == 1)
      {
        uint64_t v46 = v45;
        uint64_t v38 = v67;
        int64_t v41 = v68;
LABEL_87:
        sub_10002B754(v46, &qword_10069FFF0);
        uint64_t v40 = v78;
        goto LABEL_49;
      }
      unint64_t v72 = v42 + v17;
      uint64_t v47 = v79;
      sub_100242F14(v45, v79, (uint64_t (*)(void))_s3TagVMa);
      uint64_t v38 = v67;
      BOOL v48 = v68 < v44;
      int64_t v49 = v68 <= v44 ? v44 : v68;
      int64_t v73 = v49;
      uint64_t v50 = v47;
      int64_t v51 = v68;
      if (v48) {
        break;
      }
LABEL_48:
      sub_100241CB0(v50, (uint64_t (*)(void))_s3TagVMa);
      int64_t v41 = v73;
      uint64_t v40 = v78;
LABEL_49:
      *(void *)(*v1 + 16) = v41;
      sub_10002F034((uint64_t)v14, v40, &qword_10069FFF0);
      if (v74(v40, 1, v81) == 1) {
        goto LABEL_46;
      }
    }
    while (1)
    {
      sub_10002B754((uint64_t)v14, &qword_10069FFF0);
      uint64_t result = sub_100242F14(v50, v72 + v51 * v18, (uint64_t (*)(void))_s3TagVMa);
      uint64_t v52 = v82;
      int64_t v53 = v85;
      uint64_t v76 = v83;
      uint64_t v77 = v84;
      if (v86) {
        break;
      }
      int64_t v58 = v85 + 1;
      if (__OFADD__(v85, 1))
      {
        __break(1u);
        return result;
      }
      int64_t v59 = (unint64_t)(v77 + 64) >> 6;
      int64_t v60 = v85;
      if (v58 < v59)
      {
        unint64_t v61 = *(void *)(v76 + 8 * v58);
        if (v61) {
          goto LABEL_65;
        }
        int64_t v60 = v85 + 1;
        if (v85 + 2 < v59)
        {
          unint64_t v61 = *(void *)(v76 + 8 * (v85 + 2));
          if (v61)
          {
            int64_t v58 = v85 + 2;
            goto LABEL_65;
          }
          int64_t v60 = v85 + 2;
          if (v85 + 3 < v59)
          {
            unint64_t v61 = *(void *)(v76 + 8 * (v85 + 3));
            if (v61)
            {
              int64_t v58 = v85 + 3;
              goto LABEL_65;
            }
            int64_t v60 = v85 + 3;
            if (v85 + 4 < v59)
            {
              unint64_t v61 = *(void *)(v76 + 8 * (v85 + 4));
              if (v61)
              {
                int64_t v58 = v85 + 4;
LABEL_65:
                uint64_t v54 = v51;
                unint64_t v75 = (v61 - 1) & v61;
                unint64_t v55 = __clz(__rbit64(v61)) + (v58 << 6);
                int64_t v53 = v58;
LABEL_61:
                sub_10023FD38(*(void *)(v82 + 48) + v55 * v18, (uint64_t)v14, (uint64_t (*)(void))_s3TagVMa);
                uint64_t v56 = v81;
                v70(v14, 0, 1, v81);
                int64_t v57 = v53;
                uint64_t v50 = v79;
                goto LABEL_83;
              }
              int64_t v58 = v85 + 5;
              int64_t v60 = v85 + 4;
              uint64_t v50 = v79;
              if (v85 + 5 < v59)
              {
                unint64_t v61 = *(void *)(v76 + 8 * v58);
                if (v61) {
                  goto LABEL_65;
                }
                int64_t v62 = v85 + 6;
                while (v59 != v62)
                {
                  unint64_t v61 = *(void *)(v76 + 8 * v62++);
                  if (v61)
                  {
                    int64_t v58 = v62 - 1;
                    goto LABEL_65;
                  }
                }
                uint64_t v50 = v79;
                int64_t v60 = v59 - 1;
              }
            }
          }
        }
      }
      uint64_t v54 = v51;
      uint64_t v56 = v81;
      int64_t v63 = v60;
      v70(v14, 1, 1, v81);
      int64_t v57 = v63;
      unint64_t v75 = 0;
LABEL_83:
      uint64_t v64 = v54 + 1;
      uint64_t v38 = v52;
      uint64_t v82 = v52;
      uint64_t v83 = v76;
      uint64_t v84 = v77;
      int64_t v85 = v57;
      uint64_t v71 = v57;
      unint64_t v86 = v75;
      uint64_t v65 = v80;
      sub_10002F034((uint64_t)v14, v80, &qword_10069FFF0);
      if (v74(v65, 1, v56) == 1)
      {
        int64_t v41 = v64;
        uint64_t v46 = v65;
        goto LABEL_87;
      }
      sub_100242F14(v65, v50, (uint64_t (*)(void))_s3TagVMa);
      int64_t v51 = v64;
      if (v64 == v73) {
        goto LABEL_48;
      }
    }
    uint64_t v54 = v51;
    unint64_t v75 = (v86 - 1) & v86;
    unint64_t v55 = __clz(__rbit64(v86)) | (v85 << 6);
    goto LABEL_61;
  }

  return sub_10017B518();
}

uint64_t sub_10022C2EC(unint64_t a1)
{
  return sub_10022C360(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_10023E46C);
}

uint64_t sub_10022C304(unint64_t a1)
{
  return sub_10022C360(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_10023E6A0);
}

uint64_t sub_10022C31C(uint64_t a1)
{
  return sub_10022C7C0(a1, (uint64_t (*)(void))sub_1001A92CC, (uint64_t (*)(void))type metadata accessor for ChecklistItemEntity);
}

uint64_t sub_10022C348(unint64_t a1)
{
  return sub_10022C360(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_10023E8D4);
}

uint64_t sub_10022C360(unint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v2 >> 62))
  {
    uint64_t v6 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v7 = v6 + v5;
    if (!__OFADD__(v6, v5)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v7 = v17 + v5;
  if (__OFADD__(v17, v5)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v8 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  uint64_t *v2 = v8;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v8 & 0x8000000000000000) == 0 && (v8 & 0x4000000000000000) == 0)
    {
      uint64_t v10 = v8 & 0xFFFFFFFFFFFFFF8;
      if (v7 <= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v8 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    uint64_t *v2 = v11;
    uint64_t v10 = v11 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t result = a2(v10 + 8 * *(void *)(v10 + 16) + 32, (*(void *)(v10 + 24) >> 1) - *(void *)(v10 + 16), a1);
    if (v13 >= v5) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (v13 >= 1)
  {
    uint64_t v14 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v15 = __OFADD__(v14, v13);
    uint64_t v16 = v14 + v13;
    if (v15)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
  }
  swift_bridgeObjectRelease();

  return specialized Array._endMutation()();
}

uint64_t sub_10022C534(unint64_t a1)
{
  return sub_10022C570(a1, (unint64_t *)type metadata accessor for TableSearchResult, (unint64_t *)&unk_1006A00B8, &qword_1006A00B0, (uint64_t *)sub_1003485CC);
}

uint64_t sub_10022C570(unint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v5 >> 62))
  {
    uint64_t v12 = *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v13 = v12 + v11;
    if (!__OFADD__(v12, v11)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v13 = v23 + v11;
  if (__OFADD__(v23, v11)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v14 = *v5;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v5 = v14;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v14 & 0x8000000000000000) == 0 && (v14 & 0x4000000000000000) == 0)
    {
      uint64_t v16 = v14 & 0xFFFFFFFFFFFFFF8;
      if (v13 <= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  uint64_t v24 = v11;
  uint64_t v11 = (uint64_t)a2;
  a2 = a3;
  a3 = (unint64_t *)a4;
  a4 = a5;
  if (v14 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    *uint64_t v5 = v17;
    uint64_t v16 = v17 & 0xFFFFFFFFFFFFFF8;
    a5 = a4;
    a4 = (uint64_t *)a3;
    a3 = a2;
    a2 = (unint64_t *)v11;
    uint64_t v11 = v24;
LABEL_11:
    uint64_t result = sub_10023E000(v16 + 8 * *(void *)(v16 + 16) + 32, (*(void *)(v16 + 24) >> 1) - *(void *)(v16 + 16), a1, (void (*)(void))a2, a3, a4, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))a5);
    if (v19 >= v11) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (v19 >= 1)
  {
    uint64_t v20 = *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v21 = __OFADD__(v20, v19);
    uint64_t v22 = v20 + v19;
    if (v21)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) = v22;
  }
  swift_bridgeObjectRelease();

  return specialized Array._endMutation()();
}

uint64_t sub_10022C794(uint64_t a1)
{
  return sub_10022C7C0(a1, (uint64_t (*)(void))sub_1001A946C, (uint64_t (*)(void))type metadata accessor for AccountEntity);
}

uint64_t sub_10022C7C0(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v6 + v4 <= *(void *)(v5 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
  uint64_t v5 = a2();
  if (!*(void *)(a1 + 16))
  {
LABEL_15:
    if (!v4) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v10 = *(void *)(v5 + 16);
  uint64_t v11 = (*(void *)(v5 + 24) >> 1) - v10;
  uint64_t v12 = *(void *)(a3(0) - 8);
  uint64_t v13 = *(void *)(v12 + 72);
  if (v11 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v15 = v5 + v14 + v13 * v10;
  unint64_t v16 = a1 + v14;
  uint64_t v17 = v13 * v4;
  unint64_t v18 = v15 + v17;
  unint64_t v19 = v16 + v17;
  if (v16 < v18 && v15 < v19) {
    goto LABEL_21;
  }
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    *unint64_t v3 = v5;
    return result;
  }
  uint64_t v21 = *(void *)(v5 + 16);
  BOOL v22 = __OFADD__(v21, v4);
  uint64_t v23 = v21 + v4;
  if (!v22)
  {
    *(void *)(v5 + 16) = v23;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10022C97C(int64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v61 = a2;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v62 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  int64_t v60 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  __chkstk_darwin(v14);
  uint64_t v16 = (uint64_t)&v47;
  unint64_t v18 = (char *)&v47 - v17;
  uint64_t v19 = a4 >> 1;
  uint64_t v20 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v58 = v15;
  unint64_t v59 = a4;
  uint64_t v63 = a1;
  a1 = *v4;
  int64_t v21 = *(void *)(*v4 + 16);
  int64_t v22 = v21 + v20;
  if (__OFADD__(v21, v20))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v4 = a1;
  if (!isUniquelyReferenced_nonNull_native || (int64_t v24 = *(void *)(a1 + 24) >> 1, v24 < v22))
  {
    if (v21 <= v22) {
      int64_t v25 = v21 + v20;
    }
    else {
      int64_t v25 = v21;
    }
    a1 = sub_1001A94A0(isUniquelyReferenced_nonNull_native, v25, 1, a1);
    *uint64_t v4 = a1;
    int64_t v24 = *(void *)(a1 + 24) >> 1;
  }
  uint64_t v16 = *(void *)(a1 + 16);
  uint64_t v26 = v24 - v16;
  if (v19 == a3)
  {
    if (v20 <= 0)
    {
      uint64_t v20 = 0;
      uint64_t v16 = a3;
      goto LABEL_23;
    }
LABEL_29:
    __break(1u);
LABEL_30:
    uint64_t v57 = v16;
    a1 = *(void *)(a1 + 16);
    uint64_t v35 = v62;
    int64_t v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v62 + 56);
    uint64_t v50 = v62 + 56;
    v49(v18, 1, 1, v8);
    uint64_t v26 = v58;
    sub_10002F034((uint64_t)v18, v58, (uint64_t *)&unk_1006A3E20);
    unint64_t v55 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48);
    uint64_t v56 = v35 + 48;
    if (v55(v26, 1, v8) == 1)
    {
LABEL_31:
      sub_10002B754((uint64_t)v18, (uint64_t *)&unk_1006A3E20);
      swift_unknownObjectRelease();
      return sub_10002B754(v26, (uint64_t *)&unk_1006A3E20);
    }
LABEL_33:
    int64_t v53 = (void (**)(void, void, void))(v62 + 32);
    uint64_t v47 = (void (**)(char *, uint64_t))(v62 + 8);
    BOOL v48 = (void (**)(char *))(v62 + 16);
    do
    {
      sub_10002B754(v26, (uint64_t *)&unk_1006A3E20);
      uint64_t v37 = *v4;
      unint64_t v38 = *(void *)(*v4 + 24);
      int64_t v39 = v38 >> 1;
      if ((uint64_t)(v38 >> 1) < a1 + 1)
      {
        uint64_t v37 = sub_1001A94A0(v38 > 1, a1 + 1, 1, *v4);
        *uint64_t v4 = v37;
        int64_t v39 = *(void *)(v37 + 24) >> 1;
      }
      uint64_t v40 = *(unsigned __int8 *)(v62 + 80);
      sub_10002F034((uint64_t)v18, (uint64_t)v13, (uint64_t *)&unk_1006A3E20);
      if (v55((uint64_t)v13, 1, v8) == 1)
      {
LABEL_34:
        sub_10002B754((uint64_t)v13, (uint64_t *)&unk_1006A3E20);
        int64_t v36 = a1;
      }
      else
      {
        uint64_t v52 = v37 + ((v40 + 32) & ~v40);
        int64_t v41 = *v53;
        if (a1 <= v39) {
          int64_t v42 = v39;
        }
        else {
          int64_t v42 = a1;
        }
        int64_t v54 = v42;
        unint64_t v43 = v60;
        int64_t v51 = v41;
        while (1)
        {
          v41(v43, v13, v8);
          if (v54 == a1) {
            break;
          }
          sub_10002B754((uint64_t)v18, (uint64_t *)&unk_1006A3E20);
          v41(v52 + *(void *)(v62 + 72) * a1, v43, v8);
          if (v57 == v19)
          {
            uint64_t v44 = 1;
            uint64_t v57 = v19;
          }
          else
          {
            uint64_t v46 = sub_10042748C(v64, v57, v63, v61, a3, v59);
            (*v48)(v18);
            ((void (*)(uint64_t *, void))v46)(v64, 0);
            if (__OFADD__(v57, 1)) {
              goto LABEL_51;
            }
            ++v57;
            uint64_t v44 = 0;
            unint64_t v43 = v60;
          }
          v49(v18, v44, 1, v8);
          sub_10002F034((uint64_t)v18, (uint64_t)v13, (uint64_t *)&unk_1006A3E20);
          unsigned int v45 = v55((uint64_t)v13, 1, v8);
          ++a1;
          int64_t v41 = v51;
          if (v45 == 1) {
            goto LABEL_34;
          }
        }
        (*v47)(v43, v8);
        int64_t v36 = v54;
        a1 = v54;
      }
      *(void *)(*v4 + 16) = v36;
      uint64_t v26 = v58;
      sub_10002F034((uint64_t)v18, v58, (uint64_t *)&unk_1006A3E20);
    }
    while (v55(v26, 1, v8) != 1);
    goto LABEL_31;
  }
  if (v26 < v20)
  {
    __break(1u);
    goto LABEL_33;
  }
  if (v20 < 0
    || ((uint64_t v27 = *(void *)(v62 + 72),
         unint64_t v28 = a1
             + ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80))
             + v27 * v16,
         unint64_t v29 = v61 + v27 * a3,
         v29 < v28 + v27 * v20)
      ? (BOOL v30 = v28 >= v29 + v27 * v20)
      : (BOOL v30 = 1),
        !v30))
  {
LABEL_52:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  swift_arrayInitWithCopy();
  if (v20)
  {
    uint64_t v31 = *(void *)(a1 + 16);
    BOOL v32 = __OFADD__(v31, v20);
    uint64_t v33 = v31 + v20;
    if (v32)
    {
      __break(1u);
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }
    *(void *)(a1 + 16) = v33;
  }
  uint64_t v16 = v19;
LABEL_23:
  if (v20 == v26) {
    goto LABEL_30;
  }

  return swift_unknownObjectRelease();
}

uint64_t sub_10022CFEC()
{
  uint64_t v0 = sub_10002F214(&qword_10069FC58);
  sub_100032974(v0, static ICNote.hasValidEntityIdentifier);
  sub_10003293C(v0, (uint64_t)static ICNote.hasValidEntityIdentifier);
  sub_100031418(0, (unint64_t *)&qword_10069FD10);
  return Predicate.init(_:)();
}

uint64_t sub_10022D084@<X0>(uint64_t *a1@<X8>)
{
  int64_t v24 = a1;
  uint64_t v1 = sub_10002F214(&qword_1006A02B0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v25 = v1;
  uint64_t v26 = v2;
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002F214(&qword_1006A03C0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10002F214(&qword_1006A03C8);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10002F214(&qword_1006A03D0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v22 = v13;
  uint64_t v23 = v14;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001DFB0(&qword_1006A03D8, &qword_1006A03C0);
  static PredicateExpressions.build_Arg<A>(_:)();
  swift_getKeyPath();
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_10002F214(&qword_1006A02D8);
  sub_10001DFB0(&qword_1006A03E0, &qword_1006A03C8);
  sub_10001DFB0(&qword_1006A02E8, &qword_1006A02D8);
  static PredicateExpressions.build_flatMap<A, B, C, D>(_:_:)();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  char v27 = 0;
  sub_10002F214(&qword_1006A02F0);
  static PredicateExpressions.build_Arg<A>(_:)();
  uint64_t v17 = sub_10002F214(&qword_1006A03E8);
  unint64_t v18 = v24;
  void v24[3] = v17;
  v18[4] = sub_100242FAC(&qword_1006A03F0, &qword_1006A03E8, (void (*)(void))sub_10024302C);
  sub_10015E0F0(v18);
  sub_10001DFB0(&qword_1006A0410, &qword_1006A03D0);
  sub_10001DFB0(&qword_1006A0358, &qword_1006A02B0);
  sub_100242DF4(&qword_1006A0360);
  uint64_t v19 = v22;
  uint64_t v20 = v25;
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v4, v20);
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v16, v19);
}

uint64_t ICNote.hasValidEntityIdentifier.unsafeMutableAddressor()
{
  return sub_10023944C(&qword_10069AD60, &qword_10069FC58, (uint64_t)static ICNote.hasValidEntityIdentifier);
}

uint64_t static ICNote.hasValidEntityIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_10069AD60 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10002F214(&qword_10069FC58);
  uint64_t v3 = sub_10003293C(v2, (uint64_t)static ICNote.hasValidEntityIdentifier);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_10022D628()
{
  uint64_t v0 = sub_10002F214((uint64_t *)&unk_10069FCA0);
  sub_100032974(v0, qword_10069FC40);
  sub_10003293C(v0, (uint64_t)qword_10069FC40);
  sub_100031418(0, &qword_10069FD20);
  return Predicate.init(_:)();
}

uint64_t sub_10022D6C0@<X0>(uint64_t *a1@<X8>)
{
  int64_t v24 = a1;
  uint64_t v1 = sub_10002F214(&qword_1006A02B0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v25 = v1;
  uint64_t v26 = v2;
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002F214(&qword_1006A02B8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10002F214(&qword_1006A02C0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10002F214(&qword_1006A02C8);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v22 = v13;
  uint64_t v23 = v14;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001DFB0(&qword_1006A02D0, &qword_1006A02B8);
  static PredicateExpressions.build_Arg<A>(_:)();
  swift_getKeyPath();
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_10002F214(&qword_1006A02D8);
  sub_10001DFB0(&qword_1006A02E0, &qword_1006A02C0);
  sub_10001DFB0(&qword_1006A02E8, &qword_1006A02D8);
  static PredicateExpressions.build_flatMap<A, B, C, D>(_:_:)();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  char v27 = 0;
  sub_10002F214(&qword_1006A02F0);
  static PredicateExpressions.build_Arg<A>(_:)();
  uint64_t v17 = sub_10002F214(&qword_1006A02F8);
  unint64_t v18 = v24;
  void v24[3] = v17;
  v18[4] = sub_100242FAC(&qword_1006A0300, &qword_1006A02F8, (void (*)(void))sub_100242BE0);
  sub_10015E0F0(v18);
  sub_10001DFB0(&qword_1006A0350, &qword_1006A02C8);
  sub_10001DFB0(&qword_1006A0358, &qword_1006A02B0);
  sub_100242DF4(&qword_1006A0360);
  uint64_t v19 = v22;
  uint64_t v20 = v25;
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v4, v20);
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v16, v19);
}

uint64_t sub_10022DB88()
{
  uint64_t v0 = sub_10002F214(&qword_1006A0330);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001DFB0(&qword_1006A0368, &qword_1006A0330);
  static PredicateExpressions.build_Arg<A>(_:)();
  swift_getKeyPath();
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_10022DCC4()
{
  uint64_t v0 = sub_10002F214((uint64_t *)&unk_10069FCA0);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = &v18[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_10002F214(&qword_10069FC58);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  self;
  uint64_t v8 = swift_dynamicCastObjCClass();
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    uint64_t v10 = qword_10069AD60;
    swift_unknownObjectRetain();
    if (v10 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_10003293C(v4, (uint64_t)static ICNote.hasValidEntityIdentifier);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v7, v11, v4);
    id v19 = v9;
    uint64_t v20 = &v19;
    swift_unknownObjectRetain();
    char v16 = Predicate.evaluate(_:)();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
LABEL_10:
    swift_unknownObjectRelease();

    return v16 & 1;
  }
  self;
  uint64_t v12 = swift_dynamicCastObjCClass();
  if (v12)
  {
    uint64_t v13 = (void *)v12;
    uint64_t v14 = qword_10069AD68;
    swift_unknownObjectRetain();
    if (v14 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_10003293C(v0, (uint64_t)qword_10069FC40);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v1 + 16))(v3, v15, v0);
    id v19 = v13;
    uint64_t v20 = &v19;
    swift_unknownObjectRetain();
    char v16 = Predicate.evaluate(_:)();
    (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v0);
    goto LABEL_10;
  }
  char v16 = 0;
  return v16 & 1;
}

Class sub_10022E090(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002F034(a1 + *a3, (uint64_t)v7, (uint64_t *)&unk_1006A3E20);
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  Class isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
  {
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
  }

  return isa;
}

id sub_10022E1D0(uint64_t a1, uint64_t a2, void *a3)
{
  if (*(void *)(a1 + *a3 + 8))
  {
    swift_bridgeObjectRetain();
    NSString v3 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v3 = 0;
  }

  return v3;
}

Swift::Int sub_10022E270()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v10 = &v13[-v9];
  Hasher.init()();
  type metadata accessor for NoteID();
  sub_10023FF38((unint64_t *)&unk_1006A0060, (void (*)(uint64_t))&type metadata accessor for NoteID);
  dispatch thunk of Hashable.hash(into:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  sub_10002F034(v0 + OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_creationDate, (uint64_t)v10, (uint64_t *)&unk_1006A3E20);
  uint64_t v11 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v2 + 48);
  if (v11(v10, 1, v1) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 32))(v4, v10, v1);
    Hasher._combine(_:)(1u);
    sub_10023FF38((unint64_t *)&unk_1006A4CF0, (void (*)(uint64_t))&type metadata accessor for Date);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
  }
  sub_10002F034(v0 + OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_modificationDate, (uint64_t)v8, (uint64_t *)&unk_1006A3E20);
  if (v11(v8, 1, v1) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 32))(v4, v8, v1);
    Hasher._combine(_:)(1u);
    sub_10023FF38((unint64_t *)&unk_1006A4CF0, (void (*)(uint64_t))&type metadata accessor for Date);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
  }
  if (*(void *)(v0
                 + OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_folderName
                 + 8))
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  Hasher._combine(_:)(*(unsigned char *)(v0
                               + OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_isModernNote));
  long long v20 = v15;
  long long v21 = v16;
  uint64_t v22 = v17;
  long long v18 = *(_OWORD *)&v13[8];
  long long v19 = v14;
  return Hasher.finalize()();
}

uint64_t sub_10022E674(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_getObjectType();
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v42 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = &v37[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = &v37[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  uint64_t v12 = &v37[-v11];
  uint64_t v13 = sub_10002F214((uint64_t *)&unk_1006A0050);
  uint64_t v14 = __chkstk_darwin(v13);
  long long v16 = &v37[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  long long v18 = &v37[-v17];
  sub_10002F034(a1, (uint64_t)v44, &qword_10069B4D0);
  if (!v45)
  {
    sub_10002B754((uint64_t)v44, &qword_10069B4D0);
    goto LABEL_23;
  }
  if (swift_dynamicCast())
  {
    long long v19 = v43;
    if ((static NoteID.== infix(_:_:)() & 1) == 0
      || (*(void *)&v19[OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_title] != *(void *)(v2 + OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_title)
       || *(void *)&v19[OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_title + 8] != *(void *)(v2 + OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_title + 8))
      && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      goto LABEL_22;
    }
    uint64_t v40 = v19;
    uint64_t v20 = (uint64_t)&v19[OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_creationDate];
    uint64_t v21 = v2 + OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_creationDate;
    uint64_t v22 = (uint64_t)&v18[*(int *)(v13 + 48)];
    sub_10002F034(v20, (uint64_t)v18, (uint64_t *)&unk_1006A3E20);
    int64_t v41 = (void (*)(unsigned char *, uint64_t))v22;
    sub_10002F034(v21, v22, (uint64_t *)&unk_1006A3E20);
    uint64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48);
    if (v23((uint64_t)v18, 1, v4) == 1)
    {
      int64_t v39 = v23;
      unsigned int v24 = v23((uint64_t)v41, 1, v4);
      long long v19 = v40;
      if (v24 == 1)
      {
        sub_10002B754((uint64_t)v18, (uint64_t *)&unk_1006A3E20);
LABEL_15:
        uint64_t v27 = v2 + OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_modificationDate;
        uint64_t v28 = (uint64_t)&v16[*(int *)(v13 + 48)];
        sub_10002F034((uint64_t)&v19[OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_modificationDate], (uint64_t)v16, (uint64_t *)&unk_1006A3E20);
        sub_10002F034(v27, v28, (uint64_t *)&unk_1006A3E20);
        unint64_t v29 = v39;
        if (v39((uint64_t)v16, 1, v4) == 1)
        {
          if (v29(v28, 1, v4) == 1)
          {
            sub_10002B754((uint64_t)v16, (uint64_t *)&unk_1006A3E20);
LABEL_26:
            uint64_t v35 = *(void *)&v19[OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_folderName
                                + 8];
            int64_t v36 = (void *)(v2
                           + OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_folderName);
            uint64_t v30 = *(void *)(v2
                            + OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_folderName
                            + 8);
            if (v35)
            {
              if (v30)
              {
                if (*(void *)&v19[OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_folderName] == *v36
                  && v35 == v30)
                {

                  LOBYTE(v30) = 1;
                  return v30 & 1;
                }
                LOBYTE(v30) = _stringCompareWithSmolCheck(_:_:expecting:)();
              }

              return v30 & 1;
            }
            swift_bridgeObjectRetain();

            if (!v30)
            {
              LOBYTE(v30) = 1;
              return v30 & 1;
            }
            swift_bridgeObjectRelease();
            goto LABEL_23;
          }
          goto LABEL_20;
        }
        sub_10002F034((uint64_t)v16, (uint64_t)v10, (uint64_t *)&unk_1006A3E20);
        if (v29(v28, 1, v4) == 1)
        {
          (*(void (**)(unsigned char *, uint64_t))(v42 + 8))(v10, v4);
LABEL_20:
          uint64_t v25 = (uint64_t)v16;
          goto LABEL_21;
        }
        uint64_t v32 = v42;
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v42 + 32))(v6, v28, v4);
        sub_10023FF38(&qword_10069FA10, (void (*)(uint64_t))&type metadata accessor for Date);
        char v33 = dispatch thunk of static Equatable.== infix(_:_:)();
        int64_t v34 = *(void (**)(unsigned char *, uint64_t))(v32 + 8);
        v34(v6, v4);
        v34(v10, v4);
        sub_10002B754((uint64_t)v16, (uint64_t *)&unk_1006A3E20);
        if (v33) {
          goto LABEL_26;
        }
LABEL_22:

        goto LABEL_23;
      }
    }
    else
    {
      sub_10002F034((uint64_t)v18, (uint64_t)v12, (uint64_t *)&unk_1006A3E20);
      if (v23((uint64_t)v41, 1, v4) != 1)
      {
        int64_t v39 = v23;
        uint64_t v26 = v42;
        (*(void (**)(unsigned char *, void (*)(unsigned char *, uint64_t), uint64_t))(v42 + 32))(v6, v41, v4);
        sub_10023FF38(&qword_10069FA10, (void (*)(uint64_t))&type metadata accessor for Date);
        int v38 = dispatch thunk of static Equatable.== infix(_:_:)();
        int64_t v41 = *(void (**)(unsigned char *, uint64_t))(v26 + 8);
        v41(v6, v4);
        v41(v12, v4);
        sub_10002B754((uint64_t)v18, (uint64_t *)&unk_1006A3E20);
        long long v19 = v40;
        if ((v38 & 1) == 0) {
          goto LABEL_22;
        }
        goto LABEL_15;
      }
      (*(void (**)(unsigned char *, uint64_t))(v42 + 8))(v12, v4);
      long long v19 = v40;
    }
    uint64_t v25 = (uint64_t)v18;
LABEL_21:
    sub_10002B754(v25, (uint64_t *)&unk_1006A0050);
    goto LABEL_22;
  }
LABEL_23:
  LOBYTE(v30) = 0;
  return v30 & 1;
}

void *sub_10022EE48(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = (char *)sub_10002F214(&qword_1006A0288);
  sub_10022F274((void (*)(char *, char *))sub_10022F070, 0, a5, v11, (uint64_t)&type metadata for Never, a7, (uint64_t)&protocol witness table for Never, v12);
  sub_10002F214(&qword_1006A0290);
  sub_10001DFB0(&qword_1006A0298, &qword_1006A0290);
  sub_10001DFB0(&qword_1006A02A0, &qword_1006A0288);
  uint64_t v13 = (void *)Sequence.sorted<A, B>(using:)();
  swift_bridgeObjectRelease();
  if (a3) {
    return v13;
  }
  uint64_t v14 = sub_10041A8EC(a2, (unint64_t)v13);
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  unint64_t v20 = v19;
  swift_bridgeObjectRelease();
  if ((v20 & 1) == 0)
  {
LABEL_3:
    uint64_t v13 = sub_1001A9A80(v14, v16, v18, v20);
LABEL_10:
    swift_unknownObjectRelease();
    return v13;
  }
  type metadata accessor for __ContiguousArrayStorageBase();
  swift_unknownObjectRetain_n();
  uint64_t v21 = (void *)swift_dynamicCastClass();
  if (!v21)
  {
    swift_unknownObjectRelease();
    uint64_t v21 = _swiftEmptyArrayStorage;
  }
  uint64_t v22 = v21[2];
  swift_release();
  if (__OFSUB__(v20 >> 1, v18))
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v22 != (v20 >> 1) - v18)
  {
LABEL_13:
    swift_unknownObjectRelease();
    goto LABEL_3;
  }
  uint64_t v13 = (void *)swift_dynamicCastClass();
  swift_unknownObjectRelease();
  if (!v13)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_10;
  }
  return v13;
}

uint64_t sub_10022F070(unsigned __int8 *a1)
{
  uint64_t v2 = type metadata accessor for String.StandardComparator();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v10 - v7;
  switch(*a1 >> 6)
  {
    case 1:
    case 2:
      swift_getKeyPath();
      uint64_t result = SortDescriptor.init<A>(_:order:)();
      break;
    case 3:
      swift_getKeyPath();
      static String.StandardComparator.localizedStandard.getter();
      (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
      SortDescriptor.init<A>(_:comparator:order:)();
      goto LABEL_4;
    default:
      swift_getKeyPath();
      static String.StandardComparator.localizedStandard.getter();
      (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
      SortDescriptor.init<A>(_:comparator:order:)();
LABEL_4:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      break;
  }
  return result;
}

uint64_t sub_10022F274(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v43 = a8;
  uint64_t v44 = a5;
  uint64_t v9 = v8;
  uint64_t v58 = a2;
  unint64_t v59 = a4;
  uint64_t v57 = a1;
  uint64_t v42 = *(void *)(a5 - 8);
  uint64_t v11 = __chkstk_darwin(a1);
  unint64_t v55 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  int64_t v53 = (char *)&v40 - v13;
  uint64_t v15 = v14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  int64_t v41 = (char *)&v40 - v17;
  uint64_t v18 = type metadata accessor for Optional();
  uint64_t v45 = *(void *)(v18 - 8);
  uint64_t v46 = v18;
  uint64_t v19 = __chkstk_darwin(v18);
  int64_t v51 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v40 - v22;
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v40 = (char *)&v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v50 = *((void *)v15 - 1);
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v40 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a6;
  uint64_t v52 = v15;
  uint64_t v60 = swift_getAssociatedTypeWitness();
  uint64_t v47 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v30 = (char *)&v40 - v29;
  Swift::Int v31 = dispatch thunk of Sequence.underestimatedCount.getter();
  uint64_t v61 = ContiguousArray.init()();
  uint64_t v56 = type metadata accessor for ContiguousArray();
  ContiguousArray.reserveCapacity(_:)(v31);
  (*(void (**)(char *, uint64_t, void))(v50 + 16))(v28, v48, v52);
  unint64_t v59 = v30;
  uint64_t result = dispatch thunk of Sequence.makeIterator()();
  if (v31 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v31)
  {
    char v33 = (uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
    int64_t v34 = (uint64_t (**)(char *, uint64_t))(v54 + 8);
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      dispatch thunk of IteratorProtocol.next()();
      uint64_t result = (*v33)(v23, 1, AssociatedTypeWitness);
      if (result == 1) {
        goto LABEL_18;
      }
      v57(v23, v55);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v55, v44);
        return (*v34)(v23, AssociatedTypeWitness);
      }
      uint64_t v9 = 0;
      (*v34)(v23, AssociatedTypeWitness);
      ContiguousArray.append(_:)();
      if (!--v31)
      {
        uint64_t v35 = v54;
        int64_t v36 = v51;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  uint64_t v35 = v54;
  int64_t v36 = v51;
LABEL_9:
  dispatch thunk of IteratorProtocol.next()();
  unint64_t v55 = *(char **)(v35 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v36, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v37 = v51;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v37, v46);
    return v61;
  }
  else
  {
    uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
    uint64_t v54 = v35 + 32;
    int v38 = (void (**)(char *, uint64_t))(v35 + 8);
    int64_t v39 = v41;
    uint64_t v37 = v51;
    while (1)
    {
      v52(v39, v37, AssociatedTypeWitness);
      v57(v39, v53);
      if (v9) {
        break;
      }
      uint64_t v9 = 0;
      (*v38)(v39, AssociatedTypeWitness);
      ContiguousArray.append(_:)();
      dispatch thunk of IteratorProtocol.next()();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v37, 1, AssociatedTypeWitness) == 1) {
        goto LABEL_14;
      }
    }
    (*v38)(v39, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v53, v44);
  }
}

uint64_t VisibleNotesQuery.init()()
{
  return sub_10023F590();
}

uint64_t VisibleNotesQuery.init(pinnedOnly:includeContents:)(uint64_t a1, uint64_t a2)
{
  return sub_10022F9C4(a1, a2, sub_10023F6CC);
}

uint64_t VisibleNotesQuery.init(passwordProtectedOnly:includeContents:)(uint64_t a1, uint64_t a2)
{
  return sub_10022F9C4(a1, a2, sub_10023F838);
}

uint64_t sub_10022F9C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t VisibleNotesQuery.init(includeContents:)()
{
  return sub_10023F448();
}

uint64_t VisibleNotesQuery.entities(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void v5[4] = a3;
  v5[5] = a5;
  v5[3] = a1;
  return _swift_task_switch(sub_10022FA34, 0, 0);
}

uint64_t sub_10022FA34()
{
  unint64_t v1 = v0[5];
  AppDependency.wrappedValue.getter();
  uint64_t v2 = v0[2];
  v0[6] = v2;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))((char *)&dword_10069C5C8 + dword_10069C5C8);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[7] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10022FAFC;
  uint64_t v4 = v0[3];
  return v6(v4, v2, (v1 >> 8) & 1);
}

uint64_t sub_10022FAFC(uint64_t a1)
{
  uint64_t v4 = *(void **)(*v2 + 48);
  uint64_t v8 = *v2;
  swift_task_dealloc();

  uint64_t v6 = *(uint64_t (**)(uint64_t))(v8 + 8);
  if (!v1) {
    uint64_t v5 = a1;
  }
  return v6(v5);
}

uint64_t VisibleNotesQuery.suggestedEntities()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[28] = a3;
  v4[29] = a4;
  v4[27] = a2;
  uint64_t v5 = type metadata accessor for ManagedEntityContextType();
  v4[30] = v5;
  v4[31] = *(void *)(v5 - 8);
  v4[32] = swift_task_alloc();
  return _swift_task_switch(sub_10022FCE0, 0, 0);
}

uint64_t sub_10022FCE0()
{
  uint64_t v2 = *(void *)(v0 + 248);
  uint64_t v1 = *(void *)(v0 + 256);
  uint64_t v3 = *(void *)(v0 + 240);
  AppDependency.wrappedValue.getter();
  uint64_t v4 = *(void **)(v0 + 192);
  id v5 = [v4 modernManagedObjectContext];
  *(void *)(v0 + 264) = v5;

  AppDependency.wrappedValue.getter();
  uint64_t v6 = *(void **)(v0 + 184);
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, enum case for ManagedEntityContextType.html(_:), v3);
  uint64_t v7 = ICUnifiedNoteContext.managedObjectContext(for:)();
  *(void *)(v0 + 272) = v7;
  uint64_t v8 = v7;
  unint64_t v9 = *(void *)(v0 + 232);
  (*(void (**)(void, void))(*(void *)(v0 + 248) + 8))(*(void *)(v0 + 256), *(void *)(v0 + 240));

  if (IntentParameterDependency.wrappedValue.getter())
  {
    swift_getKeyPath();
    sub_1001FF31C();
    IntentProjection.subscript.getter();
    swift_release();
    if (*(unsigned char *)(v0 + 336) && *(unsigned char *)(v0 + 336) == 1) {
      LOBYTE(v10) = 1;
    }
    else {
      LOBYTE(v10) = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    IntentProjection.subscript.getter();
    swift_release();
    if (*(unsigned char *)(v0 + 337)) {
      LOBYTE(v11) = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    else {
      LOBYTE(v11) = 1;
    }
    swift_bridgeObjectRelease();
    swift_release();
    char v12 = 0;
  }
  else
  {
    uint64_t v11 = HIDWORD(v9) & 1;
    uint64_t v10 = (v9 >> 24) & 1;
    char v12 = v9 & 1;
  }
  *(unsigned char *)(v0 + 338) = v12;
  uint64_t v13 = (*(void *)(v0 + 232) >> 16) & 1;
  id v14 = [objc_allocWithZone((Class)ICRecentNotesCoreDataIndexer) initWithLegacyManagedObjectContext:v8 modernManagedObjectContext:v5];
  *(void *)(v0 + 280) = v14;
  [v14 setMaximumNumberOfNotesPerAccount:10];
  [v14 setPinnedOnly:v13];
  [v14 setPasswordProtectedOnly:v10 & 1];
  [v14 setNonPasswordProtectedOnly:v11 & 1];
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 24) = sub_1002300C4;
  uint64_t v15 = swift_continuation_init();
  *(void *)(v0 + 80) = _NSConcreteStackBlock;
  *(void *)(v0 + 88) = 0x40000000;
  *(void *)(v0 + 96) = sub_10022AB14;
  *(void *)(v0 + 104) = &unk_100631010;
  *(void *)(v0 + 112) = v15;
  [v14 reloadData:v0 + 80];
  return _swift_continuation_await(v0 + 16);
}

uint64_t sub_1002300C4()
{
  return _swift_task_switch(sub_1002301A4, 0, 0);
}

uint64_t sub_1002301A4()
{
  uint64_t v1 = (void *)v0;
  id v2 = [*(id *)(v0 + 280) newSnapshotFromIndex];
  *(void *)(v0 + 288) = v2;
  id v3 = [v2 itemIdentifiers];
  uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = v0 + 152;
    uint64_t v7 = (id *)(v0 + 200);
    uint64_t v8 = v4 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_100032E28(v8, v6);
      sub_100032E28(v6, v0 + 120);
      sub_100031418(0, (unint64_t *)&qword_10069E810);
      if (swift_dynamicCast())
      {
        id v9 = *v7;
        if ((objc_msgSend(*v7, "ic_isNoteType") & 1) != 0
          && ((*(unsigned char *)(v0 + 338) & 1) != 0 || (objc_msgSend(v9, "ic_isModernNoteType") & 1) != 0))
        {
          sub_100018FE8(v6);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          goto LABEL_5;
        }
      }
      sub_100018FE8(v6);
LABEL_5:
      v8 += 32;
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        uint64_t v1 = (void *)v0;
        break;
      }
    }
  }
  v1[37] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  AppDependency.wrappedValue.getter();
  uint64_t v10 = v1[26];
  v1[38] = v10;
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, char))((char *)&dword_10069FC78 + dword_10069FC78);
  uint64_t v11 = (void *)swift_task_alloc();
  v1[39] = v11;
  *uint64_t v11 = v1;
  v11[1] = sub_100230450;
  return v13((uint64_t)_swiftEmptyArrayStorage, v10, 0);
}

uint64_t sub_100230450(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 320) = v1;
  swift_task_dealloc();

  if (v1)
  {
    uint64_t v5 = sub_100230630;
  }
  else
  {
    swift_bridgeObjectRelease();
    *(void *)(v4 + 328) = a1;
    uint64_t v5 = sub_1002305A4;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1002305A4()
{
  id v2 = *(void **)(v0 + 280);
  uint64_t v1 = *(void **)(v0 + 288);
  id v3 = *(void **)(v0 + 264);

  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v5 = *(void *)(v0 + 328);
  return v4(v5);
}

uint64_t sub_100230630()
{
  uint64_t v1 = *(void **)(v0 + 288);
  id v2 = *(void **)(v0 + 280);
  id v3 = *(void **)(v0 + 264);

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1002306C0(uint64_t a1, uint64_t a2, char a3)
{
  *(unsigned char *)(v3 + 104) = a3;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  *(void *)(v3 + 32) = *(void *)(type metadata accessor for NoteEntity(0) - 8);
  *(void *)(v3 + 40) = swift_task_alloc();
  return _swift_task_switch(sub_100230780, 0, 0);
}

uint64_t sub_100230780()
{
  unint64_t v1 = *(void *)(v0 + 16);
  if (!(v1 >> 62))
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    *(void *)(v0 + 48) = v2;
    if (v2) {
      goto LABEL_3;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v23 = *(uint64_t (**)(void *))(v0 + 8);
    return v23(_swiftEmptyArrayStorage);
  }
LABEL_19:
  swift_bridgeObjectRetain();
  uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
  *(void *)(v0 + 48) = v22;
  if (!v22) {
    goto LABEL_20;
  }
LABEL_3:
  for (uint64_t i = 0; ; uint64_t i = *(void *)(v0 + 72))
  {
    *(void *)(v0 + 56) = _swiftEmptyArrayStorage;
    uint64_t v4 = *(void *)(v0 + 16);
    if ((v4 & 0xC000000000000001) != 0) {
      id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v5 = *(id *)(v4 + 8 * i + 32);
    }
    uint64_t v6 = v5;
    *(void *)(v0 + 64) = v5;
    *(void *)(v0 + 72) = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_19;
    }
    if (([v5 isTemporaryID] & 1) == 0) {
      break;
    }
    uint64_t v7 = *(void *)(v0 + 72);
    uint64_t v8 = *(void *)(v0 + 48);

    if (v7 == v8) {
      goto LABEL_20;
    }
  }
  id v9 = [*(id *)(v0 + 24) managedObjectContextForObjectID:v6];
  *(void *)(v0 + 80) = v9;
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = *(void **)(v0 + 24);
    id v12 = v6;
    id v13 = v10;
    id v14 = v11;
    uint64_t v15 = (void *)swift_task_alloc();
    *(void *)(v0 + 88) = v15;
    void *v15 = v0;
    v15[1] = sub_100230A40;
    uint64_t v16 = *(void *)(v0 + 40);
    char v17 = *(unsigned char *)(v0 + 104);
    return NoteEntity.init(for:in:includeContents:noteContext:)(v16, (uint64_t)v12, (uint64_t)v13, v17, (uint64_t)v14);
  }
  else
  {
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = 0;
    id v20 = v6;
    sub_100188C80(v19, 225, v20);

    swift_release();
    swift_willThrow();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
    return v21();
  }
}

uint64_t sub_100230A40()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_100230E60;
  }
  else
  {
    uint64_t v2 = sub_100230B5C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100230B5C()
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v2 = *(void *)(v0 + 56);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
LABEL_22:
  }
    unint64_t v2 = sub_1001A8030(0, *(void *)(v2 + 16) + 1, 1, v2);
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    unint64_t v2 = sub_1001A8030(v3 > 1, v4 + 1, 1, v2);
  }
  id v5 = *(void **)(v0 + 80);
  uint64_t v7 = *(void *)(v0 + 32);
  uint64_t v6 = *(void *)(v0 + 40);
  *(void *)(v2 + 16) = v4 + 1;
  sub_100242F14(v6, v2+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v4, type metadata accessor for NoteEntity);

  while (1)
  {
    uint64_t v8 = *(void *)(v0 + 72);
    uint64_t v9 = *(void *)(v0 + 48);

    if (v8 == v9) {
      break;
    }
    uint64_t v10 = *(void *)(v0 + 72);
    *(void *)(v0 + 56) = v2;
    uint64_t v11 = *(void *)(v0 + 16);
    if ((v11 & 0xC000000000000001) != 0) {
      id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v12 = *(id *)(v11 + 8 * v10 + 32);
    }
    id v13 = v12;
    *(void *)(v0 + 64) = v12;
    *(void *)(v0 + 72) = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_22;
    }
    if (([v12 isTemporaryID] & 1) == 0)
    {
      id v14 = [*(id *)(v0 + 24) managedObjectContextForObjectID:v13];
      *(void *)(v0 + 80) = v14;
      if (v14)
      {
        uint64_t v15 = v14;
        uint64_t v16 = *(void **)(v0 + 24);
        id v17 = v13;
        id v18 = v15;
        id v19 = v16;
        id v20 = (void *)swift_task_alloc();
        *(void *)(v0 + 88) = v20;
        *id v20 = v0;
        v20[1] = sub_100230A40;
        uint64_t v21 = *(void *)(v0 + 40);
        char v22 = *(unsigned char *)(v0 + 104);
        return NoteEntity.init(for:in:includeContents:noteContext:)(v21, (uint64_t)v17, (uint64_t)v18, v22, (uint64_t)v19);
      }
      else
      {
        uint64_t v25 = swift_allocObject();
        *(void *)(v25 + 16) = 0;
        id v26 = v13;
        sub_100188C80(v25, 225, v26);

        swift_release();
        swift_willThrow();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_task_dealloc();
        uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
        return v27();
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v24 = *(uint64_t (**)(unint64_t))(v0 + 8);
  return v24(v2);
}

uint64_t sub_100230E60()
{
  uint64_t v1 = *(void **)(v0 + 64);

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  unint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

int8x8_t sub_100230EE0@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_10023F590();
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4 & 1;
  uint64x2_t v5 = (uint64x2_t)vdupq_n_s64(v4);
  int16x8_t v6 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v5, (uint64x2_t)xmmword_100524D00), (int32x4_t)vshlq_u64(v5, (uint64x2_t)xmmword_100524CF0));
  *(int8x8_t *)v6.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v6), (int8x8_t)0x1000100010001);
  int8x8_t result = vmovn_s16(v6);
  *(_DWORD *)(a1 + 25) = result.i32[0];
  return result;
}

uint64_t sub_100230F48(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 8);
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v3;
  *(unsigned char *)(v2 + 56) = *(unsigned char *)(v1 + 25);
  return _swift_task_switch(sub_100230F74, 0, 0);
}

uint64_t sub_100230F74()
{
  AppDependency.wrappedValue.getter();
  uint64_t v1 = *(void *)(v0 + 16);
  *(void *)(v0 + 40) = v1;
  int16x8_t v6 = (uint64_t (*)(uint64_t, uint64_t, char))((char *)&dword_10069C5C8 + dword_10069C5C8);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  void *v2 = v0;
  v2[1] = sub_100163BE4;
  char v3 = *(unsigned char *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 24);
  return v6(v4, v1, v3);
}

uint64_t sub_100231038(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(unsigned __int8 *)(v1 + 24);
  int v6 = *(unsigned __int8 *)(v1 + 25);
  int v7 = *(unsigned __int8 *)(v1 + 26);
  int v8 = *(unsigned __int8 *)(v1 + 27);
  int v9 = *(unsigned __int8 *)(v1 + 28);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v10;
  uint64_t v11 = 256;
  if (!v6) {
    uint64_t v11 = 0;
  }
  uint64_t v12 = v11 | v5;
  uint64_t v13 = 0x10000;
  if (!v7) {
    uint64_t v13 = 0;
  }
  uint64_t v14 = 0x1000000;
  if (!v8) {
    uint64_t v14 = 0;
  }
  uint64_t v15 = v12 | v13 | v14;
  uint64_t v16 = &_mh_execute_header;
  if (!v9) {
    uint64_t v16 = 0;
  }
  *uint64_t v10 = v2;
  v10[1] = sub_10016F18C;
  return VisibleNotesQuery.suggestedEntities()((uint64_t)v10, v3, v4, v15 | (unint64_t)v16);
}

uint64_t sub_100231140(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1001579C0();
  *uint64_t v5 = v2;
  v5[1] = sub_100161724;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t VisibleNotesQuery.entities(matching:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  uint64_t v6[2] = a1;
  v6[3] = a2;
  return _swift_task_switch(sub_10023121C, 0, 0);
}

uint64_t sub_10023121C()
{
  uint64_t v2 = v0[2];
  uint64_t v1 = v0[3];
  sub_10002F214(&qword_10069FC90);
  uint64_t v3 = *(void *)(type metadata accessor for VisibleNotesQuery.Comparator(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = swift_allocObject();
  v0[8] = v5;
  *(_OWORD *)(v5 + 16) = xmmword_100524D10;
  unint64_t v6 = (uint64_t *)(v5 + v4);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v8 = swift_getKeyPath();
  *unint64_t v6 = KeyPath;
  v6[1] = v8;
  uint64_t v6[2] = v2;
  v6[3] = v1;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  int v9 = (void *)swift_task_alloc();
  v0[9] = v9;
  *int v9 = v0;
  v9[1] = sub_1002313D0;
  uint64_t v10 = v0[5];
  uint64_t v11 = v0[6];
  uint64_t v12 = v0[4];
  return VisibleNotesQuery.entities(matching:mode:sortedBy:limit:)(v5, 0, (uint64_t)_swiftEmptyArrayStorage, 0, 1, v12, v10, v11);
}

uint64_t sub_1002313D0(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 80) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_100231528, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t sub_100231528()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t static VisibleNotesQuery.ComparatorKeyPath.title.getter()
{
  return sub_100238878();
}

uint64_t VisibleNotesQuery.entities(matching:mode:sortedBy:limit:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 2200) = v16;
  *(void *)(v8 + 2192) = a8;
  *(void *)(v8 + 2184) = a7;
  *(void *)(v8 + 2176) = a6;
  *(unsigned char *)(v8 + 2643) = a5;
  *(void *)(v8 + 2168) = a4;
  *(void *)(v8 + 2160) = a3;
  *(unsigned char *)(v8 + 2642) = a2;
  *(void *)(v8 + 2152) = a1;
  uint64_t v9 = type metadata accessor for Logger();
  *(void *)(v8 + 2208) = v9;
  *(void *)(v8 + 2216) = *(void *)(v9 - 8);
  *(void *)(v8 + 2224) = swift_task_alloc();
  *(void *)(v8 + 2232) = swift_task_alloc();
  *(void *)(v8 + 2240) = swift_task_alloc();
  *(void *)(v8 + 2248) = swift_task_alloc();
  uint64_t v10 = sub_10002F214((uint64_t *)&unk_10069FCA0);
  *(void *)(v8 + 2256) = v10;
  *(void *)(v8 + 2264) = *(void *)(v10 - 8);
  *(void *)(v8 + 2272) = swift_task_alloc();
  uint64_t v11 = sub_10002F214(&qword_10069FC58);
  *(void *)(v8 + 2280) = v11;
  *(void *)(v8 + 2288) = *(void *)(v11 - 8);
  *(void *)(v8 + 2296) = swift_task_alloc();
  uint64_t v12 = type metadata accessor for NoteID();
  *(void *)(v8 + 2304) = v12;
  *(void *)(v8 + 2312) = *(void *)(v12 - 8);
  *(void *)(v8 + 2320) = swift_task_alloc();
  sub_10002F214(&qword_10069D370);
  *(void *)(v8 + 2328) = swift_task_alloc();
  *(void *)(v8 + 2336) = swift_task_alloc();
  uint64_t v13 = type metadata accessor for ManagedEntityContextType();
  *(void *)(v8 + 2344) = v13;
  *(void *)(v8 + 2352) = *(void *)(v13 - 8);
  *(void *)(v8 + 2360) = swift_task_alloc();
  return _swift_task_switch(sub_100231868, 0, 0);
}

uint64_t sub_100231868()
{
  CGRect v130 = v0;
  uint64_t v1 = v0[295];
  uint64_t v2 = v0[294];
  uint64_t v3 = v0[293];
  AppDependency.wrappedValue.getter();
  uint64_t v4 = (void *)v0[231];
  v0[296] = [v4 modernManagedObjectContext];

  AppDependency.wrappedValue.getter();
  uint64_t v5 = (void *)v0[268];
  LODWORD(v4) = enum case for ManagedEntityContextType.html(_:);
  unint64_t v6 = *(void (**)(void))(v2 + 104);
  ((void (*)(uint64_t, void, uint64_t))v6)(v1, enum case for ManagedEntityContextType.html(_:), v3);
  v0[297] = ICUnifiedNoteContext.managedObjectContext(for:)();
  uint64_t v7 = v0[295];
  uint64_t v8 = v0[294];
  uint64_t v9 = v0[293];
  uint64_t v10 = v6;
  unsigned int v125 = v4;
  uint64_t v11 = (char *)v0 + 2644;
  BOOL v121 = v0 + 167;
  uint64_t v12 = v0;
  unint64_t v13 = v0[275];
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);

  if (IntentParameterDependency.wrappedValue.getter())
  {
    swift_getKeyPath();
    sub_1001FF31C();
    IntentProjection.subscript.getter();
    swift_release();
    if (*((unsigned char *)v12 + 2640) && *((unsigned char *)v12 + 2640) == 1) {
      LOBYTE(v14) = 1;
    }
    else {
      LOBYTE(v14) = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    IntentProjection.subscript.getter();
    swift_release();
    if (*((unsigned char *)v12 + 2641)) {
      LOBYTE(v15) = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    else {
      LOBYTE(v15) = 1;
    }
    swift_bridgeObjectRelease();
    swift_release();
    char v16 = 0;
  }
  else
  {
    uint64_t v14 = (v13 >> 24) & 1;
    uint64_t v15 = HIDWORD(v13) & 1;
    char v16 = v12[275] & 1;
  }
  void v11[2] = v16;
  v11[1] = v14 & 1;
  long long v123 = v11;
  *uint64_t v11 = v15 & 1;
  uint64_t v17 = v12[294];
  uint64_t v18 = v12[293];
  uint64_t v19 = v12[292];
  uint64_t v20 = v12[291];
  uint64_t v120 = v12[270];
  int v21 = *((unsigned char *)v12 + 2642) & 1;
  unsigned int v119 = enum case for ManagedEntityContextType.modern(_:);
  v10(v19);
  char v22 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56);
  v22(v19, 0, 1, v18);
  sub_10002F034(v19, v20, &qword_10069D370);
  uint64_t v23 = swift_bridgeObjectRetain();
  v12[298] = sub_10023B91C(v23, v21, v20, 0);
  sub_10002B754(v19, &qword_10069D370);
  ((void (*)(uint64_t, void, uint64_t))v10)(v19, v125, v18);
  v22(v19, 0, 1, v18);
  sub_10002F034(v19, v20, &qword_10069D370);
  uint64_t v24 = swift_bridgeObjectRetain();
  v12[299] = sub_10023B91C(v24, v21, v20, 0);
  sub_10002B754(v19, &qword_10069D370);
  ((void (*)(uint64_t, void, uint64_t))v10)(v19, v119, v18);
  v22(v19, 0, 1, v18);
  sub_10002F034(v19, v20, &qword_10069D370);
  uint64_t v25 = swift_bridgeObjectRetain();
  v12[300] = sub_10023B91C(v25, v21, v20, 1);
  sub_10002B754(v19, &qword_10069D370);
  ((void (*)(uint64_t, void, uint64_t))v10)(v19, v125, v18);
  v22(v19, 0, 1, v18);
  sub_10002F034(v19, v20, &qword_10069D370);
  uint64_t v26 = swift_bridgeObjectRetain();
  v12[301] = sub_10023B91C(v26, v21, v20, 1);
  sub_10002B754(v19, &qword_10069D370);
  if (*(void *)(v120 + 16))
  {
    uint64_t v27 = (void *)v12[270];
    uint64_t v28 = sub_10002F214(&qword_10069FCB0);
    uint64_t v29 = sub_10001DFB0(&qword_10069FCB8, &qword_10069FCB0);
    uint64_t v30 = (_UNKNOWN **)swift_allocObject();
    long long v30[2] = v27;
    v30[3] = sub_1003546C0;
    v30[4] = 0;
    v30[5] = sub_10023ED3C;
    v30[6] = 0;
    v30[7] = sub_10023ED4C;
    v30[8] = 0;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v28 = sub_10002F214(&qword_10069FD78);
    uint64_t v29 = sub_10001DFB0(&qword_10069FD80, &qword_10069FD78);
    uint64_t v30 = &off_10062BAC0;
  }
  uint64_t v31 = v12[269];
  v12[170] = v28;
  v12[171] = v29;
  v12[167] = v30;
  sub_10015E154(v121, v28);
  uint64_t v32 = (char *)sub_100031418(0, &qword_10069FCC0);
  v12[302] = v32;
  v12[303] = sub_10022F274((void (*)(char *, char *))sub_10023956C, 0, v28, v32, (uint64_t)&type metadata for Never, v29, (uint64_t)&protocol witness table for Never, v33);
  uint64_t v34 = v12[170];
  uint64_t v35 = v12[171];
  int64_t v36 = sub_10015E154(v121, v34);
  v12[304] = sub_10022F274((void (*)(char *, char *))sub_1002395B0, 0, v34, v32, (uint64_t)&type metadata for Never, v35, (uint64_t)&protocol witness table for Never, (uint64_t)v36);
  uint64_t v37 = sub_10022A884(v31);
  int64_t v38 = v37[2];
  if (v38)
  {
    sub_100169AAC(0, v38, 0);
    int64_t v39 = (void **)(v37 + 5);
    do
    {
      uint64_t v40 = (uint64_t)*(v39 - 1);
      int64_t v41 = *v39;
      uint64_t v128 = 40;
      unint64_t v129 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      v42._countAndFlagsBits = v40;
      v42._object = v41;
      String.append(_:)(v42);
      v43._countAndFlagsBits = 41;
      v43._object = (void *)0xE100000000000000;
      String.append(_:)(v43);
      swift_bridgeObjectRelease();
      unint64_t v45 = _swiftEmptyArrayStorage[2];
      unint64_t v44 = _swiftEmptyArrayStorage[3];
      if (v45 >= v44 >> 1) {
        sub_100169AAC(v44 > 1, v45 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v45 + 1;
      uint64_t v46 = &_swiftEmptyArrayStorage[2 * v45];
      v46[4] = 40;
      v46[5] = 0xE100000000000000;
      v39 += 2;
      --v38;
    }
    while (v38);
    char v47 = *((unsigned char *)v12 + 2642);
    swift_bridgeObjectRelease();
    v12[267] = _swiftEmptyArrayStorage;
    uint64_t v128 = 32;
    unint64_t v129 = 0xE100000000000000;
    if (v47) {
      uint64_t v48 = 31868;
    }
    else {
      uint64_t v48 = 9766;
    }
    unint64_t v49 = 0xE200000000000000;
    String.append(_:)(*(Swift::String *)&v48);
    swift_bridgeObjectRelease();
    v50._countAndFlagsBits = 32;
    v50._object = (void *)0xE100000000000000;
    String.append(_:)(v50);
    sub_10002F214(&qword_10069FCC8);
    sub_10001DFB0((unint64_t *)&qword_10069FCD0, &qword_10069FCC8);
    uint64_t v51 = BidirectionalCollection<>.joined(separator:)();
    uint64_t v53 = v52;
    swift_bridgeObjectRelease();
    swift_release();
    v12[305] = v53;
    sub_100031418(0, (unint64_t *)&unk_1006A4F40);
    uint64_t v54 = (void *)swift_task_alloc();
    v12[306] = v54;
    *uint64_t v54 = v12;
    v54[1] = sub_100232AF0;
    unint64_t v55 = _swiftEmptyArrayStorage;
    uint64_t v56 = v51;
    uint64_t v57 = v53;
    return static ICSearchQueryOperation.searchResults(queryString:rankingQueries:)(v56, v57, v55);
  }
  swift_bridgeObjectRelease();
  v12[317] = 0;
  uint64_t v58 = v12[269];
  unint64_t v59 = *(void *)(v58 + 16);
  if (v59)
  {
    unint64_t v60 = sub_10022A884(v58)[2];
    swift_bridgeObjectRelease();
    BOOL v61 = v60 < v59;
  }
  else
  {
    BOOL v61 = 1;
  }
  v123[3] = v61;
  uint64_t v62 = v12[296];
  sub_100031418(0, (unint64_t *)&qword_10069FD10);
  uint64_t v63 = (void *)static NSObject<>.ic_fetchRequest()();
  v12[318] = v63;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v122 = v63;
  [v63 setSortDescriptors:isa];

  sub_10002F214(&qword_10069BA00);
  uint64_t v65 = swift_allocObject();
  *(_OWORD *)(v65 + 16) = xmmword_100527150;
  uint64_t v66 = self;
  *(void *)(v65 + 32) = [v66 predicateForVisibleNotesInContext:v62];
  sub_100031418(0, &qword_1006A1560);
  if (qword_10069AD60 != -1) {
    swift_once();
  }
  uint64_t v67 = v12[287];
  uint64_t v68 = v12[286];
  uint64_t v69 = v12[285];
  uint64_t v70 = sub_10003293C(v69, (uint64_t)static ICNote.hasValidEntityIdentifier);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 16))(v67, v70, v69);
  uint64_t v71 = NSPredicate.init<A>(_:)();
  if (!v71)
  {
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_57:
    uint64_t v56 = swift_bridgeObjectRelease();
    __break(1u);
    return static ICSearchQueryOperation.searchResults(queryString:rankingQueries:)(v56, v57, v55);
  }
  unint64_t v72 = v12 + 265;
  int64_t v73 = (void *)v12[298];
  uint64_t v74 = v12[275];
  *(void *)(v65 + 40) = v71;
  *(void *)(v65 + 48) = v73;
  uint64_t v128 = v65;
  specialized Array._endMutation()();
  v12[265] = v65;
  id v75 = v73;
  if ((v74 & 0x10000) != 0)
  {
    id v76 = [v66 predicateForPinnedNotes];
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v72 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v72 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  if (v123[1] == 1)
  {
    id v77 = [self predicateForPasswordProtectedObjects];
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v72 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v72 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  if (*v123 == 1)
  {
    id v78 = [self predicateForPasswordProtectedObjects];
    id v79 = [self notPredicateWithSubpredicate:v78];

    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v72 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v72 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  swift_bridgeObjectRetain();
  Class v80 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v81 = self;
  id v82 = [v81 andPredicateWithSubpredicates:v80];

  [v122 setPredicate:v82];
  sub_100031418(0, &qword_10069FD20);
  uint64_t v83 = (void *)static NSObject<>.ic_fetchRequest()();
  v12[319] = v83;
  Class v84 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v126 = v83;
  [v83 setSortDescriptors:v84];

  uint64_t v85 = swift_allocObject();
  *(_OWORD *)(v85 + 16) = xmmword_100527150;
  *(void *)(v85 + 32) = [self predicateForVisibleNotes];
  if (qword_10069AD68 != -1) {
    swift_once();
  }
  uint64_t v86 = v12[284];
  uint64_t v87 = v12[283];
  uint64_t v88 = v12[282];
  uint64_t v89 = sub_10003293C(v88, (uint64_t)qword_10069FC40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v87 + 16))(v86, v89, v88);
  uint64_t v90 = NSPredicate.init<A>(_:)();
  if (!v90) {
    goto LABEL_57;
  }
  uint64_t v91 = v90;
  uint64_t v92 = (void *)v12[299];
  char v93 = v123[2];
  swift_bridgeObjectRelease();
  *(void *)(v85 + 40) = v91;
  *(void *)(v85 + 48) = v92;
  uint64_t v128 = v85;
  specialized Array._endMutation()();
  id v94 = v92;
  Class v95 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v96 = [v81 andPredicateWithSubpredicates:v95];

  [v126 setPredicate:v96];
  if ((v93 & 1) == 0)
  {
    id v97 = [self predicateWithValue:0];
    [v126 setPredicate:v97];
  }
  if ((*((unsigned char *)v12 + 2643) & 1) == 0)
  {
    uint64_t v98 = v12[271];
    [v122 setFetchLimit:v98];
    [v126 setFetchLimit:v98];
  }
  swift_retain();
  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRetain_n();
  uint64_t v99 = Logger.logObject.getter();
  os_log_type_t v100 = static os_log_type_t.info.getter();
  BOOL v101 = os_log_type_enabled(v99, v100);
  uint64_t v102 = v12[281];
  uint64_t v103 = v12[277];
  uint64_t v104 = v12[276];
  if (v101)
  {
    uint64_t v127 = v12[281];
    uint64_t v124 = v12[276];
    uint64_t v105 = (uint8_t *)swift_slowAlloc();
    uint64_t v128 = swift_slowAlloc();
    *(_DWORD *)uint64_t v105 = 136315138;
    type metadata accessor for VisibleNotesQuery.Comparator(0);
    swift_bridgeObjectRetain();
    uint64_t v106 = Array.description.getter();
    unint64_t v108 = v107;
    swift_bridgeObjectRelease();
    v12[262] = sub_10045DA1C(v106, v108, &v128);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v99, v100, "VisibleNotesQuery: performing with filters %s", v105, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v109 = *(void (**)(uint64_t, uint64_t))(v103 + 8);
    v109(v127, v124);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    uint64_t v109 = *(void (**)(uint64_t, uint64_t))(v103 + 8);
    v109(v102, v104);
  }
  v12[320] = v109;
  uint64_t v110 = (void *)v12[297];
  uint64_t v111 = (void *)v12[296];
  uint64_t v112 = swift_allocObject();
  v12[321] = v112;
  *(void *)(v112 + 16) = v111;
  *(void *)(v112 + 24) = v122;
  id v113 = v111;
  id v114 = v122;
  swift_retain();
  sub_10001DFF4(&qword_10069FD38);
  swift_asyncLet_begin();
  uint64_t v115 = swift_allocObject();
  v12[322] = v115;
  *(void *)(v115 + 16) = v110;
  *(void *)(v115 + 24) = v126;
  id v116 = v110;
  id v117 = v126;
  swift_retain();
  swift_asyncLet_begin();
  return _swift_asyncLet_get_throwing(v12 + 82, v12 + 249, sub_100234DD8, v12 + 250);
}

uint64_t sub_100232AF0(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 2456) = a1;
  *(void *)(v3 + 2464) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_10023582C;
  }
  else
  {
    uint64_t v4 = sub_100232C4C;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_100232C4C()
{
  uint64_t v75 = v0;
  unint64_t v1 = *(void *)(v0 + 2456);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_3;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    *(void *)(v0 + 2536) = 0;
    uint64_t v5 = *(void *)(v0 + 2152);
    unint64_t v6 = *(void *)(v5 + 16);
    if (v6)
    {
      unint64_t v7 = sub_10022A884(v5)[2];
      swift_bridgeObjectRelease();
      BOOL v8 = v7 < v6;
    }
    else
    {
      BOOL v8 = 1;
    }
    *(unsigned char *)(v0 + 2647) = v8;
    uint64_t v9 = *(void *)(v0 + 2368);
    sub_100031418(0, (unint64_t *)&qword_10069FD10);
    uint64_t v10 = (void *)static NSObject<>.ic_fetchRequest()();
    *(void *)(v0 + 2544) = v10;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v72 = v10;
    [v10 setSortDescriptors:isa];

    sub_10002F214(&qword_10069BA00);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_100527150;
    unint64_t v13 = self;
    *(void *)(v12 + 32) = [v13 predicateForVisibleNotesInContext:v9];
    sub_100031418(0, &qword_1006A1560);
    if (qword_10069AD60 != -1) {
      swift_once();
    }
    uint64_t v14 = *(void *)(v0 + 2296);
    uint64_t v15 = *(void *)(v0 + 2288);
    uint64_t v16 = *(void *)(v0 + 2280);
    uint64_t v17 = sub_10003293C(v16, (uint64_t)static ICNote.hasValidEntityIdentifier);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v14, v17, v16);
    uint64_t v18 = NSPredicate.init<A>(_:)();
    if (v18)
    {
      uint64_t v19 = (void *)(v0 + 2120);
      uint64_t v20 = *(void **)(v0 + 2384);
      uint64_t v21 = *(void *)(v0 + 2200);
      *(void *)(v12 + 40) = v18;
      *(void *)(v12 + 48) = v20;
      uint64_t v74 = v12;
      specialized Array._endMutation()();
      *(void *)(v0 + 2120) = v12;
      id v22 = v20;
      if ((v21 & 0x10000) != 0)
      {
        id v23 = [v13 predicateForPinnedNotes];
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((*v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      if (*(unsigned char *)(v0 + 2645) == 1)
      {
        id v24 = [self predicateForPasswordProtectedObjects];
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((*v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      if (*(unsigned char *)(v0 + 2644) == 1)
      {
        id v25 = [self predicateForPasswordProtectedObjects];
        id v26 = [self notPredicateWithSubpredicate:v25];

        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((*v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      swift_bridgeObjectRetain();
      Class v27 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      uint64_t v28 = self;
      id v29 = [v28 andPredicateWithSubpredicates:v27];

      [v72 setPredicate:v29];
      sub_100031418(0, &qword_10069FD20);
      uint64_t v30 = (void *)static NSObject<>.ic_fetchRequest()();
      *(void *)(v0 + 2552) = v30;
      Class v31 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v73 = v30;
      [v30 setSortDescriptors:v31];

      uint64_t v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_100527150;
      *(void *)(v32 + 32) = [self predicateForVisibleNotes];
      if (qword_10069AD68 != -1) {
        swift_once();
      }
      uint64_t v33 = *(void *)(v0 + 2272);
      uint64_t v34 = *(void *)(v0 + 2264);
      uint64_t v35 = *(void *)(v0 + 2256);
      uint64_t v36 = sub_10003293C(v35, (uint64_t)qword_10069FC40);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v33, v36, v35);
      uint64_t v37 = NSPredicate.init<A>(_:)();
      if (v37)
      {
        uint64_t v38 = v37;
        int64_t v39 = *(void **)(v0 + 2392);
        char v40 = *(unsigned char *)(v0 + 2646);
        swift_bridgeObjectRelease();
        *(void *)(v32 + 40) = v38;
        *(void *)(v32 + 48) = v39;
        uint64_t v74 = v32;
        specialized Array._endMutation()();
        id v41 = v39;
        Class v42 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        id v43 = [v28 andPredicateWithSubpredicates:v42];

        [v73 setPredicate:v43];
        if ((v40 & 1) == 0)
        {
          id v44 = [self predicateWithValue:0];
          [v73 setPredicate:v44];
        }
        if ((*(unsigned char *)(v0 + 2643) & 1) == 0)
        {
          uint64_t v45 = *(void *)(v0 + 2168);
          [v72 setFetchLimit:v45];
          [v73 setFetchLimit:v45];
        }
        swift_retain();
        swift_retain();
        swift_retain();
        AppDependency.wrappedValue.getter();
        Logger.init(subsystem:category:)();
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRetain_n();
        uint64_t v46 = Logger.logObject.getter();
        os_log_type_t v47 = static os_log_type_t.info.getter();
        BOOL v48 = os_log_type_enabled(v46, v47);
        uint64_t v49 = *(void *)(v0 + 2248);
        uint64_t v50 = *(void *)(v0 + 2216);
        uint64_t v51 = *(void *)(v0 + 2208);
        if (v48)
        {
          uint64_t v71 = *(void *)(v0 + 2248);
          uint64_t v52 = (uint8_t *)swift_slowAlloc();
          uint64_t v74 = swift_slowAlloc();
          *(_DWORD *)uint64_t v52 = 136315138;
          type metadata accessor for VisibleNotesQuery.Comparator(0);
          uint64_t v70 = v51;
          swift_bridgeObjectRetain();
          uint64_t v53 = Array.description.getter();
          unint64_t v55 = v54;
          swift_bridgeObjectRelease();
          *(void *)(v0 + 2096) = sub_10045DA1C(v53, v55, &v74);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v46, v47, "VisibleNotesQuery: performing with filters %s", v52, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v56 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
          v56(v71, v70);
        }
        else
        {
          swift_bridgeObjectRelease_n();

          uint64_t v56 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
          v56(v49, v51);
        }
        *(void *)(v0 + 2560) = v56;
        uint64_t v57 = *(void **)(v0 + 2376);
        uint64_t v58 = *(void **)(v0 + 2368);
        uint64_t v59 = swift_allocObject();
        *(void *)(v0 + 2568) = v59;
        *(void *)(v59 + 16) = v58;
        *(void *)(v59 + 24) = v72;
        id v60 = v58;
        id v61 = v72;
        swift_retain();
        sub_10001DFF4(&qword_10069FD38);
        swift_asyncLet_begin();
        uint64_t v62 = swift_allocObject();
        *(void *)(v0 + 2576) = v62;
        *(void *)(v62 + 16) = v57;
        *(void *)(v62 + 24) = v73;
        id v63 = v57;
        id v64 = v73;
        swift_retain();
        swift_asyncLet_begin();
        uint64_t v65 = sub_100234DD8;
        uint64_t v66 = v0 + 656;
        uint64_t v67 = v0 + 1992;
        uint64_t v68 = v0 + 2000;
        return _swift_asyncLet_get_throwing(v66, v67, v65, v68);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      __break(1u);
    }
    uint64_t v66 = swift_bridgeObjectRelease();
    __break(1u);
    return _swift_asyncLet_get_throwing(v66, v67, v65, v68);
  }
  if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_7;
  }
LABEL_3:
  *(void *)(v0 + 2472) = type metadata accessor for MainActor();
  *(void *)(v0 + 2480) = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10023365C, v3, v2);
}

uint64_t sub_10023365C()
{
  unint64_t v1 = (void *)v0[297];
  uint64_t v2 = (void *)v0[296];
  swift_release();
  id v3 = [self sharedIndexer];
  sub_100031418(0, (unint64_t *)&unk_10069FCE0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  sub_10002F214(&qword_10069BA00);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100524CE0;
  *(void *)(v5 + 32) = v2;
  *(void *)(v5 + 40) = v1;
  specialized Array._endMutation()();
  sub_100031418(0, (unint64_t *)&unk_10069FCF0);
  id v6 = v2;
  id v7 = v1;
  Class v8 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v9 = [v3 objectsForSearchableItems:isa inContexts:v8];

  sub_10002F214((uint64_t *)&unk_10069FD00);
  unint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v11 = v12;
    if (!v12) {
      goto LABEL_23;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v12 = swift_bridgeObjectRetain();
    if (!v11) {
      goto LABEL_23;
    }
  }
  if (v11 < 1)
  {
    __break(1u);
    return _swift_task_switch(v12, v13, v14);
  }
  for (uint64_t i = 0; i != v11; ++i)
  {
    if ((v10 & 0xC000000000000001) != 0) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      swift_unknownObjectRetain();
    }
    v0[266] = &OBJC_PROTOCOL___ICSearchIndexableNote;
    uint64_t v16 = swift_dynamicCastObjCProtocolConditional();
    if (!v16) {
      goto LABEL_5;
    }
    uint64_t v17 = (void *)v16;
    swift_getObjectType();
    sub_100031418(0, (unint64_t *)&qword_1006A2780);
    if (!swift_dynamicCastMetatype()) {
      uint64_t v17 = 0;
    }
    if (v17)
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      if ((sub_10022DCC4() & 1) == 0
        || ([v17 isHiddenFromSearch] & 1) != 0
        || ([v17 isDeletedOrInTrash] & 1) != 0)
      {
        swift_unknownObjectRelease_n();
      }
      else
      {
        id v18 = objc_allocWithZone((Class)type metadata accessor for NoteSearchResult(0));
        sub_10023EEBC(v17, v18);
        swift_unknownObjectRelease_n();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
    }
    else
    {
LABEL_5:
      swift_unknownObjectRelease();
    }
  }
LABEL_23:
  swift_bridgeObjectRelease();
  v0[311] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = (uint64_t)sub_100233A1C;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  return _swift_task_switch(v12, v13, v14);
}

uint64_t sub_100233A1C()
{
  uint64_t v73 = v0;
  if ((static EntityQueryComparatorMode.== infix(_:_:)() & 1) == 0)
  {
    *(void *)(v0 + 2536) = *(void *)(v0 + 2488);
    uint64_t v3 = *(void *)(v0 + 2152);
    unint64_t v4 = *(void *)(v3 + 16);
    if (v4)
    {
      unint64_t v5 = sub_10022A884(v3)[2];
      swift_bridgeObjectRelease();
      BOOL v6 = v5 < v4;
    }
    else
    {
      BOOL v6 = 1;
    }
    *(unsigned char *)(v0 + 2647) = v6;
    uint64_t v7 = *(void *)(v0 + 2368);
    sub_100031418(0, (unint64_t *)&qword_10069FD10);
    Class v8 = (void *)static NSObject<>.ic_fetchRequest()();
    *(void *)(v0 + 2544) = v8;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v70 = v8;
    [v8 setSortDescriptors:isa];

    sub_10002F214(&qword_10069BA00);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_100527150;
    uint64_t v11 = self;
    *(void *)(v10 + 32) = [v11 predicateForVisibleNotesInContext:v7];
    sub_100031418(0, &qword_1006A1560);
    if (qword_10069AD60 != -1) {
      swift_once();
    }
    uint64_t v12 = *(void *)(v0 + 2296);
    uint64_t v13 = *(void *)(v0 + 2288);
    uint64_t v14 = *(void *)(v0 + 2280);
    uint64_t v15 = sub_10003293C(v14, (uint64_t)static ICNote.hasValidEntityIdentifier);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v12, v15, v14);
    uint64_t v16 = NSPredicate.init<A>(_:)();
    if (v16)
    {
      uint64_t v17 = (void *)(v0 + 2120);
      id v18 = *(void **)(v0 + 2384);
      uint64_t v19 = *(void *)(v0 + 2200);
      *(void *)(v10 + 40) = v16;
      *(void *)(v10 + 48) = v18;
      uint64_t v72 = v10;
      specialized Array._endMutation()();
      *(void *)(v0 + 2120) = v10;
      id v20 = v18;
      if ((v19 & 0x10000) != 0)
      {
        id v21 = [v11 predicateForPinnedNotes];
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((*v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      if (*(unsigned char *)(v0 + 2645) == 1)
      {
        id v22 = [self predicateForPasswordProtectedObjects];
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((*v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      if (*(unsigned char *)(v0 + 2644) == 1)
      {
        id v23 = [self predicateForPasswordProtectedObjects];
        id v24 = [self notPredicateWithSubpredicate:v23];

        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((*v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      swift_bridgeObjectRetain();
      Class v25 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v26 = self;
      id v27 = [v26 andPredicateWithSubpredicates:v25];

      [v70 setPredicate:v27];
      sub_100031418(0, &qword_10069FD20);
      uint64_t v28 = (void *)static NSObject<>.ic_fetchRequest()();
      *(void *)(v0 + 2552) = v28;
      Class v29 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v71 = v28;
      [v28 setSortDescriptors:v29];

      uint64_t v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = xmmword_100527150;
      *(void *)(v30 + 32) = [self predicateForVisibleNotes];
      if (qword_10069AD68 != -1) {
        swift_once();
      }
      uint64_t v31 = *(void *)(v0 + 2272);
      uint64_t v32 = *(void *)(v0 + 2264);
      uint64_t v33 = *(void *)(v0 + 2256);
      uint64_t v34 = sub_10003293C(v33, (uint64_t)qword_10069FC40);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v31, v34, v33);
      uint64_t v35 = NSPredicate.init<A>(_:)();
      if (v35)
      {
        uint64_t v36 = v35;
        uint64_t v37 = *(void **)(v0 + 2392);
        char v38 = *(unsigned char *)(v0 + 2646);
        swift_bridgeObjectRelease();
        *(void *)(v30 + 40) = v36;
        *(void *)(v30 + 48) = v37;
        uint64_t v72 = v30;
        specialized Array._endMutation()();
        id v39 = v37;
        Class v40 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        id v41 = [v26 andPredicateWithSubpredicates:v40];

        [v71 setPredicate:v41];
        if ((v38 & 1) == 0)
        {
          id v42 = [self predicateWithValue:0];
          [v71 setPredicate:v42];
        }
        if ((*(unsigned char *)(v0 + 2643) & 1) == 0)
        {
          uint64_t v43 = *(void *)(v0 + 2168);
          [v70 setFetchLimit:v43];
          [v71 setFetchLimit:v43];
        }
        swift_retain();
        swift_retain();
        swift_retain();
        AppDependency.wrappedValue.getter();
        Logger.init(subsystem:category:)();
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRetain_n();
        id v44 = Logger.logObject.getter();
        os_log_type_t v45 = static os_log_type_t.info.getter();
        BOOL v46 = os_log_type_enabled(v44, v45);
        uint64_t v47 = *(void *)(v0 + 2248);
        uint64_t v48 = *(void *)(v0 + 2216);
        uint64_t v49 = *(void *)(v0 + 2208);
        if (v46)
        {
          uint64_t v69 = *(void *)(v0 + 2248);
          uint64_t v50 = (uint8_t *)swift_slowAlloc();
          uint64_t v72 = swift_slowAlloc();
          *(_DWORD *)uint64_t v50 = 136315138;
          type metadata accessor for VisibleNotesQuery.Comparator(0);
          uint64_t v68 = v49;
          swift_bridgeObjectRetain();
          uint64_t v51 = Array.description.getter();
          unint64_t v53 = v52;
          swift_bridgeObjectRelease();
          *(void *)(v0 + 2096) = sub_10045DA1C(v51, v53, &v72);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v44, v45, "VisibleNotesQuery: performing with filters %s", v50, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          unint64_t v54 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
          v54(v69, v68);
        }
        else
        {
          swift_bridgeObjectRelease_n();

          unint64_t v54 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
          v54(v47, v49);
        }
        *(void *)(v0 + 2560) = v54;
        unint64_t v55 = *(void **)(v0 + 2376);
        uint64_t v56 = *(void **)(v0 + 2368);
        uint64_t v57 = swift_allocObject();
        *(void *)(v0 + 2568) = v57;
        *(void *)(v57 + 16) = v56;
        *(void *)(v57 + 24) = v70;
        id v58 = v56;
        id v59 = v70;
        swift_retain();
        sub_10001DFF4(&qword_10069FD38);
        swift_asyncLet_begin();
        uint64_t v60 = swift_allocObject();
        *(void *)(v0 + 2576) = v60;
        *(void *)(v60 + 16) = v55;
        *(void *)(v60 + 24) = v71;
        id v61 = v55;
        id v62 = v71;
        swift_retain();
        swift_asyncLet_begin();
        id v63 = sub_100234DD8;
        uint64_t v64 = v0 + 656;
        uint64_t v65 = v0 + 1992;
        uint64_t v66 = v0 + 2000;
        return _swift_asyncLet_get_throwing(v64, v65, v63, v66);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      __break(1u);
    }
    uint64_t v64 = swift_bridgeObjectRelease();
    __break(1u);
    return _swift_asyncLet_get_throwing(v64, v65, v63, v66);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 2496) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10023440C, v2, v1);
}

uint64_t sub_10023440C()
{
  unint64_t v1 = *(void *)(v0 + 2488);
  swift_release();
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v2 = v3;
    if (!v3) {
      goto LABEL_24;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v3 = swift_bridgeObjectRetain();
    if (!v2) {
      goto LABEL_24;
    }
  }
  if (v2 < 1)
  {
    __break(1u);
    goto LABEL_40;
  }
  uint64_t v6 = 0;
  uint64_t v7 = v0 + 1416;
  Class v8 = (void *)(v0 + 1480);
  uint64_t v50 = (void *)(v0 + 1576);
  unint64_t v9 = v1 & 0xC000000000000001;
  uint64_t v51 = v0 + 1544;
  uint64_t v52 = *(void *)(v0 + 2488) + 32;
  unint64_t v53 = v1 & 0xC000000000000001;
  do
  {
    if (v9) {
      id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v10 = *(id *)(v52 + 8 * v6);
    }
    uint64_t v11 = v10;
    uint64_t v12 = OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_isModernNote;
    if (*((unsigned char *)v10
         + OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_isModernNote) == 1)
    {
      *(void *)(v0 + 1440) = type metadata accessor for NoteSearchResult(0);
      *(void *)(v0 + 1416) = v11;
      sub_10002F034(v7, (uint64_t)v8, &qword_10069B4D0);
      uint64_t v13 = *(void *)(v0 + 1504);
      if (v13)
      {
        uint64_t v14 = sub_10015E154(v8, *(void *)(v0 + 1504));
        uint64_t v15 = v2;
        uint64_t v16 = v7;
        uint64_t v17 = *(void *)(v13 - 8);
        uint64_t v18 = swift_task_alloc();
        (*(void (**)(uint64_t, void *, uint64_t))(v17 + 16))(v18, v14, v13);
        id v19 = v11;
        uint64_t v20 = _bridgeAnythingToObjectiveC<A>(_:)();
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v18, v13);
        uint64_t v7 = v16;
        uint64_t v2 = v15;
        Class v8 = (void *)(v0 + 1480);
        unint64_t v9 = v53;
        swift_task_dealloc();
        sub_100018FE8(v0 + 1480);
      }
      else
      {
        id v21 = v11;
        uint64_t v20 = 0;
      }
      unsigned __int8 v22 = [*(id *)(v0 + 2400) evaluateWithObject:v20];
      swift_unknownObjectRelease();
      sub_10002B754(v7, &qword_10069B4D0);
      if (v22) {
        goto LABEL_21;
      }
    }
    if ((*(unsigned char *)(v0 + 2200) & 1) == 0 || *((unsigned char *)v11 + v12) == 1) {
      goto LABEL_5;
    }
    *(void *)(v0 + 1568) = type metadata accessor for NoteSearchResult(0);
    *(void *)(v0 + 1544) = v11;
    sub_10002F034(v51, (uint64_t)v50, &qword_10069B4D0);
    uint64_t v23 = *(void *)(v0 + 1600);
    if (v23)
    {
      id v24 = sub_10015E154(v50, *(void *)(v0 + 1600));
      uint64_t v25 = *(void *)(v23 - 8);
      uint64_t v26 = swift_task_alloc();
      (*(void (**)(uint64_t, void *, uint64_t))(v25 + 16))(v26, v24, v23);
      id v27 = v11;
      uint64_t v28 = _bridgeAnythingToObjectiveC<A>(_:)();
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v26, v23);
      unint64_t v9 = v53;
      swift_task_dealloc();
      sub_100018FE8((uint64_t)v50);
    }
    else
    {
      id v29 = v11;
      uint64_t v28 = 0;
    }
    unsigned __int8 v30 = [*(id *)(v0 + 2408) evaluateWithObject:v28];
    swift_unknownObjectRelease();
    sub_10002B754(v51, &qword_10069B4D0);
    if (v30)
    {
LABEL_21:
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    else
    {
LABEL_5:
    }
    ++v6;
  }
  while (v2 != v6);
LABEL_24:
  swift_bridgeObjectRelease();
  uint64_t v31 = *(void *)(v0 + 2168);
  char v32 = *(unsigned char *)(v0 + 2643) & 1;
  uint64_t v33 = *(void *)(v0 + 1360);
  uint64_t v34 = *(void *)(v0 + 1368);
  uint64_t v35 = sub_10015E154((void *)(v0 + 1336), v33);
  *(void *)(v0 + 2104) = _swiftEmptyArrayStorage;
  uint64_t v36 = sub_10002F214(&qword_10069FD38);
  uint64_t v37 = sub_10001DFB0(&qword_10069FD60, &qword_10069FD38);
  unint64_t v38 = (unint64_t)sub_10022EE48((uint64_t)v35, v31, v32, v36, v33, v37, v34);
  swift_release();
  if (v38 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v39 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v39)
    {
LABEL_26:
      uint64_t v3 = sub_100169BCC(0, v39 & ~(v39 >> 63), 0);
      if ((v39 & 0x8000000000000000) == 0)
      {
        uint64_t v40 = 0;
        uint64_t v41 = *(void *)(v0 + 2312);
        unint64_t v54 = v38 & 0xC000000000000001;
        id v42 = (void *)v38;
        do
        {
          if (v54) {
            id v43 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v43 = *(id *)(v38 + 8 * v40 + 32);
          }
          id v44 = v43;
          (*(void (**)(void, uint64_t, void))(v41 + 16))(*(void *)(v0 + 2320), (uint64_t)v43 + OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_id, *(void *)(v0 + 2304));

          unint64_t v46 = _swiftEmptyArrayStorage[2];
          unint64_t v45 = _swiftEmptyArrayStorage[3];
          if (v46 >= v45 >> 1) {
            sub_100169BCC(v45 > 1, v46 + 1, 1);
          }
          uint64_t v47 = *(void *)(v0 + 2320);
          uint64_t v48 = *(void *)(v0 + 2304);
          ++v40;
          _swiftEmptyArrayStorage[2] = v46 + 1;
          (*(void (**)(char *, uint64_t, uint64_t))(v41 + 32))((char *)_swiftEmptyArrayStorage+ ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))+ *(void *)(v41 + 72) * v46, v47, v48);
          unint64_t v38 = (unint64_t)v42;
        }
        while (v39 != v40);
        goto LABEL_36;
      }
LABEL_40:
      __break(1u);
      return _swift_task_switch(v3, v4, v5);
    }
  }
  else
  {
    uint64_t v39 = *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v39) {
      goto LABEL_26;
    }
  }
LABEL_36:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 2504) = _swiftEmptyArrayStorage;
  uint64_t v3 = (uint64_t)sub_100234A64;
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_100234A64()
{
  unint64_t v1 = v0[275];
  AppDependency.wrappedValue.getter();
  uint64_t v2 = v0[264];
  v0[314] = v2;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))((char *)&dword_10069C5C8 + dword_10069C5C8);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[315] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100234B30;
  uint64_t v4 = v0[313];
  return v6(v4, v2, (v1 >> 8) & 1);
}

uint64_t sub_100234B30(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v4[209] = v2;
  v4[210] = a1;
  v4[211] = v1;
  v4[316] = v1;
  swift_task_dealloc();

  if (v1)
  {
    uint64_t v5 = sub_100235960;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_100234C80;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100234C80()
{
  uint64_t v1 = *(void **)(v0 + 2408);
  uint64_t v2 = *(void **)(v0 + 2400);
  uint64_t v3 = *(void **)(v0 + 2392);
  uint64_t v4 = *(void **)(v0 + 2384);
  uint64_t v5 = *(void **)(v0 + 2376);

  uint64_t v8 = *(void *)(v0 + 1680);
  sub_100018FE8(v0 + 1336);
  sub_10002E70C(0);
  sub_10002E70C(0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v6(v8);
}

uint64_t sub_100234DD8()
{
  v1[323] = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    return _swift_asyncLet_finish(v1 + 2, v1 + 243, sub_100235AA0, v1 + 162);
  }
  else
  {
    v1[324] = v1[249];
    swift_bridgeObjectRetain();
    return _swift_asyncLet_get_throwing(v1 + 2, v1 + 243, sub_100234EB0, v1 + 220);
  }
}

uint64_t sub_100234EB0()
{
  *(void *)(v1 + 2600) = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return _swift_asyncLet_finish(v1 + 16, v1 + 1944, sub_100235E88, v1 + 1696);
  }
  else
  {
    return _swift_task_switch(sub_100234F80, 0, 0);
  }
}

uint64_t sub_100234F80()
{
  uint64_t v29 = v0;
  char v1 = *(unsigned char *)(v0 + 2647);
  unint64_t v28 = *(void *)(v0 + 2592);
  unint64_t v2 = *(void *)(v0 + 2536);
  uint64_t v3 = *(void *)(v0 + 2168);
  uint64_t v4 = *(unsigned char *)(v0 + 2642) & 1;
  char v5 = *(unsigned char *)(v0 + 2643) & 1;
  unint64_t v6 = swift_bridgeObjectRetain();
  sub_10022C570(v6, (unint64_t *)type metadata accessor for NoteSearchResult, &qword_10069FD60, &qword_10069FD38, (uint64_t *)sub_100348638);
  uint64_t v7 = sub_100239E80(v1, v28, v4, v2, (void *)(v0 + 1336), v3, v5);
  *(void *)(v0 + 2608) = v7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_retain();
  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRetain();
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v8, v9))
  {
    id v10 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v10 = 134217984;
    *(void *)(v0 + 2088) = *(void *)(v7 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "VisibleNotesQuery: found %ld matching note(s)", v10, 0xCu);
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  (*(void (**)(void, void))(v0 + 2560))(*(void *)(v0 + 2240), *(void *)(v0 + 2208));
  swift_retain();
  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRetain_n();
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.debug.getter();
  BOOL v13 = os_log_type_enabled(v11, v12);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v0 + 2560);
  if (v13)
  {
    uint64_t v25 = *(void *)(v0 + 2208);
    uint64_t v26 = *(void *)(v0 + 2232);
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    unint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v16 = Array.description.getter();
    unint64_t v18 = v17;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 2040) = sub_10045DA1C(v16, v18, (uint64_t *)&v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "VisibleNotesQuery: matching note IDs: %s", v15, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v14(v26, v25);
  }
  else
  {
    uint64_t v19 = *(void *)(v0 + 2232);
    uint64_t v20 = *(void *)(v0 + 2208);
    swift_bridgeObjectRelease_n();

    v14(v19, v20);
  }
  uint64_t v21 = *(void *)(v0 + 2200);
  AppDependency.wrappedValue.getter();
  uint64_t v22 = *(void *)(v0 + 1800);
  *(void *)(v0 + 2616) = v22;
  id v27 = (uint64_t (*)(uint64_t, uint64_t, char))((char *)&dword_10069C5C8 + dword_10069C5C8);
  uint64_t v23 = (void *)swift_task_alloc();
  *(void *)(v0 + 2624) = v23;
  void *v23 = v0;
  v23[1] = sub_100235450;
  return v27(v7, v22, BYTE1(v21) & 1);
}

uint64_t sub_100235450(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 1736) = v2;
  *(void *)(v3 + 1744) = a1;
  *(void *)(v3 + 1752) = v1;
  *(void *)(v3 + 2632) = v1;
  swift_task_dealloc();
  if (v1)
  {

    return _swift_task_switch(sub_100236270, 0, 0);
  }
  else
  {

    swift_bridgeObjectRelease();
    return _swift_asyncLet_finish(v3 + 16, v3 + 1944, sub_1002355D0, v3 + 1904);
  }
}

uint64_t sub_1002355D0()
{
  return _swift_task_switch(sub_1002355EC, 0, 0);
}

uint64_t sub_1002355EC()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 656, v0 + 1992, sub_10023566C, v0 + 1808);
}

uint64_t sub_10023566C()
{
  return _swift_task_switch(sub_100235688, 0, 0);
}

uint64_t sub_100235688()
{
  uint64_t v1 = *(void **)(v0 + 2552);
  uint64_t v2 = *(void **)(v0 + 2544);
  uint64_t v3 = *(void **)(v0 + 2408);
  uint64_t v4 = *(void **)(v0 + 2400);
  uint64_t v5 = *(void **)(v0 + 2392);
  unint64_t v6 = *(void **)(v0 + 2384);
  uint64_t v7 = *(void **)(v0 + 2376);

  swift_release();
  uint64_t v10 = *(void *)(v0 + 1744);
  sub_100018FE8(v0 + 1336);
  sub_10002E70C((uint64_t)&unk_10069FD30);
  sub_10002E70C((uint64_t)&unk_10069FD48);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v8(v10);
}

uint64_t sub_10023582C()
{
  uint64_t v1 = *(void **)(v0 + 2408);
  uint64_t v2 = *(void **)(v0 + 2400);
  uint64_t v3 = *(void **)(v0 + 2392);
  uint64_t v4 = *(void **)(v0 + 2384);
  uint64_t v5 = *(void **)(v0 + 2376);

  sub_100018FE8(v0 + 1336);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_100235960()
{
  uint64_t v1 = *(void **)(v0 + 2408);
  uint64_t v2 = *(void **)(v0 + 2400);
  uint64_t v3 = *(void **)(v0 + 2392);
  uint64_t v4 = *(void **)(v0 + 2384);
  uint64_t v5 = *(void **)(v0 + 2376);

  swift_bridgeObjectRelease();
  sub_100018FE8(v0 + 1336);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_100235AA0()
{
  return _swift_task_switch(sub_100235ABC, 0, 0);
}

uint64_t sub_100235ABC()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 656, v0 + 1992, sub_100235B3C, v0 + 2048);
}

uint64_t sub_100235B3C()
{
  return _swift_task_switch(sub_100235B58, 0, 0);
}

uint64_t sub_100235B58()
{
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  swift_release();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    uint64_t v5 = _convertErrorToNSError(_:)();
    v0[237] = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "VisibleNotesQuery: error fetching notes: %@", v3, 0xCu);
    sub_10002F214(&qword_10069FD50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
  }
  unint64_t v6 = (void (*)(uint64_t, uint64_t))v0[320];
  unint64_t v17 = (void *)v0[318];
  unint64_t v18 = (void *)v0[319];
  uint64_t v7 = (void *)v0[301];
  uint64_t v8 = (void *)v0[300];
  os_log_type_t v9 = (void *)v0[299];
  uint64_t v16 = (void *)v0[298];
  uint64_t v10 = (void *)v0[297];
  uint64_t v11 = (void *)v0[296];
  uint64_t v12 = v0[278];
  uint64_t v13 = v0[276];

  v6(v12, v13);
  swift_willThrow();

  sub_100018FE8((uint64_t)(v0 + 167));
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_100235E88()
{
  return _swift_task_switch(sub_100235EA4, 0, 0);
}

uint64_t sub_100235EA4()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 656, v0 + 1992, sub_100235F24, v0 + 1952);
}

uint64_t sub_100235F24()
{
  return _swift_task_switch(sub_100235F40, 0, 0);
}

uint64_t sub_100235F40()
{
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  swift_release();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    uint64_t v5 = _convertErrorToNSError(_:)();
    v0[237] = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "VisibleNotesQuery: error fetching notes: %@", v3, 0xCu);
    sub_10002F214(&qword_10069FD50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
  }
  unint64_t v6 = (void (*)(uint64_t, uint64_t))v0[320];
  unint64_t v17 = (void *)v0[318];
  unint64_t v18 = (void *)v0[319];
  uint64_t v7 = (void *)v0[301];
  uint64_t v8 = (void *)v0[300];
  os_log_type_t v9 = (void *)v0[299];
  uint64_t v16 = (void *)v0[298];
  uint64_t v10 = (void *)v0[297];
  uint64_t v11 = (void *)v0[296];
  uint64_t v12 = v0[278];
  uint64_t v13 = v0[276];

  v6(v12, v13);
  swift_willThrow();

  sub_100018FE8((uint64_t)(v0 + 167));
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_100236270()
{
  swift_bridgeObjectRelease();
  return _swift_asyncLet_finish(v0 + 16, v0 + 1944, sub_1002362F0, v0 + 1376);
}

uint64_t sub_1002362F0()
{
  return _swift_task_switch(sub_10023630C, 0, 0);
}

uint64_t sub_10023630C()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 656, v0 + 1992, sub_10023638C, v0 + 1856);
}

uint64_t sub_10023638C()
{
  return _swift_task_switch(sub_1002363A8, 0, 0);
}

uint64_t sub_1002363A8()
{
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  swift_release();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    uint64_t v5 = _convertErrorToNSError(_:)();
    v0[237] = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "VisibleNotesQuery: error fetching notes: %@", v3, 0xCu);
    sub_10002F214(&qword_10069FD50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
  }
  unint64_t v6 = (void (*)(uint64_t, uint64_t))v0[320];
  unint64_t v17 = (void *)v0[318];
  unint64_t v18 = (void *)v0[319];
  uint64_t v7 = (void *)v0[301];
  uint64_t v8 = (void *)v0[300];
  os_log_type_t v9 = (void *)v0[299];
  uint64_t v16 = (void *)v0[298];
  uint64_t v10 = (void *)v0[297];
  uint64_t v11 = (void *)v0[296];
  uint64_t v12 = v0[278];
  uint64_t v13 = v0[276];

  v6(v12, v13);
  swift_willThrow();

  sub_100018FE8((uint64_t)(v0 + 167));
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_1002366D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 32) = a3;
  *(void *)(v4 + 16) = a1;
  *(_OWORD *)(v4 + 40) = *(_OWORD *)v3;
  *(void *)(v4 + 56) = *(void *)(v3 + 16);
  *(unsigned char *)(v4 + 88) = *(unsigned char *)(v3 + 24);
  *(unsigned char *)(v4 + 89) = *(unsigned char *)(v3 + 25);
  *(unsigned char *)(v4 + 90) = *(unsigned char *)(v3 + 26);
  *(unsigned char *)(v4 + 91) = *(unsigned char *)(v3 + 27);
  *(unsigned char *)(v4 + 92) = *(unsigned char *)(v3 + 28);
  return _swift_task_switch(sub_100236734, 0, 0);
}

uint64_t sub_100236734()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  sub_10002F214(&qword_10069FC90);
  uint64_t v3 = *(void *)(type metadata accessor for VisibleNotesQuery.Comparator(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = swift_allocObject();
  v0[8] = v5;
  *(_OWORD *)(v5 + 16) = xmmword_100524D10;
  unint64_t v6 = (uint64_t *)(v5 + v4);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v8 = swift_getKeyPath();
  *unint64_t v6 = KeyPath;
  v6[1] = v8;
  uint64_t v6[2] = v2;
  v6[3] = v1;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  os_log_type_t v9 = (void *)swift_task_alloc();
  v0[9] = v9;
  *os_log_type_t v9 = v0;
  v9[1] = sub_100236944;
  uint64_t v10 = v0[6];
  uint64_t v11 = v0[7];
  uint64_t v12 = v0[5];
  return VisibleNotesQuery.entities(matching:mode:sortedBy:limit:)(v5, 0, (uint64_t)_swiftEmptyArrayStorage, 0, 1, v12, v10, v11);
}

uint64_t sub_100236944(uint64_t a1)
{
  unint64_t v4 = (void *)*v2;
  v4[10] = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_100231528, 0, 0);
  }
  else
  {
    uint64_t v5 = (void *)v4[2];
    swift_bridgeObjectRelease();
    *uint64_t v5 = a1;
    unint64_t v6 = (uint64_t (*)(void))v4[1];
    return v6();
  }
}

uint64_t sub_100236A9C()
{
  uint64_t v0 = sub_10002F214(&qword_10069FD88);
  sub_100032974(v0, static VisibleNotesQuery.sortingOptions);
  sub_10003293C(v0, (uint64_t)static VisibleNotesQuery.sortingOptions);
  type metadata accessor for NoteEntity(0);
  sub_10023FF38((unint64_t *)&qword_10069B1E0, (void (*)(uint64_t))type metadata accessor for NoteEntity);
  return EntityQuerySortingOptions.init(content:)();
}

uint64_t sub_100236B50()
{
  uint64_t v0 = sub_10002F214(&qword_1006A0260);
  uint64_t v32 = *(void *)(v0 - 8);
  uint64_t v33 = v0 - 8;
  uint64_t v1 = v32;
  uint64_t v30 = v32;
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v31 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v36 = (char *)&v28 - v5;
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v34 = (char *)&v28 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v28 - v9;
  __chkstk_darwin(v8);
  uint64_t v37 = (char *)&v28 - v11;
  swift_getKeyPath();
  sub_10023FF38((unint64_t *)&qword_10069B1E0, (void (*)(uint64_t))type metadata accessor for NoteEntity);
  sub_10001DFB0(&qword_1006A0268, (uint64_t *)&unk_10069EE20);
  EntityQuerySortableByProperty.init<A>(_:)();
  uint64_t v12 = type metadata accessor for NoteEntity(0);
  static EntityQuerySortingOptionsBuilder.buildExpression(_:)();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v1 + 8);
  uint64_t v35 = v10;
  v13(v10, v0);
  swift_getKeyPath();
  sub_10001DFB0(&qword_1006A0270, &qword_10069B470);
  uint64_t v14 = v34;
  EntityQuerySortableByProperty.init<A>(_:)();
  static EntityQuerySortingOptionsBuilder.buildExpression(_:)();
  v13(v14, v0);
  swift_getKeyPath();
  uint64_t v15 = v36;
  EntityQuerySortableByProperty.init<A>(_:)();
  uint64_t v28 = v12;
  static EntityQuerySortingOptionsBuilder.buildExpression(_:)();
  v13(v15, v0);
  uint64_t v29 = v13;
  swift_getKeyPath();
  sub_10001DFB0(&qword_1006A0278, (uint64_t *)&unk_10069B460);
  uint64_t v16 = v31;
  EntityQuerySortableByProperty.init<A>(_:)();
  static EntityQuerySortingOptionsBuilder.buildExpression(_:)();
  v13(v16, v0);
  sub_10002F214(&qword_1006A0280);
  uint64_t v17 = *(void *)(v32 + 72);
  uint64_t v18 = v30;
  unint64_t v19 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_10052AC50;
  unint64_t v21 = v20 + v19;
  uint64_t v22 = *(void (**)(unint64_t, char *, uint64_t))(v18 + 16);
  v22(v21, v37, v0);
  v22(v21 + v17, v35, v0);
  uint64_t v23 = v34;
  v22(v21 + 2 * v17, v34, v0);
  id v24 = v36;
  v22(v21 + 3 * v17, v36, v0);
  uint64_t v25 = static EntityQuerySortingOptionsBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  uint64_t v26 = v29;
  v29(v24, v0);
  v26(v23, v0);
  v26(v35, v0);
  v26(v37, v0);
  return v25;
}

uint64_t sub_100236FD0@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for NoteEntity(0);
  uint64_t result = EntityProperty.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100237014@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for NoteEntity(0);
  uint64_t result = EntityProperty.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100237058@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for NoteEntity(0);
  uint64_t result = EntityProperty.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10023709C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for NoteEntity(0);
  uint64_t result = EntityProperty.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t VisibleNotesQuery.sortingOptions.unsafeMutableAddressor()
{
  return sub_10023944C(&qword_10069AD70, &qword_10069FD88, (uint64_t)static VisibleNotesQuery.sortingOptions);
}

uint64_t static VisibleNotesQuery.sortingOptions.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1002394D0(&qword_10069AD70, &qword_10069FD88, (uint64_t)static VisibleNotesQuery.sortingOptions, a1);
}

uint64_t sub_100237138()
{
  uint64_t v0 = sub_10002F214((uint64_t *)&unk_10069FD90);
  sub_100032974(v0, static VisibleNotesQuery.properties);
  sub_10003293C(v0, (uint64_t)static VisibleNotesQuery.properties);
  type metadata accessor for NoteEntity(0);
  type metadata accessor for VisibleNotesQuery.Comparator(0);
  sub_10023FF38((unint64_t *)&qword_10069B1E0, (void (*)(uint64_t))type metadata accessor for NoteEntity);
  return EntityQueryProperties.init(properties:)();
}

uint64_t sub_100237204()
{
  sub_10002F214(&qword_1006A00E0);
  swift_getKeyPath();
  EntityQueryProperty.__allocating_init<>(_:comparators:)();
  sub_10023FF38((unint64_t *)&qword_10069B1E0, (void (*)(uint64_t))type metadata accessor for NoteEntity);
  uint64_t v0 = static EntityQueryPropertiesBuilder.buildExpression(_:)();
  swift_release();
  sub_10002F214(&qword_1006A00E8);
  swift_getKeyPath();
  swift_retain();
  EntityQueryProperty.__allocating_init<>(_:comparators:)();
  uint64_t v1 = static EntityQueryPropertiesBuilder.buildExpression(_:)();
  swift_release();
  swift_getKeyPath();
  swift_retain();
  EntityQueryProperty.__allocating_init<>(_:comparators:)();
  uint64_t v2 = static EntityQueryPropertiesBuilder.buildExpression(_:)();
  swift_release();
  sub_10002F214(&qword_1006A00F0);
  swift_getKeyPath();
  swift_retain();
  EntityQueryProperty.__allocating_init<>(_:comparators:)();
  uint64_t v3 = static EntityQueryPropertiesBuilder.buildExpression(_:)();
  swift_release();
  sub_10002F214(&qword_1006A00F8);
  swift_getKeyPath();
  swift_retain();
  EntityQueryProperty.__allocating_init<>(_:comparators:)();
  uint64_t v4 = static EntityQueryPropertiesBuilder.buildExpression(_:)();
  swift_release();
  sub_10002F214(&qword_1006A0100);
  swift_getKeyPath();
  swift_retain();
  EntityQueryProperty.__allocating_init<>(_:comparators:)();
  uint64_t v5 = static EntityQueryPropertiesBuilder.buildExpression(_:)();
  swift_release();
  sub_10002F214(&qword_10069BA00);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10052CE10;
  *(void *)(v6 + 32) = v0;
  *(void *)(v6 + 40) = v1;
  *(void *)(v6 + 48) = v2;
  *(void *)(v6 + 56) = v3;
  *(void *)(v6 + 64) = v4;
  *(void *)(v6 + 72) = v5;
  specialized Array._endMutation()();
  type metadata accessor for NoteEntity(0);
  type metadata accessor for VisibleNotesQuery.Comparator(0);
  swift_retain();
  uint64_t v7 = static EntityQueryPropertiesBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v7;
}

uint64_t sub_100237560()
{
  uint64_t v0 = sub_10002F214(&qword_1006A01B8);
  uint64_t v26 = *(void *)(v0 - 8);
  uint64_t v31 = v26;
  uint64_t v1 = __chkstk_darwin(v0);
  uint64_t v34 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v32 = (char *)&v25 - v4;
  uint64_t v5 = __chkstk_darwin(v3);
  id v27 = (char *)&v25 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v28 = (char *)&v25 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v29 = (char *)&v25 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v30 = (char *)&v25 - v12;
  __chkstk_darwin(v11);
  uint64_t v33 = (char *)&v25 - v13;
  sub_10002F214(&qword_1006A01C0);
  swift_allocObject();
  EqualToComparator.init(mappingTransform:)();
  type metadata accessor for NoteEntity(0);
  sub_10023FF38((unint64_t *)&qword_10069B1E0, (void (*)(uint64_t))type metadata accessor for NoteEntity);
  static EntityQueryComparatorsBuilder.buildExpression(_:)();
  swift_release();
  sub_10002F214(&qword_1006A01C8);
  swift_allocObject();
  IsBetweenComparator.init(mappingTransform:)();
  sub_10001DFB0(&qword_1006A01D0, (uint64_t *)&unk_1006A3E20);
  static EntityQueryComparatorsBuilder.buildExpression<>(_:)();
  swift_release();
  sub_10002F214(&qword_1006A01D8);
  swift_allocObject();
  NotEqualToComparator.init(mappingTransform:)();
  static EntityQueryComparatorsBuilder.buildExpression(_:)();
  swift_release();
  sub_10002F214(&qword_1006A01E0);
  swift_allocObject();
  GreaterThanComparator.init(mappingTransform:)();
  static EntityQueryComparatorsBuilder.buildExpression<>(_:)();
  swift_release();
  sub_10002F214(&qword_1006A01E8);
  swift_allocObject();
  GreaterThanOrEqualToComparator.init(mappingTransform:)();
  static EntityQueryComparatorsBuilder.buildExpression<>(_:)();
  swift_release();
  sub_10002F214(&qword_1006A01F0);
  swift_allocObject();
  LessThanComparator.init(mappingTransform:)();
  static EntityQueryComparatorsBuilder.buildExpression<>(_:)();
  swift_release();
  sub_10002F214(&qword_1006A01F8);
  swift_allocObject();
  LessThanOrEqualToComparator.init(mappingTransform:)();
  static EntityQueryComparatorsBuilder.buildExpression<>(_:)();
  swift_release();
  sub_10002F214((uint64_t *)&unk_1006A0200);
  uint64_t v14 = *(void *)(v26 + 72);
  uint64_t v15 = v31;
  unint64_t v16 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_10052AC60;
  unint64_t v18 = v17 + v16;
  unint64_t v19 = *(void (**)(unint64_t, char *, uint64_t))(v15 + 16);
  v19(v18, v33, v0);
  v19(v18 + v14, v30, v0);
  v19(v18 + 2 * v14, v29, v0);
  v19(v18 + 3 * v14, v28, v0);
  v19(v18 + 4 * v14, v27, v0);
  uint64_t v20 = v32;
  v19(v18 + 5 * v14, v32, v0);
  unint64_t v21 = v34;
  v19(v18 + 6 * v14, v34, v0);
  sub_10002F214(&qword_10069B470);
  sub_10002F214((uint64_t *)&unk_1006A3E20);
  type metadata accessor for VisibleNotesQuery.Comparator(0);
  sub_100242660();
  uint64_t v22 = static EntityQueryComparatorsBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v31 + 8);
  v23(v21, v0);
  v23(v20, v0);
  v23(v27, v0);
  v23(v28, v0);
  v23(v29, v0);
  v23(v30, v0);
  v23(v33, v0);
  return v22;
}

uint64_t sub_100237C2C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100237C84(a1, a2);
}

uint64_t static VisibleNotesQuery.ComparatorKeyPath.creationDate.getter()
{
  return sub_100238878();
}

uint64_t sub_100237C58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1002388C8(a1, a2, a3);
}

uint64_t sub_100237C6C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100237C84(a1, a2);
}

uint64_t sub_100237C84@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v5 = swift_getKeyPath();
  a2[3] = sub_10002F214(&qword_1006A0220);
  a2[4] = sub_10001DFB0(&qword_1006A0228, &qword_1006A0220);
  *a2 = KeyPath;
  a2[1] = v5;
  a2[8] = sub_10002F214((uint64_t *)&unk_1006A3E20);
  uint64_t v6 = sub_10015E0F0(a2 + 5);
  sub_10002F034(a1, (uint64_t)v6, (uint64_t *)&unk_1006A3E20);
  type metadata accessor for VisibleNotesQuery.Comparator(0);

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_100237D74@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100237DA4(a1, a2);
}

uint64_t sub_100237D8C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100237DA4(a1, a2);
}

uint64_t sub_100237DA4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v5 = swift_getKeyPath();
  a2[3] = sub_10002F214(&qword_1006A0220);
  a2[4] = sub_10001DFB0(&qword_1006A0228, &qword_1006A0220);
  *a2 = KeyPath;
  a2[1] = v5;
  uint64_t v6 = type metadata accessor for Date();
  a2[8] = v6;
  uint64_t v7 = sub_10015E0F0(a2 + 5);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(v7, a1, v6);
  type metadata accessor for VisibleNotesQuery.Comparator(0);

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_100237EB0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100237DA4(a1, a2);
}

uint64_t sub_100237EC8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100237DA4(a1, a2);
}

uint64_t sub_100237EE0()
{
  uint64_t v0 = sub_10002F214(&qword_1006A0230);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002F214(&qword_1006A0238);
  swift_allocObject();
  EqualToComparator.init(mappingTransform:)();
  type metadata accessor for NoteEntity(0);
  sub_10023FF38((unint64_t *)&qword_10069B1E0, (void (*)(uint64_t))type metadata accessor for NoteEntity);
  static EntityQueryComparatorsBuilder.buildExpression(_:)();
  swift_release();
  sub_10002F214((uint64_t *)&unk_1006A0240);
  unint64_t v4 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100524D10;
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 16))(v5 + v4, v3, v0);
  sub_10002F214((uint64_t *)&unk_10069B460);
  sub_10002F214(&qword_10069B260);
  type metadata accessor for VisibleNotesQuery.Comparator(0);
  sub_1001FEAEC();
  uint64_t v6 = static EntityQueryComparatorsBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v6;
}

uint64_t sub_10023812C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_10002F034(a1, a2, &qword_10069B260);
  type metadata accessor for VisibleNotesQuery.Comparator(0);

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_100238180()
{
  uint64_t v0 = sub_10002F214(&qword_1006A01B8);
  uint64_t v26 = *(void *)(v0 - 8);
  uint64_t v31 = v26;
  uint64_t v1 = __chkstk_darwin(v0);
  uint64_t v34 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v32 = (char *)&v25 - v4;
  uint64_t v5 = __chkstk_darwin(v3);
  id v27 = (char *)&v25 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v28 = (char *)&v25 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v29 = (char *)&v25 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v30 = (char *)&v25 - v12;
  __chkstk_darwin(v11);
  uint64_t v33 = (char *)&v25 - v13;
  sub_10002F214(&qword_1006A01C0);
  swift_allocObject();
  EqualToComparator.init(mappingTransform:)();
  type metadata accessor for NoteEntity(0);
  sub_10023FF38((unint64_t *)&qword_10069B1E0, (void (*)(uint64_t))type metadata accessor for NoteEntity);
  static EntityQueryComparatorsBuilder.buildExpression(_:)();
  swift_release();
  sub_10002F214(&qword_1006A01C8);
  swift_allocObject();
  IsBetweenComparator.init(mappingTransform:)();
  sub_10001DFB0(&qword_1006A01D0, (uint64_t *)&unk_1006A3E20);
  static EntityQueryComparatorsBuilder.buildExpression<>(_:)();
  swift_release();
  sub_10002F214(&qword_1006A01D8);
  swift_allocObject();
  NotEqualToComparator.init(mappingTransform:)();
  static EntityQueryComparatorsBuilder.buildExpression(_:)();
  swift_release();
  sub_10002F214(&qword_1006A01E0);
  swift_allocObject();
  GreaterThanComparator.init(mappingTransform:)();
  static EntityQueryComparatorsBuilder.buildExpression<>(_:)();
  swift_release();
  sub_10002F214(&qword_1006A01E8);
  swift_allocObject();
  GreaterThanOrEqualToComparator.init(mappingTransform:)();
  static EntityQueryComparatorsBuilder.buildExpression<>(_:)();
  swift_release();
  sub_10002F214(&qword_1006A01F0);
  swift_allocObject();
  LessThanComparator.init(mappingTransform:)();
  static EntityQueryComparatorsBuilder.buildExpression<>(_:)();
  swift_release();
  sub_10002F214(&qword_1006A01F8);
  swift_allocObject();
  LessThanOrEqualToComparator.init(mappingTransform:)();
  static EntityQueryComparatorsBuilder.buildExpression<>(_:)();
  swift_release();
  sub_10002F214((uint64_t *)&unk_1006A0200);
  uint64_t v14 = *(void *)(v26 + 72);
  uint64_t v15 = v31;
  unint64_t v16 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_10052AC60;
  unint64_t v18 = v17 + v16;
  unint64_t v19 = *(void (**)(unint64_t, char *, uint64_t))(v15 + 16);
  v19(v18, v33, v0);
  v19(v18 + v14, v30, v0);
  v19(v18 + 2 * v14, v29, v0);
  v19(v18 + 3 * v14, v28, v0);
  v19(v18 + 4 * v14, v27, v0);
  uint64_t v20 = v32;
  v19(v18 + 5 * v14, v32, v0);
  unint64_t v21 = v34;
  v19(v18 + 6 * v14, v34, v0);
  sub_10002F214(&qword_10069B470);
  sub_10002F214((uint64_t *)&unk_1006A3E20);
  type metadata accessor for VisibleNotesQuery.Comparator(0);
  sub_100242660();
  uint64_t v22 = static EntityQueryComparatorsBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v31 + 8);
  v23(v21, v0);
  v23(v20, v0);
  v23(v27, v0);
  v23(v28, v0);
  v23(v29, v0);
  v23(v30, v0);
  v23(v33, v0);
  return v22;
}

uint64_t sub_10023884C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100237C84(a1, a2);
}

uint64_t static VisibleNotesQuery.ComparatorKeyPath.modificationDate.getter()
{
  return sub_100238878();
}

uint64_t sub_100238878()
{
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  return KeyPath;
}

uint64_t sub_1002388B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1002388C8(a1, a2, a3);
}

uint64_t sub_1002388C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v7 = swift_getKeyPath();
  a3[3] = sub_10002F214(&qword_1006A0220);
  a3[4] = sub_10001DFB0(&qword_1006A0228, &qword_1006A0220);
  *a3 = KeyPath;
  a3[1] = v7;
  uint64_t v8 = type metadata accessor for Date();
  a3[8] = v8;
  uint64_t v9 = sub_10015E0F0(a3 + 5);
  uint64_t v10 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  v10(v9, a1, v8);
  a3[12] = v8;
  uint64_t v11 = sub_10015E0F0(a3 + 9);
  v10(v11, a2, v8);
  type metadata accessor for VisibleNotesQuery.Comparator(0);

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1002389F8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100237C84(a1, a2);
}

uint64_t sub_100238A10@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100237DA4(a1, a2);
}

uint64_t sub_100238A28@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100237DA4(a1, a2);
}

uint64_t sub_100238A40@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100237DA4(a1, a2);
}

uint64_t sub_100238A58@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100237DA4(a1, a2);
}

uint64_t sub_100238A70()
{
  uint64_t v0 = sub_10002F214(&qword_1006A0170);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002F214(&qword_1006A0178);
  swift_allocObject();
  sub_10001DFB0((unint64_t *)&unk_1006A0180, (uint64_t *)&unk_10069CE50);
  ContainsComparator.init<>(mappingTransform:)();
  type metadata accessor for NoteEntity(0);
  sub_10023FF38((unint64_t *)&qword_10069B1E0, (void (*)(uint64_t))type metadata accessor for NoteEntity);
  static EntityQueryComparatorsBuilder.buildExpression<>(_:)();
  swift_release();
  sub_10002F214((uint64_t *)&unk_1006A0190);
  unint64_t v4 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100524D10;
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 16))(v5 + v4, v3, v0);
  sub_10002F214((uint64_t *)&unk_1006A3B40);
  sub_10002F214((uint64_t *)&unk_10069CE50);
  type metadata accessor for VisibleNotesQuery.Comparator(0);
  sub_1002425BC();
  uint64_t v6 = static EntityQueryComparatorsBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v6;
}

uint64_t sub_100238CF0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for AttributedString.CharacterView();
  __chkstk_darwin(v2);
  AttributedString.characters.getter();
  sub_10023FF38(&qword_1006A01B0, (void (*)(uint64_t))&type metadata accessor for AttributedString.CharacterView);
  *a1 = String.init<A>(_:)();
  a1[1] = v3;
  type metadata accessor for VisibleNotesQuery.Comparator(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_100238DD4()
{
  uint64_t v0 = sub_10002F214(&qword_1006A0120);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002F214(&qword_1006A0128);
  swift_allocObject();
  sub_1002424E0();
  sub_10001DFB0(&qword_1006A0148, &qword_10069C410);
  sub_10023FF38(&qword_1006A0150, (void (*)(uint64_t))type metadata accessor for TagEntity);
  ContainsComparator.init<>(mappingTransform:)();
  type metadata accessor for NoteEntity(0);
  sub_10023FF38((unint64_t *)&qword_10069B1E0, (void (*)(uint64_t))type metadata accessor for NoteEntity);
  static EntityQueryComparatorsBuilder.buildExpression<A>(_:)();
  swift_release();
  sub_10002F214(&qword_1006A0158);
  unint64_t v4 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100524D10;
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 16))(v5 + v4, v3, v0);
  sub_10002F214((uint64_t *)&unk_1006A0160);
  sub_10002F214(&qword_10069C410);
  type metadata accessor for VisibleNotesQuery.Comparator(0);
  sub_1001FDE14();
  uint64_t v6 = static EntityQueryComparatorsBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v6;
}

uint64_t sub_100239094@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = (void *)(a1 + *(int *)(type metadata accessor for TagEntity() + 24));
  uint64_t v6 = v5[1];
  *(void *)(v4 + 16) = *v5;
  *(void *)(v4 + 24) = v6;
  *a2 = v4;
  uint64_t v7 = enum case for ICQueryType.tag(_:);
  uint64_t v8 = type metadata accessor for ICQueryType();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(a2, v7, v8);
  type metadata accessor for VisibleNotesQuery.Comparator(0);
  swift_storeEnumTagMultiPayload();

  return swift_bridgeObjectRetain();
}

uint64_t sub_100239168()
{
  uint64_t v0 = sub_10002F214(&qword_1006A0108);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002F214(&qword_1006A0110);
  swift_allocObject();
  ContainsComparator.init<>(mappingTransform:)();
  type metadata accessor for NoteEntity(0);
  sub_10023FF38((unint64_t *)&qword_10069B1E0, (void (*)(uint64_t))type metadata accessor for NoteEntity);
  static EntityQueryComparatorsBuilder.buildExpression(_:)();
  swift_release();
  sub_10002F214(&qword_1006A0118);
  unint64_t v4 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100524D10;
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 16))(v5 + v4, v3, v0);
  sub_10002F214((uint64_t *)&unk_10069EE20);
  type metadata accessor for VisibleNotesQuery.Comparator(0);
  sub_1001FDDB8();
  uint64_t v6 = static EntityQueryComparatorsBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v6;
}

uint64_t sub_1002393A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v7 = swift_getKeyPath();
  *a3 = KeyPath;
  a3[1] = v7;
  a3[2] = a1;
  a3[3] = a2;
  type metadata accessor for VisibleNotesQuery.Comparator(0);
  swift_storeEnumTagMultiPayload();

  return swift_bridgeObjectRetain();
}

uint64_t VisibleNotesQuery.properties.unsafeMutableAddressor()
{
  return sub_10023944C(&qword_10069AD78, (uint64_t *)&unk_10069FD90, (uint64_t)static VisibleNotesQuery.properties);
}

uint64_t sub_10023944C(void *a1, uint64_t *a2, uint64_t a3)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_10002F214(a2);

  return sub_10003293C(v5, a3);
}

uint64_t static VisibleNotesQuery.properties.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1002394D0(&qword_10069AD78, (uint64_t *)&unk_10069FD90, (uint64_t)static VisibleNotesQuery.properties, a1);
}

uint64_t sub_1002394D0@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_10002F214(a2);
  uint64_t v8 = sub_10003293C(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t sub_10023956C@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1002395F4(a1, &qword_1006A0378, (void (*)(uint64_t))sub_10034B164, (unint64_t *)&qword_10069FD10, a2);
}

uint64_t sub_1002395B0@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1002395F4(a1, &qword_1006A0370, (void (*)(uint64_t))sub_10034B188, &qword_10069FD20, a2);
}

uint64_t sub_1002395F4@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X2>, void (*a3)(uint64_t)@<X3>, unint64_t *a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v9 = sub_10002F214(a2);
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = *a1;
  sub_100031418(0, &qword_10069FCC0);
  a3(v10);
  sub_100031418(0, a4);
  uint64_t result = NSSortDescriptor.init<A>(_:)();
  *a5 = result;
  return result;
}

uint64_t sub_1002396E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return _swift_task_switch(sub_100239704, 0, 0);
}

uint64_t sub_100239704()
{
  uint64_t v2 = (void *)v0[3];
  uint64_t v1 = (void *)v0[4];
  uint64_t v3 = swift_allocObject();
  v0[5] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  id v4 = v2;
  id v5 = v1;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[6] = v6;
  uint64_t v7 = sub_10002F214(&qword_10069FD38);
  *uint64_t v6 = v0;
  v6[1] = sub_1002397FC;
  uint64_t v8 = v0[2];
  return NSManagedObjectContext.perform<A>(_:)(v8, sub_100242B98, v3, v7);
}

uint64_t sub_1002397FC()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_100239938, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_100239938()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_10023999C@<X0>(void *a1@<X8>)
{
  sub_100031418(0, (unint64_t *)&qword_10069FD10);
  unint64_t result = NSManagedObjectContext.fetch<A>(_:)();
  if (!v1)
  {
    id v4 = sub_10022A708(result);
    unint64_t result = swift_bridgeObjectRelease();
    *a1 = v4;
  }
  return result;
}

uint64_t sub_100239A34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return _swift_task_switch(sub_100239A58, 0, 0);
}

uint64_t sub_100239A58()
{
  uint64_t v2 = (void *)v0[3];
  uint64_t v1 = (void *)v0[4];
  uint64_t v3 = swift_allocObject();
  v0[5] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  id v4 = v2;
  id v5 = v1;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[6] = v6;
  uint64_t v7 = sub_10002F214(&qword_10069FD38);
  *uint64_t v6 = v0;
  v6[1] = sub_100239B50;
  uint64_t v8 = v0[2];
  return NSManagedObjectContext.perform<A>(_:)(v8, sub_100242704, v3, v7);
}

uint64_t sub_100239B50()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_1002430F4, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

unint64_t sub_100239C8C@<X0>(void *a1@<X8>)
{
  sub_100031418(0, &qword_10069FD20);
  unint64_t result = NSManagedObjectContext.fetch<A>(_:)();
  if (!v1)
  {
    unint64_t v4 = result;
    if (result >> 62)
    {
      swift_bridgeObjectRetain();
      unint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v5 = result;
      if (result) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v5 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
      unint64_t result = swift_bridgeObjectRetain();
      if (v5)
      {
LABEL_4:
        if (v5 < 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v10 = 0;
        uint64_t v11 = a1;
        for (uint64_t i = 0; i != v5; ++i)
        {
          if ((v4 & 0xC000000000000001) != 0) {
            id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v7 = *(id *)(v4 + 8 * i + 32);
          }
          uint64_t v8 = v7;
          if (objc_msgSend(v7, "isHiddenFromSearch", v10, v11))
          {
          }
          else
          {
            id v9 = objc_allocWithZone((Class)type metadata accessor for NoteSearchResult(0));
            sub_100242720(v8, v9, &qword_10069FD20);

            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
          }
        }
        swift_bridgeObjectRelease();
        a1 = v11;
        goto LABEL_18;
      }
    }
    swift_bridgeObjectRelease();
LABEL_18:
    unint64_t result = swift_bridgeObjectRelease();
    *a1 = _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_100239E80(char a1, unint64_t a2, uint64_t a3, unint64_t a4, void *a5, uint64_t a6, char a7)
{
  if (a1) {
    swift_bridgeObjectRetain();
  }
  if ((static EntityQueryComparatorMode.== infix(_:_:)() & 1) != 0 && a4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10022C570(a2, (unint64_t *)type metadata accessor for NoteSearchResult, &qword_10069FD60, &qword_10069FD38, (uint64_t *)sub_100348638);
    uint64_t v12 = sub_100269684(a4);
    swift_bridgeObjectRelease();
    sub_1001A9C2C(v12);
    swift_bridgeObjectRelease();
  }
  uint64_t v13 = a5[3];
  uint64_t v14 = a5[4];
  uint64_t v15 = sub_10015E154(a5, v13);
  uint64_t v16 = sub_10002F214(&qword_10069FD38);
  uint64_t v17 = sub_10001DFB0(&qword_10069FD60, &qword_10069FD38);
  unint64_t v18 = sub_10022EE48((uint64_t)v15, a6, a7 & 1, v16, v13, v17, v14);
  swift_bridgeObjectRelease();
  uint64_t v19 = sub_10022A4D8((unint64_t)v18);
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_10023A034@<X0>(uint64_t a1@<X8>)
{
  return sub_10023A08C(&qword_10069AD78, (uint64_t *)&unk_10069FD90, (uint64_t)static VisibleNotesQuery.properties, a1);
}

uint64_t sub_10023A060@<X0>(uint64_t a1@<X8>)
{
  return sub_10023A08C(&qword_10069AD70, &qword_10069FD88, (uint64_t)static VisibleNotesQuery.sortingOptions, a1);
}

uint64_t sub_10023A08C@<X0>(void *a1@<X2>, uint64_t *a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_10002F214(a2);
  uint64_t v8 = sub_10003293C(v7, a3);
  id v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t sub_10023A130(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  *(void *)(v7 + 16) = a1;
  uint64_t v8 = v6[1];
  uint64_t v14 = *v6;
  uint64_t v9 = v6[2];
  char v10 = a3 & 1;
  char v11 = a6 & 1;
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v7 + 24) = v12;
  *uint64_t v12 = v7;
  v12[1] = sub_10016997C;
  return VisibleNotesQuery.entities(matching:mode:sortedBy:limit:)(a2, v10, a4, a5, v11, v14, v8, v9);
}

void sub_10023A278(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_10023A284(id *a1@<X0>, SEL *a2@<X3>, uint64_t *a3@<X8>)
{
  id v4 = [*a1 *a2];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  *a3 = v6;
  a3[1] = v8;
}

void sub_10023A2E8(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  if (*(void *)(a1 + 8)) {
    NSString v3 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v3 = 0;
  }
  id v4 = v3;
  [v2 setTitle:];
}

uint64_t sub_10023A358@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10023A37C(a1, (SEL *)&selRef_creationDate, a2);
}

void sub_10023A364(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_10023A370@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10023A37C(a1, (SEL *)&selRef_modificationDate, a2);
}

uint64_t sub_10023A37C@<X0>(id *a1@<X0>, SEL *a2@<X3>, uint64_t a3@<X8>)
{
  id v4 = [*a1 *a2];
  if (v4)
  {
    uint64_t v5 = v4;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v6 = type metadata accessor for Date();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
    uint64_t v8 = v6;
    uint64_t v9 = a3;
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v11 = type metadata accessor for Date();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v8 = v11;
    uint64_t v9 = a3;
    uint64_t v10 = 1;
  }

  return v7(v9, v10, 1, v8);
}

void sub_10023A440(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_10023A44C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v8 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002F034(a1, (uint64_t)v10, (uint64_t *)&unk_1006A3E20);
  uint64_t v11 = *a2;
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void *)(v12 - 8);
  Class isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) != 1)
  {
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
  }
  [v11 *a5];
}

uint64_t sub_10023A580()
{
  return swift_retain();
}

uint64_t sub_10023A588()
{
  return swift_retain();
}

id sub_10023A590(uint64_t a1, int a2)
{
  LODWORD(v2) = a2;
  uint64_t v4 = type metadata accessor for ICQueryType();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v87 = v4;
  uint64_t v88 = v5;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FolderEntity();
  uint64_t v89 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v86 = (uint64_t)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10002F214((uint64_t *)&unk_1006A0390);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10002F214(&qword_10069D370);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)&v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v83 - v18;
  __chkstk_darwin(v17);
  unint64_t v21 = (char *)&v83 - v20;
  if (v2)
  {
    uint64_t v84 = v8;
    uint64_t v22 = v16;
    uint64_t v23 = v12;
    id v24 = v19;
    uint64_t v25 = v7;
    uint64_t v26 = enum case for ManagedEntityContextType.modern(_:);
    uint64_t v27 = type metadata accessor for ManagedEntityContextType();
    int v85 = v2;
    uint64_t v2 = v27;
    uint64_t v28 = *(void *)(v27 - 8);
    uint64_t v29 = v26;
    uint64_t v7 = v25;
    uint64_t v19 = v24;
    uint64_t v12 = v23;
    uint64_t v16 = v22;
    uint64_t v8 = v84;
    (*(void (**)(char *, uint64_t, uint64_t))(v28 + 104))(v21, v29, v27);
    uint64_t v30 = v2;
    LOBYTE(v2) = v85;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v21, 0, 1, v30);
  }
  else
  {
    sub_10002F034(a1, (uint64_t)&v83 - v20, &qword_10069D370);
  }
  uint64_t v31 = (uint64_t)&v12[*(int *)(v10 + 48)];
  uint64_t v32 = *(int *)(v10 + 64);
  sub_10023FD38(v90, (uint64_t)v12, type metadata accessor for VisibleNotesQuery.Comparator);
  sub_10002F034(a1, v31, &qword_10069D370);
  v12[v32] = v2 & 1;
  type metadata accessor for VisibleNotesQuery.Comparator(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v56 = type metadata accessor for ManagedEntityContextType();
      uint64_t v57 = *(void *)(v56 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v31, 1, v56) == 1) {
        goto LABEL_22;
      }
      sub_10002F034(v31, (uint64_t)v16, &qword_10069D370);
      if ((*(unsigned int (**)(char *, uint64_t))(v57 + 88))(v16, v56) != enum case for ManagedEntityContextType.html(_:))
      {
        (*(void (**)(char *, uint64_t))(v57 + 8))(v16, v56);
LABEL_22:
        uint64_t v74 = v87;
        uint64_t v73 = v88;
        (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v7, v12, v87);
        id v37 = (id)ICQueryType.predicate.getter();
        (*(void (**)(char *, uint64_t))(v73 + 8))(v7, v74);
        goto LABEL_27;
      }
      id v37 = [self predicateWithValue:0];
      sub_10002B754((uint64_t)v21, &qword_10069D370);
      (*(void (**)(char *, uint64_t))(v88 + 8))(v12, v87);
      break;
    case 2u:
      uint64_t v33 = *(void *)v12;
      sub_10002F214((uint64_t *)&unk_1006A1940);
      uint64_t v34 = swift_allocObject();
      *(_OWORD *)(v34 + 16) = xmmword_100524D10;
      *(void *)(v34 + 56) = sub_10002F214((uint64_t *)&unk_1006A03A0);
      *(void *)(v34 + 32) = v33;
      NSString v35 = String._bridgeToObjectiveC()();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v37 = [self predicateWithFormat:v35 argumentArray:isa];

      goto LABEL_27;
    case 3u:
      sub_10002B754((uint64_t)v21, &qword_10069D370);
      swift_bridgeObjectRelease();
      goto LABEL_9;
    case 4u:
      uint64_t v38 = (uint64_t)v21;
      uint64_t v39 = *((void *)v12 + 2);
      uint64_t v40 = *((void *)v12 + 3);
      uint64_t v41 = sub_10023B768(v38);
      uint64_t v43 = v42;
      sub_10002F214((uint64_t *)&unk_1006A1940);
      uint64_t v44 = swift_allocObject();
      *(_OWORD *)(v44 + 16) = xmmword_100527F30;
      *(void *)(v44 + 32) = v41;
      *(void *)(v44 + 40) = v43;
      *(void *)(v44 + 88) = &type metadata for String;
      *(void *)(v44 + 56) = &type metadata for String;
      *(void *)(v44 + 64) = v39;
      *(void *)(v44 + 72) = v40;
      NSString v45 = String._bridgeToObjectiveC()();
      Class v46 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v37 = [self predicateWithFormat:v45 argumentArray:v46];
      swift_release();
      swift_release();

      uint64_t v47 = v38;
      goto LABEL_28;
    case 5u:
    case 6u:
      sub_10016EFCC((long long *)v12, (uint64_t)v93);
      sub_100032E84(v12 + 40, v92);
      uint64_t v58 = v94;
      uint64_t v59 = v95;
      sub_10015E154(v93, v94);
      uint64_t v60 = sub_10034B3D0((uint64_t)v21, v58, v59);
      uint64_t v62 = v61;
      sub_10002F214((uint64_t *)&unk_1006A1940);
      uint64_t v63 = swift_allocObject();
      *(_OWORD *)(v63 + 16) = xmmword_100527F30;
      *(void *)(v63 + 56) = &type metadata for String;
      *(void *)(v63 + 32) = v60;
      *(void *)(v63 + 40) = v62;
      sub_100032E28((uint64_t)v92, v63 + 64);
      NSString v64 = String._bridgeToObjectiveC()();
      v65.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v66 = [self predicateWithFormat:v64 argumentArray:v65.super.isa];
      goto LABEL_17;
    case 7u:
    case 8u:
    case 9u:
    case 0xAu:
      sub_10016EFCC((long long *)v12, (uint64_t)v93);
      sub_100032E84(v12 + 40, v92);
      uint64_t v67 = v94;
      uint64_t v68 = v95;
      sub_10015E154(v93, v94);
      uint64_t v69 = sub_10034B3D0((uint64_t)v21, v67, v68);
      uint64_t v71 = v70;
      sub_10002F214((uint64_t *)&unk_1006A1940);
      uint64_t v72 = swift_allocObject();
      *(_OWORD *)(v72 + 16) = xmmword_100529A00;
      *(void *)(v72 + 32) = v69;
      *(void *)(v72 + 40) = v71;
      *(void *)(v72 + 88) = &type metadata for String;
      *(void *)(v72 + 56) = &type metadata for String;
      *(void *)(v72 + 64) = v69;
      *(void *)(v72 + 72) = v71;
      sub_100032E28((uint64_t)v92, v72 + 96);
      swift_bridgeObjectRetain();
      NSString v64 = String._bridgeToObjectiveC()();
      v65.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v66 = [self predicateWithFormat:v64 argumentArray:v65.super.isa];
LABEL_17:
      id v37 = v66;

      goto LABEL_18;
    case 0xBu:
      sub_10016EFCC((long long *)v12, (uint64_t)v93);
      sub_100032E84(v12 + 40, v92);
      sub_100032E84(v12 + 72, v91);
      uint64_t v48 = v94;
      uint64_t v49 = v95;
      sub_10015E154(v93, v94);
      uint64_t v50 = sub_10034B3D0((uint64_t)v21, v48, v49);
      uint64_t v52 = v51;
      sub_10002F214((uint64_t *)&unk_1006A1940);
      uint64_t v53 = swift_allocObject();
      *(_OWORD *)(v53 + 16) = xmmword_10052AC40;
      *(void *)(v53 + 32) = v50;
      *(void *)(v53 + 40) = v52;
      *(void *)(v53 + 88) = &type metadata for String;
      *(void *)(v53 + 56) = &type metadata for String;
      *(void *)(v53 + 64) = v50;
      *(void *)(v53 + 72) = v52;
      sub_100032E28((uint64_t)v92, v53 + 96);
      *(void *)(v53 + 152) = &type metadata for String;
      *(void *)(v53 + 128) = v50;
      *(void *)(v53 + 136) = v52;
      sub_100032E28((uint64_t)v91, v53 + 160);
      swift_bridgeObjectRetain_n();
      NSString v54 = String._bridgeToObjectiveC()();
      Class v55 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v37 = [self predicateWithFormat:v54 argumentArray:v55];

      sub_100018FE8((uint64_t)v91);
LABEL_18:
      sub_100018FE8((uint64_t)v92);
      sub_10002B754((uint64_t)v21, &qword_10069D370);
      sub_100018FE8((uint64_t)v93);
      break;
    default:
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48))(v12, 1, v8) == 1)
      {
        sub_10002B754((uint64_t)v21, &qword_10069D370);
LABEL_9:
        id v37 = 0;
      }
      else
      {
        if ((v2 & 1) == 0)
        {
          uint64_t v75 = type metadata accessor for ManagedEntityContextType();
          uint64_t v76 = *(void *)(v75 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48))(v31, 1, v75) != 1)
          {
            sub_10002F034(v31, (uint64_t)v19, &qword_10069D370);
            if ((*(unsigned int (**)(char *, uint64_t))(v76 + 88))(v19, v75) != enum case for ManagedEntityContextType.html(_:)) {
              (*(void (**)(char *, uint64_t))(v76 + 8))(v19, v75);
            }
          }
        }
        uint64_t v77 = v86;
        sub_100242F14((uint64_t)v12, v86, (uint64_t (*)(void))type metadata accessor for FolderEntity);
        sub_100031418(0, &qword_1006A1560);
        sub_10002F214((uint64_t *)&unk_1006A1950);
        uint64_t v78 = swift_allocObject();
        *(_OWORD *)(v78 + 16) = xmmword_100524D10;
        uint64_t v79 = FolderID.managedIdentifier.getter();
        uint64_t v81 = v80;
        *(void *)(v78 + 56) = &type metadata for String;
        *(void *)(v78 + 64) = sub_1001BBFD8();
        *(void *)(v78 + 32) = v79;
        *(void *)(v78 + 40) = v81;
        id v37 = (id)NSPredicate.init(format:_:)();
        sub_100241CB0(v77, (uint64_t (*)(void))type metadata accessor for FolderEntity);
LABEL_27:
        uint64_t v47 = (uint64_t)v21;
LABEL_28:
        sub_10002B754(v47, &qword_10069D370);
      }
      break;
  }
  sub_10002B754(v31, &qword_10069D370);
  return v37;
}

uint64_t sub_10023B768(uint64_t a1)
{
  uint64_t v2 = sub_10002F214(&qword_10069D370);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002F034(a1, (uint64_t)v4, &qword_10069D370);
  uint64_t v5 = type metadata accessor for ManagedEntityContextType();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
  {
    int v7 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v4, v5);
    if (v7 != enum case for ManagedEntityContextType.modern(_:))
    {
      if (v7 == enum case for ManagedEntityContextType.html(_:))
      {
        swift_retain();
        uint64_t v4 = (char *)dispatch thunk of AnyKeyPath._kvcKeyPathString.getter();
        uint64_t v5 = v11;
        swift_release();
        if (v5) {
          return (uint64_t)v4;
        }
        __break(1u);
      }
      (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
      return 0;
    }
  }
  swift_retain();
  uint64_t v4 = (char *)dispatch thunk of AnyKeyPath._kvcKeyPathString.getter();
  uint64_t v9 = v8;
  uint64_t result = swift_release();
  if (v9) {
    return (uint64_t)v4;
  }
  __break(1u);
  return result;
}

id sub_10023B91C(uint64_t a1, int a2, uint64_t a3, int a4)
{
  int v67 = a4;
  int v62 = a2;
  uint64_t v63 = a1;
  uint64_t v73 = type metadata accessor for ICQueryType();
  uint64_t v68 = *(void *)(v73 - 8);
  uint64_t v5 = __chkstk_darwin(v73);
  uint64_t v61 = (uint64_t *)((char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v72 = (char *)&v60 - v8;
  __chkstk_darwin(v7);
  uint64_t v71 = (char *)&v60 - v9;
  uint64_t v70 = type metadata accessor for VisibleNotesQuery.Comparator(0);
  uint64_t v66 = *(void *)(v70 - 8);
  uint64_t v10 = __chkstk_darwin(v70);
  uint64_t v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v60 - v13;
  uint64_t v15 = type metadata accessor for ManagedEntityContextType();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  NSArray v65 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10002F214((uint64_t *)&unk_1006A0380);
  uint64_t v19 = v18 - 8;
  __chkstk_darwin(v18);
  unint64_t v21 = (char *)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10002F214(&qword_10069D370);
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  uint64_t v25 = (char *)&v60 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v60 - v26;
  (*(void (**)(char *, void, uint64_t))(v16 + 104))((char *)&v60 - v26, enum case for ManagedEntityContextType.html(_:), v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v27, 0, 1, v15);
  uint64_t v28 = (uint64_t)&v21[*(int *)(v19 + 56)];
  uint64_t v69 = a3;
  sub_10002F034(a3, (uint64_t)v21, &qword_10069D370);
  sub_10002F034((uint64_t)v27, v28, &qword_10069D370);
  uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (v29((uint64_t)v21, 1, v15) == 1)
  {
    sub_10002B754((uint64_t)v27, &qword_10069D370);
    int v30 = v29(v28, 1, v15);
    uint64_t v31 = v63;
    if (v30 == 1)
    {
      uint64_t v32 = sub_10002B754((uint64_t)v21, &qword_10069D370);
      goto LABEL_26;
    }
    goto LABEL_6;
  }
  sub_10002F034((uint64_t)v21, (uint64_t)v25, &qword_10069D370);
  if (v29(v28, 1, v15) == 1)
  {
    sub_10002B754((uint64_t)v27, &qword_10069D370);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v25, v15);
    uint64_t v31 = v63;
LABEL_6:
    sub_10002B754((uint64_t)v21, (uint64_t *)&unk_1006A0380);
    goto LABEL_7;
  }
  uint64_t v52 = v65;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 32))(v65, v28, v15);
  sub_10023FF38(&qword_1006A1930, (void (*)(uint64_t))&type metadata accessor for ManagedEntityContextType);
  char v53 = dispatch thunk of static Equatable.== infix(_:_:)();
  NSString v54 = *(void (**)(char *, uint64_t))(v16 + 8);
  v54(v52, v15);
  sub_10002B754((uint64_t)v27, &qword_10069D370);
  v54(v25, v15);
  uint64_t v32 = sub_10002B754((uint64_t)v21, &qword_10069D370);
  uint64_t v31 = v63;
  if ((v53 & 1) == 0)
  {
LABEL_7:
    uint64_t v33 = (char *)_swiftEmptyArrayStorage;
    unint64_t v74 = (unint64_t)_swiftEmptyArrayStorage;
    uint64_t v34 = *(void *)(v31 + 16);
    if (v34)
    {
      uint64_t v35 = v31 + ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80));
      uint64_t v36 = *(void *)(v66 + 72);
      id v37 = (void (**)(char *, char *, uint64_t))(v68 + 32);
      uint64_t v64 = v68 + 8;
      NSArray v65 = (char *)(v68 + 16);
      swift_bridgeObjectRetain();
      uint64_t v66 = v36;
      do
      {
        sub_10023FD38(v35, (uint64_t)v14, type metadata accessor for VisibleNotesQuery.Comparator);
        sub_10023FD38((uint64_t)v14, (uint64_t)v12, type metadata accessor for VisibleNotesQuery.Comparator);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v40 = *v37;
          uint64_t v41 = v71;
          uint64_t v42 = v73;
          (*v37)(v71, v12, v73);
          (*(void (**)(char *, char *, uint64_t))v65)(v72, v41, v42);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v33 = (char *)sub_1001A86B0(0, *((void *)v33 + 2) + 1, 1, (unint64_t)v33);
          }
          unint64_t v44 = *((void *)v33 + 2);
          unint64_t v43 = *((void *)v33 + 3);
          if (v44 >= v43 >> 1) {
            uint64_t v33 = (char *)sub_1001A86B0(v43 > 1, v44 + 1, 1, (unint64_t)v33);
          }
          *((void *)v33 + 2) = v44 + 1;
          uint64_t v38 = v68;
          uint64_t v39 = v73;
          v40(&v33[((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v68 + 72) * v44], v72, v73);
          (*(void (**)(char *, uint64_t))(v38 + 8))(v71, v39);
          uint64_t v36 = v66;
        }
        else
        {
          sub_100241CB0((uint64_t)v12, type metadata accessor for VisibleNotesQuery.Comparator);
          id v45 = sub_10023A590(v69, v67 & 1);
          if (v45)
          {
            id v46 = v45;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
          }
        }
        sub_100241CB0((uint64_t)v14, type metadata accessor for VisibleNotesQuery.Comparator);
        v35 += v36;
        --v34;
      }
      while (v34);
      swift_bridgeObjectRelease();
    }
    uint64_t v47 = v69;
    if (*((void *)v33 + 2))
    {
      uint64_t v48 = swift_allocObject();
      *(void *)(v48 + 16) = v33;
      uint64_t v49 = v61;
      *uint64_t v61 = v48;
      uint64_t v50 = v68;
      uint64_t v51 = v73;
      (*(void (**)(uint64_t *, void, uint64_t))(v68 + 104))(v49, enum case for ICQueryType.and(_:), v73);
      ICQueryType.predicate.getter();
      (*(void (**)(uint64_t *, uint64_t))(v50 + 8))(v49, v51);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_100031418(0, &qword_1006A1560);
    swift_bridgeObjectRetain();
    v55.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    uint64_t v56 = self;
    if ((v62 & 1) == 0) {
      goto LABEL_27;
    }
LABEL_30:
    id v57 = [v56 orPredicateWithSubpredicates:v55.super.isa];
    goto LABEL_31;
  }
LABEL_26:
  __chkstk_darwin(v32);
  uint64_t v47 = v69;
  *(&v60 - 2) = v69;
  *((unsigned char *)&v60 - 8) = v67 & 1;
  sub_1003E7AA0((void (*)(uint64_t *__return_ptr, uint64_t))sub_100242E94, (uint64_t)(&v60 - 4), v31);
  sub_100031418(0, &qword_1006A1560);
  v55.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  uint64_t v56 = self;
  if (v62) {
    goto LABEL_30;
  }
LABEL_27:
  id v57 = [v56 andPredicateWithSubpredicates:v55.super.isa];
LABEL_31:
  id v58 = v57;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_10002B754(v47, &qword_10069D370);
  return v58;
}