uint64_t sub_10000476C()
{
  uint64_t result;
  unint64_t v1;
  uint64_t v2;
  void v3[10];

  result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    v2 = *(void *)(result - 8) + 64;
    swift_getTupleTypeLayout2();
    v3[4] = v3;
    v3[5] = v2;
    v3[6] = v2;
    v3[7] = &unk_100528AC0;
    v3[8] = &unk_100528A98;
    v3[9] = &unk_100528A98;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_100004990()
{
  return swift_release();
}

uint64_t sub_100004A00@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100027604(v2, (uint64_t)v6, type metadata accessor for ICSelectionStateModel.ContainerSelection);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      v7 = *(void **)v6;
      uint64_t v8 = *((void *)v6 + 1);
      uint64_t v9 = sub_10002F214(&qword_10069D688);
      sub_100192ED0((uint64_t)&v6[*(int *)(v9 + 48)], (uint64_t)a1 + *(int *)(v9 + 48));
      *a1 = v7;
      a1[1] = v8;
      return swift_storeEnumTagMultiPayload();
    case 2u:
      uint64_t v10 = type metadata accessor for URL();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, v6, v10);
      return swift_storeEnumTagMultiPayload();
    case 3u:
      v11 = *(void **)v6;
      v12 = (void *)*((void *)v6 + 1);
      if (v11)
      {
        [v11 copy];
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();
        sub_100031418(0, &qword_1006A2AF0);
        if (swift_dynamicCast()) {
          uint64_t v13 = v27;
        }
        else {
          uint64_t v13 = 0;
        }
        if (v12) {
          goto LABEL_10;
        }
LABEL_26:

        uint64_t v15 = 0;
        goto LABEL_27;
      }
      uint64_t v13 = 0;
      if (!v12) {
        goto LABEL_26;
      }
LABEL_10:
      [v12 copy];
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();

      type metadata accessor for ICSelectionStateModel.ContainerSelectionOptions();
      int v14 = swift_dynamicCast();
      uint64_t v15 = v27;
      if (!v14) {
        uint64_t v15 = 0;
      }
LABEL_27:
      *a1 = v13;
      a1[1] = v15;
      return swift_storeEnumTagMultiPayload();
    case 4u:
      v16 = *(void **)v6;
      v17 = (void *)*((void *)v6 + 1);
      if (v16)
      {
        [v16 copy];
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();
        sub_100031418(0, &qword_10069D940);
        if (swift_dynamicCast()) {
          uint64_t v18 = v27;
        }
        else {
          uint64_t v18 = 0;
        }
        if (v17)
        {
LABEL_18:
          [v17 copy];
          _bridgeAnyObjectToAny(_:)();
          swift_unknownObjectRelease();

          type metadata accessor for ICSelectionStateModel.ContainerSelectionOptions();
          int v19 = swift_dynamicCast();
          uint64_t v20 = v27;
          if (!v19) {
            uint64_t v20 = 0;
          }
          goto LABEL_30;
        }
      }
      else
      {
        uint64_t v18 = 0;
        if (v17) {
          goto LABEL_18;
        }
      }

      uint64_t v20 = 0;
LABEL_30:
      *a1 = v18;
      a1[1] = v20;
      return swift_storeEnumTagMultiPayload();
    case 5u:
      v22 = *(void **)v6;
      v21 = (void *)*((void *)v6 + 1);
      if (v21)
      {
        [*((id *)v6 + 1) copy];
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();

        type metadata accessor for ICSelectionStateModel.ContainerSelectionOptions();
        int v23 = swift_dynamicCast();
        uint64_t v24 = v27;
        if (!v23) {
          uint64_t v24 = 0;
        }
      }
      else
      {
        uint64_t v24 = 0;
      }
      *a1 = v22;
      a1[1] = v24;
      return swift_storeEnumTagMultiPayload();
    default:
      *(_OWORD *)a1 = *(_OWORD *)v6;
      return swift_storeEnumTagMultiPayload();
  }
}

void sub_100004E28(id a1)
{
  [(id)objc_opt_class() updatePagesInstallationStatus];
  +[ICLocalAuthentication refreshBiometricsContext];

  +[ICLocalAuthentication refreshHasPasscode];
}

uint64_t sub_100004F3C()
{
  uint64_t result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_100004FEC(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  v3 = [*(id *)(a1 + 40) URIRepresentation];
  id v14 = [v2 objectForKeyedSubscript:v3];

  uint64_t v4 = v14;
  if (v14)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
    v6 = [WeakRetained managedObjectIDFromURL:v14];

    if (v6)
    {
      v7 = [*(id *)(a1 + 48) dataSource];
      uint64_t v8 = [v7 collectionViewDiffableDataSource];
      uint64_t v9 = [v8 indexPathForItemIdentifier:v6];

      if (v9)
      {
        uint64_t v10 = [*(id *)(a1 + 48) collectionView];
        v11 = [v10 indexPathsForVisibleItems];
        unsigned __int8 v12 = [v11 containsObject:v9];

        if ((v12 & 1) == 0)
        {
          uint64_t v13 = [*(id *)(a1 + 48) collectionView];
          [v13 scrollToItemAtIndexPath:v9 atScrollPosition:1 animated:0];
        }
      }
    }
    uint64_t v4 = v14;
  }
}

void sub_100005124()
{
  type metadata accessor for AttachmentID();
  if (v0 <= 0x3F)
  {
    type metadata accessor for URL();
    if (v1 <= 0x3F)
    {
      sub_1000360C0();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_10000545C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_100005488@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100027604(v2, (uint64_t)v6, type metadata accessor for ICSelectionStateModel.ObjectSelection);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 2u:
      uint64_t v11 = type metadata accessor for URL();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, v6, v11);
      break;
    case 3u:
      long long v12 = *(_OWORD *)v6;
      uint64_t v13 = (void *)*((void *)v6 + 2);
      if (v13)
      {
        long long v25 = v12;
        [v13 copy];
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();

        type metadata accessor for ICSelectionStateModel.ObjectSelectionOptions();
        int v14 = swift_dynamicCast();
        long long v12 = v25;
        uint64_t v15 = v26;
        if (!v14) {
          uint64_t v15 = 0;
        }
      }
      else
      {
        uint64_t v15 = 0;
      }
      *(_OWORD *)a1 = v12;
      *(void *)(a1 + 16) = v15;
      break;
    case 4u:
      uint64_t v17 = *(void *)v6;
      v16 = (void *)*((void *)v6 + 1);
      if (v16)
      {
        [v16 copy];
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();

        type metadata accessor for ICSelectionStateModel.ObjectSelectionOptions();
        int v18 = swift_dynamicCast();
        uint64_t v19 = v26;
        if (!v18) {
          uint64_t v19 = 0;
        }
      }
      else
      {
        uint64_t v19 = 0;
      }
      *(void *)a1 = v17;
      *(void *)(a1 + 8) = v19;
      break;
    case 5u:
      uint64_t v21 = *(void *)v6;
      uint64_t v20 = (void *)*((void *)v6 + 1);
      if (v20)
      {
        [v20 copy];
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();

        type metadata accessor for ICSelectionStateModel.ObjectSelectionOptions();
        int v22 = swift_dynamicCast();
        uint64_t v23 = v26;
        if (!v22) {
          uint64_t v23 = 0;
        }
      }
      else
      {
        uint64_t v23 = 0;
      }
      *(void *)a1 = v21;
      *(void *)(a1 + 8) = v23;
      break;
    default:
      uint64_t v7 = sub_10002F214(&qword_10069D738);
      uint64_t v8 = &v6[*(int *)(v7 + 48)];
      uint64_t v9 = type metadata accessor for URL();
      uint64_t v10 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v9 - 8) + 32);
      v10(a1, v6, v9);
      v10(a1 + *(int *)(v7 + 48), v8, v9);
      break;
  }
  return swift_storeEnumTagMultiPayload();
}

void sub_100005808()
{
  if (!qword_1006A6C30)
  {
    type metadata accessor for Date();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1006A6C30);
    }
  }
}

uint64_t sub_1000058B4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100032974(v0, qword_1006A2EC8);
  sub_10003293C(v0, (uint64_t)qword_1006A2EC8);
  return static Logger.realtimeCollaboration.getter();
}

void sub_100005988()
{
  v3[4] = &unk_100528A68;
  sub_10000754C(319, (unint64_t *)&qword_10069EFF0, (void (*)(uint64_t))&type metadata accessor for URL);
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v3[5] = v3;
    uint64_t v1 = type metadata accessor for URL();
    if (v2 <= 0x3F)
    {
      v3[6] = *(void *)(v1 - 8) + 64;
      v3[7] = &unk_100528A98;
      v3[8] = &unk_100528A98;
      v3[9] = &unk_100528A98;
      swift_initEnumMetadataMultiPayload();
    }
  }
}

uint64_t sub_100005A94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10002F214(&qword_1006A09A0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002F034(a1, (uint64_t)v8, &qword_1006A09A0);
  uint64_t v9 = type metadata accessor for TaskPriority();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10002B754((uint64_t)v8, &qword_1006A09A0);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  uint64_t v13 = 0;
LABEL_6:
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

id sub_100005D34(uint64_t a1)
{
  double v2 = UISplitViewControllerAutomaticDimension;
  if (*(unsigned char *)(a1 + 48))
  {
    [*(id *)(a1 + 32) primaryColumnWidth];
    double v4 = v3;
    if ([*(id *)(a1 + 32) style] == (id)2)
    {
      [*(id *)(a1 + 32) supplementaryColumnWidth];
      double v2 = v5;
    }
    id v6 = [*(id *)(a1 + 32) style];
    uint64_t v7 = *(void **)(a1 + 32);
    if (v6 == (id)2)
    {
      uint64_t v8 = [v7 viewControllerManager];
      if ([v8 canTilePrimaryContent]) {
        uint64_t v9 = 1;
      }
      else {
        uint64_t v9 = 3;
      }
    }
    else if ([v7 style] == (id)1)
    {
      uint64_t v9 = (uint64_t)[*(id *)(a1 + 40) splitBehavior];
    }
    else
    {
      uint64_t v9 = 0;
    }
  }
  else
  {
    uint64_t v9 = 0;
    double v4 = UISplitViewControllerAutomaticDimension;
  }
  [*(id *)(a1 + 32) setPreferredPrimaryColumnWidth:v4];
  [*(id *)(a1 + 32) setMinimumPrimaryColumnWidth:v4];
  [*(id *)(a1 + 32) setMaximumPrimaryColumnWidth:v4];
  if ([*(id *)(a1 + 32) style] == (id)2)
  {
    [*(id *)(a1 + 32) setPreferredSupplementaryColumnWidth:v2];
    [*(id *)(a1 + 32) setMinimumSupplementaryColumnWidth:v2];
    [*(id *)(a1 + 32) setMaximumSupplementaryColumnWidth:v2];
  }
  uint64_t v10 = *(void **)(a1 + 32);

  return [v10 setPreferredSplitBehavior:v9];
}

unint64_t sub_100005EC8()
{
  unint64_t result = qword_1006A7590;
  if (!qword_1006A7590)
  {
    type metadata accessor for NSNotificationCenter.Notifications.Iterator();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A7590);
  }
  return result;
}

id sub_100005F20(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  double v3 = [*(id *)(a1 + 32) noteDataSource];
  [v3 setNoteContainer:v2];

  double v4 = *(void **)(a1 + 32);

  return [v4 resetBarButtonItemsAnimated:0];
}

uint64_t sub_100006070(uint64_t (*a1)(id *), uint64_t a2)
{
  double v4 = (uint64_t *)v2;
  unint64_t v7 = *v2;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_10003343C(a1, a2, v7);
  char v10 = v9;
  swift_bridgeObjectRelease();
  if (v3) {
    return v8;
  }
  if ((v10 & 1) == 0)
  {
    unint64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      goto LABEL_54;
    }
    if ((unint64_t)*v4 >> 62)
    {
LABEL_55:
      swift_bridgeObjectRetain();
      uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v11 != v30) {
        goto LABEL_6;
      }
    }
    else if (v11 != *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      unint64_t v11 = v8 + 5;
      uint64_t v32 = a2;
      while (1)
      {
        unint64_t v12 = v11 - 4;
        uint64_t v13 = *v4;
        if ((*v4 & 0xC000000000000001) != 0)
        {
          id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if ((v12 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_45:
            __break(1u);
LABEL_46:
            __break(1u);
LABEL_47:
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
LABEL_51:
            __break(1u);
LABEL_52:
            __break(1u);
LABEL_53:
            __break(1u);
LABEL_54:
            __break(1u);
            goto LABEL_55;
          }
          if (v12 >= *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_45;
          }
          id v14 = *(id *)(v13 + 8 * v11);
        }
        uint64_t v15 = v14;
        id v33 = v14;
        char v16 = a1(&v33);

        if ((v16 & 1) == 0) {
          break;
        }
LABEL_32:
        unint64_t v27 = v11 - 3;
        if (__OFADD__(v12, 1)) {
          goto LABEL_46;
        }
        if ((unint64_t)*v4 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v28 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        ++v11;
        if (v27 == v28) {
          return v8;
        }
      }
      if (v12 == v8)
      {
LABEL_31:
        if (__OFADD__(v8++, 1)) {
          goto LABEL_47;
        }
        goto LABEL_32;
      }
      uint64_t v17 = *v4;
      if ((*v4 & 0xC000000000000001) != 0)
      {
        id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v17 = *v4;
        if ((*v4 & 0xC000000000000001) == 0)
        {
LABEL_17:
          if ((v12 & 0x8000000000000000) != 0) {
            goto LABEL_50;
          }
          if (v12 >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_51;
          }
          id v19 = *(id *)(v17 + 8 * v11);
          goto LABEL_20;
        }
      }
      else
      {
        if ((v8 & 0x8000000000000000) != 0) {
          goto LABEL_48;
        }
        if (v8 >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_49;
        }
        id v18 = *(id *)(v17 + 8 * v8 + 32);
        if ((v17 & 0xC000000000000001) == 0) {
          goto LABEL_17;
        }
      }
      id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v17 = *v4;
LABEL_20:
      int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *double v4 = v17;
      if (!isUniquelyReferenced_nonNull_bridgeObject || v17 < 0 || (v17 & 0x4000000000000000) != 0)
      {
        uint64_t v17 = sub_1002E082C(v17);
        *double v4 = v17;
      }
      uint64_t v21 = *(void **)((v17 & 0xFFFFFFFFFFFFFF8) + 8 * v8 + 0x20);
      *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 8 * v8 + 0x20) = v19;

      specialized Array._endMutation()();
      uint64_t v22 = *v4;
      int v23 = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *double v4 = v22;
      if (!v23 || v22 < 0 || (v22 & 0x4000000000000000) != 0)
      {
        uint64_t v22 = sub_1002E082C(v22);
        *double v4 = v22;
      }
      a2 = v32;
      if ((v12 & 0x8000000000000000) != 0) {
        goto LABEL_52;
      }
      uint64_t v24 = v22 & 0xFFFFFFFFFFFFFF8;
      if (v12 >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_53;
      }
      long long v25 = *(void **)(v24 + 8 * v11);
      *(void *)(v24 + 8 * v11) = v18;

      specialized Array._endMutation()();
      goto LABEL_31;
    }
    return v8;
  }
  if (!((unint64_t)*v4 >> 62)) {
    return *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  return v31;
}

void sub_100006408(id a1)
{
  uint64_t v3 = [ICAppDelegate alloc];
  uint64_t v1 = [(ICAppDelegate *)v3 sharedInstanceInit];
  uint64_t v2 = (void *)qword_1006AA0C8;
  qword_1006AA0C8 = v1;
}

id sub_100006460@<X0>(unsigned char *a1@<X8>)
{
  id result = [*(id *)(v1 + 16) isDeleted];
  *a1 = (_BYTE)result;
  return result;
}

uint64_t type metadata accessor for NoteEditorActionMenu()
{
  return self;
}

uint64_t sub_1000065B8(uint64_t a1, void *a2, char a3)
{
  return swift_endAccess();
}

id sub_10000665C()
{
  unint64_t v0 = +[NSUserDefaults standardUserDefaults];
  id v1 = [v0 BOOLForKey:@"DebuggingGreyParrotUI"];

  return v1;
}

uint64_t sub_100006808(uint64_t a1)
{
  [*(id *)(a1 + 32) updateNoteSelection];
  [*(id *)(a1 + 32) updateContainerSelection];
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    uint64_t v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

uint64_t sub_1000068C0()
{
  uint64_t result = type metadata accessor for NoteID();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for URL();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_100006B90()
{
  uint64_t result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100006D40(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_10002F214(a2);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v3 = v6;
    return result;
  }
  uint64_t v30 = v2;
  uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v8 = v4 + 56;
  if (v7 < 64) {
    uint64_t v9 = ~(-1 << v7);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v4 + 56);
  int64_t v11 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v12 = v5 + 56;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v19 = *(void *)(v8 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v8 + 8 * v14);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    Swift::Int v21 = *(void *)(v6 + 40);
    id v22 = *(id *)(*(void *)(v4 + 48) + 8 * v17);
    uint64_t result = NSObject._rawHashValue(seed:)(v21);
    uint64_t v23 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v15 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v6 + 48) + 8 * v15) = v22;
    ++*(void *)(v6 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v11)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v3 = v30;
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v8 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_100007008(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (unsigned char *)(a1 + 16);
  int v2 = *(unsigned __int8 *)(a1 + 16);
  if (v2 == 2)
  {
    uint64_t v4 = sub_1000339D4(a2);
    uint64_t v6 = v5;
    char v8 = v7;
    uint64_t v13 = &type metadata for TelephonyUtilitiesFeature;
    unint64_t v14 = sub_100033ECC();
    v11[0] = v4;
    v11[1] = v6;
    char v12 = v8;
    char v9 = isFeatureEnabled(_:)();
    sub_100018FE8((uint64_t)v11);
    swift_beginAccess();
    unsigned char *v3 = v9 & 1;
  }
  else
  {
    char v9 = v2 & 1;
  }
  return v9 & 1;
}

void sub_1000073CC()
{
  sub_10000754C(319, &qword_10069D568, (void (*)(uint64_t))type metadata accessor for ICSelectionStateModel.ObjectSelection);
  if (v0 <= 0x3F)
  {
    sub_10000754C(319, &qword_10069D570, (void (*)(uint64_t))type metadata accessor for ICSelectionStateModel.ContainerSelection);
    if (v1 <= 0x3F)
    {
      sub_10000754C(319, (unint64_t *)&qword_10069EFF0, (void (*)(uint64_t))&type metadata accessor for URL);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_10000754C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1000075A0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = OBJC_IVAR___ICActivityStreamNavigationController_selection;
  unint64_t v4 = *(void **)(v1 + OBJC_IVAR___ICActivityStreamNavigationController_selection);
  *(void *)(v2 + OBJC_IVAR___ICActivityStreamNavigationController_selection) = a1;
  id v5 = a1;

  id v6 = sub_10001FFAC();
  id v7 = *(id *)(v2 + v3);
  ActivityStreamDockView.selection.setter();

  char v8 = *(void **)(v2 + OBJC_IVAR___ICActivityStreamNavigationController_activityStreamViewController);
  if (v8)
  {
    char v9 = *(void **)(v2 + v3);
    swift_getKeyPath();
    swift_getKeyPath();
    id v10 = v9;
    id v11 = v8;
    static Published.subscript.setter();
  }
}

void sub_100007718(uint64_t a1)
{
  id v5 = [*(id *)(a1 + 32) noteContainer];
  uint64_t v2 = [v5 customNoteSortType];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  unint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_100007C1C(char a1)
{
  uint64_t v3 = sub_10002F214(&qword_10069D7F8);
  __chkstk_darwin(v3 - 8);
  id v5 = (void **)((char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = v1 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection;
  swift_beginAccess();
  sub_10002F034(v6, (uint64_t)v5, &qword_10069D7F8);
  uint64_t v7 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1)
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 2u:
        sub_10002EA18((uint64_t)v5, type metadata accessor for ICSelectionStateModel.ObjectSelection);
        return;
      case 3u:
        unint64_t v19 = *v5;
        int64_t v18 = v5[1];
        char v9 = (char *)v5[2];
        if (v19)
        {
          if (!v18)
          {

            goto LABEL_21;
          }
          if (v9 && (a1 & 1) != 0)
          {
            int64_t v20 = *(void **)&v9[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_scrollState];
            Swift::Int v21 = (objc_class *)type metadata accessor for ICSelectionStateModel.ObjectSelectionOptions();
            id v22 = objc_allocWithZone(v21);
            *(void *)&v22[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_scrollState] = v20;
            v22[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_startEditing] = 0;
            v22[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_showInkPicker] = 0;
            v22[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_dismissOverlayContent] = 1;
            v22[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_showLatestUpdatesIfAvailable] = 1;
            v22[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_animated] = 1;
            v22[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_ensurePresented] = 1;
            v30.receiver = v22;
            v30.super_class = v21;
            id v23 = v19;
            id v24 = v18;
            id v25 = v20;
            id v26 = [super init];
          }
          else
          {
            id v27 = v19;
            id v28 = v18;
            id v26 = 0;
          }
          sub_100198278(v19, v18, v26);
        }
        else
        {
        }
        return;
      case 4u:
      case 5u:
        char v8 = *v5;
        char v9 = (char *)v5[1];
        if (v8)
        {
          if (v9)
          {
            if (a1)
            {
              id v10 = *(void **)&v9[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_scrollState];
              id v11 = (objc_class *)type metadata accessor for ICSelectionStateModel.ObjectSelectionOptions();
              char v12 = objc_allocWithZone(v11);
              *(void *)&v12[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_scrollState] = v10;
              v12[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_startEditing] = 0;
              v12[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_showInkPicker] = 0;
              v12[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_dismissOverlayContent] = 1;
              v12[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_showLatestUpdatesIfAvailable] = 1;
              v12[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_animated] = 1;
              v12[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_ensurePresented] = 1;
              v31.receiver = v12;
              v31.super_class = v11;
              id v13 = v10;
              id v14 = [super init];

LABEL_16:
              sub_100014C74(v8, v14);

              return;
            }
          }
          id v14 = 0;
          goto LABEL_16;
        }
LABEL_21:

        break;
      default:
        unint64_t v15 = (char *)v5 + *(int *)(sub_10002F214(&qword_10069D738) + 48);
        uint64_t v16 = type metadata accessor for URL();
        unint64_t v17 = *(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8);
        v17(v15, v16);
        v17((char *)v5, v16);
        return;
    }
  }
}

id sub_100008000()
{
  uint64_t v1 = sub_10002F214(&qword_10069D7F8);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  char v8 = (id *)((char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  id v10 = (char *)&v17 - v9;
  uint64_t v11 = v0 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection;
  swift_beginAccess();
  sub_10002F034(v11, (uint64_t)v3, &qword_10069D7F8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_10002B754((uint64_t)v3, &qword_10069D7F8);
    return 0;
  }
  else
  {
    sub_10002EF54((uint64_t)v3, (uint64_t)v10, type metadata accessor for ICSelectionStateModel.ObjectSelection);
    sub_10002EF54((uint64_t)v10, (uint64_t)v8, type metadata accessor for ICSelectionStateModel.ObjectSelection);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 2u:
      case 3u:
      case 4u:
        sub_10002EA18((uint64_t)v8, type metadata accessor for ICSelectionStateModel.ObjectSelection);
        return 0;
      case 5u:
        id v15 = *v8;

        break;
      default:
        char v12 = (char *)v8 + *(int *)(sub_10002F214(&qword_10069D738) + 48);
        uint64_t v13 = type metadata accessor for URL();
        id v14 = *(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8);
        v14(v12, v13);
        v14((char *)v8, v13);
        return 0;
    }
  }
  return v15;
}

void sub_100008284(uint64_t a1)
{
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  uint64_t v2 = [*(id *)(a1 + 32) propertiesToUpdate];
  id v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(a1 + 32) willChangeValueForKey:*(void *)(*((void *)&v7 + 1) + 8 * (void)v6)];
        uint64_t v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

void sub_100008610()
{
  uint64_t v1 = v0;
  id v2 = sub_10001FFAC();
  uint64_t v3 = OBJC_IVAR___ICActivityStreamNavigationController_object;
  id v4 = *(id *)&v1[OBJC_IVAR___ICActivityStreamNavigationController_object];
  ActivityStreamDockView.object.setter();

  if (objc_msgSend(v1, "ic_isViewVisible"))
  {
    uint64_t v5 = *(void **)&v1[OBJC_IVAR___ICActivityStreamNavigationController_activityStreamViewController];
    if (v5)
    {
      uint64_t v6 = *(void **)&v1[v3];
      id v7 = v6;
      id v8 = v5;
      sub_100170284(v6);
    }
    sub_100406028();
    sub_100405DBC();
  }
}

void sub_1000086DC(id *a1, void *a2)
{
  id v3 = a2;
  id v4 = +[ICAppDelegate sharedInstance];
  unsigned int v5 = [v4 isRunningPPT];

  if (!v5)
  {
    uint64_t v16 = _NSConcreteStackBlock;
    uint64_t v17 = 3221225472;
    int64_t v18 = sub_10003BC98;
    unint64_t v19 = &unk_100625888;
    id v6 = a1[5];
    id v7 = a1[4];
    id v20 = v6;
    id v21 = v7;
    id v22 = a1[6];
    id v8 = objc_retainBlock(&v16);
    long long v9 = [a1[4] selectedNoteBrowseContainerItemID];
    if (v9)
    {
    }
    else if (([a1[4] hasCompactWidth] & 1) == 0)
    {
      if ([a1[4] isTagSelected])
      {
        long long v10 = [a1[4] selectedContainerIdentifiers];
      }
      else
      {
        uint64_t v11 = [v3 firstRelevantItemIdentifier];
        long long v10 = +[NSSet ic_setFromNonNilObject:v11];
      }
      BOOL v12 = [a1[5] currentNoteContainerViewMode] == 0;
      id v13 = a1[4];
      id v14 = [v13 rootNoteBrowseViewController];
      id v15 = +[NSSet set];
      [v13 setCurrentNoteBrowseViewController:v14 animated:0 ensurePresented:1 containerIdentifiers:v10 excludingIdentifiers:v15 ensureSelectedNote:0 keepEditorShowing:0 dataIndexedBlock:v8 dataRenderedBlock:v16];

      goto LABEL_7;
    }
    ((void (*)(void ***))v8[2])(v8);
LABEL_7:

    goto LABEL_8;
  }
  [a1[4] setIsApplyingStateRestoreArchive:0];
LABEL_8:
}

void sub_1000088CC()
{
  type metadata accessor for EditNoteActivity();
  if (v0 <= 0x3F)
  {
    sub_10001D424(319, (unint64_t *)&qword_10069E588, &qword_10069E510);
    if (v1 <= 0x3F)
    {
      swift_getTupleTypeLayout3();
      unsigned int v5 = &v4;
      swift_getTupleTypeLayout2();
      id v6 = &v3;
      swift_getTupleTypeLayout2();
      id v7 = &v2;
      swift_initEnumMetadataMultiPayload();
    }
  }
}

void sub_100008DAC(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 56);
  unint64_t v7 = v2;
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    sub_1001DA3A0((uint64_t)&v7);
    if (!v3) {
      return;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v3) {
      return;
    }
  }
  sub_10002F1B0(a1 + 64, (uint64_t)v6, &qword_1006A2AB0);
  sub_10002F1B0((uint64_t)v6, (uint64_t)&v8, &qword_1006A2AB0);
  if (v9 == 1) {
    return;
  }
  if (v3 < 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if ((v8 & 0x8000000000000000) == 0 && v8 < v3)
  {
    uint64_t v3 = *(void *)(a1 + 24);
    if (v3)
    {
      if ((v2 & 0xC000000000000001) == 0)
      {
        if ((unint64_t)v8 >= *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        id v4 = *(id *)(v2 + 8 * v8 + 32);
        goto LABEL_11;
      }
LABEL_16:
      id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_11:
      id v5 = v4;
      ((void (*)(id *))v3)(&v5);
    }
  }
}

uint64_t sub_1000090DC(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    uint64_t v4 = a1;
    if (!((unint64_t)*v3 >> 62))
    {
      if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v20 < v2) {
    goto LABEL_29;
  }
LABEL_4:
  uint64_t v6 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v5 = v4 - v2;
  if (__OFSUB__(0, v6))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v8 = v21 + v5;
    if (!__OFADD__(v21, v5)) {
      goto LABEL_8;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if ((unint64_t)*v3 >> 62) {
    goto LABEL_32;
  }
  uint64_t v7 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 - v6;
  if (__OFADD__(v7, v5)) {
    goto LABEL_34;
  }
LABEL_8:
  unint64_t v9 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  uint64_t *v3 = v9;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v9 & 0x8000000000000000) != 0
    || (v9 & 0x4000000000000000) != 0
    || (uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8, v8 > *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v9 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      uint64_t *v3 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      swift_bridgeObjectRelease();
      uint64_t v11 = *v3 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_14;
    }
LABEL_35:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  uint64_t v12 = v11 + 32;
  id v13 = (char *)(v11 + 32 + 8 * v4);
  type metadata accessor for ICSelectionStateModel(0);
  swift_arrayDestroy();
  if (v5)
  {
    if ((unint64_t)*v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v15 = v22 - v2;
      if (!__OFSUB__(v22, v2))
      {
LABEL_17:
        if (v15 < 0)
        {
LABEL_42:
          uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
          __break(1u);
          return result;
        }
        uint64_t v16 = (char *)(v12 + 8 * v2);
        if (v4 != v2 || v13 >= &v16[8 * v15]) {
          memmove(v13, v16, 8 * v15);
        }
        if (!((unint64_t)*v3 >> 62))
        {
          uint64_t v17 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
          uint64_t v18 = v17 + v5;
          if (!__OFADD__(v17, v5))
          {
LABEL_23:
            *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) = v18;
            goto LABEL_24;
          }
          goto LABEL_41;
        }
LABEL_39:
        swift_bridgeObjectRetain();
        uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v18 = v23 + v5;
        if (!__OFADD__(v23, v5)) {
          goto LABEL_23;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v14 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v15 = v14 - v2;
      if (!__OFSUB__(v14, v2)) {
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_39;
  }
LABEL_24:

  return specialized Array._endMutation()();
}

void sub_1000093E8(id a1)
{
  unint64_t v1 = +[NSUserDefaults standardUserDefaults];
  CFStringRef v3 = @"ICNoteBrowseCollectionViewGalleryWideModeNumberOfColumnsKey";
  uint64_t v4 = &off_10064B1E0;
  uint64_t v2 = +[NSDictionary dictionaryWithObjects:&v4 forKeys:&v3 count:1];
  [v1 registerDefaults:v2];
}

void sub_100009514(uint64_t a1)
{
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  uint64_t v2 = [*(id *)(a1 + 32) propertiesToUpdate];
  id v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(a1 + 32) didChangeValueForKey:*(void *)(*((void *)&v7 + 1) + 8 * (void)v6)];
        uint64_t v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

void sub_100009814(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) modernManagedObjectContext];
  [v2 ic_existingObjectWithID:*(void *)(a1 + 40)];
  id v3 = (id)objc_claimAutoreleasedReturnValue();

  [*(id *)(a1 + 48) setNoteContainer:v3 dataIndexedBlock:*(void *)(a1 + 56) dataRenderedBlock:*(void *)(a1 + 64)];
}

id sub_10000A4E8@<X0>(void *a1@<X8>)
{
  return sub_10000A508(&OBJC_IVAR___ICFolderListSelectionValidator_modernContext, a1);
}

id sub_10000A508@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id result = [*(id *)(*(void *)(v2 + 16) + *a1) objectWithID:*(void *)(v2 + 24)];
  *a2 = result;
  return result;
}

double sub_10000A984@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v14 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v6 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  long long v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v9);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v10 - 8);
  sub_100031418(0, (unint64_t *)&qword_10069D2D0);
  static DispatchQoS.unspecified.getter();
  unint64_t v19 = &_swiftEmptyArrayStorage;
  sub_10001DD30((unint64_t *)&qword_10069B280, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10002F214((uint64_t *)&unk_10069E6B0);
  sub_10001DFB0((unint64_t *)&qword_10069B290, (uint64_t *)&unk_10069E6B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v14);
  *(void *)a5 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(void *)&double result = 50;
  *(_OWORD *)(a5 + 8) = xmmword_1005324A0;
  *(void *)(a5 + 56) = &_swiftEmptyArrayStorage;
  *(void *)(a5 + 64) = 0;
  *(unsigned char *)(a5 + 72) = 1;
  *(void *)(a5 + 80) = &_swiftEmptyArrayStorage;
  uint64_t v12 = v16;
  *(void *)(a5 + 24) = v15;
  *(void *)(a5 + 32) = v12;
  uint64_t v13 = v18;
  *(void *)(a5 + 40) = v17;
  *(void *)(a5 + 48) = v13;
  return result;
}

uint64_t sub_10000B300()
{
  swift_release();
  *(void *)(v0 + 344) = +[ICAppDelegate sharedInstance];
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 352) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_100359B8C;
  return sub_10000B4C0();
}

BOOL sub_10000B438(id a1, id a2, unint64_t a3, BOOL *a4)
{
  id v4 = a2;
  objc_opt_class();
  uint64_t v5 = ICDynamicCast();
  if (objc_msgSend(v5, "ic_isContainerType"))
  {
    BOOL v6 = 1;
  }
  else
  {
    objc_opt_class();
    uint64_t v7 = ICDynamicCast();
    BOOL v6 = v7 != 0;
  }
  return v6;
}

uint64_t sub_10000B4C0()
{
  v1[3] = v0;
  sub_10002F214(qword_10069F2D8);
  v1[4] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for NSNotificationCenter.Notifications.Iterator();
  v1[5] = v2;
  v1[6] = *(void *)(v2 - 8);
  v1[7] = swift_task_alloc();
  v1[8] = type metadata accessor for MainActor();
  v1[9] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[10] = v4;
  v1[11] = v3;
  return _swift_task_switch(sub_10000CF20, v4, v3);
}

void sub_10000BBD0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_10000BF10(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_10000BFEC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

uint64_t sub_10000C010()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_bridgeObjectRetain();
    return static Published.subscript.setter();
  }
  return result;
}

char *sub_10000C2E0(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10002EA18((uint64_t)a1, type metadata accessor for ICSelectionStateModel.ObjectSelection);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = type metadata accessor for URL();
      long long v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32);
      v8(a1, a2, v7);
      uint64_t v9 = sub_10002F214(&qword_10069D738);
      v8(&a1[*(int *)(v9 + 48)], &a2[*(int *)(v9 + 48)], v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void sub_10000C49C(id a1)
{
  id v1 = +[ICAccount localizedLocalAccountName];
  id v2 = +[AccountUtilities sharedAccountUtilities];
  +[UIImage ic_cacheSystemImages];
  +[UIPencilInteraction prefersPencilOnlyDrawing];
  uint64_t v3 = +[ICAccountUtilities sharedInstance];
  [v3 performBlockInPersonaContext:&stru_1006299C8 forAccountIdentifier:0];

  +[UIDevice ic_isLiveTextAvailable];
}

void sub_10000C830(void *a1)
{
  uint64_t v2 = type metadata accessor for NoteID();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_10002F214((uint64_t *)&unk_1006A9010);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v11[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = &type metadata for AppIntentsFeature;
  unint64_t v14 = sub_100019038();
  v11[0] = "viewActions";
  v11[1] = 11;
  char v12 = 2;
  char v6 = isFeatureEnabled(_:)();
  sub_100018FE8((uint64_t)v11);
  if (v6)
  {
    if (a1)
    {
      type metadata accessor for NoteEntity(0);
      swift_getObjectType();
      id v7 = a1;
      ICSearchIndexableNote<>.entityIdentifier.getter();
      sub_1000191B0((unint64_t *)&qword_10069B1E0, (void (*)(uint64_t))type metadata accessor for NoteEntity);
      EntityIdentifier.init<A>(for:identifier:)();
      uint64_t v8 = type metadata accessor for EntityIdentifier();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v5, 0, 1, v8);
      UIView.appEntityIdentifier.setter();
    }
    else
    {
      uint64_t v9 = type metadata accessor for EntityIdentifier();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v5, 1, 1, v9);
      UIView.appEntityIdentifier.setter();
    }
  }
}

void sub_10000CB4C(uint64_t a1)
{
  objc_opt_class();
  id v4 = [*(id *)(a1 + 32) modernManagedObjectContext];
  uint64_t v2 = [v4 objectWithID:*(void *)(a1 + 40)];
  uint64_t v3 = ICDynamicCast();
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = [v3 enforcedNoteContainerViewMode];
}

id sub_10000CBEC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v5[OBJC_IVAR___ICFastSyncPresenceController_cloudConfiguration] = 0;
  uint64_t v11 = &v5[OBJC_IVAR___ICFastSyncPresenceController_controllerPool];
  uint64_t v12 = type metadata accessor for FastSyncControllerPool(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = &v5[OBJC_IVAR___ICFastSyncPresenceController_editorActivityChanges];
  uint64_t v14 = sub_10002F214(&qword_10069B478);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  uint64_t v15 = &v5[OBJC_IVAR___ICFastSyncPresenceController_noteActivityShareChanges];
  uint64_t v16 = sub_10002F214(&qword_10069B480);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  uint64_t v17 = &v5[OBJC_IVAR___ICFastSyncPresenceController_logger];
  uint64_t v18 = type metadata accessor for Logger();
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v17, a1, v18);
  *(void *)&v5[OBJC_IVAR___ICFastSyncPresenceController_noteContext] = a4;
  uint64_t v20 = &v5[OBJC_IVAR___ICFastSyncPresenceController_verboseLoggingCategory];
  *(void *)uint64_t v20 = a2;
  *((void *)v20 + 1) = a3;
  v24.receiver = v5;
  v24.super_class = ObjectType;
  id v21 = a4;
  [super init];
  sub_1000152A8();

  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(a1, v18);
  return v22;
}

void sub_10000CEFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_10000CF20()
{
  if ([*(id *)(v0 + 24) isReadyForDelayedLaunchTasks])
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    id v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    id v3 = [self defaultCenter];
    NSNotificationCenter.notifications(named:object:)();

    NSNotificationCenter.Notifications.makeAsyncIterator()();
    *(void *)(v0 + 96) = static MainActor.shared.getter();
    unint64_t v4 = sub_100005EC8();
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_10020E450;
    uint64_t v6 = *(void *)(v0 + 32);
    uint64_t v7 = *(void *)(v0 + 40);
    return dispatch thunk of AsyncIteratorProtocol.next()(v6, v7, v4);
  }
}

uint64_t sub_10000D090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[26] = a4;
  uint64_t v5 = type metadata accessor for FastSyncError();
  v4[27] = v5;
  v4[28] = *(void *)(v5 - 8);
  v4[29] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for CancellationError();
  v4[30] = v6;
  v4[31] = *(void *)(v6 - 8);
  v4[32] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Logger();
  v4[33] = v7;
  v4[34] = *(void *)(v7 - 8);
  v4[35] = swift_task_alloc();
  v4[36] = swift_task_alloc();
  v4[37] = swift_task_alloc();
  v4[38] = swift_task_alloc();
  return _swift_task_switch(sub_10000EAA8, 0, 0);
}

void sub_10000D4C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10000D5A4(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) noteContainer];
  if ([v3 supportsDateHeaders])
  {
    uint64_t v2 = [*(id *)(a1 + 32) noteContainer];
    *(_DWORD *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [v2 dateHeadersType];
  }
  else
  {
    *(_DWORD *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
  }
}

void sub_10000D688()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10002F214(&qword_10069D7F8);
  __chkstk_darwin(v2 - 8);
  unint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000270B4(1, 1);
  uint64_t v17 = v5;
  uint64_t v6 = *(void (**)(char **))(v0 + 24);
  if (v6)
  {
    uint64_t v7 = v5;
    uint64_t v16 = v5;
    sub_10002E71C((uint64_t)v6);
    uint64_t v8 = v7;
    v6(&v16);
    sub_10002E70C((uint64_t)v6);
  }
  __chkstk_darwin(v5);
  *(&v15 - 2) = v1;
  *(&v15 - 1) = (uint64_t)&v17;
  uint64_t v9 = sub_100006070(sub_1002FA258, (uint64_t)(&v15 - 4));
  uint64_t v10 = v9;
  unint64_t v11 = *(void *)(v1 + 80);
  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v12 >= v10) {
      goto LABEL_5;
    }
LABEL_9:
    __break(1u);
    return;
  }
  uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v12 < v9) {
    goto LABEL_9;
  }
LABEL_5:
  sub_1000090DC(v10, v12);
  uint64_t v13 = &v17[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection];
  swift_beginAccess();
  sub_10002F034((uint64_t)v13, (uint64_t)v4, &qword_10069D7F8);
  uint64_t v14 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
  LODWORD(v13) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v4, 1, v14);
  sub_10002B754((uint64_t)v4, &qword_10069D7F8);
  if (v13 != 1)
  {
    sub_10002F214((uint64_t *)&unk_1006A2AA0);
    Array.prepend(_:)();
  }
}

void sub_10000DF24()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    id v3 = [self defaultCenter];
    [v3 removeObserver:v0 name:ICWindowRootViewControllerDidChangeNotification object:v2];

    id v4 = [v2 rootViewController];
    if (v4)
    {
      uint64_t v5 = v4;
      id v6 = [v4 view];
      if (!v6)
      {
        __break(1u);
        goto LABEL_13;
      }
      uint64_t v7 = v6;
      sub_1001C51A8(v6);
    }
  }
  swift_unknownObjectWeakAssign();
  uint64_t v8 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v8) {
    return;
  }
  uint64_t v9 = v8;
  id v10 = [v8 rootViewController];
  if (v10)
  {
    unint64_t v11 = v10;
    id v12 = [v10 view];
    if (v12)
    {
      id v13 = v12;
      unint64_t v14 = sub_100027A90(v13);

      uint64_t v15 = (unint64_t *)(v0 + OBJC_IVAR____TtC11MobileNotes33ICAppIntentsInteractionController_interactions);
      swift_beginAccess();
      *uint64_t v15 = v14;

      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
LABEL_13:
    __break(1u);
    return;
  }
LABEL_10:
  id v16 = [self defaultCenter];
  [v16 addObserver:v0 selector:"rootViewControllerDidChange:" name:ICWindowRootViewControllerDidChangeNotification object:v9];
}

void sub_10000E4A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_10000EAA8()
{
  *(void *)(v0 + 312) = type metadata accessor for MainActor();
  *(_DWORD *)(v0 + 392) = enum case for FastSyncError.fastSyncDisabled(_:);
  static Logger.fastSyncPresence.getter();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v1, v2))
  {
    id v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Waiting for delayed launch...", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v4 = *(void *)(v0 + 304);
  uint64_t v5 = *(void *)(v0 + 264);
  uint64_t v6 = *(void *)(v0 + 272);

  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  *(void *)(v0 + 320) = v7;
  *(void *)(v0 + 328) = (v6 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v7(v4, v5);
  *(void *)(v0 + 336) = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10000B300, v9, v8);
}

void sub_10000EE70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10000EFD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

_OWORD *sub_10000EFF4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10002EA18((uint64_t)a1, type metadata accessor for ICSelectionStateModel.ContainerSelection);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v13 = type metadata accessor for URL();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
LABEL_9:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      uint64_t v7 = *(int *)(sub_10002F214(&qword_10069D688) + 48);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = type metadata accessor for URL();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        uint64_t v12 = sub_10002F214(&qword_10069B310);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      goto LABEL_9;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void sub_10000F2F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_10000F318(void *a1, char a2, char a3)
{
  uint64_t v7 = *v3;
  uint64_t v8 = swift_allocObject();
  *(unsigned char *)(v8 + 16) = a3;
  *(void *)(v8 + 24) = v3;
  *(void *)(v8 + 32) = a1;
  *(unsigned char *)(v8 + 40) = a2;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_100034D80;
  *(void *)(v9 + 24) = v8;
  v14[4] = sub_100031D58;
  v14[5] = v9;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_100031D30;
  v14[3] = &unk_1006353B8;
  uint64_t v10 = _Block_copy(v14);
  id v11 = a1;
  uint64_t v12 = v7;
  swift_retain();
  swift_release();
  dispatch_sync(v12, v10);

  _Block_release(v10);
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v12) {
    __break(1u);
  }
  return result;
}

void sub_10000FBC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_10000FCE8(void *a1)
{
  uint64_t v3 = sub_10002F214(&qword_1006A47C8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[3] = &_swiftEmptySetSingleton;
  v1[4] = 0;
  uint64_t v7 = (char *)v1 + OBJC_IVAR____TtC11MobileNotes34CollaborationParticipantDataSource__cleanedUpParticipants;
  v13[1] = &_swiftEmptyArrayStorage;
  sub_10002F214(&qword_1006A0090);
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v6, v3);
  *(void *)((char *)v1 + OBJC_IVAR____TtC11MobileNotes34CollaborationParticipantDataSource_groupSession) = 0;
  v1[2] = a1;
  uint64_t v8 = self;
  id v9 = a1;
  id v10 = [v8 defaultCenter];
  uint64_t v11 = qword_10069AEC0;
  swift_retain();
  if (v11 != -1) {
    swift_once();
  }
  [v10 addObserver:v1 selector:"realtimeCollaborationControllerGroupActivityDidChange:" name:qword_1006CDE50 object:0];

  swift_release();
  return v1;
}

char *sub_10000FEB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  id v16 = (char *)[objc_allocWithZone(v8) init];
  uint64_t v17 = (uint64_t)&v16[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection];
  swift_beginAccess();
  sub_10002B660(a1, v17, &qword_10069D7F8);
  swift_endAccess();
  uint64_t v18 = (uint64_t)&v16[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection];
  swift_beginAccess();
  sub_10002B660(a2, v18, &qword_10069D7F0);
  swift_endAccess();
  uint64_t v19 = &v16[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentFirstVisibleObjectIDForContainerObjectID];
  swift_beginAccess();
  *(void *)uint64_t v19 = a3;
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void **)&v16[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentActivityStreamSelection];
  *(void *)&v16[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentActivityStreamSelection] = a4;

  *(void *)&v16[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentActivityStreamViewMode] = a5;
  id v21 = *(void **)&v16[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentSelectedSearchResult];
  *(void *)&v16[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentSelectedSearchResult] = a6;

  id v22 = *(void **)&v16[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_focusedNoteObjectID];
  *(void *)&v16[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_focusedNoteObjectID] = a7;

  return v16;
}

id sub_10001014C()
{
  ObjectType = (objc_class *)swift_getObjectType();
  os_log_type_t v2 = &v0[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection];
  uint64_t v3 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  uint64_t v4 = &v0[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection];
  uint64_t v5 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v0[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_selectionReason] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentFirstVisibleObjectIDURLForContainerObjectIDURL] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentActivityStreamSelection] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentActivityStreamViewMode] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentSelectedSearchResult] = 0;
  uint64_t v6 = &v0[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_focusedNoteObjectIDURL];
  uint64_t v7 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *(void *)&v0[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentFirstVisibleObjectIDForContainerObjectID] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_focusedNoteObjectID] = 0;
  v9.receiver = v0;
  v9.super_class = ObjectType;
  return [super init];
}

Swift::Void __swiftcall ICAppIntentsManager.registerDependencies()()
{
  swift_retain();
  AnyHashable.init<A>(_:)();
  sub_100031418(0, &qword_10069C808);
  AppDependencyManager.add<A>(key:dependency:)();
  swift_release();
  sub_100010470((uint64_t)v6);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC11MobileNotes19ICAppIntentsManager_loggingConfiguration);
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC11MobileNotes19ICAppIntentsManager_loggingConfiguration + 8);
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC11MobileNotes19ICAppIntentsManager_loggingConfiguration + 16);
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC11MobileNotes19ICAppIntentsManager_loggingConfiguration + 24);
  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = v2;
  v5[3] = v1;
  v5[4] = v4;
  v5[5] = v3;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  AppDependencyManager.add<A>(key:dependency:)();
  swift_release();
  sub_100010470((uint64_t)v6);
  swift_release();
}

uint64_t sub_100010470(uint64_t a1)
{
  uint64_t v2 = sub_10002F214(&qword_1006A1358);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_100010988(uint64_t a1, void *a2)
{
  id v3 = a2;
  v41 = v3;
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24))
  {
    uint64_t v4 = [*(id *)(a1 + 32) noteEditorViewController];
    uint64_t v5 = [*(id *)(a1 + 32) selectedNoteObjectID];
    uint64_t v6 = v5;
    if (v5)
    {
      id v7 = v5;
    }
    else
    {
      id v7 = [*(id *)(a1 + 32) selectedInvitationObjectID];
    }
    uint64_t v8 = v7;

    if ([*(id *)(a1 + 32) selectionStateTrackingEnabled])
    {
      if (v8)
      {
        id v9 = v8;
        goto LABEL_8;
      }
      if ([*(id *)(a1 + 32) isAutomaticallySelectingNotes])
      {
        uint64_t v23 = +[UIApplication sharedApplication];
        if ([v23 applicationState])
        {
          objc_super v24 = [*(id *)(a1 + 32) selectionStateController];
          id v25 = [v24 mostRecentSelectedObjectID];

          if (v25)
          {
            id v26 = *(void **)(a1 + 32);
            id v27 = [v26 selectionStateController];
            id v28 = [v27 mostRecentSelectedObjectID];
            LODWORD(v26) = [v26 isSelectionAppropriateForObjectID:v28];

            if (v26)
            {
              uint64_t v29 = [*(id *)(a1 + 32) selectionStateController];
              id v9 = [v29 mostRecentSelectedObjectID];

              if (v9) {
                goto LABEL_8;
              }
            }
          }
        }
        else
        {
        }
        objc_opt_class();
        uint64_t v32 = [v41 firstRelevantItemIdentifier];
        ICDynamicCast();
        id v9 = (id)objc_claimAutoreleasedReturnValue();

        if (!v9) {
          goto LABEL_42;
        }
LABEL_8:
        if (([v9 isEqual:v8] & 1) == 0)
        {
          id v10 = [*(id *)(a1 + 32) selectionStateController];
          [v10 pushAutoselectedObjectWithObjectID:v9];

LABEL_10:
          goto LABEL_54;
        }
LABEL_16:
        if ([*(id *)(a1 + 32) selectionStateTrackingEnabled]
          && [*(id *)(a1 + 32) objectAlreadyLoadedInEditorWithObjectID:v9]
          && [*(id *)(a1 + 32) isNoteEditorTopViewController])
        {
          uint64_t v14 = *(void *)(a1 + 48);
          if (v14) {
            (*(void (**)(uint64_t, void *))(v14 + 16))(v14, v41);
          }
          goto LABEL_10;
        }
        if (objc_msgSend(v9, "ic_isModernNoteType"))
        {
          uint64_t v15 = [*(id *)(a1 + 32) modernManagedObjectContext];
          uint64_t v16 = [v15 ic_existingObjectWithID:v9];

          uint64_t v17 = [*(id *)(a1 + 32) noteEditorViewController];
          [v17 setNote:v16];

          if (([*(id *)(a1 + 32) selectionStateTrackingEnabled] & 1) == 0) {
            [*(id *)(a1 + 32) setSelectedNoteObjectID:v9];
          }
        }
        else
        {
          if (!objc_msgSend(v9, "ic_isInvitationType"))
          {
            if (!objc_msgSend(v9, "ic_isLegacyNoteType"))
            {
              int v22 = 1;
LABEL_48:
              v37 = *(void **)(a1 + 32);
              if ([v37 selectionStateTrackingEnabled]) {
                uint64_t v38 = v22 & [*(id *)(a1 + 32) isApplyingStateRestoreArchive];
              }
              else {
                uint64_t v38 = 0;
              }
              v39 = [*(id *)(a1 + 32) legacyNoteEditorViewController];
              [v37 setNoteEditorAnimated:0 ensurePresented:v38 startEditing:0 showLegacy:v4 == v39 showLatestUpdatesIfAvailable:1];

              id v3 = v41;
              goto LABEL_52;
            }
            objc_super v30 = [*(id *)(a1 + 32) legacyManagedObjectContext];
            uint64_t v16 = [v30 ic_existingObjectWithID:v9];

            objc_super v31 = [*(id *)(a1 + 32) legacyNoteEditorViewController];
            [v31 displayNote:v16];

            if (([*(id *)(a1 + 32) selectionStateTrackingEnabled] & 1) == 0) {
              [*(id *)(a1 + 32) setSelectedNoteObjectID:v9];
            }
            uint64_t v20 = [*(id *)(a1 + 32) legacyNoteEditorViewController];
            goto LABEL_28;
          }
          uint64_t v18 = [*(id *)(a1 + 32) modernManagedObjectContext];
          uint64_t v16 = [v18 ic_existingObjectWithID:v9];

          uint64_t v19 = [*(id *)(a1 + 32) noteEditorViewController];
          [v19 setInvitation:v16];

          if (([*(id *)(a1 + 32) selectionStateTrackingEnabled] & 1) == 0) {
            [*(id *)(a1 + 32) setSelectedInvitationObjectID:v9];
          }
        }
        uint64_t v20 = [*(id *)(a1 + 32) noteEditorViewController];
LABEL_28:
        uint64_t v21 = v20;

        int v22 = 1;
        uint64_t v4 = (void *)v16;
LABEL_46:

        uint64_t v4 = (void *)v21;
        goto LABEL_48;
      }
    }
    else
    {
      unsigned int v11 = [*(id *)(a1 + 32) isSelectionAppropriateForObjectID:v8];
      uint64_t v12 = [*(id *)(a1 + 32) selectedSearchResult];
      if (v12 || v11)
      {
        id v9 = v8;
      }
      else
      {
        objc_opt_class();
        uint64_t v13 = [v41 firstRelevantItemIdentifier];
        ICDynamicCast();
        id v9 = (id)objc_claimAutoreleasedReturnValue();
      }
      if (v9) {
        goto LABEL_16;
      }
    }
LABEL_42:
    if (objc_msgSend(*(id *)(a1 + 40), "ic_isModernContainerType"))
    {
      id v33 = [*(id *)(a1 + 32) noteEditorViewController];
      [v33 setNote:0];

      v34 = [*(id *)(a1 + 32) noteEditorViewController];
      [v34 setInvitation:0];

      uint64_t v35 = [*(id *)(a1 + 32) noteEditorViewController];

      uint64_t v4 = (void *)v35;
    }
    if (!objc_msgSend(*(id *)(a1 + 40), "ic_isLegacyContainerType"))
    {
      int v22 = 0;
      id v9 = 0;
      goto LABEL_48;
    }
    v36 = [*(id *)(a1 + 32) legacyNoteEditorViewController];
    [v36 displayNote:0];

    uint64_t v21 = [*(id *)(a1 + 32) legacyNoteEditorViewController];
    int v22 = 0;
    id v9 = 0;
    goto LABEL_46;
  }
LABEL_52:
  uint64_t v40 = *(void *)(a1 + 48);
  if (!v40) {
    goto LABEL_55;
  }
  (*(void (**)(uint64_t, void *))(v40 + 16))(v40, v41);
LABEL_54:
  id v3 = v41;
LABEL_55:
}

uint64_t _s11MobileNotes31RealtimeCollaborationControllerC02iscD7Enabled3forSbSo6ICNoteC_tFZ_0(void *a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10069AEB8 != -1) {
    swift_once();
  }
  if (byte_1006CDE48 == 1)
  {
    id v6 = [a1 account];
    if (v6
      || (id v9 = [a1 folder]) != 0
      && (id v10 = v9, v6 = [v9 account], v10, v6))
    {
      unsigned __int8 v7 = [v6 isPrimaryiCloudAccount];

      if (v7) {
        return 1;
      }
    }
    static Logger.realtimeCollaboration.getter();
    unsigned int v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Fast sync is disabled for non-primary iCloud account", v13, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return 0;
}

void sub_10001172C()
{
  uint64_t v1 = v0;
  Notification.object.getter();
  if (!*((void *)&v18 + 1))
  {
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  sub_100032E84(&v17, v16);
  sub_100031418(0, &qword_10069E2D8);
  swift_dynamicCast();
  uint64_t v2 = Notification.userInfo.getter();
  if (!v2)
  {
    long long v17 = 0u;
    long long v18 = 0u;
LABEL_12:
    sub_100015BE0((uint64_t)&v17);
    goto LABEL_13;
  }
  uint64_t v3 = v2;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  AnyHashable.init<A>(_:)();
  if (*(void *)(v3 + 16) && (unint64_t v4 = sub_100033028((uint64_t)v16), (v5 & 1) != 0))
  {
    sub_100032E28(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v17);
  }
  else
  {
    long long v17 = 0u;
    long long v18 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_100033134((uint64_t)v16);
  if (!*((void *)&v18 + 1)) {
    goto LABEL_12;
  }
  sub_100031418(0, &qword_1006A0070);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_13:
    id v6 = 0;
    goto LABEL_14;
  }
  id v6 = *(id *)&v16[0];
  id v7 = [v6 view];
  if (!v7)
  {
LABEL_21:
    __break(1u);
    return;
  }
  uint64_t v8 = v7;
  sub_1001C51A8(v7);

LABEL_14:
  id v9 = [v15 rootViewController];
  if (v9)
  {
    id v10 = v9;
    id v11 = [v9 view];
    if (v11)
    {
      id v12 = v11;
      unint64_t v13 = sub_100027A90(v12);

      uint64_t v14 = (unint64_t *)(v1 + OBJC_IVAR____TtC11MobileNotes33ICAppIntentsInteractionController_interactions);
      swift_beginAccess();
      *uint64_t v14 = v13;

      swift_bridgeObjectRelease();
      return;
    }
    goto LABEL_20;
  }
}

void sub_100011B28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100011B44()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  unint64_t v4 = &v39[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = __chkstk_darwin(v2);
  id v7 = &v39[-v6];
  uint64_t v8 = __chkstk_darwin(v5);
  id v10 = &v39[-v9];
  __chkstk_darwin(v8);
  id v12 = &v39[-v11];
  v49 = &type metadata for NotesFeature;
  unint64_t v50 = sub_100035D4C();
  unint64_t v46 = (unint64_t)"RealtimeCollaboration";
  unint64_t v47 = 21;
  char v48 = 2;
  char v13 = isFeatureEnabled(_:)();
  sub_100018FE8((uint64_t)&v46);
  if ((v13 & 1) == 0)
  {
    static Logger.realtimeCollaboration.getter();
    long long v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Fast sync is disabled by the feature flag", v19, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v4, v0);
    return 0;
  }
  if ([self isRunningUnitTests])
  {
    static Logger.realtimeCollaboration.getter();
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Fast sync is disabled in unit tests", v16, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v7, v0);
    return 0;
  }
  id v20 = [self sharedConfiguration];
  unsigned int v21 = [v20 fastSyncEnabled];

  if (!v21)
  {
    static Logger.realtimeCollaboration.getter();
    v36 = Logger.logObject.getter();
    os_log_type_t v37 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v38 = 0;
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "Fast Sync is disabled by the cloud configuration", v38, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v10, v0);
    return 0;
  }
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = 0;
  *(void *)(v22 + 24) = 0;
  *(_WORD *)(v22 + 32) = 256;
  if (qword_10069AE90 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_10003293C(v0, (uint64_t)qword_1006A2EC8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v1 + 16))(v12, v23, v0);
  uint64_t v24 = swift_allocObject();
  *(unsigned char *)(v24 + 16) = 2;
  if ((sub_100007008(v24, v22) & 1) == 0)
  {
    os_log_type_t v25 = static os_log_type_t.fault.getter();
    id v26 = Logger.logObject.getter();
    int v27 = v25;
    if (os_log_type_enabled(v26, v25))
    {
      uint64_t v28 = swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      uint64_t v45 = v43;
      *(_DWORD *)uint64_t v28 = 136315650;
      os_log_t v42 = v26;
      uint64_t v29 = StaticString.description.getter();
      unint64_t v46 = sub_10045DA1C(v29, v30, &v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2048;
      unint64_t v46 = 82;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v28 + 22) = 2080;
      uint64_t v41 = v28 + 24;
      unint64_t v46 = 0;
      unint64_t v47 = 0xE000000000000000;
      _StringGuts.grow(_:)(49);
      swift_bridgeObjectRelease();
      unint64_t v46 = 0xD000000000000021;
      unint64_t v47 = 0x8000000100558220;
      sub_1000339D4(v22);
      int v40 = v27;
      v44._countAndFlagsBits = StaticString.description.getter();
      v44._object = v31;
      v32._countAndFlagsBits = 47;
      v32._object = (void *)0xE100000000000000;
      String.append(_:)(v32);
      v33._countAndFlagsBits = StaticString.description.getter();
      String.append(_:)(v33);
      swift_bridgeObjectRelease();
      String.append(_:)(v44);
      swift_bridgeObjectRelease();
      v34._countAndFlagsBits = 0x7369642073617720;
      v34._object = (void *)0xEE002E64656C6261;
      String.append(_:)(v34);
      unint64_t v46 = sub_10045DA1C(v46, v47, &v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      id v26 = v42;
      _os_log_impl((void *)&_mh_execute_header, v42, (os_log_type_t)v40, "Failed assertion at %s:%lu: %s", (uint8_t *)v28, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v12, v0);
  swift_release();
  swift_release();
  return 1;
}

void sub_1000121BC(uint64_t *a1@<X8>)
{
  sub_10002E5A8(*(void *)(v1 + 16), (uint64_t (*)(uint64_t))sub_10002EA78, a1);
}

uint64_t sub_1000122A4()
{
  return sub_100012334(&qword_1006A3C08, (void (*)(uint64_t))type metadata accessor for NoteEntity);
}

uint64_t sub_1000122EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100012334(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for NoteEntity(uint64_t a1)
{
  return sub_10002EFBC(a1, qword_1006A3CF0);
}

void sub_1000125DC(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

id sub_1000125F8(void *a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10 = OBJC_IVAR___ICNoteEditorActionMenu_note;
  *(void *)&v8[OBJC_IVAR___ICNoteEditorActionMenu_note] = 0;
  uint64_t v11 = OBJC_IVAR___ICNoteEditorActionMenu_invitation;
  *(void *)&v8[OBJC_IVAR___ICNoteEditorActionMenu_invitation] = 0;
  uint64_t v12 = OBJC_IVAR___ICNoteEditorActionMenu_isMathEnabled;
  char v13 = v8;
  v8[v12] = ICInternalSettingsIsMathEnabled();
  swift_unknownObjectWeakInit();
  uint64_t v14 = (uint64_t *)&v13[OBJC_IVAR___ICNoteEditorActionMenu_completion];
  *uint64_t v14 = 0;
  v14[1] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v15 = OBJC_IVAR___ICNoteEditorActionMenu_presentingBarButtonItem;
  *(void *)&v13[OBJC_IVAR___ICNoteEditorActionMenu_presentingBarButtonItem] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v16 = *(void **)&v8[v10];
  *(void *)&v8[v10] = a1;
  id v17 = a1;

  os_log_type_t v18 = *(void **)&v8[v11];
  *(void *)&v8[v11] = a2;
  id v19 = a2;

  swift_unknownObjectWeakAssign();
  id v20 = *(void **)&v13[v15];
  *(void *)&v13[v15] = a4;
  id v21 = a4;

  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  uint64_t v22 = *v14;
  *uint64_t v14 = a7;
  v14[1] = a8;
  sub_10002E71C(a7);
  sub_10002E70C(v22);

  v28.receiver = v13;
  v28.super_class = (Class)type metadata accessor for NoteEditorActionMenu();
  return [super init];
}

void sub_100012778(char a1, uint64_t a2, char *a3, char a4)
{
  uint64_t v5 = (uint64_t)a3;
  if (a1)
  {
    id v66 = *(id *)(a2 + 16);
    *(void *)(a2 + 16) = a3;
    id v7 = a3;

    return;
  }
  uint64_t v9 = *(void *)(a2 + 24);
  if (v9)
  {
    v68 = a3;
    uint64_t v10 = a3;
    sub_10002E71C(v9);
    ((void (*)(char **))v9)(&v68);
    sub_10002E70C(v9);
  }
  if (a4 & 1) == 0 || (*(unsigned char *)(a2 + 72))
  {
LABEL_30:
    uint64_t v24 = *(void *)(a2 + 40);
    uint64_t v25 = *(void *)(a2 + 48);
    if (v24)
    {
      uint64_t v26 = swift_allocObject();
      *(void *)(v26 + 16) = v24;
      *(void *)(v26 + 24) = v25;
      int v27 = sub_1002FBACC;
    }
    else
    {
      int v27 = 0;
    }
    sub_10002E71C(v24);
    sub_10002E70C((uint64_t)v27);
    objc_super v28 = (uint64_t *)(a2 + 56);
    unint64_t v29 = *(void *)(a2 + 56);
    if (v29 >> 62) {
      goto LABEL_71;
    }
    uint64_t v30 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (v24)
    {
      if (!v30) {
        break;
      }
      while (1)
      {
        uint64_t v24 = *v28;
        if ((unint64_t)*v28 >> 62)
        {
          swift_bridgeObjectRetain();
          objc_super v31 = (char *)_CocoaArrayWrapper.endIndex.getter();
          if (!v31) {
            goto LABEL_44;
          }
        }
        else
        {
          objc_super v31 = *(char **)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (!v31) {
            goto LABEL_44;
          }
        }
        Swift::String v32 = v31 - 1;
        if (__OFSUB__(v31, 1)) {
          goto LABEL_67;
        }
        if ((v24 & 0xC000000000000001) != 0)
        {
          Swift::String v33 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (((unint64_t)v32 & 0x8000000000000000) != 0) {
            goto LABEL_68;
          }
          if ((unint64_t)v32 >= *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_69;
          }
          Swift::String v33 = (char *)*(id *)(v24 + 8 * (void)v32 + 32);
        }
        objc_super v31 = v33;
LABEL_44:
        swift_bridgeObjectRelease();
        v68 = v31;
        Swift::String v34 = *(void (**)(char **))(a2 + 24);
        if (v34)
        {
          swift_retain();
          v34(&v68);
          sub_10002E70C((uint64_t)v34);
        }
        uint64_t v35 = *(uint64_t (**)(uint64_t *, char **))(a2 + 40);
        if (!v35
          || (uint64_t v67 = v5,
              id v36 = (id)v5,
              sub_10002E71C((uint64_t)v35),
              char v37 = v35(&v67, &v68),
              sub_10002E70C((uint64_t)v35),
              v36,
              (v37 & 1) == 0))
        {
          int v42 = 1;
          goto LABEL_57;
        }
        uint64_t v24 = *v28;
        if (!((unint64_t)*v28 >> 62))
        {
          if (!*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            break;
          }
          goto LABEL_50;
        }
        swift_bridgeObjectRetain();
        uint64_t v44 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v44) {
          break;
        }
LABEL_50:
        uint64_t v24 = *v28;
        int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *objc_super v28 = v24;
        if (!isUniquelyReferenced_nonNull_bridgeObject || v24 < 0 || (v24 & 0x4000000000000000) != 0)
        {
          uint64_t v24 = sub_1002E082C(v24);
          *objc_super v28 = v24;
        }
        uint64_t v39 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v39) {
          goto LABEL_70;
        }
        uint64_t v40 = v39 - 1;
        uint64_t v41 = *(void **)((v24 & 0xFFFFFFFFFFFFFF8) + 8 * v40 + 0x20);
        *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) = v40;
        specialized Array._endMutation()();

        int v42 = 0;
LABEL_57:

        if ((unint64_t)*v28 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v43 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v43 = *(void *)((*v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        if (((v43 != 0) & ~v42) == 0) {
          goto LABEL_72;
        }
      }
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      swift_bridgeObjectRetain();
      uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
LABEL_72:
    if ((unint64_t)*v28 >> 62) {
      goto LABEL_105;
    }
    uint64_t v45 = *(void *)((*v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (2)
    {
      if (v45 >= *(void *)(a2 + 8))
      {
LABEL_83:
        type metadata accessor for ICSelectionStateModel(0);
        while (1)
        {
          swift_bridgeObjectRetain();
          unint64_t v50 = Array.firstIndex(matching:)();
          char v52 = v51;
          swift_bridgeObjectRelease();
          uint64_t v53 = *v28;
          if ((v52 & 1) == 0) {
            break;
          }
          swift_bridgeObjectRetain();
          unint64_t v50 = Array.firstIndex(matching:)();
          char v58 = v57;
          swift_bridgeObjectRelease();
          if ((v58 & 1) == 0)
          {
            uint64_t v59 = *v28;
            int v60 = swift_isUniquelyReferenced_nonNull_bridgeObject();
            *objc_super v28 = v59;
            if (!v60 || v59 < 0 || (v59 & 0x4000000000000000) != 0)
            {
              uint64_t v59 = sub_1002E082C(v59);
              *objc_super v28 = v59;
            }
            uint64_t v55 = v59 & 0xFFFFFFFFFFFFFF8;
            unint64_t v56 = *(void *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v50 >= v56) {
              goto LABEL_104;
            }
LABEL_97:
            unint64_t v61 = v56 - 1;
            uint64_t v62 = v56 - 1 - v50;
            if (v62 < 0) {
              goto LABEL_120;
            }
            unint64_t v63 = v55 + 8 * v50;
            v64 = *(void **)(v63 + 32);
            memmove((void *)(v63 + 32), (const void *)(v63 + 40), 8 * v62);
            *(void *)((*v28 & 0xFFFFFFFFFFFFFF8) + 0x10) = v61;
            specialized Array._endMutation()();
          }
          if ((unint64_t)*v28 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v65 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v65 = *(void *)((*v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          if (v65 < *(void *)(a2 + 8)) {
            goto LABEL_75;
          }
        }
        int v54 = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *objc_super v28 = v53;
        if (!v54 || v53 < 0 || (v53 & 0x4000000000000000) != 0)
        {
          uint64_t v53 = sub_1002E082C(v53);
          *objc_super v28 = v53;
        }
        uint64_t v55 = v53 & 0xFFFFFFFFFFFFFF8;
        unint64_t v56 = *(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v50 >= v56)
        {
          __break(1u);
LABEL_104:
          __break(1u);
LABEL_105:
          swift_bridgeObjectRetain();
          uint64_t v45 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          continue;
        }
        goto LABEL_97;
      }
      break;
    }
LABEL_75:
    id v46 = (id)v5;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    sub_10000D688();
    unint64_t v47 = *(void *)(a2 + 56);
    if (v47 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v48 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v48) {
        goto LABEL_79;
      }
    }
    else
    {
      uint64_t v48 = *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v48)
      {
LABEL_79:
        uint64_t v5 = *v28;
        if ((unint64_t)*v28 >> 62)
        {
          swift_bridgeObjectRetain();
          objc_super v28 = (uint64_t *)_CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          v49 = (char *)v28 - 1;
          if (!__OFSUB__(v28, 1)) {
            goto LABEL_108;
          }
        }
        else
        {
          objc_super v28 = *(uint64_t **)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v49 = (char *)v28 - 1;
          if (!__OFSUB__(v28, 1)) {
            goto LABEL_108;
          }
        }
        __break(1u);
        goto LABEL_83;
      }
    }
    v49 = 0;
LABEL_108:
    *(void *)(a2 + 64) = v49;
    *(unsigned char *)(a2 + 72) = v48 == 0;

    *(void *)(a2 + 16) = 0;
    return;
  }
  unint64_t v11 = *(void *)(a2 + 56);
  int64_t v12 = *(void *)(a2 + 64);
  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if ((v13 & 0x8000000000000000) != 0)
    {
      __break(1u);
      goto LABEL_114;
    }
  }
  else
  {
    unint64_t v13 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v12 < 0 || v12 >= (uint64_t)v13) {
    goto LABEL_30;
  }
  unint64_t v13 = *(void *)(a2 + 56);
  uint64_t v4 = v13 >> 62;
  if (!(v13 >> 62))
  {
    uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v14 > v12) {
      goto LABEL_15;
    }
    goto LABEL_116;
  }
LABEL_114:
  swift_bridgeObjectRetain();
  uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if ((v9 & 0x8000000000000000) == 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v14 > v12)
    {
LABEL_15:
      if ((v13 & 0xC000000000000001) != 0)
      {
        type metadata accessor for ICSelectionStateModel(0);
        Swift::Int v15 = 0;
        do
        {
          Swift::Int v16 = v15 + 1;
          _ArrayBuffer._typeCheckSlowPath(_:)(v15);
          Swift::Int v15 = v16;
        }
        while (v12 + 1 != v16);
      }
      int64_t v17 = v12 + 1;
      if (v4)
      {
        swift_bridgeObjectRetain();
        uint64_t v14 = _CocoaArrayWrapper.subscript.getter();
        uint64_t v9 = v18;
        uint64_t v4 = v19;
        int64_t v12 = v20;
        swift_bridgeObjectRelease();
        if (v12) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t v14 = v13 & 0xFFFFFFFFFFFFFF8;
        uint64_t v9 = (v13 & 0xFFFFFFFFFFFFFF8) + 32;
        int64_t v12 = (2 * v17) | 1;
        swift_bridgeObjectRetain();
        if (v12)
        {
LABEL_23:
          type metadata accessor for __ContiguousArrayStorageBase();
          swift_unknownObjectRetain_n();
          uint64_t v22 = (void *)swift_dynamicCastClass();
          if (!v22)
          {
            swift_unknownObjectRelease();
            uint64_t v22 = &_swiftEmptyArrayStorage;
          }
          uint64_t v23 = v22[2];
          swift_release();
          if (!__OFSUB__((unint64_t)v12 >> 1, v4))
          {
            if (v23 == ((unint64_t)v12 >> 1) - v4)
            {
              id v21 = (void *)swift_dynamicCastClass();
              if (!v21)
              {
                swift_unknownObjectRelease();
                id v21 = &_swiftEmptyArrayStorage;
              }
              goto LABEL_29;
            }
            goto LABEL_118;
          }
LABEL_117:
          __break(1u);
LABEL_118:
          swift_unknownObjectRelease();
        }
      }
      id v21 = sub_1001A98BC(v14, v9, v4, v12);
LABEL_29:
      swift_unknownObjectRelease();
      *(void *)(a2 + 56) = v21;
      swift_bridgeObjectRelease();
      goto LABEL_30;
    }
LABEL_116:
    __break(1u);
    goto LABEL_117;
  }
  __break(1u);
LABEL_120:
  _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1000131B8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10002F214(&qword_1006A47C0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v8[1])
  {
    swift_beginAccess();
    sub_10002F214(&qword_1006A47C8);
    Published.projectedValue.getter();
    swift_endAccess();
    swift_release();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_10001DFB0((unint64_t *)&unk_1006A47D0, &qword_1006A47C0);
    uint64_t v6 = Publisher<>.sink(receiveValue:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    uint64_t v6 = 0;
  }
  *(void *)(v1 + OBJC_IVAR___ICCollaborationButtonsController_collaboratorDataSourceObservation) = v6;
  return swift_release();
}

uint64_t sub_1000133B0@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_10002F214(&qword_1006A40B8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for EditNoteActivity();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  Notification.object.getter();
  if (!v64)
  {
    sub_10002B754((uint64_t)&v62, &qword_10069B4D0);
    goto LABEL_21;
  }
  sub_100031418(0, (unint64_t *)&qword_1006A4DB0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_21:
    objc_super v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v30 = 0;
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "Not continuing with fast sync because note/editor is ineligible.", v30, 2u);
      swift_slowDealloc();
    }

    goto LABEL_24;
  }
  uint64_t v9 = (void *)v65;
  uint64_t v10 = Notification.userInfo.getter();
  if (!v10)
  {
    long long v65 = 0u;
    long long v66 = 0u;
LABEL_18:

    sub_10002B754((uint64_t)&v65, &qword_10069B4D0);
    goto LABEL_21;
  }
  uint64_t v11 = v10;
  uint64_t v60 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v61 = v12;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v11 + 16) && (unint64_t v13 = sub_100033028((uint64_t)&v62), (v14 & 1) != 0))
  {
    sub_100032E28(*(void *)(v11 + 56) + 32 * v13, (uint64_t)&v65);
  }
  else
  {
    long long v65 = 0u;
    long long v66 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_100033134((uint64_t)&v62);
  if (!*((void *)&v66 + 1)) {
    goto LABEL_18;
  }
  sub_100031418(0, (unint64_t *)&qword_10069FD10);
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_21;
  }
  Swift::Int v15 = (void *)v62;
  if ((_s11MobileNotes31RealtimeCollaborationControllerC02iscD7Enabled3forSbSo6ICNoteC_tFZ_0((void *)v62) & 1) == 0)
  {

    goto LABEL_21;
  }
  id v59 = v9;
  id v16 = v15;
  EditNoteActivity.init(note:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10002B754((uint64_t)v4, &qword_1006A40B8);
    id v17 = v16;
    os_log_type_t v18 = static os_log_type_t.fault.getter();
    uint64_t v19 = Logger.logObject.getter();
    if (os_log_type_enabled(v19, v18))
    {
      uint64_t v20 = swift_slowAlloc();
      char v58 = (void (*)(char *, char *, uint64_t))swift_slowAlloc();
      *(void *)&long long v65 = v58;
      *(_DWORD *)uint64_t v20 = 136315650;
      uint64_t v21 = StaticString.description.getter();
      int64_t v62 = sub_10045DA1C(v21, v22, (uint64_t *)&v65);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 12) = 2048;
      int64_t v62 = 138;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v20 + 22) = 2080;
      uint64_t v57 = v20 + 24;
      int64_t v62 = 0;
      unint64_t v63 = 0xE000000000000000;
      _StringGuts.grow(_:)(49);
      swift_bridgeObjectRelease();
      int64_t v62 = 0xD00000000000002FLL;
      unint64_t v63 = 0x80000001005591D0;
      id v23 = [v17 ic_loggingDescription];
      uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v26 = v25;

      v27._countAndFlagsBits = v24;
      v27._object = v26;
      String.append(_:)(v27);
      swift_bridgeObjectRelease();
      int64_t v62 = sub_10045DA1C(v62, v63, (uint64_t *)&v65);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v19, v18, "Failed assertion at %s:%lu: %s", (uint8_t *)v20, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    goto LABEL_16;
  }
  char v58 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v58(v8, v4, v5);
  Swift::String v33 = (void *)Notification.name.getter();
  uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v36 = v35;
  if (v34 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v36 == v37)
  {
    swift_bridgeObjectRelease_n();
LABEL_30:

    uint64_t v39 = sub_10002F214(&qword_1006A3FD0);
    uint64_t v40 = &a1[*(int *)(v39 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(a1, v8, v5);
    id v41 = [v16 serverShareCheckingParent];
    if (v41)
    {
      int v42 = v41;
      sub_100031418(0, &qword_10069E690);
      NSObject<>.makeSnapshot()();

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

      uint64_t v43 = sub_10002F214(&qword_10069E510);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v40, 1, 1, v43);
    }
    *(void *)&a1[*(int *)(v39 + 64)] = v59;
    uint64_t v44 = type metadata accessor for FastSyncEditorActivityChangeHandler(0);
    goto LABEL_34;
  }
  char v38 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v38) {
    goto LABEL_30;
  }
  uint64_t v45 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v47 = v46;
  if (v45 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v47 == v48)
  {
    swift_bridgeObjectRelease_n();
LABEL_39:

    uint64_t v50 = *(int *)(sub_10002F214(&qword_1006A3FD8) + 48);
    v58(a1, v8, v5);
    *(void *)&a1[v50] = v59;
    uint64_t v44 = type metadata accessor for FastSyncEditorActivityChangeHandler(0);
LABEL_34:
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(a1, 0, 1, v44);
  }
  char v49 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v49) {
    goto LABEL_39;
  }
  uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v53 = v52;
  if (v51 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v53 == v54)
  {

    swift_bridgeObjectRelease_n();
LABEL_44:
    uint64_t v56 = *(int *)(sub_10002F214(&qword_1006A3FD8) + 48);
    v58(a1, v8, v5);
    *(void *)&a1[v56] = v59;
    uint64_t v44 = type metadata accessor for FastSyncEditorActivityChangeHandler(0);
    goto LABEL_34;
  }
  char v55 = _stringCompareWithSmolCheck(_:_:expecting:)();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v55) {
    goto LABEL_44;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
LABEL_16:

LABEL_24:
  uint64_t v31 = type metadata accessor for FastSyncEditorActivityChangeHandler(0);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(a1, 1, 1, v31);
}

void sub_100013CE0(uint64_t a1, void *a2, unsigned char *a3)
{
  id v5 = a2;
  if (([*(id *)(a1 + 32) selectionStateTrackingEnabled] & 1) == 0
    && objc_msgSend(v5, "ic_isModernAccountType"))
  {
    uint64_t v6 = [*(id *)(a1 + 32) modernManagedObjectContext];
    uint64_t v7 = [v6 objectWithID:v5];

    if (([v7 hasAnyCustomFoldersIncludingSystem:0] & 1) == 0)
    {
      uint64_t v8 = *(void **)(a1 + 40);
      if (v8 && objc_msgSend(v8, "ic_isModernNoteType"))
      {
        uint64_t v9 = [*(id *)(a1 + 32) modernManagedObjectContext];
        uint64_t v10 = [v9 objectWithID:*(void *)(a1 + 40)];

        uint64_t v11 = [v10 folder];
        uint64_t v12 = [v11 objectID];

        id v5 = v11;
      }
      else
      {
        uint64_t v10 = [v7 defaultFolder];
        uint64_t v12 = [v10 objectID];
      }

      id v5 = (id)v12;
    }
  }
  if (objc_msgSend(v5, "ic_isContainerType"))
  {
    unint64_t v13 = [*(id *)(a1 + 32) rootNoteBrowseViewController];
    if (a3)
    {
      char v14 = -[ICNoteBrowseViewController initWithViewMode:viewControllerManager:]([ICNoteBrowseViewController alloc], "initWithViewMode:viewControllerManager:", [*(id *)(a1 + 32) noteContainerViewMode], *(void *)(a1 + 32));

      unint64_t v13 = v14;
    }
    [*(id *)(a1 + 48) addObject:v13];
    if ((char *)[*(id *)(a1 + 56) count] - 1 == a3)
    {
      if (*(void *)(a1 + 40))
      {
        BOOL v15 = 1;
LABEL_18:
        objc_initWeak(&location, *(id *)(a1 + 32));
        id v16 = *(void **)(a1 + 32);
        id v17 = +[NSSet ic_setFromNonNilObject:v5];
        os_log_type_t v18 = +[NSSet set];
        v21[0] = _NSConcreteStackBlock;
        v21[1] = 3221225472;
        v21[2] = sub_100004FEC;
        v21[3] = &unk_100625E68;
        id v22 = *(id *)(a1 + 64);
        id v23 = v5;
        objc_copyWeak(&v25, &location);
        id v19 = v13;
        id v24 = v19;
        [v16 setCurrentNoteBrowseViewController:v19 animated:0 ensurePresented:0 containerIdentifiers:v17 excludingIdentifiers:v18 ensureSelectedNote:v15 keepEditorShowing:0 dataIndexedBlock:0 dataRenderedBlock:v21];

        objc_destroyWeak(&v25);
        objc_destroyWeak(&location);

        goto LABEL_19;
      }
      if (![*(id *)(a1 + 32) noteContainerViewMode])
      {
        uint64_t v20 = [*(id *)(a1 + 32) trailingSidebarSplitViewController];
        BOOL v15 = ([v20 isCollapsed] & 1) == 0 && *(void *)(a1 + 72) != 1;

        goto LABEL_18;
      }
    }
    BOOL v15 = 0;
    goto LABEL_18;
  }
LABEL_19:
}

void sub_100013FDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100014174(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = a1 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue;
  swift_beginAccess();
  uint64_t v3 = *(void **)v2;
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = *(void *)(v2 + 40);
  id v4 = *(id *)(v2 + 16);
  id v5 = v3;
  sub_10002E71C(v7);
  sub_10002E71C(v8);
  type metadata accessor for ICSelectionStateModel(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  OS_dispatch_queue.sync<A>(execute:)();

  sub_10002E70C(v7);
  sub_10002E70C(v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a2 = *(void *)&v9[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentFirstVisibleObjectIDURLForContainerObjectIDURL];
  swift_bridgeObjectRetain();
}

id sub_1000148AC()
{
  id v0 = [objc_allocWithZone((Class)UILabel) init];
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v1 = [self mainBundle];
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v1 localizedStringForKey:v2 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v0 setText:v4];

  [v0 setAdjustsFontForContentSizeCategory:1];
  UIAccessibilityTraits v5 = UIAccessibilityTraitHeader;
  id v6 = v0;
  unint64_t v7 = (unint64_t)[v6 accessibilityTraits];
  if ((v5 & ~v7) != 0) {
    UIAccessibilityTraits v8 = v5;
  }
  else {
    UIAccessibilityTraits v8 = 0;
  }
  [v6 setAccessibilityTraits:v8 | v7];

  return v6;
}

uint64_t sub_100014A08(uint64_t a1, char a2, uint64_t (*a3)(), uint64_t a4)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    [Strong willAdoptModelForSelectionStateController:v4 isNavigating:0];
    swift_unknownObjectRelease();
  }
  UIAccessibilityTraits v8 = *(void **)&v4[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateAccessQueue];
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v4;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_100033D48;
  *(void *)(v10 + 24) = v9;
  id v24 = sub_100031D58;
  uint64_t v25 = v10;
  aBlock = _NSConcreteStackBlock;
  uint64_t v21 = 1107296256;
  id v22 = sub_100031D30;
  id v23 = &unk_100635890;
  uint64_t v11 = _Block_copy(&aBlock);
  uint64_t v12 = v8;
  unint64_t v13 = v4;
  swift_retain();
  swift_release();
  dispatch_sync(v12, v11);

  _Block_release(v11);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    uint64_t v16 = swift_unknownObjectWeakLoadStrong();
    if (v16)
    {
      id v17 = (void *)v16;
      if (a3)
      {
        id v24 = a3;
        uint64_t v25 = a4;
        aBlock = _NSConcreteStackBlock;
        uint64_t v21 = 1107296256;
        id v22 = sub_100262E2C;
        id v23 = &unk_1006358B8;
        a3 = (uint64_t (*)())_Block_copy(&aBlock);
        swift_retain();
        swift_release();
      }
      [v17 selectionStateController:v13 didAdoptModelFromArchive:a1 systemPaperAlert:a2 & 1 completion:a3];
      swift_unknownObjectRelease();
      _Block_release(a3);
    }
    return swift_release();
  }
  return result;
}

id sub_100014C74(void *a1, void *a2)
{
  uint64_t v5 = sub_10002F214(&qword_10069D7F8);
  __chkstk_darwin(v5 - 8);
  unint64_t v7 = (uint64_t *)((char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (objc_msgSend(a1, "ic_isNoteType"))
  {
    id result = [a1 ic_isNoteType];
    if (!result) {
      return result;
    }
    goto LABEL_6;
  }
  id result = [a1 ic_isInvitationType];
  if (result)
  {
    id result = [a1 ic_isInvitationType];
    if (result)
    {
LABEL_6:
      void *v7 = a1;
      v7[1] = a2;
      uint64_t v9 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 0, 1, v9);
      uint64_t v10 = v2 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection;
      swift_beginAccess();
      id v11 = a2;
      id v12 = a1;
      sub_10002B660((uint64_t)v7, v10, &qword_10069D7F8);
      return (id)swift_endAccess();
    }
  }
  return result;
}

void sub_100015264(uint64_t *a1@<X8>)
{
  sub_10002E5A8(*(void *)(v1 + 16), (uint64_t (*)(uint64_t))sub_10002ECBC, a1);
}

uint64_t sub_1000152A8()
{
  uint64_t v1 = sub_10002F214(&qword_1006A4090);
  __chkstk_darwin(v1 - 8);
  id v3 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v42 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v42);
  id v41 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214(&qword_1006A4088);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v11 = (char *)&v37 - v10;
  uint64_t v44 = v0;
  uint64_t v12 = (uint64_t)v0 + OBJC_IVAR___ICFastSyncPresenceController_editorActivityChanges;
  swift_beginAccess();
  uint64_t v43 = v12;
  sub_10002F034(v12, (uint64_t)v11, &qword_1006A4088);
  uint64_t v13 = sub_10002F214(&qword_10069B478);
  uint64_t v14 = *(void *)(v13 - 8);
  LODWORD(v12) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13);
  uint64_t result = sub_10002B754((uint64_t)v11, &qword_1006A4088);
  if (v12 == 1)
  {
    sub_10002F214(&qword_1006A4098);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_100529A00;
    id v17 = (void *)ICNoteEditorNoteWillAppearNotification;
    uint64_t v40 = v3;
    os_log_type_t v18 = (void *)ICNoteEditorNoteWillDisappearNotification;
    *(void *)(v16 + 32) = ICNoteEditorNoteWillAppearNotification;
    *(void *)(v16 + 40) = v18;
    id v38 = (id)ICNoteEditorNoteDidDisappearNotification;
    *(void *)(v16 + 48) = ICNoteEditorNoteDidDisappearNotification;
    uint64_t v45 = v16;
    id v19 = v41;
    uint64_t v20 = v42;
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v41, (uint64_t)v44 + OBJC_IVAR___ICFastSyncPresenceController_logger, v42);
    uint64_t v21 = *(unsigned __int8 *)(v4 + 80);
    uint64_t v39 = v9;
    uint64_t v22 = (v21 + 16) & ~v21;
    uint64_t v23 = swift_allocObject();
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v23 + v22, v19, v20);
    type metadata accessor for FastSyncEditorActivityChangeHandler(0);
    id v24 = v17;
    id v25 = v18;
    id v26 = v38;
    sub_10002F214(&qword_1006A40A0);
    sub_10001DFB0(&qword_1006A40A8, &qword_1006A40A0);
    uint64_t v27 = (uint64_t)v39;
    NotificationSource.init<A>(observing:object:transform:)();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v27, 0, 1, v13);
    uint64_t v28 = v43;
    swift_beginAccess();
    sub_10002B660(v27, v28, &qword_1006A4088);
    swift_endAccess();
    os_log_type_t v29 = (void *)ICCloudSyncingObjectDidUpdateShareNotification;
    uint64_t v30 = swift_allocObject();
    uint64_t v31 = v44;
    *(void *)(v30 + 16) = v44;
    id v32 = v29;
    id v33 = v31;
    sub_10002F214(&qword_1006A40B0);
    uint64_t v34 = (uint64_t)v40;
    NotificationSource.init(observing:object:transform:)();
    uint64_t v35 = sub_10002F214(&qword_10069B480);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v34, 0, 1, v35);
    uint64_t v36 = (uint64_t)v33 + OBJC_IVAR___ICFastSyncPresenceController_noteActivityShareChanges;
    swift_beginAccess();
    sub_10002B660(v34, v36, &qword_1006A4090);
    return swift_endAccess();
  }
  return result;
}

void sub_1000158CC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 56));
  _Unwind_Resume(a1);
}

uint64_t sub_100015B04()
{
  swift_beginAccess();
  id v1 = objc_getAssociatedObject(v0, &unk_1006A3649);
  swift_endAccess();
  if (v1)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v4, 0, sizeof(v4));
  }
  sub_10002F1B0((uint64_t)v4, (uint64_t)v5, &qword_10069B4D0);
  if (v6)
  {
    uint64_t result = swift_dynamicCast();
    if (result) {
      return v3;
    }
  }
  else
  {
    sub_100015BE0((uint64_t)v5);
    return 0;
  }
  return result;
}

uint64_t sub_100015BE0(uint64_t a1)
{
  uint64_t v2 = sub_10002F214(&qword_10069B4D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100015C50(void *a1, char *a2, uint64_t a3)
{
  if (a1)
  {
    id v5 = [a1 selectionState];
    if (v5)
    {
      uint64_t v6 = v5;
      uint64_t v7 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v9 = v8;

      type metadata accessor for JSONDecoder();
      swift_allocObject();
      JSONDecoder.init()();
      sub_10002F214((uint64_t *)&unk_1006A2B80);
      sub_10001DFB0(&qword_10069E840, (uint64_t *)&unk_1006A2B80);
      dispatch thunk of JSONDecoder.decode<A>(_:from:)();
      sub_10017253C(v7, v9);
      swift_release();
      uint64_t v10 = v38;
      long long v36 = v39;
      uint64_t v35 = v40;
      long long v34 = v41;
      uint64_t v33 = v42;
      char v32 = v43;
      uint64_t v31 = v44;
      id v11 = &a2[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue];
      swift_beginAccess();
      uint64_t v12 = *(void **)v11;
      uint64_t v14 = (void *)*((void *)v11 + 2);
      uint64_t v13 = *((void *)v11 + 3);
      uint64_t v15 = *((void *)v11 + 5);
      *(_OWORD *)id v11 = aBlock;
      *((void *)v11 + 2) = v10;
      *(_OWORD *)(v11 + 24) = v36;
      *((void *)v11 + 5) = v35;
      *((_OWORD *)v11 + 3) = v34;
      *((void *)v11 + 8) = v33;
      v11[72] = v32;
      *((void *)v11 + 10) = v31;

      sub_10002E70C(v13);
      sub_10002E70C(v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a2;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_1000253B4;
  *(void *)(v17 + 24) = v16;
  os_log_type_t v18 = &a2[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue];
  swift_beginAccess();
  uint64_t v19 = *((void *)v18 + 3);
  *((void *)v18 + 3) = sub_100025388;
  *((void *)v18 + 4) = v17;
  uint64_t v20 = a2;
  sub_10002E70C(v19);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v20;
  *(void *)(v21 + 24) = a3;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_1002FBF78;
  *(void *)(v22 + 24) = v21;
  uint64_t v23 = *((void *)v18 + 5);
  *((void *)v18 + 5) = sub_1002FBF80;
  *((void *)v18 + 6) = v22;
  id v24 = v20;
  sub_10002E70C(v23);
  swift_beginAccess();
  id v25 = *(void **)v18;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v18;
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = sub_100034D90;
  *(void *)(v27 + 24) = v26;
  *((void *)&v39 + 1) = sub_100031D58;
  uint64_t v40 = v27;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  id v38 = sub_100031D30;
  *(void *)&long long v39 = &unk_100635B38;
  uint64_t v28 = _Block_copy(&aBlock);
  os_log_type_t v29 = v25;
  swift_retain();
  swift_release();
  dispatch_sync(v29, v28);

  _Block_release(v28);
  uint64_t result = swift_isEscapingClosureAtFileLocation();
  if (result)
  {
    __break(1u);
  }
  else
  {
    swift_endAccess();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100016BD0(uint64_t a1, void *a2)
{
  uint64_t v5 = sub_10002F214(&qword_10069D7F0);
  uint64_t result = __chkstk_darwin(v5 - 8);
  unint64_t v8 = (uint64_t *)((char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1)
  {
    swift_unknownObjectRetain();
    self;
    unint64_t v9 = (void *)swift_dynamicCastObjCClass();
    if (v9)
    {
      uint64_t v10 = (uint64_t)v9;
      if (objc_msgSend(v9, "ic_isContainerType"))
      {
        *unint64_t v8 = v10;
        v8[1] = (uint64_t)a2;
        uint64_t v11 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
LABEL_7:
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v8, 0, 1, v11);
        uint64_t v13 = v2 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection;
        swift_beginAccess();
        id v14 = a2;
        swift_unknownObjectRetain();
        sub_10002B660((uint64_t)v8, v13, &qword_10069D7F0);
        swift_endAccess();
        return swift_unknownObjectRelease();
      }
    }
    else
    {
      self;
      uint64_t v12 = swift_dynamicCastObjCClass();
      if (v12)
      {
        *unint64_t v8 = v12;
        v8[1] = (uint64_t)a2;
        uint64_t v11 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
        goto LABEL_7;
      }
      swift_unknownObjectRelease();
      swift_unknownObjectRetain();
      self;
      uint64_t v15 = (void *)swift_dynamicCastObjCClass();
      if (v15) {
        sub_100198544(v15, a2);
      }
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

id sub_100016F6C(void *a1)
{
  uint64_t v2 = type metadata accessor for UIButton.Configuration();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unint64_t v8 = (char *)aBlock - v7;
  if (objc_msgSend(self, "ic_isVision")) {
    static UIButton.Configuration.bordered()();
  }
  else {
    static UIButton.Configuration.plain()();
  }
  unint64_t v9 = self;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  aBlock[4] = sub_10015E5E0;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1002B6294;
  aBlock[3] = &unk_10062DD78;
  uint64_t v11 = _Block_copy(aBlock);
  id v12 = a1;
  swift_release();
  id v13 = [v9 ic_actionWithImage:0 handler:v11];
  _Block_release(v11);
  sub_100031418(0, &qword_10069C298);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
  id v14 = v13;
  uint64_t v15 = (void *)UIButton.init(configuration:primaryAction:)();
  [v15 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v16 = self;
  id v17 = v15;
  id v18 = [v16 mainBundle];
  NSString v19 = String._bridgeToObjectiveC()();
  id v20 = [v18 localizedStringForKey:v19 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v17 setAccessibilityLabel:v21];

  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  return v17;
}

void sub_100017D24(uint64_t a1)
{
  id v2 = objc_alloc((Class)ICNASnapshotBackgroundTask);
  uint64_t v3 = [*(id *)(a1 + 32) analyticsController];
  uint64_t v4 = [*(id *)(a1 + 32) eventReporter];
  uint64_t v5 = +[ICNASnapshotReporter sharedReporter];
  id v6 = [v2 initWithAnalyticsController:v3 eventReporter:v4 snapshotReporter:v5];
  v26[0] = v6;
  id v7 = objc_alloc((Class)ICPaperSearchIndexerBackgroundTask);
  unint64_t v8 = +[ICNoteContext sharedContext];
  id v9 = [v7 initWithNoteContext:v8];
  v26[1] = v9;
  id v10 = objc_alloc((Class)ICCloudSyncBackgroundTask);
  uint64_t v11 = +[ICCloudContext sharedContext];
  id v12 = [v10 initWithCloudContext:v11];
  v26[2] = v12;
  id v13 = +[NSArray arrayWithObjects:v26 count:3];

  long long v23 = 0u;
  long long v24 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  id v14 = v13;
  id v15 = [v14 countByEnumeratingWithState:&v21 objects:v25 count:16];
  if (v15)
  {
    id v16 = v15;
    uint64_t v17 = *(void *)v22;
    do
    {
      id v18 = 0;
      do
      {
        if (*(void *)v22 != v17) {
          objc_enumerationMutation(v14);
        }
        uint64_t v19 = *(void *)(*((void *)&v21 + 1) + 8 * (void)v18);
        id v20 = +[ICBackgroundTaskScheduler sharedScheduler];
        [v20 registerTask:v19];

        id v18 = (char *)v18 + 1;
      }
      while (v16 != v18);
      id v16 = [v14 countByEnumeratingWithState:&v21 objects:v25 count:16];
    }
    while (v16);
  }
}

uint64_t sub_100017F4C(uint64_t a1)
{
  uint64_t v1 = a1 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue;
  swift_beginAccess();
  id v2 = *(void **)v1;
  dispatch_block_t block = *(dispatch_block_t *)(v1 + 8);
  uint64_t v4 = *(void **)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v19 = *(void **)v1;
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = *(void *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  uint64_t v7 = *(void *)(v1 + 56);
  uint64_t v20 = v6;
  uint64_t v9 = *(void *)(v1 + 64);
  char v10 = *(unsigned char *)(v1 + 72);
  uint64_t v11 = *(void *)(v1 + 80);
  char v24 = v10;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v2;
  *(void *)(v12 + 24) = block;
  *(void *)(v12 + 32) = v4;
  *(void *)(v12 + 40) = v3;
  *(void *)(v12 + 48) = v5;
  *(void *)(v12 + 56) = v6;
  *(void *)(v12 + 64) = v8;
  *(void *)(v12 + 72) = v7;
  *(void *)(v12 + 80) = v9;
  *(unsigned char *)(v12 + 88) = v24;
  *(void *)(v12 + 96) = v11;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_10003516C;
  *(void *)(v13 + 24) = v12;
  aBlock[4] = sub_100031D58;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100031D30;
  aBlock[3] = &unk_100635930;
  dispatch_block_t blocka = _Block_copy(aBlock);
  id v14 = v4;
  id v15 = v19;
  sub_10002E71C(v3);
  sub_10002E71C(v20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v16 = v15;
  id v17 = v14;
  sub_10002E71C(v3);
  sub_10002E71C(v20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v16, blocka);
  _Block_release(blocka);
  LOBYTE(v9) = swift_isEscapingClosureAtFileLocation();

  swift_release();
  swift_release();
  sub_10002E70C(v3);
  sub_10002E70C(v20);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v9) {
    __break(1u);
  }
  return result;
}

void sub_1000183F0(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) ic_existingObjectWithID:*(void *)(a1 + 40)];
  uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

id sub_100018550(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v57 = a2;
  id v64 = a1;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = sub_10002F214(&qword_1006A4848);
  uint64_t v62 = *(void *)(v4 - 8);
  uint64_t v63 = v4;
  ((void (*)(void))__chkstk_darwin)();
  uint64_t v61 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_10002F214(&qword_1006A47A0);
  uint64_t v6 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v59 = (uint64_t)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  char v58 = (char *)&v49 - v8;
  uint64_t v56 = sub_10002F214(&qword_1006A4850);
  uint64_t v54 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v53 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_10002F214(&qword_1006A47C8);
  uint64_t v50 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10002F214(&qword_1006A4820);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10002F214(&qword_1006A4858);
  uint64_t v52 = *(void *)(v16 - 8);
  uint64_t v17 = v52;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = &v3[OBJC_IVAR___ICCollaborationButtonsController__cloudObject];
  v68 = 0;
  long long v21 = v3;
  uint64_t v55 = sub_10002F214(&qword_1006A4768);
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v20, v19, v16);
  long long v22 = &v21[OBJC_IVAR___ICCollaborationButtonsController__accountSupportsDeviceToDeviceEncryption];
  LOBYTE(v68) = 0;
  Published.init(initialValue:)();
  long long v23 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v23(v22, v15, v12);
  char v24 = &v21[OBJC_IVAR___ICCollaborationButtonsController__accountHasKeychainEnabled];
  LOBYTE(v68) = 0;
  Published.init(initialValue:)();
  v23(v24, v15, v12);
  id v25 = &v21[OBJC_IVAR___ICCollaborationButtonsController__showsActivityStream];
  LOBYTE(v68) = 0;
  Published.init(initialValue:)();
  v23(v25, v15, v12);
  uint64_t v26 = &v21[OBJC_IVAR___ICCollaborationButtonsController__showsAttributionSidebar];
  LOBYTE(v68) = 0;
  Published.init(initialValue:)();
  v23(v26, v15, v12);
  uint64_t v27 = &v21[OBJC_IVAR___ICCollaborationButtonsController__showsCollaboratorCursors];
  LOBYTE(v68) = 0;
  Published.init(initialValue:)();
  uint64_t v28 = v15;
  os_log_type_t v29 = v57;
  v23(v27, v28, v12);
  uint64_t v30 = &v21[OBJC_IVAR___ICCollaborationButtonsController__activeParticipants];
  v68 = &_swiftEmptyArrayStorage;
  sub_10002F214(&qword_1006A0090);
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v30, v11, v51);
  uint64_t v31 = &v21[OBJC_IVAR___ICCollaborationButtonsController__participantDataSource];
  v68 = 0;
  sub_10002F214(&qword_1006A4790);
  char v32 = v53;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v31, v32, v56);
  *(void *)&v21[OBJC_IVAR___ICCollaborationButtonsController_activityStreamUpdater] = 0;
  *(void *)&v21[OBJC_IVAR___ICCollaborationButtonsController_activityDigestSummaryObservation] = 0;
  *(void *)&v21[OBJC_IVAR___ICCollaborationButtonsController_showsCollaboratorCursorsObservation] = 0;
  *(void *)&v21[OBJC_IVAR___ICCollaborationButtonsController_collaboratorDataSourceObservation] = 0;
  uint64_t v33 = &v21[OBJC_IVAR___ICCollaborationButtonsController__activityDigestSummary];
  uint64_t v34 = type metadata accessor for ICActivityStreamDigest.Summary();
  uint64_t v35 = (uint64_t)v58;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v58, 1, 1, v34);
  sub_1000331E4(v35, v59);
  long long v36 = v61;
  Published.init(initialValue:)();
  sub_10002B754(v35, &qword_1006A47A0);
  (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v33, v36, v63);
  *(void *)&v21[OBJC_IVAR___ICCollaborationButtonsController____lazy_storage___buttonItem] = 0;
  uint64_t v37 = &v21[OBJC_IVAR___ICCollaborationButtonsController_didPressManageShareButton];
  *(void *)uint64_t v37 = 0;
  *((void *)v37 + 1) = 0;
  swift_beginAccess();
  id v38 = *(void (**)(char *, uint64_t))(v52 + 8);
  id v39 = v64;
  id v40 = v64;
  v38(v20, v16);
  id v67 = v39;
  Published.init(initialValue:)();
  swift_endAccess();
  swift_unknownObjectUnownedInit();

  v66.receiver = v21;
  v66.super_class = ObjectType;
  id v41 = [super init];
  if (v39)
  {
    self;
    uint64_t v42 = swift_dynamicCastObjCClass();
    if (v42)
    {
      char v43 = (void *)v42;
      type metadata accessor for CollaborationParticipantDataSource();
      swift_allocObject();
      id v44 = v40;
      id v45 = v41;
      uint64_t v46 = sub_10000FCE8(v43);
      swift_getKeyPath();
      swift_getKeyPath();
      v68 = v46;
      id v47 = v45;
      static Published.subscript.setter();
      sub_1000131B8();
    }
  }

  return v41;
}

void sub_100018DB4(void *a1)
{
  uint64_t v2 = type metadata accessor for AttachmentID();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_10002F214((uint64_t *)&unk_1006A9010);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v11[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = &type metadata for AppIntentsFeature;
  unint64_t v14 = sub_100019038();
  v11[0] = "viewActions";
  v11[1] = 11;
  char v12 = 2;
  char v6 = isFeatureEnabled(_:)();
  sub_100018FE8((uint64_t)v11);
  if (v6)
  {
    if (a1)
    {
      type metadata accessor for AttachmentEntity();
      swift_getObjectType();
      id v7 = a1;
      ICAttachmentObject<>.entityIdentifier.getter();
      sub_1000191B0((unint64_t *)&qword_10069EF80, (void (*)(uint64_t))type metadata accessor for AttachmentEntity);
      EntityIdentifier.init<A>(for:identifier:)();
      uint64_t v8 = type metadata accessor for EntityIdentifier();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v5, 0, 1, v8);
      UIView.appEntityIdentifier.setter();
    }
    else
    {
      uint64_t v9 = type metadata accessor for EntityIdentifier();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v5, 1, 1, v9);
      UIView.appEntityIdentifier.setter();
    }
  }
}

uint64_t sub_100018FE8(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

unint64_t sub_100019038()
{
  unint64_t result = qword_10069C7A0;
  if (!qword_10069C7A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069C7A0);
  }
  return result;
}

uint64_t sub_10001908C()
{
  return sub_1000190D4(&qword_10069EEE8, (void (*)(uint64_t))type metadata accessor for AttachmentEntity);
}

uint64_t sub_1000190D4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for AttachmentEntity()
{
  uint64_t result = qword_10069EFE0;
  if (!qword_10069EFE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100019168(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000191B0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100019A90(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 152), 8);
  _Unwind_Resume(a1);
}

void sub_100019AC0(uint64_t a1, void *a2)
{
  id v19 = a2;
  if (objc_msgSend(*(id *)(a1 + 32), "ic_isViewVisible")) {
    [*(id *)(a1 + 32) updateBarButtonItemsAnimated:*(unsigned __int8 *)(a1 + 48)];
  }
  [*(id *)(a1 + 32) updateNavigationTitle];
  if (objc_msgSend(*(id *)(a1 + 32), "ic_isViewVisible")) {
    id v3 = [*(id *)(a1 + 32) isTrashFolder];
  }
  else {
    id v3 = 0;
  }
  uint64_t v4 = [*(id *)(a1 + 32) collectionView];
  [v4 setShouldShowRecentlyDeletedHeader:v3];

  [*(id *)(a1 + 32) updateFocusedNoteIfNeeded];
  uint64_t v5 = [*(id *)(a1 + 32) virtualSmartFolder];
  char v6 = [v5 type];
  id v7 = [v6 isEqual:ICVirtualSmartFolderItemIdentifierTypeSharedWithYou];
  uint64_t v8 = [*(id *)(a1 + 32) collectionView];
  [v8 setShouldShowCellParticipantsInfo:v7];

  objc_opt_class();
  uint64_t v9 = [*(id *)(a1 + 32) noteDataSource];
  uint64_t v10 = [v9 firstRelevantItemIdentifier];
  uint64_t v11 = ICDynamicCast();

  char v12 = [*(id *)(a1 + 32) noteDataSource];
  uint64_t v13 = [v12 emptyConfigurationForNoteWithObjectID:v11];

  id v14 = [v13 showFolderName];
  id v15 = [*(id *)(a1 + 32) collectionView];
  [v15 setShouldShowFolderName:v14];

  id v16 = [v13 showAccountName];
  uint64_t v17 = [*(id *)(a1 + 32) collectionView];
  [v17 setShouldShowAccountName:v16];

  uint64_t v18 = *(void *)(a1 + 40);
  if (v18) {
    (*(void (**)(uint64_t, id))(v18 + 16))(v18, v19);
  }
}

id sub_100019CA8(uint64_t a1, char a2)
{
  ObjectType = (objc_class *)swift_getObjectType();
  swift_unknownObjectWeakInit();
  *(void *)&v2[OBJC_IVAR___ICActivityStreamNavigationController_activityStreamViewController] = 0;
  *(void *)&v2[OBJC_IVAR___ICActivityStreamNavigationController_sheetController] = 0;
  *(void *)&v2[OBJC_IVAR___ICActivityStreamNavigationController_preferredCompactContentWidth] = 0x4081C00000000000;
  *(void *)&v2[OBJC_IVAR___ICActivityStreamNavigationController_additionalSafeAreaTopInset] = 0x4038000000000000;
  v2[OBJC_IVAR___ICActivityStreamNavigationController_isCapturingActivityStreamSummaryEvent] = 0;
  *(void *)&v2[OBJC_IVAR___ICActivityStreamNavigationController_object] = 0;
  *(void *)&v2[OBJC_IVAR___ICActivityStreamNavigationController_selection] = 0;
  uint64_t v5 = OBJC_IVAR___ICActivityStreamNavigationController_viewModeDurations;
  *(void *)&v2[v5] = sub_100033558((uint64_t)&_swiftEmptyArrayStorage);
  char v6 = &v2[OBJC_IVAR___ICActivityStreamNavigationController_timeOfLastViewModeChange];
  uint64_t v7 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *(void *)&v2[OBJC_IVAR___ICActivityStreamNavigationController____lazy_storage___unfilteredHeaderView] = 0;
  *(void *)&v2[OBJC_IVAR___ICActivityStreamNavigationController____lazy_storage___filteredHeaderView] = 0;
  *(void *)&v2[OBJC_IVAR___ICActivityStreamNavigationController____lazy_storage___dockedDetent] = 0;
  *(void *)&v2[OBJC_IVAR___ICActivityStreamNavigationController_halfHeightRatio] = 0x400599999999999ALL;
  *(void *)&v2[OBJC_IVAR___ICActivityStreamNavigationController____lazy_storage___halfHeightDetent] = 0;
  swift_unknownObjectWeakAssign();
  v2[OBJC_IVAR___ICActivityStreamNavigationController_hasInteractiveSizing] = a2;
  *(void *)&v2[OBJC_IVAR___ICActivityStreamNavigationController_indexOfCurrentDetent] = -1;
  v22.receiver = v2;
  v22.super_class = ObjectType;
  id v8 = [super initWithNibName:0 bundle:0];
  uint64_t v9 = self;
  id v10 = v8;
  if (objc_msgSend(v9, "ic_isVision")) {
    uint64_t v11 = -2;
  }
  else {
    uint64_t v11 = 7;
  }
  [v10 setModalPresentationStyle:v11];
  id v12 = [v10 popoverPresentationController];
  if (v12)
  {
    uint64_t v13 = v12;
    [v12 setDelegate:v10];
  }
  if ((objc_msgSend(v9, "ic_isVision") & 1) == 0)
  {
    id v14 = [objc_allocWithZone((Class)UINavigationBarAppearance) init];
    [v14 configureWithOpaqueBackground];
    id v15 = self;
    id v16 = v14;
    id v17 = [v15 clearColor];
    [v16 setShadowColor:v17];

    id v18 = [v10 navigationBar];
    [v18 setPrefersLargeTitles:0];

    id v19 = [v10 navigationBar];
    [v19 setStandardAppearance:v16];

    id v20 = [v10 navigationBar];
    [v20 setCompactAppearance:v16];
  }
  sub_100031418(0, (unint64_t *)&qword_10069C280);
  static UITraitCollection.traitsAffectingSizeAndColor.getter();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  UIViewController.registerForTraitChanges<A>(_:handler:)();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v10;
}

void sub_10001A6D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10001A6F4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10002F214(&qword_10069C288);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  id v8 = (char *)v33 - v7;
  __chkstk_darwin(v6);
  id v10 = (char *)v33 - v9;
  id v11 = sub_1000314B8();
  id v12 = [self ic_preferredFontForStyle:UIFontTextStyleTitle2 symbolicTraits:2];
  [v11 setFont:v12];

  uint64_t v13 = self;
  LODWORD(v12) = [v13 ic_isVision];
  unsigned __int8 v14 = [v13 ic_isVision];
  double v15 = 20.0;
  if (v12)
  {
    if ((v14 & 1) == 0)
    {
      if ((objc_msgSend(v1, "ic_hasCompactWidth") & 1) == 0
        || (double v15 = 22.0, (objc_msgSend(v1, "ic_hasCompactHeight") & 1) == 0))
      {
        double v15 = 30.0;
      }
    }
    id v16 = [self configurationWithPointSize:6 weight:1 scale:v15];
    id v17 = sub_100031454();
    UIButton.configuration.getter();
    uint64_t v18 = type metadata accessor for UIButton.Configuration();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v10, 1, v18))
    {
      sub_10015E4E0((uint64_t)v10, (uint64_t)v8);
      UIButton.configuration.setter();

      sub_10015E548((uint64_t)v10);
    }
    else
    {
      id v26 = [self secondaryLabelColor];
      UIButton.Configuration.baseForegroundColor.setter();
      UIButton.configuration.setter();
    }
  }
  else
  {
    if ((v14 & 1) == 0)
    {
      if (!objc_msgSend(v1, "ic_hasCompactWidth")
        || (double v15 = 22.0, (objc_msgSend(v1, "ic_hasCompactHeight") & 1) == 0))
      {
        double v15 = 30.0;
      }
    }
    id v19 = self;
    id v20 = [v19 configurationWithPointSize:4 weight:2 scale:v15];
    sub_10002F214(&qword_10069BA00);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_100524CE0;
    objc_super v22 = self;
    id v23 = v20;
    *(void *)(v21 + 32) = [v22 secondaryLabelColor];
    *(void *)(v21 + 40) = [v22 tertiarySystemFillColor];
    v33[1] = v21;
    specialized Array._endMutation()();
    sub_100031418(0, &qword_10069C290);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v25 = [v19 configurationWithPaletteColors:isa];

    id v16 = [v23 configurationByApplyingConfiguration:v25];
  }
  id v27 = v16;
  NSString v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v29 = [self systemImageNamed:v28 withConfiguration:v27];

  id v30 = sub_100031454();
  UIButton.configuration.getter();
  uint64_t v31 = type metadata accessor for UIButton.Configuration();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v5, 1, v31))
  {
    sub_10015E4E0((uint64_t)v5, (uint64_t)v8);
    UIButton.configuration.setter();

    sub_10015E548((uint64_t)v5);
  }
  else
  {
    id v32 = v29;
    UIButton.Configuration.image.setter();
    UIButton.configuration.setter();
  }
}

void sub_10001B000(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, id *location, id *a14)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(v15);
  objc_destroyWeak(location);
  objc_destroyWeak(a14);
  objc_destroyWeak((id *)(v16 - 112));
  _Unwind_Resume(a1);
}

id sub_10001B03C@<X0>(void *a1@<X8>)
{
  return sub_1002F9B98(*(void *)(v1 + 16), a1);
}

id sub_10001B058@<X0>(void *a1@<X8>)
{
  return sub_10001B070(a1);
}

id sub_10001B070@<X0>(void *a1@<X8>)
{
  uint64_t v4 = *(void *)(v1 + 16);
  long long v5 = *(_OWORD *)(v4 + 48);
  v8[2] = *(_OWORD *)(v4 + 32);
  v8[3] = v5;
  void v8[4] = *(_OWORD *)(v4 + 64);
  uint64_t v9 = *(void *)(v4 + 80);
  long long v6 = *(_OWORD *)(v4 + 16);
  v8[0] = *(_OWORD *)v4;
  v8[1] = v6;
  id result = sub_10002F098((uint64_t)v8);
  if (!v2) {
    *a1 = result;
  }
  return result;
}

void sub_10001BFA4(unsigned char *a1@<X8>)
{
  sub_10001BFC4(*(void **)(v1 + 16), *(char **)(v1 + 24), *(void **)(v1 + 32), a1);
}

void sub_10001BFC4(void *a1@<X0>, char *a2@<X1>, void *a3@<X2>, unsigned char *a4@<X8>)
{
  if (objc_msgSend(a1, "ic_isModernFolderType"))
  {
    uint64_t v8 = sub_10002CE88(a1);
    if (v8)
    {
      uint64_t v9 = (void *)v8;
      self;
      id v10 = (void *)swift_dynamicCastObjCClass();
      if (v10)
      {
        id v11 = v10;
        if ([v10 isSmartFolder])
        {
          id v12 = [v11 smartFolderQueryObjC];
          if (v12)
          {
            uint64_t v13 = v12;
            unsigned __int8 v14 = *(void **)&a2[OBJC_IVAR___ICFolderListSelectionValidator_modernContext];
            id v15 = objc_allocWithZone((Class)type metadata accessor for ICQueryResultsController());
            id v16 = v14;
            id v17 = v13;
            uint64_t v18 = (void *)ICQueryResultsController.init(managedObjectContext:query:)();
            uint64_t v19 = ICQueryResultsController.performFetch()();
            id v20 = [a3 objectID];
            LOBYTE(a2) = sub_100428334(v20, v19);

            swift_bridgeObjectRelease();
            goto LABEL_18;
          }
        }
        if ([v11 isTrashFolder])
        {
          id v21 = [a3 folder];
          if (v21)
          {
LABEL_27:
            id v29 = v21;
            a2 = (char *)[v21 objectID];

            if (a2)
            {
              sub_100031418(0, (unint64_t *)&qword_10069E810);
              id v30 = a1;
              uint64_t v31 = a2;
              LOBYTE(a2) = static NSObject.== infix(_:_:)();
            }
            goto LABEL_30;
          }
        }
        else
        {
          if (a2[OBJC_IVAR___ICFolderListSelectionValidator_hidesSystemPaperNotesInCustomFolders] == 1
            && [a3 isSystemPaper]
            || a2[OBJC_IVAR___ICFolderListSelectionValidator_hidesMathNotesInCustomFolders] == 1
            && [a3 isMathNote]
            || a2[OBJC_IVAR___ICFolderListSelectionValidator_hidesCallNotesInCustomFolders] == 1
            && [a3 isCallNote])
          {

            LOBYTE(a2) = 0;
            goto LABEL_18;
          }
          id v21 = [a3 folder];
          if (v21) {
            goto LABEL_27;
          }
        }
        LOBYTE(a2) = 0;
LABEL_30:

        goto LABEL_18;
      }
    }
  }
  if (!objc_msgSend(a1, "ic_isModernAccountType")) {
    goto LABEL_17;
  }
  id v22 = [a3 account];
  if (!v22) {
    goto LABEL_17;
  }
  id v23 = v22;
  a2 = (char *)[v22 objectID];

  if (!a2) {
    goto LABEL_18;
  }
  sub_100031418(0, (unint64_t *)&qword_10069E810);
  id v24 = a1;
  id v25 = a2;
  char v26 = static NSObject.== infix(_:_:)();

  if ((v26 & 1) == 0)
  {
LABEL_17:
    LOBYTE(a2) = 0;
    goto LABEL_18;
  }
  id v27 = (char *)[a3 folder];
  a2 = v27;
  if (v27)
  {
    unsigned __int8 v28 = [v27 isTrashFolder];

    LOBYTE(a2) = v28 ^ 1;
  }
LABEL_18:
  *a4 = a2 & 1;
}

void sub_10001CE54(void *a1@<X8>)
{
  sub_10001CE8C(*(void *)(v1 + 16), &OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_focusedNoteObjectID, a1);
}

void sub_10001CE8C(uint64_t a1@<X0>, void *a2@<X2>, void *a3@<X8>)
{
  uint64_t v3 = a1 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue;
  swift_beginAccess();
  id v10 = *(void **)v3;
  uint64_t v11 = *(void *)(v3 + 24);
  uint64_t v12 = *(void *)(v3 + 40);
  id v4 = *(id *)(v3 + 16);
  id v5 = v10;
  sub_10002E71C(v11);
  sub_10002E71C(v12);
  type metadata accessor for ICSelectionStateModel(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  OS_dispatch_queue.sync<A>(execute:)();

  sub_10002E70C(v11);
  sub_10002E70C(v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v6 = *(void **)&v13[*a2];
  *a3 = v6;
  id v7 = v6;
}

void sub_10001CFEC(uint64_t *a1@<X8>)
{
  sub_10001D024(*(void *)(v1 + 16), a1);
}

void sub_10001D024(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2 = a1 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue;
  swift_beginAccess();
  uint64_t v8 = *(void **)v2;
  uint64_t v9 = *(void *)(v2 + 24);
  uint64_t v10 = *(void *)(v2 + 40);
  id v3 = *(id *)(v2 + 16);
  id v4 = v8;
  sub_10002E71C(v9);
  sub_10002E71C(v10);
  type metadata accessor for ICSelectionStateModel(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  OS_dispatch_queue.sync<A>(execute:)();

  sub_10002E70C(v9);
  sub_10002E70C(v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v5 = sub_10002EA78();

  if (v5)
  {
    self;
    uint64_t v6 = swift_dynamicCastObjCClass();
    if (v6)
    {
      *a2 = v6;
    }
    else
    {
      swift_unknownObjectRelease();
      *a2 = 0;
    }
  }
  else
  {
    *a2 = 0;
  }
}

void sub_10001D1B8(void *a1@<X8>)
{
  sub_10001D1E4(*(void **)(v1 + 16), *(void **)(v1 + 24), (SEL *)&selRef_markedForDeletion, a1);
}

void sub_10001D1E4(void *a1@<X0>, void *a2@<X1>, SEL *a3@<X3>, void *a4@<X8>)
{
  id v7 = [a1 ic_existingObjectWithID:a2];
  if (!v7
    || ((uint64_t v8 = v7, self, (v9 = (void *)swift_dynamicCastObjCClass()) == 0)
      ? (unsigned __int8 v10 = 0)
      : (unsigned __int8 v10 = [v9 *a3]),
        (v11 = [v8 isDeleted], v8, uint64_t v12 = 0, (v10 & 1) == 0)
     && (v11 & 1) == 0))
  {
    id v13 = a2;
    uint64_t v12 = a2;
  }
  *a4 = v12;
}

void sub_10001D2A4()
{
  type metadata accessor for Logger();
  if (v0 <= 0x3F)
  {
    sub_100034584();
    if (v1 <= 0x3F)
    {
      sub_10001D424(319, &qword_1006A3FC0, &qword_10069B478);
      if (v2 <= 0x3F)
      {
        sub_10001D424(319, &qword_1006A3FC8, &qword_10069B480);
        if (v3 <= 0x3F) {
          swift_updateClassMetadata2();
        }
      }
    }
  }
}

void sub_10001D424(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    sub_10001DFF4(a3);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

char *sub_10001D474(void *a1)
{
  id v52 = a1;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v55 = *(void *)(v2 - 8);
  uint64_t v56 = v2;
  __chkstk_darwin(v2);
  uint64_t v54 = (char *)v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v4 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v6 = (char *)v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v7);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v8 - 8);
  swift_unknownObjectWeakInit();
  uint64_t v50 = OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateAccessQueue;
  v49[1] = sub_100031418(0, (unint64_t *)&qword_10069D2D0);
  uint64_t v9 = v1;
  static DispatchQoS.unspecified.getter();
  char v58 = &_swiftEmptyArrayStorage;
  sub_10001DD30((unint64_t *)&qword_10069B280, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10002F214((uint64_t *)&unk_10069E6B0);
  sub_10001DFB0((unint64_t *)&qword_10069B290, (uint64_t *)&unk_10069E6B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v51);
  *(void *)&v1[v50] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  unsigned __int8 v10 = &v9[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue];
  sub_10000A984(0, 0, 0, 0, (uint64_t)&v58);
  uint64_t v11 = v62;
  uint64_t v12 = v63;
  char v13 = v64;
  uint64_t v14 = v65;
  long long v15 = v59;
  long long v16 = v60;
  long long v17 = v61;
  *(void *)unsigned __int8 v10 = v58;
  *(_OWORD *)(v10 + 8) = v15;
  *(_OWORD *)(v10 + 24) = v16;
  *(_OWORD *)(v10 + 40) = v17;
  *((void *)v10 + 7) = v11;
  *((void *)v10 + 8) = v12;
  v10[72] = v13;
  *((void *)v10 + 10) = v14;
  *(void *)&v9[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_observers] = &_swiftEmptyArrayStorage;
  static Logger.ui.getter();
  uint64_t v18 = &v9[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_utilityConfiguration];
  *(_OWORD *)uint64_t v18 = 0u;
  *((_OWORD *)v18 + 1) = 0u;
  *((_OWORD *)v18 + 2) = 0u;
  *((_OWORD *)v18 + 3) = 0u;
  *((_OWORD *)v18 + 4) = 0u;
  id v19 = v52;
  *(void *)&v9[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_persistenceConfiguration] = v52;
  id v20 = v19;

  v57.receiver = v9;
  v57.super_class = ObjectType;
  [super init];
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v21;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v21;
  id v24 = (char *)v21;
  id v52 = [v20 modernBackgroundContext];
  id v25 = [v20 legacyBackgroundContext];
  id v26 = [v20 makeModernBackgroundContext];
  if (v26)
  {
    id v27 = v26;
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = v27;
    id v29 = sub_10002B9E8;
  }
  else
  {
    id v29 = 0;
    uint64_t v28 = 0;
  }
  ObjectType = (objc_class *)v20;
  id v30 = (uint64_t (*)())[v20 makeLegacyBackgroundContext];
  uint64_t v31 = v54;
  if (v30)
  {
    uint64_t v32 = swift_allocObject();
    *(void *)(v32 + 16) = v30;
    id v30 = sub_10002B9E8;
  }
  else
  {
    uint64_t v32 = 0;
  }
  uint64_t v33 = (uint64_t *)&v24[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_utilityConfiguration];
  swift_beginAccess();
  uint64_t v34 = *v33;
  uint64_t v35 = v33[1];
  uint64_t v36 = v33[2];
  uint64_t v37 = v33[3];
  id v38 = (void *)v33[4];
  id v39 = (void *)v33[5];
  uint64_t v40 = v33[6];
  uint64_t v41 = v33[7];
  uint64_t v42 = v33[8];
  *uint64_t v33 = (uint64_t)sub_10002B6C4;
  v33[1] = v22;
  void v33[2] = (uint64_t)sub_10002DA24;
  v33[3] = v23;
  v33[4] = (uint64_t)v52;
  v33[5] = (uint64_t)v25;
  v33[6] = (uint64_t)v29;
  v33[7] = v28;
  v33[8] = (uint64_t)v30;
  v33[9] = v32;
  sub_10002977C(v34, v35, v36, v37, v38, v39, v40, v41, v42);
  id v52 = self;
  id v43 = [v52 defaultCenter];
  if (qword_10069AF40 != -1) {
    swift_once();
  }
  NSNotificationCenter.publisher(for:object:)();

  swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v44 = sub_10001DD30((unint64_t *)&qword_1006A52C0, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher);
  uint64_t v45 = v56;
  uint64_t v51 = v44;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  uint64_t v46 = *(void (**)(char *, uint64_t))(v55 + 8);
  v46(v31, v45);
  swift_beginAccess();
  sub_10002F214(&qword_1006A2B90);
  sub_10001DFB0(&qword_1006A2B98, &qword_1006A2B90);
  AnyCancellable.store<A>(in:)();
  swift_endAccess();
  swift_release();
  id v47 = [v52 defaultCenter];
  if (qword_10069AF48 != -1) {
    swift_once();
  }
  NSNotificationCenter.publisher(for:object:)();

  swift_allocObject();
  swift_unknownObjectWeakInit();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  v46(v31, v45);
  swift_beginAccess();
  AnyCancellable.store<A>(in:)();
  swift_endAccess();
  swift_release();

  return v24;
}

uint64_t sub_10001DCE8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10001DD30(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_10001DD78()
{
  sub_10001DF60(319, &qword_1006A4760, &qword_1006A4768);
  if (v0 <= 0x3F)
  {
    sub_100033634();
    if (v1 <= 0x3F)
    {
      sub_10001DF60(319, (unint64_t *)&qword_1006A4778, &qword_1006A0090);
      if (v2 <= 0x3F)
      {
        sub_10001DF60(319, &qword_1006A4788, &qword_1006A4790);
        if (v3 <= 0x3F)
        {
          sub_10001DF60(319, &qword_1006A4798, &qword_1006A47A0);
          if (v4 <= 0x3F) {
            swift_updateClassMetadata2();
          }
        }
      }
    }
  }
}

void sub_10001DF60(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    sub_10001DFF4(a3);
    unint64_t v4 = type metadata accessor for Published();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_10001DFB0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001DFF4(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10001DFF4(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_10001EC00()
{
  swift_allocObject();
  swift_unknownObjectWeakInit();
  unint64_t v0 = (objc_class *)type metadata accessor for UIAppIntentInteraction();
  id v1 = objc_allocWithZone(v0);
  sub_100034650();
  unint64_t v2 = (void *)UIAppIntentInteraction.init<A>(intent:perform:)();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v3 = objc_allocWithZone(v0);
  sub_100033AC8();
  id v51 = v2;
  unint64_t v4 = (void *)UIAppIntentInteraction.init<A>(intent:perform:)();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v5 = objc_allocWithZone(v0);
  sub_100035204();
  id v50 = v4;
  uint64_t v6 = (void *)UIAppIntentInteraction.init<A>(intent:perform:)();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v7 = objc_allocWithZone(v0);
  sub_100035958();
  id v49 = v6;
  uint64_t v8 = (void *)UIAppIntentInteraction.init<A>(intent:perform:)();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v9 = objc_allocWithZone(v0);
  sub_100036010();
  id v48 = v8;
  unsigned __int8 v10 = (void *)UIAppIntentInteraction.init<A>(intent:perform:)();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v11 = objc_allocWithZone(v0);
  sub_100035F0C();
  id v61 = v10;
  uint64_t v12 = (void *)UIAppIntentInteraction.init<A>(intent:perform:)();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v13 = objc_allocWithZone(v0);
  sub_10003408C();
  id v60 = v12;
  uint64_t v14 = (void *)UIAppIntentInteraction.init<A>(intent:perform:)();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v15 = objc_allocWithZone(v0);
  sub_100034BB8();
  id v59 = v14;
  long long v16 = (void *)UIAppIntentInteraction.init<A>(intent:perform:)();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v17 = objc_allocWithZone(v0);
  sub_100034858();
  id v57 = v16;
  uint64_t v18 = (void *)UIAppIntentInteraction.init<A>(intent:perform:)();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v19 = objc_allocWithZone(v0);
  sub_1000343BC();
  id v58 = v18;
  id v20 = (void *)UIAppIntentInteraction.init<A>(intent:perform:)();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v21 = objc_allocWithZone(v0);
  sub_100034CBC();
  id v56 = v20;
  uint64_t v22 = (void *)UIAppIntentInteraction.init<A>(intent:perform:)();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v23 = objc_allocWithZone(v0);
  sub_100035854();
  id v55 = v22;
  id v24 = (void *)UIAppIntentInteraction.init<A>(intent:perform:)();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v25 = objc_allocWithZone(v0);
  sub_100035750();
  id v54 = v24;
  id v26 = (void *)UIAppIntentInteraction.init<A>(intent:perform:)();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v27 = objc_allocWithZone(v0);
  sub_100035A5C();
  id v53 = v26;
  uint64_t v28 = (void *)UIAppIntentInteraction.init<A>(intent:perform:)();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v29 = objc_allocWithZone(v0);
  sub_100034190();
  id v52 = v28;
  id v30 = (void *)UIAppIntentInteraction.init<A>(intent:perform:)();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v31 = objc_allocWithZone(v0);
  sub_100033F88();
  id v47 = v30;
  uint64_t v32 = (void *)UIAppIntentInteraction.init<A>(intent:perform:)();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v33 = objc_allocWithZone(v0);
  sub_100034AB4();
  id v46 = v32;
  uint64_t v34 = (void *)UIAppIntentInteraction.init<A>(intent:perform:)();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v35 = objc_allocWithZone(v0);
  sub_100035E08();
  id v45 = v34;
  uint64_t v36 = (void *)UIAppIntentInteraction.init<A>(intent:perform:)();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v37 = objc_allocWithZone(v0);
  sub_100034754();
  id v38 = v36;
  id v39 = (void *)UIAppIntentInteraction.init<A>(intent:perform:)();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v40 = objc_allocWithZone(v0);
  sub_10003564C();
  id v41 = v39;
  uint64_t v42 = UIAppIntentInteraction.init<A>(intent:perform:)();
  sub_10002F214(&qword_10069BA00);
  uint64_t v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = xmmword_10052A810;
  *(void *)(v43 + 32) = v51;
  *(void *)(v43 + 40) = v50;
  *(void *)(v43 + 48) = v49;
  *(void *)(v43 + 56) = v48;
  *(void *)(v43 + 64) = v61;
  *(void *)(v43 + 72) = v60;
  *(void *)(v43 + 80) = v59;
  *(void *)(v43 + 88) = v57;
  *(void *)(v43 + 96) = v58;
  *(void *)(v43 + 104) = v56;
  *(void *)(v43 + 112) = v55;
  *(void *)(v43 + 120) = v54;
  *(void *)(v43 + 128) = v53;
  *(void *)(v43 + 136) = v52;
  *(void *)(v43 + 144) = v47;
  *(void *)(v43 + 152) = v46;
  *(void *)(v43 + 160) = v45;
  *(void *)(v43 + 168) = v38;
  *(void *)(v43 + 176) = v41;
  *(void *)(v43 + 184) = v42;
  uint64_t v62 = v43;
  specialized Array._endMutation()();

  return v62;
}

void sub_10001F614()
{
  id v1 = v0;
  v73.receiver = v0;
  v73.super_class = (Class)swift_getObjectType();
  [super viewDidLoad];
  id v2 = [v0 view];
  if (!v2)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  id v3 = v2;
  id v4 = [self ICBackgroundColor];
  [v3 setBackgroundColor:v4];

  if (objc_msgSend(self, "ic_isVision")) {
    [v1 setAdditionalSafeAreaInsets:24.0, 0.0, 0.0, 0.0];
  }
  id v5 = [v1 view];
  if (!v5) {
    goto LABEL_16;
  }
  uint64_t v6 = v5;
  id v7 = sub_10001FEB4();
  [v6 addSubview:v7];

  sub_10002F214(&qword_10069BA00);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_100527150;
  id v9 = sub_10001FEB4();
  id v10 = [v9 topAnchor];

  id v11 = [v1 view];
  if (!v11)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v12 = v11;
  id v13 = [v11 safeAreaLayoutGuide];

  id v14 = [v13 topAnchor];
  id v15 = [v10 constraintEqualToAnchor:v14];

  *(void *)(v8 + 32) = v15;
  long long v16 = sub_10001FEB4();
  id v17 = [v16 leadingAnchor];

  id v18 = [v1 view];
  if (!v18)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  id v19 = v18;
  id v20 = [v18 safeAreaLayoutGuide];

  id v21 = [v20 leadingAnchor];
  id v22 = [v17 constraintEqualToAnchor:v21];

  *(void *)(v8 + 40) = v22;
  id v23 = sub_10001FEB4();
  id v24 = [v23 trailingAnchor];

  id v25 = [v1 view];
  if (!v25)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  id v26 = v25;
  id v27 = self;
  id v28 = [v26 safeAreaLayoutGuide];

  id v29 = [v28 trailingAnchor];
  id v30 = [v24 constraintEqualToAnchor:v29];

  *(void *)(v8 + 48) = v30;
  specialized Array._endMutation()();
  sub_100031418(0, (unint64_t *)&qword_1006A5260);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v27 activateConstraints:isa];

  if (*((unsigned char *)v1 + OBJC_IVAR___ICActivityStreamNavigationController_hasInteractiveSizing) != 1)
  {
LABEL_14:
    id v64 = sub_10001FFAC();
    id v65 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v1 action:"handleTap:"];
    [v64 addGestureRecognizer:v65];

    objc_super v66 = sub_10001FEB4();
    id v67 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v1 action:"handleTap:"];
    [v66 addGestureRecognizer:v67];

    v68 = self;
    id v69 = [v68 defaultCenter];
    [v69 addObserver:v1 selector:"willEnterForeground" name:UIApplicationWillEnterForegroundNotification object:0];

    id v70 = [v68 defaultCenter];
    [v70 addObserver:v1 selector:"analyticsSessionWillEnd" name:ICNASessionWillEndNotification object:0];

    id v71 = sub_10001FFAC();
    [v71 layoutIfNeeded];

    v72 = sub_10001FEB4();
    [v72 layoutIfNeeded];

    return;
  }
  id v32 = [v1 view];
  if (!v32) {
    goto LABEL_20;
  }
  id v33 = v32;
  id v34 = sub_10001FFAC();
  [v33 addSubview:v34];

  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_1005352B0;
  id v36 = sub_10001FFAC();
  id v37 = [v36 topAnchor];

  id v38 = [v1 view];
  if (!v38)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  id v39 = v38;
  id v40 = [v38 safeAreaLayoutGuide];

  id v41 = [v40 topAnchor];
  id v42 = [v37 constraintEqualToAnchor:v41];

  *(void *)(v35 + 32) = v42;
  id v43 = sub_10001FFAC();
  id v44 = [v43 leadingAnchor];

  id v45 = [v1 view];
  if (!v45)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  id v46 = v45;
  id v47 = [v45 safeAreaLayoutGuide];

  id v48 = [v47 leadingAnchor];
  id v49 = [v44 constraintEqualToAnchor:v48];

  *(void *)(v35 + 40) = v49;
  id v50 = sub_10001FFAC();
  id v51 = [v50 trailingAnchor];

  id v52 = [v1 view];
  if (v52)
  {
    id v53 = v52;
    id v54 = [v52 safeAreaLayoutGuide];

    id v55 = [v54 trailingAnchor];
    id v56 = [v51 constraintEqualToAnchor:v55];

    *(void *)(v35 + 48) = v56;
    id v57 = sub_10001FFAC();
    id v58 = [v57 heightAnchor];

    id v59 = [v58 constraintGreaterThanOrEqualToConstant:64.0];
    *(void *)(v35 + 56) = v59;
    id v60 = sub_10001FEB4();
    id v61 = [v60 heightAnchor];

    id v62 = [v61 constraintGreaterThanOrEqualToConstant:56.0];
    *(void *)(v35 + 64) = v62;
    specialized Array._endMutation()();
    Class v63 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v27 activateConstraints:v63];

    goto LABEL_14;
  }
LABEL_23:
  __break(1u);
}

char *sub_10001FEB4()
{
  uint64_t v1 = OBJC_IVAR___ICActivityStreamNavigationController____lazy_storage___unfilteredHeaderView;
  id v2 = *(void **)(v0 + OBJC_IVAR___ICActivityStreamNavigationController____lazy_storage___unfilteredHeaderView);
  if (v2)
  {
    id v3 = *(char **)(v0 + OBJC_IVAR___ICActivityStreamNavigationController____lazy_storage___unfilteredHeaderView);
  }
  else
  {
    uint64_t v4 = v0;
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    char v6 = *(unsigned char *)(v4 + OBJC_IVAR___ICActivityStreamNavigationController_hasInteractiveSizing);
    id v7 = objc_allocWithZone((Class)type metadata accessor for ActivityStreamHeaderView());
    uint64_t v8 = sub_100030ACC(Strong, v6);
    [v8 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v9 = self;
    id v3 = v8;
    id v10 = [v9 ICBackgroundColor];
    [v3 setBackgroundColor:v10];

    id v11 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v3;

    id v2 = 0;
  }
  id v12 = v2;
  return v3;
}

id sub_10001FFAC()
{
  uint64_t v1 = OBJC_IVAR___ICActivityStreamNavigationController____lazy_storage___filteredHeaderView;
  id v2 = *(void **)(v0 + OBJC_IVAR___ICActivityStreamNavigationController____lazy_storage___filteredHeaderView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR___ICActivityStreamNavigationController____lazy_storage___filteredHeaderView);
  }
  else
  {
    uint64_t v4 = v0;
    swift_unknownObjectWeakLoadStrong();
    id v5 = objc_allocWithZone((Class)type metadata accessor for ActivityStreamDockView());
    char v6 = (void *)ActivityStreamDockView.init(coordinator:isDisplayedInCard:)();
    [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v7 = self;
    id v8 = v6;
    id v9 = [v7 ICBackgroundColor];
    [v8 setBackgroundColor:v9];

    [v8 setAlpha:0.0];
    id v10 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v8;
    id v3 = v8;

    id v2 = 0;
  }
  id v11 = v2;
  return v3;
}

void sub_1000200B8(void *a1@<X8>)
{
  sub_1000200D4(*(void *)(v1 + 16), a1);
}

void sub_1000200D4(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = a1 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue;
  swift_beginAccess();
  id v3 = *(void **)v2;
  uint64_t v8 = *(void *)(v2 + 24);
  uint64_t v9 = *(void *)(v2 + 40);
  id v4 = *(id *)(v2 + 16);
  id v5 = v3;
  sub_10002E71C(v8);
  sub_10002E71C(v9);
  type metadata accessor for ICSelectionStateModel(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  OS_dispatch_queue.sync<A>(execute:)();

  sub_10002E70C(v8);
  sub_10002E70C(v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v6 = sub_10002E7D4();

  if (v6)
  {
    [v6 copy];

    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    sub_100031418(0, &qword_1006A2AF0);
    if ((swift_dynamicCast() & 1) == 0) {
      *a2 = 0;
    }
  }
  else
  {
    *a2 = 0;
  }
}

int main(int argc, const char **argv, const char **envp)
{
  id v6 = objc_opt_new();
  id v7 = +[ICUIApplicationShim sharedInstance];
  [v7 setDelegate:v6];

  +[NSTextAttachment registerTextAttachmentClass:objc_opt_class() forFileType:PKAppleDrawingTypeIdentifier];
  +[NSTextAttachment registerTextAttachmentClass:objc_opt_class() forFileType:PKApplePaperTypeIdentifier];
  uint64_t v8 = +[NSUserDefaults standardUserDefaults];
  if ([v8 BOOLForKey:kICInternalSettingsShowICloudIMAPAccountDefaultKey])
  {

LABEL_4:
    +[ICNoteContext setLegacyNotesDisabled:0];
    goto LABEL_5;
  }
  uint64_t v9 = +[NSUserDefaults standardUserDefaults];
  unsigned int v10 = [v9 BOOLForKey:kICInternalSettingsShowLocalHTMLNotesDefaultKey];

  if (v10) {
    goto LABEL_4;
  }
LABEL_5:
  id v11 = dispatch_get_global_queue(2, 0);
  dispatch_async(v11, &stru_1006299A8);

  id v12 = +[ICModelAvailabilityManager sharedInstance];
  [v12 determineASRAvailability:&stru_1006299E8];

  id v13 = (objc_class *)objc_opt_class();
  NSStringFromClass(v13);
  id v14 = (NSString *)objc_claimAutoreleasedReturnValue();
  int v15 = UIApplicationMain(argc, (char **)argv, 0, v14);

  return v15;
}

void sub_1000211FC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

void sub_10002223C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *location, id *a12, id *a13, id *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id *a23,id *a24,uint64_t a25,id *a26,uint64_t a27,id *a28,id *a29,id *a30,id *a31,id *a32,id *a33,id *a34,id *a35,id *a36,id *a37,id *a38)
{
  objc_destroyWeak(v41);
  objc_destroyWeak(v40);
  objc_destroyWeak(v39);
  objc_destroyWeak(v38);
  objc_destroyWeak(location);
  objc_destroyWeak(a12);
  objc_destroyWeak(a13);
  objc_destroyWeak(a14);
  objc_destroyWeak(a30);
  objc_destroyWeak(a23);
  objc_destroyWeak(a24);
  objc_destroyWeak(a26);
  objc_destroyWeak(a28);
  objc_destroyWeak(a29);
  objc_destroyWeak(a31);
  objc_destroyWeak(a32);
  objc_destroyWeak(a33);
  objc_destroyWeak(a34);
  objc_destroyWeak(a35);
  objc_destroyWeak(a36);
  objc_destroyWeak(a37);
  objc_destroyWeak((id *)(v42 - 176));
  objc_destroyWeak(a38);
  objc_destroyWeak((id *)(v42 - 120));
  objc_destroyWeak((id *)(v42 - 112));
  _Unwind_Resume(a1);
}

void sub_100022C98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id *location,id *a21,id *a22,id *a23,id *a24,id *a25,id *a26)
{
  objc_destroyWeak(v27);
  objc_destroyWeak(v26);
  objc_destroyWeak(location);
  objc_destroyWeak(a21);
  objc_destroyWeak(a22);
  objc_destroyWeak(a23);
  objc_destroyWeak(a24);
  objc_destroyWeak(a25);
  objc_destroyWeak(a26);
  objc_destroyWeak((id *)(v28 - 120));
  objc_destroyWeak((id *)(v28 - 112));
  _Unwind_Resume(a1);
}

void sub_1000231C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100023B3C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 window];
  id v5 = *(void **)(a1 + 32);

  if (v4 == v5)
  {
    objc_opt_class();
    id v7 = [v3 activeEditorController];
    uint64_t v8 = ICDynamicCast();

    id v6 = [v8 isShowingAudioInspector];
  }
  else
  {
    id v6 = 0;
  }

  return v6;
}

void sub_100025138(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,id location)
{
  objc_destroyWeak(v30);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_100025380(void *a1)
{
  return sub_1002EC77C(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_100025388(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_1000253B4(void *a1)
{
  return sub_1000253BC(a1, *(void *)(v1 + 16));
}

uint64_t sub_1000253BC(void *a1, uint64_t a2)
{
  type metadata accessor for ICSelectionStateUtilities();
  id v4 = (uint64_t (**)())(a2 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_utilityConfiguration);
  uint64_t result = swift_beginAccess();
  if (a1)
  {
    id v43 = a1;
    id v7 = *v4;
    uint64_t v6 = (uint64_t)v4[1];
    uint64_t v9 = v4[2];
    uint64_t v8 = (uint64_t)v4[3];
    id v11 = v4[4];
    unsigned int v10 = v4[5];
    uint64_t v12 = (uint64_t)v4[6];
    uint64_t v13 = (uint64_t)v4[7];
    uint64_t v15 = (uint64_t)v4[8];
    id v14 = v4[9];
    long long v16 = variable initialization expression of AsyncChannel.Iterator.active;
    id v17 = variable initialization expression of AsyncChannel.Iterator.active;
    if (*v4)
    {
      id v18 = v4[5];
      id v19 = v10;
      swift_retain();
      swift_retain();
      id v20 = v11;
      sub_10002E71C(v12);
      sub_10002E71C(v15);
      unsigned int v10 = v18;
      uint64_t v21 = v15;
      id v22 = v11;
      id v23 = v14;
      uint64_t v24 = v12;
      uint64_t v25 = v13;
      uint64_t v26 = v8;
      id v27 = v22;
      id v17 = v7;
      uint64_t v28 = (uint64_t)v7;
      id v7 = (uint64_t (*)())v6;
      long long v16 = v9;
      uint64_t v29 = (uint64_t)v9;
      uint64_t v30 = v26;
    }
    else
    {
      uint64_t v21 = (uint64_t)v4[8];
      uint64_t v15 = 0;
      id v22 = v4[4];
      id v23 = 0;
      uint64_t v24 = (uint64_t)v4[6];
      uint64_t v12 = 0;
      uint64_t v25 = (uint64_t)v4[7];
      uint64_t v13 = 0;
      id v18 = 0;
      uint64_t v26 = v8;
      id v27 = 0;
      uint64_t v28 = 0;
      uint64_t v29 = (uint64_t)v9;
      uint64_t v30 = 0;
    }
    uint64_t v35 = v21;
    v44[0] = v17;
    v44[1] = v7;
    v44[2] = v16;
    v44[3] = v30;
    v44[4] = v27;
    v44[5] = v18;
    v44[6] = v12;
    v44[7] = v13;
    v44[8] = v15;
    v44[9] = v23;
    uint64_t v36 = v29;
    uint64_t v37 = v28;
    uint64_t v38 = v26;
    uint64_t v39 = v25;
    id v41 = v22;
    uint64_t v42 = v10;
    uint64_t v40 = v24;
    sub_1000296EC(v28, v6, v29, v26, v22, v10, v24, v25, v21);
    uint64_t v34 = v6;
    id v31 = v18;
    id v32 = v43;
    swift_retain();
    swift_retain();
    id v33 = v27;
    sub_10002E71C(v12);
    sub_10002E71C(v15);
    sub_100025674((uint64_t)v32, 0, (uint64_t)v44);

    swift_release();
    swift_release();
    sub_10002E70C(v12);
    sub_10002E70C(v15);

    swift_release();
    swift_release();
    sub_10002E70C(v12);
    sub_10002E70C(v15);

    return sub_10002977C(v37, v34, v36, v38, v41, v42, v40, v39, v35);
  }
  return result;
}

uint64_t type metadata accessor for ICSelectionStateUtilities()
{
  return self;
}

void sub_100025674(uint64_t a1, void *a2, uint64_t a3)
{
  sub_10002F1B0(a3, (uint64_t)v137, (uint64_t *)&unk_10069E7F0);
  id v112 = v138;
  id v111 = v139;
  v119 = v140;
  uint64_t v114 = v141;
  uint64_t v6 = sub_10002F214(&qword_10069B310);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v110 = (uint64_t)&v108 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  v116 = (char *)&v108 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v108 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v108 - v14;
  uint64_t v16 = type metadata accessor for URL();
  uint64_t v124 = *(void *)(v16 - 8);
  uint64_t v17 = __chkstk_darwin(v16);
  v121 = (char *)&v108 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  v128 = (char *)&v108 - v20;
  __chkstk_darwin(v19);
  v135 = (char *)&v108 - v21;
  uint64_t v22 = sub_10002F214(&qword_10069E800);
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  uint64_t v25 = (char *)&v108 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  id v27 = (char *)&v108 - v26;
  sub_1000264E4(a1, a3);
  uint64_t v123 = a3;
  sub_100029B6C(a1, a2, a3);
  uint64_t v28 = a1;
  uint64_t v29 = *(void *)(a1
                  + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentFirstVisibleObjectIDURLForContainerObjectIDURL);
  if (v29 && *(void *)(v29 + 16))
  {
    uint64_t v30 = *(void *)(a1
                    + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentFirstVisibleObjectIDURLForContainerObjectIDURL);
    swift_bridgeObjectRetain();
    unint64_t v31 = sub_1001684F8((uint64_t)&_swiftEmptyArrayStorage);
    uint64_t v109 = a1;
    id v32 = (unint64_t *)(a1
                             + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentFirstVisibleObjectIDForContainerObjectID);
    swift_beginAccess();
    v115 = (uint64_t *)v32;
    *id v32 = v31;
    swift_bridgeObjectRelease();
    int64_t v130 = 0;
    uint64_t v122 = v30;
    uint64_t v33 = *(void *)(v30 + 64);
    uint64_t v113 = v30 + 64;
    uint64_t v34 = 1 << *(unsigned char *)(v30 + 32);
    uint64_t v35 = -1;
    if (v34 < 64) {
      uint64_t v35 = ~(-1 << v34);
    }
    unint64_t v36 = v35 & v33;
    v133 = (void (**)(char *, char *, uint64_t))(v124 + 16);
    uint64_t v37 = (void (**)(char *, char *, uint64_t))(v124 + 32);
    v132 = (void (**)(char *, void, uint64_t, uint64_t))(v124 + 56);
    v127 = (unsigned int (**)(char *, uint64_t, uint64_t))(v124 + 48);
    v129 = (void (**)(char *, uint64_t))(v124 + 8);
    int64_t v117 = (unint64_t)(v34 + 63) >> 6;
    int64_t v108 = v117 - 1;
    v120 = v15;
    v126 = v25;
    v125 = v27;
    v131 = (void (**)(char *, char *, uint64_t))(v124 + 32);
    v118 = v13;
    if ((v35 & v33) == 0) {
      goto LABEL_11;
    }
LABEL_6:
    uint64_t v134 = (v36 - 1) & v36;
    unint64_t v38 = __clz(__rbit64(v36)) | (v130 << 6);
LABEL_7:
    uint64_t v39 = v122;
    unint64_t v40 = *(void *)(v124 + 72) * v38;
    id v41 = *(void (**)(char *, unint64_t, uint64_t))(v124 + 16);
    v41(v25, *(void *)(v122 + 48) + v40, v16);
    unint64_t v42 = *(void *)(v39 + 56) + v40;
    uint64_t v43 = sub_10002F214(&qword_10069E808);
    v41(&v25[*(int *)(v43 + 48)], v42, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v25, 0, 1, v43);
    uint64_t v37 = v131;
    while (1)
    {
      sub_10002F1B0((uint64_t)v25, (uint64_t)v27, &qword_10069E800);
      uint64_t v48 = sub_10002F214(&qword_10069E808);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v48 - 8) + 48))(v27, 1, v48) == 1)
      {
        swift_release();
        uint64_t v28 = v109;
        goto LABEL_75;
      }
      id v49 = *v37;
      (*v37)(v135, &v27[*(int *)(v48 + 48)], v16);
      v49(v15, v27, v16);
      id v50 = (void (*)(uint64_t, void, uint64_t, uint64_t))*v132;
      (*v132)(v15, 0, 1, v16);
      sub_10002F034((uint64_t)v15, (uint64_t)v13, &qword_10069B310);
      if ((*v127)(v13, 1, v16) == 1)
      {
        sub_10002B754((uint64_t)v13, &qword_10069B310);
        sub_10002B754((uint64_t)v15, &qword_10069B310);
        id v51 = *v129;
        goto LABEL_32;
      }
      v49(v128, v13, v16);
      uint64_t v52 = sub_10002F1B0(v123, (uint64_t)&v142, (uint64_t *)&unk_10069E7F0);
      if (!v142.super.isa)
      {
        id v61 = 0;
        id v56 = 0;
        id v54 = 0;
        Class v63 = v121;
        id v55 = v128;
        goto LABEL_46;
      }
      if (!v143 || (id v53 = (id)v143(v52), (v54 = v53) == 0))
      {
        id v54 = v112;
        id v53 = v112;
      }
      id v55 = v128;
      if (v119 && (id v56 = (id)v119(v53)) != 0)
      {
        if (!v54) {
          goto LABEL_43;
        }
      }
      else
      {
        id v56 = v111;
        id v62 = v111;
        if (!v54)
        {
LABEL_43:
          id v61 = 0;
          goto LABEL_44;
        }
      }
      id v57 = v54;
      URL._bridgeToObjectiveC()(v58);
      id v60 = v59;
      id v61 = [v57 ic_objectIDFromURL:v59];

LABEL_44:
      Class v63 = v121;
LABEL_46:
      id v64 = v129;
      id v65 = *v133;
      (*v133)(v63, v55, v16);
      if (v61)
      {

        id v51 = *v64;
        (*v64)(v63, v16);
        v51(v55, v16);
        uint64_t v15 = v120;
        sub_10002B754((uint64_t)v120, &qword_10069B310);
LABEL_48:
        objc_super v66 = v135;
        uint64_t v67 = (uint64_t)v116;
        v65(v116, v135, v16);
        v50(v67, 0, 1, v16);
        id v68 = sub_10002980C(v67, v123);
        sub_10002B754(v67, &qword_10069B310);
        if (v68)
        {
          id v69 = v115;
          swift_beginAccess();
          uint64_t v70 = *v69;
          if (*v69)
          {
            if ((v70 & 0xC000000000000001) != 0)
            {
              if (v70 >= 0) {
                v70 &= 0xFFFFFFFFFFFFFF8uLL;
              }
              id v71 = v61;
              id v72 = v68;
              uint64_t v73 = __CocoaDictionary.count.getter();
              if (__OFADD__(v73, 1)) {
                goto LABEL_82;
              }
              *id v69 = sub_1001D9300(v70, v73 + 1);
            }
            else
            {
              id v78 = v61;
              id v79 = v68;
            }
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v136 = (void *)*v69;
            v81 = v136;
            *id v69 = 0x8000000000000000;
            unint64_t v83 = sub_1002B65BC((uint64_t)v61);
            uint64_t v84 = v81[2];
            BOOL v85 = (v82 & 1) == 0;
            uint64_t v86 = v84 + v85;
            if (__OFADD__(v84, v85)) {
              goto LABEL_81;
            }
            char v87 = v82;
            if (v81[3] >= v86)
            {
              if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                sub_1002BDF28();
              }
            }
            else
            {
              sub_1002B9728(v86, isUniquelyReferenced_nonNull_native);
              unint64_t v88 = sub_1002B65BC((uint64_t)v61);
              if ((v87 & 1) != (v89 & 1)) {
                goto LABEL_85;
              }
              unint64_t v83 = v88;
            }
            v90 = v115;
            v91 = v136;
            if (v87)
            {
              uint64_t v92 = v136[7];

              *(void *)(v92 + 8 * v83) = v68;
            }
            else
            {
              v136[(v83 >> 6) + 8] |= 1 << v83;
              uint64_t v93 = 8 * v83;
              *(void *)(v91[6] + v93) = v61;
              *(void *)(v91[7] + v93) = v68;
              uint64_t v94 = v91[2];
              BOOL v95 = __OFADD__(v94, 1);
              uint64_t v96 = v94 + 1;
              if (v95) {
                goto LABEL_83;
              }
              v91[2] = v96;
              id v97 = v61;
            }
            uint64_t *v90 = (uint64_t)v91;

            swift_bridgeObjectRelease();
            swift_endAccess();

            v51(v135, v16);
            uint64_t v13 = v118;
            uint64_t v15 = v120;
            goto LABEL_10;
          }
          swift_endAccess();

          v51(v135, v16);
        }
        else
        {
          v51(v66, v16);
        }
        uint64_t v13 = v118;
LABEL_10:
        uint64_t v25 = v126;
        id v27 = v125;
        uint64_t v37 = v131;
        unint64_t v36 = v134;
        if (v134) {
          goto LABEL_6;
        }
        goto LABEL_11;
      }
      if (v56)
      {
        id v74 = v56;
        URL._bridgeToObjectiveC()(&v142);
        v76 = v75;
        id v61 = [v74 ic_objectIDFromURL:v75];

        v77 = v129;
        id v51 = *v77;
        (*v77)(v121, v16);
        v51(v128, v16);
        uint64_t v15 = v120;
        sub_10002B754((uint64_t)v120, &qword_10069B310);
        if (v61) {
          goto LABEL_48;
        }
      }
      else
      {

        id v51 = *v64;
        (*v64)(v63, v16);
        v51(v128, v16);
        uint64_t v15 = v120;
        sub_10002B754((uint64_t)v120, &qword_10069B310);
      }
      uint64_t v13 = v118;
      uint64_t v37 = v131;
LABEL_32:
      unint64_t v36 = v134;
      v51(v135, v16);
      uint64_t v25 = v126;
      id v27 = v125;
      if (v36) {
        goto LABEL_6;
      }
LABEL_11:
      int64_t v44 = v130 + 1;
      if (__OFADD__(v130, 1))
      {
        __break(1u);
LABEL_81:
        __break(1u);
LABEL_82:
        __break(1u);
LABEL_83:
        __break(1u);
LABEL_84:
        __break(1u);
LABEL_85:
        sub_100031418(0, (unint64_t *)&qword_10069E810);
        KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
        __break(1u);
        return;
      }
      if (v44 < v117)
      {
        unint64_t v45 = *(void *)(v113 + 8 * v44);
        if (v45) {
          goto LABEL_14;
        }
        int64_t v46 = v130 + 2;
        ++v130;
        if (v44 + 1 < v117)
        {
          unint64_t v45 = *(void *)(v113 + 8 * v46);
          if (v45) {
            goto LABEL_17;
          }
          int64_t v130 = v44 + 1;
          if (v44 + 2 < v117)
          {
            unint64_t v45 = *(void *)(v113 + 8 * (v44 + 2));
            if (v45)
            {
              v44 += 2;
              goto LABEL_14;
            }
            int64_t v46 = v44 + 3;
            int64_t v130 = v44 + 2;
            if (v44 + 3 < v117)
            {
              unint64_t v45 = *(void *)(v113 + 8 * v46);
              if (!v45)
              {
                while (1)
                {
                  int64_t v44 = v46 + 1;
                  if (__OFADD__(v46, 1)) {
                    goto LABEL_84;
                  }
                  if (v44 >= v117)
                  {
                    int64_t v130 = v108;
                    goto LABEL_28;
                  }
                  unint64_t v45 = *(void *)(v113 + 8 * v44);
                  ++v46;
                  if (v45) {
                    goto LABEL_14;
                  }
                }
              }
LABEL_17:
              int64_t v44 = v46;
LABEL_14:
              uint64_t v134 = (v45 - 1) & v45;
              unint64_t v38 = __clz(__rbit64(v45)) + (v44 << 6);
              int64_t v130 = v44;
              goto LABEL_7;
            }
          }
        }
      }
LABEL_28:
      uint64_t v47 = sub_10002F214(&qword_10069E808);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v25, 1, 1, v47);
      uint64_t v134 = 0;
    }
  }
  v98 = (void *)(a1
                 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentFirstVisibleObjectIDForContainerObjectID);
  swift_beginAccess();
  void *v98 = 0;
  swift_bridgeObjectRelease();
LABEL_75:
  uint64_t v99 = v28 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_focusedNoteObjectIDURL;
  swift_beginAccess();
  uint64_t v100 = v110;
  sub_10002F034(v99, v110, &qword_10069B310);
  int v101 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v124 + 48))(v100, 1, v16);
  sub_10002B754(v100, &qword_10069B310);
  if (v101 != 1)
  {
    uint64_t v102 = OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_focusedNoteObjectID;
    if (!*(void *)(v28 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_focusedNoteObjectID))
    {
      uint64_t v103 = (uint64_t)v116;
      sub_10002F034(v99, (uint64_t)v116, &qword_10069B310);
      uint64_t v104 = v123;
      id v105 = sub_10002980C(v103, v123);
      uint64_t v106 = sub_10002B7B0(v105, v104);

      sub_10002B754(v103, &qword_10069B310);
      if (v106)
      {
        v107 = *(void **)(v28 + v102);
        *(void *)(v28 + v102) = v106;
      }
    }
  }
}

uint64_t sub_1000264E4(uint64_t a1, uint64_t a2)
{
  uint64_t v99 = a2;
  uint64_t v3 = sub_10002F214(&qword_10069B310);
  __chkstk_darwin(v3 - 8);
  v98 = (char *)&v90 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v100 = *(void *)(v5 - 8);
  uint64_t v101 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  id v97 = (char *)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v90 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v90 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v90 - v14;
  uint64_t v16 = sub_10002F214(&qword_10069D7F8);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v19 = (char *)&v90 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v90 - v20;
  uint64_t v22 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v90 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v90 - v27;
  uint64_t v29 = a1 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection;
  swift_beginAccess();
  sub_10002F034(v29, (uint64_t)v21, &qword_10069D7F8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1) {
    return sub_10002B754((uint64_t)v21, &qword_10069D7F8);
  }
  uint64_t v92 = v13;
  uint64_t v93 = v23;
  uint64_t v95 = v29;
  uint64_t v96 = v15;
  uint64_t v32 = v100;
  uint64_t v31 = v101;
  uint64_t v94 = v19;
  sub_100026F8C((uint64_t)v21, (uint64_t)v28, type metadata accessor for ICSelectionStateModel.ObjectSelection);
  sub_100027050((uint64_t)v28, (uint64_t)v26);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v34 = v32;
  uint64_t v35 = v96;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      id v54 = v10;
      id v55 = v10;
      uint64_t v56 = v31;
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v55, v26, v31);
      uint64_t v57 = (uint64_t)v98;
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v98, v54, v56);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v32 + 56))(v57, 0, 1, v56);
      uint64_t v58 = v99;
      id v59 = sub_10002980C(v57, v99);
      id v60 = (void *)sub_10002B7B0(v59, v58);

      sub_10002B754(v57, &qword_10069B310);
      if (!v60)
      {
        (*(void (**)(char *, uint64_t))(v32 + 8))(v54, v56);
        uint64_t v53 = (uint64_t)v28;
        goto LABEL_35;
      }
      unsigned __int8 v61 = [v60 ic_isNoteType];
      (*(void (**)(char *, uint64_t))(v32 + 8))(v54, v56);
      uint64_t v51 = v93;
      uint64_t v50 = (uint64_t)v94;
      uint64_t v52 = v95;
      if ((v61 & 1) == 0) {
        goto LABEL_28;
      }
      *uint64_t v94 = v60;
      *(void *)(v50 + 8) = 0;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v51 + 56))(v50, 0, 1, v22);
      swift_beginAccess();
      sub_10002B660(v50, v52, &qword_10069D7F8);
      swift_endAccess();
      uint64_t v53 = (uint64_t)v28;
      return sub_100026FF4(v53);
    case 2:
      id v62 = v28;
      Class v63 = v97;
      uint64_t v64 = v31;
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v97, v26, v31);
      uint64_t v65 = (uint64_t)v98;
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v98, v63, v64);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v32 + 56))(v65, 0, 1, v64);
      uint64_t v66 = v99;
      id v67 = sub_10002980C(v65, v99);
      id v68 = (void *)sub_10002B7B0(v67, v66);

      sub_10002B754(v65, &qword_10069B310);
      if (!v68)
      {
        (*(void (**)(char *, uint64_t))(v32 + 8))(v63, v64);
        uint64_t v53 = (uint64_t)v62;
LABEL_35:
        uint64_t v51 = v93;
        uint64_t v50 = (uint64_t)v94;
        uint64_t v52 = v95;
        goto LABEL_41;
      }
      unsigned __int8 v69 = [v68 ic_isInvitationType];
      (*(void (**)(char *, uint64_t))(v32 + 8))(v63, v64);
      uint64_t v51 = v93;
      uint64_t v50 = (uint64_t)v94;
      uint64_t v52 = v95;
      if ((v69 & 1) == 0)
      {

        uint64_t v53 = (uint64_t)v62;
        goto LABEL_41;
      }
      *uint64_t v94 = v68;
      *(void *)(v50 + 8) = 0;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v51 + 56))(v50, 0, 1, v22);
      swift_beginAccess();
      sub_10002B660(v50, v52, &qword_10069D7F8);
      swift_endAccess();
      uint64_t v53 = (uint64_t)v62;
      return sub_100026FF4(v53);
    case 3:
      uint64_t v70 = v28;
      id v72 = *(void **)v26;
      id v71 = (void *)*((void *)v26 + 1);

      uint64_t v52 = v95;
      if (!v72) {
        goto LABEL_30;
      }
      id v73 = v72;
      uint64_t v74 = v99;
      v75 = (void *)sub_10002B7B0(v72, v99);
      if (!v75
        || (v76 = v75,
            unsigned __int8 v77 = objc_msgSend(v75, "ic_isBaseAttachmentType"),
            v76,
            (v77 & 1) == 0))
      {

LABEL_30:
LABEL_31:
        uint64_t v53 = (uint64_t)v70;
        uint64_t v51 = v93;
        uint64_t v50 = (uint64_t)v94;
        goto LABEL_41;
      }
      if (!v71) {
        goto LABEL_46;
      }
      id v78 = v71;
      id v79 = (void *)sub_10002B7B0(v71, v74);
      if (!v79)
      {

LABEL_46:
        goto LABEL_31;
      }
      v80 = v79;
      unsigned __int8 v81 = [v79 ic_isNoteType];

      uint64_t v53 = (uint64_t)v70;
      uint64_t v51 = v93;
      uint64_t v50 = (uint64_t)v94;
      if ((v81 & 1) == 0) {
        goto LABEL_41;
      }
      return sub_100026FF4(v53);
    case 4:
      id v60 = *(void **)v26;

      char v82 = (void *)sub_10002B7B0(v60, v99);
      uint64_t v51 = v93;
      uint64_t v50 = (uint64_t)v94;
      uint64_t v52 = v95;
      if (!v82) {
        goto LABEL_28;
      }
      unint64_t v83 = v82;
      unsigned __int8 v84 = [v82 ic_isNoteType];
      goto LABEL_26;
    case 5:
      id v60 = *(void **)v26;

      BOOL v85 = (void *)sub_10002B7B0(v60, v99);
      uint64_t v51 = v93;
      uint64_t v50 = (uint64_t)v94;
      uint64_t v52 = v95;
      if (!v85)
      {
LABEL_28:

        uint64_t v53 = (uint64_t)v28;
        goto LABEL_41;
      }
      unint64_t v83 = v85;
      unsigned __int8 v84 = [v85 ic_isInvitationType];
LABEL_26:
      unsigned __int8 v86 = v84;

      uint64_t v53 = (uint64_t)v28;
      if (v86) {
        return sub_100026FF4(v53);
      }
      goto LABEL_41;
    default:
      id v97 = (char *)v22;
      v91 = v28;
      unint64_t v36 = &v26[*(int *)(sub_10002F214(&qword_10069D738) + 48)];
      uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
      v37(v35, v26, v31);
      v37(v92, v36, v31);
      unint64_t v38 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
      uint64_t v39 = (uint64_t)v98;
      v38(v98, v35, v31);
      unint64_t v40 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v34 + 56);
      v40(v39, 0, 1, v31);
      uint64_t v41 = v99;
      id v42 = sub_10002980C(v39, v99);
      uint64_t v43 = (void *)sub_10002B7B0(v42, v41);

      sub_10002B754(v39, &qword_10069B310);
      if (v43)
      {
        if (objc_msgSend(v43, "ic_isBaseAttachmentType"))
        {
          id v90 = v43;
          int64_t v44 = v92;
          v38((char *)v39, v92, v31);
          v40(v39, 0, 1, v31);
          uint64_t v45 = v99;
          id v46 = sub_10002980C(v39, v99);
          uint64_t v47 = (void *)sub_10002B7B0(v46, v45);

          sub_10002B754(v39, &qword_10069B310);
          if (v47)
          {
            unsigned __int8 v48 = [v47 ic_isNoteType];
            id v49 = *(void (**)(char *, uint64_t))(v34 + 8);
            v49(v44, v31);
            v49(v96, v31);
            uint64_t v51 = v93;
            uint64_t v50 = (uint64_t)v94;
            uint64_t v52 = v95;
            uint64_t v22 = (uint64_t)v97;
            if (v48)
            {
              *uint64_t v94 = v90;
              *(void *)(v50 + 8) = v47;
              *(void *)(v50 + 16) = 0;
              swift_storeEnumTagMultiPayload();
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v51 + 56))(v50, 0, 1, v22);
              swift_beginAccess();
              sub_10002B660(v50, v52, &qword_10069D7F8);
              swift_endAccess();
              uint64_t v53 = (uint64_t)v91;
              return sub_100026FF4(v53);
            }

            uint64_t v53 = (uint64_t)v91;
LABEL_41:
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 56))(v50, 1, 1, v22);
            swift_beginAccess();
            sub_10002B660(v50, v52, &qword_10069D7F8);
            swift_endAccess();
            return sub_100026FF4(v53);
          }

          char v87 = *(void (**)(char *, uint64_t))(v34 + 8);
          v87(v44, v31);
        }
        else
        {

          char v87 = *(void (**)(char *, uint64_t))(v34 + 8);
          v87(v92, v31);
        }
        unint64_t v88 = v96;
        uint64_t v89 = v31;
      }
      else
      {
        char v87 = *(void (**)(char *, uint64_t))(v34 + 8);
        v87(v92, v31);
        unint64_t v88 = v96;
        uint64_t v89 = v31;
      }
      v87(v88, v89);
      uint64_t v53 = (uint64_t)v91;
      uint64_t v51 = v93;
      uint64_t v50 = (uint64_t)v94;
      uint64_t v52 = v95;
      uint64_t v22 = (uint64_t)v97;
      goto LABEL_41;
  }
}

uint64_t sub_100026F8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100026FF4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100027050(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

char *sub_1000270B4(int a1, int a2)
{
  uint64_t v3 = v2;
  int v40 = a2;
  int v41 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214(&qword_10069D7F0);
  __chkstk_darwin(v8 - 8);
  id v42 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10002F214(&qword_10069D7F8);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = v3 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection;
  swift_beginAccess();
  uint64_t v18 = 1;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v17, 1, v10))
  {
    sub_100027604(v17, (uint64_t)v13, type metadata accessor for ICSelectionStateModel.ObjectSelection);
    sub_100005488((uint64_t)v16);
    sub_10002EA18((uint64_t)v13, type metadata accessor for ICSelectionStateModel.ObjectSelection);
    uint64_t v18 = 0;
  }
  uint64_t v19 = 1;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v16, v18, 1, v10);
  uint64_t v20 = v3 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection;
  swift_beginAccess();
  int v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v20, 1, v4);
  uint64_t v22 = v42;
  if (!v21)
  {
    sub_100027604(v20, (uint64_t)v7, type metadata accessor for ICSelectionStateModel.ContainerSelection);
    sub_100004A00(v22);
    sub_10002EA18((uint64_t)v7, type metadata accessor for ICSelectionStateModel.ContainerSelection);
    uint64_t v19 = 0;
  }
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v22, v19, 1, v4);
  uint64_t v23 = (uint64_t *)(v3
                  + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentFirstVisibleObjectIDForContainerObjectID);
  swift_beginAccess();
  uint64_t v24 = *v23;
  uint64_t v25 = *(void **)(v3 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentActivityStreamSelection);
  if (v25)
  {
    swift_bridgeObjectRetain();
    [v25 copy];
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    sub_100031418(0, &qword_10069D948);
    if (swift_dynamicCast()) {
      uint64_t v26 = v44;
    }
    else {
      uint64_t v26 = 0;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = 0;
  }
  uint64_t v27 = *(void *)(v3 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentActivityStreamViewMode);
  uint64_t v28 = *(void **)(v3 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentSelectedSearchResult);
  if (v28)
  {
    [v28 copy];
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    sub_100031418(0, &qword_10069D950);
    if (swift_dynamicCast()) {
      uint64_t v29 = v44;
    }
    else {
      uint64_t v29 = 0;
    }
  }
  else
  {
    uint64_t v29 = 0;
  }
  char v30 = v41;
  uint64_t v31 = *(void **)(v3 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_focusedNoteObjectID);
  id v32 = v31;
  uint64_t v33 = sub_10000FEB4((uint64_t)v16, (uint64_t)v22, v24, v26, v27, v29, (uint64_t)v31);
  if (v30)
  {
    id v34 = sub_10002E7D4();
    if (v34)
    {
      uint64_t v35 = v34;
      sub_100198544(v34, 0);
      char v36 = v40;
LABEL_26:

      sub_100007C1C(v36 & 1);
      return v33;
    }
    if (sub_10002EA78())
    {
      self;
      uint64_t v37 = swift_dynamicCastObjCClass();
      if (v37) {
        goto LABEL_25;
      }
      swift_unknownObjectRelease();
    }
    if (!sub_10002EA78())
    {
LABEL_24:
      uint64_t v37 = (uint64_t)sub_10002E7D4();
      goto LABEL_25;
    }
    self;
    uint64_t v37 = swift_dynamicCastObjCClass();
    if (!v37)
    {
      swift_unknownObjectRelease();
      goto LABEL_24;
    }
LABEL_25:
    uint64_t v35 = (void *)v37;
    char v36 = v40;
    sub_100016BD0(v37, 0);
    goto LABEL_26;
  }
  return v33;
}

uint64_t sub_100027604(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void *sub_10002766C(void *a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 2u:
      uint64_t v7 = type metadata accessor for URL();
      (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      break;
    case 3u:
      uint64_t v8 = *(void **)a2;
      uint64_t v9 = *(void **)(a2 + 8);
      *a1 = *(void *)a2;
      a1[1] = v9;
      uint64_t v10 = *(void **)(a2 + 16);
      a1[2] = v10;
      id v11 = v8;
      id v12 = v9;
      id v13 = v10;
      break;
    case 4u:
    case 5u:
      uint64_t v14 = *(void **)a2;
      uint64_t v15 = *(void **)(a2 + 8);
      *a1 = v14;
      a1[1] = v15;
      id v16 = v14;
      id v17 = v15;
      break;
    default:
      uint64_t v4 = type metadata accessor for URL();
      uint64_t v5 = *(void (**)(void *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
      v5(a1, a2, v4);
      uint64_t v6 = sub_10002F214(&qword_10069D738);
      v5((void *)((char *)a1 + *(int *)(v6 + 48)), a2 + *(int *)(v6 + 48), v4);
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t *sub_100027854(uint64_t *a1, uint64_t *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRetain();
      uint64_t v7 = *(int *)(sub_10002F214(&qword_10069D688) + 48);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = type metadata accessor for URL();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        uint64_t v12 = sub_10002F214(&qword_10069B310);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      break;
    case 2u:
      uint64_t v13 = type metadata accessor for URL();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
      break;
    case 3u:
    case 4u:
    case 5u:
      uint64_t v14 = (void *)*a2;
      uint64_t v15 = (void *)a2[1];
      *a1 = (uint64_t)v14;
      a1[1] = (uint64_t)v15;
      id v16 = v14;
      id v17 = v15;
      break;
    default:
      uint64_t v5 = *a2;
      unint64_t v4 = a2[1];
      sub_100172484(v5, v4);
      *a1 = v5;
      a1[1] = v4;
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

unint64_t sub_100027A90(void *a1)
{
  if (((unint64_t)&_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter())
  {
    sub_100157C5C((unint64_t)&_swiftEmptyArrayStorage);
    uint64_t v2 = v9;
  }
  else
  {
    uint64_t v2 = &_swiftEmptySetSingleton;
  }
  uint64_t v11 = v2;
  unint64_t result = sub_10001EC00();
  unint64_t v4 = result;
  if (!(result >> 62))
  {
    uint64_t v5 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5) {
      goto LABEL_5;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  unint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v5 = result;
  if (!result) {
    goto LABEL_15;
  }
LABEL_5:
  if (v5 >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      if ((v4 & 0xC000000000000001) != 0) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v7 = *(id *)(v4 + 8 * v6 + 32);
      }
      ++v6;
      id v8 = v7;
      sub_100027BE4(&v10, v8);

      [a1 addInteraction:v8];
    }
    while (v5 != v6);
    swift_bridgeObjectRelease();
    return (unint64_t)v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_100027BE4(void *a1, void *a2)
{
  return sub_100027C18(a1, a2, (void (*)(void))&type metadata accessor for UIAppIntentInteraction, &qword_10069B9E8, (void (*)(void))&type metadata accessor for UIAppIntentInteraction);
}

uint64_t sub_100027C18(void *a1, void *a2, void (*a3)(void), uint64_t *a4, void (*a5)(void))
{
  uint64_t v9 = v5;
  uint64_t v12 = *v5;
  if ((*v5 & 0xC000000000000001) != 0)
  {
    if (v12 < 0) {
      uint64_t v13 = *v5;
    }
    else {
      uint64_t v13 = v12 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v14 = a2;
    uint64_t v15 = __CocoaSet.member(for:)();

    if (v15)
    {
      swift_bridgeObjectRelease();

      a3(0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v38;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = __CocoaSet.count.getter();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int v28 = sub_100395218(v13, result + 1, a4, a5);
    uint64_t v39 = (void *)v28;
    unint64_t v29 = *(void *)(v28 + 16);
    if (*(void *)(v28 + 24) <= v29)
    {
      uint64_t v34 = v29 + 1;
      id v35 = v14;
      sub_100028060(v34, a4);
      char v30 = v39;
    }
    else
    {
      char v30 = (void *)v28;
      id v31 = v14;
    }
    sub_1003978A4((uint64_t)v14, v30);
    *uint64_t v9 = (uint64_t)v30;
    swift_bridgeObjectRelease();
    *a1 = v14;
  }
  else
  {
    Swift::Int v17 = *(void *)(v12 + 40);
    swift_bridgeObjectRetain();
    Swift::Int v18 = NSObject._rawHashValue(seed:)(v17);
    uint64_t v19 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v20 = v18 & ~v19;
    if ((*(void *)(v12 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20))
    {
      a3(0);
      id v21 = *(id *)(*(void *)(v12 + 48) + 8 * v20);
      char v22 = static NSObject.== infix(_:_:)();

      if (v22)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v26 = *(void **)(*(void *)(*v9 + 48) + 8 * v20);
        *a1 = v26;
        id v27 = v26;
        return 0;
      }
      uint64_t v23 = ~v19;
      while (1)
      {
        unint64_t v20 = (v20 + 1) & v23;
        if (((*(void *)(v12 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
          break;
        }
        id v24 = *(id *)(*(void *)(v12 + 48) + 8 * v20);
        char v25 = static NSObject.== infix(_:_:)();

        if (v25) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v40 = *v9;
    *uint64_t v9 = 0x8000000000000000;
    id v33 = a2;
    sub_100027ED4((uint64_t)v33, v20, isUniquelyReferenced_nonNull_native, a4, a5);
    *uint64_t v9 = v40;
    swift_bridgeObjectRelease();
    *a1 = v33;
  }
  return 1;
}

void sub_100027ED4(uint64_t a1, unint64_t a2, char a3, uint64_t *a4, void (*a5)(void))
{
  unint64_t v9 = *(void *)(*v5 + 16);
  unint64_t v10 = *(void *)(*v5 + 24);
  if (v10 > v9 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v11 = v9 + 1;
  if (a3)
  {
    sub_100028060(v11, a4);
  }
  else
  {
    if (v10 > v9)
    {
      sub_100399DB4(a4);
      goto LABEL_14;
    }
    sub_100006D40(v11, a4);
  }
  uint64_t v12 = *v5;
  Swift::Int v13 = NSObject._rawHashValue(seed:)(*(void *)(*v5 + 40));
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    a5(0);
    id v15 = *(id *)(*(void *)(v12 + 48) + 8 * a2);
    char v16 = static NSObject.== infix(_:_:)();

    if (v16)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v14;
      while (1)
      {
        a2 = (a2 + 1) & v17;
        if (((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v18 = *(id *)(*(void *)(v12 + 48) + 8 * a2);
        char v19 = static NSObject.== infix(_:_:)();

        if (v19) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v20 + 48) + 8 * a2) = a1;
  uint64_t v21 = *(void *)(v20 + 16);
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v23;
  }
}

uint64_t sub_100028060(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_10002F214(a2);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    char v30 = v2;
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    id v8 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v4 + 56);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v12 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v11) {
            goto LABEL_33;
          }
          unint64_t v19 = v8[v14];
          if (!v19)
          {
            int64_t v14 = v18 + 2;
            if (v18 + 2 >= v11) {
              goto LABEL_33;
            }
            unint64_t v19 = v8[v14];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                uint64_t v3 = v30;
                uint64_t v29 = 1 << *(unsigned char *)(v4 + 32);
                if (v29 > 63) {
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *id v8 = -1 << v29;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v14 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_39;
                  }
                  if (v14 >= v11) {
                    goto LABEL_33;
                  }
                  unint64_t v19 = v8[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v14 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = *(void *)(*(void *)(v4 + 48) + 8 * v17);
      uint64_t result = NSObject._rawHashValue(seed:)(*(void *)(v6 + 40));
      uint64_t v22 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(void *)(*(void *)(v6 + 48) + 8 * v15) = v21;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v6;
  return result;
}

void sub_1000282FC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = sub_10002F214(&qword_10069D7F0);
  __chkstk_darwin(v5 - 8);
  NSURL v142 = (char **)((char *)&v136 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_10002F214(&qword_10069D7F8);
  __chkstk_darwin(v7 - 8);
  v138 = (char **)((char *)&v136 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_10002F214(&qword_10069B310);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  v143 = (char *)&v136 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  v148 = (char *)&v136 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  v152 = (char *)&v136 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  v151 = (char *)&v136 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  v146 = (char *)&v136 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v136 - v21;
  __chkstk_darwin(v20);
  unint64_t v24 = (char *)&v136 - v23;
  uint64_t v25 = type metadata accessor for URL();
  uint64_t v154 = *(void *)(v25 - 8);
  uint64_t v26 = __chkstk_darwin(v25);
  v149 = (char *)&v136 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v26);
  v140 = (char *)&v136 - v29;
  __chkstk_darwin(v28);
  v147 = (char *)&v136 - v30;
  uint64_t v144 = OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateAccessQueue;
  id v31 = *(void **)&v2[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateAccessQueue];
  id v32 = (void *)swift_allocObject();
  v32[2] = a1;
  v32[3] = v2;
  v32[4] = ObjectType;
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = sub_100033BE0;
  *(void *)(v33 + 24) = v32;
  v150 = v32;
  aBlock[4] = sub_100031D58;
  aBlock[5] = v33;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100031D30;
  aBlock[3] = &unk_1006359A8;
  uint64_t v34 = _Block_copy(aBlock);
  id v155 = a1;
  id v35 = v31;
  v145 = v2;
  v153 = v2;
  swift_retain();
  swift_release();
  dispatch_sync(v35, v34);

  _Block_release(v34);
  LOBYTE(v35) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v35)
  {
    __break(1u);
    goto LABEL_85;
  }
  if (!a1)
  {
    uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v154 + 56);
    v40(v24, 1, 1, v25);
    sub_10002B754((uint64_t)v24, &qword_10069B310);
    v147 = 0;
    uint64_t v42 = (uint64_t)v148;
    int v41 = v149;
    uint64_t v43 = (uint64_t)v152;
LABEL_35:
    v40((char *)v43, 1, 1, v25);
    goto LABEL_39;
  }
  id v36 = [v155 currentObjectIDURL];
  uint64_t v37 = v154;
  if (v36)
  {
    uint64_t v38 = v36;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56);
    v39(v22, 0, 1, v25);
  }
  else
  {
    uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v154 + 56);
    v39(v22, 1, 1, v25);
  }
  v139 = a1;
  sub_10002F1B0((uint64_t)v22, (uint64_t)v24, &qword_10069B310);
  uint64_t v44 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48);
  int v45 = v44(v24, 1, v25);
  uint64_t v141 = v39;
  if (v45 == 1)
  {
    sub_10002B754((uint64_t)v24, &qword_10069B310);
LABEL_9:
    id v46 = 0;
    goto LABEL_31;
  }
  v137 = v44;
  uint64_t v47 = v147;
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v147, v24, v25);
  unsigned __int8 v48 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
  uint64_t v49 = v37;
  uint64_t v50 = (uint64_t)v146;
  v48(v146, v47, v25);
  v39((char *)v50, 0, 1, v25);
  uint64_t v51 = (uint64_t)&v153[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_utilityConfiguration];
  swift_beginAccess();
  sub_10002F1B0(v51, (uint64_t)aBlock, (uint64_t *)&unk_10069E7F0);
  sub_100029698(aBlock, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_1000296EC);
  id v52 = sub_10002980C(v50, (uint64_t)aBlock);
  uint64_t v53 = (void *)sub_10002B7B0(v52, (uint64_t)aBlock);

  sub_100029698(aBlock, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10002977C);
  sub_10002B754(v50, &qword_10069B310);
  if (!v53)
  {
    (*(void (**)(char *, uint64_t))(v49 + 8))(v47, v25);
    id v46 = 0;
    uint64_t v37 = v49;
    uint64_t v44 = v137;
    goto LABEL_31;
  }
  id v46 = (char *)[objc_allocWithZone((Class)type metadata accessor for ICSelectionStateModel(0)) init];
  uint64_t v37 = v49;
  if ((objc_msgSend(v53, "ic_isContainerType") & 1) == 0)
  {
    unsigned int v56 = [v53 ic_isNoteType];
    uint64_t v44 = v137;
    if (v56)
    {
      uint64_t v57 = v53;
      uint64_t v58 = v147;
      if (!v46)
      {
        (*(void (**)(char *, uint64_t))(v37 + 8))(v147, v25);

        goto LABEL_31;
      }
      id v59 = v46;
      if (objc_msgSend(v57, "ic_isNoteType"))
      {
        v136 = v59;
        id v60 = v138;
        void *v138 = v57;
        v60[1] = 0;
        uint64_t v61 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v60, 0, 1, v61);
        id v62 = &v136[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection];
        swift_beginAccess();
        id v63 = v57;
        uint64_t v64 = (uint64_t)v60;
        id v59 = v136;
        sub_10002B660(v64, (uint64_t)v62, &qword_10069D7F8);
        swift_endAccess();
      }
    }
    else
    {
      unsigned int v65 = [v53 ic_isInvitationType];
      uint64_t v66 = v53;
      uint64_t v58 = v147;
      if (v65)
      {
        if (!v46)
        {
          (*(void (**)(char *, uint64_t))(v37 + 8))(v147, v25);

          goto LABEL_31;
        }
        v136 = v46;
        id v67 = v66;
        if (objc_msgSend(v66, "ic_isInvitationType"))
        {
          id v68 = v138;
          void *v138 = v67;
          v68[1] = 0;
          uint64_t v69 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v68, 0, 1, v69);
          uint64_t v70 = &v136[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection];
          swift_beginAccess();
          id v71 = v67;
          sub_10002B660((uint64_t)v68, (uint64_t)v70, &qword_10069D7F8);
          swift_endAccess();
        }
      }
      else
      {
        if (!objc_msgSend(v66, "ic_isBaseAttachmentType")
          || (sub_10002F1B0(v51, (uint64_t)v159, (uint64_t *)&unk_10069E7F0),
              sub_100029698(v159, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_1000296EC), id v72 = (void *)sub_1001D9D1C(v66, (uint64_t)v159), v74 = v73, sub_100029698(v159, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10002977C), !v72))
        {
          (*(void (**)(char *, uint64_t))(v37 + 8))(v58, v25);

          goto LABEL_9;
        }
        v138 = v66;
        if (!v46)
        {
          (*(void (**)(char *, uint64_t))(v37 + 8))(v58, v25);

          goto LABEL_31;
        }
        v75 = v74;
        v76 = v46;
        sub_100198278(v72, v75, 0);
      }
    }
    (*(void (**)(char *, uint64_t))(v37 + 8))(v58, v25);
    goto LABEL_31;
  }
  uint64_t v44 = v137;
  if (v46)
  {
    id v54 = v46;
    id v55 = v53;
    sub_100016BD0((uint64_t)v53, 0);

    (*(void (**)(char *, uint64_t))(v37 + 8))(v147, v25);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v37 + 8))(v147, v25);
  }
LABEL_31:
  id v77 = [v155 currentContainerObjectIDURLs];
  v147 = v46;
  if (!v77)
  {
    uint64_t v42 = (uint64_t)v148;
    int v41 = v149;
    a1 = v139;
    uint64_t v43 = (uint64_t)v152;
    uint64_t v40 = v141;
    goto LABEL_35;
  }
  id v78 = v77;
  uint64_t v79 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (*(void *)(v79 + 16))
  {
    uint64_t v43 = (uint64_t)v152;
    (*(void (**)(char *, unint64_t, uint64_t))(v37 + 16))(v152, v79 + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80)), v25);
    uint64_t v80 = 0;
  }
  else
  {
    uint64_t v80 = 1;
    uint64_t v43 = (uint64_t)v152;
  }
  uint64_t v40 = v141;
  v141((char *)v43, v80, 1, v25);
  swift_bridgeObjectRelease();
  if (v44((char *)v43, 1, v25) == 1)
  {
    uint64_t v42 = (uint64_t)v148;
    int v41 = v149;
    a1 = v139;
LABEL_39:
    sub_10002B754(v43, &qword_10069B310);
    uint64_t v81 = (uint64_t)v151;
    v40(v151, 1, 1, v25);
    sub_10002B754(v81, &qword_10069B310);
    if (!a1)
    {
      v40((char *)v42, 1, 1, v25);
      sub_10002B754(v42, &qword_10069B310);
      unint64_t v83 = v147;
      goto LABEL_66;
    }
    goto LABEL_40;
  }
  uint64_t v98 = (uint64_t)v151;
  uint64_t v99 = v43;
  uint64_t v100 = *(void (**)(void))(v37 + 32);
  ((void (*)(char *, uint64_t, uint64_t))v100)(v151, v99, v25);
  v40((char *)v98, 0, 1, v25);
  if (v44((char *)v98, 1, v25) == 1)
  {
    sub_10002B754(v98, &qword_10069B310);
    uint64_t v42 = (uint64_t)v148;
    int v41 = v149;
LABEL_40:
    char v82 = v143;
    unint64_t v83 = v147;
    goto LABEL_41;
  }
  uint64_t v101 = v140;
  v100();
  uint64_t v102 = (uint64_t)v146;
  (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v146, v101, v25);
  v40((char *)v102, 0, 1, v25);
  uint64_t v103 = (uint64_t)&v153[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_utilityConfiguration];
  swift_beginAccess();
  sub_10002F1B0(v103, (uint64_t)v158, (uint64_t *)&unk_10069E7F0);
  sub_100029698(v158, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_1000296EC);
  uint64_t v104 = v37;
  id v105 = sub_10002980C(v102, (uint64_t)v158);
  uint64_t v106 = (void *)sub_10002B7B0(v105, (uint64_t)v158);

  sub_100029698(v158, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10002977C);
  sub_10002B754(v102, &qword_10069B310);
  uint64_t v42 = (uint64_t)v148;
  int v41 = v149;
  unint64_t v83 = v147;
  if (!v106)
  {
    (*(void (**)(char *, uint64_t))(v104 + 8))(v101, v25);
    char v82 = v143;
    uint64_t v40 = v141;
    goto LABEL_41;
  }
  unsigned __int8 v107 = [v106 ic_isContainerType];
  char v82 = v143;
  if ((v107 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v154 + 8))(v140, v25);

    uint64_t v40 = v141;
    goto LABEL_41;
  }
  int64_t v108 = v140;
  uint64_t v40 = v141;
  if (v83)
  {
    uint64_t v109 = v83;
    uint64_t v110 = v83;
LABEL_80:
    v133 = v109;

    uint64_t v134 = v110;
    id v135 = v106;
    sub_100016BD0((uint64_t)v106, 0);

    (*(void (**)(char *, uint64_t))(v154 + 8))(v140, v25);
    char v82 = v143;
    goto LABEL_41;
  }
  v132 = (char *)[objc_allocWithZone((Class)type metadata accessor for ICSelectionStateModel(0)) init];
  unint64_t v83 = v132;
  if (v132)
  {
    uint64_t v110 = v132;
    uint64_t v109 = 0;
    goto LABEL_80;
  }
  (*(void (**)(char *, uint64_t))(v154 + 8))(v108, v25);

LABEL_41:
  id v84 = [v155 currentNoteObjectIDURL];
  if (v84)
  {
    BOOL v85 = v84;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v86 = 0;
  }
  else
  {
    uint64_t v86 = 1;
  }
  uint64_t v87 = v154;
  v40(v82, v86, 1, v25);
  uint64_t v88 = (uint64_t)v82;
  uint64_t v89 = v87;
  sub_10002F1B0(v88, v42, &qword_10069B310);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v87 + 48))(v42, 1, v25) == 1)
  {
    sub_10002B754(v42, &qword_10069B310);
    goto LABEL_63;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v87 + 32))(v41, v42, v25);
  id v90 = *(void (**)(char *, char *, uint64_t))(v87 + 16);
  uint64_t v91 = (uint64_t)v146;
  v90(v146, v41, v25);
  v40((char *)v91, 0, 1, v25);
  uint64_t v92 = (uint64_t)&v153[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_utilityConfiguration];
  swift_beginAccess();
  sub_10002F1B0(v92, (uint64_t)v157, (uint64_t *)&unk_10069E7F0);
  sub_100029698(v157, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_1000296EC);
  id v93 = sub_10002980C(v91, (uint64_t)v157);
  uint64_t v94 = v89;
  uint64_t v95 = (void *)sub_10002B7B0(v93, (uint64_t)v157);

  sub_100029698(v157, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10002977C);
  sub_10002B754(v91, &qword_10069B310);
  if (!v95)
  {
    (*(void (**)(char *, uint64_t))(v94 + 8))(v41, v25);
    goto LABEL_63;
  }
  if ((objc_msgSend(v95, "ic_isNoteType") & 1) != 0
    || objc_msgSend(v95, "ic_isInvitationType"))
  {
    if (v83)
    {
      uint64_t v96 = v83;
      id v97 = v83;
LABEL_61:
      id v112 = v96;

      uint64_t v113 = v97;
      sub_100014C74(v95, 0);

      (*(void (**)(char *, uint64_t))(v154 + 8))(v41, v25);
      goto LABEL_63;
    }
    id v111 = (char *)[objc_allocWithZone((Class)type metadata accessor for ICSelectionStateModel(0)) init];
    unint64_t v83 = v111;
    if (v111)
    {
      id v97 = v111;
      uint64_t v96 = 0;
      goto LABEL_61;
    }
  }
  (*(void (**)(char *, uint64_t))(v154 + 8))(v41, v25);

LABEL_63:
  id v114 = [v155 currentVirtualSmartFolderIdentifier];
  if (!v114)
  {
LABEL_66:
    if (!v83)
    {
      swift_release();
      return;
    }
    goto LABEL_71;
  }
  v115 = v114;
  if (v83)
  {
    v116 = v83;
  }
  else
  {
    id v117 = [objc_allocWithZone((Class)type metadata accessor for ICSelectionStateModel(0)) init];
    if (!v117)
    {
      swift_release();

      return;
    }
    v116 = (char *)v117;
    unint64_t v83 = 0;
  }
  v118 = v83;

  uint64_t v119 = (uint64_t)v142;
  *NSURL v142 = v115;
  *(void *)(v119 + 8) = 0;
  uint64_t v120 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v120 - 8) + 56))(v119, 0, 1, v120);
  uint64_t v121 = (uint64_t)&v116[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection];
  swift_beginAccess();
  unint64_t v83 = v116;
  id v122 = v115;
  sub_10002B660(v119, v121, &qword_10069D7F0);
  swift_endAccess();

LABEL_71:
  uint64_t v123 = v83;
  uint64_t v124 = *(void **)&v145[v144];
  uint64_t v125 = swift_allocObject();
  v126 = v153;
  *(void *)(v125 + 16) = v153;
  *(void *)(v125 + 24) = v123;
  uint64_t v127 = swift_allocObject();
  *(void *)(v127 + 16) = sub_100033BEC;
  *(void *)(v127 + 24) = v125;
  v156[4] = sub_100031D58;
  v156[5] = v127;
  v156[0] = _NSConcreteStackBlock;
  v156[1] = 1107296256;
  v156[2] = sub_100031D30;
  v156[3] = &unk_100635A20;
  v128 = _Block_copy(v156);
  v129 = v126;
  int64_t v130 = v124;
  v131 = v123;
  swift_retain();
  swift_release();
  dispatch_sync(v130, v128);

  _Block_release(v128);
  LOBYTE(v128) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();

  swift_release();
  if (v128) {
LABEL_85:
  }
    __break(1u);
}

void *sub_100029698(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1000296EC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (result)
  {
    id v11 = a6;
    swift_retain();
    swift_retain();
    id v12 = a5;
    sub_10002E71C(a7);
    return sub_10002E71C(a9);
  }
  return result;
}

uint64_t sub_10002977C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (result)
  {
    swift_release();
    swift_release();

    sub_10002E70C(a7);
    return sub_10002E70C(a9);
  }
  return result;
}

id sub_10002980C(uint64_t a1, uint64_t a2)
{
  sub_10002F1B0(a2, (uint64_t)v38, (uint64_t *)&unk_10069E7F0);
  id v36 = v39;
  uint64_t v37 = v40;
  uint64_t v4 = v41;
  uint64_t v5 = sub_10002F214(&qword_10069B310);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  id v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v35 - v13;
  sub_10002F034(a1, (uint64_t)v7, &qword_10069B310);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_10002B754((uint64_t)v7, &qword_10069B310);
    return 0;
  }
  uint64_t v16 = v36;
  id v35 = v12;
  uint64_t v17 = v37;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
  uint64_t v18 = sub_10002F1B0(a2, (uint64_t)v42, (uint64_t *)&unk_10069E7F0);
  uint64_t v19 = v14;
  if (v42[0])
  {
    if (v43 && (uint64_t v20 = (void *)v43(v18)) != 0)
    {
      if (!v4) {
        goto LABEL_13;
      }
    }
    else
    {
      uint64_t v20 = v16;
      id v22 = v16;
      if (!v4) {
        goto LABEL_13;
      }
    }
    uint64_t v21 = (void *)v4();
    if (v21)
    {
      if (!v20)
      {
LABEL_14:
        id v15 = 0;
        goto LABEL_15;
      }
      goto LABEL_12;
    }
LABEL_13:
    id v27 = v17;
    uint64_t v21 = v17;
    if (!v20) {
      goto LABEL_14;
    }
LABEL_12:
    id v23 = v20;
    URL._bridgeToObjectiveC()(v24);
    uint64_t v26 = v25;
    id v15 = [v23 ic_objectIDFromURL:v25];

    goto LABEL_15;
  }
  id v15 = 0;
  uint64_t v21 = 0;
  uint64_t v20 = 0;
LABEL_15:
  uint64_t v28 = v35;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v35, v19, v8);
  if (v15)
  {
  }
  else if (v21)
  {
    id v29 = v21;
    URL._bridgeToObjectiveC()(v30);
    id v32 = v31;
    id v15 = [v29 ic_objectIDFromURL:v31];
  }
  else
  {
    id v15 = 0;
  }

  uint64_t v33 = *(void (**)(char *, uint64_t))(v9 + 8);
  v33(v28, v8);
  v33(v19, v8);
  return v15;
}

void sub_100029B6C(uint64_t a1, void *a2, uint64_t a3)
{
  v226 = a2;
  sub_10002F1B0(a3, (uint64_t)v228, (uint64_t *)&unk_10069E7F0);
  v222 = (uint64_t (*)(void))v228[0];
  id v223 = (id)v228[1];
  id v217 = (id)v228[4];
  v218 = (unsigned int (*)(uint64_t *, uint64_t, uint64_t))v228[7];
  v220 = (uint64_t (*)(void))v228[8];
  v221 = (uint64_t (*)(void))v228[6];
  id v214 = (id)v228[5];
  uint64_t v215 = v228[9];
  uint64_t v209 = type metadata accessor for URL();
  uint64_t v207 = *(void *)(v209 - 8);
  __chkstk_darwin(v209);
  v213 = (char *)&v202 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214(&qword_10069B310);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  v206 = (char *)&v202 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v212 = (char *)&v202 - v9;
  uint64_t v10 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
  uint64_t v224 = *(void *)(v10 - 8);
  uint64_t v225 = v10;
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v208 = (uint64_t)&v202 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v210 = (uint64_t)&v202 - v14;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v202 - v15;
  uint64_t v17 = sub_10002F214(&qword_10069D7F0);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v20 = (uint64_t *)((char *)&v202 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = __chkstk_darwin(v18);
  v211 = (uint64_t *)((char *)&v202 - v22);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v202 - v24;
  uint64_t v26 = __chkstk_darwin(v23);
  v219 = (uint64_t *)((char *)&v202 - v27);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v30 = (uint64_t *)((char *)&v202 - v29);
  uint64_t v31 = __chkstk_darwin(v28);
  uint64_t v33 = (char *)&v202 - v32;
  __chkstk_darwin(v31);
  id v35 = (char *)&v202 - v34;
  uint64_t v216 = a3;
  uint64_t v36 = sub_10002F1B0(a3, (uint64_t)v229, (uint64_t *)&unk_10069E7F0);
  if (!v229[0] || (((uint64_t (*)(uint64_t))v229[2])(v36) & 1) == 0)
  {
    if (sub_10002EA78())
    {
      self;
      uint64_t v38 = swift_dynamicCastObjCClass();
      if (v38) {
        goto LABEL_14;
      }
      swift_unknownObjectRelease();
    }
    if (!sub_10002EA78())
    {
LABEL_13:
      uint64_t v38 = (uint64_t)sub_10002E7D4();
      goto LABEL_14;
    }
    self;
    uint64_t v38 = swift_dynamicCastObjCClass();
    if (!v38)
    {
      swift_unknownObjectRelease();
      goto LABEL_13;
    }
LABEL_14:
    id v39 = (id)v38;
    sub_100016BD0(v38, v226);
    goto LABEL_15;
  }
  id v205 = (id)sub_10002ECBC();
  if (v205 || (id v205 = sub_100008000()) != 0)
  {
    uint64_t v37 = v222;
    if (v222())
    {
      BOOL v204 = 0;
    }
    else
    {
      uint64_t v40 = a1 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection;
      swift_beginAccess();
      sub_10002F034(v40, (uint64_t)v35, &qword_10069D7F0);
      BOOL v204 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v224 + 48))(v35, 1, v225) == 1;
      sub_10002B754((uint64_t)v35, &qword_10069D7F0);
    }
    int v41 = v226;
  }
  else
  {
    id v205 = 0;
    BOOL v204 = 1;
    int v41 = v226;
    uint64_t v37 = v222;
  }
  v222 = v41;
  if (v37())
  {
    uint64_t v42 = (void *)(a1 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection);
    swift_beginAccess();
    id v223 = v42;
    sub_10002F034((uint64_t)v42, (uint64_t)v33, &qword_10069D7F0);
    v203 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v224 + 48);
    int v43 = v203(v33, 1, v225);
    sub_10002B754((uint64_t)v33, &qword_10069D7F0);
    if (v43 == 1)
    {
      if (v204)
      {

        id v39 = v205;
      }
      else
      {
        id v39 = v205;
        if (v205)
        {
          id v96 = v205;
          id v97 = v222;
          sub_1001D664C(v39, v216, v226, v30);

          uint64_t v98 = v225;
          if (v203((char *)v30, 1, v225) != 1)
          {
            sub_100026F8C((uint64_t)v30, (uint64_t)v16, type metadata accessor for ICSelectionStateModel.ContainerSelection);
            id v105 = v219;
            sub_100026F8C((uint64_t)v16, (uint64_t)v219, type metadata accessor for ICSelectionStateModel.ContainerSelection);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v224 + 56))(v105, 0, 1, v98);
            uint64_t v106 = (uint64_t)v223;
            swift_beginAccess();
            sub_10002B660((uint64_t)v105, v106, &qword_10069D7F0);
            swift_endAccess();

            id v39 = v96;
            goto LABEL_15;
          }
          sub_10002B754((uint64_t)v30, &qword_10069D7F0);
        }
        uint64_t v99 = v219;
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v224 + 56))(v219, 1, 1, v225);
        uint64_t v100 = (uint64_t)v223;
        swift_beginAccess();
        sub_10002B660((uint64_t)v99, v100, &qword_10069D7F0);
        swift_endAccess();
      }
      goto LABEL_15;
    }
  }
  if (v221)
  {
    uint64_t v44 = v221();
    if (v44)
    {
      int v45 = (void *)v44;
      id v46 = v222;
      uint64_t v47 = v220;
      if (!v220) {
        goto LABEL_29;
      }
LABEL_28:
      id v50 = (id)v47();
      if (v50) {
        goto LABEL_30;
      }
      goto LABEL_29;
    }
  }
  id v48 = v217;
  id v49 = v217;
  id v46 = v222;
  if (!v48) {
    goto LABEL_42;
  }
  int v45 = v49;
  uint64_t v47 = v220;
  if (v220) {
    goto LABEL_28;
  }
LABEL_29:
  id v51 = v214;
  id v50 = v214;
  if (v51)
  {
LABEL_30:
    id v52 = v50;
    id v53 = objc_allocWithZone((Class)type metadata accessor for FolderListSelectionValidator());
    id v54 = self;
    id v55 = v45;
    id v56 = v52;
    id v57 = [v54 hidesSystemPaperNotesInCustomFolders];
    id v58 = [v54 hidesMathNotesInCustomFolders];
    id v59 = [v54 hidesCallNotesInCustomFolders];
    id v60 = v57;
    uint64_t v61 = v56;
    id v62 = [v53 initWithModernContext:v55 htmlContext:v56 hidesSystemPaperNotesInCustomFolders:v60 hidesMathNotesInCustomFolders:v58 hidesCallNotesInCustomFolders:v59];

    id v63 = (id)(a1 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection);
    swift_beginAccess();
    sub_10002F034((uint64_t)v63, (uint64_t)v25, &qword_10069D7F0);
    uint64_t v65 = v224;
    uint64_t v64 = v225;
    id v67 = (void *)(v224 + 48);
    uint64_t v66 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v224 + 48);
    if (v66((uint64_t *)v25, 1, v225) == 1)
    {

      id v39 = v205;
      id v68 = v222;
      if (v204)
      {
LABEL_128:

        goto LABEL_15;
      }
LABEL_107:
      if (!v39)
      {
LABEL_111:
        v196 = v219;
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v65 + 56))(v219, 1, 1, v64);
        swift_beginAccess();
        sub_10002B660((uint64_t)v196, (uint64_t)v63, &qword_10069D7F0);
        swift_endAccess();

        goto LABEL_15;
      }
      v218 = v66;
      id v82 = v39;
LABEL_109:
      id v194 = v82;
      id v68 = v68;
      v195 = v211;
      sub_1001D664C(v39, v216, v226, v211);

      if (v218(v195, 1, v64) != 1)
      {
        uint64_t v197 = (uint64_t)v195;
        uint64_t v198 = v210;
        sub_100026F8C(v197, v210, type metadata accessor for ICSelectionStateModel.ContainerSelection);
        uint64_t v199 = v198;
        uint64_t v200 = v65;
        v201 = v219;
        sub_100026F8C(v199, (uint64_t)v219, type metadata accessor for ICSelectionStateModel.ContainerSelection);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v200 + 56))(v201, 0, 1, v64);
        swift_beginAccess();
        sub_10002B660((uint64_t)v201, (uint64_t)v63, &qword_10069D7F0);
        swift_endAccess();

        id v39 = v194;
        goto LABEL_15;
      }
      sub_10002B754((uint64_t)v195, &qword_10069D7F0);
      goto LABEL_111;
    }
    v221 = (uint64_t (*)(void))v55;
    id v223 = v62;
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v70 = (uint64_t)v212;
    switch(EnumCaseMultiPayload)
    {
      case 1:
        v220 = (uint64_t (*)(void))v61;
        uint64_t v107 = sub_10002F214(&qword_10069D688);
        sub_10002F1B0((uint64_t)&v25[*(int *)(v107 + 48)], v70, &qword_10069B310);
        NSString v108 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v109 = [self allTypes];
        type metadata accessor for VirtualSmartFolderItemIdentifierTypes(0);
        uint64_t v110 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        LOBYTE(v109) = sub_1002D636C((uint64_t)v108, v110);
        swift_bridgeObjectRelease();
        if ((v109 & 1) == 0)
        {
          sub_10002B754(v70, &qword_10069B310);

          id v39 = v205;
          goto LABEL_104;
        }
        v218 = v66;
        id v111 = self;
        id v112 = v108;
        id v113 = [v111 systemSectionIdentifier];
        id v114 = sub_10002980C(v70, v216);
        id v115 = [objc_allocWithZone((Class)ICVirtualSmartFolderItemIdentifier) initWithType:v112 parentIdentifier:v113 accountObjectID:v114];

        v116 = v219;
        uint64_t v118 = v225;
        id v117 = v226;
        void *v219 = v115;
        v116[1] = v117;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v224 + 56))(v116, 0, 1, v118);
        swift_beginAccess();
        v222 = v222;
        id v119 = v115;
        sub_10002B660((uint64_t)v116, (uint64_t)v63, &qword_10069D7F0);
        swift_endAccess();
        id v39 = v205;
        if (!v205)
        {
          sub_10002B754(v70, &qword_10069B310);

          goto LABEL_119;
        }
        id v217 = v63;
        sub_10002F214(&qword_10069BA00);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_100529F20;
        *(void *)(inited + 32) = v119;
        unint64_t v227 = inited;
        specialized Array._endMutation()();
        unint64_t v121 = v227;
        id v82 = v39;
        id v122 = v119;
        uint64_t v123 = sub_10002C73C(v121);
        swift_bridgeObjectRelease();
        id v124 = v223;
        uint64_t v125 = (void *)sub_10002CE88(v82);
        if (v125)
        {
          v126 = v125;
          LODWORD(v215) = sub_10002CFD0(v125, v123, 0);

          swift_bridgeObjectRelease();
          sub_10002B754(v70, &qword_10069B310);
          id v39 = v205;
          uint64_t v65 = v224;
          uint64_t v64 = v225;
          id v63 = v217;
          id v68 = v222;
          goto LABEL_63;
        }

        swift_bridgeObjectRelease();
        sub_10002B754(v70, &qword_10069B310);
        goto LABEL_130;
      case 2:
        id v217 = v67;
        v220 = (uint64_t (*)(void))v61;
        uint64_t v127 = v207;
        v128 = v213;
        v129 = v25;
        uint64_t v130 = v209;
        (*(void (**)(char *, char *, uint64_t))(v207 + 32))(v213, v129, v209);
        uint64_t v131 = (uint64_t)v206;
        (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v206, v128, v130);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v127 + 56))(v131, 0, 1, v130);
        uint64_t v132 = v216;
        id v133 = sub_10002980C(v131, v216);
        uint64_t v134 = (void *)sub_10002B7B0(v133, v132);

        sub_10002B754(v131, &qword_10069B310);
        if (v134)
        {
          unsigned __int8 v135 = [v134 ic_isContainerType];
          id v39 = v205;
          if (v135)
          {
            v218 = v66;
            uint64_t v136 = v65;
            v137 = v219;
            uint64_t v139 = v225;
            v138 = v226;
            void *v219 = v134;
            v137[1] = v138;
            swift_storeEnumTagMultiPayload();
            (*(void (**)(void *, void, uint64_t, uint64_t))(v136 + 56))(v137, 0, 1, v139);
            swift_beginAccess();
            v222 = v222;
            id v112 = v134;
            sub_10002B660((uint64_t)v137, (uint64_t)v63, &qword_10069D7F0);
            swift_endAccess();
            if (!v39)
            {
              (*(void (**)(char *, uint64_t))(v127 + 8))(v213, v209);

LABEL_119:
              goto LABEL_126;
            }
            sub_10002F214(&qword_10069BA00);
            uint64_t v140 = swift_initStackObject();
            *(_OWORD *)(v140 + 16) = xmmword_100529F20;
            *(void *)(v140 + 32) = v112;
            unint64_t v227 = v140;
            specialized Array._endMutation()();
            unint64_t v141 = v227;
            id v82 = v39;
            id v142 = v112;
            uint64_t v143 = sub_10002C73C(v141);
            swift_bridgeObjectRelease();
            id v144 = v223;
            v145 = (void *)sub_10002CE88(v82);
            if (!v145)
            {

              swift_bridgeObjectRelease();
              (*(void (**)(char *, uint64_t))(v127 + 8))(v213, v209);
              goto LABEL_130;
            }
            v146 = v145;
            LODWORD(v215) = sub_10002CFD0(v145, v143, 0);

            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v127 + 8))(v213, v209);
            id v39 = v205;
            uint64_t v65 = v224;
            uint64_t v64 = v225;
            id v68 = v222;
LABEL_63:
            if (v215) {
              goto LABEL_128;
            }
            goto LABEL_109;
          }
          (*(void (**)(char *, uint64_t))(v127 + 8))(v213, v209);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v127 + 8))(v128, v130);

          id v39 = v205;
        }
        uint64_t v64 = v225;
        id v68 = v222;
        if (!v204) {
          goto LABEL_107;
        }
        goto LABEL_128;
      case 3:
        v220 = (uint64_t (*)(void))v61;
        id v147 = *(id *)v25;
        id v83 = (id)*((void *)v25 + 1);
        if (!*(void *)v25)
        {

          id v39 = v205;
          goto LABEL_106;
        }
        unsigned __int8 v148 = [*(id *)v25 isNonEmpty];
        id v39 = v205;
        if ((v148 & 1) == 0)
        {

          goto LABEL_106;
        }
        v218 = v66;
        v149 = v226;
        if (!v226)
        {
          v222 = (uint64_t (*)(void))v83;
          v149 = v83;
        }
        v150 = v219;
        void *v219 = v147;
        v150[1] = v149;
        v226 = v149;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v224 + 56))(v150, 0, 1, v64);
        swift_beginAccess();
        id v151 = v147;
        v222 = v222;
        sub_10002B660((uint64_t)v150, (uint64_t)v63, &qword_10069D7F0);
        swift_endAccess();
        if (!v39)
        {

          goto LABEL_126;
        }
        id v82 = v39;
        v152 = v221;
        id v153 = [v151 copyWithManagedObjectContext:v221];
        id v154 = v223;
        id v155 = (void *)sub_10002CE88(v82);
        if (!v155)
        {

          goto LABEL_124;
        }
        v156 = v155;
        LODWORD(v217) = sub_10002CFD0(v155, 0, v153);

        id v39 = v205;
        uint64_t v65 = v224;
        uint64_t v64 = v225;
        id v68 = v222;
        if ((v217 & 1) == 0) {
          goto LABEL_109;
        }
        goto LABEL_128;
      case 4:
        id v217 = v63;
        id v157 = *(id *)v25;
        v158 = (void *)*((void *)v25 + 1);
        if (!*(void *)v25)
        {

          id v39 = v205;
          goto LABEL_94;
        }
        v218 = v66;
        v220 = (uint64_t (*)(void))v61;
        id v159 = v157;
        v160 = v222;

        v161 = v160;
        id v39 = v205;
        v162 = v226;
        if (!v226)
        {
          v161 = v158;
          v162 = v158;
        }
        v163 = v219;
        void *v219 = v157;
        v163[1] = v162;
        v226 = v162;
        uint64_t v164 = v225;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v224 + 56))(v163, 0, 1, v164);
        uint64_t v165 = (uint64_t)v217;
        swift_beginAccess();
        v166 = v160;
        id v167 = v159;
        v222 = v161;
        sub_10002B660((uint64_t)v163, v165, &qword_10069D7F0);
        swift_endAccess();
        if (!v39)
        {

          uint64_t v65 = v224;
          uint64_t v64 = v225;
          id v63 = v217;
          goto LABEL_127;
        }
        v168 = v158;
        sub_10002F214(&qword_10069BA00);
        uint64_t v169 = swift_initStackObject();
        *(_OWORD *)(v169 + 16) = xmmword_100529F20;
        *(void *)(v169 + 32) = v167;
        unint64_t v227 = v169;
        specialized Array._endMutation()();
        unint64_t v170 = v227;
        id v82 = v39;
        id v171 = v167;
        uint64_t v172 = sub_10002C73C(v170);
        swift_bridgeObjectRelease();
        id v173 = v223;
        v174 = (void *)sub_10002CE88(v82);
        v175 = v221;
        if (v174)
        {
          v176 = v174;
          char v177 = sub_10002CFD0(v174, v172, 0);
          swift_bridgeObjectRelease();

          id v39 = v205;
          uint64_t v65 = v224;
          uint64_t v64 = v225;
          id v63 = v217;
          goto LABEL_87;
        }
        swift_bridgeObjectRelease();

        goto LABEL_130;
      case 5:
        id v178 = *(id *)v25;
        v179 = (void *)*((void *)v25 + 1);
        if (!*(void *)v25)
        {

          id v39 = v205;
          uint64_t v64 = v225;
          goto LABEL_106;
        }
        v220 = (uint64_t (*)(void))v61;
        id v180 = v178;
        v181 = (void *)sub_10002B7B0(v178, v216);

        id v39 = v205;
        if (!v181)
        {

LABEL_104:
          uint64_t v65 = v224;
          uint64_t v64 = v225;
          goto LABEL_106;
        }
        v218 = v66;
        unsigned __int8 v182 = [v181 ic_isContainerType];

        if ((v182 & 1) == 0)
        {

          uint64_t v65 = v224;
          uint64_t v64 = v225;
          uint64_t v66 = v218;
          goto LABEL_106;
        }
        v183 = v226;
        if (!v226)
        {
          v222 = v179;
          v183 = v179;
        }
        v184 = v219;
        void *v219 = v178;
        v184[1] = v183;
        v226 = v183;
        uint64_t v185 = v225;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v224 + 56))(v184, 0, 1, v185);
        swift_beginAccess();
        id v186 = v180;
        v222 = v222;
        sub_10002B660((uint64_t)v184, (uint64_t)v63, &qword_10069D7F0);
        swift_endAccess();
        if (v39)
        {
          sub_10002F214(&qword_10069BA00);
          uint64_t v187 = swift_initStackObject();
          *(_OWORD *)(v187 + 16) = xmmword_100529F20;
          *(void *)(v187 + 32) = v186;
          unint64_t v227 = v187;
          specialized Array._endMutation()();
          unint64_t v188 = v227;
          id v82 = v39;
          id v189 = v186;
          uint64_t v190 = sub_10002C73C(v188);
          swift_bridgeObjectRelease();
          id v191 = v223;
          v192 = (void *)sub_10002CE88(v82);
          if (!v192)
          {
            swift_bridgeObjectRelease();

            goto LABEL_130;
          }
          v193 = v192;
          char v177 = sub_10002CFD0(v192, v190, 0);
          swift_bridgeObjectRelease();

          id v39 = v205;
          uint64_t v65 = v224;
          uint64_t v64 = v225;
LABEL_87:
          id v68 = v222;
          if ((v177 & 1) == 0) {
            goto LABEL_109;
          }
        }
        else
        {

LABEL_126:
          uint64_t v65 = v224;
          uint64_t v64 = v225;
LABEL_127:
          id v68 = v222;
          if (!v204) {
            goto LABEL_111;
          }
        }
        goto LABEL_128;
      default:
        v220 = (uint64_t (*)(void))v61;
        id v217 = v63;
        uint64_t v72 = *(void *)v25;
        unint64_t v71 = *((void *)v25 + 1);
        id v73 = v221;
        sub_100172484(v72, v71);
        Class isa = Data._bridgeToObjectiveC()().super.isa;
        id v75 = [self tagSelectionWithData:isa managedObjectContext:v73];

        sub_10017253C(v72, v71);
        if (v75)
        {
          unsigned __int8 v76 = [v75 isNonEmpty];
          id v68 = v222;
          if (v76)
          {
            v218 = v66;
            id v77 = v219;
            uint64_t v79 = v225;
            id v78 = v226;
            void *v219 = v75;
            v77[1] = v78;
            swift_storeEnumTagMultiPayload();
            (*(void (**)(void *, void, uint64_t, uint64_t))(v224 + 56))(v77, 0, 1, v79);
            uint64_t v80 = (uint64_t)v217;
            swift_beginAccess();
            id v68 = v68;
            id v81 = v75;
            sub_10002B660((uint64_t)v77, v80, &qword_10069D7F0);
            swift_endAccess();
            if (v205)
            {
              v222 = v68;
              id v82 = v205;
              id v83 = v81;
              id v84 = v223;
              BOOL v85 = (void *)sub_10002CE88(v82);
              if (!v85)
              {

                sub_10017253C(v72, v71);
LABEL_124:

LABEL_130:
                id v39 = v205;

                goto LABEL_15;
              }
              uint64_t v86 = v85;
              char v87 = sub_10002CFD0(v85, 0, v75);
              uint64_t v88 = v83;
              char v89 = v87;

              sub_10017253C(v72, v71);
              id v39 = v205;
              id v68 = v222;
              uint64_t v65 = v224;
              uint64_t v64 = v225;
              id v63 = v217;
              if ((v89 & 1) == 0) {
                goto LABEL_109;
              }
            }
            else
            {

              sub_10017253C(v72, v71);
              id v39 = 0;
              uint64_t v65 = v224;
              uint64_t v64 = v225;
              id v63 = v217;
              if (!v204) {
                goto LABEL_111;
              }
            }
          }
          else
          {

            sub_10017253C(v72, v71);
            id v39 = v205;
            uint64_t v65 = v224;
            uint64_t v64 = v225;
            id v63 = v217;
            if (!v204) {
              goto LABEL_107;
            }
          }
          goto LABEL_128;
        }

        sub_10017253C(v72, v71);
        id v39 = v205;
        uint64_t v65 = v224;
LABEL_94:
        uint64_t v64 = v225;
        id v63 = v217;
LABEL_106:
        id v68 = v222;
        if (v204) {
          goto LABEL_128;
        }
        goto LABEL_107;
    }
  }

LABEL_42:
  if (v204)
  {

    id v39 = v205;
  }
  else
  {
    id v39 = v205;
    if (v205)
    {
      id v90 = v205;
      uint64_t v91 = v46;
      sub_1001D664C(v39, v216, v226, v20);

      uint64_t v92 = v224;
      uint64_t v93 = v225;
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v224 + 48))(v20, 1, v225) != 1)
      {
        uint64_t v101 = (uint64_t)v20;
        uint64_t v102 = v208;
        sub_100026F8C(v101, v208, type metadata accessor for ICSelectionStateModel.ContainerSelection);
        uint64_t v103 = v219;
        sub_100026F8C(v102, (uint64_t)v219, type metadata accessor for ICSelectionStateModel.ContainerSelection);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v92 + 56))(v103, 0, 1, v93);
        uint64_t v104 = a1 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection;
        swift_beginAccess();
        sub_10002B660((uint64_t)v103, v104, &qword_10069D7F0);
        swift_endAccess();

        id v39 = v90;
        goto LABEL_15;
      }
      sub_10002B754((uint64_t)v20, &qword_10069D7F0);
    }
    uint64_t v94 = v219;
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v224 + 56))(v219, 1, 1, v225);
    uint64_t v95 = a1 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection;
    swift_beginAccess();
    sub_10002B660((uint64_t)v94, v95, &qword_10069D7F0);
    swift_endAccess();
  }
LABEL_15:
}

uint64_t sub_10002B660(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10002F214(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

unint64_t sub_10002B6C4()
{
  return (unint64_t)sub_10002B6EC(*(void *)(v0 + 16), (SEL *)&selRef_shouldAutomaticallySelectNoteContainerForSelectionStateController_) & 1;
}

id sub_10002B6EC(uint64_t a1, SEL *a2)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  id v5 = [Strong *a2 a1];
  swift_unknownObjectRelease();
  return v5;
}

uint64_t sub_10002B754(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10002F214(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10002B7B0(void *a1, uint64_t a2)
{
  sub_10002F1B0(a2, (uint64_t)v20, (uint64_t *)&unk_10069E7F0);
  if (!a1) {
    return 0;
  }
  id v5 = v21;
  uint64_t v4 = v22;
  uint64_t v6 = v23;
  sub_10002F1B0(a2, (uint64_t)v24, (uint64_t *)&unk_10069E7F0);
  if (!v24[0])
  {
    uint64_t v8 = 0;
    uint64_t v7 = 0;
    uint64_t v4 = a1;
LABEL_13:
    id v12 = v4;
    goto LABEL_14;
  }
  if (v25)
  {
    uint64_t v7 = (void *)v25(a1);
    if (v7)
    {
      if (!v6) {
        goto LABEL_12;
      }
      goto LABEL_10;
    }
  }
  else
  {
    id v9 = a1;
  }
  id v10 = v5;
  uint64_t v7 = v5;
  if (!v6)
  {
LABEL_12:
    uint64_t v8 = v4;
    goto LABEL_13;
  }
LABEL_10:
  uint64_t v11 = v6();
  if (!v11) {
    goto LABEL_12;
  }
  uint64_t v8 = (void *)v11;
LABEL_14:
  id v13 = [a1 ic_isModernType];
  if (v13) {
    BOOL v14 = v7 == 0;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    __chkstk_darwin(v13);
    id v17 = v7;
    sub_10002F214(&qword_10069D520);
    NSManagedObjectContext.performAndWait<A>(_:)();

    return v19;
  }
  id v15 = [a1 ic_isLegacyType];
  if (v15)
  {
    if (v8)
    {
      __chkstk_darwin(v15);
      id v16 = v8;
      sub_10002F214(&qword_10069D520);
      NSManagedObjectContext.performAndWait<A>(_:)();

      return v19;
    }
  }
  else
  {
  }
  return 0;
}

id sub_10002B9EC()
{
  uint64_t v1 = (void *)(*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();

  return v1;
}

NSManagedObjectContext *__cdecl sub_10002BA24(id a1)
{
  uint64_t v1 = +[ICNoteContext sharedContext];
  uint64_t v2 = [v1 workerManagedObjectContext];

  return (NSManagedObjectContext *)v2;
}

NSManagedObjectContext *__cdecl sub_10002BA78(id a1)
{
  uint64_t v1 = +[NotesApp sharedNotesApp];
  uint64_t v2 = [v1 backgroundNoteContext];
  uint64_t v3 = [v2 managedObjectContext];

  return (NSManagedObjectContext *)v3;
}

void sub_10002C680(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,id location,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
}

uint64_t sub_10002C73C(unint64_t a1)
{
  return sub_10002C76C(a1, (unint64_t *)&qword_1006A0020, (uint64_t)NSObject_ptr, &qword_10069F128, (void (*)(id *, uint64_t))sub_10002C93C);
}

uint64_t sub_10002C76C(unint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4, void (*a5)(id *, uint64_t))
{
  unint64_t v9 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  sub_100031418(0, a2);
  sub_10002C8EC(a4, a2);
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v17 = result;
  if (v9)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v11) {
      return v17;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v11) {
      return v17;
    }
  }
  if (v11 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v11; ++i)
      {
        uint64_t v13 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        a5(&v16, v13);
      }
    }
    else
    {
      BOOL v14 = (void **)(a1 + 32);
      do
      {
        id v15 = *v14++;
        a5(&v16, (uint64_t)v15);

        --v11;
      }
      while (v11);
    }
    return v17;
  }
  __break(1u);
  return result;
}

uint64_t sub_10002C8EC(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100031418(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10002C93C(void *a1, void *a2)
{
  return sub_10002C958(a1, a2, (unint64_t *)&qword_1006A0020, (uint64_t)NSObject_ptr, (uint64_t *)&unk_1006A4D50);
}

uint64_t sub_10002C958(void *a1, void *a2, unint64_t *a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v8 = v5;
  uint64_t v11 = *v5;
  if ((*v5 & 0xC000000000000001) != 0)
  {
    if (v11 < 0) {
      uint64_t v12 = *v5;
    }
    else {
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v13 = a2;
    uint64_t v14 = __CocoaSet.member(for:)();

    if (v14)
    {
      swift_bridgeObjectRelease();

      sub_100031418(0, a3);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v37;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = __CocoaSet.count.getter();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int v27 = sub_100395414(v12, result + 1, a5, a3);
    uint64_t v38 = (void *)v27;
    unint64_t v28 = *(void *)(v27 + 16);
    if (*(void *)(v27 + 24) <= v28)
    {
      uint64_t v33 = v28 + 1;
      id v34 = v13;
      sub_100028060(v33, a5);
      uint64_t v29 = v38;
    }
    else
    {
      uint64_t v29 = (void *)v27;
      id v30 = v13;
    }
    sub_1003978A4((uint64_t)v13, v29);
    *uint64_t v8 = (uint64_t)v29;
    swift_bridgeObjectRelease();
    *a1 = v13;
  }
  else
  {
    Swift::Int v16 = *(void *)(v11 + 40);
    swift_bridgeObjectRetain();
    Swift::Int v17 = NSObject._rawHashValue(seed:)(v16);
    uint64_t v18 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v19 = v17 & ~v18;
    if ((*(void *)(v11 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19))
    {
      sub_100031418(0, a3);
      id v20 = *(id *)(*(void *)(v11 + 48) + 8 * v19);
      char v21 = static NSObject.== infix(_:_:)();

      if (v21)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v25 = *(void **)(*(void *)(*v8 + 48) + 8 * v19);
        *a1 = v25;
        id v26 = v25;
        return 0;
      }
      uint64_t v22 = ~v18;
      while (1)
      {
        unint64_t v19 = (v19 + 1) & v22;
        if (((*(void *)(v11 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
          break;
        }
        id v23 = *(id *)(*(void *)(v11 + 48) + 8 * v19);
        char v24 = static NSObject.== infix(_:_:)();

        if (v24) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v39 = *v8;
    *uint64_t v8 = 0x8000000000000000;
    id v32 = a2;
    sub_10002CC24((uint64_t)v32, v19, isUniquelyReferenced_nonNull_native, a5, a3);
    *uint64_t v8 = v39;
    swift_bridgeObjectRelease();
    *a1 = v32;
  }
  return 1;
}

void sub_10002CC24(uint64_t a1, unint64_t a2, char a3, uint64_t *a4, unint64_t *a5)
{
  unint64_t v9 = *(void *)(*v5 + 16);
  unint64_t v10 = *(void *)(*v5 + 24);
  if (v10 > v9 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v11 = v9 + 1;
  if (a3)
  {
    sub_100028060(v11, a4);
  }
  else
  {
    if (v10 > v9)
    {
      sub_100399DB4(a4);
      goto LABEL_14;
    }
    sub_100006D40(v11, a4);
  }
  uint64_t v12 = *v5;
  Swift::Int v13 = NSObject._rawHashValue(seed:)(*(void *)(*v5 + 40));
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_100031418(0, a5);
    id v15 = *(id *)(*(void *)(v12 + 48) + 8 * a2);
    char v16 = static NSObject.== infix(_:_:)();

    if (v16)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v14;
      while (1)
      {
        a2 = (a2 + 1) & v17;
        if (((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v18 = *(id *)(*(void *)(v12 + 48) + 8 * a2);
        char v19 = static NSObject.== infix(_:_:)();

        if (v19) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v20 + 48) + 8 * a2) = a1;
  uint64_t v21 = *(void *)(v20 + 16);
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v23;
  }
}

uint64_t type metadata accessor for FolderListSelectionValidator()
{
  return self;
}

uint64_t sub_10002CE88(void *a1)
{
  id v2 = [a1 ic_isModernType];
  if (!v2)
  {
    id v2 = [a1 ic_isLegacyType];
    if (!v2) {
      return 0;
    }
  }
  __chkstk_darwin(v2);
  sub_100031418(0, (unint64_t *)&qword_1006A2780);
  NSManagedObjectContext.performAndWait<A>(_:)();
  return v4;
}

uint64_t sub_10002CFD0(void *a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  id v8 = [a1 managedObjectContext];
  if (!v8) {
    goto LABEL_3;
  }
  unint64_t v9 = v8;
  __chkstk_darwin(v8);
  NSManagedObjectContext.performAndWait<A>(_:)();

  if (v46) {
    goto LABEL_3;
  }
  if (a3)
  {
    id v12 = a3;
    if ([v12 isNonEmpty])
    {
      self;
      if (swift_dynamicCastObjCClass())
      {
        type metadata accessor for ICQuery();
        id v13 = a1;
        uint64_t v14 = (void *)static ICQuery.makeQueryForNotesMatching(_:)();
        __chkstk_darwin(v14);
        NSManagedObjectContext.performAndWait<A>(_:)();

        unsigned __int8 v10 = v42;
        return v10 & 1;
      }
      goto LABEL_35;
    }
  }
  if (!a2) {
    goto LABEL_21;
  }
  if ((a2 & 0xC000000000000001) != 0)
  {
    if (__CocoaSet.count.getter())
    {
      uint64_t v15 = __CocoaSet.count.getter();
      goto LABEL_15;
    }
LABEL_21:
    unsigned __int8 v10 = 1;
    return v10 & 1;
  }
  uint64_t v15 = *(void *)(a2 + 16);
  if (!v15) {
    goto LABEL_21;
  }
LABEL_15:
  if (v15 != 1)
  {
LABEL_27:
    id v24 = [self sharedItemIdentifier];
    char v25 = sub_100428320(v24, a2);

    if (v25)
    {
      self;
      if (swift_dynamicCastObjCClass())
      {
        uint64_t v26 = *(void *)(v4 + OBJC_IVAR___ICFolderListSelectionValidator_modernContext);
        id v27 = objc_allocWithZone((Class)ICTagSelection);
        id v28 = a1;
        id v29 = [v27 initWithManagedObjectContext:v26 mode:1];
        type metadata accessor for ICQuery();
        id v30 = (void *)static ICQuery.makeQueryForNotesMatching(_:)();
        __chkstk_darwin(v30);
        NSManagedObjectContext.performAndWait<A>(_:)();

        unsigned __int8 v10 = v44;
        return v10 & 1;
      }
    }
    else
    {
      sub_100207E8C(a2);
      sub_1002695C8(v31);
      swift_bridgeObjectRelease();
      self;
      if (swift_dynamicCastObjCClass())
      {
        id v32 = *(void **)(v4 + OBJC_IVAR___ICFolderListSelectionValidator_modernContext);
        id v33 = objc_allocWithZone((Class)ICTagSelection);
        sub_100031418(0, (unint64_t *)&qword_10069E810);
        sub_10002C8EC((unint64_t *)&qword_10069FFE0, (unint64_t *)&qword_10069E810);
        id v34 = a1;
        id v35 = v32;
        Class isa = Set._bridgeToObjectiveC()().super.isa;
        id v37 = [v33 initWithManagedObjectContext:v35 includedObjectIDs:isa];

        type metadata accessor for ICQuery();
        uint64_t v38 = (void *)static ICQuery.makeQueryForNotesMatching(_:)();
        __chkstk_darwin(v38);
        NSManagedObjectContext.performAndWait<A>(_:)();
        swift_bridgeObjectRelease();

        unsigned __int8 v10 = v45;
        return v10 & 1;
      }
      swift_bridgeObjectRelease();
    }
    goto LABEL_3;
  }
  uint64_t v16 = swift_bridgeObjectRetain();
  id v12 = (id)sub_10002D5E4(v16);
  swift_bridgeObjectRelease();
  if (!v12)
  {
LABEL_23:
    uint64_t v21 = swift_bridgeObjectRetain();
    BOOL v22 = (void *)sub_10002D5E4(v21);
    swift_bridgeObjectRelease();
    if (v22)
    {
      self;
      uint64_t v23 = (void *)swift_dynamicCastObjCClass();
      if (v23)
      {
        unsigned __int8 v10 = sub_10020870C(a1, v23);

        return v10 & 1;
      }
    }
    goto LABEL_27;
  }
  self;
  uint64_t v17 = (void *)swift_dynamicCastObjCClass();
  if (!v17 || (id v18 = v17, !objc_msgSend(v17, "ic_isContainerType")))
  {

    goto LABEL_23;
  }
  self;
  uint64_t v19 = swift_dynamicCastObjCClass();
  if (v19)
  {
    __chkstk_darwin(v19);
    id v20 = a1;
    NSManagedObjectContext.performAndWait<A>(_:)();

    unsigned __int8 v10 = v43;
    return v10 & 1;
  }
  self;
  uint64_t v39 = swift_dynamicCastObjCClass();
  if (v39)
  {
    int v40 = v39;
    id v41 = a1;
    unsigned __int8 v10 = sub_100208AD8(v40, v18);

    return v10 & 1;
  }
LABEL_35:

LABEL_3:
  unsigned __int8 v10 = 0;
  return v10 & 1;
}

uint64_t sub_10002D5E4(uint64_t a1)
{
  return sub_10002D5F8(a1, (unint64_t *)&qword_1006A0020);
}

uint64_t sub_10002D5F8(uint64_t a1, unint64_t *a2)
{
  unint64_t v4 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v5 = __CocoaSet.startIndex.getter();
    uint64_t v7 = v6;
    __CocoaSet.endIndex.getter();
    char v8 = static __CocoaSet.Index.== infix(_:_:)();
    swift_bridgeObjectRelease();
    if (v8)
    {
LABEL_3:
      sub_10002DA18(v5, v7, v4 != 0);
      return 0;
    }
LABEL_7:
    sub_10002D7A8(v5, v7, v4 != 0, a1, a2);
    uint64_t v9 = v13;
    sub_10002DA18(v5, v7, v4 != 0);
    return v9;
  }
  uint64_t result = sub_10002D720(a1);
  if ((v12 & 1) == 0)
  {
    uint64_t v7 = v11;
    if (*(_DWORD *)(a1 + 36) == v11)
    {
      uint64_t v5 = result;
      if (result == 1 << *(unsigned char *)(a1 + 32)) {
        goto LABEL_3;
      }
      goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10002D720(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 72);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

void sub_10002D7A8(uint64_t a1, int a2, char a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v7 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      __CocoaSet.element(at:)();
      sub_100031418(0, a5);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
    goto LABEL_24;
  }
  if (a3) {
    goto LABEL_10;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    goto LABEL_17;
  }
  __break(1u);
LABEL_10:
  if (__CocoaSet.Index.age.getter() != *(_DWORD *)(a4 + 36))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  __CocoaSet.Index.element.getter();
  sub_100031418(0, a5);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  a5 = v17;
  swift_unknownObjectRelease();
  Swift::Int v8 = NSObject._rawHashValue(seed:)(*(void *)(a4 + 40));
  uint64_t v9 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v7 = v8 & ~v9;
  if (((*(void *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_23:

    __break(1u);
LABEL_24:
    __break(1u);
    return;
  }
  id v10 = *(id *)(*(void *)(a4 + 48) + 8 * v7);
  char v11 = static NSObject.== infix(_:_:)();

  if ((v11 & 1) == 0)
  {
    uint64_t v12 = ~v9;
    do
    {
      unint64_t v7 = (v7 + 1) & v12;
      if (((*(void *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        goto LABEL_23;
      }
      id v13 = *(id *)(*(void *)(a4 + 48) + 8 * v7);
      char v14 = static NSObject.== infix(_:_:)();
    }
    while ((v14 & 1) == 0);
  }

LABEL_17:
  uint64_t v15 = *(void **)(*(void *)(a4 + 48) + 8 * v7);

  id v16 = v15;
}

uint64_t sub_10002DA18(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_10002DA24()
{
  return (unint64_t)sub_10002B6EC(*(void *)(v0 + 16), (SEL *)&selRef_shouldSelectDefaultContainerWhenInappropriateForSelectionStateController_) & 1;
}

void sub_10002E3BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

ICViewControllerManager *__cdecl sub_10002E428(id a1, UIWindow *a2)
{
  uint64_t v2 = a2;
  objc_opt_class();
  uint64_t v3 = ICDynamicCast();

  if (v3)
  {
    unint64_t v4 = [v3 screen];
    char v5 = [v4 displayIdentity];
    if ([v5 expectsSecureRendering])
    {
      unsigned int v6 = 0;
    }
    else
    {
      unsigned int v6 = [v3 viewControllerManager];
    }
  }
  else
  {
    unsigned int v6 = 0;
  }

  return (ICViewControllerManager *)v6;
}

void sub_10002E5A8(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v3 = a1 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue;
  swift_beginAccess();
  id v10 = *(void **)v3;
  uint64_t v11 = *(void *)(v3 + 24);
  uint64_t v12 = *(void *)(v3 + 40);
  id v4 = *(id *)(v3 + 16);
  id v5 = v10;
  sub_10002E71C(v11);
  sub_10002E71C(v12);
  type metadata accessor for ICSelectionStateModel(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  OS_dispatch_queue.sync<A>(execute:)();

  sub_10002E70C(v11);
  sub_10002E70C(v12);
  swift_bridgeObjectRelease();
  uint64_t v6 = swift_bridgeObjectRelease();
  uint64_t v7 = a2(v6);

  *a3 = v7;
}

uint64_t sub_10002E70C(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_10002E71C(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t type metadata accessor for ICSelectionStateModel(uint64_t a1)
{
  return sub_10002EFBC(a1, (uint64_t *)&unk_10069D558);
}

id sub_10002E7D4()
{
  uint64_t v1 = sub_10002F214(&qword_10069D7F0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  Swift::Int v8 = (id *)((char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  id v10 = (char *)&v16 - v9;
  uint64_t v11 = v0 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection;
  swift_beginAccess();
  sub_10002F034(v11, (uint64_t)v3, &qword_10069D7F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    uint64_t v12 = &qword_10069D7F0;
    uint64_t v13 = (uint64_t)v3;
LABEL_3:
    sub_10002B754(v13, v12);
    return 0;
  }
  else
  {
    sub_10002EF54((uint64_t)v3, (uint64_t)v10, type metadata accessor for ICSelectionStateModel.ContainerSelection);
    sub_10002EF54((uint64_t)v10, (uint64_t)v8, type metadata accessor for ICSelectionStateModel.ContainerSelection);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        swift_bridgeObjectRelease();
        uint64_t v13 = (uint64_t)v8 + *(int *)(sub_10002F214(&qword_10069D688) + 48);
        uint64_t v12 = &qword_10069B310;
        goto LABEL_3;
      case 3u:
        id v14 = *v8;

        break;
      default:
        sub_10002EA18((uint64_t)v8, type metadata accessor for ICSelectionStateModel.ContainerSelection);
        return 0;
    }
  }
  return v14;
}

uint64_t sub_10002EA18(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

id sub_10002EA78()
{
  uint64_t v1 = sub_10002F214(&qword_10069D7F0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  Swift::Int v8 = (id *)((char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  id v10 = (char *)&v16 - v9;
  uint64_t v11 = v0 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection;
  swift_beginAccess();
  sub_10002F034(v11, (uint64_t)v3, &qword_10069D7F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    uint64_t v12 = &qword_10069D7F0;
    uint64_t v13 = (uint64_t)v3;
LABEL_3:
    sub_10002B754(v13, v12);
    return 0;
  }
  else
  {
    sub_10002EF54((uint64_t)v3, (uint64_t)v10, type metadata accessor for ICSelectionStateModel.ContainerSelection);
    sub_10002EF54((uint64_t)v10, (uint64_t)v8, type metadata accessor for ICSelectionStateModel.ContainerSelection);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        swift_bridgeObjectRelease();
        uint64_t v13 = (uint64_t)v8 + *(int *)(sub_10002F214(&qword_10069D688) + 48);
        uint64_t v12 = &qword_10069B310;
        goto LABEL_3;
      case 4u:
      case 5u:
        id v14 = *v8;

        break;
      default:
        sub_10002EA18((uint64_t)v8, type metadata accessor for ICSelectionStateModel.ContainerSelection);
        return 0;
    }
  }
  return v14;
}

uint64_t sub_10002ECBC()
{
  uint64_t v1 = sub_10002F214(&qword_10069D7F8);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  Swift::Int v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v18 - v9;
  uint64_t v11 = v0 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection;
  swift_beginAccess();
  sub_10002F034(v11, (uint64_t)v3, &qword_10069D7F8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_10002B754((uint64_t)v3, &qword_10069D7F8);
    return 0;
  }
  else
  {
    sub_10002EF54((uint64_t)v3, (uint64_t)v10, type metadata accessor for ICSelectionStateModel.ObjectSelection);
    sub_10002EF54((uint64_t)v10, (uint64_t)v8, type metadata accessor for ICSelectionStateModel.ObjectSelection);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 2u:
      case 5u:
        sub_10002EA18((uint64_t)v8, type metadata accessor for ICSelectionStateModel.ObjectSelection);
        return 0;
      case 3u:
        uint64_t v17 = *(void **)v8;
        uint64_t v15 = *((void *)v8 + 1);

        break;
      case 4u:
        uint64_t v15 = *(void *)v8;

        break;
      default:
        uint64_t v12 = &v8[*(int *)(sub_10002F214(&qword_10069D738) + 48)];
        uint64_t v13 = type metadata accessor for URL();
        id v14 = *(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8);
        v14(v12, v13);
        v14(v8, v13);
        return 0;
    }
  }
  return v15;
}

uint64_t sub_10002EF54(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10002EFBC(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for ICSelectionStateModel.ContainerSelection(uint64_t a1)
{
  return sub_10002EFBC(a1, qword_10069D700);
}

uint64_t type metadata accessor for ICSelectionStateModel.ObjectSelection(uint64_t a1)
{
  return sub_10002EFBC(a1, qword_10069D7B0);
}

uint64_t sub_10002F034(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10002F214(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

id sub_10002F098(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 56);
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    sub_1001DA3A0((uint64_t)&v8);
    if (!v3) {
      return [objc_allocWithZone((Class)type metadata accessor for ICSelectionStateModel(0)) init];
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v3) {
      return [objc_allocWithZone((Class)type metadata accessor for ICSelectionStateModel(0)) init];
    }
  }
  sub_10002F1B0(a1 + 64, (uint64_t)v5, &qword_1006A2AB0);
  sub_10002F1B0((uint64_t)v5, (uint64_t)&v6, &qword_1006A2AB0);
  if (v7) {
    return [objc_allocWithZone((Class)type metadata accessor for ICSelectionStateModel(0)) init];
  }
  if (v3 < 0)
  {
    __break(1u);
    return (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  id result = (id)v6;
  if (v6 < 0 || v6 >= v3) {
    return [objc_allocWithZone((Class)type metadata accessor for ICSelectionStateModel(0)) init];
  }
  if ((v2 & 0xC000000000000001) != 0) {
    return (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  if ((unint64_t)v6 < *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    return *(id *)(v2 + 8 * v6 + 32);
  }
  __break(1u);
  return result;
}

uint64_t sub_10002F1B0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10002F214(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10002F214(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

void sub_10002F258(uint64_t a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      id v3 = *(id *)a1;
      unint64_t v4 = *(void *)(a1 + 8);
      sub_10017253C((uint64_t)v3, v4);
      break;
    case 1u:
      swift_bridgeObjectRelease();
      uint64_t v5 = a1 + *(int *)(sub_10002F214(&qword_10069D688) + 48);
      uint64_t v6 = type metadata accessor for URL();
      uint64_t v11 = *(void *)(v6 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v5, 1, v6))
      {
        uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
        uint64_t v10 = v5;
        uint64_t v9 = v6;
        goto LABEL_12;
      }
      break;
    case 2u:
      uint64_t v7 = type metadata accessor for URL();
      uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
      uint64_t v9 = v7;
      uint64_t v10 = a1;
LABEL_12:
      v8(v10, v9);
      break;
    case 3u:
    case 4u:
    case 5u:

      unint64_t v2 = *(void **)(a1 + 8);

      break;
    default:
      return;
  }
}

void sub_10002F550(uint64_t a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v7 = type metadata accessor for URL();
      uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
      ((void (*)(void *__return_ptr, uint64_t, uint64_t))v8)((void *)(v7 - 8), a1, v7);
      uint64_t v5 = a1 + *(int *)(sub_10002F214(&qword_10069D738) + 48);
      uint64_t v4 = v7;
      id v3 = v8;
      goto LABEL_5;
    case 1u:
    case 2u:
      uint64_t v2 = type metadata accessor for URL();
      id v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
      uint64_t v4 = v2;
      uint64_t v5 = a1;
LABEL_5:
      v3(v5, v4);
      return;
    case 3u:

      uint64_t v6 = *(void **)(a1 + 16);
      goto LABEL_9;
    case 4u:
    case 5u:

      uint64_t v6 = *(void **)(a1 + 8);
LABEL_9:

      break;
    default:
      return;
  }
}

void sub_10002F95C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_10002FF1C(char *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *(void **)&a1[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateAccessQueue];
  uint64_t v5 = a1;
  id v6 = v4;
  sub_10002F214(a3);
  OS_dispatch_queue.sync<A>(execute:)();

  return v8;
}

char *sub_100030ACC(uint64_t a1, char a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v2[OBJC_IVAR____TtC11MobileNotes24ActivityStreamHeaderView_horizontalMargin] = 0x4030000000000000;
  *(void *)&v2[OBJC_IVAR____TtC11MobileNotes24ActivityStreamHeaderView_verticalMargin] = 0x4024000000000000;
  *(void *)&v2[OBJC_IVAR____TtC11MobileNotes24ActivityStreamHeaderView_closeButtonTopMargin] = 0x4018000000000000;
  v2[OBJC_IVAR____TtC11MobileNotes24ActivityStreamHeaderView_isCloseButtonHidden] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v2[OBJC_IVAR____TtC11MobileNotes24ActivityStreamHeaderView____lazy_storage___label] = 0;
  *(void *)&v2[OBJC_IVAR____TtC11MobileNotes24ActivityStreamHeaderView____lazy_storage___closeButton] = 0;
  swift_unknownObjectWeakAssign();
  v83.receiver = v2;
  v83.super_class = ObjectType;
  id v6 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v7 = sub_1000314B8();
  [v6 addSubview:v7];

  id v8 = (char *)v6;
  id v9 = sub_100031454();
  [v8 addSubview:v9];

  id v10 = [objc_allocWithZone((Class)UILayoutGuide) init];
  [v8 addLayoutGuide:v10];
  double v11 = *(double *)&v8[OBJC_IVAR____TtC11MobileNotes24ActivityStreamHeaderView_closeButtonTopMargin];
  if ((a2 & 1) != 0 || !a1)
  {
    uint64_t v13 = v10;
  }
  else
  {
    self;
    uint64_t v12 = (void *)swift_dynamicCastObjCClass();
    uint64_t v13 = v10;
    if (v12)
    {
      id v14 = [v12 noteEditorViewController];
      id v15 = [v14 navigationController];

      if (v15)
      {
        id v16 = [v15 navigationBar];

        [v16 bounds];
        double v18 = v17;

        unsigned int v19 = [self ic_isVision];
        double v20 = 44.0;
        if (v19) {
          double v20 = 30.0;
        }
        double v11 = (v18 - v20) * 0.5;
      }
    }
  }
  id v81 = self;
  unsigned int v21 = [v81 ic_isVision];
  id v22 = sub_100031454();
  uint64_t v23 = v22;
  if (v21)
  {
    id v24 = [v22 centerYAnchor];

    id v25 = sub_1000314B8();
    id v26 = [v25 centerYAnchor];

    id v27 = [v24 constraintEqualToAnchor:v26];
  }
  else
  {
    id v24 = [v22 topAnchor];

    id v26 = [v8 topAnchor];
    id v27 = [v24 constraintEqualToAnchor:v26 constant:v11];
  }
  id v82 = v27;

  sub_10002F214(&qword_10069BA00);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_100526F40;
  id v29 = v13;
  id v30 = [v13 topAnchor];
  id v31 = [v8 topAnchor];
  id v32 = [v30 constraintEqualToAnchor:v31];

  *(void *)(v28 + 32) = v32;
  id v33 = [v29 bottomAnchor];
  id v34 = [v8 safeAreaLayoutGuide];
  id v35 = [v34 bottomAnchor];

  id v36 = [v33 constraintEqualToAnchor:v35];
  *(void *)(v28 + 40) = v36;
  id v37 = sub_1000314B8();
  id v38 = [v37 topAnchor];

  id v39 = [v29 topAnchor];
  uint64_t v40 = OBJC_IVAR____TtC11MobileNotes24ActivityStreamHeaderView_verticalMargin;
  id v41 = [v38 constraintEqualToAnchor:v39 constant:*(double *)&v8[OBJC_IVAR____TtC11MobileNotes24ActivityStreamHeaderView_verticalMargin]];

  *(void *)(v28 + 48) = v41;
  id v42 = sub_1000314B8();
  id v43 = [v42 bottomAnchor];

  id v44 = [v29 bottomAnchor];
  id v45 = [v43 constraintEqualToAnchor:v44 constant:-*(double *)&v8[v40]];

  *(void *)(v28 + 56) = v45;
  id v46 = sub_1000314B8();
  id v47 = [v46 centerYAnchor];

  id v48 = [v29 centerYAnchor];
  id v49 = [v47 constraintEqualToAnchor:v48];

  *(void *)(v28 + 64) = v49;
  id v50 = sub_1000314B8();
  id v51 = [v50 leadingAnchor];

  id v52 = [v8 leadingAnchor];
  uint64_t v53 = OBJC_IVAR____TtC11MobileNotes24ActivityStreamHeaderView_horizontalMargin;
  id v54 = [v51 constraintEqualToAnchor:v52 constant:*(double *)&v8[OBJC_IVAR____TtC11MobileNotes24ActivityStreamHeaderView_horizontalMargin]];

  *(void *)(v28 + 72) = v54;
  id v55 = sub_1000314B8();
  id v56 = [v55 trailingAnchor];

  id v57 = sub_100031454();
  id v58 = [v57 leadingAnchor];

  id v59 = [v56 constraintEqualToAnchor:v58 constant:-*(double *)&v8[v53]];
  *(void *)(v28 + 80) = v59;
  id v60 = sub_100031454();
  id v61 = [v60 trailingAnchor];

  id v62 = [v8 trailingAnchor];
  unsigned int v63 = [v81 ic_isVision];
  double v64 = 6.0;
  if (v63) {
    double v64 = 12.0;
  }
  id v65 = [v61 constraintEqualToAnchor:v62 constant:-v64];

  *(void *)(v28 + 88) = v65;
  id v66 = sub_100031454();
  id v67 = [v66 widthAnchor];

  unsigned int v68 = [v81 ic_isVision];
  double v69 = 44.0;
  if (v68) {
    double v69 = 30.0;
  }
  id v70 = [v67 constraintEqualToConstant:v69];

  *(void *)(v28 + 96) = v70;
  id v71 = sub_100031454();
  id v72 = [v71 heightAnchor];

  id v73 = sub_100031454();
  id v74 = [v73 widthAnchor];

  id v75 = [v72 constraintEqualToAnchor:v74];
  *(void *)(v28 + 104) = v75;
  specialized Array._endMutation()();
  id v76 = v82;
  swift_bridgeObjectRetain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  id v77 = self;
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_bridgeObjectRelease();
  sub_100031418(0, (unint64_t *)&qword_1006A5260);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v77 activateConstraints:isa];

  sub_10001A6F4();
  sub_100031418(0, (unint64_t *)&qword_10069C280);
  static UITraitCollection.traitsAffectingSizeAndColor.getter();
  UIView.registerForTraitChanges(_:action:)();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  id v79 = sub_100031454();
  [v79 setHidden:v8[OBJC_IVAR____TtC11MobileNotes24ActivityStreamHeaderView_isCloseButtonHidden]];

  swift_unknownObjectRelease();
  return v8;
}

uint64_t sub_100031418(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

id sub_100031454()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes24ActivityStreamHeaderView____lazy_storage___closeButton;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11MobileNotes24ActivityStreamHeaderView____lazy_storage___closeButton];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC11MobileNotes24ActivityStreamHeaderView____lazy_storage___closeButton];
  }
  else
  {
    id v4 = sub_100016F6C(v0);
    uint64_t v5 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1000314B8()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes24ActivityStreamHeaderView____lazy_storage___label;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC11MobileNotes24ActivityStreamHeaderView____lazy_storage___label);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC11MobileNotes24ActivityStreamHeaderView____lazy_storage___label);
  }
  else
  {
    id v4 = sub_1000148AC();
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_100031D30(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_100031D5C()
{
  return sub_100031D8C(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_100031D64()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100031D8C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_100031DB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100031DC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100031DD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100031DE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100031DF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100031E04(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100031E14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100031E24(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100031E34(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100031E44(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100031E54(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100031E64(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100031E74(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100031E84(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100031E94(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100031EA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100031EB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100031EC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100031ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100031EE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100031EF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100031F04(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100031F14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100031F24(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100031F34(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100031F44(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100031F54(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100031F64(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100031F74(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100031F84(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100031F94(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100031FA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100031FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100031FC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100031FD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100031FE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100031FF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100032004(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100032014(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100032024(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100032034(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100032044(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100032054(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100032064(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100032074(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100032084(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100032094(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000320A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000320B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000320C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000320D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000320E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000320F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100032104(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100032114(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100032124(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100032134(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100032144(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100032154(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100032164(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100032174(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100032184(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100032194(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000321A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000321B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000321C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000321D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000321E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000321F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100032204(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100032214(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100032224(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100032234(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100032244(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100032254(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100032264(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100032274(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

BOOL sub_100032284(id a1, ICViewControllerManager *a2, unint64_t a3, BOOL *a4)
{
  return [(ICViewControllerManager *)a2 isWelcomeScreenVisible];
}

uint64_t sub_1000322A0()
{
  return swift_release();
}

uint64_t sub_1000322A8()
{
  return swift_release();
}

uint64_t sub_1000322B0()
{
  return swift_release();
}

uint64_t sub_1000322B8()
{
  return swift_release();
}

uint64_t sub_1000322C0()
{
  return swift_release();
}

uint64_t sub_1000322C8()
{
  return swift_release();
}

uint64_t sub_1000322D0()
{
  return swift_release();
}

uint64_t sub_1000322D8()
{
  return swift_release();
}

uint64_t sub_1000322E0()
{
  return swift_release();
}

uint64_t sub_1000322E8()
{
  return swift_release();
}

uint64_t sub_1000322F0()
{
  return swift_release();
}

uint64_t sub_1000322F8()
{
  return swift_release();
}

uint64_t sub_100032300()
{
  return swift_release();
}

uint64_t sub_100032308()
{
  return swift_release();
}

uint64_t sub_100032310()
{
  return swift_release();
}

uint64_t sub_100032318()
{
  return swift_release();
}

uint64_t sub_100032320()
{
  return swift_release();
}

uint64_t sub_100032328()
{
  return swift_release();
}

uint64_t sub_100032330()
{
  return swift_release();
}

uint64_t sub_100032338()
{
  return swift_release();
}

uint64_t sub_100032340()
{
  return swift_release();
}

uint64_t sub_100032348()
{
  return swift_release();
}

uint64_t sub_100032350()
{
  return swift_release();
}

uint64_t sub_100032358()
{
  return swift_release();
}

uint64_t sub_100032360()
{
  return swift_release();
}

uint64_t sub_100032368()
{
  return swift_release();
}

uint64_t sub_100032370()
{
  return swift_release();
}

uint64_t sub_100032378()
{
  return swift_release();
}

uint64_t sub_100032380()
{
  return swift_release();
}

uint64_t sub_100032388()
{
  return swift_release();
}

uint64_t sub_100032390()
{
  return swift_release();
}

uint64_t sub_100032398()
{
  return swift_release();
}

uint64_t sub_1000323A0()
{
  return swift_release();
}

uint64_t sub_1000323A8()
{
  return swift_release();
}

uint64_t sub_1000323B0()
{
  return swift_release();
}

uint64_t sub_1000323B8()
{
  return swift_release();
}

uint64_t sub_1000323C0()
{
  return swift_release();
}

uint64_t sub_1000323C8()
{
  return swift_release();
}

uint64_t sub_1000323D0()
{
  return swift_release();
}

uint64_t sub_1000323D8()
{
  return swift_release();
}

uint64_t sub_1000323E0()
{
  return swift_release();
}

uint64_t sub_1000323E8()
{
  return swift_release();
}

uint64_t sub_1000323F0()
{
  return swift_release();
}

uint64_t sub_1000323F8()
{
  return swift_release();
}

uint64_t sub_100032400()
{
  return swift_release();
}

uint64_t sub_100032408()
{
  return swift_release();
}

uint64_t sub_100032410()
{
  return swift_release();
}

uint64_t sub_100032418()
{
  return swift_release();
}

uint64_t sub_100032420()
{
  return swift_release();
}

uint64_t sub_100032428()
{
  return swift_release();
}

uint64_t sub_100032430()
{
  return swift_release();
}

uint64_t sub_100032438()
{
  return swift_release();
}

uint64_t sub_100032440()
{
  return swift_release();
}

uint64_t sub_100032448()
{
  return swift_release();
}

uint64_t sub_100032450()
{
  return swift_release();
}

uint64_t sub_100032458()
{
  return swift_release();
}

uint64_t sub_100032460()
{
  return swift_release();
}

uint64_t sub_100032468()
{
  return swift_release();
}

uint64_t sub_100032470()
{
  return swift_release();
}

uint64_t sub_100032478()
{
  return swift_release();
}

uint64_t sub_100032480()
{
  return swift_release();
}

uint64_t sub_100032488()
{
  return swift_release();
}

uint64_t sub_100032490()
{
  return swift_release();
}

uint64_t sub_100032498()
{
  return swift_release();
}

uint64_t sub_1000324A0()
{
  return swift_release();
}

uint64_t sub_1000324A8()
{
  return swift_release();
}

uint64_t sub_1000324B0()
{
  return swift_release();
}

uint64_t sub_1000324B8()
{
  return swift_release();
}

uint64_t sub_1000324C0()
{
  return swift_release();
}

uint64_t sub_1000324C8()
{
  return swift_release();
}

uint64_t sub_1000324D0()
{
  return swift_release();
}

uint64_t sub_1000324D8()
{
  return swift_release();
}

uint64_t sub_1000324E0()
{
  return swift_release();
}

uint64_t sub_1000324E8()
{
  return swift_release();
}

uint64_t sub_1000324F0()
{
  return swift_release();
}

uint64_t sub_1000324F8()
{
  return swift_release();
}

uint64_t sub_100032500()
{
  return swift_release();
}

uint64_t type metadata accessor for CollaborationButtonsController()
{
  uint64_t result = qword_1006A4750;
  if (!qword_1006A4750) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t static ChangeFolderViewSettingIntent.persistentIdentifier.getter()
{
  return 0xD00000000000001DLL;
}

unint64_t static ApplyFormattingIntent.persistentIdentifier.getter()
{
  return 0xD000000000000019;
}

unint64_t static DeleteTagsIntent.persistentIdentifier.getter()
{
  return 0xD000000000000014;
}

unint64_t static LockNoteIntent.persistentIdentifier.getter()
{
  return 0xD000000000000012;
}

uint64_t type metadata accessor for CollaborationParticipantDataSource()
{
  uint64_t result = qword_1006A8A60;
  if (!qword_1006A8A60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t static OpenTopLevelFolderIntent.persistentIdentifier.getter()
{
  return 0xD00000000000001CLL;
}

unint64_t static SetParagraphStyleIntent.persistentIdentifier.getter()
{
  return 0xD00000000000001BLL;
}

unint64_t static OpenChecklistItemIntent.persistentIdentifier.getter()
{
  return 0xD00000000000001BLL;
}

unint64_t static OpenAttachmentIntent.persistentIdentifier.getter()
{
  return 0xD000000000000018;
}

unint64_t static InsertNoteLinkIntent.persistentIdentifier.getter()
{
  return 0xD000000000000018;
}

unint64_t static OpenAccountIntent.persistentIdentifier.getter()
{
  return 0xD000000000000015;
}

unint64_t static OpenFolderIntent.persistentIdentifier.getter()
{
  return 0xD000000000000014;
}

unint64_t static CreateNoteIntent.persistentIdentifier.getter()
{
  return 0xD000000000000014;
}

unint64_t static OpenTableIntent.persistentIdentifier.getter()
{
  return 0xD000000000000013;
}

unint64_t static OpenNoteIntent.persistentIdentifier.getter()
{
  return 0xD000000000000012;
}

uint64_t sub_100032730()
{
  return *(void *)v0;
}

unint64_t static OpenNotesViewIntent.persistentIdentifier.getter()
{
  return 0xD000000000000019;
}

unint64_t static MoveNotesToFolderIntent.persistentIdentifier.getter()
{
  return 0xD00000000000001BLL;
}

void type metadata accessor for Name(uint64_t a1)
{
}

void sub_100032788(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t type metadata accessor for FastSyncEditorActivityChangeHandler(uint64_t a1)
{
  return sub_10002EFBC(a1, qword_1006A4050);
}

unint64_t static RemoveLockFromNoteIntent.persistentIdentifier.getter()
{
  return 0xD00000000000001CLL;
}

unint64_t static ChangeTagSelectionIntent.persistentIdentifier.getter()
{
  return 0xD000000000000018;
}

unint64_t static ReplaceSelectionIntent.persistentIdentifier.getter()
{
  return 0xD00000000000001ALL;
}

unint64_t static StartRecordingIntent.persistentIdentifier.getter()
{
  return 0xD000000000000018;
}

unint64_t static ScanDocumentIntent.persistentIdentifier.getter()
{
  return 0xD000000000000016;
}

const char *sub_10003287C()
{
  return "Link";
}

unint64_t static TakePhotoIntent.persistentIdentifier.getter()
{
  return 0xD000000000000013;
}

unint64_t static OpenTagIntent.persistentIdentifier.getter()
{
  return 0xD000000000000011;
}

unint64_t sub_1000328C8()
{
  return 0xD000000000000023;
}

uint64_t sub_10003293C(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t *sub_100032974(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

void sub_1000329DC(id a1)
{
  uint64_t v1 = +[ICNAServerEnvironment fallbackDefaultTargetURLFromPrefs];
}

uint64_t sub_100032A10(uint64_t a1)
{
  if (objc_msgSend(*(id *)(a1 + 32), "ic_isViewVisible")) {
    [*(id *)(a1 + 32) updateToolbarAnimated:0];
  }
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    uint64_t v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

void sub_100032A74(id a1)
{
  id v1 = +[AVURLAsset audiovisualTypes];
}

NSString *__cdecl sub_100032A9C(id a1, NSURL *a2)
{
  return [(NSURL *)a2 absoluteString];
}

NSURL *__cdecl sub_100032AA4(id a1, NSString *a2)
{
  return +[NSURL URLWithString:a2];
}

void sub_100032AB4(id a1)
{
  id v1 = objc_alloc_init(ICNACloudOperationEventReporter);
  uint64_t v2 = (void *)qword_1006AA150;
  qword_1006AA150 = (uint64_t)v1;
}

void sub_100032AF0(id a1)
{
  id v1 = objc_alloc_init(ICCollaborationUIController);
  uint64_t v2 = (void *)qword_1006AA268;
  qword_1006AA268 = (uint64_t)v1;
}

void sub_100032B2C(id a1)
{
  id v1 = objc_alloc_init(ICApplicationTestingHelper);
  uint64_t v2 = (void *)qword_1006AA2B0;
  qword_1006AA2B0 = (uint64_t)v1;
}

void sub_100032B68(id a1)
{
  id v1 = objc_alloc_init(NotesApp);
  uint64_t v2 = (void *)qword_1006AA328;
  qword_1006AA328 = (uint64_t)v1;
}

id sub_100032BA4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2) {
    (*(void (**)(void))(v2 + 16))();
  }
  [*(id *)(a1 + 32) setShouldAvoidEditingChanges:0];
  uint64_t v3 = *(void **)(a1 + 32);

  return [v3 setEditing:0];
}

id sub_100032BFC(uint64_t a1)
{
  [*(id *)(a1 + 32) didUpdateModelForSelectionStateController:*(void *)(a1 + 40)];
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(unsigned __int8 *)(a1 + 64);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 56);

  return [v2 setupViewsFromWindowStateArchive:v4 systemPaperShowModernAccountAlert:v3 completion:v5];
}

void sub_100032C5C(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_100032C78(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_100032C98(uint64_t a1@<X8>)
{
  *(void *)(v1 - 8) = a1;
}

void sub_100032CB4(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

uint64_t sub_100032CD0(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_100032CE4(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0xCu);
}

void sub_100032D08(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

void sub_100032D28(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x16u);
}

void sub_100032D48(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_debug_impl(a1, log, OS_LOG_TYPE_DEBUG, a4, (uint8_t *)va, 0x16u);
}

void sub_100032D68(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 2u);
}

void sub_100032D84(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void sub_100032DA4(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

void sub_100032DC0(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_debug_impl(a1, v4, OS_LOG_TYPE_DEBUG, a4, v5, 0xCu);
}

uint64_t sub_100032E28(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

_OWORD *sub_100032E84(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_100032E94(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10017B61C;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1006A40D0 + dword_1006A40D0);
  return v6(a1, v4);
}

uint64_t sub_100032F4C(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1003118F8;
  return v6(a1);
}

unint64_t sub_100033028(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = AnyHashable._rawHashValue(seed:)(*(void *)(v2 + 40));

  return sub_10003306C(a1, v4);
}

unint64_t sub_10003306C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      sub_100033188(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v8);
      char v6 = static AnyHashable.== infix(_:_:)();
      sub_100033134((uint64_t)v8);
      if (v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_100033134(uint64_t a1)
{
  return a1;
}

uint64_t sub_100033188(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1000331E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002F214(&qword_1006A47A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

NSString sub_10003324C()
{
  NSString result = String._bridgeToObjectiveC()();
  static NSNotificationName.TagCollectionViewWillRenameTag = (uint64_t)result;
  return result;
}

NSString sub_100033284()
{
  NSString result = String._bridgeToObjectiveC()();
  static NSNotificationName.TagCollectionViewDidRenameTag = (uint64_t)result;
  return result;
}

uint64_t sub_10003343C(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_14;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v7 = 0;
  if (v6)
  {
    while (1)
    {
      id v8 = (a3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a3 + 8 * v7 + 32);
      uint64_t v9 = v8;
      id v13 = v8;
      char v10 = a1(&v13);

      if (v3 || (v10 & 1) != 0) {
        break;
      }
      uint64_t v11 = v7 + 1;
      if (__OFADD__(v7, 1))
      {
        __break(1u);
LABEL_14:
        swift_bridgeObjectRetain();
        uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v7 = 0;
        if (!v6) {
          return v7;
        }
      }
      else
      {
        ++v7;
        if (v11 == v6) {
          return 0;
        }
      }
    }
  }
  return v7;
}

unint64_t sub_100033558(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10002F214(&qword_10069C490);
    uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
    for (uint64_t i = (uint64_t *)(a1 + 40); ; i += 2)
    {
      uint64_t v5 = *(i - 1);
      uint64_t v6 = *i;
      unint64_t result = sub_1002B6E5C(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v9 = 8 * result;
      *(void *)(v3[6] + v9) = v5;
      *(void *)(v3[7] + v9) = v6;
      uint64_t v10 = v3[2];
      BOOL v11 = __OFADD__(v10, 1);
      uint64_t v12 = v10 + 1;
      if (v11) {
        goto LABEL_10;
      }
      v3[2] = v12;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

void sub_100033634()
{
  if (!qword_1006A4770)
  {
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1006A4770);
    }
  }
}

void sub_10003368C()
{
  if (!qword_1006A4778)
  {
    sub_10001DFF4(&qword_1006A0090);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1006A4778);
    }
  }
}

ValueMetadata *type metadata accessor for ICSelectionStateUtilityConfiguration()
{
  return &type metadata for ICSelectionStateUtilityConfiguration;
}

void sub_1000336F8()
{
  sub_10003368C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1000337B0()
{
  sub_100005808();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t type metadata accessor for ActivityStreamNavigationController()
{
  uint64_t result = qword_1006A6C20;
  if (!qword_1006A6C20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000338E0()
{
  return type metadata accessor for ActivityStreamNavigationController();
}

NSString sub_100033978()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1006CDE50 = (uint64_t)result;
  return result;
}

uint64_t sub_1000339B0()
{
  uint64_t result = sub_100011B44();
  byte_1006CDE48 = result & 1;
  return result;
}

const char *sub_1000339D4(uint64_t a1)
{
  uint64_t v3 = a1 + 16;
  uint64_t result = *(const char **)(a1 + 16);
  if (*(unsigned char *)(v3 + 17) == 1)
  {
    swift_beginAccess();
    uint64_t result = "sharePlayLite";
    *(void *)(a1 + 16) = "sharePlayLite";
    *(void *)(a1 + 24) = 13;
    *(_WORD *)(a1 + 32) = 2;
  }
  return result;
}

uint64_t sub_100033A48()
{
  return type metadata accessor for CollaborationButtonsController();
}

uint64_t sub_100033A50()
{
  return sub_10000C010();
}

uint64_t sub_100033A6C()
{
  return sub_100004990();
}

unint64_t sub_100033A74()
{
  unint64_t result = qword_10069E0E8;
  if (!qword_10069E0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069E0E8);
  }
  return result;
}

unint64_t sub_100033AC8()
{
  unint64_t result = qword_10069E310;
  if (!qword_10069E310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10069E310);
  }
  return result;
}

unint64_t sub_100033B1C()
{
  unint64_t result = qword_10069E0F0;
  if (!qword_10069E0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069E0F0);
  }
  return result;
}

uint64_t type metadata accessor for ICSelectionStateController()
{
  uint64_t result = qword_1006A2A90;
  if (!qword_1006A2A90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100033BC4()
{
  return type metadata accessor for ICSelectionStateController();
}

uint64_t sub_100033BE0()
{
  return sub_100015C50(*(void **)(v0 + 16), *(char **)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_100033BEC()
{
  return sub_1000065B8(*(void *)(v0 + 16), *(void **)(v0 + 24), 0);
}

void sub_100033C54(uint64_t *a1@<X8>)
{
  sub_10001D024(*(void *)(v1 + 16), a1);
}

void sub_100033CAC(uint64_t *a1@<X8>)
{
  sub_10002E5A8(*(void *)(v1 + 16), (uint64_t (*)(uint64_t))sub_100008000, a1);
}

void sub_100033D10(void *a1@<X8>)
{
  sub_10001CE8C(*(void *)(v1 + 16), &OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentActivityStreamSelection, a1);
}

uint64_t sub_100033D48()
{
  return sub_100017F4C(*(void *)(v0 + 16));
}

void sub_100033D50(void *a1@<X8>)
{
  sub_100014174(*(void *)(v1 + 16), a1);
}

uint64_t type metadata accessor for FastSyncPresenceController(uint64_t a1)
{
  return sub_10002EFBC(a1, (uint64_t *)&unk_1006A3FA8);
}

uint64_t sub_100033D8C()
{
  return type metadata accessor for FastSyncPresenceController(0);
}

uint64_t sub_100033D94(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_100161724;
  return sub_10000D090(a1, v4, v5, v6);
}

uint64_t sub_100033E4C@<X0>(char *a1@<X8>)
{
  type metadata accessor for Logger();

  return sub_1000133B0(a1);
}

unint64_t sub_100033ECC()
{
  unint64_t result = qword_10069C7B0;
  if (!qword_10069C7B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069C7B0);
  }
  return result;
}

const char *sub_100033F20()
{
  return "TelephonyUtilities";
}

unint64_t sub_100033F34()
{
  unint64_t result = qword_1006A1DE8;
  if (!qword_1006A1DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A1DE8);
  }
  return result;
}

unint64_t sub_100033F88()
{
  unint64_t result = qword_10069E460;
  if (!qword_10069E460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10069E460);
  }
  return result;
}

unint64_t sub_100033FDC()
{
  unint64_t result = qword_1006A1DF0;
  if (!qword_1006A1DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A1DF0);
  }
  return result;
}

unint64_t sub_100034038()
{
  unint64_t result = qword_1006A32F0;
  if (!qword_1006A32F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A32F0);
  }
  return result;
}

unint64_t sub_10003408C()
{
  unint64_t result = qword_10069E388;
  if (!qword_10069E388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10069E388);
  }
  return result;
}

unint64_t sub_1000340E0()
{
  unint64_t result = qword_1006A32F8;
  if (!qword_1006A32F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A32F8);
  }
  return result;
}

unint64_t sub_10003413C()
{
  unint64_t result = qword_10069FB70;
  if (!qword_10069FB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069FB70);
  }
  return result;
}

unint64_t sub_100034190()
{
  unint64_t result = qword_10069E448;
  if (!qword_10069E448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10069E448);
  }
  return result;
}

unint64_t sub_1000341E4()
{
  unint64_t result = qword_10069FB78;
  if (!qword_10069FB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069FB78);
  }
  return result;
}

uint64_t type metadata accessor for ActivityStreamHeaderView()
{
  return self;
}

unint64_t sub_100034264()
{
  unint64_t result = qword_1006A0C50;
  if (!qword_1006A0C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0C50);
  }
  return result;
}

unint64_t sub_1000342B8()
{
  unint64_t result = qword_10069E908;
  if (!qword_10069E908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069E908);
  }
  return result;
}

unint64_t sub_10003430C()
{
  unint64_t result = qword_1006A0C58;
  if (!qword_1006A0C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0C58);
  }
  return result;
}

unint64_t sub_100034368()
{
  unint64_t result = qword_1006A6890;
  if (!qword_1006A6890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A6890);
  }
  return result;
}

unint64_t sub_1000343BC()
{
  unint64_t result = qword_10069E3D0;
  if (!qword_10069E3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10069E3D0);
  }
  return result;
}

unint64_t sub_100034410()
{
  unint64_t result = qword_1006A6898;
  if (!qword_1006A6898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A6898);
  }
  return result;
}

unint64_t sub_10003446C()
{
  unint64_t result = qword_1006A5698;
  if (!qword_1006A5698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5698);
  }
  return result;
}

unint64_t sub_1000344C0()
{
  unint64_t result = qword_10069E8F8;
  if (!qword_10069E8F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069E8F8);
  }
  return result;
}

unint64_t sub_100034514()
{
  unint64_t result = qword_1006A56A0;
  if (!qword_1006A56A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A56A0);
  }
  return result;
}

uint64_t sub_100034570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100336E5C);
}

void sub_100034584()
{
  if (!qword_1006A3FB8)
  {
    type metadata accessor for FastSyncControllerPool(255);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1006A3FB8);
    }
  }
}

uint64_t type metadata accessor for FastSyncControllerPool(uint64_t a1)
{
  return sub_10002EFBC(a1, qword_1006A36A8);
}

unint64_t sub_1000345FC()
{
  unint64_t result = qword_1006A0C10;
  if (!qword_1006A0C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0C10);
  }
  return result;
}

unint64_t sub_100034650()
{
  unint64_t result = qword_10069E2F8;
  if (!qword_10069E2F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10069E2F8);
  }
  return result;
}

unint64_t sub_1000346A4()
{
  unint64_t result = qword_1006A0C18;
  if (!qword_1006A0C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0C18);
  }
  return result;
}

unint64_t sub_100034700()
{
  unint64_t result = qword_10069E028;
  if (!qword_10069E028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069E028);
  }
  return result;
}

unint64_t sub_100034754()
{
  unint64_t result = qword_10069E018;
  if (!qword_10069E018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069E018);
  }
  return result;
}

unint64_t sub_1000347A8()
{
  unint64_t result = qword_10069E030;
  if (!qword_10069E030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069E030);
  }
  return result;
}

unint64_t sub_100034804()
{
  unint64_t result = qword_1006A3B00;
  if (!qword_1006A3B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A3B00);
  }
  return result;
}

unint64_t sub_100034858()
{
  unint64_t result = qword_10069E3B8;
  if (!qword_10069E3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10069E3B8);
  }
  return result;
}

unint64_t sub_1000348AC()
{
  unint64_t result = qword_1006A3B08;
  if (!qword_1006A3B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A3B08);
  }
  return result;
}

unint64_t sub_100034908()
{
  unint64_t result = qword_1006A7D50;
  if (!qword_1006A7D50)
  {
    type metadata accessor for NoteEditorActionMenu();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A7D50);
  }
  return result;
}

unint64_t sub_10003495C()
{
  unint64_t result = qword_1006A5830;
  if (!qword_1006A5830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5830);
  }
  return result;
}

unint64_t sub_1000349B0()
{
  unint64_t result = qword_10069E880;
  if (!qword_10069E880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069E880);
  }
  return result;
}

unint64_t sub_100034A04()
{
  unint64_t result = qword_1006A5838;
  if (!qword_1006A5838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5838);
  }
  return result;
}

unint64_t sub_100034A60()
{
  unint64_t result = qword_1006A94A8;
  if (!qword_1006A94A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A94A8);
  }
  return result;
}

unint64_t sub_100034AB4()
{
  unint64_t result = qword_10069E478;
  if (!qword_10069E478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10069E478);
  }
  return result;
}

unint64_t sub_100034B08()
{
  unint64_t result = qword_1006A94B0;
  if (!qword_1006A94B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A94B0);
  }
  return result;
}

unint64_t sub_100034B64()
{
  unint64_t result = qword_10069C030;
  if (!qword_10069C030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069C030);
  }
  return result;
}

unint64_t sub_100034BB8()
{
  unint64_t result = qword_10069E3A0;
  if (!qword_10069E3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10069E3A0);
  }
  return result;
}

unint64_t sub_100034C0C()
{
  unint64_t result = qword_10069C038;
  if (!qword_10069C038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069C038);
  }
  return result;
}

unint64_t sub_100034C68()
{
  unint64_t result = qword_1006A0B80;
  if (!qword_1006A0B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0B80);
  }
  return result;
}

unint64_t sub_100034CBC()
{
  unint64_t result = qword_10069E3E8;
  if (!qword_10069E3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10069E3E8);
  }
  return result;
}

unint64_t sub_100034D10()
{
  unint64_t result = qword_1006A0B88;
  if (!qword_1006A0B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A0B88);
  }
  return result;
}

void sub_100034D6C()
{
  sub_1002F98AC(*(unsigned char *)(v0 + 16), *(void *)(v0 + 24), (char **)(v0 + 32), *(unsigned char *)(v0 + 40));
}

void sub_100034D80()
{
  sub_100012778(*(unsigned char *)(v0 + 16), *(void *)(v0 + 24), *(char **)(v0 + 32), *(unsigned char *)(v0 + 40));
}

uint64_t sub_100034D90()
{
  return sub_100034D98(*(void **)(v0 + 16));
}

uint64_t sub_100034D98(void *a1)
{
  uint64_t v2 = sub_10002F214(&qword_10069D7F8);
  uint64_t result = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v6 = a1[10];
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v7) {
      return result;
    }
  }
  else if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    return result;
  }
  unint64_t v8 = a1[7];
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v25 < 1) {
      return result;
    }
  }
  else if (*(uint64_t *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) < 1)
  {
    return result;
  }
  unint64_t v9 = a1[7];
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v10 = result;
    if (result) {
      goto LABEL_9;
    }
LABEL_27:
    return swift_bridgeObjectRelease();
  }
  uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v10) {
    goto LABEL_27;
  }
LABEL_9:
  if (v10 >= 1)
  {
    uint64_t v11 = 0;
    unint64_t v28 = v9;
    unint64_t v29 = v9 & 0xC000000000000001;
    uint64_t v27 = v10;
    while (1)
    {
      if (v29) {
        id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v13 = *(id *)(v9 + 8 * v11 + 32);
      }
      id v14 = v13;
      id v15 = sub_1000270B4(1, 1);
      id v31 = v15;
      id v16 = (void (*)(char **))a1[3];
      if (v16)
      {
        double v17 = v15;
        id v30 = v15;
        sub_10002E71C((uint64_t)v16);
        double v18 = v17;
        v16(&v30);
        sub_10002E70C((uint64_t)v16);
      }
      __chkstk_darwin(v15);
      *(&v26 - 2) = (uint64_t)a1;
      *(&v26 - 1) = (uint64_t)&v31;
      uint64_t v19 = sub_100006070(sub_1002FC1D4, (uint64_t)(&v26 - 4));
      uint64_t v20 = v19;
      unint64_t v21 = a1[10];
      if (v21 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v22 < v20)
        {
LABEL_22:
          __break(1u);
          return swift_bridgeObjectRelease();
        }
      }
      else
      {
        uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v22 < v19) {
          goto LABEL_22;
        }
      }
      sub_1000090DC(v20, v22);
      uint64_t v23 = (uint64_t)&v31[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection];
      swift_beginAccess();
      sub_10002F034(v23, (uint64_t)v5, &qword_10069D7F8);
      uint64_t v24 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
      LODWORD(v23) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v5, 1, v24);
      sub_10002B754((uint64_t)v5, &qword_10069D7F8);
      if (v23 != 1)
      {
        sub_10002F214((uint64_t *)&unk_1006A2AA0);
        Array.prepend(_:)();
      }
      ++v11;
      uint64_t v12 = v31;

      unint64_t v9 = v28;
      if (v27 == v11) {
        return swift_bridgeObjectRelease();
      }
    }
  }
  __break(1u);
  return result;
}

void sub_10003516C()
{
  long long v1 = *(_OWORD *)(v0 + 64);
  v3[2] = *(_OWORD *)(v0 + 48);
  v3[3] = v1;
  v3[4] = *(_OWORD *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 96);
  long long v2 = *(_OWORD *)(v0 + 32);
  v3[0] = *(_OWORD *)(v0 + 16);
  v3[1] = v2;
  sub_100008DAC((uint64_t)v3);
}

unint64_t sub_1000351B0()
{
  unint64_t result = qword_1006A3A78;
  if (!qword_1006A3A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A3A78);
  }
  return result;
}

unint64_t sub_100035204()
{
  unint64_t result = qword_10069E328;
  if (!qword_10069E328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10069E328);
  }
  return result;
}

unint64_t sub_100035258()
{
  unint64_t result = qword_1006A3A80;
  if (!qword_1006A3A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A3A80);
  }
  return result;
}

unint64_t sub_1000352B4()
{
  unint64_t result = qword_10069E240;
  if (!qword_10069E240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069E240);
  }
  return result;
}

unint64_t sub_100035308()
{
  unint64_t result = qword_1006A9070;
  if (!qword_1006A9070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A9070);
  }
  return result;
}

unint64_t sub_10003535C()
{
  unint64_t result = qword_10069E248;
  if (!qword_10069E248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069E248);
  }
  return result;
}

uint64_t sub_1000353B8()
{
  return sub_1000190D4(&qword_10069EF18, (void (*)(uint64_t))type metadata accessor for AttachmentEntity);
}

uint64_t sub_100035400()
{
  return sub_1000190D4(&qword_10069EF10, (void (*)(uint64_t))type metadata accessor for AttachmentEntity);
}

uint64_t sub_100035448()
{
  return sub_1000190D4(&qword_10069EEC0, (void (*)(uint64_t))type metadata accessor for AttachmentEntity);
}

uint64_t sub_100035490()
{
  return sub_1000190D4(&qword_10069EEB8, (void (*)(uint64_t))type metadata accessor for AttachmentEntity);
}

uint64_t sub_1000354D8()
{
  return sub_1000190D4(&qword_10069EEC8, (void (*)(uint64_t))type metadata accessor for AttachmentEntity);
}

uint64_t sub_100035520()
{
  return sub_1000190D4(&qword_10069C568, (void (*)(uint64_t))&type metadata accessor for AttachmentID);
}

uint64_t sub_100035568()
{
  return sub_1000190D4(&qword_10069EEE0, (void (*)(uint64_t))type metadata accessor for AttachmentEntity);
}

uint64_t sub_1000355B0()
{
  return sub_1000190D4(&qword_10069EEF0, (void (*)(uint64_t))type metadata accessor for AttachmentEntity);
}

unint64_t sub_1000355F8()
{
  unint64_t result = qword_10069FC10;
  if (!qword_10069FC10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069FC10);
  }
  return result;
}

unint64_t sub_10003564C()
{
  unint64_t result = qword_10069E4C0;
  if (!qword_10069E4C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069E4C0);
  }
  return result;
}

unint64_t sub_1000356A0()
{
  unint64_t result = qword_10069FC18;
  if (!qword_10069FC18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069FC18);
  }
  return result;
}

unint64_t sub_1000356FC()
{
  unint64_t result = qword_1006A1FD8;
  if (!qword_1006A1FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A1FD8);
  }
  return result;
}

unint64_t sub_100035750()
{
  unint64_t result = qword_10069E418;
  if (!qword_10069E418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10069E418);
  }
  return result;
}

unint64_t sub_1000357A4()
{
  unint64_t result = qword_1006A1FE0;
  if (!qword_1006A1FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A1FE0);
  }
  return result;
}

unint64_t sub_100035800()
{
  unint64_t result = qword_1006A7BF0;
  if (!qword_1006A7BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A7BF0);
  }
  return result;
}

unint64_t sub_100035854()
{
  unint64_t result = qword_10069E200;
  if (!qword_10069E200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069E200);
  }
  return result;
}

unint64_t sub_1000358A8()
{
  unint64_t result = qword_1006A7BF8;
  if (!qword_1006A7BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A7BF8);
  }
  return result;
}

unint64_t sub_100035904()
{
  unint64_t result = qword_10069DE70;
  if (!qword_10069DE70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DE70);
  }
  return result;
}

unint64_t sub_100035958()
{
  unint64_t result = qword_10069E340;
  if (!qword_10069E340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10069E340);
  }
  return result;
}

unint64_t sub_1000359AC()
{
  unint64_t result = qword_10069DE78;
  if (!qword_10069DE78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DE78);
  }
  return result;
}

unint64_t sub_100035A08()
{
  unint64_t result = qword_1006A7AF0;
  if (!qword_1006A7AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A7AF0);
  }
  return result;
}

unint64_t sub_100035A5C()
{
  unint64_t result = qword_10069E430;
  if (!qword_10069E430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10069E430);
  }
  return result;
}

unint64_t sub_100035AB0()
{
  unint64_t result = qword_1006A7AF8;
  if (!qword_1006A7AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A7AF8);
  }
  return result;
}

uint64_t sub_100035B0C()
{
  return sub_100012334(&qword_1006A3C28, (void (*)(uint64_t))type metadata accessor for NoteEntity);
}

uint64_t sub_100035B54()
{
  return sub_100012334(&qword_1006A3C20, (void (*)(uint64_t))type metadata accessor for NoteEntity);
}

uint64_t sub_100035B9C()
{
  return sub_100012334(&qword_1006A3BE0, (void (*)(uint64_t))type metadata accessor for NoteEntity);
}

uint64_t sub_100035BE4()
{
  return sub_100012334(&qword_1006A3BD8, (void (*)(uint64_t))type metadata accessor for NoteEntity);
}

uint64_t sub_100035C2C()
{
  return sub_100012334(&qword_1006A3BE8, (void (*)(uint64_t))type metadata accessor for NoteEntity);
}

uint64_t sub_100035C74()
{
  return sub_100012334(&qword_10069C5D0, (void (*)(uint64_t))&type metadata accessor for NoteID);
}

uint64_t sub_100035CBC()
{
  return sub_100012334(&qword_1006A3C00, (void (*)(uint64_t))type metadata accessor for NoteEntity);
}

uint64_t sub_100035D04()
{
  return sub_100012334((unint64_t *)&qword_10069CD70, (void (*)(uint64_t))type metadata accessor for NoteEntity);
}

unint64_t sub_100035D4C()
{
  unint64_t result = qword_1006A3B90;
  if (!qword_1006A3B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A3B90);
  }
  return result;
}

const char *sub_100035DA0()
{
  return "Notes";
}

unint64_t sub_100035DB4()
{
  unint64_t result = qword_10069DAB0;
  if (!qword_10069DAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DAB0);
  }
  return result;
}

unint64_t sub_100035E08()
{
  unint64_t result = qword_10069E490;
  if (!qword_10069E490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10069E490);
  }
  return result;
}

unint64_t sub_100035E5C()
{
  unint64_t result = qword_10069DAB8;
  if (!qword_10069DAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DAB8);
  }
  return result;
}

unint64_t sub_100035EB8()
{
  unint64_t result = qword_1006A1E30;
  if (!qword_1006A1E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A1E30);
  }
  return result;
}

unint64_t sub_100035F0C()
{
  unint64_t result = qword_10069E370;
  if (!qword_10069E370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10069E370);
  }
  return result;
}

unint64_t sub_100035F60()
{
  unint64_t result = qword_1006A1E38;
  if (!qword_1006A1E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A1E38);
  }
  return result;
}

unint64_t sub_100035FBC()
{
  unint64_t result = qword_1006A3600;
  if (!qword_1006A3600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A3600);
  }
  return result;
}

unint64_t sub_100036010()
{
  unint64_t result = qword_1006A35D0;
  if (!qword_1006A35D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A35D0);
  }
  return result;
}

unint64_t sub_100036064()
{
  unint64_t result = qword_1006A3608;
  if (!qword_1006A3608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A3608);
  }
  return result;
}

void sub_1000360C0()
{
  if (!qword_10069EFF0)
  {
    type metadata accessor for URL();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10069EFF0);
    }
  }
}

void sub_1000361D4()
{
  sub_100032C44();
  sub_100032D68((void *)&_mh_execute_header, v0, v1, "Defaults not set to launch to notes list nor folder list -> launching to note editor", v2, v3, v4, v5, v6);
}

void sub_100036208(os_log_t log)
{
  int v1 = 136315138;
  uint64_t v2 = "-[ICWindowSceneDelegate archiveForLaunchingPPT]";
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "%s", (uint8_t *)&v1, 0xCu);
}

void sub_100036364(void *a1, NSObject *a2)
{
  v3[0] = 67109120;
  v3[1] = [a1 isSystemPaper];
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "Apply State Restore - stateRestoreArchive.isSystemPaper: %d", (uint8_t *)v3, 8u);
}

void sub_100036DF8()
{
  sub_100032C44();
  sub_100032D68((void *)&_mh_execute_header, v0, v1, "Cloud context received application did finish launching notification", v2, v3, v4, v5, v6);
}

void sub_100037034()
{
  sub_100032C44();
  sub_100032D68((void *)&_mh_execute_header, v0, v1, "Search indexing disabled for PPT test", v2, v3, v4, v5, v6);
}

void sub_100037078()
{
  sub_100032C50();
  sub_100032CB4((void *)&_mh_execute_header, v0, v1, "Registered for remote notifications with device token: %@", v2, v3, v4, v5, v6);
}

void sub_100037854(uint64_t a1, uint64_t a2)
{
  [*(id *)(a1 + 32) activityDidFinish:a2 == 0];
  uint64_t v4 = *(void *)(a1 + 40);
  if (v4)
  {
    id v5 = [*(id *)(a1 + 32) activityType];
    (*(void (**)(uint64_t, BOOL, id))(v4 + 16))(v4, a2 == 0, v5);
  }
}

uint64_t sub_100037DF4(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = +[ICThumbnailService sharedThumbnailService];
  uint64_t v5 = *(void *)(a1 + 32);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_100037EB8;
  v8[3] = &unk_100625258;
  id v9 = v3;
  id v6 = v3;
  [v4 thumbnailWithConfiguration:v5 completion:v8];

  return 0;
}

void sub_100037EB8(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2)
  {
    id v3 = a2;
    id v6 = [v3 image];
    uint64_t v4 = [v6 ic_PNGData];
    uint64_t v5 = [v3 error];

    (*(void (**)(uint64_t, void *, void *))(v2 + 16))(v2, v4, v5);
  }
}

id sub_100037F68(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) objectForKeyedSubscript:a2];
}

void sub_100037FB4(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v12 = a2;
  id v6 = a4;
  [v12 setDisplayGenericTitle:1];
  if ([v6 isCollapsible]) {
    BOOL v7 = *(void *)(a1 + 40) == 0;
  }
  else {
    BOOL v7 = 0;
  }
  [v12 setDisplayDisclosure:v7];
  objc_opt_class();
  unint64_t v8 = ICDynamicCast();
  [v12 setFolderListSectionIdentifier:v8];

  objc_opt_class();
  id v9 = ICDynamicCast();
  [v12 setNoteSectionIdentifier:v9];

  if (objc_msgSend(v12, "ic_inSidebar"))
  {
    BOOL v10 = 1;
  }
  else if (+[UIDevice ic_isVision])
  {
    BOOL v10 = *(void *)(a1 + 40) == 0;
  }
  else
  {
    BOOL v10 = 0;
  }
  [v12 setUsesSidebarHeaderConfiguration:v10];
  if (+[UIDevice ic_isVision] && *(void *)(a1 + 40)) {
    [v12 setHorizontalInsetsOverride:0.0];
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [v12 setStyleForCalculator:[WeakRetained shouldStyleForCalculator]];
}

void sub_10003811C(id *a1, void *a2, uint64_t a3, void *a4)
{
  id v14 = a2;
  id v6 = a4;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    if (objc_msgSend(v6, "ic_isEntityOfClass:", objc_opt_class()))
    {
      id WeakRetained = objc_loadWeakRetained(a1 + 4);
      unint64_t v8 = [WeakRetained modernViewContext];
      id v9 = [v8 objectWithID:v6];
      [v14 setNoteContainer:v9];
    }
    else
    {
      if (!objc_msgSend(v6, "ic_isEntityOfClass:", objc_opt_class())) {
        goto LABEL_7;
      }
      id WeakRetained = objc_loadWeakRetained(a1 + 4);
      unint64_t v8 = [WeakRetained legacyViewContext];
      id v9 = [v8 objectWithID:v6];
      [v14 setNoteCollection:v9];
    }
  }
LABEL_7:
  id v10 = objc_loadWeakRetained(a1 + 5);
  [v14 setPresentingViewController:v10];

  [v14 setHasGroupInset:1];
  [v14 setHasDisclosureIndicator:1];
  id v11 = objc_loadWeakRetained(a1 + 4);
  id v12 = [v11 unsupportedFolderInfoButtonTapHandler];
  [v14 setUnsupportedFolderInfoButtonTapHandler:v12];

  id v13 = objc_loadWeakRetained(a1 + 6);
  [v14 setAccessibilityCustomActionsDelegate:v13];
}

void sub_1000382C8(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v16 = a2;
  id v6 = a4;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    objc_opt_class();
    unint64_t v8 = ICCheckedDynamicCast();
    id v9 = [WeakRetained emptyConfigurationForNoteWithObjectID:v8];

    id v10 = objc_loadWeakRetained((id *)(a1 + 32));
    if (v10)
    {
      id v11 = objc_loadWeakRetained((id *)(a1 + 32));
      id v12 = [v11 collectionView];
      objc_msgSend(v9, "setStyleForCalculator:", objc_msgSend(v12, "ic_behavior") == (id)1);
    }
    else
    {
      [v9 setStyleForCalculator:0];
    }

    id v13 = objc_loadWeakRetained((id *)(a1 + 32));
    id v14 = [v13 collectionView];
    objc_msgSend(v16, "setConfiguration:synchronously:", v9, objc_msgSend(v14, "ic_shouldOptimizeForScrolling") ^ 1);

    id v15 = objc_loadWeakRetained((id *)(a1 + 40));
    [v16 setAccessibilityCustomActionsDelegate:v15];
  }
}

void sub_100038440(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v13 = a2;
  id v6 = a4;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    objc_opt_class();
    unint64_t v8 = ICCheckedDynamicCast();
    id v9 = [WeakRetained emptyConfigurationForNoteWithObjectID:v8];

    id v10 = objc_loadWeakRetained((id *)(a1 + 32));
    id v11 = [v10 collectionView];
    [v13 setConfiguration:v9 synchronously:[v11 ic_shouldOptimizeForScrolling] ^ 1];

    id v12 = objc_loadWeakRetained((id *)(a1 + 40));
    [v13 setAccessibilityCustomActionsDelegate:v12];
  }
}

void sub_100038558(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v12 = a2;
  id v6 = a4;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v7 = v6;
    if (objc_msgSend(v7, "ic_isEntityOfClass:", objc_opt_class()))
    {
      id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
      id v9 = [WeakRetained modernViewContext];
      id v10 = [v9 objectWithID:v7];

      [v12 setFolder:v10];
      id v11 = objc_loadWeakRetained((id *)(a1 + 40));
      [v12 setAccessibilityCustomActionsDelegate:v11];
    }
  }
}

void sub_10003865C(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  [v7 setAllowsExclusion:1];
  [v7 setHasGroupInset:0];
  [v7 setHasHorizontalScrolling:1];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_100038760;
  v10[3] = &unk_1006253D8;
  objc_copyWeak(&v11, (id *)(a1 + 32));
  [v7 setSelectionDidChange:v10];
  objc_destroyWeak(&v11);
}

void sub_10003874C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100038760(uint64_t a1, void *a2)
{
  id v21 = a2;
  id v3 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v5 = [WeakRetained collectionViewDiffableDataSource];
  id v6 = [v5 snapshot];

  id v7 = [v6 itemIdentifiers];
  id v8 = [v7 ic_objectPassingTest:&stru_1006253B0];

  if (v8)
  {
    id v9 = objc_loadWeakRetained(v3);
    id v10 = [v9 collectionViewDiffableDataSource];
    id v11 = [v10 indexPathForItemIdentifier:v8];

    objc_opt_class();
    id v12 = objc_loadWeakRetained(v3);
    id v13 = [v12 collectionView];
    id v14 = [v13 cellForItemAtIndexPath:v11];
    id v15 = ICDynamicCast();

    id v16 = [v15 tagSelection];
    [v21 setTagOperator:[v16 tagOperator]];

    [v15 updateForTagSelection:v21 animated:1];
  }
  id v17 = objc_loadWeakRetained(v3);
  double v18 = [v17 tagSelectionDidChangeHandler];

  if (v18)
  {
    id v19 = objc_loadWeakRetained(v3);
    uint64_t v20 = [v19 tagSelectionDidChangeHandler];
    ((void (**)(void, id))v20)[2](v20, v21);
  }
}

BOOL sub_100038938(id a1, id a2, unint64_t a3, BOOL *a4)
{
  id v4 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  return isKindOfClass & 1;
}

void sub_100038984(id *a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  [v7 setMaxNumberOfLines:0];
  [v7 setAccessibilityContainerType:4];
  objc_initWeak(&location, v7);
  v26[0] = _NSConcreteStackBlock;
  v26[1] = 3221225472;
  v26[2] = sub_100038BF0;
  void v26[3] = &unk_100625428;
  objc_copyWeak(&v27, &location);
  a1 += 4;
  objc_copyWeak(&v28, a1);
  [v7 setSelectionOperatorChangeHandler:v26];
  id WeakRetained = objc_loadWeakRetained(a1);
  id v11 = [WeakRetained modernBackgroundContext];

  uint64_t v20 = 0;
  id v21 = &v20;
  uint64_t v22 = 0x3032000000;
  uint64_t v23 = sub_100038D90;
  uint64_t v24 = sub_100038DA0;
  id v25 = 0;
  id v13 = _NSConcreteStackBlock;
  uint64_t v14 = 3221225472;
  id v15 = sub_100038DA8;
  id v16 = &unk_100625450;
  double v18 = &v20;
  objc_copyWeak(&v19, a1);
  id v12 = v11;
  id v17 = v12;
  [v12 performBlockAndWait:&v13];
  [v7 updateForTagSelection:v21[5] animated:0 v13, v14, v15, v16];

  objc_destroyWeak(&v19);
  _Block_object_dispose(&v20, 8);

  objc_destroyWeak(&v28);
  objc_destroyWeak(&v27);
  objc_destroyWeak(&location);
}

void sub_100038BA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  objc_destroyWeak(v18);
  _Block_object_dispose(&a16, 8);
  objc_destroyWeak(v17);
  objc_destroyWeak(v16);
  objc_destroyWeak((id *)(v19 - 104));
  _Unwind_Resume(a1);
}

void sub_100038BF0(uint64_t a1, uint64_t a2)
{
  id v4 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v6 = [WeakRetained tagSelection];
  [v6 setTagOperator:a2];

  id v7 = objc_loadWeakRetained(v4);
  id v8 = [v7 tagSelection];
  id v9 = +[ICQuery queryForNotesMatchingTagSelection:v8];
  id v10 = (id *)(a1 + 40);
  id v11 = objc_loadWeakRetained((id *)(a1 + 40));
  [v11 setNoteQuery:v9];

  id v12 = objc_loadWeakRetained(v4);
  id v13 = [v12 tagSelection];
  [v12 updateForTagSelection:v13 animated:0];

  id v14 = objc_loadWeakRetained(v10);
  id v15 = [v14 tagSelectionDidChangeHandler];

  if (v15)
  {
    id v19 = objc_loadWeakRetained(v10);
    id v16 = [v19 tagSelectionDidChangeHandler];
    id v17 = objc_loadWeakRetained(v4);
    double v18 = [v17 tagSelection];
    ((void (**)(void, void *))v16)[2](v16, v18);
  }
}

uint64_t sub_100038D90(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100038DA0(uint64_t a1)
{
}

void sub_100038DA8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v2 = [WeakRetained noteQuery];
  uint64_t v3 = [v2 tagSelectionWithManagedObjectContext:*(void *)(a1 + 32)];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

void sub_100038E24(id a1, ICToolbarSummaryView *a2, NSString *a3, NSIndexPath *a4)
{
}

id sub_100038E30(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  objc_opt_class();
  if (objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_class(), (objc_opt_isKindOfClass()))
  {
    id v10 = *(void **)(a1 + 32);
    goto LABEL_4;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v10 = *(void **)(a1 + 40);
    goto LABEL_4;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0) {
      goto LABEL_22;
    }
    id v13 = v9;
    if (objc_msgSend(v13, "ic_isContainerType"))
    {
      id WeakRetained = objc_loadWeakRetained((id *)(a1 + 88));
      BOOL v15 = [WeakRetained noteContainerViewMode] == 0;
      uint64_t v16 = 64;
      uint64_t v17 = 56;
    }
    else
    {
      if (!objc_msgSend(v13, "ic_isNoteType"))
      {
        if (objc_msgSend(v13, "ic_isLegacyNoteType"))
        {
          id v11 = *(id *)(a1 + 72);
          goto LABEL_21;
        }
        if (!objc_msgSend(v13, "ic_isInvitationType"))
        {
          id v11 = 0;
          goto LABEL_21;
        }
      }
      id WeakRetained = objc_loadWeakRetained((id *)(a1 + 88));
      BOOL v15 = [WeakRetained noteContainerViewMode] == 0;
      uint64_t v16 = 80;
      uint64_t v17 = 72;
    }
    if (v15) {
      uint64_t v16 = v17;
    }
    id v11 = *(id *)(a1 + v16);

LABEL_21:
    if (v11) {
      goto LABEL_5;
    }
    goto LABEL_22;
  }
  id v10 = *(void **)(a1 + 48);
LABEL_4:
  id v11 = v10;
  if (v11)
  {
LABEL_5:
    id v12 = [v7 dequeueConfiguredReusableCellWithRegistration:v11 forIndexPath:v8 item:v9];

    goto LABEL_23;
  }
LABEL_22:
  id v12 = 0;
LABEL_23:

  return v12;
}

id sub_100039018(id *a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  if ([v8 isEqualToString:UICollectionElementKindSectionHeader])
  {
    id WeakRetained = objc_loadWeakRetained(a1 + 6);
    if ([WeakRetained isTrashFolder]) {
      BOOL v11 = [v9 length] == (id)1;
    }
    else {
      BOOL v11 = 0;
    }

    if ([v8 isEqualToString:UICollectionElementKindSectionFooter])
    {
      id v12 = [v9 length];
      if (!v11) {
        goto LABEL_9;
      }
    }
    else if (!v11)
    {
      goto LABEL_14;
    }
    id v13 = a1 + 4;
    goto LABEL_13;
  }
  if (![v8 isEqualToString:UICollectionElementKindSectionFooter]) {
    goto LABEL_14;
  }
  id v12 = [v9 length];
LABEL_9:
  if (v12 == (id)1)
  {
    id v13 = a1 + 5;
LABEL_13:
    id v14 = *v13;
    BOOL v15 = [v7 dequeueConfiguredReusableSupplementaryViewWithRegistration:v14 forIndexPath:v9];

    goto LABEL_15;
  }
LABEL_14:
  BOOL v15 = 0;
LABEL_15:

  return v15;
}

uint64_t sub_100039160(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  if ((isKindOfClass & 1) == 0) {
    return 1;
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v6 = [WeakRetained collectionView];
  uint64_t v7 = [v6 isEditing] ^ 1;

  return v7;
}

uint64_t sub_1000391EC(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  if ((isKindOfClass & 1) == 0) {
    return 1;
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v6 = [WeakRetained collectionView];
  uint64_t v7 = [v6 isEditing] ^ 1;

  return v7;
}

void sub_100039278(uint64_t a1, void *a2)
{
  id v12 = a2;
  id v3 = +[ICExpansionState sharedExpansionState];
  uint64_t v4 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained(v4);
  id v6 = [WeakRetained indexer];
  uint64_t v7 = [v6 expansionStateContext];
  [v3 expandItemIdentifier:v12 context:v7];

  id v8 = objc_loadWeakRetained(v4);
  id v9 = [v8 willExpandItemHandler];

  if (v9)
  {
    id v10 = objc_loadWeakRetained(v4);
    BOOL v11 = [v10 willExpandItemHandler];
    ((void (**)(void, id))v11)[2](v11, v12);
  }
}

void sub_10003937C(uint64_t a1, void *a2)
{
  id v12 = a2;
  id v3 = +[ICExpansionState sharedExpansionState];
  uint64_t v4 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained(v4);
  id v6 = [WeakRetained indexer];
  uint64_t v7 = [v6 expansionStateContext];
  [v3 collapseItemIdentifier:v12 context:v7];

  id v8 = objc_loadWeakRetained(v4);
  id v9 = [v8 willCollapseItemHandler];

  if (v9)
  {
    id v10 = objc_loadWeakRetained(v4);
    BOOL v11 = [v10 willCollapseItemHandler];
    ((void (**)(void, id))v11)[2](v11, v12);
  }
}

void sub_100039480(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = [WeakRetained window];

  if (v3)
  {
    id v5 = objc_loadWeakRetained((id *)(a1 + 40));
    uint64_t v4 = [v5 lockedNotesMigratorDidMigrateNoteDelayer];
    [v4 requestFire];
  }
}

void sub_10003951C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = [WeakRetained window];

  if (v3)
  {
    id v4 = objc_loadWeakRetained((id *)(a1 + 40));
    [v4 reloadDataAnimated:1];
  }
}

void sub_100039AD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100039AF0(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v6 = a2;
  objc_opt_class();
  uint64_t v7 = [v6 object];
  id v8 = ICDynamicCast();

  if (v8
    && objc_msgSend(v8, "ic_isModernNoteType")
    && ([*(id *)(a1 + 32) containsObject:v8] & 1) == 0)
  {
    [*(id *)(a1 + 32) addObject:v8];
    id v9 = [*(id *)(a1 + 40) managedObjectContext];
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_100039C40;
    v10[3] = &unk_1006255E8;
    id v11 = *(id *)(a1 + 40);
    id v12 = v6;
    long long v13 = *(_OWORD *)(a1 + 48);
    [v9 performBlockAndWait:v10];

    *a4 = *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24);
  }
}

void sub_100039C40(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) managedObjectContext];
  id v3 = [*(id *)(a1 + 40) object];
  [v2 ic_existingObjectWithID:v3];
  id v5 = (id)objc_claimAutoreleasedReturnValue();

  id v4 = [*(id *)(a1 + 48) indexer];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = [v4 dateHeadersAreStaleForNote:v5];
}

void sub_10003A3A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

BOOL sub_10003A3C0(id a1, NSManagedObjectID *a2, BOOL *a3)
{
  return [(NSManagedObjectID *)a2 ic_isModernNoteType];
}

void sub_10003A3C8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v2 = [WeakRetained collectionViewDiffableDataSource];
  id v3 = [v2 snapshot];
  id v4 = [*(id *)(a1 + 32) allObjects];
  [v3 reloadItemsWithIdentifiers:v4];
}

uint64_t sub_10003A7F0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10003A800(uint64_t a1)
{
}

id sub_10003B0A4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [*(id *)(a1 + 32) collectionView];
  id v5 = [v4 layoutAttributesForItemAtIndexPath:v3];

  id v6 = [*(id *)(a1 + 32) collectionView];
  [v5 frame];
  double v8 = v7;
  double v10 = v9;
  double v12 = v11;
  double v14 = v13;
  BOOL v15 = [*(id *)(a1 + 32) collectionView];
  uint64_t v16 = [v15 superview];
  [v6 convertRect:v16 toView:v8];
  double v18 = v17;

  id v19 = [*(id *)(a1 + 32) collectionView];
  [v19 adjustedContentInset];
  double v21 = v20;

  if (v18 >= v21)
  {
    objc_opt_class();
    uint64_t v23 = [*(id *)(a1 + 32) dataSource];
    uint64_t v24 = [v23 collectionViewDiffableDataSource];
    id v25 = [v24 itemIdentifierForIndexPath:v3];
    uint64_t v22 = ICDynamicCast();
  }
  else
  {
    uint64_t v22 = 0;
  }

  return v22;
}

void sub_10003B764(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    double v7 = os_log_create("com.apple.notes", "QuickNote");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1004D3EDC();
    }
  }
  else
  {
    performBlockOnMainThreadAndWait();
  }
  double v8 = *(void **)(a1 + 32);
  if (v8)
  {
    id v9 = v8;
    performBlockOnMainThreadAndWait();
  }
}

void sub_10003B86C(id a1)
{
  uint64_t v1 = +[ICQuickNoteSessionManager sharedManager];
  unsigned int v2 = [v1 isQuickNoteSessionActive];

  if (v2)
  {
    id v3 = +[ICQuickNoteSessionManager sharedManager];
    [v3 endSession];
  }
}

uint64_t sub_10003B8F8(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));
}

NSString *__cdecl sub_10003B910(id a1, id a2)
{
  id v2 = a2;
  objc_opt_class();
  id v3 = ICDynamicCast();

  id v4 = [v3 URIRepresentation];
  id v5 = [v4 absoluteString];

  return (NSString *)v5;
}

NSURL *__cdecl sub_10003B998(id a1, NSManagedObjectID *a2)
{
  return [(NSManagedObjectID *)a2 URIRepresentation];
}

void sub_10003B9A0(uint64_t a1)
{
  unsigned __int8 v2 = [*(id *)(a1 + 32) isPrimaryContentVisible];
  id v3 = [*(id *)(a1 + 40) mainSplitViewController];
  id v4 = v3;
  if (v2) {
    [v3 showColumn:0];
  }
  else {
    [v3 hideColumn:0];
  }

  if ([*(id *)(a1 + 32) isTrailingContentVisible])
  {
    id v5 = [*(id *)(a1 + 40) trailingSidebarViewController];
    [v5 setSidebarHidden:0];

    id v6 = [*(id *)(a1 + 32) mainSplitViewPrimaryColumnWidth];

    if (v6)
    {
      double v7 = [*(id *)(a1 + 32) mainSplitViewPrimaryColumnWidth];
      [v7 floatValue];
      double v9 = v8;

      double v10 = [*(id *)(a1 + 40) mainSplitViewController];
      [v10 setPreferredPrimaryColumnWidth:v9];

      double v11 = [*(id *)(a1 + 40) mainSplitViewController];
      [v11 setMinimumPrimaryColumnWidth:v9];

      double v12 = [*(id *)(a1 + 40) mainSplitViewController];
      [v12 setMaximumPrimaryColumnWidth:v9];
    }
    uint64_t v13 = [*(id *)(a1 + 32) mainSplitViewSupplementaryColumnWidth];
    if (v13)
    {
      double v14 = (void *)v13;
      BOOL v15 = [*(id *)(a1 + 40) mainSplitViewController];
      id v16 = [v15 style];

      if (v16 == (id)2)
      {
        double v17 = [*(id *)(a1 + 32) mainSplitViewSupplementaryColumnWidth];
        [v17 floatValue];
        double v19 = v18;

        double v20 = [*(id *)(a1 + 40) mainSplitViewController];
        [v20 setPreferredSupplementaryColumnWidth:v19];

        double v21 = [*(id *)(a1 + 40) mainSplitViewController];
        [v21 setMinimumSupplementaryColumnWidth:v19];

        uint64_t v22 = [*(id *)(a1 + 40) mainSplitViewController];
        [v22 setMaximumSupplementaryColumnWidth:v19];
      }
    }
  }
  if ([*(id *)(a1 + 40) noteContainerViewMode] == (id)1)
  {
    uint64_t v23 = [*(id *)(a1 + 40) selectedNoteObjectID];
    if (v23)
    {

LABEL_24:
      id v29 = [*(id *)(a1 + 40) mainSplitViewController];
      [v29 hideColumn:1];
      goto LABEL_25;
    }
    uint64_t v24 = [*(id *)(a1 + 40) selectedInvitationObjectID];

    if (v24) {
      goto LABEL_24;
    }
  }
  id v25 = [*(id *)(a1 + 40) supplementaryNavigationController];
  uint64_t v26 = [v25 viewControllers];
  if (![v26 count]) {
    goto LABEL_20;
  }
  if (![*(id *)(a1 + 32) isSupplementaryContentVisible])
  {
    id v27 = [*(id *)(a1 + 40) selectedNoteObjectID];
    if (!v27)
    {
      id v28 = [*(id *)(a1 + 40) selectedInvitationObjectID];

      if (!v28) {
        goto LABEL_17;
      }
LABEL_21:
      if (![*(id *)(a1 + 32) isSupplementaryContentVisible]
        || ([*(id *)(a1 + 32) isPrimaryContentVisible] & 1) != 0)
      {
        return;
      }
      goto LABEL_24;
    }

LABEL_20:
    goto LABEL_21;
  }

LABEL_17:
  id v29 = [*(id *)(a1 + 40) mainSplitViewController];
  [v29 showColumn:1];
LABEL_25:
}

void sub_10003BC98(uint64_t a1)
{
  id v11 = [*(id *)(a1 + 32) currentSearchTerm];
  if ([*(id *)(a1 + 40) selectionStateTrackingEnabled])
  {
    unsigned __int8 v2 = [*(id *)(a1 + 40) selectionStateController];
    id v3 = [v2 activityStreamViewMode];
    id v4 = [v2 activityStreamSelection];
  }
  else
  {
    id v3 = [*(id *)(a1 + 32) currentActivityStreamViewMode];
    id v4 = [*(id *)(a1 + 32) currentActivityStreamSelection];
  }
  if (v11)
  {
    [*(id *)(a1 + 40) ensureSearchVisibleWhenApplyingArchive];
    unsigned __int8 v5 = [*(id *)(a1 + 40) hasCompactWidth];
    id v6 = *(void **)(a1 + 40);
    if (v5) {
      [v6 folderListViewController];
    }
    else {
    double v7 = [v6 rootNoteBrowseViewController];
    }
    [v7 startSearchWithSearchQuery:v11 searchTokens:0 searchScope:0 becomeFirstResponder:1];
  }
  if (v3)
  {
    [*(id *)(a1 + 40) setActivityStreamSelection:v4];
    float v8 = *(void **)(a1 + 40);
    double v9 = [v8 selectedModernNote];
    [v8 presentActivityStreamForObject:v9 viewMode:v3 animated:0];
  }
  uint64_t v10 = *(void *)(a1 + 48);
  if (v10) {
    (*(void (**)(void))(v10 + 16))();
  }
  [*(id *)(a1 + 40) setIsApplyingStateRestoreArchive:0];
}

void sub_10003C4AC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 104));
  _Unwind_Resume(a1);
}

BOOL sub_10003C4C8(id a1, id a2, BOOL *a3)
{
  id v3 = a2;
  objc_opt_class();
  id v4 = ICDynamicCast();
  if (objc_msgSend(v4, "ic_isModernFolderType"))
  {
    BOOL v5 = 1;
  }
  else
  {
    objc_opt_class();
    id v6 = ICDynamicCast();
    BOOL v5 = v6 != 0;
  }
  return v5;
}

BOOL sub_10003C550(id a1, id a2, BOOL *a3)
{
  return +[ICTagCoreDataIndexer isTagItemIdentifier:a2];
}

void sub_10003C560(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 56);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  LOBYTE(v5) = 0;
  [WeakRetained showContainerWithIdentifiers:*(void *)(a1 + 32) excludingIdentifiers:*(void *)(a1 + 40) usingRootViewController:1 deferUntilDataLoaded:0 dismissOverlayContent:0 keepEditorShowing:*(void *)(a1 + 48) animated:v5];

  id v4 = objc_loadWeakRetained(v2);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_10003C64C;
  v6[3] = &unk_100625938;
  objc_copyWeak(&v7, v2);
  [v4 updateSplitViewForCurrentViewModeWithCompletion:v6];

  objc_destroyWeak(&v7);
}

void sub_10003C638(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10003C64C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained dismissPrimaryOverlayContent];
}

uint64_t sub_10003C68C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10003C758(uint64_t a1)
{
  uint64_t v16 = 0;
  double v17 = &v16;
  uint64_t v18 = 0x3032000000;
  double v19 = sub_10003A7F0;
  double v20 = sub_10003A800;
  id v21 = +[ICNote noteWithIdentifier:*(void *)(a1 + 32) context:*(void *)(a1 + 40)];
  uint64_t v2 = v17[5];
  os_log_t v3 = os_log_create("com.apple.notes", "UI");
  os_log_t v4 = v3;
  if (v2)
  {
    uint64_t v5 = v3;
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
    {
      id v6 = [v17[5] ic_loggingIdentifier];
      sub_1004D3F78(v6, buf, v5);
    }

    id v7 = *(void **)(a1 + 48);
    float v8 = [(id)v17[5] objectID];
    [v7 showRecentUpdatesForNoteWithObjectID:v8 suppressSidebar:1];
  }
  else
  {
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG)) {
      sub_1004D3F44();
    }

    float v8 = +[ICCloudContext sharedContext];
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    void v11[2] = sub_10003C998;
    v11[3] = &unk_1006259D8;
    BOOL v15 = &v16;
    id v12 = *(id *)(a1 + 32);
    id v9 = *(id *)(a1 + 40);
    uint64_t v10 = *(void *)(a1 + 48);
    id v13 = v9;
    uint64_t v14 = v10;
    [v8 syncWithReason:@"ShowNoteWithIdentifier" uploadUnsyncedChanges:0 completionHandler:v11];
  }
  _Block_object_dispose(&v16, 8);
}

void sub_10003C970(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10003C998(uint64_t a1, void *a2)
{
  id v4 = a2;
  id v5 = *(id *)(a1 + 32);
  id v6 = *(id *)(a1 + 40);
  id v3 = v4;
  performBlockOnMainThread();
}

void sub_10003CA60(void *a1)
{
  if (a1[4])
  {
    uint64_t v2 = os_log_create("com.apple.notes", "UI");
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
      sub_1004D40C4();
    }
  }
  else
  {
    uint64_t v3 = +[ICNote noteWithIdentifier:a1[5] context:a1[6]];
    uint64_t v4 = *(void *)(a1[8] + 8);
    id v5 = *(void **)(v4 + 40);
    *(void *)(v4 + 40) = v3;

    uint64_t v6 = *(void *)(*(void *)(a1[8] + 8) + 40);
    os_log_t v7 = os_log_create("com.apple.notes", "UI");
    uint64_t v2 = v7;
    if (v6)
    {
      float v8 = v7;
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG)) {
        sub_1004D4040((uint64_t)(a1 + 8));
      }

      id v9 = (void *)a1[7];
      uint64_t v2 = [*(id *)(*(void *)(a1[8] + 8) + 40) objectID];
      [v9 showRecentUpdatesForNoteWithObjectID:v2 suppressSidebar:1];
    }
    else if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      sub_1004D3FD0((uint64_t)(a1 + 5), v2, v10, v11, v12, v13, v14, v15);
    }
  }
}

void sub_10003CC94(uint64_t a1)
{
  uint64_t v28 = 0;
  id v29 = &v28;
  uint64_t v30 = 0x3032000000;
  id v31 = sub_10003A7F0;
  id v32 = sub_10003A800;
  id v33 = +[ICInlineAttachment attachmentWithIdentifier:*(void *)(a1 + 32) context:*(void *)(a1 + 40)];
  uint64_t v22 = 0;
  uint64_t v23 = &v22;
  uint64_t v24 = 0x3032000000;
  id v25 = sub_10003A7F0;
  uint64_t v26 = sub_10003A800;
  id v27 = +[ICNote noteWithIdentifier:*(void *)(a1 + 48) context:*(void *)(a1 + 40)];
  if (v29[5] && v23[5])
  {
    uint64_t v2 = os_log_create("com.apple.notes", "UI");
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v3 = [v29[5] ic_loggingIdentifier];
      sub_1004D41AC(v3, buf, v2);
    }

    id v4 = objc_alloc((Class)ICActivityStreamSelection);
    uint64_t v34 = v29[5];
    id v5 = +[NSArray arrayWithObjects:&v34 count:1];
    id v6 = [v4 initWithMentions:v5];

    os_log_t v7 = *(void **)(a1 + 56);
    float v8 = [(id)v29[5] note];
    id v9 = [v8 objectID];
    [v7 showAttributionHighlightsForNoteWithObjectID:v9 selection:v6];
  }
  else
  {
    uint64_t v10 = os_log_create("com.apple.notes", "UI");
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v11 = [v29[5] ic_loggingIdentifier];
      uint64_t v12 = [v23[5] ic_loggingIdentifier];
      sub_1004D413C(v11, v12, buf, v10);
    }

    id v6 = +[ICCloudContext sharedContext];
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472;
    v15[2] = sub_10003D030;
    v15[3] = &unk_100625A50;
    double v20 = &v22;
    id v16 = *(id *)(a1 + 48);
    id v17 = *(id *)(a1 + 40);
    id v21 = &v28;
    id v13 = *(id *)(a1 + 32);
    uint64_t v14 = *(void *)(a1 + 56);
    id v18 = v13;
    uint64_t v19 = v14;
    [v6 syncWithReason:@"ShowInlineAttachmentWithIdentifier" uploadUnsyncedChanges:0 completionHandler:v15];

    float v8 = v16;
  }

  _Block_object_dispose(&v22, 8);
  _Block_object_dispose(&v28, 8);
}

void sub_10003CFF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_10003D030(id *a1, void *a2)
{
  id v4 = a2;
  id v5 = a1[4];
  id v6 = a1[5];
  id v7 = a1[6];
  id v3 = v4;
  performBlockOnMainThread();
}

void sub_10003D114(void *a1)
{
  if (!a1[4])
  {
    id v7 = a1 + 9;
    uint64_t v8 = *(void *)(a1[9] + 8);
    id v9 = *(void **)(v8 + 40);
    if (v9)
    {
      id v10 = v9;
      uint64_t v11 = *(void **)(v8 + 40);
      *(void *)(v8 + 40) = v10;
    }
    else
    {
      uint64_t v12 = +[ICNote noteWithIdentifier:a1[5] context:a1[6]];
      uint64_t v13 = *(void *)(a1[9] + 8);
      uint64_t v11 = *(void **)(v13 + 40);
      *(void *)(v13 + 40) = v12;
    }

    uint64_t v14 = *(void *)(a1[10] + 8);
    uint64_t v15 = *(void **)(v14 + 40);
    if (v15)
    {
      id v16 = v15;
      id v17 = *(void **)(v14 + 40);
      *(void *)(v14 + 40) = v16;
    }
    else
    {
      uint64_t v18 = +[ICInlineAttachment attachmentWithIdentifier:a1[7] context:a1[6]];
      uint64_t v19 = *(void *)(a1[10] + 8);
      id v17 = *(void **)(v19 + 40);
      *(void *)(v19 + 40) = v18;
    }

    if (*(void *)(*(void *)(a1[10] + 8) + 40))
    {
      double v20 = os_log_create("com.apple.notes", "UI");
      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEBUG)) {
        sub_1004D42FC((uint64_t)(a1 + 9), (uint64_t)(a1 + 10), v20);
      }

      id v21 = objc_alloc((Class)ICActivityStreamSelection);
      uint64_t v30 = *(void *)(*(void *)(a1[10] + 8) + 40);
      uint64_t v22 = +[NSArray arrayWithObjects:&v30 count:1];
      id v5 = [v21 initWithMentions:v22];

      uint64_t v23 = (void *)a1[8];
      uint64_t v24 = [*(id *)(*(void *)(a1[10] + 8) + 40) note];
      id v25 = [v24 objectID];
      [v23 showAttributionHighlightsForNoteWithObjectID:v25 selection:v5];

      goto LABEL_17;
    }
    uint64_t v26 = *(void *)(*(void *)(*v7 + 8) + 40);
    id v27 = os_log_create("com.apple.notes", "UI");
    id v5 = v27;
    if (!v26)
    {
      if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
        sub_1004D4204();
      }
      goto LABEL_17;
    }
    uint64_t v28 = v27;
    if (os_log_type_enabled(v28, OS_LOG_TYPE_DEBUG)) {
      sub_1004D4278((uint64_t)(a1 + 9));
    }

    id v29 = (void *)a1[8];
    id v5 = [*(id *)(*(void *)(a1[9] + 8) + 40) objectID];
    id v6 = v29;
LABEL_6:
    [v6 showObjectWithObjectID:v5];
LABEL_17:

    return;
  }
  uint64_t v2 = os_log_create("com.apple.notes", "UI");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
    sub_1004D43C8();
  }

  id v3 = *(void **)(*(void *)(a1[9] + 8) + 40);
  if (v3)
  {
    id v4 = (void *)a1[8];
    id v5 = [v3 objectID];
    id v6 = v4;
    goto LABEL_6;
  }
}

void sub_10003E23C(uint64_t a1)
{
  id v2 = [objc_alloc((Class)ICAttachmentPresenter) initWithViewControllerManager:*(void *)(a1 + 32) attachments:*(void *)(a1 + 40) startingAtIndex:*(void *)(a1 + 72) delegate:*(void *)(a1 + 48) displayShowInNote:*(unsigned __int8 *)(a1 + 80) editable:*(unsigned __int8 *)(a1 + 81) presentingViewController:*(void *)(a1 + 56)];
  [*(id *)(a1 + 32) setCurrentAttachmentPresenter:v2];
  [v2 presentAttachmentWithSelectedSubAttachment:*(void *)(a1 + 64)];
}

uint64_t sub_10003E2BC(uint64_t a1)
{
  id v2 = os_log_create("com.apple.notes", "UI");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    sub_1004D4488();
  }

  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10003EC9C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  if (v2 == 5)
  {
    id v3 = [*(id *)(a1 + 32) activityStreamNavigationController];
  }
  else
  {
    uint64_t v4 = [*(id *)(a1 + 32) presentedActivityStreamNavigationController];
    if (v4
      && (id v5 = (void *)v4,
          [*(id *)(a1 + 32) presentedActivityStreamNavigationController],
          id v6 = objc_claimAutoreleasedReturnValue(),
          char v7 = (v2 != 4) ^ [v6 hasInteractiveSizing],
          v6,
          v5,
          (v7 & 1) == 0))
    {
      id v3 = [*(id *)(a1 + 32) presentedActivityStreamNavigationController];
    }
    else
    {
      id v3 = [[ICActivityStreamNavigationController alloc] initWithCoordinator:*(void *)(a1 + 32) hasInteractiveSizing:v2 != 4];
    }
  }
  uint64_t v8 = v3;
  [(ICActivityStreamNavigationController *)v3 setObject:*(void *)(a1 + 40)];
  id v9 = [*(id *)(a1 + 32) selectedModernNote];
  id v10 = [v9 objectID];
  uint64_t v11 = [*(id *)(a1 + 40) objectID];
  unsigned int v12 = [v10 isEqual:v11];

  if (v12)
  {
    uint64_t v13 = [*(id *)(a1 + 32) activityStreamSelection];
    [(ICActivityStreamNavigationController *)v8 setSelection:v13];
  }
  if (*(void *)(a1 + 48) != 5)
  {
    uint64_t v18 = [(ICActivityStreamNavigationController *)v8 presentingViewController];

    if (!v18)
    {
      uint64_t v19 = [*(id *)(a1 + 32) noteEditorViewController];
      double v20 = [v19 view];
      id v21 = [(ICActivityStreamNavigationController *)v8 popoverPresentationController];
      [v21 setSourceView:v20];

      uint64_t v22 = [*(id *)(a1 + 32) presentedActivityStreamPresentingViewController];
      [v22 presentViewController:v8 animated:*(unsigned __int8 *)(a1 + 56) completion:0];
    }
    [(ICActivityStreamNavigationController *)v8 moveToViewMode:*(void *)(a1 + 48)];
    if ([*(id *)(a1 + 32) showsPresentedActivityStreamAsModal]) {
      goto LABEL_29;
    }
    id v17 = [*(id *)(a1 + 32) noteEditorViewController];
    [v17 hideActivityStreamToolbarAnimated:*(unsigned __int8 *)(a1 + 56)];
    goto LABEL_17;
  }
  if ([*(id *)(a1 + 32) behavior] == (id)3)
  {
LABEL_11:
    uint64_t v14 = [*(id *)(a1 + 32) trailingSidebarSplitViewController];
    unsigned int v15 = [v14 shouldRenderAsOverlay];

    id v16 = *(void **)(a1 + 32);
    if (!v15)
    {
      [v16 updateTrailingColumnWidth];
      uint64_t v28 = [*(id *)(a1 + 32) trailingSidebarViewController];
      id v29 = [v28 view];
      [v29 frame];
      double v31 = v30;
      double v33 = v32;

      uint64_t v34 = [*(id *)(a1 + 32) mainSplitViewController];
      [v34 nonDisplacedColumnWidth];
      double v36 = v31 - v35;

      id v37 = [*(id *)(a1 + 32) trailingSidebarViewController];
      [v37 preferredSidebarWidth];
      double v39 = v36 - v38;

      uint64_t v40 = [*(id *)(a1 + 32) mainSplitViewController];
      unsigned int v41 = [v40 requiresNotificationForSecondaryColumnSize:v39, v33];

      id v42 = [*(id *)(a1 + 32) trailingSidebarViewController];
      [v42 setSidebarHidden:0];

      id v43 = [*(id *)(a1 + 32) trailingSidebarSplitViewController];
      id v44 = [v43 transitionCoordinator];

      if ([*(id *)(a1 + 32) behavior] != (id)3)
      {
        id v45 = [*(id *)(a1 + 32) mainSplitViewController];
        unsigned int v46 = [v45 shouldDisplaceColumn];

        if (v46)
        {
          v56[0] = _NSConcreteStackBlock;
          v56[1] = 3221225472;
          v56[2] = sub_10003F188;
          v56[3] = &unk_100625AC8;
          v56[4] = *(void *)(a1 + 32);
          [v44 animateAlongsideTransition:v56 completion:0];
          id v47 = [*(id *)(a1 + 32) mainSplitViewController];
          id v48 = v47;
          uint64_t v49 = 1;
        }
        else
        {
          id v47 = [*(id *)(a1 + 32) mainSplitViewController];
          id v48 = v47;
          uint64_t v49 = 0;
        }
        [v47 setIsDisplacingColumn:v49];
      }
      id v50 = [*(id *)(a1 + 32) noteEditorViewController];
      [v50 hideActivityStreamToolbarAnimated:*(unsigned __int8 *)(a1 + 56)];

      if (v41) {
        [*(id *)(a1 + 32) sendNotificationForNoteEditorSizeChange:v44 transitionCoordinator:v39];
      }

      goto LABEL_29;
    }
    id v17 = [v16 trailingSidebarViewController];
    [v17 setSidebarHidden:0];
LABEL_17:

LABEL_29:
    id v51 = _NSConcreteStackBlock;
    uint64_t v52 = 3221225472;
    uint64_t v53 = sub_10003F1F8;
    id v54 = &unk_100625AF0;
    id v55 = v8;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, &v51);
    [*(id *)(a1 + 32) updateIgnoreTextViewTaps:v51, v52, v53, v54];

    goto LABEL_30;
  }
  uint64_t v23 = [*(id *)(a1 + 32) trailingSidebarSplitViewController];
  id v24 = [v23 displayMode];

  if (v24 == (id)1)
  {
    id v25 = [*(id *)(a1 + 32) mainSplitViewController];
    id v26 = [v25 displayMode];

    if (v26 == (id)6)
    {
      id v27 = [*(id *)(a1 + 32) mainSplitViewController];
      [v27 hideColumn:0];
    }
    goto LABEL_11;
  }
LABEL_30:
}

void sub_10003F188(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) mainSplitViewController];
  uint64_t v2 = [*(id *)(a1 + 32) mainSplitViewController];
  [v3 hideColumn:[v2 preferredDisplacedColumn]];
}

void sub_10003F1F8(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) activityStreamViewController];
  [v1 updateContentLayout];
}

uint64_t sub_10003F558(uint64_t a1)
{
  [*(id *)(a1 + 32) updateIgnoreTextViewTaps];
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    id v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

void sub_10003F5AC(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) mainSplitViewController];
  uint64_t v2 = [*(id *)(a1 + 32) mainSplitViewController];
  [v3 showColumn:[v2 preferredDisplacedColumn]];
}

id sub_10003FA94(uint64_t a1)
{
  return [*(id *)(a1 + 32) showAttributionHighlightsForNoteWithObjectID:*(void *)(a1 + 40) selection:*(void *)(a1 + 48) suppressSidebar:*(unsigned __int8 *)(a1 + 56)];
}

void sub_10003FAA8(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) modernManagedObjectContext];
  id v3 = [v2 objectWithID:*(void *)(a1 + 40)];

  uint64_t v4 = [*(id *)(a1 + 32) trailingSidebarViewController];
  unsigned int v5 = [v4 isSidebarHidden];

  id v6 = *(void **)(a1 + 32);
  if (!v5)
  {
    if ([v6 isTrailingContentVisible])
    {
      [*(id *)(a1 + 32) setActivityStreamSelection:*(void *)(a1 + 48)];
      uint64_t v13 = 4;
LABEL_37:
      id v30 = [objc_alloc((Class)ICActivityStreamDigest) initWithObject:v3];
      unint64_t v31 = (unint64_t)[v30 hasRecentUpdates];
      id v32 = [v30 isCurrentUserMentionedInRecentSummary];
      double v33 = *(void **)(a1 + 48);
      if (v33)
      {
        uint64_t v34 = [v33 filter];
        double v35 = [v30 recentUpdatesFilter];
        double v36 = [v34 fromDate];
        [v36 timeIntervalSince1970];
        double v38 = v37;
        double v39 = [v35 fromDate];
        [v39 timeIntervalSince1970];
        if (v38 >= v40)
        {
          [v34 toDate];
          uint64_t v50 = v13;
          v42 = unsigned int v41 = v3;
          [v42 timeIntervalSince1970];
          double v44 = v43;
          id v45 = [v35 toDate];
          [v45 timeIntervalSince1970];
          unint64_t v31 = v44 <= v46;

          id v3 = v41;
          uint64_t v13 = v50;
        }
        else
        {
          unint64_t v31 = 0;
        }

        id v32 = [v30 isCurrentUserMentionedInFilter:v35];
      }
      id v47 = [*(id *)(a1 + 32) eventReporter];
      [v47 submitCollabActivityBrowseEventForObject:v3 contextPath:0 clickContext:5 mode:v13 isCurrentUserMentioned:v32 hasRecentUpdates:v31];

      goto LABEL_43;
    }
    unsigned int v15 = [*(id *)(a1 + 32) trailingSidebarSplitViewController];
    if (([v15 shouldRenderAsOverlay] & 1) != 0 || *(unsigned char *)(a1 + 56))
    {
    }
    else
    {
      unsigned __int8 v25 = [*(id *)(a1 + 32) showsPresentedActivityStreamAsModal];

      if ((v25 & 1) == 0)
      {
        id v26 = [*(id *)(a1 + 32) trailingSidebarSplitViewController];
        id v27 = [v26 displayMode];

        if (v27 == (id)1)
        {
          [*(id *)(a1 + 32) showActivityStreamForObjectWithObjectID:*(void *)(a1 + 40)];
          uint64_t v13 = 0;
        }
        else
        {
          uint64_t v13 = 4;
        }
        uint64_t v49 = [*(id *)(a1 + 32) trailingSidebarViewController];
        v51[0] = _NSConcreteStackBlock;
        v51[1] = 3221225472;
        v51[2] = sub_100040080;
        v51[3] = &unk_100625860;
        v51[4] = *(void *)(a1 + 32);
        id v52 = *(id *)(a1 + 48);
        [v49 ic_performBlockAfterActiveTransition:v51];

        id v29 = v52;
LABEL_36:

        if (!v13) {
          goto LABEL_43;
        }
        goto LABEL_37;
      }
    }
    if ([*(id *)(a1 + 32) behavior] == (id)3 && !*(unsigned char *)(a1 + 56))
    {
      id v16 = [*(id *)(a1 + 32) mainSplitViewController];
      [v16 hideColumn:1];
    }
    id v17 = [*(id *)(a1 + 32) trailingSidebarSplitViewController];
    id v18 = [v17 displayMode];

    if (v18 == (id)3)
    {
      uint64_t v19 = [*(id *)(a1 + 32) trailingSidebarViewController];
      [v19 setSidebarHidden:1];

      uint64_t v13 = 4;
    }
    else
    {
      uint64_t v13 = 0;
    }
    v55[0] = _NSConcreteStackBlock;
    v55[1] = 3221225472;
    v55[2] = sub_100040018;
    v55[3] = &unk_100625A00;
    v55[4] = *(void *)(a1 + 32);
    id v56 = v3;
    id v57 = *(id *)(a1 + 48);
    double v20 = objc_retainBlock(v55);
    unsigned int v21 = [*(id *)(a1 + 32) showsPresentedActivityStreamAsModal];
    uint64_t v22 = *(void **)(a1 + 32);
    if (v21)
    {
      v53[0] = _NSConcreteStackBlock;
      v53[1] = 3221225472;
      v53[2] = sub_100040070;
      v53[3] = &unk_100625988;
      id v54 = v20;
      [v22 hidePresentedActivityStreamNavigationControllerWithCompletion:v53];
    }
    else
    {
      uint64_t v23 = [*(id *)(a1 + 32) noteEditorViewController];
      id v24 = [v23 activityStreamToolbar];
      if (v24)
      {
      }
      else
      {
        unsigned __int8 v28 = [*(id *)(a1 + 32) showsPresentedActivityStreamAsModal];

        if ((v28 & 1) == 0)
        {
          id v48 = [*(id *)(a1 + 32) trailingSidebarViewController];
          [v48 ic_performBlockAfterActiveTransition:v20];

          goto LABEL_35;
        }
      }
      ((void (*)(void *))v20[2])(v20);
    }
LABEL_35:

    id v29 = v56;
    goto LABEL_36;
  }
  [v6 showActivityStreamForObjectWithObjectID:*(void *)(a1 + 40)];
  char v7 = [*(id *)(a1 + 32) presentedActivityStreamNavigationController];
  id v8 = [v7 viewMode];

  id v9 = [*(id *)(a1 + 32) presentedActivityStreamNavigationController];
  id v10 = [v9 view];
  uint64_t v11 = [v10 window];

  uint64_t v12 = 3;
  if (v8 != (id)2) {
    uint64_t v12 = 0;
  }
  if (v8 == (id)3) {
    uint64_t v12 = 2;
  }
  if (v11) {
    uint64_t v13 = v12;
  }
  else {
    uint64_t v13 = 0;
  }
  [*(id *)(a1 + 32) setActivityStreamSelection:*(void *)(a1 + 48)];
  if (*(unsigned char *)(a1 + 56) || *(void *)(a1 + 48) && v8 == (id)3)
  {
    uint64_t v14 = [*(id *)(a1 + 32) presentedActivityStreamNavigationController];
    [v14 moveToViewMode:1];
  }
  if (v13) {
    goto LABEL_37;
  }
LABEL_43:
}

id sub_100040018(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) noteEditorViewController];
  [v2 showActivityStreamToolbarForObject:*(void *)(a1 + 40) selection:*(void *)(a1 + 48) animated:1];

  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void **)(a1 + 32);

  return [v4 setActivityStreamSelection:v3];
}

uint64_t sub_100040070(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_100040080(uint64_t a1)
{
  return [*(id *)(a1 + 32) setActivityStreamSelection:*(void *)(a1 + 40)];
}

id sub_100040984(id a1, NSManagedObjectID *a2)
{
  return [(NSManagedObjectID *)a2 URIRepresentation];
}

id sub_10004098C(id a1, id a2)
{
  id v2 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v3 = +[ICTagAllTagsItemIdentifier archiveIdentifier];
  }
  else
  {
    objc_opt_class();
    uint64_t v4 = ICDynamicCast();
    if (objc_msgSend(v4, "ic_isHashtagType"))
    {
      unsigned int v5 = [v4 URIRepresentation];
      uint64_t v3 = [v5 absoluteString];
    }
    else
    {
      uint64_t v3 = 0;
    }
  }

  return v3;
}

void sub_100040E34(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40) && !*(unsigned char *)(a1 + 41))
  {
    id v3 = [*(id *)(a1 + 32) noteEditorViewController];
    [v3 showInkPicker:0];
  }
  else if (*(unsigned char *)(a1 + 42))
  {
    id v3 = [*(id *)(a1 + 32) noteEditorViewController];
    [v3 addTodoListAtEndOfNote];
  }
  else
  {
    if (*(unsigned char *)(a1 + 43))
    {
      id v1 = [*(id *)(a1 + 32) noteEditorViewController];
      id v3 = v1;
      uint64_t v2 = 7;
    }
    else
    {
      if (!*(unsigned char *)(a1 + 44)) {
        return;
      }
      id v1 = [*(id *)(a1 + 32) noteEditorViewController];
      id v3 = v1;
      uint64_t v2 = 4;
    }
    [v1 showInsertUIWithPreferredSourceType:v2];
  }
}

void sub_1000412CC(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  id v3 = os_log_create("com.apple.notes", "UI");
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG)) {
    sub_1004D4580();
  }

  if (v2)
  {
    uint64_t v4 = os_log_create("com.apple.notes", "UI");
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1004D44FC(v2);
    }
  }
}

void sub_1000417BC(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1000417D8(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) modernManagedObjectContext];
  id v3 = [*(id *)(a1 + 32) selectedNoteObjectID];
  id v7 = [v2 objectWithID:v3];

  uint64_t v4 = [v7 title];
  uint64_t v5 = *(void *)(*(void *)(a1 + 40) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;
}

void sub_100041878(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) legacyManagedObjectContext];
  id v3 = [*(id *)(a1 + 32) selectedNoteObjectID];
  id v7 = [v2 objectWithID:v3];

  uint64_t v4 = [v7 title];
  uint64_t v5 = *(void *)(*(void *)(a1 + 40) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;
}

void sub_100041918(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) modernManagedObjectContext];
  id v3 = [*(id *)(a1 + 32) selectedInvitationObjectID];
  id v7 = [v2 objectWithID:v3];

  uint64_t v4 = [v7 title];
  uint64_t v5 = *(void *)(*(void *)(a1 + 40) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;
}

void sub_1000419B8(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) modernManagedObjectContext];
  id v6 = [v2 objectWithID:*(void *)(a1 + 40)];

  uint64_t v3 = [v6 titleForNavigationBar];
  uint64_t v4 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

void sub_100041A38(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) legacyManagedObjectContext];
  id v6 = [v2 objectWithID:*(void *)(a1 + 40)];

  uint64_t v3 = [v6 titleForTableViewCell];
  uint64_t v4 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

void sub_1000424C0(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (!*(unsigned char *)(a1 + 48))
  {
    uint64_t v4 = [*(id *)(a1 + 32) folderListViewController];
    uint64_t v5 = [v4 dataSource];
    id v6 = [v5 firstRelevantItemIdentifier];

    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();
    id v8 = *(void **)(a1 + 32);
    if (isKindOfClass)
    {
      id v9 = +[NSSet ic_setFromNonNilObject:v6];
      id v10 = +[NSSet set];
      [v8 selectContainerWithIdentifiers:v9 excludingIdentifiers:v10 usingRootViewController:1 deferUntilDataLoaded:0 dismissOverlayContent:1 animated:0];
    }
    else
    {
      [*(id *)(a1 + 32) validateState];
    }
  }
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  v17[2] = sub_10004269C;
  v17[3] = &unk_100625CC8;
  v17[4] = *(void *)(a1 + 32);
  id v11 = v3;
  id v18 = v11;
  id v19 = *(id *)(a1 + 40);
  uint64_t v12 = objc_retainBlock(v17);
  id v13 = [*(id *)(a1 + 32) behavior];
  uint64_t v14 = *(void **)(a1 + 32);
  if (v13 == (id)3)
  {
    unsigned int v15 = [v14 window];
    id v16 = [v15 rootViewController];
    [v16 dismissViewControllerAnimated:1 completion:v12];
  }
  else
  {
    unsigned int v15 = [v14 startupPresenter];
    [v15 dismissWithCompletionBlock:v12];
  }
}

uint64_t sub_10004269C(uint64_t a1)
{
  [*(id *)(a1 + 32) setStartupPresenter:0];
  [*(id *)(a1 + 32) setWelcomeScreenVisible:0];
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2) {
    (*(void (**)(void))(v2 + 16))();
  }
  uint64_t result = *(void *)(a1 + 48);
  if (result)
  {
    uint64_t v4 = *(uint64_t (**)(void))(result + 16);
    return v4();
  }
  return result;
}

id sub_100042714(uint64_t a1)
{
  return [*(id *)(a1 + 32) presentViewController:*(void *)(a1 + 40) animated:0 completion:0];
}

void sub_100042D00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100042D20(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    [WeakRetained setActivityStreamSelection:0];
    if (!WeakRetained[4])
    {
      uint64_t v2 = [WeakRetained trailingSidebarSplitViewController];
      unsigned __int8 v3 = [v2 isCollapsed];

      if ((v3 & 1) == 0)
      {
        uint64_t v4 = [WeakRetained noteEditorViewController];
        [v4 setNote:0];

        uint64_t v5 = [WeakRetained legacyNoteEditorViewController];
        [v5 displayNote:0];
      }
    }
    id v6 = [WeakRetained selectedModernNote];
    id v7 = [WeakRetained activityStreamNavigationController];
    [v7 setObject:v6];

    id v8 = [*(id *)(a1 + 32) window];
    id v9 = [v8 windowScene];
    [WeakRetained updateSceneTitle:v9];
  }
}

void sub_100043634(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) trailingSidebarViewController];
  [v1 setSidebarHidden:1];
}

void sub_1000441B4(uint64_t a1)
{
  if ([*(id *)(a1 + 32) selectionStateTrackingEnabled] && *(unsigned char *)(a1 + 40))
  {
    uint64_t v2 = [*(id *)(a1 + 32) selectedNoteObjectID];
    unsigned __int8 v3 = v2;
    if (v2)
    {
      id v9 = v2;
    }
    else
    {
      uint64_t v4 = [*(id *)(a1 + 32) mostRecentRegularWidthSelectedNoteObjectID];
      uint64_t v5 = v4;
      if (v4)
      {
        id v9 = v4;
      }
      else
      {
        objc_opt_class();
        id v6 = [*(id *)(a1 + 32) currentNoteBrowseViewController];
        id v7 = [v6 dataSource];
        id v8 = [v7 firstRelevantItemIdentifier];
        ICDynamicCast();
        id v9 = (id)objc_claimAutoreleasedReturnValue();
      }
    }

    if ([*(id *)(a1 + 32) objectAlreadyLoadedInEditorWithObjectID:v9])
    {
      if (([*(id *)(a1 + 32) isNoteEditorVisible] & 1) == 0) {
        [*(id *)(a1 + 32) setNoteEditorAnimated:0 ensurePresented:1 startEditing:0 showLegacy:[*(id *)(a1 + 32) isInHTMLEditorMode] showLatestUpdatesIfAvailable:0];
      }
    }
    else if (objc_msgSend(v9, "ic_isNoteType"))
    {
      [*(id *)(a1 + 32) selectNoteWithObjectID:v9 scrollState:0 startEditing:0 animated:0 ensurePresented:1];
    }
    else if (objc_msgSend(v9, "ic_isInvitationType"))
    {
      [*(id *)(a1 + 32) selectInvitationWithObjectID:v9 animated:0];
    }
  }
}

void sub_100044698(id a1)
{
  unsigned __int8 v3 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  dispatch_queue_t v1 = dispatch_queue_create("com.apple.notes.printControllerQueue", v3);
  uint64_t v2 = (void *)qword_1006AA0B0;
  qword_1006AA0B0 = (uint64_t)v1;
}

void sub_1000446FC(uint64_t a1)
{
  uint64_t v2 = +[UIPrintInteractionController sharedPrintController];
  [v2 setPrintFormatter:*(void *)(a1 + 32)];
  unsigned __int8 v3 = objc_alloc_init(ICPrintPageRenderer);
  uint64_t v4 = +[UIColor systemBackgroundColor];
  [(ICPrintPageRenderer *)v3 setBackgroundColor:v4];

  [(ICPrintPageRenderer *)v3 addPrintFormatter:*(void *)(a1 + 32) startingAtPageAtIndex:0];
  [v2 setPrintPageRenderer:v3];
  uint64_t v5 = +[NSUUID UUID];
  id v6 = [v5 UUIDString];
  id v7 = +[NSString stringWithFormat:@"%@.pdf", v6];

  id v8 = NSTemporaryDirectory();
  id v9 = [v8 stringByAppendingPathComponent:v7];

  id v10 = +[NSURL fileURLWithPath:v9];
  dispatch_semaphore_t v11 = dispatch_semaphore_create(0);
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_1000448F4;
  v15[3] = &unk_100625D88;
  id v16 = v10;
  uint64_t v19 = *(void *)(a1 + 48);
  id v12 = *(id *)(a1 + 40);
  dispatch_semaphore_t v17 = v11;
  id v18 = v12;
  id v13 = v11;
  id v14 = v10;
  [v2 savePDFToURL:v14 showProgress:0 completionHandler:v15];
  dispatch_semaphore_wait(v13, 0xFFFFFFFFFFFFFFFFLL);
}

void sub_1000448F4(uint64_t a1, void *a2, char a3, void *a4)
{
  id v7 = a2;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100044A04;
  block[3] = &unk_100625D60;
  char v17 = a3;
  id v11 = a4;
  id v12 = *(id *)(a1 + 32);
  id v13 = v7;
  uint64_t v16 = *(void *)(a1 + 56);
  id v15 = *(id *)(a1 + 48);
  id v14 = *(id *)(a1 + 40);
  id v8 = v7;
  id v9 = v11;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

intptr_t sub_100044A04(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 80) && !*(void *)(a1 + 32))
  {
    id v10 = +[NSData dataWithContentsOfURL:*(void *)(a1 + 40)];
    id v11 = [*(id *)(a1 + 48) printFormatter];
    id v12 = [v11 pageCount];
    double v13 = *(double *)(a1 + 72);

    uint64_t v14 = *(void *)(a1 + 64);
    if (v14) {
      (*(void (**)(uint64_t, void *, uint64_t, CGFloat, CGFloat, CGFloat, CGFloat))(v14 + 16))(v14, v10, (uint64_t)(v13 * (double)(uint64_t)v12), CGRectZero.origin.x, CGRectZero.origin.y, CGRectZero.size.width, CGRectZero.size.height);
    }
  }
  else
  {
    uint64_t v2 = os_log_create("com.apple.notes", "UI");
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
      sub_1004D4678(a1, v2, v3, v4, v5, v6, v7, v8);
    }

    uint64_t v9 = *(void *)(a1 + 64);
    if (v9) {
      (*(void (**)(uint64_t, void, uint64_t, CGFloat, CGFloat, CGFloat, CGFloat))(v9 + 16))(v9, 0, 0x7FFFFFFFFFFFFFFFLL, CGRectNull.origin.x, CGRectNull.origin.y, CGRectNull.size.width, CGRectNull.size.height);
    }
  }
  [*(id *)(a1 + 48) setPrintFormatter:0];
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 56));
}

void sub_100045754(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) mainSplitViewController];
  [v1 setDisplayModeButtonVisibility:0];
}

void sub_10004579C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) selectionStateController];
  [v2 navigationControllerDidTransitionWithNewContainerItemID:*(void *)(a1 + 40) newTagSelection:*(void *)(a1 + 48) forgetObjectSelection:*(unsigned __int8 *)(a1 + 56)];
}

uint64_t sub_1000457F8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1000458E4(uint64_t a1)
{
  objc_opt_class();
  id v4 = [*(id *)(a1 + 32) legacyManagedObjectContext];
  id v2 = [v4 objectWithID:*(void *)(a1 + 40)];
  uint64_t v3 = ICDynamicCast();
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = [v3 enforcedNoteContainerViewMode];
}

id sub_100045D40(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  objc_opt_class();
  id v4 = ICDynamicCast();

  uint64_t v5 = [v2 managedObjectIDFromURL:v4];

  return v5;
}

id sub_100045DC0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = +[ICTagAllTagsItemIdentifier archiveIdentifier];
  unsigned int v5 = [v3 isEqual:v4];

  if (v5)
  {
    id v6 = +[ICTagAllTagsItemIdentifier sharedItemIdentifier];
  }
  else
  {
    uint64_t v7 = *(void **)(a1 + 32);
    uint64_t v8 = +[NSURL URLWithString:v3];
    uint64_t v9 = [v7 managedObjectIDFromURL:v8];

    if (objc_msgSend(v9, "ic_isHashtagType")) {
      id v6 = v9;
    }
    else {
      id v6 = 0;
    }
  }

  return v6;
}

void sub_100045EA4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained updatePrimaryContainerViewAppearance];
}

void sub_100045EE4(uint64_t a1)
{
  id v2 = [ICViewAttachmentsActivity alloc];
  id v3 = [*(id *)(a1 + 32) mainSplitViewController];
  id v4 = [*(id *)(a1 + 32) eventReporter];
  unsigned int v5 = [(ICViewAttachmentsActivity *)v2 initWithPresentingViewController:v3 eventReporter:v4];

  [(ICViewAttachmentsActivity *)v5 performActivityUserInitiated:0 completion:0];
}

void sub_100046050(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) legacyManagedObjectContext];
  [v2 ic_existingObjectWithID:*(void *)(a1 + 40)];
  id v3 = (id)objc_claimAutoreleasedReturnValue();

  [*(id *)(a1 + 48) setNoteCollection:v3 dataIndexedBlock:*(void *)(a1 + 56) dataRenderedBlock:*(void *)(a1 + 64)];
}

id sub_1000460C0(uint64_t a1)
{
  return [*(id *)(a1 + 32) popToViewController:*(void *)(a1 + 40) animated:*(unsigned __int8 *)(a1 + 48)];
}

uint64_t sub_100046420(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v6 = v5;
    uint64_t v7 = [*(id *)(a1 + 32) objectAtIndexedSubscript:a3];
    uint64_t v8 = [v6 noteContainer];
    uint64_t v9 = [v8 objectID];
    if ([v9 isEqual:v7])
    {
      unsigned int v10 = 1;
    }
    else
    {
      id v11 = [v6 noteCollection];
      id v12 = [v11 objectID];
      unsigned int v10 = [v12 isEqual:v7];
    }
  }
  else
  {
    unsigned int v10 = 0;
  }

  return v10 ^ 1;
}

void sub_1000465E4(uint64_t a1, void *a2, uint64_t a3)
{
  id v11 = a2;
  if (a3)
  {
    id v5 = -[ICNoteBrowseViewController initWithViewMode:viewControllerManager:]([ICNoteBrowseViewController alloc], "initWithViewMode:viewControllerManager:", [*(id *)(a1 + 32) noteContainerViewMode], *(void *)(a1 + 32));
  }
  else
  {
    id v5 = [*(id *)(a1 + 32) rootNoteBrowseViewController];
  }
  id v6 = v5;
  objc_opt_class();
  uint64_t v7 = [*(id *)(a1 + 32) existingManagedObjectWithObjectID:v11];
  uint64_t v8 = ICDynamicCast();

  [(ICNoteBrowseViewController *)v6 setNoteContainer:v8 dataIndexedBlock:0 dataRenderedBlock:0];
  uint64_t v9 = [*(id *)(a1 + 32) rootNoteBrowseViewController];

  if (v6 != v9)
  {
    unsigned int v10 = [*(id *)(a1 + 32) noteBrowseNavigationController];
    [v10 pushViewController:v6 animated:0];
  }
}

void sub_100046868(uint64_t a1)
{
  if ([*(id *)(a1 + 32) isAutomaticallySelectingNotes])
  {
    id v2 = [*(id *)(a1 + 32) selectedNoteObjectID];

    if (!v2)
    {
      LOWORD(v3) = 256;
      [*(id *)(a1 + 32) selectNoteWithObjectID:*(void *)(a1 + 40) scrollState:0 startEditing:0 showInkPicker:0 dismissOverlayContent:0 showLatestUpdatesIfAvailable:1 animated:1 ensurePresented:v3];
    }
  }
}

id sub_1000468D8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 objectID];
  unsigned int v5 = [v4 ic_isNoteType];

  id v6 = *(void **)(a1 + 32);
  uint64_t v7 = [v3 objectID];
  unsigned int v8 = [v6 isSelectionAppropriateForObjectID:v7];

  uint64_t v9 = [v3 changedValues];
  unsigned int v10 = [v9 allKeys];

  if ([v10 containsObject:@"markedForDeletion"]) {
    unsigned int v11 = 1;
  }
  else {
    unsigned int v11 = [v10 containsObject:@"deletedFlag"];
  }
  id v12 = v3;
  double v13 = [v12 changedValues];
  uint64_t v14 = [v13 allKeys];
  unsigned int v15 = [v14 containsObject:@"folder"];

  if (!v15)
  {
    unsigned int v42 = 0;
    goto LABEL_26;
  }
  unint64_t v66 = __PAIR64__(v5, v11);
  CFStringRef v72 = @"folder";
  uint64_t v16 = +[NSArray arrayWithObjects:&v72 count:1];
  char v17 = [v12 committedValuesForKeys:v16];

  objc_opt_class();
  id v18 = [v17 objectForKeyedSubscript:@"folder"];
  uint64_t v19 = ICDynamicCast();

  objc_opt_class();
  double v20 = [v12 changedValues];
  unsigned int v21 = [v20 objectForKeyedSubscript:@"folder"];
  uint64_t v22 = ICDynamicCast();

  uint64_t v23 = [*(id *)(a1 + 32) selectedNoteObjectID];
  id v24 = [v12 objectID];
  if ([v23 isEqual:v24] && v19)
  {

    if (v22)
    {
      if ([v19 isTrashFolder]
        && ([v22 isTrashFolder] & 1) == 0
        && [*(id *)(a1 + 32) isNoteBeingRecovered])
      {
        unsigned __int8 v25 = [v12 folder];
        uint64_t v26 = [v25 objectID];
        uint64_t v27 = *(void *)(*(void *)(a1 + 40) + 8);
        unsigned __int8 v28 = *(void **)(v27 + 40);
        *(void *)(v27 + 40) = v26;

        if ([v12 isSystemPaper]
          && +[ICAccount hidesSystemPaperNotesInCustomFolders])
        {
          uint64_t v29 = +[ICAccount globalVirtualSystemPaperFolder];
          uint64_t v30 = *(void *)(*(void *)(a1 + 40) + 8);
          unint64_t v31 = *(void **)(v30 + 40);
          *(void *)(v30 + 40) = v29;
        }
        unsigned int v11 = v66;
        unsigned int v5 = HIDWORD(v66);
        if ([v12 isMathNote]
          && +[ICAccount hidesMathNotesInCustomFolders])
        {
          uint64_t v32 = +[ICAccount globalVirtualMathNotesFolder];
          uint64_t v33 = *(void *)(*(void *)(a1 + 40) + 8);
          uint64_t v34 = *(void **)(v33 + 40);
          *(void *)(v33 + 40) = v32;
        }
        if ([v12 isCallNote]
          && +[ICAccount hidesCallNotesInCustomFolders])
        {
          uint64_t v35 = +[ICAccount globalVirtualCallNotesFolder];
          uint64_t v36 = *(void *)(*(void *)(a1 + 40) + 8);
          double v37 = *(void **)(v36 + 40);
          *(void *)(v36 + 40) = v35;
        }
        double v38 = [*(id *)(a1 + 32) overrideContainerIdentifier];

        if (v38)
        {
          uint64_t v39 = [*(id *)(a1 + 32) overrideContainerIdentifier];
          uint64_t v40 = *(void *)(*(void *)(a1 + 40) + 8);
          unsigned int v41 = *(void **)(v40 + 40);
          *(void *)(v40 + 40) = v39;
        }
      }
      else
      {
        unsigned int v63 = [v19 objectID];
        double v64 = [v22 objectID];
        unsigned int v65 = [v63 isEqual:v64];

        v8 &= v65;
        unsigned int v11 = v66;
        unsigned int v5 = HIDWORD(v66);
      }
      if ([v19 isTrashFolder]) {
        unsigned int v43 = 0;
      }
      else {
        unsigned int v43 = [v22 isTrashFolder];
      }
      goto LABEL_25;
    }
  }
  else
  {
  }
  unsigned int v43 = 0;
  unsigned int v11 = v66;
  unsigned int v5 = HIDWORD(v66);
LABEL_25:

  unsigned int v42 = v43;
LABEL_26:
  double v44 = [v12 changedValues];
  id v45 = [v44 allKeys];
  if ([v45 containsObject:@"title"])
  {
    double v46 = [*(id *)(a1 + 32) selectedNoteObjectID];
    [v12 objectID];
    HIDWORD(v66) = v42;
    id v47 = v12;
    unsigned int v48 = v11;
    uint64_t v49 = a1;
    uint64_t v50 = v10;
    unsigned int v51 = v8;
    v53 = unsigned int v52 = v5;
    LODWORD(v66) = [v46 isEqual:v53];

    unsigned int v5 = v52;
    unsigned int v8 = v51;
    unsigned int v10 = v50;
    a1 = v49;
    unsigned int v11 = v48;
    id v12 = v47;
    unsigned int v42 = HIDWORD(v66);

    if (v66)
    {
      id v67 = _NSConcreteStackBlock;
      uint64_t v68 = 3221225472;
      double v69 = sub_100046EAC;
      id v70 = &unk_100625AF0;
      uint64_t v71 = *(void *)(a1 + 32);
      performBlockOnMainThread();
    }
  }
  else
  {
  }
  id v54 = [*(id *)(a1 + 32) selectedSearchResult:v66, v67, v68, v69, v70, v71];

  if (v54)
  {
    id v55 = [*(id *)(a1 + 32) selectedNoteObjectID];
    id v56 = [v12 objectID];
    unsigned int v57 = [v55 isEqual:v56];
    int v58 = v57 ^ 1 | v42;
    if ((v58 | v11)) {
      unsigned __int8 v59 = v57 | v58 ^ 1;
    }
    else {
      unsigned __int8 v59 = [v12 isDeleted];
    }
    *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = v59;
  }
  if ((v5 & (v8 ^ 1 | v11 | v42)) != 0) {
    id v60 = v12;
  }
  else {
    id v60 = 0;
  }
  id v61 = v60;

  return v61;
}

void sub_100046EAC(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  id v3 = [v1 window];
  id v2 = [v3 windowScene];
  [v1 updateSceneTitle:v2];
}

id sub_100046F14(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) selectedNoteBrowseContainerItemID];
  if (v2
    && (id v3 = (void *)v2,
        [*(id *)(a1 + 32) selectedNoteBrowseContainerItemID],
        id v4 = objc_claimAutoreleasedReturnValue(),
        unsigned __int8 v5 = [v4 isEqual:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)],
        v4,
        v3,
        (v5 & 1) == 0))
  {
    unsigned int v8 = *(void **)(a1 + 32);
    uint64_t v9 = +[NSSet ic_setFromNonNilObject:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)];
    unsigned int v10 = +[NSSet set];
    unsigned int v11 = [*(id *)(a1 + 32) rootNoteBrowseViewController];
    BOOL v12 = [*(id *)(a1 + 32) noteContainerViewMode] == 0;
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472;
    v15[2] = sub_1000470D8;
    v15[3] = &unk_100625938;
    objc_copyWeak(&v16, (id *)(a1 + 48));
    BYTE1(v14) = v12;
    LOBYTE(v14) = 1;
    [v8 selectContainerWithIdentifiers:v9 excludingIdentifiers:v10 noteBrowseViewController:v11 usingRootViewController:1 dismissOverlayContent:0 ensurePresented:0 ensureSelectedNote:0 keepEditorShowing:0 dataIndexedBlock:0 dataRenderedBlock:0];

    objc_destroyWeak(&v16);
  }
  else
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    uint64_t v7 = [WeakRetained noteEditorViewController];
    [v7 startEditing];
  }
  return [*(id *)(a1 + 32) setIsRecoveredNoteBeingPresented:0];
}

void sub_1000470C4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1000470D8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = [WeakRetained noteEditorViewController];
  [v1 startEditing];
}

BOOL sub_100047130(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 changedValues];
  unsigned __int8 v5 = +[NSMutableDictionary ic_dictionaryFromNonNilDictionary:v4];

  [v5 removeObjectForKey:@"serverShareData"];
  id v6 = [v3 objectID];

  uint64_t v7 = [*(id *)(a1 + 32) selectedNoteObjectID];
  if ([v6 isEqual:v7]) {
    BOOL v8 = [v5 count] != 0;
  }
  else {
    BOOL v8 = 0;
  }

  return v8;
}

void sub_100047264(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) folderListViewController];
  id v3 = [v2 dataSource];

  [*(id *)(a1 + 32) setIsSelectingNextRelevantNoteBrowseContainer:1];
  id v4 = +[NSSet set];
  unsigned __int8 v5 = +[NSSet set];
  id v6 = [*(id *)(a1 + 32) selectedNoteBrowseContainerItemID];

  uint64_t v7 = *(void **)(a1 + 32);
  if (v6)
  {
    BOOL v8 = [v7 selectedNoteBrowseContainerItemID];
    uint64_t v14 = v8;
    uint64_t v9 = +[NSArray arrayWithObjects:&v14 count:1];
    unsigned int v10 = [v3 nextRelevantItemIdentifierAfter:v9];

    if ([*(id *)(a1 + 32) selectionStateTrackingEnabled])
    {
      if (!v10)
      {
LABEL_8:

        goto LABEL_9;
      }
      uint64_t v11 = +[NSSet setWithObject:v10];
    }
    else
    {
      [*(id *)(a1 + 32) setSelectedNoteBrowseContainerItemID:v10];
      uint64_t v11 = [*(id *)(a1 + 32) selectedContainerIdentifiers];

      [*(id *)(a1 + 32) excludedContainerIdentifiers];
      v5 = id v4 = v5;
    }

    id v4 = (void *)v11;
    goto LABEL_8;
  }
  uint64_t v12 = [v7 selectedContainerIdentifiers];

  uint64_t v13 = [*(id *)(a1 + 32) excludedContainerIdentifiers];

  unsigned __int8 v5 = (void *)v13;
  id v4 = (void *)v12;
LABEL_9:
  [*(id *)(a1 + 32) setIsSelectingNextRelevantNoteBrowseContainer:0];
  [*(id *)(a1 + 32) selectContainerWithIdentifiers:v4 excludingIdentifiers:v5 usingRootViewController:1 deferUntilDataLoaded:0 dismissOverlayContent:0 animated:1];
}

void sub_1000475F8(id *a1)
{
  if ([a1[4] isAutomaticallySelectingNotes]) {
    goto LABEL_3;
  }
  uint64_t v2 = [a1[4] compactNavigationController];
  id v3 = [v2 topViewController];
  id v4 = [a1[4] rootNoteBrowseViewController];

  if (v3 == v4)
  {
LABEL_3:
    id v5 = a1[4];
    id v8 = [a1[5] copy];
    id v6 = [a1[6] copy];
    LOBYTE(v7) = 1;
    [v5 showContainerWithIdentifiers:v8 excludingIdentifiers:v6 usingRootViewController:1 deferUntilDataLoaded:0 dismissOverlayContent:0 keepEditorShowing:0 animated:v7];
  }
}

void sub_1000479A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000479C4(uint64_t a1)
{
  [*(id *)(a1 + 32) ic_existingObjectWithID:*(void *)(a1 + 40)];
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v2 = [v3 folder];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = [v2 isTrashFolder];
}

void sub_100047A34(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v6 = +[NSSet setWithObject:*(void *)(a1 + 40)];
  id v3 = +[NSSet set];
  id v4 = [*(id *)(a1 + 32) rootNoteBrowseViewController];
  LOWORD(v5) = 0;
  [v2 selectContainerWithIdentifiers:v6 excludingIdentifiers:v3 noteBrowseViewController:v4 usingRootViewController:1 deferUntilDataLoaded:0 dismissOverlayContent:0 animated:0 ensurePresented:0 ensureSelectedNote:0 keepEditorShowing:0 dataIndexedBlock:0 dataRenderedBlock:0];
}

void sub_100047CC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100047CD8(uint64_t a1)
{
  [*(id *)(a1 + 32) ic_existingObjectWithID:*(void *)(a1 + 40)];
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  if ([v3 isSmartFolder]) {
    uint64_t v2 = v3;
  }
  else {
    uint64_t v2 = 0;
  }
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), v2);
}

void sub_100047E8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100047EA4(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) smartFolderQuery];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_1000480B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000480D0(void *a1)
{
  id v5 = [objc_alloc((Class)ICQueryResultsController) initWithManagedObjectContext:a1[4] query:a1[5]];
  uint64_t v2 = [v5 performFetch];
  uint64_t v3 = *(void *)(a1[6] + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_1000483B4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 48))
  {
    objc_opt_class();
    uint64_t v2 = ICDynamicCast();
    [*(id *)(a1 + 40) showSearchResult:v2 animated:1];
    if (!v2)
    {
      unsigned __int8 v3 = [*(id *)(a1 + 40) selectionStateTrackingEnabled];
      id v4 = *(void **)(a1 + 40);
      if (v3)
      {
        id v7 = [*(id *)(a1 + 40) previousSelectedNoteObjectID];
        LOWORD(v6) = 256;
        [v4 selectNoteWithObjectID:v7 scrollState:0 startEditing:0 showInkPicker:0 dismissOverlayContent:0 showLatestUpdatesIfAvailable:1 animated:1 ensurePresented:v6];

        return;
      }
      [*(id *)(a1 + 40) setSelectedNoteObjectID:0];
    }
  }
  else
  {
    LOWORD(v6) = 256;
    [*(id *)(a1 + 40) selectNoteWithObjectID:*(void *)(a1 + 32) scrollState:0 startEditing:0 showInkPicker:0 dismissOverlayContent:0 showLatestUpdatesIfAvailable:1 animated:1 ensurePresented:v6];
  }
  if (!*(void *)(a1 + 32))
  {
    id v5 = *(void **)(a1 + 40);
    [v5 validateState];
  }
}

void sub_100048748(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  id v2 = [*(id *)(a1 + 40) mainSplitViewController];
  [v1 postNotificationName:@"ICSplitViewControllerWillBeginDisplayModeChange" object:v2];
}

void sub_1000487A4(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  id v2 = [*(id *)(a1 + 40) mainSplitViewController];
  [v1 postNotificationName:@"ICSplitViewControllerDidEndDisplayModeChange" object:v2];
}

void sub_100048A38(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = [*(id *)(a1 + 40) mainSplitViewController];
  [v2 postNotificationName:@"ICSplitViewControllerWillBeginAnimatedTransitionToStateRequest" object:v3 userInfo:*(void *)(a1 + 48)];
}

void sub_100048A9C(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  id v2 = [*(id *)(a1 + 40) mainSplitViewController];
  [v1 postNotificationName:@"ICSplitViewControllerDidEndAnimatedTransitionToStateRequest" object:v2];
}

void sub_100048DA0(uint64_t a1)
{
  id v6 = [*(id *)(a1 + 32) trailingSidebarSplitViewController];
  if ([v6 isCollapsed])
  {
  }
  else
  {
    id v2 = [*(id *)(a1 + 32) behavior];

    if (v2 != (id)3)
    {
      if (([*(id *)(a1 + 32) isSplitViewExpandingOrCollapsing] & 1) == 0)
      {
        if ([*(id *)(a1 + 32) noteContainerViewMode]) {
          uint64_t v3 = 2;
        }
        else {
          uint64_t v3 = 1;
        }
        id v4 = [*(id *)(a1 + 32) mainSplitViewController];
        [v4 ic_showColumn:v3 animated:[*(unsigned __int8 *)(a1 + 40)]];
      }
      if (*(unsigned char *)(a1 + 41))
      {
        id v5 = *(void **)(a1 + 32);
        [v5 dismissPrimaryOverlayContent];
      }
    }
  }
}

void sub_100049340(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) objectWithID:*(void *)(a1 + 40)];
  id v2 = [*(id *)(a1 + 48) addHashtagToNoteBodyIfMissing:v3];
}

void sub_1000499E4(uint64_t a1)
{
  if ([*(id *)(a1 + 32) isAutomaticallySelectingNotes]) {
    goto LABEL_3;
  }
  id v2 = [*(id *)(a1 + 32) compactNavigationController];
  id v3 = [v2 topViewController];
  id v4 = [*(id *)(a1 + 32) rootNoteBrowseViewController];

  if (v3 == v4)
  {
LABEL_3:
    id v5 = *(void **)(a1 + 32);
    uint64_t v6 = *(void *)(a1 + 40);
    [v5 showTagSelection:v6];
  }
}

id sub_100049C18(uint64_t a1)
{
  return [*(id *)(a1 + 32) showTagSelection:*(void *)(a1 + 40)];
}

id sub_100049CD4(uint64_t a1)
{
  return [*(id *)(a1 + 32) validateState];
}

void sub_100049E20(uint64_t a1)
{
  [*(id *)(a1 + 32) validateState];
  id v2 = [*(id *)(a1 + 32) window];
  id v3 = [v2 _windowHostingScene];
  id v4 = [v3 session];

  id v5 = os_log_create("com.apple.notes", "UI");
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);
  if (v4)
  {
    if (v6)
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Refreshing Window scene after account change", buf, 2u);
    }

    id v5 = +[UIApplication sharedApplication];
    [v5 requestSceneSessionRefresh:v4];
  }
  else if (v6)
  {
    *(_WORD *)id v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "No scene session available so not refreshing window scene after account change", v7, 2u);
  }
}

void sub_10004A250(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) selectionStateController];
  [v1 willDismissSearch];
}

void sub_10004A294(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) folderListViewController];
  id v2 = [*(id *)(a1 + 40) objectID];
  [v3 scrollToContainerWithObjectID:v2];
}

void sub_10004AC7C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_10004AC98(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) modernManagedObjectContext];
  id v14 = [v2 objectWithID:*(void *)(a1 + 40)];

  id v3 = [v14 folder];
  id v4 = [v3 account];

  unsigned int v5 = [v4 hasAnyCustomFoldersIncludingSystem:0];
  BOOL v6 = [v14 folder];
  id v7 = v6;
  if (v5)
  {
    id v8 = [v6 account];
    uint64_t v9 = [v8 objectID];
    uint64_t v10 = *(void *)(*(void *)(a1 + 48) + 8);
    uint64_t v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;
  }
  else
  {
    uint64_t v12 = [v6 objectID];
    uint64_t v13 = *(void *)(*(void *)(a1 + 48) + 8);
    id v8 = *(void **)(v13 + 40);
    *(void *)(v13 + 40) = v12;
  }
}

void sub_10004AD94(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) legacyManagedObjectContext];
  id v14 = [v2 objectWithID:*(void *)(a1 + 40)];

  id v3 = [v14 store];
  id v4 = [v3 account];
  unsigned int v5 = [v4 hasAnyCustomFolders];

  BOOL v6 = [v14 store];
  id v7 = v6;
  if (v5)
  {
    id v8 = [v6 account];
    uint64_t v9 = [v8 objectID];
    uint64_t v10 = *(void *)(*(void *)(a1 + 48) + 8);
    uint64_t v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;
  }
  else
  {
    uint64_t v12 = [v6 objectID];
    uint64_t v13 = *(void *)(*(void *)(a1 + 48) + 8);
    id v8 = *(void **)(v13 + 40);
    *(void *)(v13 + 40) = v12;
  }
}

void sub_10004AE88(uint64_t a1)
{
  id v6 = +[ICAccount defaultAccountInContext:*(void *)(a1 + 32)];
  id v2 = [v6 defaultFolder];
  uint64_t v3 = [v2 objectID];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  unsigned int v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

void sub_10004B554(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10004B578(uint64_t a1)
{
  id v7 = [*(id *)(a1 + 32) objectWithID:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)];
  if ([v7 isSmartFolder])
  {
    id v2 = [v7 account];
    uint64_t v3 = [v2 defaultFolder];
    uint64_t v4 = [v3 objectID];
    uint64_t v5 = *(void *)(*(void *)(a1 + 40) + 8);
    id v6 = *(void **)(v5 + 40);
    *(void *)(v5 + 40) = v4;
  }
}

void sub_10004BF00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10004BF1C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v2 = [*(id *)(a1 + 32) objectID];
  BYTE1(v4) = 1;
  LOBYTE(v4) = *(unsigned char *)(a1 + 58);
  [WeakRetained selectNoteWithObjectID:v2 scrollState:0 startEditing:*(unsigned __int8 *)(a1 + 56) showInkPicker:*(unsigned __int8 *)(a1 + 57) dismissOverlayContent:1 showLatestUpdatesIfAvailable:1 animated:v4];

  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    (*(void (**)(void))(v3 + 16))();
  }
}

void sub_10004C0F0(uint64_t a1)
{
  if ([*(id *)(a1 + 32) noteContainerViewMode] == (id)1
    && *(unsigned char *)(a1 + 48)
    && +[ICFeatureFlags uniquelyiPadFluidTransitionsEnabled](_TtC11MobileNotes14ICFeatureFlags, "uniquelyiPadFluidTransitionsEnabled")&& ([*(id *)(a1 + 32) currentNoteBrowseViewController], id v2 = objc_claimAutoreleasedReturnValue(), v3 = objc_msgSend(v2, "ic_isViewVisible"), v2, v3))
  {
    objc_initWeak(&location, *(id *)(a1 + 32));
    v36[0] = _NSConcreteStackBlock;
    v36[1] = 3221225472;
    v36[2] = sub_10004C6BC;
    v36[3] = &unk_100626168;
    objc_copyWeak(&v37, &location);
    uint64_t v4 = objc_retainBlock(v36);
    id v5 = objc_alloc_init((Class)UIZoomTransitionOptions);
    v34[0] = _NSConcreteStackBlock;
    v34[1] = 3221225472;
    v34[2] = sub_10004C7F8;
    v34[3] = &unk_100626190;
    objc_copyWeak(&v35, &location);
    [v5 setInteractiveDismissShouldBegin:v34];
    id v6 = +[UIViewControllerTransition zoomWithOptions:v5 sourceViewProvider:v4];
    [*(id *)(a1 + 40) setPreferredTransition:v6];

    objc_destroyWeak(&v35);
    objc_destroyWeak(&v37);
    objc_destroyWeak(&location);
  }
  else
  {
    [*(id *)(a1 + 40) setPreferredTransition:0];
  }
  id v7 = [*(id *)(a1 + 32) trailingSidebarSplitViewController];
  if ([v7 isCollapsed])
  {

LABEL_9:
    if (*(unsigned char *)(a1 + 48))
    {
      id v8 = [*(id *)(a1 + 32) compactNavigationController];
      uint64_t v9 = [v8 viewControllers];
      unsigned __int8 v10 = [v9 containsObject:*(void *)(a1 + 40)];

      if ((v10 & 1) == 0)
      {
        uint64_t v11 = [*(id *)(a1 + 32) compactNavigationController];
        [v11 pushViewController:*(void *)(a1 + 40) animated:*(unsigned __int8 *)(a1 + 49)];
LABEL_12:

        goto LABEL_25;
      }
    }
    goto LABEL_25;
  }
  if ([*(id *)(a1 + 32) hasCompactWidth])
  {
    BOOL v12 = [*(id *)(a1 + 32) behavior] == (id)3;

    if (v12) {
      goto LABEL_9;
    }
  }
  else
  {
  }
  if ([*(id *)(a1 + 32) noteContainerViewMode])
  {
    if ([*(id *)(a1 + 32) noteContainerViewMode] == (id)1)
    {
      if (*(unsigned char *)(a1 + 48))
      {
        uint64_t v13 = [*(id *)(a1 + 32) secondaryNavigationController];
        id v14 = [v13 viewControllers];
        unsigned __int8 v15 = [v14 containsObject:*(void *)(a1 + 40)];

        if ((v15 & 1) == 0)
        {
          if (*(unsigned char *)(a1 + 49)) {
            uint64_t v16 = [*(id *)(a1 + 32) isNoteEditorVisible] ^ 1;
          }
          else {
            uint64_t v16 = 0;
          }
          uint64_t v11 = [*(id *)(a1 + 32) secondaryNavigationController];
          [v11 pushViewController:*(void *)(a1 + 40) animated:v16];
          goto LABEL_12;
        }
      }
    }
  }
  else if (*(void *)(a1 + 40))
  {
    char v17 = [*(id *)(a1 + 32) secondaryNavigationController];
    id v18 = [v17 viewControllers];
    uint64_t v40 = *(void *)(a1 + 40);
    uint64_t v19 = +[NSArray arrayWithObjects:&v40 count:1];
    unsigned __int8 v20 = [v18 isEqualToArray:v19];

    if ((v20 & 1) == 0)
    {
      uint64_t v39 = *(void *)(a1 + 40);
      uint64_t v11 = +[NSArray arrayWithObjects:&v39 count:1];
      uint64_t v30 = [*(id *)(a1 + 32) secondaryNavigationController];
      [v30 setViewControllers:v11];

      goto LABEL_12;
    }
  }
LABEL_25:
  if (*(unsigned char *)(a1 + 50))
  {
    unsigned int v21 = +[ICAppDelegate sharedInstance];
    unsigned __int8 v22 = [v21 shouldShowMigrationScreen];

    if ((v22 & 1) == 0)
    {
      uint64_t v23 = [*(id *)(a1 + 32) noteEditorViewController];
      v32[0] = _NSConcreteStackBlock;
      v32[1] = 3221225472;
      v32[2] = sub_10004C8BC;
      v32[3] = &unk_100625D18;
      char v33 = *(unsigned char *)(a1 + 51);
      v32[4] = *(void *)(a1 + 32);
      [v23 ic_performBlockAfterActiveTransition:v32];
    }
  }
  objc_opt_class();
  id v24 = [*(id *)(a1 + 32) modernManagedObjectContext];
  unsigned __int8 v25 = [*(id *)(a1 + 32) selectedNoteObjectID];
  uint64_t v26 = [v24 ic_existingObjectWithID:v25];
  uint64_t v27 = ICDynamicCast();

  if (v27 && *(unsigned char *)(a1 + 52) && [v27 isSharedViaICloud])
  {
    id v28 = [objc_alloc((Class)ICActivityStreamDigest) initWithObject:v27];
    if ([v28 hasUnseenHighlights])
    {
      [v27 markActivitySummaryViewed];
      uint64_t v29 = [*(id *)(a1 + 32) noteEditorViewController];
      v31[0] = _NSConcreteStackBlock;
      v31[1] = 3221225472;
      v31[2] = sub_10004C924;
      v31[3] = &unk_100625AF0;
      v31[4] = *(void *)(a1 + 32);
      [v29 ic_performBlockAfterActiveTransition:v31];
    }
  }
}

void sub_10004C678(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 112));
  _Unwind_Resume(a1);
}

id sub_10004C6BC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if ([WeakRetained isSearchActive]) {
    [WeakRetained selectedSearchResult];
  }
  else {
  id v2 = [WeakRetained selectedNoteObjectID];
  }
  if ([WeakRetained isSearchActive]) {
    [WeakRetained searchController];
  }
  else {
  uint64_t v3 = [WeakRetained currentNoteBrowseViewController];
  }
  uint64_t v4 = [v3 collectionView];
  id v5 = [v4 cellForItemIdentifier:v2];
  if (v5)
  {
    id v6 = [v3 view];
    [v6 layoutIfNeeded];

    id v7 = ICProtocolCast();
    uint64_t v8 = [v7 contextMenuInteractionPreview];
    uint64_t v9 = (void *)v8;
    if (v8) {
      unsigned __int8 v10 = (void *)v8;
    }
    else {
      unsigned __int8 v10 = v5;
    }
    id v11 = v10;
  }
  else
  {
    id v11 = v4;
  }

  return v11;
}

uint64_t sub_10004C7F8(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  uint64_t v5 = (uint64_t)[v3 willBegin];

  if (v5)
  {
    id v6 = [WeakRetained noteEditorViewController];
    if ([v6 isInkPickerShowing])
    {
      uint64_t v5 = 0;
    }
    else
    {
      id v7 = [WeakRetained noteEditorViewController];
      if ([v7 userWantsToSeeDateLabel])
      {
        uint64_t v5 = 1;
      }
      else
      {
        uint64_t v8 = [WeakRetained noteEditorViewController];
        uint64_t v5 = (uint64_t)[v8 isPasswordEntryShowing];
      }
    }
  }
  return v5;
}

void sub_10004C8BC(uint64_t a1)
{
  int v1 = *(unsigned __int8 *)(a1 + 40);
  id v2 = *(void **)(a1 + 32);
  if (v1)
  {
    id v3 = [v2 legacyNoteEditorViewController];
    [v3 setEditing:1 animated:1];
  }
  else
  {
    id v3 = [v2 noteEditorViewController];
    [v3 startEditing];
  }
}

void sub_10004C924(uint64_t a1)
{
  int v1 = *(void **)(a1 + 32);
  id v2 = [v1 selectedNoteObjectID];
  [v1 showRecentUpdatesForNoteWithObjectID:v2 suppressSidebar:1];
}

uint64_t sub_10004CAAC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = +[ICTagAllTagsItemIdentifier archiveIdentifier];
  unsigned __int8 v5 = [v3 isEqual:v4];

  if (v5)
  {
    uint64_t v6 = 0;
  }
  else
  {
    id v7 = [*(id *)(a1 + 32) managedObjectIDFromURL:v3];
    uint64_t v8 = [*(id *)(a1 + 32) existingManagedObjectWithObjectID:v7];
    uint64_t v9 = v8;
    if (v8 && ([v8 isDeleted] & 1) == 0)
    {
      objc_opt_class();
      unsigned __int8 v10 = ICDynamicCast();
      if ([v10 markedForDeletion])
      {
        uint64_t v6 = 1;
      }
      else
      {
        objc_opt_class();
        id v11 = ICDynamicCast();
        uint64_t v6 = (uint64_t)[v11 isMarkedForDeletion];
      }
    }
    else
    {
      uint64_t v6 = 1;
    }
  }
  return v6;
}

NSString *__cdecl sub_10004D4A8(id a1, id a2)
{
  id v2 = a2;
  objc_opt_class();
  id v3 = ICDynamicCast();

  uint64_t v4 = [v3 URIRepresentation];
  unsigned __int8 v5 = [v4 absoluteString];

  return (NSString *)v5;
}

NSURL *__cdecl sub_10004D530(id a1, NSManagedObjectID *a2)
{
  return [(NSManagedObjectID *)a2 URIRepresentation];
}

id sub_10004D69C(uint64_t a1)
{
  return +[ICShareNotifier clearNotificationForRecordID:*(void *)(a1 + 32)];
}

void sub_10004D874(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) modernManagedObjectContext];
  [v2 ic_existingObjectWithID:*(void *)(a1 + 40)];
  id v4 = (id)objc_claimAutoreleasedReturnValue();

  if (v4 && [v4 isEmpty])
  {
    +[ICNote deleteEmptyNote:v4];
    id v3 = [v4 managedObjectContext];
    [v3 ic_save];
  }
}

void sub_10004D910(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) legacyManagedObjectContext];
  [v2 ic_existingObjectWithID:*(void *)(a1 + 40)];
  id v9 = (id)objc_claimAutoreleasedReturnValue();

  id v3 = [v9 content];
  if (objc_msgSend(v3, "ic_containsNonWhitespaceCharacters")) {
    goto LABEL_5;
  }
  id v4 = [v9 attachments];
  id v5 = [v4 count];

  uint64_t v6 = v9;
  if (v9 && !v5)
  {
    id v7 = +[NotesApp sharedNotesApp];
    uint64_t v8 = [v7 noteContext];
    [v8 deleteNote:v9];

    id v3 = [*(id *)(a1 + 32) legacyManagedObjectContext];
    [v3 ic_save];
LABEL_5:

    uint64_t v6 = v9;
  }
}

void sub_10004ECD0(uint64_t a1)
{
  id v5 = [*(id *)(a1 + 32) searchController];
  if (([v5 isFirstResponder] & 1) != 0
    || ([v5 searchBar],
        id v2 = objc_claimAutoreleasedReturnValue(),
        unsigned int v3 = [v2 isFirstResponder],
        v2,
        v3))
  {
    [v5 cancelSearch];
  }
  else
  {
    id v4 = [*(id *)(a1 + 32) currentSearchBarViewController];
    [v4 startSearchBecomeFirstResponder:1];
  }
}

void sub_10004F4B8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) mainSplitViewController];
  [v2 showColumn:1];

  id v3 = [*(id *)(a1 + 32) noteContainerViewMode];
  if (v3 != (id)1)
  {
    id v2 = [*(id *)(a1 + 32) trailingSidebarSplitViewController];
    if (![v2 isCollapsed]) {
      goto LABEL_9;
    }
  }
  id v4 = [*(id *)(a1 + 32) activeEditorController];
  if (!objc_msgSend(v4, "ic_isViewVisible"))
  {

    if (v3 == (id)1) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  int v5 = *(unsigned __int8 *)(a1 + 40);

  if (v3 != (id)1) {
  if (!v5)
  }
  {
    id v2 = [*(id *)(a1 + 32) activeEditorController];
    uint64_t v6 = [v2 navigationController];
    id v7 = [v6 popViewControllerAnimated:1];

LABEL_9:
  }
LABEL_10:
  id v8 = [*(id *)(a1 + 32) currentNoteBrowseViewController];
  [v8 becomeFirstResponder];
}

uint64_t sub_10004F5D4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100050230(uint64_t a1, void *a2)
{
  id v6 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v3 = *(void **)(a1 + 32);
    id v4 = [v6 objectID];
    LOWORD(v5) = 257;
    [v3 selectNoteWithObjectID:v4 scrollState:0 startEditing:0 showInkPicker:0 dismissOverlayContent:1 showLatestUpdatesIfAvailable:1 animated:1 ensurePresented:v5];
  }
}

void sub_100051134(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 64)) {
    [*(id *)(a1 + 32) shareButtonPressedWithSender:*(void *)(a1 + 40)];
  }
  uint64_t v2 = *(void *)(a1 + 48);
  if (v2)
  {
    id v3 = +[ICAttachment attachmentWithIdentifier:v2 context:*(void *)(a1 + 56)];
    [*(id *)(a1 + 32) presentAttachment:v3];
  }
}

void sub_1000511BC(uint64_t a1)
{
  uint64_t v2 = +[ICAppURLUtilities attachmentForTranscriptionDonationURL:*(void *)(a1 + 32) managedObjectContext:*(void *)(a1 + 40)];
  if ([v2 isAudio])
  {
    if (v2)
    {
      id v3 = +[NSArray arrayWithObject:v2];
      id v4 = [*(id *)(a1 + 48) noteEditorViewController];
      uint64_t v5 = [v4 ic_window];
      id v6 = [*(id *)(a1 + 48) noteEditorViewController];
      id v7 = [v6 presentingViewController];
      v10[0] = _NSConcreteStackBlock;
      v10[1] = 3221225472;
      v10[2] = sub_10005136C;
      v10[3] = &unk_1006262C0;
      id v8 = v2;
      uint64_t v9 = *(void *)(a1 + 48);
      id v11 = v8;
      uint64_t v12 = v9;
      char v13 = *(unsigned char *)(a1 + 56);
      +[ICDocCamPDFGenerator generatePDFsIfNecessaryForGalleryAttachments:v3 displayWindow:v5 presentingViewController:v7 completionHandler:v10];
    }
    else
    {
      id v3 = os_log_create("com.apple.notes", "UI");
      if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
        sub_1004D4B24();
      }
    }
  }
  else
  {
    id v3 = os_log_create("com.apple.notes", "UI");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      sub_1004D4B58();
    }
  }
}

void sub_10005136C(uint64_t a1, char a2)
{
  if (a2)
  {
    id v3 = [*(id *)(a1 + 32) media];
    id v10 = [v3 mediaURL];

    objc_opt_class();
    id v4 = [*(id *)(a1 + 32) attachmentModel];
    uint64_t v5 = ICDynamicCast();

    id v6 = [v5 audioDocument];
    id v7 = [v6 transcriptAsPlainText];

    id v8 = [*(id *)(a1 + 32) creationDate];
    [*(id *)(a1 + 40) showAudioDonationDialog:*(unsigned __int8 *)(a1 + 48) mediaURL:v10 transcript:v7 date:v8];
  }
  else
  {
    uint64_t v9 = os_log_create("com.apple.notes", "UI");
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_1004D4B8C();
    }
  }
}

void sub_1000514A8(uint64_t a1, uint64_t a2)
{
  if (a2 == 2)
  {
    id v8 = +[UIApplication sharedApplication];
    [v8 openURL:*(void *)(a1 + 48) options:&__NSDictionary0__struct completionHandler:0];
  }
  else if (a2 == 1)
  {
    id v8 = +[NSBundle mainBundle];
    id v4 = [v8 localizedStringForKey:@"Note Unavailable" value:&stru_10063F3D8 table:0];
    uint64_t v5 = +[NSBundle mainBundle];
    id v6 = [v5 localizedStringForKey:@"This could be because the note was deleted, exists on a different device or account, or is not shared with you.", &stru_10063F3D8, 0 value table];
    id v7 = [*(id *)(a1 + 32) mainSplitViewController];
    +[UIAlertController ic_showAlertWithTitle:v4 message:v6 viewController:v7];
  }
  else
  {
    if (a2) {
      return;
    }
    uint64_t v3 = *(void *)(a1 + 40);
    id v8 = [*(id *)(a1 + 32) noteEditorViewController];
    [v8 setNoteViewEventSourceObjectID:v3];
  }
}

id sub_1000518B0(uint64_t a1)
{
  return +[ICViewControllerManager createDonationOf:*(void *)(a1 + 32) transcript:*(void *)(a1 + 40) date:*(void *)(a1 + 48) isFeedbackPositive:*(unsigned __int8 *)(a1 + 56) completionHandler:&stru_100626308];
}

void sub_1000521E8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = (id *)(a1 + 32);
  id v4 = a3;
  id WeakRetained = objc_loadWeakRetained(v3);
  uint64_t v5 = [WeakRetained eventReporter];
  [v5 submitNoteActionMenuEventForNoteEditorWithUsageType:3 activityType:v4];
}

void sub_100052DAC(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_100052DC4(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) modernManagedObjectContext];
  id v3 = [v2 objectWithID:*(void *)(a1 + 40)];

  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = [v3 isEmpty];
}

void sub_100052E38(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) legacyManagedObjectContext];
  id v4 = [v2 objectWithID:*(void *)(a1 + 40)];

  id v3 = [v4 content];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = [v3 length] == 0;
}

void sub_100053134(id *a1)
{
  id v66 = [a1[4] containerSelectionOptions];
  uint64_t v2 = [a1[4] tagSelection];
  if (v2)
  {
    id v3 = [a1[4] tagSelection];
    if ([v3 isNonEmpty])
    {
      if ([v66 forceApply])
      {
        unsigned int v4 = 1;
      }
      else
      {
        uint64_t v5 = [a1[5] tagSelection];
        id v6 = [a1[4] tagSelection];
        unsigned int v4 = [v5 isEqual:v6] ^ 1;
      }
    }
    else
    {
      unsigned int v4 = 0;
    }
  }
  else
  {
    unsigned int v4 = 0;
  }

  id v7 = a1[4];
  id v8 = [a1[5] selectedNoteBrowseContainerItemID];
  unsigned int v9 = [v7 selectedContainerEqualTo:v8];

  id v10 = [a1[4] selectedNoteBrowseContainerItemID];
  if (v10) {
    unsigned int v11 = [v66 forceApply] | v9 ^ 1;
  }
  else {
    unsigned int v11 = 0;
  }

  uint64_t v12 = [a1[4] currentSelectedSearchResult];
  if (v12)
  {
    BOOL v13 = 0;
  }
  else
  {
    id v14 = [a1[5] currentSelectedSearchResult];
    BOOL v13 = v14 != 0;
  }
  unsigned int v15 = [v66 usingRootViewController];
  if (!v4)
  {
    if ((v11 | v13) != 1) {
      goto LABEL_45;
    }
    unsigned int v18 = v15;
    uint64_t v19 = [a1[4] selectedNoteBrowseContainerItemID];
    char v17 = +[NSSet ic_setFromNonNilObject:v19];

    objc_opt_class();
    unsigned __int8 v20 = [a1[4] selectedNoteBrowseContainerItemID];
    unsigned int v21 = ICDynamicCast();

    unsigned int v65 = v21;
    unsigned __int8 v22 = [v21 type];
    uint64_t v23 = (void *)ICVirtualSmartFolderItemIdentifierTypeRecentlyDeletedMathNotes;

    if (v22 == v23) {
      uint64_t v24 = 0;
    }
    else {
      uint64_t v24 = v18;
    }
    unsigned __int8 v25 = [v66 dismissOverlayContent];
    objc_opt_class();
    uint64_t v26 = [a1[5] selectedNoteBrowseContainerItemID];
    uint64_t v27 = ICDynamicCast();

    id v28 = [v27 type];
    uint64_t v29 = (void *)ICVirtualSmartFolderItemIdentifierTypeMathNotes;

    if (v28 == v29)
    {

      unsigned __int8 v25 = &__kCFBooleanTrue;
    }
    else
    {
      if (v25) {
        char v30 = 1;
      }
      else {
        char v30 = v9;
      }
      if ((v30 & 1) != 0 || !v13)
      {
        unint64_t v31 = v66;
        if (!v25)
        {
          id v54 = a1[6];
          unsigned __int8 v25 = +[NSSet set];
          id v55 = [v66 deferUntilDataLoaded];
          id v37 = [v66 keepEditorShowing];
          [v54 showContainerWithIdentifiers:v17 excludingIdentifiers:v25 usingRootViewController:v24 deferUntilDataLoaded:v55 keepEditorShowing:v37 animated:[v66 animated]];
LABEL_43:

          goto LABEL_44;
        }
LABEL_31:
        uint64_t v32 = [v31 completionBlocks];

        if (v32)
        {
          unsigned __int8 v33 = [v66 ensurePresented];
          uint64_t v34 = [v66 ensureSelectedNote];

          unsigned int v63 = v27;
          double v64 = v25;
          if (v34)
          {
            unsigned __int8 v58 = v33;
            id v35 = [v66 ensureSelectedNote];
            unsigned __int8 v57 = [v35 BOOLValue];
          }
          else if ([a1[6] hasCompactWidth] {
                 && ([a1[4] objectSelectionHasChangedComparedToModel:a1[5]] & 1) != 0)
          }
          {
            unsigned __int8 v57 = 1;
            unsigned __int8 v58 = 0;
          }
          else
          {
            unsigned __int8 v58 = v33;
            id v41 = a1[6];
            unsigned int v42 = [a1[4] selectedNoteBrowseContainerItemID];
            id v43 = [v41 enforcedNoteContainerViewModeForContainerItemID:v42];

            unsigned __int8 v44 = [a1[6] isAutomaticallySelectingNotes];
            if (v43 == (id)1) {
              unsigned __int8 v45 = 0;
            }
            else {
              unsigned __int8 v45 = v44;
            }
            unsigned __int8 v57 = v45;
          }
          id v62 = a1[6];
          id v37 = +[NSSet set];
          id v61 = [v66 noteBrowseViewController];
          unsigned int v60 = [v66 usingRootViewController];
          unsigned int v59 = [v66 deferUntilDataLoaded];
          double v46 = [v66 dismissOverlayContent];
          id v47 = [v46 BOOLValue];
          unsigned __int8 v48 = [v66 animated];
          uint64_t v49 = [v66 keepEditorShowing];
          uint64_t v50 = [v66 completionBlocks];
          unsigned int v51 = [v50 dataIndexedBlock];
          unsigned int v52 = [v66 completionBlocks];
          uint64_t v53 = [v52 dataRenderedBlock];
          BYTE2(v56) = v57;
          BYTE1(v56) = v58;
          LOBYTE(v56) = v48;
          [v62 showContainerWithIdentifiers:v17 excludingIdentifiers:v37 noteBrowseViewController:v61 usingRootViewController:v60 deferUntilDataLoaded:v59 dismissOverlayContent:v47 ensurePresented:v56 ensureSelectedNote:v51 keepEditorShowing:v49 dataIndexedBlock:v53];

          uint64_t v27 = v63;
          unsigned __int8 v25 = v64;
        }
        else
        {
          id v36 = a1[6];
          id v37 = +[NSSet set];
          id v38 = [v66 deferUntilDataLoaded];
          id v39 = [v25 BOOLValue];
          uint64_t v40 = [v66 keepEditorShowing];
          LOBYTE(v56) = [v66 animated];
          [v36 showContainerWithIdentifiers:v17 excludingIdentifiers:v37 usingRootViewController:v24 deferUntilDataLoaded:v38 dismissOverlayContent:v39 keepEditorShowing:v40 animated:v56];
        }
        goto LABEL_43;
      }
      unsigned __int8 v25 = &__kCFBooleanFalse;
    }
    unint64_t v31 = v66;
    goto LABEL_31;
  }
  id v16 = a1[6];
  char v17 = [a1[4] tagSelection];
  [v16 showTagSelection:v17];
LABEL_44:

LABEL_45:
}

void sub_1000537C0(uint64_t a1)
{
  id v44 = [*(id *)(a1 + 32) selectedObjectID];
  uint64_t v2 = [*(id *)(a1 + 32) objectSelectionOptions];
  if ([*(id *)(a1 + 40) isAutomaticallySelectingNotes]
    && ![*(id *)(a1 + 40) isNoteEditorVisible]
    || ![*(id *)(a1 + 40) objectAlreadyLoadedInEditorWithObjectID:v44])
  {
    goto LABEL_7;
  }
  id v3 = [*(id *)(a1 + 40) currentAttachmentPresenter];
  if (v3
    || [*(id *)(a1 + 32) objectSelectionHasChangedComparedToModel:*(void *)(a1 + 48)])
  {

    goto LABEL_7;
  }
  id v39 = [*(id *)(a1 + 32) currentSelectedSearchResult];

  if (v39)
  {
LABEL_7:
    unsigned int v4 = [*(id *)(a1 + 48) selectedNoteObjectID];

    if (v4)
    {
      uint64_t v5 = *(void **)(a1 + 40);
      id v6 = [*(id *)(a1 + 48) selectedNoteObjectID];
      [v5 deleteEmptyNoteIfNeeded:v6];
    }
    id v7 = [*(id *)(a1 + 32) selectedNoteObjectID];

    if (v7)
    {
      id v8 = *(void **)(a1 + 40);
      unsigned int v9 = [*(id *)(a1 + 32) selectedNoteObjectID];
      id v10 = [*(id *)(a1 + 32) scrollState];
      id v11 = [v2 startEditing];
      id v12 = [v2 showInkPicker];
      id v13 = [v2 dismissOverlayContent];
      id v14 = [v2 showLatestUpdatesIfAvailable];
      unsigned __int8 v15 = [v2 animated];
      BYTE1(v43) = [v2 ensurePresented];
      LOBYTE(v43) = v15;
      [v8 showNoteWithObjectID:v9 scrollState:v10 startEditing:v11 showInkPicker:v12 dismissOverlayContent:v13 showLatestUpdatesIfAvailable:v14 animated:v43];
    }
    else
    {
      id v16 = [*(id *)(a1 + 32) selectedInvitationObjectID];

      char v17 = *(void **)(a1 + 40);
      if (v16)
      {
        unsigned int v9 = [*(id *)(a1 + 32) selectedInvitationObjectID];
        [v17 showInvitationWithObjectID:v9 animated:[v2 animated]];
      }
      else
      {
        id v28 = [*(id *)(a1 + 40) trailingSidebarSplitViewController];
        unsigned __int8 v29 = [v28 isCollapsed];

        char v30 = *(void **)(a1 + 40);
        if (v29)
        {
          uint64_t v31 = [v30 activeEditorController];
          if (!v31) {
            goto LABEL_14;
          }
          uint64_t v32 = (void *)v31;
          unsigned __int8 v33 = [*(id *)(a1 + 40) compactNavigationController];
          uint64_t v34 = [v33 viewControllers];
          id v35 = [v34 lastObject];
          id v36 = [*(id *)(a1 + 40) activeEditorController];
          unsigned int v37 = [v35 isEqual:v36];

          if (!v37) {
            goto LABEL_14;
          }
          unsigned int v9 = [*(id *)(a1 + 40) compactNavigationController];
          id v38 = [v9 popViewControllerAnimated:1];
        }
        else
        {
          id v41 = [v30 noteEditorViewController];
          [v41 setNote:0];

          unsigned int v42 = [*(id *)(a1 + 40) legacyNoteEditorViewController];
          [v42 displayNote:0];

          if ([*(id *)(a1 + 40) isSplitViewExpandingOrCollapsing])
          {
LABEL_14:
            unsigned int v18 = [*(id *)(a1 + 40) selectedModernNote];
            uint64_t v19 = [*(id *)(a1 + 40) activityStreamNavigationController];
            [v19 setObject:v18];

            unsigned __int8 v20 = *(void **)(a1 + 40);
            unsigned int v21 = [v20 window];
            unsigned __int8 v22 = [v21 windowScene];
            [v20 updateSceneTitle:v22];

            uint64_t v23 = [*(id *)(a1 + 32) activityStreamSelection];
            [*(id *)(a1 + 40) setActivityStreamSelection:v23];

            id v24 = [*(id *)(a1 + 32) activityStreamViewMode];
            unsigned __int8 v25 = *(void **)(a1 + 40);
            if (v24)
            {
              uint64_t v26 = [*(id *)(a1 + 40) selectedModernNote];
              [v25 presentActivityStreamForObject:v26 viewMode:[*(id *)(a1 + 32) activityStreamViewMode] animated:0];
            }
            else
            {
              [*(id *)(a1 + 40) hideActivityStreamWithCompletion:0];
            }
            goto LABEL_17;
          }
          unsigned int v9 = [*(id *)(a1 + 40) mainSplitViewController];
          [v9 showColumn:1];
        }
      }
    }

    goto LABEL_14;
  }
  uint64_t v40 = [*(id *)(a1 + 32) currentSelectedSearchResult];

  if (v40) {
    [*(id *)(a1 + 40) dismissOverlayContent];
  }
LABEL_17:
  uint64_t v27 = *(void *)(a1 + 56);
  if (v27) {
    (*(void (**)(void))(v27 + 16))();
  }
}

void sub_100053D40(id *a1)
{
  if ([a1[4] isSearchActive]
    && ([a1[5] currentSelectedSearchResult],
        uint64_t v2 = objc_claimAutoreleasedReturnValue(),
        v2,
        !v2))
  {
    unsigned __int8 v20 = [a1[6] selectedObjectID];
    if (v20)
    {
      BOOL v3 = 0;
    }
    else
    {
      unsigned int v21 = [a1[5] selectedObjectID];
      BOOL v3 = v21 != 0;
    }
    unsigned __int8 v22 = [a1[6] selectedObjectID];
    if (v22)
    {
      uint64_t v23 = [a1[5] selectedObjectID];
      BOOL v4 = v23 == 0;
    }
    else
    {
      BOOL v4 = 0;
    }
  }
  else
  {
    BOOL v3 = 0;
    BOOL v4 = 0;
  }
  uint64_t v5 = [a1[5] currentSelectedSearchResult];

  if (v5)
  {
    id v6 = [a1[4] noteEditorViewController];
    id v7 = [a1[5] currentSelectedSearchResult];
    id v8 = [v7 highlightPatternRegexFinder];
    [v6 highlightSearchMatchesForRegexFinder:v8];
  }
  else if (!v3 && !v4)
  {
    unsigned int v9 = +[UIApplication sharedApplication];
    id v10 = [v9 applicationState];

    if (!v10)
    {
      id v11 = [a1[4] currentNoteBrowseViewController];
      id v12 = [v11 navigationItem];
      id v13 = [v12 searchController];
      unsigned int v14 = [v13 isActive];

      if (v14)
      {
        unsigned __int8 v15 = [a1[4] currentNoteBrowseViewController];
        id v16 = [v15 navigationItem];
        char v17 = [v16 searchController];
        [v17 setActive:0];
      }
      unsigned int v18 = [a1[4] noteEditorViewController];
      [v18 highlightSearchMatchesForRegexFinder:0];

      [a1[4] setIsSearchActiveWithQuery:0];
    }
  }
  [a1[4] setIsSelectedNoteTogglingLock:0];
  id v19 = a1[4];
  id v24 = [v19 mainSplitViewController];
  [v19 updateNoteEditorBezelsIfNeededWithDisplayMode:[v24 displayMode] force:0];
}

id sub_100053F90(uint64_t a1)
{
  [*(id *)(a1 + 32) didUpdateModelForSelectionStateController:*(void *)(a1 + 40)];
  [*(id *)(a1 + 32) adoptContainerFromSelectionStateController:*(void *)(a1 + 40) oldModel:*(void *)(a1 + 48)];
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 56);

  return _[v2 adoptObjectFromSelectionStateController:v3 oldModel:v4 completion:v5];
}

void sub_1000541AC(id *a1)
{
  [a1[4] didUpdateModelForSelectionStateController:a1[5]];
  uint64_t v2 = [a1[4] noteEditorViewController];
  uint64_t v3 = [v2 note];

  uint64_t v4 = [v3 objectID];
  uint64_t v5 = [a1[5] selectedNoteObjectID];
  unsigned int v6 = [v4 isEqual:v5];

  if (v6)
  {
    id v7 = [a1[4] noteEditorViewController];
    [v7 loadViewIfNeeded];

    id v8 = [a1[6] scrollStateForNote:v3];
    unsigned int v9 = [a1[4] noteEditorViewController];
    [v9 applyScrollStateFromArchive:v8];
  }
  else
  {
    id v10 = os_log_create("com.apple.notes", "UI");
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)id v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "Restore Quicknote UI editor state skipping because Note ID doesn't match", v11, 2u);
    }
  }
}

void sub_100054380(uint64_t a1)
{
  if ([*(id *)(a1 + 32) behavior] == (id)3)
  {
    id v5 = [*(id *)(a1 + 32) noteEditorViewController];
    [v5 updateBarButtons];
  }
  else
  {
    uint64_t v2 = [*(id *)(a1 + 40) currentSelectedSearchResult];

    if (v2) {
      [*(id *)(a1 + 32) dismissOverlayContent];
    }
    uint64_t v3 = [*(id *)(a1 + 32) currentAttachmentPresenter];

    if (v3)
    {
      uint64_t v4 = *(void **)(a1 + 32);
      [v4 dismissAnyPresentedViewControllerAnimated:1 completion:0];
    }
  }
}

uint64_t sub_1000549A4(uint64_t a1)
{
  return *(void *)(*(void *)(*(void *)a1 + 8) + 40);
}

void sub_1000549B8(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0x16u);
}

uint64_t sub_100054FF4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  objc_opt_class();
  id v7 = ICDynamicCast();
  unsigned __int8 v8 = [v7 isEqualToString:*(void *)(a1 + 32)];

  if (v8)
  {
    uint64_t v9 = -1;
  }
  else
  {
    objc_opt_class();
    id v10 = ICDynamicCast();
    unsigned __int8 v11 = [v10 isEqualToString:*(void *)(a1 + 32)];

    if (v11) {
      uint64_t v9 = 1;
    }
    else {
      uint64_t v9 = (uint64_t)[v5 compare:v6];
    }
  }

  return v9;
}

id sub_100055174(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [v3 name];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_100055258;
  v8[3] = &unk_100626400;
  void v8[4] = *(void *)(a1 + 32);
  id v9 = v3;
  id v5 = v3;
  id v6 = +[UIAction ic_actionWithTitle:v4 subtitle:0 imageName:0 handler:v8];

  return v6;
}

void sub_100055258(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  id v3 = [v1 noteContainer];
  [v1 promptToAddFolderToAccount:v2 allowsSmartFolder:1 noteContainer:v3 completionHandler:0];
}

void sub_100055468(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100055484(void *a1, void *a2)
{
  id v3 = (void *)a1[4];
  uint64_t v4 = a1[5];
  uint64_t v5 = a1[6];
  id v6 = a2;
  id v7 = [v3 smartFolderQuery];
  [v3 createFolderInAccount:v4 noteContainer:v5 smartFolderQuery:v7 folderTitle:v6 completionHandler:a1[7]];
}

void sub_100055510(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  [WeakRetained setFilterSelection:v5];
  if (v5 && ([v5 isEmpty] & 1) == 0)
  {
    id v7 = +[ICQuery queryForNotesMatchingFilterSelection:v5];
  }
  else
  {
    id v7 = 0;
  }
  [WeakRetained createFolderInAccount:*(void *)(a1 + 32) noteContainer:*(void *)(a1 + 40) smartFolderQuery:v7 folderTitle:v8 completionHandler:*(void *)(a1 + 48)];
}

id sub_100055A9C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _icaxAnnounceCreatedFolder:*(void *)(a1 + 40)];
}

void sub_100055E5C(uint64_t a1, void *a2)
{
  id v7 = a2;
  id v3 = +[NSBundle mainBundle];
  uint64_t v4 = [v3 localizedStringForKey:@"Name" value:&stru_10063F3D8 table:0];
  [v7 setPlaceholder:v4];

  id v5 = [*(id *)(a1 + 32) viewController];
  id v6 = [v5 view];
  [v7 setAutocapitalizationType:ICLocalizedCapitalizationStyleForView()];

  [v7 setClearButtonMode:1];
  [v7 addTarget:*(void *)(a1 + 32) action:"editTitleTextFieldChanged:" forControlEvents:0x20000];
}

uint64_t sub_100055F4C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0);
  }
  return result;
}

void sub_100055F68(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) textFields];
  id v6 = [v2 firstObject];

  id v3 = [v6 text];
  id v4 = [v3 copy];

  uint64_t v5 = *(void *)(a1 + 40);
  if (v5) {
    (*(void (**)(uint64_t, id))(v5 + 16))(v5, v4);
  }
}

void sub_100056004(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 32) textFields];
  id v2 = [v1 firstObject];

  [v2 becomeFirstResponder];
}

void sub_1000572F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53)
{
}

uint64_t sub_100057358(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100057368(uint64_t a1)
{
}

void sub_100057370(uint64_t a1)
{
  id v6 = +[ICAccount allActiveAccountsInContext:*(void *)(a1 + 32)];
  id v2 = NSStringFromSelector("identifier");
  uint64_t v3 = [v6 valueForKey:v2];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

void sub_1000579E0(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 40);
  uint64_t v3 = os_log_create("com.apple.notes", "Cloud");
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG);
  if (v2)
  {
    if (v4) {
      sub_1004D4D00();
    }
  }
  else
  {
    if (v4) {
      sub_1004D4C6C();
    }

    [*(id *)(a1 + 32) setShouldResumeSyncOnForeground:1];
    [*(id *)(a1 + 32) cancelEverythingWithCompletionHandler:0];
    uint64_t v3 = +[ICBackgroundTaskScheduler sharedScheduler];
    [v3 scheduleTask:objc_opt_class() completion:&stru_100626530];
  }

  uint64_t v5 = +[UIApplication sharedApplication];
  [v5 endBackgroundTask:qword_1006AA0C0];

  qword_1006AA0C0 = UIBackgroundTaskInvalid;
}

void sub_100057AEC(id a1, BOOL a2, NSError *a3)
{
  BOOL v4 = a3;
  uint64_t v5 = os_log_create("com.apple.notes", "Cloud");
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG)) {
    sub_1004D4D94(a2, (uint64_t)v4, v5);
  }
}

void sub_100057B5C(uint64_t a1)
{
  int v2 = os_log_create("com.apple.notes", "Cloud");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    sub_1004D4E34();
  }

  uint64_t v3 = +[ICNoteContext sharedContext];
  [v3 save];

  [*(id *)(a1 + 32) setSyncOnlyIfReachable:*(unsigned __int8 *)(a1 + 40)];
  BOOL v4 = +[UIApplication sharedApplication];
  [v4 endBackgroundTask:qword_1006AA0C0];

  qword_1006AA0C0 = UIBackgroundTaskInvalid;
}

id sub_100057D18(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  _DWORD v3[2] = sub_100057D88;
  v3[3] = &unk_100626580;
  v3[4] = v1;
  return [v1 updateCloudContextStateWithCompletion:v3];
}

uint64_t sub_100057D88()
{
  return performBlockOnMainThread();
}

id sub_100057DFC(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 40) && [*(id *)(a1 + 32) shouldResumeSyncOnForeground]) {
    [*(id *)(a1 + 32) syncWithReason:@"ResumeSyncAfterBackgroundTaskExpiry" completionHandler:0];
  }
  int v2 = *(void **)(a1 + 32);

  return [v2 setShouldResumeSyncOnForeground:0];
}

void sub_100057F00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100057F18(uint64_t a1)
{
  int v2 = +[UIApplication sharedApplication];
  unint64_t v3 = (unint64_t)[v2 applicationState];

  if (v3 <= 2) {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 0x101u >> (8 * v3);
  }
}

void sub_100058564(uint64_t a1)
{
  if ([*(id *)(a1 + 32) contextPathEnum])
  {
    int v2 = [*(id *)(a1 + 32) eventReporter];
    [v2 popContextPathData];
  }
  [*(id *)(a1 + 32) activityDidFinish:1];
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3)
  {
    id v4 = [*(id *)(a1 + 32) activityType];
    (*(void (**)(uint64_t, uint64_t, id))(v3 + 16))(v3, 1, v4);
  }
}

void sub_100058610(uint64_t a1)
{
  if ([*(id *)(a1 + 32) contextPathEnum])
  {
    id v2 = [*(id *)(a1 + 32) eventReporter];
    [v2 popContextPathData];
  }
}

void sub_10005867C(uint64_t a1)
{
  [*(id *)(a1 + 32) activityDidFinish:1];
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2)
  {
    id v3 = [*(id *)(a1 + 32) activityType];
    (*(void (**)(uint64_t, uint64_t, id))(v2 + 16))(v2, 1, v3);
  }
}

void sub_100058B68(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) navigationController];
  id v3 = [v2 toolbar];
  id v4 = [v3 standardAppearance];
  [v4 configureWithDefaultBackground];

  id v7 = [*(id *)(a1 + 32) navigationController];
  uint64_t v5 = [v7 toolbar];
  id v6 = [v5 compactAppearance];
  [v6 configureWithDefaultBackground];
}

void sub_100058FD0(uint64_t a1, void *a2, void *a3)
{
  id v36 = a2;
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained && objc_msgSend(v36, "ic_isModernFolderType"))
  {
    id v7 = [WeakRetained modernViewContext];
    id v8 = [v7 ic_existingObjectWithID:v36];

    LODWORD(v7) = [v8 isSmartFolder];
    id v9 = +[NSBundle mainBundle];
    id v10 = v9;
    if (v7)
    {
      unsigned __int8 v11 = [v9 localizedStringForKey:@"Unsupported Smart Folder" value:&stru_10063F3D8 table:0];

      if (+[UIDevice ic_isiPad])
      {
        id v12 = +[NSBundle mainBundle];
        id v13 = v12;
        CFStringRef v14 = @"This smart folder uses unsupported features. To view or edit it, upgrade to the latest version of iPadOS.";
LABEL_15:
        char v17 = [v12 localizedStringForKey:v14 value:&stru_10063F3D8 table:0];

        unsigned int v18 = [WeakRetained viewControllerManager];
        uint64_t v19 = [v18 hasCompactWidth];

        unsigned __int8 v20 = +[UIAlertController alertControllerWithTitle:v11 message:v17 preferredStyle:v19];
        unsigned int v21 = +[NSBundle mainBundle];
        unsigned __int8 v22 = [v21 localizedStringForKey:@"OK" value:&stru_10063F3D8 table:0];
        uint64_t v23 = +[UIAlertAction actionWithTitle:v22 style:0 handler:0];

        [v20 addAction:v23];
        if (+[UIDevice ic_isVision]) {
          uint64_t v24 = -2;
        }
        else {
          uint64_t v24 = 7;
        }
        [v20 setModalPresentationStyle:v24];
        unsigned __int8 v25 = [v20 popoverPresentationController];
        [v25 setSourceView:v5];

        [v5 bounds];
        double v27 = v26;
        double v29 = v28;
        double v31 = v30;
        double v33 = v32;
        uint64_t v34 = [v20 popoverPresentationController];
        [v34 setSourceRect:v27, v29, v31, v33];

        id v35 = [v20 popoverPresentationController];
        [v35 setPermittedArrowDirections:12];

        [WeakRetained presentViewController:v20 animated:1 completion:0];
        goto LABEL_19;
      }
      unsigned int v15 = +[UIDevice ic_isVision];
      id v13 = +[NSBundle mainBundle];
      if (v15) {
        CFStringRef v14 = @"This smart folder uses unsupported features. To view or edit it, upgrade to the latest version of visionOS.";
      }
      else {
        CFStringRef v14 = @"This smart folder uses unsupported features. To view or edit it, upgrade to the latest version of iOS.";
      }
    }
    else
    {
      unsigned __int8 v11 = [v9 localizedStringForKey:@"Unsupported Folder" value:&stru_10063F3D8 table:0];

      if (+[UIDevice ic_isiPad])
      {
        id v12 = +[NSBundle mainBundle];
        id v13 = v12;
        CFStringRef v14 = @"This folder uses unsupported features. To view or edit it, upgrade to the latest version of iPadOS.";
        goto LABEL_15;
      }
      unsigned int v16 = +[UIDevice ic_isVision];
      id v13 = +[NSBundle mainBundle];
      if (v16) {
        CFStringRef v14 = @"This folder uses unsupported features. To view or edit it, upgrade to the latest version of visionOS.";
      }
      else {
        CFStringRef v14 = @"This folder uses unsupported features. To view or edit it, upgrade to the latest version of iOS.";
      }
    }
    id v12 = v13;
    goto LABEL_15;
  }
LABEL_19:
}

id sub_1000593C8(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateScopeButtonTitles];
}

void sub_10005AEA8(id a1, UIAction *a2)
{
}

void sub_10005B75C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *a9, id *a10, id *location)
{
  objc_destroyWeak(v11);
  objc_destroyWeak(location);
  objc_destroyWeak(a10);
  objc_destroyWeak(a9);
  objc_destroyWeak((id *)(v12 - 232));
  _Unwind_Resume(a1);
}

void sub_10005B7CC(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = [WeakRetained startupNavigationController];
  [v3 upgradeAction];

  id v5 = objc_loadWeakRetained(v1);
  id v4 = [v5 startupNavigationController];
  [v4 dismiss];
}

void sub_10005B854(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v1 = [WeakRetained startupNavigationController];
  [v1 continueAction];
}

void sub_10005B8AC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v1 = [WeakRetained startupNavigationController];
  [v1 dismiss];
}

void sub_10005B904(id *a1)
{
  uint64_t v2 = +[NSBundle mainBundle];
  id v3 = [v2 localizedStringForKey:@"Upgrade Notes" value:&stru_10063F3D8 table:0];
  id v4 = +[NSBundle mainBundle];
  id v5 = [v4 localizedStringForKey:@"To enable these features, your notes will be upgraded. To sync notes with other devices, they must be running OS X v10.11 or iOS 9 or later.", &stru_10063F3D8, 0 value table];
  id v6 = +[UIAlertController alertControllerWithTitle:v3 message:v5 preferredStyle:1];

  id v7 = +[NSBundle mainBundle];
  id v8 = [v7 localizedStringForKey:@"Not Now" value:&stru_10063F3D8 table:0];
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  v18[2] = sub_10005BB70;
  v18[3] = &unk_1006264C8;
  id v19 = a1[5];
  id v9 = +[UIAlertAction actionWithTitle:v8 style:1 handler:v18];

  id v10 = +[NSBundle mainBundle];
  unsigned __int8 v11 = [v10 localizedStringForKey:@"Upgrade Notes" value:&stru_10063F3D8 table:0];
  id v13 = _NSConcreteStackBlock;
  uint64_t v14 = 3221225472;
  unsigned int v15 = sub_10005BB80;
  unsigned int v16 = &unk_1006264C8;
  id v17 = a1[6];
  uint64_t v12 = +[UIAlertAction actionWithTitle:v11 style:0 handler:&v13];

  [v6 addAction:v12, v13, v14, v15, v16];
  [v6 addAction:v9];
  [a1[4] presentViewController:v6 animated:1 completion:0];
}

uint64_t sub_10005BB70(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_10005BB80(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10005BB90(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = [WeakRetained startupNavigationController];
  [v3 upgradeAction];

  id v4 = objc_loadWeakRetained(v1);
  id v5 = [v4 startupNavigationController];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_10005BC80;
  v6[3] = &unk_100625938;
  objc_copyWeak(&v7, v1);
  [v5 dismissWithCompletionBlock:v6];

  objc_destroyWeak(&v7);
}

void sub_10005BC6C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10005BC80(uint64_t a1)
{
  if (!+[ICStartupController shouldBypassICloudAlert])
  {
    uint64_t v2 = +[NSBundle mainBundle];
    id v3 = [v2 localizedStringForKey:@"Turn On iCloud" value:&stru_10063F3D8 table:0];
    id v4 = +[NSBundle mainBundle];
    id v5 = [v4 localizedStringForKey:@"To access your notes from all your devices, turn on iCloud for Notes.", &stru_10063F3D8, 0 value table];
    id v16 = +[UIAlertController alertControllerWithTitle:v3 message:v5 preferredStyle:1];

    id v6 = +[NSBundle mainBundle];
    id v7 = [v6 localizedStringForKey:@"Not Now" value:&stru_10063F3D8 table:0];
    id v8 = +[UIAlertAction actionWithTitle:v7 style:1 handler:0];

    id v9 = +[NSBundle mainBundle];
    id v10 = [v9 localizedStringForKey:@"Go to Settings" value:&stru_10063F3D8 table:0];
    unsigned __int8 v11 = +[UIAlertAction actionWithTitle:v10 style:0 handler:&stru_100626680];

    [v16 addAction:v11];
    [v16 addAction:v8];
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    id v13 = [WeakRetained startupNavigationController];
    uint64_t v14 = [v13 presentingWindow];
    unsigned int v15 = [v14 rootViewController];
    [v15 presentViewController:v16 animated:1 completion:0];
  }
}

void sub_10005BEB8(id a1, UIAlertAction *a2)
{
  +[NSURL URLWithString:@"prefs:root=APPLE_ACCOUNT"];
  id v4 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v2 = +[ICAppDelegate sharedInstance];
  [v2 openWelcomeScreenWhenLoggingInToUnmigratedICloudAccount];

  id v3 = +[LSApplicationWorkspace defaultWorkspace];
  [v3 openSensitiveURL:v4 withOptions:0];
}

int64_t sub_10005C6C4(id a1, ICSEFolderListItem *a2, ICSEFolderListItem *a3)
{
  id v4 = a3;
  unint64_t v5 = [(ICSEFolderListItem *)a2 folderListItemAccountType];
  unint64_t v6 = [(ICSEFolderListItem *)v4 folderListItemAccountType];

  return v5 > v6;
}

void sub_10005D6AC(uint64_t a1)
{
  uint64_t v2 = +[NSPredicate predicateWithFormat:@"needsTranscription == YES"];
  id v3 = [*(id *)(a1 + 32) workerContext];
  double v26 = (void *)v2;
  id v4 = +[ICAttachment attachmentsMatchingPredicate:v2 context:v3];

  long long v37 = 0u;
  long long v38 = 0u;
  long long v35 = 0u;
  long long v36 = 0u;
  id obj = v4;
  id v29 = [obj countByEnumeratingWithState:&v35 objects:v40 count:16];
  if (v29)
  {
    uint64_t v28 = *(void *)v36;
    do
    {
      for (uint64_t i = 0; i != v29; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v36 != v28) {
          objc_enumerationMutation(obj);
        }
        unint64_t v6 = *(void **)(*((void *)&v35 + 1) + 8 * i);
        id v7 = objc_alloc_init((Class)NSMutableDictionary);
        id v8 = [v6 subAttachments];
        id v9 = [v8 allObjects];

        if (v9)
        {
          long long v33 = 0u;
          long long v34 = 0u;
          long long v31 = 0u;
          long long v32 = 0u;
          double v30 = v9;
          id v10 = v9;
          id v11 = [v10 countByEnumeratingWithState:&v31 objects:v39 count:16];
          if (v11)
          {
            id v12 = v11;
            uint64_t v13 = *(void *)v32;
            do
            {
              for (j = 0; j != v12; j = (char *)j + 1)
              {
                if (*(void *)v32 != v13) {
                  objc_enumerationMutation(v10);
                }
                unsigned int v15 = *(void **)(*((void *)&v31 + 1) + 8 * (void)j);
                id v16 = [v15 media];
                id v17 = [v16 mediaURL];

                if (v17)
                {
                  unsigned int v18 = [v15 objectID];
                  [v7 setObject:v17 forKeyedSubscript:v18];
                }
              }
              id v12 = [v10 countByEnumeratingWithState:&v31 objects:v39 count:16];
            }
            while (v12);
          }

          id v9 = v30;
        }
        uint64_t v19 = [v6 audioModel];
        if (!v19) {
          goto LABEL_20;
        }
        unsigned __int8 v20 = (void *)v19;
        unsigned int v21 = [v6 audioModel];
        unsigned __int8 v22 = [v21 audioDocument];
        unsigned int v23 = [v22 isCallRecording];

        if (v23)
        {
          uint64_t v24 = +[ICBackgroundTranscriptionHelper sharedInstance];
          unsigned __int8 v25 = [v6 objectID];
          [v24 addCallRecordingTranscriptionTaskToQueueOnLaunch:v25];
        }
        else
        {
LABEL_20:
          uint64_t v24 = +[ICBackgroundTranscriptionHelper sharedInstance];
          unsigned __int8 v25 = [v6 objectID];
          [v24 addRetranscriptionTaskToQueue:v7 attachmentIdentifier:v25];
        }
      }
      id v29 = [obj countByEnumeratingWithState:&v35 objects:v40 count:16];
    }
    while (v29);
  }
}

void sub_10005DA68(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) workerContext];
  +[ICHashtag regenerateStandardizedContentForAllHashtagsInContext:v1 hasChanges:0];
}

void sub_10005DED4(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) collectionView];
  [v2 ic_deselectAllItemsAnimated:1];

  id v3 = [*(id *)(a1 + 32) collectionView];
  [v3 deselectAllTagsAnimated:1];

  id v4 = [*(id *)(a1 + 32) noteSearchViewController];
  unint64_t v5 = [v4 collectionView];
  [v5 ic_deselectAllItemsAnimated:1];

  unint64_t v6 = [*(id *)(a1 + 32) dataSource];
  id v7 = [v6 collectionViewDiffableDataSource];
  id v8 = +[ICTagContainerItemIdentifier sharedItemIdentifier];
  id v11 = [v7 indexPathForItemIdentifier:v8];

  if (v11)
  {
    id v9 = [*(id *)(a1 + 32) collectionView];
    id v10 = [v9 collectionViewLayout];
    [v10 invalidateLayout];
  }
}

uint64_t sub_10005DFFC(uint64_t a1, void *a2)
{
  uint64_t result = (uint64_t)[a2 isCancelled];
  if ((result & 1) == 0)
  {
    id v4 = *(uint64_t (**)(void))(*(void *)(a1 + 32) + 16);
    return v4();
  }
  return result;
}

void sub_10005E590(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40)) {
    uint64_t v1 = 3;
  }
  else {
    uint64_t v1 = 0;
  }
  id v2 = [*(id *)(a1 + 32) folderDataSource];
  [v2 setAutoExpandMode:v1];
}

id sub_10005F4FC(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateContainerSelection];
}

void sub_10005F71C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10005F768(uint64_t a1, uint64_t a2, void *a3)
{
  id v8 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    if (![v8 _splitViewControllerContext]
      || ([WeakRetained traitCollection],
          unint64_t v5 = objc_claimAutoreleasedReturnValue(),
          id v6 = [v5 _splitViewControllerContext],
          v5,
          !v6))
    {
      [WeakRetained updateAppearanceStyle];
      id v7 = [WeakRetained folderDataSource];
      [v7 reloadDataAnimated:0];
    }
    [WeakRetained updateContainerSelection];
  }
}

void sub_10005F820(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained updateToolbarAnimated:1];
}

void *sub_10005F864(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v6 = WeakRetained;
  if (WeakRetained)
  {
    id v7 = [WeakRetained legacyViewContext];
    id v8 = [v7 ic_existingObjectWithID:v3];

    id v9 = [v8 accountIdentifier];
    id v10 = [v6 modernViewContext];
    id v11 = +[ICAccount accountWithIdentifier:v9 context:v10];

    objc_opt_class();
    id v12 = +[ICMigrationController legacyAccountForPrimaryICloudAccount];
    uint64_t v13 = ICCheckedDynamicCast();

    uint64_t v14 = [v8 accountIdentifier];
    unsigned int v15 = [v13 accountIdentifier];
    unsigned int v16 = [v14 isEqualToString:v15];

    if (v16 && ([v11 didChooseToMigrate] & 1) == 0)
    {
      v19[0] = _NSConcreteStackBlock;
      v19[1] = 3221225472;
      v19[2] = sub_10005FA58;
      v19[3] = &unk_1006266F0;
      objc_copyWeak(&v20, v4);
      id v17 = objc_retainBlock(v19);
      objc_destroyWeak(&v20);
    }
    else
    {
      id v17 = 0;
    }
  }
  else
  {
    id v17 = 0;
  }

  return v17;
}

void sub_10005FA58(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v1 = [WeakRetained viewControllerManager];
  [v1 showStartupWithForceWelcomeScreen:1 completion:0];
}

void sub_10005FAB8(uint64_t a1, void *a2)
{
  id v9 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = WeakRetained;
  if (WeakRetained)
  {
    unint64_t v5 = [WeakRetained viewControllerManager];
    if (([v5 hasCompactWidth] & 1) == 0)
    {

      goto LABEL_6;
    }
    id v6 = [v4 transitionCoordinator];
    if (v6)
    {

LABEL_7:
      goto LABEL_8;
    }
    id v7 = [v4 navigationController];
    id v8 = [v7 topViewController];

    if (v4 == v8)
    {
LABEL_6:
      unint64_t v5 = [v4 viewControllerManager];
      [v5 selectTagSelection:v9];
      goto LABEL_7;
    }
  }
LABEL_8:
}

void sub_10005FB9C(uint64_t a1)
{
  id v2 = +[NSUserDefaults standardUserDefaults];
  [v2 setBool:1 forKey:@"DidDismissAllowNotificationsView"];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = [WeakRetained collectionView];
  [v3 setShouldShowAllowNotificationsView:0];
}

void sub_10005FC24(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10005FCB4;
  block[3] = &unk_100625938;
  objc_copyWeak(&v2, (id *)(a1 + 32));
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  objc_destroyWeak(&v2);
}

void sub_10005FCB4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained updateContainerSelection];
}

void sub_10005FEEC(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10005FF04(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10005FF14(uint64_t a1)
{
}

void sub_10005FF1C(uint64_t a1)
{
  id v5 = [*(id *)(a1 + 32) modernViewContext];
  uint64_t v2 = [v5 objectWithID:*(void *)(a1 + 40)];
  uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_10005FF88(uint64_t a1)
{
  id v5 = [*(id *)(a1 + 32) legacyViewContext];
  uint64_t v2 = [v5 objectWithID:*(void *)(a1 + 40)];
  uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_100060DF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100060E14(uint64_t a1, uint64_t a2)
{
  if (a2 == 1)
  {
    uint64_t v3 = +[ICAppDelegate sharedInstance];
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_100060F44;
    v6[3] = &unk_100626768;
    id v4 = &v7;
    objc_copyWeak(&v7, (id *)(a1 + 32));
    [v3 checkIfHasSharedNotesOrFolders:v6];
  }
  else
  {
    id v4 = &v5;
    objc_copyWeak(&v5, (id *)(a1 + 32));
    performBlockOnMainThread();
  }
  objc_destroyWeak(v4);
}

void sub_100060F2C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100060F44(uint64_t a1, int a2)
{
  uint64_t v3 = (id *)(a1 + 32);
  if (a2)
  {
    v5[1] = _NSConcreteStackBlock;
    v5[2] = (id)3221225472;
    v5[3] = sub_100061048;
    v5[4] = &unk_100625938;
    id v4 = &v6;
    objc_copyWeak(&v6, v3);
    performBlockOnMainThread();
  }
  else
  {
    id v4 = v5;
    objc_copyWeak(v5, v3);
    performBlockOnMainThread();
  }
  objc_destroyWeak(v4);
}

void sub_100061030(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100061048(uint64_t a1)
{
  uint64_t v2 = +[NSUserDefaults standardUserDefaults];
  unsigned int v3 = [v2 BOOLForKey:@"DidDismissAllowNotificationsView"];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = [WeakRetained collectionView];
  [v4 setShouldShowAllowNotificationsView:v3 ^ 1];
}

void sub_1000610D8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v1 = [WeakRetained collectionView];
  [v1 setShouldShowAllowNotificationsView:0];
}

void sub_100061134(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v1 = [WeakRetained collectionView];
  [v1 setShouldShowAllowNotificationsView:0];
}

id sub_1000611FC(uint64_t a1)
{
  return [*(id *)(a1 + 32) checkIfShouldShowOrHideAllowNotificationsView];
}

BOOL sub_100061370(id a1, id a2, unint64_t a3, BOOL *a4)
{
  id v4 = a2;
  objc_opt_class();
  id v5 = ICDynamicCast();

  LOBYTE(v4) = [v5 sectionType] == (id)8;
  return (char)v4;
}

id sub_100061548(uint64_t a1)
{
  return [*(id *)(a1 + 32) scrollToRecentlyCreatedFolderIfNeeded];
}

void sub_10006227C(uint64_t a1)
{
  uint64_t v2 = +[ICCloudContext sharedContext];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  _OWORD v4[2] = sub_10006232C;
  v4[3] = &unk_1006267D8;
  uint64_t v3 = *(void *)(a1 + 32);
  id v5 = *(id *)(a1 + 40);
  [v2 deleteSharesForObjects:v3 completionHandler:v4];
}

void sub_10006232C(uint64_t a1, void *a2)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  _OWORD v4[2] = sub_1000623DC;
  v4[3] = &unk_100625B40;
  id v5 = a2;
  id v6 = *(id *)(a1 + 32);
  id v3 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v4);
}

uint64_t sub_1000623DC(uint64_t a1)
{
  uint64_t v2 = (uint64_t *)(a1 + 32);
  if (*(void *)(a1 + 32))
  {
    id v3 = os_log_create("com.apple.notes", "Move");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      sub_1004D4F14(v2, v3);
    }

    uint64_t result = *(void *)(a1 + 40);
    if (result) {
      return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0);
    }
  }
  else
  {
    uint64_t result = *(void *)(a1 + 40);
    if (result)
    {
      id v5 = *(uint64_t (**)(void))(result + 16);
      return v5();
    }
  }
  return result;
}

uint64_t sub_100062498(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0);
  }
  return result;
}

void sub_100062670(uint64_t a1)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_100062704;
  v2[3] = &unk_1006267D8;
  uint64_t v1 = *(void *)(a1 + 32);
  id v3 = *(id *)(a1 + 40);
  +[ICDeleteDecisionController deleteSharesInFolder:v1 completion:v2];
}

void sub_100062704(uint64_t a1, void *a2)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  _OWORD v4[2] = sub_1000627B4;
  v4[3] = &unk_100625B40;
  id v5 = a2;
  id v6 = *(id *)(a1 + 32);
  id v3 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v4);
}

uint64_t sub_1000627B4(uint64_t a1)
{
  uint64_t v2 = (uint64_t *)(a1 + 32);
  if (*(void *)(a1 + 32))
  {
    id v3 = os_log_create("com.apple.notes", "Move");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      sub_1004D4F90(v2, v3);
    }

    uint64_t result = *(void *)(a1 + 40);
    if (result) {
      return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0);
    }
  }
  else
  {
    uint64_t result = *(void *)(a1 + 40);
    if (result)
    {
      id v5 = *(uint64_t (**)(void))(result + 16);
      return v5();
    }
  }
  return result;
}

uint64_t sub_100062870(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0);
  }
  return result;
}

void sub_100062A8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

NSManagedObjectID *__cdecl sub_100062AAC(id a1, NSManagedObject *a2)
{
  return [(NSManagedObject *)a2 objectID];
}

void sub_100062AB4(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  id v4 = ICDynamicCast();
  objc_opt_class();
  id v5 = ICDynamicCast();

  if (objc_msgSend(v4, "ic_isModernContainerType"))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    id v7 = [WeakRetained moveViewController];
    uint64_t v8 = [v7 modernViewContext];
  }
  else
  {
    if (!objc_msgSend(v4, "ic_isLegacyContainerType"))
    {
      if (!v5)
      {
        if (v3) {
          +[ICAssert handleFailedAssertWithCondition:functionName:simulateCrash:showAlert:format:](ICAssert, "handleFailedAssertWithCondition:functionName:simulateCrash:showAlert:format:", "__objc_no", "-[ICMoveDecisionController performDecisionWithCompletion:]_block_invoke_2", 1, 0, @"Destination object ID doesn't belong to a known managed object context");
        }
        goto LABEL_6;
      }
      id v10 = v5;
LABEL_10:
      id v15 = objc_loadWeakRetained((id *)(a1 + 48));
      unsigned int v16 = [v15 presentingViewController];
      v22[0] = _NSConcreteStackBlock;
      v22[1] = 3221225472;
      v22[2] = sub_100062D74;
      v22[3] = &unk_100625888;
      id v17 = *(void **)(a1 + 40);
      v22[4] = *(void *)(a1 + 32);
      id v23 = v10;
      id v24 = v17;
      id v18 = v10;
      [v16 dismissViewControllerAnimated:1 completion:v22];

      goto LABEL_11;
    }
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    id v7 = [WeakRetained moveViewController];
    uint64_t v8 = [v7 legacyViewContext];
  }
  id v9 = (void *)v8;

  id v10 = [v9 objectWithID:v4];

  if (v10) {
    goto LABEL_10;
  }
LABEL_6:
  id v11 = objc_loadWeakRetained((id *)(a1 + 48));
  id v12 = [v11 presentingViewController];

  if (v12)
  {
    id v13 = objc_loadWeakRetained((id *)(a1 + 48));
    uint64_t v14 = [v13 presentingViewController];
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 3221225472;
    v20[2] = sub_100062D84;
    v20[3] = &unk_100625988;
    id v21 = *(id *)(a1 + 40);
    [v14 dismissViewControllerAnimated:1 completion:v20];
  }
  else
  {
    uint64_t v19 = *(void *)(a1 + 40);
    if (v19) {
      (*(void (**)(uint64_t, void *))(v19 + 16))(v19, &__NSArray0__struct);
    }
  }
LABEL_11:
}

id sub_100062D74(uint64_t a1)
{
  return [*(id *)(a1 + 32) moveSourceObjectsToDestination:*(void *)(a1 + 40) completionHandler:*(void *)(a1 + 48)];
}

uint64_t sub_100062D84(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void *))(result + 16))(result, &__NSArray0__struct);
  }
  return result;
}

uint64_t sub_1000636AC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void *))(result + 16))(result, &__NSArray0__struct);
  }
  return result;
}

uint64_t sub_1000636CC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void *))(result + 16))(result, &__NSArray0__struct);
  }
  return result;
}

uint64_t sub_1000636EC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void *))(result + 16))(result, &__NSArray0__struct);
  }
  return result;
}

uint64_t sub_10006370C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void *))(result + 16))(result, &__NSArray0__struct);
  }
  return result;
}

uint64_t sub_10006372C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void *))(result + 16))(result, &__NSArray0__struct);
  }
  return result;
}

void sub_10006374C(uint64_t a1)
{
  uint64_t v2 = [ICCloudSyncingObjectMoveAction alloc];
  id v3 = [*(id *)(a1 + 32) sourceFolder];
  id v4 = [(ICCloudSyncingObjectMoveAction *)v2 initWithFolder:v3 toParentObject:*(void *)(a1 + 40) isCopy:0];

  objc_opt_class();
  id v5 = ICClassAndProtocolCast();
  if (v5)
  {
    id v6 = [*(id *)(a1 + 32) sourceFolder:&OBJC_PROTOCOL___ICNoteContainer];
    id v7 = [v5 noteContainerAccount];
    uint64_t v8 = +[ICFolder undoablyMoveFolder:v6 toNoteContainer:v5 toAccount:v7 moveAction:v4 noteMovedBlock:0];

    [*(id *)(a1 + 32) announceMoveToDestination:*(void *)(a1 + 40) delay:2.5];
    uint64_t v9 = *(void *)(a1 + 48);
    if (v9)
    {
      id v12 = v8;
      id v10 = +[NSArray arrayWithObjects:&v12 count:1];
      (*(void (**)(uint64_t, void *))(v9 + 16))(v9, v10);
    }
  }
  else
  {
    +[ICAssert handleFailedAssertWithCondition:functionName:simulateCrash:showAlert:format:](ICAssert, "handleFailedAssertWithCondition:functionName:simulateCrash:showAlert:format:", "__objc_no", "-[ICMoveDecisionController moveSourceObjectsToDestination:completionHandler:]_block_invoke_6", 1, 0, @"Trying to move folder to unknown destination", &OBJC_PROTOCOL___ICNoteContainer);
    uint64_t v11 = *(void *)(a1 + 48);
    if (v11) {
      (*(void (**)(uint64_t, void *))(v11 + 16))(v11, &__NSArray0__struct);
    }
  }
}

void sub_10006391C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) moveDecision];
  id v3 = [v2 modernSourceObjects];
  id v4 = [v3 count];

  if (v4)
  {
    id v5 = ICProtocolCast();
    objc_opt_class();
    uint64_t v6 = ICDynamicCast();
    id v7 = (void *)v6;
    if (v5)
    {
      uint64_t v8 = +[ICNoteContext sharedContext];
      uint64_t v9 = [*(id *)(a1 + 32) sourceObjects];
      id v10 = [*(id *)(a1 + 32) workerContext];
      v28[0] = _NSConcreteStackBlock;
      v28[1] = 3221225472;
      v28[2] = sub_100063C7C;
      v28[3] = &unk_100626868;
      uint64_t v11 = *(void **)(a1 + 40);
      v28[4] = *(void *)(a1 + 32);
      id v29 = v11;
      id v30 = *(id *)(a1 + 48);
      [v8 undoablyMoveNotes:v9 toNoteContainer:v5 actionName:0 workerContext:v10 completionHandler:v28];

      id v12 = v29;
    }
    else
    {
      if (!v6)
      {
        +[ICAssert handleFailedAssertWithCondition:functionName:simulateCrash:showAlert:format:](ICAssert, "handleFailedAssertWithCondition:functionName:simulateCrash:showAlert:format:", "__objc_no", "-[ICMoveDecisionController moveSourceObjectsToDestination:completionHandler:]_block_invoke_7", 1, 0, @"Trying to move notes to unknown destination");
        uint64_t v23 = *(void *)(a1 + 48);
        if (v23) {
          (*(void (**)(uint64_t, void *))(v23 + 16))(v23, &__NSArray0__struct);
        }
        goto LABEL_12;
      }
      uint64_t v19 = +[ICNoteContext sharedContext];
      id v20 = [*(id *)(a1 + 32) sourceObjects];
      id v21 = [*(id *)(a1 + 32) workerContext];
      v25[0] = _NSConcreteStackBlock;
      v25[1] = 3221225472;
      v25[2] = sub_100063CE4;
      v25[3] = &unk_100626868;
      unsigned __int8 v22 = *(void **)(a1 + 40);
      v25[4] = *(void *)(a1 + 32);
      id v26 = v22;
      id v27 = *(id *)(a1 + 48);
      [v19 undoablyMoveNotes:v20 toVirtualSmartFolder:v7 actionName:0 workerContext:v21 completionHandler:v25];

      id v12 = v26;
    }

LABEL_12:
    return;
  }
  id v13 = [*(id *)(a1 + 32) moveDecision];
  uint64_t v14 = [v13 htmlSourceObjects];
  id v15 = [v14 count];

  if (v15)
  {
    unsigned int v16 = +[ICLegacyImportManager sharedLegacyImportManager];
    id v17 = [*(id *)(a1 + 32) sourceObjects];
    [v16 moveLegacyNotes:v17 toFolder:*(void *)(a1 + 40)];

    [*(id *)(a1 + 32) announceMoveToDestination:*(void *)(a1 + 40) delay:2.5];
    uint64_t v18 = *(void *)(a1 + 48);
    if (v18)
    {
      id v24 = [*(id *)(a1 + 32) sourceObjects];
      (*(void (**)(uint64_t, id))(v18 + 16))(v18, v24);
    }
  }
}

void sub_100063C7C(uint64_t a1, void *a2)
{
  id v4 = a2;
  [*(id *)(a1 + 32) announceMoveToDestination:*(void *)(a1 + 40) delay:2.5];
  uint64_t v3 = *(void *)(a1 + 48);
  if (v3) {
    (*(void (**)(uint64_t, id))(v3 + 16))(v3, v4);
  }
}

void sub_100063CE4(uint64_t a1, void *a2)
{
  id v4 = a2;
  [*(id *)(a1 + 32) announceMoveToDestination:*(void *)(a1 + 40) delay:2.5];
  uint64_t v3 = *(void *)(a1 + 48);
  if (v3) {
    (*(void (**)(uint64_t, id))(v3 + 16))(v3, v4);
  }
}

uint64_t sub_100063D4C(uint64_t a1, int a2)
{
  if (a2) {
    return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void *))(result + 16))(result, &__NSArray0__struct);
  }
  return result;
}

uint64_t sub_100063D80(uint64_t a1, int a2)
{
  if (a2) {
    return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void *))(result + 16))(result, &__NSArray0__struct);
  }
  return result;
}

void sub_100063F94(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100063FB0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_opt_class();
  uint64_t v1 = ICDynamicCast();
  uint64_t v2 = [v1 localizedTitle];
  uint64_t v3 = v2;
  if (v2)
  {
    id v4 = v2;
  }
  else
  {
    objc_opt_class();
    id v5 = ICDynamicCast();
    uint64_t v6 = [v5 localizedName];
    id v7 = v6;
    if (v6)
    {
      id v4 = v6;
    }
    else
    {
      uint64_t v8 = ICProtocolCast();
      uint64_t v9 = [v8 name];
      id v10 = v9;
      if (v9)
      {
        id v4 = v9;
      }
      else
      {
        uint64_t v11 = ICProtocolCast();
        id v12 = [v11 name];
        id v13 = v12;
        if (v12)
        {
          id v4 = v12;
        }
        else
        {
          objc_opt_class();
          uint64_t v14 = ICDynamicCast();
          id v4 = [v14 title];
        }
      }
    }
  }

  id v15 = +[NSBundle mainBundle];
  unsigned int v16 = [v15 localizedStringForKey:@"Moved a note to %@" value:&stru_10063F3D8 table:0];

  id v17 = +[NSString localizedStringWithFormat:](NSString, "localizedStringWithFormat:", v16, v4);
  ICAccessibilityPostAnnouncementNotification();
}

void sub_10006466C(uint64_t a1)
{
  [*(id *)(a1 + 32) activityDidFinish:1];
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2)
  {
    id v3 = [*(id *)(a1 + 32) activityType];
    (*(void (**)(uint64_t, uint64_t, id))(v2 + 16))(v2, 1, v3);
  }
}

void sub_100065130(id a1)
{
  id v1 = +[CUIShapeEffectStack sharedCIContext];
}

void sub_100065FBC(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) thumbnailImageView];
  id v1 = [v3 layer];
  LODWORD(v2) = 1.0;
  [v1 setOpacity:v2];
}

void sub_10006624C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

unsigned char *sub_100066274(unsigned char *result, void *a2)
{
  if (result[32]) {
    return _[a2 setUserInterfaceStyle:1];
  }
  return result;
}

void sub_10006628C(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_copyWeak(v5, (id *)(a1 + 40));
  id v4 = v3;
  v5[1] = *(id *)(a1 + 48);
  performBlockOnMainThread();

  objc_destroyWeak(v5);
}

void sub_10006634C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100066360(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  double v2 = [*(id *)(a1 + 32) configuration];
  id v3 = [v2 associatedObjectIdentifier];
  id v4 = [WeakRetained noteIdentifier];
  unsigned int v5 = [v3 isEqualToString:v4];

  if (WeakRetained && v5)
  {
    uint64_t v6 = [WeakRetained thumbnailImageView];
    id v7 = [v6 image];

    uint64_t v8 = [*(id *)(a1 + 32) image];
    uint64_t v9 = [WeakRetained thumbnailImageView];
    [v9 setImage:v8];

    id v10 = [*(id *)(a1 + 40) ic_enclosingScrollView];
    unsigned __int8 v11 = [v10 ic_shouldOptimizeForScrolling];
    id v12 = *(id *)(a1 + 56);
    id v13 = +[UIApplication sharedApplication];
    id v14 = [v13 applicationState];

    if ((v11 & 1) != 0 || ([*(id *)(a1 + 32) fetchDuration], v15 >= 0.3) && !v7 && v12 == v14) {
      [WeakRetained animateThumbnailImageView];
    }
  }
}

void sub_100066D74(uint64_t a1)
{
  double v2 = [*(id *)(a1 + 32) viewControllerManager];
  id v5 = [v2 noteEditorViewController];

  if (*(unsigned char *)(a1 + 56))
  {
    [v5 hideActivityStreamToolbarAnimated:0];
  }
  else if (*(void *)(a1 + 40))
  {
    id v3 = [*(id *)(a1 + 32) viewControllerManager];
    id v4 = [v3 selectedModernNote];
    [v5 showActivityStreamToolbarForObject:v4 selection:*(void *)(a1 + 40) animated:0];
  }
  if (*(unsigned char *)(a1 + 57)) {
    [*(id *)(a1 + 48) showColumn:0];
  }
}

id sub_100066E44(void *a1)
{
  double v2 = (void *)a1[4];
  if (v2)
  {
    unsigned int v3 = [v2 BOOLValue];
    id v4 = (void *)a1[5];
    if (v3) {
      [v4 showColumn:0];
    }
    else {
      [v4 hideColumn:0];
    }
  }
  id result = (id)a1[6];
  if (result)
  {
    unsigned int v6 = [result BOOLValue];
    id v7 = (void *)a1[5];
    if (v6)
    {
      return [v7 showColumn:1];
    }
    else
    {
      return [v7 hideColumn:1];
    }
  }
  return result;
}

uint64_t sub_100066EE0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1000674C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000674E4(uint64_t a1)
{
  id v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  unsigned int v3 = [WeakRetained isActive];

  if (v3)
  {
    id v4 = os_log_create("com.apple.notes", "SearchIndexer");
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG)) {
      sub_1004D50A4(v4, v5, v6, v7, v8, v9, v10, v11);
    }

    id v12 = objc_loadWeakRetained(v1);
    id v13 = [v12 searchDataSource];
    [v13 cancelSearchQuery];

    id v14 = objc_loadWeakRetained(v1);
    double v15 = [v14 searchController];
    [v14 updateSearchResultsForSearchController:v15];
  }
}

void sub_100068274(uint64_t a1, void *a2)
{
  id v5 = [a2 representedObject];
  objc_opt_class();
  id v4 = ICDynamicCast();
  if (a2) {
    [*(id *)(a1 + 32) addObject:v4];
  }
}

_UISearchSuggestionItem_dci *__cdecl sub_100068508(id a1, ICSearchSuggestion *a2)
{
  return (_UISearchSuggestionItem_dci *)[(ICSearchSuggestion *)a2 dciSuggestion];
}

void sub_100069020(uint64_t a1)
{
  double v2 = [*(id *)(a1 + 32) searchController];
  unsigned __int8 v3 = [v2 isActive];

  if ((v3 & 1) == 0)
  {
    id v4 = [*(id *)(a1 + 32) searchController];
    [v4 setActive:1];
  }
  if (*(unsigned char *)(a1 + 40)) {
    dispatchMainAfterDelay();
  }
}

void sub_1000690F0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) searchBar];
  id v1 = [v2 searchField];
  [v1 becomeFirstResponder];
}

id sub_100069470(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([*(id *)(a1 + 32) indexOfSectionIdentifier:v3] == (id)0x7FFFFFFFFFFFFFFFLL) {
    id v4 = 0;
  }
  else {
    id v4 = [*(id *)(a1 + 32) numberOfItemsInSection:v3];
  }

  return v4;
}

BOOL sub_1000699CC(id a1, UISearchToken *a2, unint64_t a3, BOOL *a4)
{
  id v4 = a2;
  id v5 = [(UISearchToken *)v4 representedObject];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  if (isKindOfClass)
  {
    uint64_t v7 = [(UISearchToken *)v4 representedObject];
    uint64_t v8 = [v7 csToken];
    BOOL v9 = v8 == 0;
  }
  else
  {
    BOOL v9 = 0;
  }

  return v9;
}

UISearchToken *__cdecl sub_100069A60(id a1, _CSSuggestionToken *a2)
{
  id v2 = a2;
  id v3 = [objc_alloc((Class)ICSearchToken) initWithCSSuggestionToken:v2];

  id v4 = +[ICSearchSuggestion iconImageForToken:v3];
  id v5 = [v3 title];
  uint64_t v6 = +[UISearchToken tokenWithIcon:v4 text:v5];

  [v6 setRepresentedObject:v3];

  return (UISearchToken *)v6;
}

void sub_10006A890(uint64_t a1)
{
  id v6 = [*(id *)(a1 + 32) note];
  id v2 = [*(id *)(a1 + 40) date];
  [v6 setModificationDate:v2];
  id v3 = [v6 creationDate];
  unsigned int v4 = [v3 ic_isLaterThanDate:v2];

  if (v4) {
    [v6 setCreationDate:v2];
  }
  id v5 = [v6 managedObjectContext];
  [v5 ic_save];
}

void sub_10006A94C(uint64_t a1)
{
  id v6 = [*(id *)(a1 + 32) note];
  id v2 = [*(id *)(a1 + 40) date];
  [v6 setCreationDate:v2];
  id v3 = [v6 modificationDate];
  unsigned int v4 = [v3 ic_isEarlierThanDate:v2];

  if (v4) {
    [v6 setModificationDate:v2];
  }
  id v5 = [v6 managedObjectContext];
  [v5 ic_save];
}

void sub_10006AA08(uint64_t a1)
{
  id v4 = [*(id *)(a1 + 32) note];
  id v1 = +[NSDate distantPast];
  [v4 setCreationDate:v1];

  id v2 = +[NSDate distantPast];
  [v4 setModificationDate:v2];

  id v3 = [v4 managedObjectContext];
  [v3 ic_save];
}

void sub_10006AC48(uint64_t a1)
{
  [*(id *)(a1 + 32) activityDidFinish:1];
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2)
  {
    id v3 = [*(id *)(a1 + 32) activityType];
    (*(void (**)(uint64_t, uint64_t, id))(v2 + 16))(v2, 1, v3);
  }
}

void sub_10006BBC0(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) viewControllerManager];
  [v2 setNoteContainerViewMode:[*(id *)(a1 + 32) targetNoteViewMode]];

  [*(id *)(a1 + 32) activityDidFinish:1];
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3)
  {
    id v4 = [*(id *)(a1 + 32) activityType];
    (*(void (**)(uint64_t, uint64_t, id))(v3 + 16))(v3, 1, v4);
  }
}

void sub_10006C85C(uint64_t a1)
{
  id v2 = [objc_alloc((Class)NSFetchRequest) initWithEntityName:@"NoteAttachment"];
  uint64_t v3 = +[NSPredicate predicateWithFormat:@"note.store == nil"];
  unsigned int v42 = +[NSPredicate predicateWithFormat:@"note.store.account == nil"];
  uint64_t v43 = (void *)v3;
  v60[0] = v3;
  v60[1] = v42;
  id v4 = +[NSArray arrayWithObjects:v60 count:2];
  uint64_t v5 = +[NSCompoundPredicate orPredicateWithSubpredicates:v4];

  id v41 = (void *)v5;
  [v2 setPredicate:v5];
  id v44 = v2;
  id v6 = [objc_alloc((Class)NSBatchDeleteRequest) initWithFetchRequest:v2];
  [v6 setResultType:1];
  uint64_t v7 = os_log_create("com.apple.notes", "LaunchTask");
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG)) {
    sub_1004D5534(v7);
  }

  uint64_t v8 = *(void **)(a1 + 32);
  id v55 = 0;
  BOOL v9 = [v8 executeRequest:v6 error:&v55];
  id v10 = v55;
  uint64_t v40 = v6;
  if (v10)
  {
    uint64_t v11 = os_log_create("com.apple.notes", "LaunchTask");
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      sub_1004D54BC((uint64_t)v10, v11);
    }
LABEL_6:

    goto LABEL_7;
  }
  long long v36 = [v9 result];
  id v37 = [v36 count];

  if (v37)
  {
    uint64_t v11 = os_log_create("com.apple.notes", "LaunchTask");
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 134217984;
      id v59 = v37;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "Successfully deleted %ld orphaned HTML attachments", buf, 0xCu);
    }
    goto LABEL_6;
  }
LABEL_7:
  uint64_t v47 = a1;
  long long v53 = 0u;
  long long v54 = 0u;
  long long v51 = 0u;
  long long v52 = 0u;
  id obj = [v9 result];
  id v12 = [obj countByEnumeratingWithState:&v51 objects:v57 count:16];
  if (v12)
  {
    id v13 = v12;
    uint64_t v14 = *(void *)v52;
    do
    {
      double v15 = 0;
      do
      {
        if (*(void *)v52 != v14) {
          objc_enumerationMutation(obj);
        }
        unsigned int v16 = *(void **)(*((void *)&v51 + 1) + 8 * (void)v15);
        id v50 = v10;
        uint64_t v18 = +[NoteAttachmentObject attachmentDirectoryURLForAttachmentObjectID:v16 error:&v50];
        id v19 = v50;

        if (v19)
        {
          id v20 = os_log_create("com.apple.notes", "LaunchTask");
          if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 138412290;
            id v59 = v19;
            _os_log_error_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_ERROR, "Error getting file directory URL for attachment: %@", buf, 0xCu);
          }
        }
        if (v18)
        {
          id v21 = *(void **)(v47 + 40);
          id v49 = v19;
          unsigned __int8 v22 = [v21 removeItemAtURL:v18 error:&v49];
          id v10 = v49;

          uint64_t v23 = os_log_create("com.apple.notes", "LaunchTask");
          id v24 = v23;
          if (v22)
          {
            if (os_log_type_enabled(v23, OS_LOG_TYPE_DEBUG))
            {
              *(_DWORD *)buf = 138412290;
              id v59 = v18;
              _os_log_debug_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEBUG, "Successfully deleted attachment file: %@", buf, 0xCu);
            }
          }
          else if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 138412290;
            id v59 = v10;
            _os_log_error_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_ERROR, "Error removing attachment file: %@", buf, 0xCu);
          }
        }
        else
        {
          id v24 = os_log_create("com.apple.notes", "LaunchTask");
          if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 138412290;
            id v59 = v16;
            _os_log_error_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_ERROR, "Failed to get attachment folder URL for object ID: %@", buf, 0xCu);
          }
          id v10 = v19;
        }

        double v15 = (char *)v15 + 1;
      }
      while (v13 != v15);
      id v13 = [obj countByEnumeratingWithState:&v51 objects:v57 count:16];
    }
    while (v13);
  }

  id v25 = [objc_alloc((Class)NSFetchRequest) initWithEntityName:@"Note"];
  id v26 = +[NSPredicate predicateWithFormat:@"store == nil"];
  id v27 = +[NSPredicate predicateWithFormat:@"store.account == nil"];
  v56[0] = v26;
  v56[1] = v27;
  uint64_t v28 = +[NSArray arrayWithObjects:v56 count:2];
  id v29 = +[NSCompoundPredicate orPredicateWithSubpredicates:v28];

  [v25 setPredicate:v29];
  id v30 = [objc_alloc((Class)NSBatchDeleteRequest) initWithFetchRequest:v25];
  [v30 setResultType:2];
  long long v31 = os_log_create("com.apple.notes", "LaunchTask");
  if (os_log_type_enabled(v31, OS_LOG_TYPE_DEBUG)) {
    sub_1004D5478(v31);
  }

  long long v32 = *(void **)(v47 + 32);
  id v48 = v10;
  long long v33 = [v32 executeRequest:v30 error:&v48];
  id v34 = v48;

  if (v34)
  {
    long long v35 = os_log_create("com.apple.notes", "LaunchTask");
    if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
      sub_1004D5400((uint64_t)v34, v35);
    }
  }
  else
  {
    long long v38 = [v33 result];
    id v39 = [v38 unsignedIntegerValue];

    if (!v39) {
      goto LABEL_33;
    }
    long long v35 = os_log_create("com.apple.notes", "LaunchTask");
    if (os_log_type_enabled(v35, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 134217984;
      id v59 = v39;
      _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_INFO, "Successfully deleted %ld orphaned HTML notes", buf, 0xCu);
    }
  }

LABEL_33:
  [*(id *)(v47 + 32) ic_saveWithLogDescription:@"Deleting orphaned HTML notes and attachments"];
}

void sub_10006D9B4(uint64_t a1)
{
  [*(id *)(a1 + 32) activityDidFinish:1];
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2)
  {
    id v3 = [*(id *)(a1 + 32) activityType];
    (*(void (**)(uint64_t, uint64_t, id))(v2 + 16))(v2, 1, v3);
  }
}

void sub_10006E2FC(id a1, UIMutableTraits *a2)
{
}

void sub_10006E308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a1 + 40);
  if (v4)
  {
    BOOL v5 = a4 == 0;
    id v6 = [*(id *)(a1 + 32) activityType];
    (*(void (**)(uint64_t, BOOL, id))(v4 + 16))(v4, v5, v6);
  }
}

void sub_10006ECEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

BOOL sub_10006ED0C(id a1, ICSearchQueryOperation *a2)
{
  return [(ICSearchQueryOperation *)a2 isCancelled] ^ 1;
}

void sub_10006ED2C(uint64_t a1, void *a2, unsigned int a3)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  CFStringRef v7 = @"Top Hit Query";
  unsigned int v53 = a3;
  if (a3) {
    CFStringRef v7 = @"Primary Query";
  }
  uint64_t v8 = +[NSString stringWithFormat:@"queryOperation foundItemsHandler start for %@", v7];
  +[ICSearchProfiler logProfilingWithMessage:v8 searchQueryOperation:WeakRetained];

  unsigned __int8 v57 = WeakRetained;
  if ((*(unsigned int (**)(void))(*(void *)(a1 + 40) + 16))() && [v5 count])
  {
    uint64_t v56 = v5;
    BOOL v9 = [WeakRetained searchTokens];
    id v51 = +[ICSearchToken suggestionTypeOfFirstItemInTokens:v9];

    +[ICSearchProfiler logProfilingWithMessage:@"queryOperation foundItemsHandler start obtaining background context" searchQueryOperation:WeakRetained];
    id v48 = +[ICSearchIndexer sharedIndexer];
    id v54 = [v48 newContextsForAllDataSources];
    +[ICSearchProfiler logProfilingWithMessage:@"queryOperation foundItemsHandler finish obtaining background context" searchQueryOperation:WeakRetained];
    v90[0] = 0;
    v90[1] = v90;
    v90[2] = 0x3032000000;
    v90[3] = sub_10006F5E0;
    v90[4] = sub_10006F5F0;
    id v91 = objc_alloc_init((Class)NSMutableArray);
    id v55 = [objc_alloc((Class)NSMutableArray) initWithCapacity:12];
    unint64_t v60 = 0;
    double v46 = &v88;
    uint64_t v47 = &v87;
    unsigned __int8 v45 = v78;
    uint64_t v50 = a1;
    do
    {
      if (v60 >= (unint64_t)[v56 count]
        || !(*(unsigned int (**)(void))(*(void *)(a1 + 40) + 16))())
      {
        break;
      }
      id v10 = (char *)[v56 count];
      uint64_t v11 = 12;
      if (!v60) {
        uint64_t v11 = 2;
      }
      unint64_t v12 = v60 + v11 - 1;
      id v13 = v10 - 1;
      if (v12 < (unint64_t)(v10 - 1)) {
        id v13 = (char *)v12;
      }
      unsigned __int8 v58 = v13;
      uint64_t v14 = +[NSIndexSet indexSetWithIndexesInRange:](NSIndexSet, "indexSetWithIndexesInRange:");
      uint64_t v15 = [v56 objectsAtIndexes:v14];

      id v62 = (void *)v15;
      unsigned int v16 = +[ICSearchQueryOperation searchableItemsFromSortableItems:v15];
      id v17 = +[NSString stringWithFormat:@"queryOperation foundItemsHandler start obtaining objects for batch starting from index %lu to index %lu", v60, v58, v45, v46, v47];
      +[ICSearchProfiler logProfilingWithMessage:v17 searchQueryOperation:v57];

      id v61 = [v48 objectsDictionaryForSearchableItems:v16 inContexts:v54];
      uint64_t v84 = 0;
      BOOL v85 = &v84;
      uint64_t v86 = 0x3032000000;
      char v87 = sub_10006F5E0;
      uint64_t v88 = sub_10006F5F0;
      id v89 = 0;
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      v78[0] = sub_10006F5F8;
      v78[1] = &unk_100626B90;
      id v82 = v90;
      id v63 = v57;
      id v79 = v63;
      id v52 = v48;
      id v80 = v52;
      objc_super v83 = &v84;
      id v49 = v16;
      id v81 = v49;
      dispatch_sync((dispatch_queue_t)&_dispatch_main_q, block);
      uint64_t v18 = +[NSString stringWithFormat:@"queryOperation foundItemsHandler finish obtaining objects for batch starting from index %lu to index %lu", v60, v58];
      +[ICSearchProfiler logProfilingWithMessage:v18 searchQueryOperation:v63];

      for (unint64_t i = 0;
            i < (unint64_t)[v62 count]
         && ((*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))() & 1) != 0;
            ++i)
      {
        id v20 = [v62 objectAtIndexedSubscript:i];
        id v21 = [v20 searchableItem];
        unsigned __int8 v22 = v21;
        if (!*(void *)(a1 + 32)
          || ([v21 attributeSet],
              uint64_t v23 = objc_claimAutoreleasedReturnValue(),
              [v23 domainIdentifier],
              id v24 = objc_claimAutoreleasedReturnValue(),
              unsigned __int8 v25 = [v24 isEqualToString:*(void *)(a1 + 32)],
              v24,
              v23,
              (v25 & 1) != 0))
        {
          id v26 = [v22 uniqueIdentifier];
          id v27 = [v61 objectForKeyedSubscript:v26];

          uint64_t v28 = (void *)v85[5];
          id v29 = [v22 uniqueIdentifier];
          id v30 = [v28 objectForKeyedSubscript:v29];

          if (v27 && v30)
          {
            uint64_t v73 = 0;
            id v74 = &v73;
            uint64_t v75 = 0x2020000000;
            char v76 = 0;
            uint64_t v69 = 0;
            id v70 = &v69;
            uint64_t v71 = 0x2020000000;
            char v72 = 0;
            long long v31 = [v27 managedObjectContext];
            v64[0] = _NSConcreteStackBlock;
            v64[1] = 3221225472;
            v64[2] = sub_10006F7B4;
            v64[3] = &unk_100626BB8;
            id v67 = &v73;
            id v32 = v27;
            id v65 = v32;
            uint64_t v68 = &v69;
            id v33 = v63;
            id v66 = v33;
            [v31 performBlockAndWait:v64];

            if (!*((unsigned char *)v74 + 24))
            {
              id v34 = [v20 attachmentUniqueIdentifiers];
              long long v35 = [v34 firstObject];

              if (v35)
              {
                long long v36 = [v52 objectForManagedObjectIDURI:v35 inContexts:v54];
                id v59 = [v36 objectID];
              }
              else
              {
                id v59 = 0;
              }
              id v37 = objc_alloc((Class)ICSearchResultConfiguration);
              long long v38 = [v33 searchString];
              id v39 = [v37 initWithSearchString:v38 searchSuggestionType:v51 isTopHit:v53 foundAttachmentObjectID:v59 sortableSearchableItem:v20];

              id v40 = [objc_alloc((Class)ICSearchResult) initWithMainContextObject:v30 currentContextObject:v32 configuration:v39];
              [v40 setMathNote:*((unsigned __int8 *)v70 + 24)];
              [v55 addObject:v40];

              a1 = v50;
            }

            _Block_object_dispose(&v69, 8);
            _Block_object_dispose(&v73, 8);
          }
        }
      }
      id v41 = +[NSString stringWithFormat:@"queryOperation foundItemsHandler finish creating search results for batch starting from index %lu to index %lu", v60, v58];
      +[ICSearchProfiler logProfilingWithMessage:v41 searchQueryOperation:v63];

      if ((*(unsigned int (**)(void))(*(void *)(a1 + 40) + 16))())
      {
        uint64_t v42 = *(void *)(a1 + 48);
        id v43 = [v55 copy];
        (*(void (**)(uint64_t, id))(v42 + 16))(v42, v43);

        [v55 removeAllObjects];
      }
      char v44 = (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
      unint64_t v60 = (unint64_t)(v58 + 1);

      _Block_object_dispose(&v84, 8);
    }
    while ((v44 & 1) != 0);

    _Block_object_dispose(v90, 8);
    id v5 = v56;
  }
  else if (![v5 count])
  {
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
}

void sub_10006F55C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 168), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10006F5E0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10006F5F0(uint64_t a1)
{
}

void sub_10006F5F8(uint64_t a1)
{
  if (![*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) count])
  {
    +[ICSearchProfiler logProfilingWithMessage:@"queryOperation foundItemsHandler start obtaining main context" searchQueryOperation:*(void *)(a1 + 32)];
    long long v16 = 0u;
    long long v17 = 0u;
    long long v14 = 0u;
    long long v15 = 0u;
    uint64_t v2 = [*(id *)(a1 + 40) dataSources];
    id v3 = [v2 countByEnumeratingWithState:&v14 objects:v18 count:16];
    if (v3)
    {
      id v4 = v3;
      uint64_t v5 = *(void *)v15;
      do
      {
        id v6 = 0;
        do
        {
          if (*(void *)v15 != v5) {
            objc_enumerationMutation(v2);
          }
          CFStringRef v7 = *(void **)(*((void *)&v14 + 1) + 8 * (void)v6);
          if (objc_opt_respondsToSelector())
          {
            uint64_t v8 = *(void **)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
            id v9 = v7;
            id v10 = [v9 mainThreadContext];
            [v8 addObject:v10];
          }
          id v6 = (char *)v6 + 1;
        }
        while (v4 != v6);
        id v4 = [v2 countByEnumeratingWithState:&v14 objects:v18 count:16];
      }
      while (v4);
    }

    +[ICSearchProfiler logProfilingWithMessage:@"queryOperation foundItemsHandler finish obtaining main context" searchQueryOperation:*(void *)(a1 + 32)];
  }
  uint64_t v11 = [*(id *)(a1 + 40) objectsDictionaryForSearchableItems:*(void *)(a1 + 48) inContexts:*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40)];
  uint64_t v12 = *(void *)(*(void *)(a1 + 64) + 8);
  id v13 = *(void **)(v12 + 40);
  *(void *)(v12 + 40) = v11;
}

void sub_10006F7B4(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 32);
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = [*(id *)(a1 + 32) isHiddenFromSearch];
  objc_opt_class();
  id v3 = ICDynamicCast();
  if ([v3 isMathNote])
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 1;
  }
  else
  {
    objc_opt_class();
    id v4 = ICDynamicCast();
    uint64_t v5 = [v4 note];
    *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = [v5 isMathNote];
  }
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24))
  {
    id v6 = os_log_create("com.apple.notes", "SearchIndexer");
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1004D5744(a1, v2, v6);
    }
  }
}

uint64_t sub_1000729F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v12 = &a9;
  if (!a1) {
    return 1;
  }
  uint64_t v9 = a1;
  uint64_t result = 1;
  do
  {
    uint64_t result = v9 - result + 32 * result;
    uint64_t v11 = (uint64_t *)v12;
    v12 += 8;
    uint64_t v9 = *v11;
  }
  while (v9);
  return result;
}

void sub_100073024(uint64_t a1)
{
  long long v17 = [*(id *)(a1 + 32) fetchPasswordProtectedNotesInSharedFolders];
  uint64_t v1 = [v17 ic_objectsPassingTest:&stru_100626C38];
  uint64_t v2 = os_log_create("com.apple.notes", "LaunchTask");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    sub_1004D5870(v1, v2);
  }

  id v3 = +[NSMutableSet set];
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  id obj = v1;
  id v4 = [obj countByEnumeratingWithState:&v19 objects:v25 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v20;
    do
    {
      CFStringRef v7 = 0;
      do
      {
        if (*(void *)v20 != v6) {
          objc_enumerationMutation(obj);
        }
        uint64_t v8 = *(void **)(*((void *)&v19 + 1) + 8 * (void)v7);
        uint64_t v9 = os_log_create("com.apple.notes", "LaunchTask");
        if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG)) {
          sub_1004D57F8(v23, v8, &v24, v9);
        }

        id v10 = [v8 account];
        uint64_t v11 = [v10 defaultFolder];
        [v8 setFolder:v11];

        uint64_t v12 = +[NSDate date];
        [v8 setFolderModificationDate:v12];

        [v8 updateChangeCountWithReason:@"Moved to default folder"];
        id v13 = [v8 objectID];
        [v3 addObject:v13];

        CFStringRef v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      id v5 = [obj countByEnumeratingWithState:&v19 objects:v25 count:16];
    }
    while (v5);
  }

  id v14 = [v3 copy];
  [*(id *)(a1 + 32) setMovedNoteObjectIDs:v14];

  long long v15 = [*(id *)(a1 + 32) workerContext];
  [v15 ic_save];
}

BOOL sub_1000732C4(id a1, ICNote *a2, unint64_t a3, BOOL *a4)
{
  return [(ICNote *)a2 isOwnedByCurrentUser];
}

void sub_10007371C(uint64_t a1)
{
  uint64_t v2 = os_log_create("com.apple.notes", "LaunchTask");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    sub_1004D5A20(v2);
  }

  id v3 = +[ICFolder predicateForVisibleObjects];
  v25[0] = v3;
  id v4 = +[NSPredicate predicateWithFormat:@"serverShareData != nil"];
  v25[1] = v4;
  id v5 = +[NSArray arrayWithObjects:v25 count:2];

  uint64_t v6 = +[NSCompoundPredicate andPredicateWithSubpredicates:v5];
  CFStringRef v7 = +[ICFolder ic_objectsMatchingPredicate:v6 context:*(void *)(a1 + 32)];

  uint64_t v8 = os_log_create("com.apple.notes", "LaunchTask");
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG)) {
    sub_1004D5994(v7, v8);
  }

  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v9 = v7;
  id v10 = [v9 countByEnumeratingWithState:&v18 objects:v24 count:16];
  if (v10)
  {
    id v11 = v10;
    uint64_t v12 = *(void *)v19;
    do
    {
      id v13 = 0;
      do
      {
        if (*(void *)v19 != v12) {
          objc_enumerationMutation(v9);
        }
        id v14 = *(void **)(*((void *)&v18 + 1) + 8 * (void)v13);
        long long v15 = os_log_create("com.apple.notes", "Cloud");
        if (os_log_type_enabled(v15, OS_LOG_TYPE_DEBUG)) {
          sub_1004D591C(v22, v14, &v23, v15);
        }

        [v14 resetToIntrinsicNotesVersionAndPropagateToChildObjects];
        id v13 = (char *)v13 + 1;
      }
      while (v11 != v13);
      id v11 = [v9 countByEnumeratingWithState:&v18 objects:v24 count:16];
    }
    while (v11);
  }

  long long v16 = os_log_create("com.apple.notes", "LaunchTask");
  if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)long long v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_INFO, "Completed fixing minimum supported version for shared folders", v17, 2u);
  }
}

BOOL sub_100073EDC(void *a1)
{
  id v1 = a1;
  objc_opt_class();
  uint64_t v2 = ICCheckedDynamicCast();

  if (v2)
  {
    objc_opt_class();
    id v3 = [v2 store];
    id v4 = ICCheckedDynamicCast();

    if (v4)
    {
      objc_opt_class();
      id v5 = [v4 account];
      uint64_t v6 = ICCheckedDynamicCast();

      if (v6) {
        BOOL v7 = [v6 accountType] == (id)2;
      }
      else {
        BOOL v7 = 0;
      }
    }
    else
    {
      BOOL v7 = 0;
    }
  }
  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

uint64_t sub_100073FE8(void *a1)
{
  id v1 = a1;
  objc_opt_class();
  uint64_t v2 = ICCheckedDynamicCast();

  if (v2)
  {
    objc_opt_class();
    id v3 = [v2 store];
    id v4 = ICCheckedDynamicCast();

    if (v4)
    {
      id v5 = [v4 externalIdentifier];
      uint64_t v6 = [v5 isEqualToString:kLocalStoreIdentifier] ^ 1;
    }
    else
    {
      uint64_t v6 = 0;
    }
  }
  else
  {
    uint64_t v6 = 0;
  }

  return v6;
}

id sub_1000740BC(void *a1, int a2)
{
  id v3 = a1;
  id v4 = +[XMLStringSimplifier simplifiedStringFromString:v3 isXML:a2 ^ 1u];
  id v5 = v4;
  if (!v4) {
    id v4 = v3;
  }
  uint64_t v6 = sub_100074140(v4);

  return v6;
}

id sub_100074140(void *a1)
{
  id v1 = [a1 dataUsingEncoding:4];
  [v1 bytes];
  [v1 length];
  CCDigest();
  uint64_t v2 = +[NSData dataWithBytes:v4 length:20];

  return v2;
}

void sub_1000741FC(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  id v5 = objc_alloc_init((Class)NSMutableDictionary);
  uint64_t v6 = +[NSMutableSet set];
  BOOL v7 = [v3 contentHash];

  if (v7)
  {
    uint64_t v8 = [v3 contentHash];
    [v5 setObject:v8 forKeyedSubscript:@"sha1"];

    [v6 addObject:@"sha1"];
    BOOL v9 = 0;
  }
  else
  {
    long long v22 = [v3 noteID];
    v23[0] = _NSConcreteStackBlock;
    v23[1] = 3221225472;
    v23[2] = sub_1000744D0;
    v23[3] = &unk_100626C60;
    id v10 = v5;
    id v24 = v10;
    id v11 = objc_retainBlock(v23);
    uint64_t v12 = [v3 modificationDate];
    id v13 = +[NSDate ic_modificationDateForNoteBeingEdited];
    unsigned int v14 = [v12 isEqual:v13];

    if (v14)
    {
      uint64_t v15 = +[NSDate date];

      uint64_t v12 = (void *)v15;
    }
    ((void (*)(void *, void *, const __CFString *))v11[2])(v11, v12, @"m");
    id v16 = [v22 length];
    BOOL v9 = v16 != 0;
    if (v16)
    {
      CFStringRef v17 = @"uuid";
      [v10 setObject:v22 forKeyedSubscript:@"uuid"];
    }
    else
    {
      long long v21 = [v3 creationDate];
      CFStringRef v17 = @"c";
      ((void (*)(void *, void *, const __CFString *))v11[2])(v11, v21, @"c");
    }
    [v6 addObject:v17];
  }
  if ([v3 isEditing]) {
    [v5 setObject:&__kCFBooleanTrue forKeyedSubscript:@"e"];
  }
  [v4 setUserInfo:v5];
  long long v18 = [v3 title];
  long long v19 = [v18 localizeForLanguage:0];
  [v4 setTitle:v19];

  id v20 = [v6 copy];
  [v4 setRequiredUserInfoKeys:v20];

  [v4 _setEligibleForPrediction:v9];
}

void sub_1000744D0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  [a2 timeIntervalSinceReferenceDate];
  +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
  id v6 = (id)objc_claimAutoreleasedReturnValue();
  [*(id *)(a1 + 32) setObject:v6 forKeyedSubscript:v5];
}

id sub_100074554(void *a1, void *a2, uint64_t a3)
{
  id v5 = a1;
  id v6 = a2;
  v60[0] = _NSConcreteStackBlock;
  v60[1] = 3221225472;
  void v60[2] = sub_100074B64;
  v60[3] = &unk_100626C88;
  uint64_t v62 = a3;
  id v7 = v5;
  id v61 = v7;
  uint64_t v8 = objc_retainBlock(v60);
  BOOL v9 = [v7 userInfo];
  id v10 = [v9 objectForKeyedSubscript:@"sha1"];

  if (v10)
  {
    id v11 = [v7 title];
    uint64_t v12 = +[NSPredicate predicateWithFormat:@"title == %@", v11];
    id v13 = [v6 allVisibleNotesMatchingPredicate:v12 sorted:1];
    if (v13)
    {
      id v48 = v11;
      id v49 = v6;
      id v52 = v8;
      id v54 = v7;
      id v51 = v9;
      unsigned int v14 = [v9 objectForKeyedSubscript:@"sha1"];
      long long v56 = 0u;
      long long v57 = 0u;
      long long v58 = 0u;
      long long v59 = 0u;
      id v15 = v13;
      id v16 = [v15 countByEnumeratingWithState:&v56 objects:v65 count:16];
      if (v16)
      {
        id v17 = v16;
        uint64_t v18 = *(void *)v57;
LABEL_5:
        uint64_t v19 = 0;
        while (1)
        {
          if (*(void *)v57 != v18) {
            objc_enumerationMutation(v15);
          }
          id v20 = *(void **)(*((void *)&v56 + 1) + 8 * v19);
          long long v21 = [v20 content];
          long long v22 = sub_1000740BC(v21, (int)[v20 isPlainText]);

          if ([v22 isEqual:v14]) {
            break;
          }

          if (v17 == (id)++v19)
          {
            id v17 = [v15 countByEnumeratingWithState:&v56 objects:v65 count:16];
            if (v17) {
              goto LABEL_5;
            }
            goto LABEL_11;
          }
        }
        double v64 = v20;
        long long v31 = +[NSArray arrayWithObjects:&v64 count:1];

        if (v31) {
          goto LABEL_17;
        }
      }
      else
      {
LABEL_11:
      }
      long long v31 = &__NSArray0__struct;
LABEL_17:

      id v6 = v49;
      BOOL v9 = v51;
      uint64_t v8 = v52;
      id v7 = v54;
      id v11 = v48;
    }
    else
    {
      long long v31 = 0;
    }

    goto LABEL_20;
  }
  uint64_t v23 = [v7 userInfo];
  id v24 = [v23 objectForKeyedSubscript:@"m"];

  if (!v24)
  {
    ((void (*)(void *, const __CFString *, uint64_t))v8[2])(v8, @"missing modification date", 201);
    long long v31 = 0;
    goto LABEL_38;
  }
  unsigned int v53 = v8;
  [v24 doubleValue];
  id v26 = +[NSDate dateWithTimeIntervalSinceReferenceDate:floor(v25)];
  id v27 = +[NSPredicate predicateWithFormat:@"modificationDate >= %@", v26];
  uint64_t v28 = [v7 userInfo];
  id v29 = [v28 objectForKeyedSubscript:@"uuid"];

  id v55 = v7;
  if ([v29 length])
  {
    uint64_t v50 = v26;
    id v30 = +[NSPredicate predicateWithFormat:@"guid == %@", v29];
LABEL_29:
    v63[0] = v30;
    v63[1] = v27;
    id v40 = +[NSArray arrayWithObjects:v63 count:2];
    id v41 = +[NSCompoundPredicate andPredicateWithSubpredicates:v40];

    int v42 = 1;
    long long v31 = [v6 allVisibleNotesMatchingPredicate:v41 sorted:1];
    if ((unint64_t)[v31 count] < 2)
    {
      uint64_t v8 = v53;
    }
    else
    {
      id v43 = [v55 title];
      char v44 = +[NSPredicate predicateWithFormat:@"title == %@", v43];
      unsigned __int8 v45 = [v31 filteredArrayUsingPredicate:v44];

      if ([v45 count])
      {
        id v46 = v45;

        long long v31 = v46;
      }
      uint64_t v8 = v53;

      int v42 = 1;
    }
    id v26 = v50;
    goto LABEL_35;
  }
  long long v35 = [v7 userInfo];
  long long v31 = [v35 objectForKeyedSubscript:@"c"];

  if (v31)
  {
    uint64_t v50 = v26;
    [v31 doubleValue];
    id v37 = +[NSDate dateWithTimeIntervalSinceReferenceDate:floor(v36)];
    [v31 doubleValue];
    id v39 = +[NSDate dateWithTimeIntervalSinceReferenceDate:floor(v38 + 1.0)];
    id v30 = +[NSPredicate predicateWithFormat:@"creationDate >= %@ && creationDate < %@", v37, v39];

    goto LABEL_29;
  }
  ((void (*)(void *, const __CFString *, uint64_t))v8[2])(v8, @"missing uuid and creation date", 201);
  id v41 = 0;
  int v42 = 0;
LABEL_35:

  if (v42)
  {
    id v7 = v55;
LABEL_20:
    if ([v31 count])
    {
      id v24 = [v31 lastObject];
    }
    else
    {
      if (v31)
      {
        CFStringRef v32 = @"No note matching criteria";
        id v33 = v8;
        uint64_t v34 = 200;
      }
      else
      {
        CFStringRef v32 = @"Error while fetching";
        id v33 = v8;
        uint64_t v34 = 201;
      }
      ((void (*)(void *, const __CFString *, uint64_t))v8[2])(v33, v32, v34);
      id v24 = 0;
    }
    goto LABEL_38;
  }
  id v24 = 0;
  id v7 = v55;
LABEL_38:

  return v24;
}

void sub_100074B64(uint64_t a1, void *a2, uint64_t a3)
{
  if (*(void *)(a1 + 40))
  {
    uint64_t v5 = NotesErrorDomain;
    uint64_t v14 = NotesErrorFailureReasonKey;
    id v6 = *(void **)(a1 + 32);
    id v7 = a2;
    uint64_t v8 = [v6 userInfo];
    uint64_t v9 = [v8 description];
    id v10 = (void *)v9;
    CFStringRef v11 = &stru_10063F3D8;
    if (v7) {
      CFStringRef v11 = v7;
    }
    uint64_t v12 = +[NSString stringWithFormat:@"Can't find note with userInfo: %@, %@", v9, v11];

    id v15 = v12;
    id v13 = +[NSDictionary dictionaryWithObjects:&v15 forKeys:&v14 count:1];
    **(void **)(a1 + 40) = +[NSError errorWithDomain:v5 code:a3 userInfo:v13];
  }
}

id sub_100074D48(uint64_t a1)
{
  +[ICNoteContext markOldTrashedNotesForDeletionInContext:*(void *)(a1 + 32)];
  uint64_t v2 = *(void **)(a1 + 32);

  return [v2 ic_save];
}

void sub_100076C48(uint64_t a1)
{
  [*(id *)(a1 + 32) activityDidFinish:1];
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2)
  {
    id v3 = [*(id *)(a1 + 32) activityType];
    (*(void (**)(uint64_t, uint64_t, id))(v2 + 16))(v2, 1, v3);
  }
}

id sub_100076EA4(void *a1, uint64_t a2)
{
  if (a1[4] != a2) {
    +[ICFolderCustomNoteSortType setQuerySortType:a2];
  }
  id v3 = (void *)a1[5];
  uint64_t v4 = a1[6];

  return [v3 performActivityWithCompletion:v4];
}

void sub_100077788(uint64_t a1)
{
  uint64_t v2 = +[ICNoteContext sharedContext];
  id v3 = [v2 workerManagedObjectContext];

  uint64_t v4 = [[ICServerSideUpdateTaskController alloc] initWithWorkerContext:v3];
  [*(id *)(a1 + 32) setServerSideUpgradeTaskController:v4];

  uint64_t v5 = [*(id *)(a1 + 32) serverSideUpgradeTaskController];
  v26[0] = _NSConcreteStackBlock;
  v26[1] = 3221225472;
  v26[2] = sub_100077AF8;
  void v26[3] = &unk_100625AF0;
  void v26[4] = *(void *)(a1 + 32);
  [v5 runServerSideTasksIfNeeded:v26];

  id v6 = [*(id *)(a1 + 32) cloudContextDelegate];
  [v6 fixGallerySubAttachmentsIfNecessary];

  id v7 = +[ICAttachmentPreviewGenerator sharedGenerator];
  [v7 generatePreviewsIfNeeded];

  uint64_t v8 = +[ICAttachmentPreviewGenerator sharedGenerator];
  [v8 generateMissingOrOutdatedAttachmentMetaDataIfNeededInContext:v3];

  +[ICQuickNoteSessionSettings disableNotesOnLockScreenIfNecessary];
  +[UIApplication sharedApplication];
  v23[0] = _NSConcreteStackBlock;
  v23[1] = 3221225472;
  v23[2] = sub_100077B04;
  v23[3] = &unk_100626E00;
  id v9 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v10 = *(void *)(a1 + 32);
  id v24 = v9;
  uint64_t v25 = v10;
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 3221225472;
  v21[2] = sub_100077C4C;
  v21[3] = &unk_100626E00;
  void v21[4] = v10;
  id v11 = v9;
  id v22 = v11;
  +[ICDatabaseVacuum startDatabaseVacuumPolicyWithPreVacuumHandler:v23 postVacuumHandler:v21];
  uint64_t v12 = +[ICDrawingPencilKitConverter sharedConverter];
  [v12 convertAllDrawingsIfNeeded];

  [*(id *)(a1 + 32) cleanUpTemporaryFiles];
  id v13 = objc_alloc((Class)ICParticipantUpdater);
  uint64_t v14 = +[ICNoteContext sharedContext];
  id v15 = [v14 workerManagedObjectContext];
  id v16 = [v13 initWithManagedObjectContext:v15];

  [v16 updateWithCompletion:0];
  id v17 = +[NSUserDefaults standardUserDefaults];
  LODWORD(v15) = [v17 BOOLForKey:kICInternalSettingsLogStateOnLaunchDefaultsKey];

  if (v15)
  {
    uint64_t v18 = os_log_create("com.apple.notes", "Application");
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
      sub_1004D5BDC(v18);
    }
  }
  uint64_t v19 = +[ICApplicationTestingHelper sharedHelper];
  [v19 didFinishPostLaunchTasks];

  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472;
  v20[2] = sub_100077CF8;
  v20[3] = &unk_100625AF0;
  void v20[4] = *(void *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v20);
}

id sub_100077AF8(uint64_t a1)
{
  return [*(id *)(a1 + 32) setServerSideUpgradeTaskController:0];
}

void sub_100077B04(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [v3 UUIDString];
  id v7 = +[NSString stringWithFormat:@"Database Vacuum %@", v4];

  uint64_t v5 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [*(id *)(a1 + 32) beginBackgroundTaskWithName:v7 expirationHandler:&stru_100626DD8]);
  id v6 = [*(id *)(a1 + 40) backgroundTasks];
  [v6 setObject:v5 forKeyedSubscript:v3];
}

void sub_100077BD8(id a1)
{
  id v1 = os_log_create("com.apple.notes", "Application");
  if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)uint64_t v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_INFO, "Database vacuum took too long when moving to the background", v2, 2u);
  }
}

void sub_100077C4C(uint64_t a1, void *a2)
{
  id v6 = a2;
  id v3 = [*(id *)(a1 + 32) backgroundTasks];
  uint64_t v4 = [v3 objectForKeyedSubscript:v6];

  if (v4)
  {
    [*(id *)(a1 + 40) endBackgroundTask:[v4 unsignedIntegerValue]];
    uint64_t v5 = [*(id *)(a1 + 32) backgroundTasks];
    [v5 removeObjectForKey:v6];
  }
}

void sub_100077CF8(uint64_t a1)
{
  uint64_t v2 = +[UIApplication sharedApplication];
  id v5 = [v2 connectedScenes];

  id v3 = [v5 ic_objectOfClass:objc_opt_class()];
  [*(id *)(a1 + 32) setUpAppStoreRatingObserverWithWindowScene:v3];
  uint64_t v4 = +[NSNotificationCenter defaultCenter];
  [v4 postNotificationName:@"ICAppDelegateDidRunDelayedLaunchTasks" object:*(void *)(a1 + 32)];
}

void sub_100077DB8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained && !WeakRetained[19])
  {
    uint64_t v2 = WeakRetained;
    [WeakRetained runDelayedLaunchTasks];
    id WeakRetained = v2;
  }
}

id sub_100077E0C(uint64_t a1, void *a2)
{
  return [a2 handleDarwinNotificationName:];
}

void sub_100077E14(uint64_t a1)
{
  id v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  unsigned __int8 v3 = [WeakRetained requestedAuthorizationToShowUserNotifications];

  if ((v3 & 1) == 0)
  {
    uint64_t v4 = +[ICCloudConfiguration sharedConfiguration];
    unsigned int v5 = [v4 requestUserNotificationAuthorizationAtLaunch];

    if (v5)
    {
      v9[1] = _NSConcreteStackBlock;
      v9[2] = (id)3221225472;
      v9[3] = sub_100077F74;
      v9[4] = &unk_100625938;
      id v6 = &v10;
      objc_copyWeak(&v10, v1);
      performBlockOnMainThread();
    }
    else
    {
      id v7 = objc_loadWeakRetained(v1);
      v8[0] = _NSConcreteStackBlock;
      v8[1] = 3221225472;
      v8[2] = sub_100077FDC;
      v8[3] = &unk_100626768;
      id v6 = v9;
      objc_copyWeak(v9, v1);
      [v7 checkIfHasSharedNotesOrFolders:v8];
    }
    objc_destroyWeak(v6);
  }
}

void sub_100077F5C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100077F74(uint64_t a1)
{
  uint64_t v2 = os_log_create("com.apple.notes", "Notifications");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    sub_1004D5C78();
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained requestAuthorizationToShowUserNotificationsIfNecessary];
}

void sub_100077FDC(uint64_t a1, int a2)
{
  if (a2)
  {
    objc_copyWeak(&v2, (id *)(a1 + 32));
    performBlockOnMainThread();
    objc_destroyWeak(&v2);
  }
}

void sub_100078068(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10007807C(uint64_t a1)
{
  id v2 = os_log_create("com.apple.notes", "Notifications");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    sub_1004D5CAC();
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained requestAuthorizationToShowUserNotificationsIfNecessary];
}

void sub_10007850C(id a1)
{
  id v1 = os_log_create("com.apple.notes", "Application");
  if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_INFO, "Timed out waiting for removeAllCloudSyncingObjectActivityEventsForUnsharedObjectsInContext in background", v2, 2u);
  }
}

void sub_100078D94(id a1)
{
  id v1 = os_log_create("com.apple.notes", "SearchIndexer");
  if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)unsigned __int8 v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_INFO, "Took too long to finish indexing when moving to the background", v3, 2u);
  }

  id v2 = +[ICSearchIndexer sharedIndexer];
  [v2 cancelIndexingOperationsWithCompletionHandler:0];
}

void sub_100078E28(id a1)
{
  id v1 = os_log_create("com.apple.notes", "Application");
  if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_INFO, "Took too long to save when moving to the background", v2, 2u);
  }
}

id sub_100078E9C(uint64_t a1)
{
  return [*(id *)(a1 + 32) endBackgroundTask:*(void *)(a1 + 40)];
}

id sub_100078EA8(uint64_t a1)
{
  id v2 = os_log_create("com.apple.notes", "Crypto");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    sub_1004D5CE0();
  }

  return [*(id *)(a1 + 32) lockAllNotes];
}

void sub_100079014(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Block_object_dispose((const void *)(v9 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_100079044(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) windows];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [v2 ic_containsObjectPassingTest:&stru_100626EE8];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = [v2 ic_containsObjectPassingTest:&stru_100626F08];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = [v2 ic_containsObjectPassingTest:&stru_100626F28];
}

BOOL sub_1000790E0(id a1, UIWindow *a2, unint64_t a3, BOOL *a4)
{
  uint64_t v4 = [(UIWindow *)a2 ic_viewControllerManager];
  unsigned int v5 = [v4 currentAttachmentPresenter];
  BOOL v6 = v5 != 0;

  return v6;
}

BOOL sub_100079128(id a1, UIWindow *a2, unint64_t a3, BOOL *a4)
{
  uint64_t v4 = [(UIWindow *)a2 ic_viewControllerManager];
  unsigned int v5 = [v4 currentAttachmentPresenter];
  BOOL v6 = [v5 galleryAttachmentEditorController];
  id v7 = [v6 extractedDocumentController];
  BOOL v8 = v7 != 0;

  return v8;
}

BOOL sub_100079198(id a1, UIWindow *a2, unint64_t a3, BOOL *a4)
{
  uint64_t v4 = [(UIWindow *)a2 ic_viewControllerManager];
  unsigned int v5 = [v4 window];
  BOOL v6 = [v5 ic_topmostPresentedViewController];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  return isKindOfClass & 1;
}

id sub_1000793C8(uint64_t a1)
{
  id v2 = +[UIApplication sharedApplication];
  [v2 endBackgroundTask:[*(id *)(a1 + 32) delayedLockProtectedNotesTask]];

  unsigned __int8 v3 = *(void **)(a1 + 32);

  return [v3 setDelayedLockProtectedNotesTask:UIBackgroundTaskInvalid];
}

NSArray *__cdecl sub_1000795D8(id a1, NSArray *a2)
{
  id v2 = a2;
  id v3 = [(NSArray *)v2 indexOfObjectPassingTest:&stru_100626FD0];
  if (v3 == (id)0x7FFFFFFFFFFFFFFFLL)
  {
    uint64_t v4 = v2;
  }
  else
  {
    unsigned int v5 = [(NSArray *)v2 objectAtIndexedSubscript:v3];
    BOOL v8 = v5;
    BOOL v6 = +[NSArray arrayWithObjects:&v8 count:1];
    uint64_t v4 = [(NSArray *)v2 arrayByExcludingObjectsInArray:v6];
  }

  return v4;
}

BOOL sub_1000796C4(id a1, UIMenuElement *a2, unint64_t a3, BOOL *a4)
{
  unsigned int v5 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 && [(UIMenuElement *)v5 action] == "findAndReplace:")
  {
    BOOL v6 = 1;
    *a4 = 1;
  }
  else
  {
    BOOL v6 = 0;
  }

  return v6;
}

void sub_100079A64(uint64_t a1, void *a2)
{
  id v3 = a2;
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100079BA0(id a1)
{
  id v1 = os_log_create("com.apple.notes", "Application");
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEBUG)) {
    sub_1004D5E34();
  }

  id v2 = +[UIApplication sharedApplication];
  [v2 registerForRemoteNotifications];
}

void sub_100079F94(uint64_t a1)
{
  objc_opt_class();
  id v2 = [*(id *)(a1 + 32) object];
  id v3 = ICDynamicCast();

  if (!v3) {
    +[ICAssert handleFailedAssertWithCondition:functionName:simulateCrash:showAlert:format:](ICAssert, "handleFailedAssertWithCondition:functionName:simulateCrash:showAlert:format:", "uuid", "-[ICAppDelegate mentionNotificationWillSend:]_block_invoke", 1, 0, @"Notification did not contain a mention UUID");
  }
  uint64_t v4 = [*(id *)(a1 + 40) backgroundTasks];
  unsigned int v5 = [v4 objectForKeyedSubscript:v3];

  if (v5) {
    +[ICAssert handleFailedAssertWithCondition:functionName:simulateCrash:showAlert:format:](ICAssert, "handleFailedAssertWithCondition:functionName:simulateCrash:showAlert:format:", "self.backgroundTasks[uuid] == ((void *)0)", "-[ICAppDelegate mentionNotificationWillSend:]_block_invoke", 1, 0, @"A mention notification (%@) was sent while previous one inflight", v3);
  }
  BOOL v6 = +[UIApplication sharedApplication];
  id v7 = +[NSString stringWithFormat:@"MentionNotificationTask-%@", v3];
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  void v13[2] = sub_10007A1AC;
  v13[3] = &unk_100625AF0;
  id v8 = v3;
  id v14 = v8;
  id v9 = [v6 beginBackgroundTaskWithName:v7 expirationHandler:v13];

  id v10 = os_log_create("com.apple.notes", "Mentions");
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG)) {
    sub_1004D5ED0();
  }

  id v11 = +[NSNumber numberWithUnsignedInteger:v9];
  uint64_t v12 = [*(id *)(a1 + 40) backgroundTasks];
  [v12 setObject:v11 forKeyedSubscript:v8];
}

void sub_10007A1AC(uint64_t a1)
{
  id v2 = os_log_create("com.apple.notes", "Mentions");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
    sub_1004D5F38(a1, v2);
  }
}

void sub_10007A29C(uint64_t a1)
{
  objc_opt_class();
  id v2 = [*(id *)(a1 + 32) object];
  id v3 = ICDynamicCast();

  if (!v3) {
    +[ICAssert handleFailedAssertWithCondition:functionName:simulateCrash:showAlert:format:](ICAssert, "handleFailedAssertWithCondition:functionName:simulateCrash:showAlert:format:", "uuid", "-[ICAppDelegate mentionNotificationDidSend:]_block_invoke", 1, 0, @"Notification did not contain a mention UUID");
  }
  objc_opt_class();
  uint64_t v4 = [*(id *)(a1 + 40) backgroundTasks];
  unsigned int v5 = [v4 objectForKeyedSubscript:v3];
  BOOL v6 = ICDynamicCast();

  if (v6)
  {
    id v7 = +[UIApplication sharedApplication];
    [v7 endBackgroundTask:[v6 unsignedIntegerValue]];

    id v8 = [*(id *)(a1 + 40) backgroundTasks];
    [v8 removeObjectForKey:v3];

    id v9 = os_log_create("com.apple.notes", "Mentions");
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG)) {
      sub_1004D6028();
    }
  }
  else
  {
    id v9 = os_log_create("com.apple.notes", "Mentions");
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_1004D5FB4();
    }
  }
}

void sub_10007A594(id a1)
{
  id v1 = os_log_create("com.apple.notes", "Application");
  if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_INFO, "Timed out waiting for database-locking operation to finish", v2, 2u);
  }
}

void sub_10007A9A8(uint64_t a1)
{
  id v2 = os_log_create("com.apple.notes", "Application");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id v3 = [*(id *)(a1 + 32) name];
    int v4 = 138412290;
    unsigned int v5 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Timed out waiting for context %@ to save in background", (uint8_t *)&v4, 0xCu);
  }
}

void sub_10007ABBC(uint64_t a1)
{
  id v2 = os_log_create("com.apple.notes", "Application");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v4 = 134217984;
    uint64_t v5 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Timed out waiting for note context %p to set up Core Data stack", (uint8_t *)&v4, 0xCu);
  }
}

BOOL sub_10007AF68(id a1, ICAttachment *a2, unint64_t a3, BOOL *a4)
{
  int v4 = [(ICAttachment *)a2 note];
  uint64_t v5 = [v4 account];
  BOOL v6 = v5 == 0;

  return v6;
}

void sub_10007B24C(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = os_log_create("com.apple.notes", "Analytics");
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG)) {
    sub_1004D61B8(a1, v4);
  }

  uint64_t v5 = +[ICAccount cloudKitAccountInContext:v3];
  if (*(uint64_t *)(a1 + 40) >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      [*(id *)(a1 + 32) submitChangePasswordEventForModernAccount:v5 isReset:*(unsigned __int8 *)(a1 + 48)];
      ++v6;
    }
    while (v6 < *(void *)(a1 + 40));
  }
  +[ICInstrumentationUtilities clearRecentPasswordChangeCountAsReset:*(unsigned __int8 *)(a1 + 48)];
}

void sub_10007B3C0(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = +[UIApplication sharedApplication];
  id v18 = [v4 beginBackgroundTaskWithName:@"Submit Password Change Mode Event" expirationHandler:&stru_1006270C0];

  long long v26 = 0u;
  long long v27 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  uint64_t v19 = v3;
  id obj = +[ICAccount allActiveAccountsInContext:v3];
  id v22 = [obj countByEnumeratingWithState:&v24 objects:v32 count:16];
  if (v22)
  {
    uint64_t v21 = *(void *)v25;
    do
    {
      for (unint64_t i = 0; i != v22; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v25 != v21) {
          objc_enumerationMutation(obj);
        }
        uint64_t v6 = *(void **)(*((void *)&v24 + 1) + 8 * i);
        id v7 = +[ICInstrumentationUtilities recentPasswordModesForAccount:v6];
        id v8 = objc_alloc_init((Class)ICInstrumentationUtilitiesRecentPasswordMode);
        id v9 = [v6 accountData];
        [v8 setLockedNotesMode:[v9 lockedNotesMode]];

        uint64_t v23 = v8;
        id v10 = [v7 arrayByAddingObject:v8];

        if ((unint64_t)[v10 count] >= 2)
        {
          unint64_t v11 = 1;
          do
          {
            uint64_t v12 = [v10 objectAtIndexedSubscript:v11 - 1];
            id v13 = [v10 objectAtIndexedSubscript:v11];
            id v14 = os_log_create("com.apple.notes", "Analytics");
            if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG))
            {
              [v12 lockedNotesMode];
              id v15 = NSStringFromAccountDataLockedNotesMode();
              [v13 lockedNotesMode];
              id v16 = NSStringFromAccountDataLockedNotesMode();
              *(_DWORD *)buf = 138412546;
              id v29 = v15;
              __int16 v30 = 2112;
              long long v31 = v16;
              _os_log_debug_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "Instrumenting password mode change from mode %@ to mode %@", buf, 0x16u);
            }
            [*(id *)(a1 + 32) submitChangePasswordModeEventForAccount:v6 contextPath:[v12 contextPath] fromMode:[v12 lockedNotesMode] toMode:[v13 lockedNotesMode]];

            ++v11;
          }
          while (v11 < (unint64_t)[v10 count]);
        }
        +[ICInstrumentationUtilities clearRecentPasswordModesForAccount:v6];
      }
      id v22 = [obj countByEnumeratingWithState:&v24 objects:v32 count:16];
    }
    while (v22);
  }

  id v17 = +[UIApplication sharedApplication];
  [v17 endBackgroundTask:v18];
}

void sub_10007B704(id a1)
{
  id v1 = os_log_create("com.apple.notes", "Application");
  if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_INFO, "Timed out waiting for sumbit password change to finish", v2, 2u);
  }
}

id sub_10007BA6C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2) {
    (*(void (**)(void))(v2 + 16))();
  }
  id v3 = *(void **)(a1 + 32);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  id v5[2] = sub_10007BAFC;
  v5[3] = &unk_100626580;
  v5[4] = v3;
  return [v3 checkIfHasSharedNotesOrFolders:v5];
}

uint64_t sub_10007BAFC(uint64_t a1, int a2)
{
  if (a2) {
    return performBlockOnMainThread();
  }
  return result;
}

id sub_10007BB74(uint64_t a1)
{
  uint64_t v2 = os_log_create("com.apple.notes", "Notifications");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    sub_1004D6234();
  }

  return [*(id *)(a1 + 32) requestAuthorizationToShowUserNotificationsIfNecessary];
}

void sub_10007BBE8(uint64_t a1)
{
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  uint64_t v2 = [*(id *)(a1 + 32) viewControllerManagers];
  id v3 = [v2 countByEnumeratingWithState:&v18 objects:v22 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v19;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v19 != v5) {
          objc_enumerationMutation(v2);
        }
        id v7 = *(void **)(*((void *)&v18 + 1) + 8 * (void)v6);
        id v8 = os_log_create("com.apple.notes", "UI");
        if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG)) {
          sub_1004D6268(&buf, v17, v8);
        }

        id v9 = [v7 noteEditorViewController];
        [v9 setNote:0];

        uint64_t v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v18 objects:v22 count:16];
    }
    while (v4);
  }

  id v10 = objc_alloc_init(ICDebugSpinner);
  [(ICDebugSpinner *)v10 show];
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  void v13[2] = sub_10007BDDC;
  v13[3] = &unk_100625860;
  uint64_t v11 = *(void *)(a1 + 32);
  id v14 = v10;
  uint64_t v15 = v11;
  uint64_t v12 = v10;
  +[ICDebugUtilities startFreshWithCompletionHandler:v13];
}

id sub_10007BDDC(uint64_t a1)
{
  [*(id *)(a1 + 32) hide];
  uint64_t v2 = *(void **)(a1 + 40);

  return [v2 showStartupWithCompletionBlock:0];
}

void sub_10007C378(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_10007C394(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained requestAuthorizationToShowUserNotificationsIfNecessary];
}

void sub_10007C4A4(uint64_t a1)
{
  +[ICCloudSyncingObject hasAnySharedObjectInContext:*(void *)(a1 + 32)];
  id v2 = *(id *)(a1 + 40);
  performBlockOnMainThread();
}

uint64_t sub_10007C544(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, *(unsigned __int8 *)(a1 + 40));
  }
  return result;
}

uint64_t sub_10007CB24()
{
  return performBlockOnMainThread();
}

void *sub_10007CB94(void *result)
{
  uint64_t v1 = result[5];
  if (v1 != 1)
  {
    if (v1)
    {
      return +[ICCloudNotificationsController registerForUserNotificationsWithCompletionHandler:0];
    }
    else
    {
      id v2 = (void *)result[4];
      v3[0] = _NSConcreteStackBlock;
      v3[1] = 3221225472;
      _DWORD v3[2] = sub_10007CC3C;
      v3[3] = &unk_100625AF0;
      v3[4] = v2;
      return [v2 showAllowNotificationsWarmingSheet:v3];
    }
  }
  return result;
}

id sub_10007CC3C(uint64_t a1)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_10007CCB8;
  v2[3] = &unk_100625AF0;
  void v2[4] = *(void *)(a1 + 32);
  return +[ICCloudNotificationsController registerForUserNotificationsWithCompletionHandler:v2];
}

uint64_t sub_10007CCB8()
{
  return performBlockOnMainThread();
}

id sub_10007CD28(uint64_t a1)
{
  [*(id *)(a1 + 32) dismissAllowNotificationsWarmingSheet];
  id v2 = *(void **)(a1 + 32);

  return [v2 setUserNotificationsAllowed:0];
}

void sub_10007CE6C(uint64_t a1, void *a2)
{
  id v3 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [a2 authorizationStatus]);
  [*(id *)(a1 + 32) setUserNotificationsAllowed:v3];

  id v4 = *(id *)(a1 + 40);
  performBlockOnMainThread();
}

uint64_t sub_10007CF30(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, *(void *)(a1 + 40));
  }
  return result;
}

void sub_10007D7E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10007D7F8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10007D808(uint64_t a1)
{
}

uint64_t sub_10007D810(uint64_t a1)
{
  id v2 = +[NSNotificationCenter defaultCenter];
  [v2 removeObserver:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)];

  uint64_t result = *(void *)(a1 + 32);
  if (result)
  {
    id v4 = *(uint64_t (**)(void))(result + 16);
    return v4();
  }
  return result;
}

void sub_10007DAB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10007DAEC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v8 = WeakRetained;
    id v2 = [WeakRetained tagSelection];
    id v3 = [v2 tagOperator];

    id WeakRetained = v8;
    if (v3 != (id)2)
    {
      id v4 = [v8 tagSelection];
      [v4 setTagOperator:2];

      uint64_t v5 = [v8 tagSelectionDidChange];

      id WeakRetained = v8;
      if (v5)
      {
        uint64_t v6 = [v8 tagSelectionDidChange];
        id v7 = [v8 tagSelection];
        ((void (**)(void, void *))v6)[2](v6, v7);

        id WeakRetained = v8;
      }
    }
  }
}

void sub_10007DBCC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v8 = WeakRetained;
    id v2 = [WeakRetained tagSelection];
    id v3 = [v2 tagOperator];

    id WeakRetained = v8;
    if (v3 != (id)1)
    {
      id v4 = [v8 tagSelection];
      [v4 setTagOperator:1];

      uint64_t v5 = [v8 tagSelectionDidChange];

      id WeakRetained = v8;
      if (v5)
      {
        uint64_t v6 = [v8 tagSelectionDidChange];
        id v7 = [v8 tagSelection];
        ((void (**)(void, void *))v6)[2](v6, v7);

        id WeakRetained = v8;
      }
    }
  }
}

void sub_10007E12C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) upgradeButtonTapHandler];

  if (v2)
  {
    uint64_t v5 = [*(id *)(a1 + 32) upgradeButtonTapHandler];
    id v3 = [*(id *)(a1 + 32) folderListSectionIdentifier];
    id v4 = [v3 accountObjectID];
    v5[2](v5, v4);
  }
}

id sub_10007E1D8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 40) copy];
  [*(id *)(a1 + 32) setAccessories:v2];

  id v3 = *(void **)(a1 + 32);

  return [v3 layoutIfNeeded];
}

id sub_10007EE28(uint64_t a1, void *a2)
{
  id v3 = [a2 mutableCopy];
  [v3 setObject:*(void *)(a1 + 32) forKeyedSubscript:NSFontAttributeName];
  id v4 = [v3 copy];

  return v4;
}

void sub_10007FA08(id a1)
{
  uint64_t v1 = -[ICRecentlyDeletedHeaderView initWithFrame:]([ICRecentlyDeletedHeaderView alloc], "initWithFrame:", CGRectZero.origin.x, CGRectZero.origin.y, CGRectZero.size.width, CGRectZero.size.height);
  id v2 = (void *)qword_1006AA0F0;
  qword_1006AA0F0 = (uint64_t)v1;
}

ICHashtag *__cdecl sub_1000801D4(id a1, NSManagedObjectID *a2)
{
  id v2 = a2;
  id v3 = +[ICNoteContext sharedContext];
  id v4 = [v3 managedObjectContext];
  uint64_t v5 = [v4 ic_existingObjectWithID:v2];

  return (ICHashtag *)v5;
}

void sub_100080254(uint64_t a1)
{
  [*(id *)(a1 + 32) activityDidFinish:1];
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2)
  {
    id v3 = [*(id *)(a1 + 32) activityType];
    (*(void (**)(uint64_t, uint64_t, id))(v2 + 16))(v2, 1, v3);
  }
}

void sub_100080484(id a1)
{
  uint64_t v1 = os_log_create("com.apple.notes", "LaunchTask");
  if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)uint64_t v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_INFO, "Update Migration States took too long when moving to the background", v2, 2u);
  }
}

id sub_1000804F8()
{
  id v39 = objc_alloc_init(ICRegisterStateHandlersLaunchTask);
  v40[0] = v39;
  double v38 = objc_alloc_init(ICNoteContextLaunchTask);
  v40[1] = v38;
  id v37 = objc_alloc_init(ICFixHiddenICloudAccountLaunchTask);
  v40[2] = v37;
  double v36 = objc_alloc_init(ICUpdateMigrationStatesLaunchTask);
  v40[3] = v36;
  long long v35 = objc_alloc_init(ICExcludeFromBackupFileAttributesLaunchTask);
  v40[4] = v35;
  uint64_t v34 = objc_alloc_init(ICFixNotesWithoutFoldersLaunchTask);
  v40[5] = v34;
  id v33 = objc_alloc_init(ICFixTombstonesWithoutAccountsLaunchTask);
  v40[6] = v33;
  CFStringRef v32 = objc_alloc_init(ICRegenerateGalleryAttachmentNoteTitlesLaunchTask);
  v40[7] = v32;
  long long v31 = objc_alloc_init(ICPutDeletedNotesInTrashLaunchTask);
  v40[8] = v31;
  __int16 v30 = objc_alloc_init(ICDeleteGalleryAttachmentPNGPreviewImagesLaunchTask);
  v40[9] = v30;
  id v29 = objc_alloc_init(ICDeleteMigratedHTMLAccountsLaunchTask);
  v40[10] = v29;
  uint64_t v28 = objc_alloc_init(ICDeleteOrphanedHTMLNotesLaunchTask);
  v40[11] = v28;
  long long v27 = objc_alloc_init(ICResetReplicaIDsAfterBackupRestoreLaunchTask);
  v40[12] = v27;
  long long v26 = objc_alloc_init(ICFixAttachmentMediaInconsistencyLaunchTask);
  v40[13] = v26;
  long long v25 = objc_alloc_init(ICFixPasswordProtectedNotesInSharedFoldersLaunchTask);
  v40[14] = v25;
  long long v24 = objc_alloc_init(ICFixMinimumSupportedVersionForSharedFoldersLaunchTask);
  v40[15] = v24;
  uint64_t v23 = objc_alloc_init(ICMigrateSearchIndexingLaunchTask);
  v40[16] = v23;
  id v22 = objc_alloc_init(ICCheckCoreSpotlightClientStateLaunchTask);
  v40[17] = v22;
  long long v21 = objc_alloc_init(ICReindexEverythingAfterBackupRestoreTask);
  v40[18] = v21;
  long long v20 = objc_alloc_init(ICReindexEverythingIfNecessaryTask);
  v40[19] = v20;
  long long v19 = objc_alloc_init(ICRunMiniDeviceSnapshotLaunchTask);
  v40[20] = v19;
  long long v18 = objc_alloc_init(ICRefreshHashtagStandardizedContentLaunchTask);
  v40[21] = v18;
  id v17 = objc_alloc_init(ICDedupeHashtagsLaunchTask);
  v40[22] = v17;
  id v16 = objc_alloc_init(ICDeleteCoherenceContextsFromGroupContainerLaunchTask);
  v40[23] = v16;
  uint64_t v15 = objc_alloc_init(ICDeleteOrphanedAccountDirectoriesFromAppDataContainerLaunchTask);
  v40[24] = v15;
  id v14 = objc_alloc_init(ICUpdateDerivedChecklistAttributesLaunchTask);
  v40[25] = v14;
  id v13 = objc_alloc_init(ICUpdateInlineDrawingsSectionLaunchTask);
  v40[26] = v13;
  uint64_t v12 = objc_alloc_init(ICUpdatePaperDocumentScansSectionLaunchTask);
  v40[27] = v12;
  unint64_t v0 = objc_alloc_init(ICDonateDynamicAppVocabularyLaunchTask);
  v40[28] = v0;
  uint64_t v1 = objc_alloc_init(ICImportAndDeleteCallRecordingsLaunchTask);
  v40[29] = v1;
  uint64_t v2 = objc_alloc_init(ICUpdateAccountReferenceInAttachmentsAndMediaLaunchTask);
  v40[30] = v2;
  id v3 = objc_alloc_init(ICGenerateWidgetSnippetForFirstTimeLaunchTask);
  v40[31] = v3;
  id v4 = objc_alloc_init(ICFixMissingMediaLaunchTask);
  v40[32] = v4;
  uint64_t v5 = objc_alloc_init(ICFixMissingPaperBundlesLaunchTask);
  v40[33] = v5;
  uint64_t v6 = [[ICRefetchNoteRecordsLaunchTask alloc] initWithIdentifier:@"Fall2024" modifiedAfterDateString:@"2024-06-01T00:00:00+0000"];
  v40[34] = v6;
  id v7 = objc_alloc_init(ICRemoveTemporaryPaperKitBundlesLaunchTask);
  v40[35] = v7;
  id v8 = objc_alloc_init(ICRetranscribeAudioAttachmentsIfNeededLaunchTask);
  v40[36] = v8;
  id v9 = objc_alloc_init(ICRetranscribeAfterVersionIncrementLaunchTask);
  v40[37] = v9;
  id v11 = +[NSArray arrayWithObjects:v40 count:38];

  return v11;
}

void sub_100080A44(uint64_t a1)
{
  uint64_t v2 = +[NSPredicate predicateWithFormat:@"%K == %@", @"typeUTI", ICAttachmentUTTypeGallery];
  +[ICAttachment attachmentsMatchingPredicate:v2 context:*(void *)(a1 + 32)];
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue();
  id v19 = [obj countByEnumeratingWithState:&v24 objects:v31 count:16];
  if (!v19) {
    goto LABEL_25;
  }
  uint64_t v15 = a1;
  id v16 = v2;
  char v3 = 0;
  uint64_t v18 = *(void *)v25;
  do
  {
    for (unint64_t i = 0; i != v19; unint64_t i = (char *)i + 1)
    {
      if (*(void *)v25 != v18) {
        objc_enumerationMutation(obj);
      }
      uint64_t v5 = *(void **)(*((void *)&v24 + 1) + 8 * i);
      if ([v5 hasAnyPNGPreviewImageFiles])
      {
        uint64_t v6 = os_log_create("com.apple.notes", "LaunchTask");
        if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG)) {
          sub_1004D651C((uint64_t)v30, (uint64_t)v5);
        }

        [v5 deleteAttachmentPreviewImages];
        [v5 purgeAttachmentPreviewImages];
        char v3 = 1;
      }
      long long v22 = 0u;
      long long v23 = 0u;
      long long v20 = 0u;
      long long v21 = 0u;
      id v7 = [v5 subAttachments];
      id v8 = [v7 countByEnumeratingWithState:&v20 objects:v29 count:16];
      if (v8)
      {
        id v9 = v8;
        uint64_t v10 = *(void *)v21;
        do
        {
          for (j = 0; j != v9; j = (char *)j + 1)
          {
            if (*(void *)v21 != v10) {
              objc_enumerationMutation(v7);
            }
            uint64_t v12 = *(void **)(*((void *)&v20 + 1) + 8 * (void)j);
            if ([v12 hasAnyPNGPreviewImageFiles])
            {
              id v13 = os_log_create("com.apple.notes", "LaunchTask");
              if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG)) {
                sub_1004D651C((uint64_t)v28, (uint64_t)v12);
              }

              [v12 deleteAttachmentPreviewImages];
              [v12 purgeAttachmentPreviewImages];
              char v3 = 1;
            }
          }
          id v9 = [v7 countByEnumeratingWithState:&v20 objects:v29 count:16];
        }
        while (v9);
      }
    }
    id v19 = [obj countByEnumeratingWithState:&v24 objects:v31 count:16];
  }
  while (v19);
  uint64_t v2 = v16;
  if (v3)
  {
    [*(id *)(v15 + 32) ic_save];
  }
  else
  {
LABEL_25:
    id v14 = os_log_create("com.apple.notes", "LaunchTask");
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG)) {
      sub_1004D64D8(v14);
    }
  }
}

void sub_10008129C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) destinationAccountObjectID];
  char v3 = +[ICAccount ic_existingObjectWithID:v2 context:*(void *)(a1 + 40)];

  if (([v3 isValidObject] & 1) == 0)
  {
    id v4 = os_log_create("com.apple.notes", "Migration");
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Cancelling legacy import operation because the destination account does not exist", v5, 2u);
    }

    [*(id *)(a1 + 32) cancel];
  }
}

void sub_100081560(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100081584(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100081594(uint64_t a1)
{
}

void sub_10008159C(uint64_t a1)
{
  uint64_t v1 = a1 + 40;
  uint64_t v2 = *(void **)(a1 + 32);
  char v3 = [*(id *)(a1 + 40) legacyAccountObjectID];
  id v9 = 0;
  uint64_t v4 = [v2 existingObjectWithID:v3 error:&v9];
  id v5 = v9;
  uint64_t v6 = *(void *)(*(void *)(v1 + 8) + 8);
  id v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v4;

  if (v5)
  {
    id v8 = os_log_create("com.apple.notes", "Migration");
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_1004D65BC((id *)v1);
    }
  }
}

void sub_1000818D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100081900(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v6 = [*(id *)(a1 + 40) objectID];
  uint64_t v3 = [v2 allVisibleNoteObjectIDsForAccountWithObjectID:v6];
  uint64_t v4 = *(void *)(*(void *)(a1 + 48) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

void sub_100081CA0(uint64_t a1)
{
  uint64_t v2 = +[ICNoteContext sharedContext];
  uint64_t v3 = [v2 snapshotManagedObjectContext];

  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100081D94;
  v6[3] = &unk_100627360;
  uint64_t v4 = *(void **)(a1 + 40);
  void v6[4] = *(void *)(a1 + 32);
  id v7 = v3;
  id v8 = v4;
  id v9 = *(id *)(a1 + 48);
  id v10 = *(id *)(a1 + 56);
  id v5 = v3;
  [v5 performBlockAndWait:v6];
}

void sub_100081D94(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) destinationAccountObjectID];
  id v16 = +[ICAccount ic_existingObjectWithID:v2 context:*(void *)(a1 + 40)];

  long long v40 = 0u;
  long long v41 = 0u;
  long long v38 = 0u;
  long long v39 = 0u;
  id obj = *(id *)(a1 + 48);
  id v3 = [obj countByEnumeratingWithState:&v38 objects:v42 count:16];
  if (v3)
  {
    uint64_t v17 = *(void *)v39;
    do
    {
      uint64_t v4 = 0;
      do
      {
        if (*(void *)v39 != v17) {
          objc_enumerationMutation(obj);
        }
        uint64_t v5 = *(void *)(*((void *)&v38 + 1) + 8 * (void)v4);
        uint64_t v32 = 0;
        id v33 = &v32;
        uint64_t v34 = 0x3032000000;
        long long v35 = sub_100081584;
        double v36 = sub_100081594;
        id v37 = 0;
        uint64_t v26 = 0;
        long long v27 = &v26;
        uint64_t v28 = 0x3032000000;
        id v29 = sub_100081584;
        __int16 v30 = sub_100081594;
        id v31 = 0;
        id v6 = *(void **)(a1 + 56);
        v21[0] = _NSConcreteStackBlock;
        v21[1] = 3221225472;
        v21[2] = sub_100082140;
        v21[3] = &unk_100627338;
        long long v24 = &v32;
        id v22 = v6;
        uint64_t v23 = v5;
        long long v25 = &v26;
        [v22 performBlockAndWait:v21];
        if (v33[5])
        {
          id v8 = [*(id *)(a1 + 32) importLegacyFolder:v27[5] toAccount:v16];
          id v9 = [*(id *)(a1 + 32) importLegacyNote:v33[5] deviceMigrationIdentifier:*(void *)(a1 + 64) toFolder:v8];
        }
        id v10 = *(void **)(a1 + 56);
        v19[0] = _NSConcreteStackBlock;
        v19[1] = 3221225472;
        v19[2] = sub_100082214;
        v19[3] = &unk_100625AF0;
        id v20 = v10;
        [v20 performBlockAndWait:v19];

        _Block_object_dispose(&v26, 8);
        _Block_object_dispose(&v32, 8);

        uint64_t v4 = (char *)v4 + 1;
      }
      while (v3 != v4);
      id v3 = [obj countByEnumeratingWithState:&v38 objects:v42 count:16];
    }
    while (v3);
  }

  id v11 = *(void **)(a1 + 40);
  id v18 = 0;
  unsigned __int8 v12 = [v11 save:&v18];
  id v13 = v18;
  if ((v12 & 1) == 0)
  {
    id v14 = os_log_create("com.apple.notes", "Migration");
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      sub_1004D66DC();
    }

    [*(id *)(a1 + 32) cancel];
  }
}

void sub_100082110(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
}

void sub_100082140(void *a1)
{
  uint64_t v2 = (void *)a1[4];
  uint64_t v3 = a1[5];
  id v12 = 0;
  uint64_t v4 = [v2 existingObjectWithID:v3 error:&v12];
  id v5 = v12;
  uint64_t v6 = *(void *)(a1[6] + 8);
  id v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v4;

  if (v5)
  {
    id v8 = os_log_create("com.apple.notes", "Migration");
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_1004D6744();
    }
  }
  uint64_t v9 = [*(id *)(*(void *)(a1[6] + 8) + 40) folder];
  uint64_t v10 = *(void *)(a1[7] + 8);
  id v11 = *(void **)(v10 + 40);
  *(void *)(v10 + 40) = v9;
}

id sub_100082214(uint64_t a1)
{
  return [*(id *)(a1 + 32) reset];
}

void sub_100082290(id a1)
{
  uint64_t v1 = +[NSUserDefaults standardUserDefaults];
  CFStringRef v3 = @"MigrationBatchSize";
  uint64_t v4 = &off_10064B1B0;
  uint64_t v2 = +[NSDictionary dictionaryWithObjects:&v4 forKeys:&v3 count:1];
  [v1 registerDefaults:v2];
}

void sub_10008302C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _Block_object_dispose(&a59, 8);
  _Block_object_dispose((const void *)(v64 - 224), 8);
  _Block_object_dispose(&a64, 8);
  _Block_object_dispose((const void *)(v64 - 176), 8);
  _Block_object_dispose(&STACK[0x220], 8);
  _Block_object_dispose(&STACK[0x250], 8);
  _Unwind_Resume(a1);
}

void sub_1000830D0(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) htmlString];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;

  uint64_t v5 = [*(id *)(a1 + 32) identifier];
  uint64_t v6 = *(void *)(*(void *)(a1 + 48) + 8);
  id v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;
}

id sub_10008313C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) creationDate];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;

  uint64_t v5 = [*(id *)(a1 + 32) modificationDate];
  uint64_t v6 = *(void *)(*(void *)(a1 + 48) + 8);
  id v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;

  uint64_t v8 = [*(id *)(a1 + 32) title];
  uint64_t v9 = *(void *)(*(void *)(a1 + 56) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v8;

  id result = [*(id *)(a1 + 32) isPlainText];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = (_BYTE)result;
  return result;
}

void sub_1000831D0(uint64_t a1)
{
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  uint64_t v2 = [*(id *)(a1 + 32) attachments];
  id v3 = [v2 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v10;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v10 != v5) {
          objc_enumerationMutation(v2);
        }
        id v7 = *(void **)(a1 + 40);
        uint64_t v8 = [*(id *)(*((void *)&v9 + 1) + 8 * (void)v6) objectID];
        [v7 addObject:v8];

        uint64_t v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v9 objects:v13 count:16];
    }
    while (v4);
  }
}

void sub_1000832E8(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) managedObjectContext];
  uint64_t v3 = *(void *)(a1 + 40);
  id v13 = 0;
  id v4 = [v2 existingObjectWithID:v3 error:&v13];
  id v5 = v13;

  if (v5)
  {
    uint64_t v6 = os_log_create("com.apple.notes", "Migration");
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1004D6854();
    }
  }
  uint64_t v7 = [v4 identifier];
  uint64_t v8 = *(void *)(*(void *)(a1 + 48) + 8);
  long long v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = v7;

  uint64_t v10 = [v4 fileURL];
  uint64_t v11 = *(void *)(*(void *)(a1 + 56) + 8);
  long long v12 = *(void **)(v11 + 40);
  *(void *)(v11 + 40) = v10;
}

void sub_100083C14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

void sub_100083C7C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) htmlString];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;

  uint64_t v5 = [*(id *)(a1 + 32) modificationDate];
  uint64_t v6 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;

  uint64_t v8 = [*(id *)(a1 + 32) identifier];
  uint64_t v9 = *(void *)(*(void *)(a1 + 56) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v8;
}

void sub_100083EC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100083EE4(uint64_t a1)
{
  id v6 = [*(id *)(a1 + 32) folders];
  uint64_t v2 = [v6 objectsPassingTest:&stru_100627440];
  uint64_t v3 = [v2 allObjects];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

BOOL sub_100083F64(id a1, id a2, BOOL *a3)
{
  uint64_t v3 = ICProtocolCast();
  char v4 = [v3 isTrashFolder] ^ 1;

  return v4;
}

void sub_100083FA4(uint64_t a1)
{
  uint64_t v2 = os_log_create("com.apple.notes", "Migration");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    sub_1004D6C84(v2);
  }

  uint64_t v3 = [*(id *)(a1 + 32) destinationAccountObjectID];
  char v4 = +[ICAccount ic_existingObjectWithID:v3 context:*(void *)(a1 + 40)];

  if (v4)
  {
    if ([*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) count])
    {
      unint64_t v5 = 0;
      do
      {
        id v6 = [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) objectAtIndexedSubscript:v5];
        id v7 = [*(id *)(a1 + 32) importLegacyFolder:v6 toAccount:v4];

        ++v5;
      }
      while ((unint64_t)[*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) count] > v5);
    }
    uint64_t v8 = *(void **)(a1 + 40);
    id v12 = 0;
    unsigned __int8 v9 = [v8 save:&v12];
    id v10 = v12;
    if ((v9 & 1) == 0)
    {
      uint64_t v11 = os_log_create("com.apple.notes", "Migration");
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_1004D6C1C();
      }
    }
  }
}

void sub_100084750(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  _Block_object_dispose(&a22, 8);
  _Block_object_dispose(&a28, 8);
  _Block_object_dispose(&a34, 8);
  _Block_object_dispose((const void *)(v34 - 232), 8);
  _Block_object_dispose((const void *)(v34 - 136), 8);
  _Unwind_Resume(a1);
}

void sub_1000847AC(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v4 = [v2 account];
  uint64_t v3 = [v4 defaultFolder];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [v2 isEqual:v3];
}

void sub_10008482C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) account];
  uint64_t v3 = [v2 name];
  uint64_t v4 = *(void *)(*(void *)(a1 + 48) + 8);
  unint64_t v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;

  uint64_t v6 = [*(id *)(a1 + 32) name];
  uint64_t v7 = *(void *)(*(void *)(a1 + 56) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;

  uint64_t v9 = [*(id *)(a1 + 32) parentFolder];
  uint64_t v10 = *(void *)(*(void *)(a1 + 64) + 8);
  uint64_t v11 = *(void **)(v10 + 40);
  *(void *)(v10 + 40) = v9;

  if ([*(id *)(a1 + 40) renameFolders])
  {
    id v12 = [*(id *)(a1 + 32) account];
    id v13 = [v12 name];
    id v14 = +[NSString stringWithFormat:@"%@/%@", v13, *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40)];
    uint64_t v15 = [v14 ic_md5];
    uint64_t v16 = *(void *)(*(void *)(a1 + 72) + 8);
    uint64_t v17 = *(void **)(v16 + 40);
    *(void *)(v16 + 40) = v15;
  }
  else
  {
    uint64_t v18 = [*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) ic_md5];
    uint64_t v19 = *(void *)(*(void *)(a1 + 72) + 8);
    id v12 = *(void **)(v19 + 40);
    *(void *)(v19 + 40) = v18;
  }

  uint64_t v20 = [*(id *)(a1 + 32) parentFolder];
  if (v20)
  {
    long long v21 = (void *)v20;
    do
    {
      id v22 = [v21 name];
      uint64_t v23 = [v22 ic_md5];
      uint64_t v24 = +[NSString stringWithFormat:@"%@/%@", v23, *(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 40)];
      uint64_t v25 = *(void *)(*(void *)(a1 + 72) + 8);
      uint64_t v26 = *(void **)(v25 + 40);
      *(void *)(v25 + 40) = v24;

      uint64_t v27 = [v21 parentFolder];

      long long v21 = (void *)v27;
    }
    while (v27);
  }
}

void sub_100084AE0(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 32);
  uint64_t v2 = [*(id *)(a1 + 32) managedObjectContext];
  id v11 = *v1;
  uint64_t v3 = +[NSArray arrayWithObjects:&v11 count:1];
  id v10 = 0;
  unsigned __int8 v4 = [v2 obtainPermanentIDsForObjects:v3 error:&v10];
  id v5 = v10;

  if ((v4 & 1) == 0)
  {
    uint64_t v6 = os_log_create("com.apple.notes", "Migration");
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1004D6E9C();
    }
  }
  uint64_t v7 = [*v1 objectID];
  unsigned int v8 = [v7 isTemporaryID];

  if (v8)
  {
    uint64_t v9 = os_log_create("com.apple.notes", "Migration");
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_1004D6E00((uint64_t)v1, v9);
    }
  }
}

void sub_100084D78(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v7 = a2;
  if (v7)
  {
    id v18 = v7;
    unsigned int v8 = [v7 fileWrapper];

    if (!v8) {
      goto LABEL_8;
    }
    uint64_t v9 = [v18 fileWrapper];
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();

    id v11 = [v18 fileWrapper];
    id v12 = v11;
    if (isKindOfClass)
    {
      id v13 = [v11 attachmentIdentifier];
    }
    else
    {
      objc_opt_class();
      char v14 = objc_opt_isKindOfClass();

      if ((v14 & 1) == 0) {
        goto LABEL_8;
      }
      id v12 = [v18 fileWrapper];
      uint64_t v15 = [v12 remoteURL];
      id v13 = [v15 absoluteString];
    }
    if (v13)
    {
LABEL_9:
      [*(id *)(a1 + 32) replaceCharactersInRange:a3 withString:a4];

      id v7 = v18;
      goto LABEL_10;
    }
LABEL_8:
    uint64_t v16 = [v18 fileWrapper];
    uint64_t v17 = [v16 regularFileContents];
    id v13 = [v17 ic_md5];

    id v7 = v18;
    if (!v13) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_10:
}

void sub_100084FC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100084FE0(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) guid];
  uint64_t v3 = +[NSPredicate predicateWithFormat:@"%K == %@", @"guid", v2];
  unsigned __int8 v4 = [*(id *)(a1 + 32) managedObjectContext];
  id v5 = +[NoteContext allVisibleNotesMatchingPredicate:v3 context:v4];

  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = (unint64_t)[v5 count] > 1;
}

NSDictionary *__cdecl sub_1000851F4(id a1)
{
  uint64_t v1 = +[NSUserDefaults standardUserDefaults];
  uint64_t v2 = [v1 dictionaryRepresentation];

  return (NSDictionary *)v2;
}

id sub_1000853F8()
{
  uint64_t v4 = 0;
  id v5 = &v4;
  uint64_t v6 = 0x2050000000;
  unint64_t v0 = (void *)qword_1006AA100;
  uint64_t v7 = qword_1006AA100;
  if (!qword_1006AA100)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    _DWORD v3[2] = sub_1000888CC;
    v3[3] = &unk_1006265A8;
    v3[4] = &v4;
    sub_1000888CC((uint64_t)v3);
    unint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_1000854C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL sub_1000855E4(id a1, CKRecordID *a2, BOOL *a3)
{
  return [(CKRecordID *)a2 ic_isOwnedByCurrentUser];
}

void sub_1000856FC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100085720(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (!v6)
  {
    if (v5)
    {
      v17[1] = _NSConcreteStackBlock;
      v17[2] = (id)3221225472;
      v17[3] = sub_100085A20;
      v17[4] = &unk_100625678;
      unsigned int v8 = v19;
      objc_copyWeak(v19, (id *)(a1 + 40));
      id v18 = v5;
      performBlockOnMainThread();
    }
    else
    {
      if ([*(id *)(a1 + 32) hasExceededQuota])
      {
        uint64_t v9 = [sub_1000853F8() shared];
        uint64_t v21 = 0;
        id v22 = &v21;
        uint64_t v23 = 0x2020000000;
        id v10 = (id *)qword_1006AA118;
        uint64_t v24 = qword_1006AA118;
        if (!qword_1006AA118)
        {
          v19[1] = _NSConcreteStackBlock;
          v19[2] = (id)3221225472;
          v19[3] = sub_100088AE8;
          void v19[4] = &unk_1006265A8;
          uint64_t v20 = &v21;
          id v11 = (void *)sub_100088924();
          v22[3] = (uint64_t)dlsym(v11, "ICQUIInAppMessageReasonUploadFailure");
          qword_1006AA118 = *(void *)(v20[1] + 24);
          id v10 = (id *)v22[3];
        }
        _Block_object_dispose(&v21, 8);
        if (!v10)
        {
          char v14 = (_Unwind_Exception *)sub_1004D6F34();
          _Block_object_dispose(&v21, 8);
          _Unwind_Resume(v14);
        }
        id v12 = *v10;
        v16[0] = _NSConcreteStackBlock;
        v16[1] = 3221225472;
        _OWORD v16[2] = sub_100085A70;
        v16[3] = &unk_100627538;
        objc_copyWeak(v17, (id *)(a1 + 40));
        [v9 fetchMessageForReason:v12 withCompletion:v16];

        id v13 = v17;
        goto LABEL_14;
      }
      unsigned int v8 = &v15;
      objc_copyWeak(&v15, (id *)(a1 + 40));
      performBlockOnMainThread();
    }
    id v13 = v8;
LABEL_14:
    objc_destroyWeak(v13);
    goto LABEL_15;
  }
  uint64_t v7 = os_log_create("com.apple.notes", "UI");
  if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
    sub_1004D6F58();
  }

LABEL_15:
}

void sub_100085A20(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained setSyncMessage:v1];
}

void sub_100085A70(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    uint64_t v7 = os_log_create("com.apple.notes", "UI");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1004D6F58();
    }
  }
  else
  {
    objc_copyWeak(&v9, (id *)(a1 + 32));
    id v8 = v5;
    performBlockOnMainThread();

    objc_destroyWeak(&v9);
  }
}

void sub_100085B70(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100085B84(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained setSyncMessage:v1];
}

void sub_100085BD4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setSyncMessage:0];
}

void sub_100085DF8(uint64_t a1)
{
  uint64_t v2 = (uint64_t *)(a1 + 32);
  uint64_t v3 = +[ICAccount accountWithIdentifier:*(void *)(a1 + 32) context:*(void *)(a1 + 40)];
  uint64_t v4 = [v3 allChildObjects];
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  id v5 = [v4 countByEnumeratingWithState:&v23 objects:v27 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v24;
    do
    {
      for (unint64_t i = 0; i != v6; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v24 != v7) {
          objc_enumerationMutation(v4);
        }
        id v9 = *(void **)(*((void *)&v23 + 1) + 8 * i);
        if ([v9 isDeletable])
        {
          [*(id *)(a1 + 48) deleteCloudObjectIfFullyPushed:v9];
        }
        else
        {
          [v9 clearServerRecords];
          [v9 setInCloud:0];
          [v9 updateChangeCountWithReason:@"User deleted record zone"];
        }
      }
      id v6 = [v4 countByEnumeratingWithState:&v23 objects:v27 count:16];
    }
    while (v6);
  }
  id v10 = [v3 defaultFolder];

  if (!v10)
  {
    id v11 = os_log_create("com.apple.notes", "Cloud");
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      sub_1004D704C(a1 + 32, v11, v12, v13, v14, v15, v16, v17);
    }
  }
  if ([*(id *)(a1 + 40) hasChanges])
  {
    id v18 = *(void **)(a1 + 40);
    id v22 = 0;
    unsigned __int8 v19 = [v18 save:&v22];
    id v20 = v22;
    if ((v19 & 1) == 0)
    {
      uint64_t v21 = os_log_create("com.apple.notes", "Cloud");
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
        sub_1004D6FC0(v2, (uint64_t)v20, v21);
      }
    }
  }
}

void sub_100086018(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = [*(id *)(a1 + 40) managedObjectContext];
  uint64_t v3 = +[ICAccount accountWithIdentifier:v1 context:v2];

  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  uint64_t v4 = [v3 deviceMigrationStates];
  id v5 = [v4 copy];

  id v6 = [v5 countByEnumeratingWithState:&v20 objects:v25 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v21;
    do
    {
      id v9 = 0;
      do
      {
        if (*(void *)v21 != v8) {
          objc_enumerationMutation(v5);
        }
        [*(id *)(*((void *)&v20 + 1) + 8 * (void)v9) deleteFromLocalDatabase];
        id v9 = (char *)v9 + 1;
      }
      while (v7 != v9);
      id v7 = [v5 countByEnumeratingWithState:&v20 objects:v25 count:16];
    }
    while (v7);
  }

  long long v18 = 0u;
  long long v19 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v10 = [v3 legacyTombstones];
  id v11 = [v10 copy];

  id v12 = [v11 countByEnumeratingWithState:&v16 objects:v24 count:16];
  if (v12)
  {
    id v13 = v12;
    uint64_t v14 = *(void *)v17;
    do
    {
      uint64_t v15 = 0;
      do
      {
        if (*(void *)v17 != v14) {
          objc_enumerationMutation(v11);
        }
        [*(id *)(*((void *)&v16 + 1) + 8 * (void)v15) deleteFromLocalDatabase];
        uint64_t v15 = (char *)v15 + 1;
      }
      while (v13 != v15);
      id v13 = [v11 countByEnumeratingWithState:&v16 objects:v24 count:16];
    }
    while (v13);
  }

  +[ICNoteContext setLegacyNotesDisabled:0];
  [v3 setNeedsToBeFetchedFromCloud:1];
}

void sub_1000864D8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = [*(id *)(a1 + 40) managedObjectContext];
  uint64_t v4 = +[ICAccount accountWithIdentifier:v2 context:v3];

  id v5 = *(void **)(a1 + 48);
  id v6 = +[ICCloudContext notesZoneID];
  LODWORD(v5) = [v5 isEqual:v6];

  if (v5)
  {
    id v7 = [v4 allChildObjects:v4];
  }
  else
  {
    uint64_t v8 = *(void **)(a1 + 48);
    id v9 = +[ICCloudContext metadataZoneID];
    LODWORD(v8) = [v8 isEqual:v9];

    if (v8)
    {
      id v7 = +[NSMutableArray array];
      id v10 = [v4 deviceMigrationStates];
      id v11 = [v10 allObjects];
      [v7 addObjectsFromArray:v11];

      id v12 = [v4 legacyTombstones];
      id v13 = [v12 allObjects];
      [v7 addObjectsFromArray:v13];
    }
    else
    {
      id v7 = 0;
    }
  }
  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  id v14 = v7;
  id v15 = [v14 countByEnumeratingWithState:&v27 objects:v35 count:16];
  if (v15)
  {
    id v16 = v15;
    uint64_t v17 = *(void *)v28;
    do
    {
      for (unint64_t i = 0; i != v16; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v28 != v17) {
          objc_enumerationMutation(v14);
        }
        long long v19 = *(void **)(*((void *)&v27 + 1) + 8 * i);
        if ([v19 isSharedViaICloud]
          && ([v19 isOwnedByCurrentUser] & 1) == 0)
        {
          long long v24 = os_log_create("com.apple.notes", "Cloud");
          if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
          {
            long long v25 = [v19 shortLoggingDescription];
            *(_DWORD *)uint8_t buf = 138412290;
            uint64_t v34 = v25;
            _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, "Deleting shared-to-me record (%@) after zone reset", buf, 0xCu);
          }
          [v19 markForDeletion];
          [v19 deleteFromLocalDatabase];
        }
        else
        {
          [v19 setInCloud:0];
          [v19 setServerShare:0];
          [v19 clearServerRecords];
          unsigned __int8 v20 = [v19 markedForDeletion];
          long long v21 = os_log_create("com.apple.notes", "Cloud");
          long long v22 = v21;
          if (v20)
          {
            if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
            {
              long long v23 = [v19 shortLoggingDescription];
              *(_DWORD *)uint8_t buf = 138412290;
              uint64_t v34 = v23;
              _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "Not re-uploading deleted record (%@) after zone reset", buf, 0xCu);
            }
          }
          else
          {
            if (os_log_type_enabled(v21, OS_LOG_TYPE_DEBUG)) {
              sub_1004D720C(v31, v19, &v32, v22);
            }

            if ([v19 wantsUserSpecificRecord]) {
              [v19 updateUserSpecificChangeCountWithReason:@"Did not find record zone"];
            }
            [v19 updateChangeCountWithReason:@"Did not find record zone"];
          }
        }
      }
      id v16 = [v14 countByEnumeratingWithState:&v27 objects:v35 count:16];
    }
    while (v16);
  }
}

void sub_100086A68(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) ownerName];
  uint64_t v3 = +[NSPredicate predicateWithFormat:@"zoneOwnerName == %@", v2];

  long long v26 = (void *)v3;
  uint64_t v4 = +[ICCloudSyncingObject ic_objectsMatchingPredicate:v3 context:*(void *)(a1 + 40)];
  long long v29 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  id v5 = [v4 countByEnumeratingWithState:&v29 objects:v39 count:16];
  if (v5)
  {
    id v6 = v5;
    id v7 = "com.apple.notes";
    uint64_t v8 = "Cloud";
    uint64_t v28 = *(void *)v30;
    do
    {
      id v9 = 0;
      id v27 = v6;
      do
      {
        if (*(void *)v30 != v28) {
          objc_enumerationMutation(v4);
        }
        id v10 = *(void **)(*((void *)&v29 + 1) + 8 * (void)v9);
        id v11 = [v10 recordID];
        id v12 = [v11 zoneID];
        unsigned int v13 = [v12 isEqual:*(void *)(a1 + 32)];

        id v14 = os_log_create(v7, v8);
        BOOL v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);
        if (v13)
        {
          if (v15)
          {
            id v16 = [v10 shortLoggingDescription];
            uint64_t v17 = *(void **)(a1 + 48);
            *(_DWORD *)uint8_t buf = 138412546;
            uint64_t v34 = v16;
            __int16 v35 = 2112;
            double v36 = v17;
            _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "Deleting shared %@ for accountID %@", buf, 0x16u);
          }
          [v10 deleteFromLocalDatabase];
        }
        else
        {
          if (v15)
          {
            long long v18 = [v10 shortLoggingDescription];
            long long v19 = [v10 recordID];
            unsigned __int8 v20 = [v19 zoneID];
            [v20 ic_loggingDescription];
            long long v21 = v8;
            long long v22 = v7;
            v24 = long long v23 = v4;
            uint64_t v25 = *(void *)(a1 + 48);
            *(_DWORD *)uint8_t buf = 138412802;
            uint64_t v34 = v18;
            __int16 v35 = 2112;
            double v36 = v24;
            __int16 v37 = 2112;
            uint64_t v38 = v25;
            _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "Not deleting shared %@ in wrong zone %@ for account ID %@", buf, 0x20u);

            uint64_t v4 = v23;
            id v7 = v22;
            uint64_t v8 = v21;
            id v6 = v27;
          }
        }
        id v9 = (char *)v9 + 1;
      }
      while (v6 != v9);
      id v6 = [v4 countByEnumeratingWithState:&v29 objects:v39 count:16];
    }
    while (v6);
  }
  [*(id *)(a1 + 40) ic_save];
}

void sub_100086E64(void **a1)
{
  uint64_t v2 = a1 + 4;
  uint64_t v3 = +[ICAccount accountWithIdentifier:a1[4] context:a1[5]];
  uint64_t v4 = [a1[6] recordID];
  if (v3)
  {
    id v5 = [v3 userRecordName];

    if (v5)
    {
      id v6 = [v3 userRecordName];
      id v7 = [v4 recordName];
      unsigned __int8 v8 = [v6 isEqualToString:v7];

      if (v8)
      {
LABEL_14:
        [v3 objectWasFetchedFromCloudWithRecord:a1[6] accountID:a1[4]];
        goto LABEL_15;
      }
      id v9 = os_log_create("com.apple.notes", "Cloud");
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        id v10 = [v4 recordName];
        id v11 = [v3 userRecordName];
        id v12 = *v2;
        int v16 = 138412802;
        uint64_t v17 = v10;
        __int16 v18 = 2112;
        long long v19 = v11;
        __int16 v20 = 2112;
        long long v21 = v12;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "The cloud context fetched a user record ID (%@) different from our CloudKit account's user record ID (%@) for account ID %@", (uint8_t *)&v16, 0x20u);
      }
    }
    else
    {
      BOOL v15 = os_log_create("com.apple.notes", "Cloud");
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEBUG)) {
        sub_1004D7284(v4);
      }

      id v9 = [v4 recordName];
      [v3 setUserRecordName:v9];
    }

    goto LABEL_14;
  }
  unsigned int v13 = os_log_create("com.apple.notes", "Cloud");
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    id v14 = *v2;
    int v16 = 138412290;
    uint64_t v17 = v14;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "Cloud context fetched the user record, but we don't have a CloudKit account (account ID %@). Why not?", (uint8_t *)&v16, 0xCu);
  }

LABEL_15:
  [a1[5] ic_saveWithLogDescription:@"Fetching user record"];
}

void sub_10008730C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100087324(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100087334(uint64_t a1)
{
}

void sub_10008733C(uint64_t a1)
{
  uint64_t v2 = +[ICAccount allCloudKitAccountsInContext:*(void *)(a1 + 32)];
  if ([v2 count])
  {
    long long v12 = 0u;
    long long v13 = 0u;
    long long v10 = 0u;
    long long v11 = 0u;
    id v3 = v2;
    id v4 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
    if (v4)
    {
      id v5 = v4;
      uint64_t v6 = *(void *)v11;
      do
      {
        id v7 = 0;
        do
        {
          if (*(void *)v11 != v6) {
            objc_enumerationMutation(v3);
          }
          unsigned __int8 v8 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
          id v9 = [*(id *)(*((void *)&v10 + 1) + 8 * (void)v7) identifier:(void)v10];
          [v8 ic_addNonNilObject:v9];

          id v7 = (char *)v7 + 1;
        }
        while (v5 != v7);
        id v5 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
      }
      while (v5);
    }
  }
}

void sub_1000877F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100087814(uint64_t a1)
{
  id result = +[ICAccount isCloudKitAccountAvailable];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = (_BYTE)result;
  return result;
}

void sub_10008784C(id a1, CKRecord *a2, NSError *a3)
{
  id v4 = a2;
  id v5 = a3;
  uint64_t v6 = [(CKRecord *)v4 objectForKeyedSubscript:ICCloudSyncingObjectRecordKeyCryptoSalt];
  if (v6)
  {
    BOOL v7 = 1;
  }
  else
  {
    unsigned __int8 v8 = [(CKRecord *)v4 objectForKeyedSubscript:ICCloudSyncingObjectRecordKeyCryptoIterationCount];
    BOOL v7 = v8 != 0;
  }
  id v9 = os_log_create("com.apple.notes", "Cloud");
  long long v10 = v9;
  if (v5)
  {
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_1004D7434();
    }

LABEL_11:
    long long v11 = os_log_create("com.apple.notes", "Cloud");
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v13) = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "Device has been upgraded and the user created a password-protected note on a different device. Deleting server records and change tokens, and performing a full sync.", (uint8_t *)&v13, 2u);
    }

    long long v12 = +[ICCloudContext sharedContext];
    [v12 cancelEverythingWithCompletionHandler:&stru_1006275C0];
    goto LABEL_14;
  }
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    int v13 = 138412290;
    id v14 = v4;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "Fetched user record when checking for re-sync: %@", (uint8_t *)&v13, 0xCu);
  }

  if (v7) {
    goto LABEL_11;
  }
  long long v12 = os_log_create("com.apple.notes", "Cloud");
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG)) {
    sub_1004D7400();
  }
LABEL_14:
}

void sub_100087A3C(id a1)
{
  uint64_t v1 = +[ICNoteContext sharedContext];
  uint64_t v2 = [v1 snapshotManagedObjectContext];

  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  _OWORD v4[2] = sub_100087AE8;
  v4[3] = &unk_100625AF0;
  id v5 = v2;
  id v3 = v2;
  [v3 performBlock:v4];
}

void sub_100087AE8(uint64_t a1)
{
  uint64_t v2 = os_log_create("com.apple.notes", "Cloud");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "clearing server records", v6, 2u);
  }

  id v3 = +[ICCloudContext sharedContext];
  [v3 enumerateAllCloudObjectsInContext:*(void *)(a1 + 32) batchSize:10 saveAfterBatch:1 usingBlock:&stru_100627600];

  id v4 = +[ICCloudContext sharedContext];
  [v4 deleteAllServerChangeTokens];

  id v5 = +[ICCloudContext sharedContext];
  [v5 syncWithReason:@"FixingPasswordProtectedNotes" completionHandler:0];
}

void sub_100087BD4(id a1, ICCloudObject *a2, BOOL *a3)
{
  id v3 = a2;
  objc_opt_class();
  ICCheckedDynamicCast();
  id v4 = (id)objc_claimAutoreleasedReturnValue();

  [v4 clearServerRecords];
}

void sub_100087F10(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = os_log_create("com.apple.notes", "Cloud");
  BOOL v7 = v6;
  if (v5)
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      int v9 = 138412802;
      uint64_t v10 = v8;
      __int16 v11 = 1024;
      int v12 = a2;
      __int16 v13 = 2112;
      id v14 = v5;
      _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "Error updating account bag for %@ authenticated=%d: %@", (uint8_t *)&v9, 0x1Cu);
    }
  }
  else if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
  {
    sub_1004D7504(a1, v7);
  }
}

void sub_1000881D8(uint64_t a1)
{
  uint64_t v10 = +[NSPredicate predicateWithFormat:@"%K == %@", @"typeUTI", ICAttachmentUTTypeGallery];
  +[ICAttachment attachmentsMatchingPredicate:context:](ICAttachment, "attachmentsMatchingPredicate:context:");
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue();
  id v2 = [obj countByEnumeratingWithState:&v15 objects:v19 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v16;
    do
    {
      id v5 = 0;
      do
      {
        if (*(void *)v16 != v4) {
          objc_enumerationMutation(obj);
        }
        uint64_t v6 = *(void **)(*((void *)&v15 + 1) + 8 * (void)v5);
        objc_opt_class();
        uint64_t v8 = [v6 attachmentModel];
        int v9 = ICCheckedDynamicCast();

        v12[0] = _NSConcreteStackBlock;
        v12[1] = 3221225472;
        v12[2] = sub_1000883F0;
        v12[3] = &unk_100627650;
        id v13 = *(id *)(a1 + 32);
        id v14 = v6;
        [v9 enumerateSubAttachmentsWithBlock:v12];

        id v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      id v3 = [obj countByEnumeratingWithState:&v15 objects:v19 count:16];
    }
    while (v3);
  }

  [*(id *)(a1 + 32) ic_save];
}

void sub_1000883F0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5
    || (+[ICAttachment attachmentWithIdentifier:v6 includeDeleted:1 context:*(void *)(a1 + 32)], (id v5 = (id)objc_claimAutoreleasedReturnValue()) != 0))
  {
    BOOL v7 = [v5 parentAttachment];
    int v9 = *(void **)(a1 + 40);
    uint64_t v8 = (id *)(a1 + 40);

    uint64_t v10 = os_log_create("com.apple.notes", "Cloud");
    BOOL v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG);
    if (v7 == v9)
    {
      if (v11) {
        sub_1004D75E8(v5, v10);
      }
    }
    else
    {
      if (v11) {
        sub_1004D767C(v5, v8);
      }

      [v5 setNeedsToBeFetchedFromCloud:1];
    }
  }
}

id sub_100088694(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateCloudContextState];
}

id sub_10008869C(uint64_t a1)
{
  id v2 = os_log_create("com.apple.notes", "Cloud");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    sub_1004D7754();
  }

  return [*(id *)(a1 + 32) updateCloudContextState];
}

Class sub_1000888CC(uint64_t a1)
{
  sub_100088924();
  Class result = objc_getClass("ICQInAppMessaging");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_1006AA100 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    sub_1004D7788();
    return (Class)sub_100088924();
  }
  return result;
}

uint64_t sub_100088924()
{
  v3[0] = 0;
  if (!qword_1006AA108)
  {
    v3[1] = _NSConcreteStackBlock;
    _DWORD v3[2] = 3221225472;
    v3[3] = sub_100088A24;
    v3[4] = &unk_100627688;
    void v3[5] = v3;
    long long v4 = off_100627670;
    uint64_t v5 = 0;
    qword_1006AA108 = _sl_dlopen();
  }
  uint64_t v0 = qword_1006AA108;
  uint64_t v1 = (void *)v3[0];
  if (!qword_1006AA108)
  {
    uint64_t v1 = (void *)abort_report_np();
    goto LABEL_7;
  }
  if (v3[0]) {
LABEL_7:
  }
    free(v1);
  return v0;
}

uint64_t sub_100088A24()
{
  uint64_t result = _sl_dlopen();
  qword_1006AA108 = result;
  return result;
}

void *sub_100088A98(uint64_t a1)
{
  id v2 = (void *)sub_100088924();
  uint64_t result = dlsym(v2, "ICQCurrentInAppMessageChangedNotification");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  qword_1006AA110 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *sub_100088AE8(uint64_t a1)
{
  id v2 = (void *)sub_100088924();
  uint64_t result = dlsym(v2, "ICQUIInAppMessageReasonUploadFailure");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  qword_1006AA118 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_10008926C(id a1)
{
  id v3 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  dispatch_queue_t v1 = dispatch_queue_create("com.apple.notes.activevacuum", v3);
  id v2 = (void *)qword_1006AA120;
  qword_1006AA120 = (uint64_t)v1;
}

void sub_1000893C4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 48) activeVacuum];

  if (!v2)
  {
    id v3 = os_log_create("com.apple.notes", "Vacuum");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG)) {
      sub_1004D77B0();
    }

    long long v4 = objc_alloc_init(ICDatabaseVacuum);
    [*(id *)(a1 + 48) setActiveVacuum:v4];
  }
  uint64_t v5 = *(void *)(a1 + 32);
  id v6 = [*(id *)(a1 + 48) activeVacuum];
  [v6 setPreVacuumHandler:v5];

  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v8 = [*(id *)(a1 + 48) activeVacuum];
  [v8 setPostVacuumHandler:v7];

  int v9 = [*(id *)(a1 + 48) activeVacuum];
  [v9 startDatabaseVacuumPolicy];
}

void sub_100089638(uint64_t a1)
{
  id v2 = os_log_create("com.apple.notes", "Vacuum");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    sub_1004D78F0();
  }

  id v3 = [(id)objc_opt_class() lastVacuumDate];
  long long v4 = [v3 dateByAddingTimeInterval:86400.0];
  uint64_t v5 = +[NSDate date];
  unsigned int v6 = [v4 ic_isEarlierThanDate:v5];

  if (v6)
  {
    uint64_t v7 = os_log_create("com.apple.notes", "Vacuum");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG)) {
      sub_1004D78BC();
    }

    uint64_t v8 = +[NSDate date];
    uint64_t v9 = [v8 dateByAddingTimeInterval:10.0];

    long long v4 = (void *)v9;
  }
  uint64_t v10 = os_log_create("com.apple.notes", "Vacuum");
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG)) {
    sub_1004D7850((uint64_t)v4, v10, v11, v12, v13, v14, v15, v16);
  }

  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  v18[2] = sub_100089804;
  v18[3] = &unk_100625860;
  void v18[4] = *(void *)(a1 + 32);
  id v19 = v4;
  id v17 = v4;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v18);
}

void sub_100089804(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) timer];

  if (v2)
  {
    id v3 = os_log_create("com.apple.notes", "Vacuum");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG)) {
      sub_1004D7924();
    }

    long long v4 = [*(id *)(a1 + 32) timer];
    [v4 invalidate];
  }
  id v5 = [objc_alloc((Class)NSTimer) initWithFireDate:*(void *)(a1 + 40) interval:*(void *)(a1 + 32) target:"timerFired:" selector:0 userInfo:1 repeats:86400.0];
  [*(id *)(a1 + 32) setTimer:v5];

  unsigned int v6 = +[NSRunLoop mainRunLoop];
  uint64_t v7 = [*(id *)(a1 + 32) timer];
  [v6 addTimer:v7 forMode:NSDefaultRunLoopMode];
}

void sub_100089980(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) timer];
  [v1 invalidate];
}

id sub_100089A84(uint64_t a1)
{
  return _[*(id *)(a1 + 32) vacuum];
}

void sub_100089C00(uint64_t a1)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_100089C88;
  v2[3] = &unk_100625860;
  id v1 = *(void **)(a1 + 40);
  void v2[4] = *(void *)(a1 + 32);
  id v3 = v1;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v2);
}

void sub_100089C88(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) postVacuumHandler];

  if (v2)
  {
    id v3 = [*(id *)(a1 + 32) postVacuumHandler];
    v3[2](v3, *(void *)(a1 + 40));
  }
}

void sub_100089E9C(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) ic_save];
  id v3 = os_log_create("com.apple.notes", "Vacuum");
  long long v4 = v3;
  if (v2)
  {
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG)) {
      sub_1004D7A2C(a1, v4, v5, v6, v7, v8, v9, v10);
    }
  }
  else if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    sub_1004D7A9C(a1, v4);
  }

  uint64_t v11 = [*(id *)(a1 + 48) postVacuumHandler];

  if (v11)
  {
    uint64_t v12 = [*(id *)(a1 + 48) postVacuumHandler];
    v12[2](v12, *(void *)(a1 + 56));
  }
}

void sub_10008A1C0(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) workerContext];
  +[ICAttachment enumerateAttachmentsInContext:v2 batchSize:100 visibleOnly:0 saveAfterBatch:1 usingBlock:&stru_100627710];

  id v3 = [*(id *)(a1 + 32) workerContext];
  +[ICInlineAttachment enumerateInlineAttachmentsInContext:v3 typeUTI:0 tokenContentIdentifier:0 batchSize:100 visibleOnly:0 saveAfterBatch:1 usingBlock:&stru_100627750];

  id v4 = [*(id *)(a1 + 32) workerContext];
  +[ICMedia enumerateMediaInContext:v4 batchSize:100 saveAfterBatch:1 usingBlock:&stru_100627790];
}

void sub_10008A2BC(id a1, ICAttachment *a2, BOOL *a3)
{
  id v3 = a2;
  id v5 = [(ICAttachment *)v3 note];
  id v4 = [v5 account];
  [(ICAttachment *)v3 setAccount:v4];
}

void sub_10008A328(id a1, ICInlineAttachment *a2, BOOL *a3)
{
  id v3 = a2;
  id v5 = [(ICInlineAttachment *)v3 note];
  id v4 = [v5 account];
  [(ICInlineAttachment *)v3 setAccount:v4];
}

void sub_10008A394(id a1, ICMedia *a2, BOOL *a3)
{
  id v3 = a2;
  id v6 = [(ICMedia *)v3 attachment];
  id v4 = [v6 note];
  id v5 = [v4 account];
  [(ICMedia *)v3 setAccount:v5];
}

uint64_t sub_10008A418(uint64_t a1)
{
  if (a1 == -1)
  {
    unsigned int v2 = os_log_create("com.apple.notes", "UI");
    if (os_log_type_enabled(v2, OS_LOG_TYPE_FAULT)) {
      sub_1004D7B18(v2);
    }

    return 1;
  }
  else if (a1)
  {
    return 2;
  }
  else
  {
    return 1;
  }
}

uint64_t sub_10008AAA8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_10008AABC(uint64_t a1)
{
  [*(id *)(a1 + 32) setDidPerformAction:1];
  unsigned int v2 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);

  return v2();
}

uint64_t sub_10008AB08(uint64_t a1)
{
  [*(id *)(a1 + 32) setDidPerformAction:1];
  unsigned int v2 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);

  return v2();
}

__CFString *sub_10008B4C8()
{
  if (ICIsSandboxModeEnabled()) {
    uint64_t v0 = @"com.apple.mobilenotesdebug.appremoval";
  }
  else {
    uint64_t v0 = @"com.apple.mobilenotes.appremoval";
  }

  return v0;
}

void sub_10008B55C(id a1)
{
  id v1 = objc_alloc_init(ICAppRemovalServiceClient);
  unsigned int v2 = (void *)qword_1006AA140;
  qword_1006AA140 = (uint64_t)v1;
}

void sub_10008B79C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = os_log_create("com.apple.notes", "Application");
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v6 = 138412290;
    id v7 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Error reaching App Removal service: %@", (uint8_t *)&v6, 0xCu);
  }

  uint64_t v5 = *(void *)(a1 + 32);
  if (v5) {
    (*(void (**)(uint64_t, id))(v5 + 16))(v5, v3);
  }
}

void sub_10008B878(uint64_t a1, void *a2)
{
  id v3 = a2;
  [*(id *)(a1 + 32) suspendConnectionIfNeeded];
  if (v3)
  {
    id v4 = os_log_create("com.apple.notes", "Application");
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1004D7B5C((uint64_t)v3, v4);
    }
  }
  uint64_t v5 = *(void *)(a1 + 40);
  if (v5) {
    (*(void (**)(uint64_t, id))(v5 + 16))(v5, v3);
  }
}

id sub_10008B990(uint64_t a1)
{
  unsigned int v2 = *(void **)(a1 + 32);
  if (v2[1])
  {
    if ([v2 requestCount]) {
      goto LABEL_6;
    }
  }
  else
  {
    id v3 = objc_alloc((Class)NSXPCConnection);
    id v4 = sub_10008B4C8();
    id v5 = [v3 initWithServiceName:v4];
    uint64_t v6 = *(void *)(a1 + 32);
    id v7 = *(void **)(v6 + 8);
    *(void *)(v6 + 8) = v5;

    uint64_t v8 = _LSAppRemovalServiceXPCInterface();
    [*(id *)(*(void *)(a1 + 32) + 8) setRemoteObjectInterface:v8];
  }
  [*(id *)(*(void *)(a1 + 32) + 8) resume];
LABEL_6:
  uint64_t v9 = *(void **)(a1 + 32);
  uint64_t v10 = (char *)[v9 requestCount] + 1;

  return [v9 setRequestCount:v10];
}

id sub_10008BAE4(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) requestCount];
  if (result)
  {
    [*(id *)(a1 + 32) setRequestCount:[*(id *)(a1 + 32) requestCount] - 1];
    id result = [*(id *)(a1 + 32) requestCount];
    if (!result)
    {
      id v3 = *(void **)(*(void *)(a1 + 32) + 8);
      return _[v3 suspend];
    }
  }
  return result;
}

void sub_10008BE18(uint64_t a1)
{
  unsigned int v2 = objc_alloc_init(ICDebugSpinner);
  [(ICDebugSpinner *)v2 show];
  id v3 = dispatch_get_global_queue(2, 0);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_10008BEE0;
  v6[3] = &unk_100625860;
  uint64_t v4 = *(void *)(a1 + 32);
  id v7 = v2;
  uint64_t v8 = v4;
  id v5 = v2;
  dispatch_async(v3, v6);
}

void sub_10008BEE0(uint64_t a1)
{
  unsigned int v2 = +[ICDatabaseStateHandler stateDictionary];
  id v22 = 0;
  id v3 = +[NSPropertyListSerialization dataWithPropertyList:v2 format:200 options:0 error:&v22];
  id v4 = v22;
  if (v3) {
    BOOL v5 = v4 == 0;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    uint64_t v8 = NSTemporaryDirectory();
    uint64_t v9 = +[NSURL fileURLWithPath:v8];

    uint64_t v10 = +[NSDate date];
    [(id)v10 timeIntervalSinceReferenceDate];
    uint64_t v12 = +[NSString stringWithFormat:@"statedump-%ld", (uint64_t)v11];
    uint64_t v13 = [v9 URLByAppendingPathComponent:v12 isDirectory:0];

    id v7 = [v13 URLByAppendingPathExtension:@"plist"];

    id v21 = 0;
    LOBYTE(v10) = [v3 writeToURL:v7 options:0 error:&v21];
    id v6 = v21;
    if (v10)
    {
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      void block[2] = sub_10008C144;
      block[3] = &unk_100625A00;
      uint64_t v14 = *(id *)(a1 + 32);
      uint64_t v15 = *(void *)(a1 + 40);
      long long v18 = v14;
      uint64_t v19 = v15;
      __int16 v20 = v7;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

      uint64_t v16 = v18;
    }
    else
    {
      uint64_t v16 = os_log_create("com.apple.notes", "Internal");
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_1004D7C4C((uint64_t)v6, v16);
      }
    }
  }
  else
  {
    id v6 = v4;
    id v7 = os_log_create("com.apple.notes", "Internal");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1004D7BD4((uint64_t)v6, v7);
    }
  }
}

void sub_10008C144(uint64_t a1)
{
  [*(id *)(a1 + 32) hide];
  unsigned int v2 = [*(id *)(a1 + 40) presentingViewController];

  if (v2)
  {
    id v3 = objc_alloc((Class)UIActivityViewController);
    uint64_t v11 = *(void *)(a1 + 48);
    id v4 = +[NSArray arrayWithObjects:&v11 count:1];
    id v5 = [v3 initWithActivityItems:v4 applicationActivities:0];

    v10[0] = UIActivityTypeOpenInIBooks;
    v10[1] = ICActivityTypeShareToNote;
    v10[2] = UIActivityTypeSharePlay;
    id v6 = +[NSArray arrayWithObjects:v10 count:3];
    [v5 setExcludedActivityTypes:v6];

    id v7 = [*(id *)(a1 + 40) presentationSourceItem];
    uint64_t v8 = [v5 popoverPresentationController];
    [v8 setSourceItem:v7];

    uint64_t v9 = [*(id *)(a1 + 40) presentingViewController];
    [v9 presentViewController:v5 animated:1 completion:0];
  }
}

void sub_10008C2B8(uint64_t a1)
{
  [*(id *)(a1 + 32) activityDidFinish:1];
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2)
  {
    id v3 = [*(id *)(a1 + 32) activityType];
    (*(void (**)(uint64_t, uint64_t, id))(v2 + 16))(v2, 1, v3);
  }
}

id sub_10008C950(uint64_t a1)
{
  return [*(id *)(a1 + 32) showAttachmentInspectorWithAttachment:*(void *)(a1 + 40)];
}

void sub_10008CFB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53)
{
}

uint64_t sub_10008D014(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10008D024(uint64_t a1)
{
}

void sub_10008D02C(uint64_t a1)
{
  id v6 = +[ICAccount allActiveAccountsInContext:*(void *)(a1 + 32)];
  uint64_t v2 = NSStringFromSelector("identifier");
  uint64_t v3 = [v6 valueForKey:v2];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

void sub_10008D734(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10008D750(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10008D760(uint64_t a1)
{
}

intptr_t sub_10008D768(uint64_t a1, void *a2, uint64_t a3)
{
  if (!a3)
  {
    id v4 = [a2 copy];
    uint64_t v5 = *(void *)(*(void *)(a1 + 40) + 8);
    id v6 = *(void **)(v5 + 40);
    *(void *)(v5 + 40) = v4;
  }
  id v7 = *(NSObject **)(a1 + 32);

  return dispatch_semaphore_signal(v7);
}

void sub_10008DECC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v13 = [v3 recordType];
  id v4 = [*(id *)(a1 + 32) objectForKeyedSubscript:];
  id v5 = objc_alloc((Class)ICASCloudSyncableItemData);
  id v6 = v5;
  if (v4)
  {
    id v7 = [v4 syncableDataType];
    uint64_t v8 = [v4 count];
    uint64_t v9 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", (char *)[v8 unsignedIntegerValue] + 1);
    id v10 = [v6 initWithSyncableDataType:v7 count:v9];
  }
  else
  {
    id v10 = [v5 initWithSyncableDataType:v13 count:&off_10064B1C8];
  }
  [*(id *)(a1 + 32) setObject:v10 forKeyedSubscript:v13];
  uint64_t v11 = *(void **)(a1 + 40);
  uint64_t v12 = [v3 recordID];

  [v11 addObject:v12];
}

void sub_10008E450(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = [v3 recordID];
  [v2 setObject:v3 forKeyedSubscript:v4];
}

void sub_10008E4B4(uint64_t a1, void *a2, void *a3)
{
  id v24 = a2;
  id v5 = *(void **)(a1 + 32);
  id v6 = a3;
  id v7 = [v5 objectForKeyedSubscript:v24];
  uint64_t v8 = [v7 recordType];
  if (!v8)
  {
    if ([*(id *)(a1 + 40) containsObject:v24]) {
      uint64_t v8 = (__CFString *)*(id *)(a1 + 48);
    }
    else {
      uint64_t v8 = @"icna_record_type_unknown";
    }
  }
  id v9 = [v6 code];
  id v10 = [v6 domain];

  uint64_t v11 = +[NSString stringWithFormat:@"%@_%ld", v10, v9];
  uint64_t v12 = +[NSString stringWithFormat:@"%@_%@", v8, v11];
  id v13 = [*(id *)(a1 + 56) objectForKeyedSubscript:v12];
  id v14 = objc_alloc((Class)ICASPartialCloudErrorItemData);
  if (v13)
  {
    uint64_t v15 = [v13 syncableDataType];
    [v13 errorCode];
    v16 = id v22 = v10;
    [v13 count];
    long long v23 = v8;
    uint64_t v17 = a1;
    v19 = long long v18 = v7;
    __int16 v20 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", (char *)[v19 unsignedIntegerValue] + 1);
    id v21 = [v14 initWithSyncableDataType:v15 errorCode:v16 count:v20 errorString:v11];

    id v7 = v18;
    a1 = v17;
    uint64_t v8 = v23;

    id v10 = v22;
  }
  else
  {
    uint64_t v15 = +[NSNumber numberWithInteger:v9];
    id v21 = [v14 initWithSyncableDataType:v8 errorCode:v15 count:&off_10064B1C8 errorString:v11];
  }

  [*(id *)(a1 + 56) setObject:v21 forKeyedSubscript:v12];
}

void sub_10008EB18(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  uint64_t v2 = (void *)qword_1006AA160;
  qword_1006AA160 = (uint64_t)v1;

  id v3 = [objc_alloc((Class)NSLocale) initWithLocaleIdentifier:@"en_US_POSIX"];
  [(id)qword_1006AA160 setLocale:v3];

  id v4 = (void *)qword_1006AA160;

  _[v4 setDateFormat:@"yyyy-MM-dd'T'HH:mm:ssZ"];
}

void sub_10008EEB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10008EED8(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) modifiedAfterDate];
  id v3 = +[NSPredicate predicateWithFormat:@"modificationDate >= %@", v2];

  id v4 = [*(id *)(a1 + 32) workerContext];
  id v5 = [*(id *)(a1 + 32) relationshipKeyPathsForPrefetching];
  id v6 = [*(id *)(a1 + 32) batchSize];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_10008EFF8;
  v7[3] = &unk_1006278B8;
  v7[4] = *(void *)(a1 + 40);
  +[ICNote enumerateAllCloudObjectsInContext:v4 predicate:v3 sortDescriptors:&__NSArray0__struct relationshipKeyPathsForPrefetching:v5 batchSize:v6 saveAfterBatch:1 usingBlock:v7];
}

void sub_10008EFF8(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  ICDynamicCast();
  id v4 = (id)objc_claimAutoreleasedReturnValue();

  [v4 setNeedsToBeFetchedFromCloud:1];
  ++*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
}

id sub_10008F8A4(uint64_t a1)
{
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  uint64_t v2 = +[ICAccount allAccountsInContext:](ICAccount, "allAccountsInContext:", *(void *)(a1 + 32), 0);
  id v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      id v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v8 + 1) + 8 * (void)v6) setReplicaIDToBundleIdentifier:0];
        id v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }

  return [*(id *)(a1 + 32) ic_save];
}

void sub_10008FA00(id a1)
{
  id v1 = objc_alloc_init(ICQuickNoteSessionManager);
  uint64_t v2 = (void *)qword_1006AA170;
  qword_1006AA170 = (uint64_t)v1;
}

uint64_t sub_100090F74()
{
  return v0;
}

id sub_100091FCC(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:1.0];
}

id sub_1000921D8(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:0.0];
}

id sub_1000921E4(uint64_t a1)
{
  [*(id *)(a1 + 32) removeFromSuperview];
  uint64_t v2 = *(void **)(a1 + 32);

  return [v2 setWindowScene:0];
}

void sub_100092608(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  if (v1)
  {
    id v2 = [*(id *)(a1 + 32) activityType];
    (*(void (**)(uint64_t, uint64_t, id))(v1 + 16))(v1, 1, v2);
  }
}

id sub_1000928A0(uint64_t a1, void *a2)
{
  if (*(void **)(a1 + 32) != a2)
  {
    id v3 = *(void **)(a1 + 40);
    id v4 = a2;
    uint64_t v5 = [v3 folder];
    [v5 setCustomNoteSortType:v4];

    id v6 = [*(id *)(a1 + 40) folder];
    [v6 updateChangeCountWithReason:@"Changed sort type"];

    id v7 = [*(id *)(a1 + 40) folder];
    long long v8 = [v7 managedObjectContext];
    [v8 ic_save];

    long long v9 = [*(id *)(a1 + 40) virtualSmartFolder];
    [v9 setNoteSortType:v4];
  }
  long long v10 = *(void **)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);

  return [v10 performActivityWithCompletion:v11];
}

void sub_100092F60(uint64_t a1)
{
  if (*(void *)(a1 + 48) == *(void *)(a1 + 56)) {
    [*(id *)(a1 + 40) sortType];
  }
  else {
    [*(id *)(a1 + 32) folderNoteSortTypeByChangingOrder:];
  }
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  id v2 = [*(id *)(a1 + 40) selectedSortTypeHandler];
  ((void (**)(void, id))v2)[2](v2, v3);
}

void sub_10009312C(id *a1)
{
  if ([a1[4] direction] == a1[6]) {
    [a1[5] sortType];
  }
  else {
  id v3 = [a1[4] folderNoteSortTypeByChangingDirection];
  }
  id v2 = [a1[5] selectedSortTypeHandler];
  ((void (**)(void, id))v2)[2](v2, v3);
}

void sub_1000935BC(uint64_t a1, int a2)
{
  if (a2)
  {
    id v2 = *(void **)(a1 + 32);
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    id v5[2] = sub_100093688;
    v5[3] = &unk_100627958;
    v5[4] = v2;
    id v6 = *(id *)(a1 + 40);
    [v2 authenticateIfNeededWithCompletion:v5];
  }
  else
  {
    uint64_t v3 = *(void *)(a1 + 40);
    if (v3)
    {
      id v4 = *(void (**)(void))(v3 + 16);
      v4();
    }
  }
}

uint64_t sub_100093688(uint64_t a1, int a2)
{
  if (a2) {
    [*(id *)(a1 + 32) deleteObjects];
  }
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    id v4 = *(uint64_t (**)(void))(result + 16);
    return v4();
  }
  return result;
}

void sub_100093E70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

BOOL sub_100093E9C(id a1, ICFolder *a2, unint64_t a3, BOOL *a4)
{
  return [(ICFolder *)a2 isSmartFolder];
}

void sub_100093EA4(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v8 = WeakRetained;
  if (a2 == 2)
  {
    [WeakRetained setDidAuthenticate:1];
    uint64_t v5 = *(void *)(a1 + 32);
    if (!v5) {
      goto LABEL_7;
    }
    id v6 = *(void (**)(void))(v5 + 16);
  }
  else
  {
    uint64_t v7 = *(void *)(a1 + 32);
    if (!v7) {
      goto LABEL_7;
    }
    id v6 = *(void (**)(void))(v7 + 16);
  }
  v6();
LABEL_7:
}

void sub_100094088(uint64_t a1)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_100094110;
  v2[3] = &unk_100625AF0;
  uint64_t v1 = *(void **)(a1 + 32);
  id v3 = *(id *)(a1 + 40);
  [v1 deleteModernFoldersIfNeeded:v2];
}

uint64_t sub_100094110(uint64_t a1)
{
  if (!+[NSThread isMainThread]) {
    +[ICAssert handleFailedAssertWithCondition:functionName:simulateCrash:showAlert:format:](ICAssert, "handleFailedAssertWithCondition:functionName:simulateCrash:showAlert:format:", "[NSThread isMainThread]", "-[ICDeleteDecisionController deleteObjects]_block_invoke_2", 1, 0, @"Unexpected call from background thread");
  }
  uint64_t result = (uint64_t)[*(id *)(a1 + 32) groupingLevel];
  if (result >= 1)
  {
    id v3 = *(void **)(a1 + 32);
    return (uint64_t)[v3 endUndoGrouping];
  }
  return result;
}

void sub_1000948F0(uint64_t a1)
{
  id v2 = +[ICNoteContext sharedContext];
  id v3 = [v2 managedObjectContext];

  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_1000949D4;
  void v10[3] = &unk_100625860;
  id v4 = v3;
  id v11 = v4;
  id v12 = *(id *)(a1 + 32);
  [v4 performBlockAndWait:v10];
  uint64_t v9 = *(void *)(a1 + 40);
  if (v9) {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 16))(v9, v5, v6, v7, v8);
  }
}

void sub_1000949D4(uint64_t a1)
{
  [*(id *)(a1 + 32) processPendingChanges];
  [*(id *)(a1 + 40) ic_objectsPassingTest:&stru_1006279E0];
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  id v2 = +[ICNoteContext sharedContext];
  [v2 undoablyTrashOrDeleteNotes:v3];

  [*(id *)(a1 + 32) ic_save];
}

BOOL sub_100094A58(id a1, ICNote *a2, unint64_t a3, BOOL *a4)
{
  id v4 = [(ICNote *)a2 managedObjectContext];
  BOOL v5 = v4 != 0;

  return v5;
}

void sub_100094E50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
}

void sub_100094E78(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = os_log_create("com.apple.notes", "Delete");
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1004D8378(a1, (uint64_t)v3, v4);
    }
  }
  else
  {
    id v4 = [*(id *)(a1 + 32) managedObjectContext];
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    id v5[2] = sub_100094F80;
    v5[3] = &unk_100625AF0;
    v5[4] = *(void *)(a1 + 32);
    [v4 performBlockAndWait:v5];
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
  --*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
}

void sub_100094F80(uint64_t a1)
{
  id v2 = +[ICNoteContext sharedContext];
  id v3 = *(void **)(a1 + 32);
  id v4 = [v3 parent];
  BOOL v5 = [*(id *)(a1 + 32) sharedRootObject];
  [v2 undoablyPersistDeleteEventForObject:v3 fromParentObject:v4 sharedRootObject:v5];

  id v6 = +[ICNoteContext sharedContext];
  [v6 undoablyDeleteFolder:*(void *)(a1 + 32) markNotesForDeletion:0 moveAction:0 actionName:0];
}

uint64_t sub_100095048(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_100095614(uint64_t a1)
{
  id v6 = [*(id *)(a1 + 32) deleteDecision];
  id v2 = [v6 modernNotes];
  id v3 = [v2 count];
  id v4 = [*(id *)(a1 + 32) window];
  BOOL v5 = [*(id *)(a1 + 32) sender];
  +[ICDeleteAlert showAlertForDeletingObjectsWithType:14 count:v3 window:v4 sender:v5 completion:*(void *)(a1 + 40)];
}

void sub_1000966D0(uint64_t a1, void *a2)
{
  id v6 = a2;
  [*(id *)(a1 + 32) activityDidFinish:1];
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3)
  {
    BOOL v4 = [v6 count] != 0;
    BOOL v5 = [*(id *)(a1 + 32) activityType];
    (*(void (**)(uint64_t, BOOL, void *))(v3 + 16))(v3, v4, v5);
  }
}

id sub_1000968DC(uint64_t a1)
{
  return [*(id *)(a1 + 32) setTransitioning:0];
}

void sub_100096984(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) viewControllerManager];
  uint64_t v1 = [v3 activityStreamNavigationController];
  id v2 = [v1 activityStreamViewController];
  [v2 updateContentLayout];
}

id sub_100096C08(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  objc_opt_class();
  id v6 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v8 = [WeakRetained diffableDataSource];
  uint64_t v9 = [v8 sectionIdentifierForIndex:a2];
  long long v10 = ICDynamicCast();

  id v11 = objc_loadWeakRetained(v6);
  if (v11 && (v12 = v11, id v13 = [v10 sectionType], v12, !v13))
  {
    id v14 = [objc_alloc((Class)UICollectionLayoutListConfiguration) initWithAppearance:0];
    [v14 setShowsSeparators:0];
    uint64_t v16 = +[UIColor clearColor];
    [v14 setBackgroundColor:v16];

    uint64_t v15 = +[NSCollectionLayoutSection sectionWithListConfiguration:v14 layoutEnvironment:v5];
  }
  else
  {
    id v14 = objc_loadWeakRetained(v6);
    uint64_t v15 = [v14 notesSectionForSectionIndex:a2 layoutEnvironment:v5];
  }
  uint64_t v17 = (void *)v15;

  return v17;
}

id sub_100097758(uint64_t a1)
{
  id v1 = [objc_alloc((Class)UIListSeparatorConfiguration) initWithListAppearance:*(void *)(a1 + 32)];
  double leading = NSDirectionalEdgeInsetsZero.leading;
  double bottom = NSDirectionalEdgeInsetsZero.bottom;
  double trailing = NSDirectionalEdgeInsetsZero.trailing;
  [v1 setTopSeparatorInsets:NSDirectionalEdgeInsetsZero.top, leading, bottom, trailing];
  [v1 setBottomSeparatorInsets:NSDirectionalEdgeInsetsZero.top, leading, bottom, trailing];

  return v1;
}

BOOL sub_100097B5C(id a1, id a2, unint64_t a3, BOOL *a4)
{
  id v4 = a2;
  objc_opt_class();
  id v5 = ICDynamicCast();

  LOBYTE(v4) = [v5 sectionType] == 0;
  return (char)v4;
}

void sub_100097ED4(uint64_t a1)
{
  id v2 = objc_alloc((Class)NSBatchUpdateRequest);
  id v3 = +[ICAttachment entity];
  id v4 = [v2 initWithEntity:v3];

  id v5 = +[NSPredicate predicateWithFormat:@"typeUTI == %@", ICAttachmentUTTypePaperDocumentScan];
  [v4 setPredicate:v5];

  [v4 setPropertiesToUpdate:&off_10064B688];
  [v4 setResultType:4];
  id v6 = [*(id *)(a1 + 32) workerContext];
  id v13 = 0;
  uint64_t v7 = [v6 executeRequest:v4 error:&v13];
  id v8 = v13;

  uint64_t v9 = os_log_create("com.apple.notes", "LaunchTask");
  long long v10 = v9;
  if (v8)
  {
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_1004D842C((uint64_t)v8, v10);
    }
  }
  else
  {
    id v11 = v9;
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      id v12 = [v7 result];
      *(_DWORD *)uint8_t buf = 138412290;
      uint64_t v15 = v12;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "Updated %@ paper document scan section types", buf, 0xCu);
    }
  }
}

BOOL sub_1000981DC(id a1, NSString *a2, unint64_t a3, BOOL *a4)
{
  return [(NSString *)a2 hasPrefix:@"PPTLaunch", a4];
}

void sub_1000981EC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) URLContexts];
  id v3 = [v2 count];

  if (v3)
  {
    id v4 = *(void **)(a1 + 40);
    id v9 = [*(id *)(a1 + 32) URLContexts];
    [v4 handleOpeningURLContexts:v9 withScene:*(void *)(a1 + 48)];
  }
  else
  {
    id v5 = [*(id *)(a1 + 32) shortcutItem];

    if (v5)
    {
      id v6 = *(void **)(a1 + 56);
      id v9 = [*(id *)(a1 + 32) shortcutItem];
      [v6 performActionForShortcutItem:v9];
    }
    else
    {
      uint64_t v7 = [*(id *)(a1 + 32) cloudKitShareMetadata];

      if (!v7) {
        return;
      }
      id v8 = *(void **)(a1 + 40);
      id v9 = [*(id *)(a1 + 32) cloudKitShareMetadata];
      [v8 handleAcceptingCloudKitShareWithMetadata:v9 withWindowScene:*(void *)(a1 + 48)];
    }
  }
}

void sub_1000982FC(uint64_t a1)
{
  id v1 = *(id *)(a1 + 32);
  performBlockOnMainThread();
}

void sub_100098378(uint64_t a1)
{
  id v2 = +[ICNAWindowSceneReportingManager sharedManager];
  [v2 windowSceneWillBegin:*(void *)(a1 + 32)];
}

void sub_1000987C8(id a1, NSError *a2)
{
  id v2 = a2;
  id v3 = os_log_create("com.apple.notes", "AudioTranscription");
  id v4 = v3;
  if (v2)
  {
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      sub_1004D84D8((uint64_t)v2, v4);
    }
  }
  else if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
  {
    sub_1004D84A4();
  }
}

void sub_100099D58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100099D70(uint64_t result)
{
  *(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = UIBackgroundTaskInvalid;
  return result;
}

void sub_100099D8C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) activityType];
  unsigned int v3 = [v2 isEqual:@"TUUserActivityCreateCallRecording"];

  if (v3)
  {
    objc_opt_class();
    id v4 = [*(id *)(a1 + 32) userInfo];
    id v5 = [v4 objectForKeyedSubscript:@"uniqueProxyIdentifier"];
    id v6 = ICDynamicCast();

    objc_opt_class();
    uint64_t v7 = [*(id *)(a1 + 32) userInfo];
    id v8 = [v7 objectForKeyedSubscript:@"recordingRequestUUID"];
    id v9 = ICDynamicCast();

    if (v6 && v9) {
      +[ICCallNoteCoordinator createNewCallNoteWithNoteID:v6 recordingID:v9 context:*(void *)(a1 + 40)];
    }
  }
  else
  {
    long long v10 = [*(id *)(a1 + 32) activityType];
    unsigned int v11 = [v10 isEqual:@"TUUserActivityFinishedCallRecording"];

    if (!v11) {
      goto LABEL_10;
    }
    objc_opt_class();
    id v12 = [*(id *)(a1 + 32) userInfo];
    id v13 = [v12 objectForKeyedSubscript:@"uniqueProxyIdentifier"];
    id v6 = ICDynamicCast();

    objc_opt_class();
    id v14 = [*(id *)(a1 + 32) userInfo];
    uint64_t v15 = [v14 objectForKeyedSubscript:@"recordingRequestUUID"];
    id v9 = ICDynamicCast();

    if (v6 && v9) {
      +[ICCallNoteCoordinator callRecordingEndedWithNoteID:v6 recordingID:v9 context:*(void *)(a1 + 40)];
    }
  }

LABEL_10:
  id v16 = +[UIApplication sharedApplication];
  [v16 endBackgroundTask:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24)];
}

void sub_10009A558(uint64_t a1, void *a2, void *a3)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  void block[2] = sub_10009A630;
  block[3] = &unk_100625A00;
  id v8 = a2;
  id v9 = a3;
  id v10 = *(id *)(a1 + 32);
  id v5 = v9;
  id v6 = v8;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_10009A630(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  id v4 = [*(id *)(a1 + 48) window];
  unsigned int v3 = [v4 rootViewController];
  +[UIAlertController ic_showAlertWithTitle:v1 message:v2 viewController:v3];
}

void sub_10009A6B0(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  id v5[2] = sub_10009A75C;
  v5[3] = &unk_100625860;
  id v6 = *(id *)(a1 + 32);
  id v7 = v3;
  id v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);
}

void sub_10009A75C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) searchController];
  if (v2) {
    [v2 cancelSearch];
  }
  [*(id *)(a1 + 32) selectObjectWithObjectID:*(void *)(a1 + 40)];
}

void sub_10009A7BC(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_initWeak(&location, *(id *)(a1 + 32));
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  id v5[2] = sub_10009A8D0;
  v5[3] = &unk_100627B98;
  id v4 = *(void **)(a1 + 40);
  id v6 = *(id *)(a1 + 48);
  objc_copyWeak(&v9, &location);
  id v7 = *(id *)(a1 + 56);
  id v8 = *(id *)(a1 + 64);
  [v4 showStartupWithForceWelcomeScreen:1 completion:v5];

  objc_destroyWeak(&v9);
  objc_destroyWeak(&location);
}

void sub_10009A8B4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10009A8D0(uint64_t a1)
{
  if (+[ICAccount hasActiveCloudKitAccountInContext:*(void *)(a1 + 32)])
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
    [WeakRetained windowScene:*(void *)(a1 + 40) userDidAcceptCloudKitShareWithMetadata:*(void *)(a1 + 48)];
  }
}

void sub_10009B698(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  id v4 = [v3 object];

  ICDynamicCast();
  id v9 = (id)objc_claimAutoreleasedReturnValue();

  id v5 = [v9 session];
  id v6 = [v5 role];
  LODWORD(v4) = [v6 isEqualToString:_UIWindowSceneSessionTypeCoverSheet];

  if (v4)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    id v8 = [WeakRetained icWindow];
    [v8 makeKeyWindow];
  }
}

void sub_10009BDEC(uint64_t a1)
{
  uint64_t v2 = os_log_create("com.apple.notes", "LaunchTask");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    sub_1004D8878(v2);
  }

  id v3 = +[NSPredicate predicateWithFormat:@"folder.folderType != %d", 1];
  v45[0] = v3;
  id v4 = +[NSPredicate predicateWithFormat:@"markedForDeletion == YES"];
  v45[1] = v4;
  id v5 = +[NSPredicate predicateWithFormat:@"needsInitialFetchFromCloud == NO"];
  v45[2] = v5;
  id v6 = +[NSArray arrayWithObjects:v45 count:3];
  uint64_t v7 = +[NSCompoundPredicate andPredicateWithSubpredicates:v6];

  uint64_t v28 = (void *)v7;
  uint64_t v29 = a1;
  id v8 = +[ICNote notesMatchingPredicate:v7 context:*(void *)(a1 + 32)];
  id v9 = os_log_create("com.apple.notes", "LaunchTask");
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG)) {
    sub_1004D87EC(v8, v9);
  }

  long long v36 = 0u;
  long long v37 = 0u;
  long long v34 = 0u;
  long long v35 = 0u;
  id v27 = v8;
  id v10 = [v8 copy];
  id v11 = [v10 countByEnumeratingWithState:&v34 objects:v44 count:16];
  if (v11)
  {
    id v12 = v11;
    uint64_t v13 = *(void *)v35;
    id v14 = "com.apple.notes";
    uint64_t v15 = &ICFolderNameMaxLength_ptr;
    id v30 = v10;
    do
    {
      id v16 = 0;
      do
      {
        if (*(void *)v35 != v13) {
          objc_enumerationMutation(v10);
        }
        uint64_t v17 = *(void **)(*((void *)&v34 + 1) + 8 * (void)v16);
        long long v18 = os_log_create(v14, "LaunchTask");
        if (os_log_type_enabled(v18, OS_LOG_TYPE_DEBUG))
        {
          id v22 = [v17 ic_loggingDescription];
          id v33 = [v17 folder];
          long long v32 = [v33 account];
          long long v31 = [v32 trashFolder];
          long long v23 = [v31 identifier];
          id v24 = [v17 folder];
          [v24 account];
          long long v26 = v25 = v14;
          *(_DWORD *)uint8_t buf = 138412802;
          long long v39 = v22;
          __int16 v40 = 2112;
          long long v41 = v23;
          __int16 v42 = 2112;
          id v43 = v26;
          _os_log_debug_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEBUG, "Moving deleted note %@ to the trash %@ in account %@", buf, 0x20u);

          id v14 = v25;
          uint64_t v15 = &ICFolderNameMaxLength_ptr;

          id v10 = v30;
        }

        uint64_t v19 = [v17 account];
        __int16 v20 = [v19 trashFolder];
        [v17 setFolder:v20];

        id v21 = [v15[463] now];
        [v17 setFolderModificationDate:v21];

        [v17 updateChangeCountWithReason:@"Moved to trash"];
        id v16 = (char *)v16 + 1;
      }
      while (v12 != v16);
      id v12 = [v10 countByEnumeratingWithState:&v34 objects:v44 count:16];
    }
    while (v12);
  }

  [*(id *)(v29 + 32) ic_save];
}

void sub_10009C734(uint64_t a1)
{
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  id obj = [*(id *)(a1 + 32) accountsNeedingServerUpgrade];
  id v2 = [obj countByEnumeratingWithState:&v22 objects:v30 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v23;
    do
    {
      id v5 = 0;
      do
      {
        if (*(void *)v23 != v4) {
          objc_enumerationMutation(obj);
        }
        id v6 = *(void **)(*((void *)&v22 + 1) + 8 * (void)v5);
        uint64_t v7 = os_log_create("com.apple.notes", "ServerSideUpdateTask");
        if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
        {
          id v8 = [v6 ic_loggingIdentifier];
          *(_DWORD *)uint8_t buf = 138412290;
          uint64_t v29 = v8;
          _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Starting tasks for account: %@", buf, 0xCu);
        }
        id v9 = [v6 serverSideUpdateTaskLastAttemptedBuild];
        id v10 = [*(id *)(a1 + 32) currentBuild];
        unsigned __int8 v11 = [v9 isEqualToString:v10];

        if ((v11 & 1) == 0)
        {
          [v6 setServerSideUpdateTaskFailureCount:0];
          id v12 = [*(id *)(a1 + 32) currentBuild];
          [v6 setServerSideUpdateTaskLastAttemptedBuild:v12];

          uint64_t v13 = [*(id *)(a1 + 32) currentVersion];
          [v6 setServerSideUpdateTaskLastAttemptedVersion:v13];
        }
        id v14 = [*(id *)(a1 + 32) workerContext];
        unsigned __int8 v15 = [v14 ic_saveWithLogDescription:@"PreRunServerUpgradeTask"];

        if ((v15 & 1) == 0)
        {
          id v16 = os_log_create("com.apple.notes", "ServerSideUpdateTask");
          if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
            sub_1004D88F4(v26, v6, &v27, v16);
          }
        }
        dispatch_group_enter(*(dispatch_group_t *)(a1 + 40));
        uint64_t v17 = [*(id *)(a1 + 32) invernessClientForAccount:v6];
        v20[0] = _NSConcreteStackBlock;
        v20[1] = 3221225472;
        v20[2] = sub_10009CA58;
        v20[3] = &unk_100625AF0;
        long long v18 = *(void **)(a1 + 32);
        id v21 = *(id *)(a1 + 40);
        [v18 runServerSideTaskWithClient:v17 account:v6 completion:v20];

        id v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      id v3 = [obj countByEnumeratingWithState:&v22 objects:v30 count:16];
    }
    while (v3);
  }
}

void sub_10009CA58(uint64_t a1)
{
}

uint64_t sub_10009CA60(uint64_t a1)
{
  id v2 = os_log_create("com.apple.notes", "ServerSideUpdateTask");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    sub_1004D896C(v2, v3, v4, v5, v6, v7, v8, v9);
  }

  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_10009CC9C(id *a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  id v10 = [a1[4] workerContext];
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  _OWORD v16[2] = sub_10009CDDC;
  v16[3] = &unk_100627C10;
  id v17 = v7;
  id v11 = a1[5];
  id v12 = a1[4];
  id v18 = v11;
  id v19 = v12;
  id v20 = v8;
  id v21 = v9;
  id v22 = a1[6];
  id v23 = a1[7];
  id v13 = v9;
  id v14 = v8;
  id v15 = v7;
  [v10 performBlock:v16];
}

uint64_t (**sub_10009CDDC(uint64_t a1))(void)
{
  id v2 = (uint64_t *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = os_log_create("com.apple.notes", "ServerSideUpdateTask");
  uint64_t v5 = v4;
  if (v3)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1004D8C50(a1, v2, v5);
    }

    objc_msgSend(*(id *)(a1 + 40), "setServerSideUpdateTaskFailureCount:", (unsigned __int16)((unsigned __int16)objc_msgSend(*(id *)(a1 + 40), "serverSideUpdateTaskFailureCount") + 1));
    uint64_t v6 = [*(id *)(a1 + 48) workerContext];
    id v7 = v6;
    CFStringRef v8 = @"ServerUpgradeTaskErrorSave";
    goto LABEL_5;
  }
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG)) {
    sub_1004D8B7C(a1, v5);
  }

  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  id v12 = *(id *)(a1 + 64);
  id v13 = [v12 countByEnumeratingWithState:&v27 objects:v33 count:16];
  if (v13)
  {
    id v14 = v13;
    uint64_t v15 = *(void *)v28;
    do
    {
      id v16 = 0;
      do
      {
        if (*(void *)v28 != v15) {
          objc_enumerationMutation(v12);
        }
        uint64_t v17 = *(void *)(*((void *)&v27 + 1) + 8 * (void)v16);
        id v18 = [*(id *)(a1 + 48) cloudContext:v27];
        id v19 = [*(id *)(a1 + 40) identifier];
        id v20 = [*(id *)(a1 + 48) workerContext];
        [v18 ingestCloudKitRecord:v17 forAccountID:v19 forceMerge:1 context:v20];

        id v16 = (char *)v16 + 1;
      }
      while (v14 != v16);
      id v14 = [v12 countByEnumeratingWithState:&v27 objects:v33 count:16];
    }
    while (v14);
  }

  [*(id *)(a1 + 40) setServerSideUpdateTaskContinuationToken:*(void *)(a1 + 56)];
  id v21 = [*(id *)(a1 + 56) length];
  id v22 = *(void **)(a1 + 48);
  if (!v21)
  {
    long long v25 = [v22 currentBuild];
    [*(id *)(a1 + 40) setServerSideUpdateTaskLastCompletedBuild:v25];

    long long v26 = [*(id *)(a1 + 48) currentVersion];
    [*(id *)(a1 + 40) setServerSideUpdateTaskLastCompletedVersion:v26];

    uint64_t v6 = [*(id *)(a1 + 48) workerContext];
    id v7 = v6;
    CFStringRef v8 = @"ServerUpgradeTaskFinalSave";
LABEL_5:
    -[NSObject ic_saveWithLogDescription:](v6, "ic_saveWithLogDescription:", v8, (void)v27);
    goto LABEL_6;
  }
  id v23 = [v22 workerContext];
  unsigned __int8 v24 = [v23 ic_saveWithLogDescription:@"ServerUpgradeTaskIncrementalSave"];

  if (v24) {
    return (uint64_t (**)(void))[*(id *)(a1 + 48) runServerSideTaskWithClient:*(void *)(a1 + 72) account:*(void *)(a1 + 40) completion:*(void *)(a1 + 80)];
  }
  id v7 = os_log_create("com.apple.notes", "ServerSideUpdateTask");
  if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
    sub_1004D8AE0((id *)(a1 + 40), v7);
  }

LABEL_6:
  id v9 = os_log_create("com.apple.notes", "ServerSideUpdateTask");
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    id v10 = [*(id *)(a1 + 40) ic_loggingIdentifier];
    *(_DWORD *)uint8_t buf = 138412290;
    long long v32 = v10;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "Finished tasks for account: %@", buf, 0xCu);
  }
  uint64_t result = *(uint64_t (***)(void))(a1 + 80);
  if (result) {
    return (uint64_t (**)(void))result[2]();
  }
  return result;
}

void sub_10009D234(uint64_t a1)
{
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v2 = [*(id *)(a1 + 32) workerContext];
  uint64_t v3 = +[ICAccount allActiveCloudKitAccountsInContext:v2];

  id v4 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v11;
    do
    {
      for (unint64_t i = 0; i != v5; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v11 != v6) {
          objc_enumerationMutation(v3);
        }
        CFStringRef v8 = *(void **)(*((void *)&v10 + 1) + 8 * i);
        [v8 setServerSideUpdateTaskLastAttemptedBuild:0];
        [v8 setServerSideUpdateTaskLastAttemptedVersion:0];
        [v8 setServerSideUpdateTaskLastCompletedBuild:0];
        [v8 setServerSideUpdateTaskLastCompletedVersion:0];
        [v8 setServerSideUpdateTaskContinuationToken:0];
        [v8 setServerSideUpdateTaskFailureCount:0];
      }
      id v5 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v5);
  }

  id v9 = [*(id *)(a1 + 32) workerContext];
  [v9 ic_saveWithLogDescription:@"ResetServerUpgradeState"];
}

uint64_t sub_10009D4B0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = os_log_create("com.apple.notes", "ServerSideUpdateTask");
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG)) {
    sub_1004D8D08(v3, a1, v4);
  }

  id v5 = [v3 serverSideUpdateTaskLastCompletedBuild];
  uint64_t v6 = [*(id *)(a1 + 32) currentBuild];
  unsigned int v7 = [v5 isEqualToString:v6];

  if (v7)
  {
    CFStringRef v8 = os_log_create("com.apple.notes", "ServerSideUpdateTask");
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      id v9 = [v3 ic_loggingIdentifier];
      int v16 = 138412290;
      uint64_t v17 = v9;
      long long v10 = "Already ran tasks for account %@";
LABEL_10:
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, v10, (uint8_t *)&v16, 0xCu);
    }
  }
  else
  {
    if ([v3 serverSideUpdateTaskFailureCount] < *(unsigned __int16 *)(a1 + 40)
      || ([v3 serverSideUpdateTaskLastAttemptedBuild],
          long long v11 = objc_claimAutoreleasedReturnValue(),
          [*(id *)(a1 + 32) currentBuild],
          long long v12 = objc_claimAutoreleasedReturnValue(),
          unsigned int v13 = [v11 isEqualToString:v12],
          v12,
          v11,
          !v13))
    {
      uint64_t v14 = 1;
      goto LABEL_13;
    }
    CFStringRef v8 = os_log_create("com.apple.notes", "ServerSideUpdateTask");
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      id v9 = [v3 ic_loggingIdentifier];
      int v16 = 138412290;
      uint64_t v17 = v9;
      long long v10 = "Reached failure limit for account %@";
      goto LABEL_10;
    }
  }

  uint64_t v14 = 0;
LABEL_13:

  return v14;
}

void sub_10009DA84(uint64_t a1)
{
  id v2 = objc_alloc((Class)NSBatchUpdateRequest);
  id v3 = +[ICAttachment entity];
  id v4 = [v2 initWithEntity:v3];

  id v5 = +[NSPredicate predicateWithFormat:@"typeUTI == %@ || typeUTI == %@", ICAttachmentUTTypeInlineDrawingV1, ICAttachmentUTTypeInlineDrawing];
  [v4 setPredicate:v5];

  [v4 setPropertiesToUpdate:&off_10064B6B0];
  [v4 setResultType:4];
  uint64_t v6 = [*(id *)(a1 + 32) workerContext];
  id v13 = 0;
  unsigned int v7 = [v6 executeRequest:v4 error:&v13];
  id v8 = v13;

  id v9 = os_log_create("com.apple.notes", "LaunchTask");
  long long v10 = v9;
  if (v8)
  {
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_1004D8E50((uint64_t)v8, v10);
    }
  }
  else
  {
    long long v11 = v9;
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      long long v12 = [v7 result];
      *(_DWORD *)uint8_t buf = 138412290;
      uint64_t v15 = v12;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "Updated %@ drawing attachment section types", buf, 0xCu);
    }
  }
}

void sub_10009DE60(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (v4)
  {
    id v5 = os_log_create("com.apple.notes", "UI");
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_1004D8EC8(a1, (uint64_t)v4, v5);
    }
  }
}

id sub_10009E660(uint64_t a1, void *a2)
{
  id v3 = [a2 mutableCopy];
  id v4 = +[UITraitCollection traitCollectionWithPreferredContentSizeCategory:UIContentSizeCategoryMedium];
  id v5 = +[UIFont preferredFontForTextStyle:*(void *)(a1 + 32) compatibleWithTraitCollection:v4];
  uint64_t v6 = [v5 ic_fontWithSingleLineA];

  [v3 setObject:v6 forKeyedSubscript:NSFontAttributeName];
  id v7 = [v3 copy];

  return v7;
}

void sub_10009EB94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10009EBB4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v1 = [WeakRetained syncMessage];
  id v2 = [v1 actions];
  id v3 = [v2 firstObject];
  [v3 performAction];
}

void sub_10009EFE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10009F008(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = [WeakRetained delegate];
  id v3 = objc_loadWeakRetained(v1);
  [v2 summaryViewLockNowPressed:v3];
}

void sub_1000A00C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v7 - 64), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000A00E4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000A00F4(uint64_t a1)
{
}

uint64_t sub_1000A00FC(uint64_t a1, void *a2)
{
  id v3 = [a2 accessibilityLabel];
  if ([v3 length]) {
    [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) addObject:v3];
  }
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);

  return v4;
}

void sub_1000A0330(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v7 - 64), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000A0354(uint64_t a1, void *a2)
{
  id v4 = a2;
  unint64_t v5 = (unint64_t)[v4 accessibilityTraits];
  if ((UIAccessibilityTraitButton & v5) != 0 || (UIAccessibilityTraitLink & v5) != 0)
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a2);
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
  }
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);

  return v6;
}

void sub_1000A10A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1000A1198(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1000A1510(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000A1530(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000A1540(uint64_t a1)
{
}

void sub_1000A1548(uint64_t a1)
{
  id v2 = +[ICCollaborationController sharedInstance];
  id v3 = [*(id *)(a1 + 32) identifier];
  id v4 = [v2 containerForAccountID:v3];

  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = [*(id *)(a1 + 32) managedObjectContext];
  uint64_t v7 = +[ICCollaborationController serverShareCheckingParent:v5 managedObjectContext:v6];

  id v8 = os_log_create("com.apple.notes", "Collaboration");
  BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG);
  if (v7)
  {
    if (v9) {
      sub_1004D9010((uint64_t)v7, (id *)(a1 + 40), v8);
    }

    long long v10 = [[ICCloudSharingController alloc] initWithShare:v7 container:v4];
    uint64_t v11 = *(void *)(*(void *)(a1 + 56) + 8);
    long long v12 = *(void **)(v11 + 40);
    *(void *)(v11 + 40) = v10;

    [*(id *)(a1 + 48) trackCollaborationActionAddPeopleForObject:*(void *)(a1 + 40) share:v7 isInviting:1];
  }
  else
  {
    if (v9) {
      sub_1004D8F88((id *)(a1 + 40));
    }

    id v13 = [ICCloudSharingController alloc];
    id v19 = _NSConcreteStackBlock;
    uint64_t v20 = 3221225472;
    id v21 = sub_1000A176C;
    id v22 = &unk_100627D50;
    id v23 = *(id *)(a1 + 32);
    id v14 = *(id *)(a1 + 40);
    uint64_t v15 = *(void *)(a1 + 48);
    id v24 = v14;
    uint64_t v25 = v15;
    id v26 = v4;
    int v16 = [(ICCloudSharingController *)v13 initWithPreparationHandler:&v19];
    uint64_t v17 = *(void *)(*(void *)(a1 + 56) + 8);
    id v18 = *(void **)(v17 + 40);
    *(void *)(v17 + 40) = v16;
  }
  [*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) setAvailablePermissions:15 v19, v20, v21, v22];
}

void sub_1000A176C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = [*(id *)(a1 + 32) managedObjectContext];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_1000A185C;
  void v10[3] = &unk_100627D28;
  id v11 = *(id *)(a1 + 32);
  id v6 = *(id *)(a1 + 40);
  uint64_t v7 = *(void *)(a1 + 48);
  id v8 = *(void **)(a1 + 56);
  id v12 = v6;
  uint64_t v13 = v7;
  id v15 = v4;
  id v14 = v8;
  id v9 = v4;
  [v5 performBlock:v10];
}

void sub_1000A185C(uint64_t a1)
{
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  id v5[2] = sub_1000A1928;
  v5[3] = &unk_100627D28;
  id v2 = *(void **)(a1 + 32);
  id v6 = *(id *)(a1 + 40);
  id v3 = *(id *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 48);
  id v7 = v3;
  uint64_t v8 = v4;
  id v10 = *(id *)(a1 + 64);
  id v9 = *(id *)(a1 + 56);
  [v2 performBlockInPersonaContext:v5];
}

void sub_1000A1928(uint64_t a1)
{
  id v2 = +[ICCollaborationController newShareForObject:*(void *)(a1 + 32)];
  id v3 = +[ICCollaborationController sharedInstance];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1000A1A34;
  v7[3] = &unk_100627D00;
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = *(id *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  id v8 = v5;
  uint64_t v9 = v6;
  id v10 = *(id *)(a1 + 32);
  id v12 = *(id *)(a1 + 64);
  id v11 = *(id *)(a1 + 56);
  [v3 prepareShare:v2 forObject:v4 qualityOfService:25 completionHandler:v7];
}

void sub_1000A1A34(uint64_t a1, void *a2, void *a3)
{
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_1000A1B38;
  v9[3] = &unk_100627CD8;
  id v10 = a2;
  id v11 = a3;
  id v5 = *(void **)(a1 + 32);
  uint64_t v6 = *(void **)(a1 + 48);
  uint64_t v12 = *(void *)(a1 + 40);
  id v13 = v6;
  id v15 = *(id *)(a1 + 64);
  id v14 = *(id *)(a1 + 56);
  id v7 = v11;
  id v8 = v10;
  [v5 performBlockInPersonaContext:v9];
}

uint64_t sub_1000A1B38(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2 && !*(void *)(a1 + 40))
  {
    [*(id *)(a1 + 48) trackCollaborationActionFirstShareForObject:*(void *)(a1 + 56)];
    uint64_t v2 = *(void *)(a1 + 32);
  }
  [*(id *)(a1 + 48) setNewlyCreatedShare:v2];
  id v3 = *(uint64_t (**)(void))(*(void *)(a1 + 72) + 16);

  return v3();
}

void sub_1000A1DA8(uint64_t a1)
{
  objc_opt_class();
  uint64_t v2 = [*(id *)(a1 + 32) cloudSharingControllerForObject:*(void *)(a1 + 40)];
  id v3 = ICCheckedDynamicCast();

  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_1000A1FF4;
  v14[3] = &unk_100625888;
  v14[4] = *(void *)(a1 + 32);
  id v15 = *(id *)(a1 + 48);
  id v16 = *(id *)(a1 + 72);
  [v3 setDismissed:v14];
  [v3 setDelegate:*(void *)(a1 + 32)];
  uint64_t v4 = +[ICCollaborationController sharedInstance];
  id v5 = [v3 share];
  [v4 updateRootRecordMapWithShare:v5];

  if (+[UIDevice ic_isiPhone] && (uint64_t v6 = *(void *)(a1 + 56)) != 0)
  {
    id v7 = [v3 popoverPresentationController];
    [v7 setBarButtonItem:v6];

    id v8 = [v3 popoverPresentationController];
    [v8 _setIgnoreBarButtonItemSiblings:1];
  }
  else
  {
    [v3 setModalPresentationStyle:2];
  }
  if (([*(id *)(a1 + 40) isSharedRootObject] & 1) == 0)
  {
    objc_opt_class();
    uint64_t v9 = [*(id *)(a1 + 40) sharedRootObject];
    id v10 = ICDynamicCast();

    id v11 = [v10 title];
    [v3 _setRootFolderTitle:v11];

    uint64_t v12 = [*(id *)(a1 + 40) title];
    [v3 _setFolderSubitemName:v12];

    id v13 = objc_alloc_init((Class)UIImage);
    [v3 _setHeaderSecondaryImage:v13];
  }
  [*(id *)(a1 + 64) presentViewController:v3 animated:1 completion:*(void *)(a1 + 80)];
}

uint64_t sub_1000A1FF4(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) newlyCreatedShare];

  if (v2)
  {
    id v3 = +[NSMutableDictionary dictionary];
    uint64_t v4 = [*(id *)(a1 + 32) newlyCreatedShare];
    [v3 ic_setNonNilObject:v4 forNonNilKey:ICNotesCloudContextDidFetchShareNotificationShareKey];

    [v3 ic_setNonNilObject:*(void *)(a1 + 40) forNonNilKey:ICNotesCloudContextDidFetchShareNotificationAccountIDKey];
    id v5 = +[NSNotificationCenter defaultCenter];
    uint64_t v6 = ICNotesCloudContextDidFetchShareNotification;
    uint64_t v7 = *(void *)(a1 + 32);
    id v8 = [v3 copy];
    [v5 postNotificationName:v6 object:v7 userInfo:v8];

    [*(id *)(a1 + 32) setNewlyCreatedShare:0];
  }
  uint64_t result = *(void *)(a1 + 48);
  if (result)
  {
    id v10 = *(uint64_t (**)(void))(result + 16);
    return v10();
  }
  return result;
}

void sub_1000A2334(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  void block[2] = sub_1000A2428;
  block[3] = &unk_100627D78;
  id v2 = *(id *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void **)(a1 + 48);
  id v6 = v2;
  uint64_t v7 = v3;
  id v8 = v4;
  id v11 = *(id *)(a1 + 72);
  id v9 = *(id *)(a1 + 56);
  id v10 = *(id *)(a1 + 64);
  id v12 = *(id *)(a1 + 80);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_1000A2428(uint64_t a1)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  _OWORD v4[2] = sub_1000A250C;
  v4[3] = &unk_100627DA0;
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void **)(a1 + 48);
  void v4[4] = *(void *)(a1 + 40);
  id v5 = v3;
  id v8 = *(id *)(a1 + 72);
  id v6 = *(id *)(a1 + 56);
  id v7 = *(id *)(a1 + 64);
  id v9 = *(id *)(a1 + 80);
  [v2 performBlockInPersonaContext:v4];
}

void sub_1000A250C(uint64_t a1)
{
  objc_opt_class();
  id v2 = [*(id *)(a1 + 32) cloudSharingControllerForObject:*(void *)(a1 + 40)];
  uint64_t v3 = ICCheckedDynamicCast();

  id v19 = _NSConcreteStackBlock;
  uint64_t v20 = 3221225472;
  id v21 = sub_1000A2800;
  id v22 = &unk_100625B40;
  uint64_t v23 = *(void *)(a1 + 32);
  id v24 = *(id *)(a1 + 64);
  [v3 setDismissed:&v19];
  [v3 setDelegate:*(void *)(a1 + 32), v19, v20, v21, v22, v23];
  uint64_t v4 = +[ICCollaborationController sharedInstance];
  id v5 = [v3 share];
  [v4 updateRootRecordMapWithShare:v5];

  if (+[UIDevice ic_isiPhone] && (uint64_t v6 = *(void *)(a1 + 48)) != 0)
  {
    id v7 = [v3 popoverPresentationController];
    [v7 setBarButtonItem:v6];

    id v8 = [v3 popoverPresentationController];
    [v8 setPermittedArrowDirections:3];

    id v9 = [v3 popoverPresentationController];
    [v9 _setIgnoreBarButtonItemSiblings:1];
  }
  else
  {
    [v3 setModalPresentationStyle:2];
  }
  if ([*(id *)(a1 + 40) isSharedViaICloudFolder])
  {
    objc_opt_class();
    id v10 = [*(id *)(a1 + 40) sharedRootObject];
    id v11 = ICDynamicCast();

    id v12 = [v11 title];
    [v3 _setRootFolderTitle:v12];

    id v13 = [*(id *)(a1 + 40) title];
    [v3 _setFolderSubitemName:v13];

    id v14 = objc_alloc_init((Class)UIImage);
    [v3 _setHeaderSecondaryImage:v14];
  }
  [*(id *)(a1 + 32) populateParticipantDetailsForCloudSharingController:v3];
  id v15 = +[NSBundle mainBundle];
  id v16 = [v15 localizedStringForKey:@"Hide Alerts" value:&stru_10063F3D8 table:0];
  [v3 _setPrimaryAuxiliarySwitchTitle:v16];

  uint64_t v17 = [*(id *)(a1 + 32) note];
  id v18 = [v17 recordID];
  [v3 _setPrimaryAuxiliarySwitchState:[ICShareNotifier shouldPreventNotificationsForRecordID:v18]];

  [*(id *)(a1 + 56) presentViewController:v3 animated:1 completion:*(void *)(a1 + 72)];
}

uint64_t sub_1000A2800(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) newlyCreatedShare];

  if (v2)
  {
    uint64_t v3 = +[NSMutableDictionary dictionary];
    uint64_t v4 = [*(id *)(a1 + 32) newlyCreatedShare];
    [v3 ic_setNonNilObject:v4 forNonNilKey:ICNotesCloudContextDidFetchShareNotificationShareKey];

    id v5 = [*(id *)(a1 + 32) note];
    uint64_t v6 = [v5 account];
    id v7 = [v6 identifier];
    [v3 ic_setNonNilObject:v7 forNonNilKey:ICNotesCloudContextDidFetchShareNotificationAccountIDKey];

    id v8 = +[NSNotificationCenter defaultCenter];
    uint64_t v9 = ICNotesCloudContextDidFetchShareNotification;
    uint64_t v10 = *(void *)(a1 + 32);
    id v11 = [v3 copy];
    [v8 postNotificationName:v9 object:v10 userInfo:v11];

    [*(id *)(a1 + 32) setNewlyCreatedShare:0];
  }
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    id v13 = *(uint64_t (**)(void))(result + 16);
    return v13();
  }
  return result;
}

void sub_1000A2C7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va1, a7);
  va_start(va, a7);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1000A2CAC(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = [a3 code];
  if (v4 == (id)32)
  {
    uint64_t v11 = +[NSBundle mainBundle];
    uint64_t v12 = [v11 localizedStringForKey:@"Invitations Not Sent" value:&stru_10063F3D8 table:0];
    uint64_t v13 = *(void *)(*(void *)(a1 + 32) + 8);
    uint64_t v14 = *(void **)(v13 + 40);
    *(void *)(v13 + 40) = v12;

    uint64_t v9 = +[NSBundle mainBundle];
    CFStringRef v10 = @"One or more accounts can’t accept this shared note.";
  }
  else
  {
    if (v4 != (id)29) {
      return;
    }
    id v5 = +[NSBundle mainBundle];
    uint64_t v6 = [v5 localizedStringForKey:@"Maximum Invitations Reached" value:&stru_10063F3D8 table:0];
    uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
    uint64_t v8 = *(void **)(v7 + 40);
    *(void *)(v7 + 40) = v6;

    uint64_t v9 = +[NSBundle mainBundle];
    CFStringRef v10 = @"You’ve invited the maximum number of people. Reduce the number of people you’re sharing with before adding more.";
  }
  id v18 = v9;
  uint64_t v15 = [v9 localizedStringForKey:v10 value:&stru_10063F3D8 table:0];
  uint64_t v16 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v17 = *(void **)(v16 + 40);
  *(void *)(v16 + 40) = v15;
}

void sub_1000A3058(uint64_t a1, int a2)
{
  if (a2)
  {
    uint64_t v24 = 0;
    uint64_t v25 = &v24;
    uint64_t v26 = 0x3032000000;
    long long v27 = sub_1000A1530;
    long long v28 = sub_1000A1540;
    id v3 = objc_alloc((Class)NSUserActivity);
    id v29 = [v3 initWithActivityType:ICNotesEditNoteUserActivityType];
    id v4 = [objc_alloc((Class)ICNoteUserActivityState) initWithNote:*(void *)(a1 + 32)];
    ICNotesUpdateUserActivityForViewingNoteWithState();
    [(id)v25[5] becomeCurrent];
    id v5 = [[ICSendNoteActivityViewController alloc] initWithNote:*(void *)(a1 + 32) presentingViewController:*(void *)(a1 + 40) eventReporter:*(void *)(a1 + 48)];
    uint64_t v6 = [*(id *)(a1 + 32) account];
    -[ICSendNoteActivityViewController setIsContentManaged:](v5, "setIsContentManaged:", [v6 isManaged]);

    v22[0] = 0;
    v22[1] = v22;
    v22[2] = 0x3032000000;
    v22[3] = sub_1000A1530;
    uint8_t v22[4] = sub_1000A1540;
    id v23 = 0;
    uint64_t v7 = [*(id *)(a1 + 32) managedObjectContext];
    v19[0] = _NSConcreteStackBlock;
    v19[1] = 3221225472;
    v19[2] = sub_1000A3418;
    v19[3] = &unk_100626040;
    id v21 = v22;
    id v20 = *(id *)(a1 + 32);
    [v7 performBlockAndWait:v19];

    objc_initWeak(&location, v5);
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472;
    _OWORD v16[2] = sub_1000A3464;
    v16[3] = &unk_100627DF0;
    objc_copyWeak(&v17, &location);
    void v16[4] = &v24;
    [(ICSendNoteActivityViewController *)v5 setCompletionWithItemsHandler:v16];
    if (+[UIDevice ic_isVision]) {
      uint64_t v8 = -2;
    }
    else {
      uint64_t v8 = 7;
    }
    [(ICSendNoteActivityViewController *)v5 setModalPresentationStyle:v8];
    uint64_t v9 = [(ICSendNoteActivityViewController *)v5 popoverPresentationController];
    [v9 setSourceItem:*(void *)(a1 + 56)];
    [v9 setSourceView:*(void *)(a1 + 64)];
    [v9 setSourceRect:*(double *)(a1 + 80), *(double *)(a1 + 88), *(double *)(a1 + 96), *(double *)(a1 + 104)];
    [v9 setPermittedArrowDirections:3];
    [v9 _setIgnoreBarButtonItemSiblings:1];
    CFStringRef v10 = *(void **)(a1 + 40);
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_1000A35A8;
    v12[3] = &unk_100627E18;
    uint64_t v15 = v22;
    uint64_t v11 = v5;
    uint64_t v13 = v11;
    id v14 = *(id *)(a1 + 72);
    [v10 ic_replacePresentedViewControllerWithViewController:v11 animated:1 completion:v12];

    objc_destroyWeak(&v17);
    objc_destroyWeak(&location);

    _Block_object_dispose(v22, 8);
    _Block_object_dispose(&v24, 8);
  }
}

void sub_1000A33C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  objc_destroyWeak(v29);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v30 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1000A3418(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) serverShareCheckingParent];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_1000A3464(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8 = (id *)(a1 + 40);
  id v9 = a5;
  id v10 = a2;
  id WeakRetained = objc_loadWeakRetained(v8);
  if ((a3 & 1) == 0)
  {
    uint64_t v11 = +[ICCollaborationController sharedInstance];
    uint64_t v12 = [WeakRetained note];
    uint64_t v13 = [v12 objectID];
    [v11 removeShareIfNeededWithOwnedObjectID:v13 countParticipants:1 completionHandler:0];
  }
  [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) invalidate];
  if (objc_opt_respondsToSelector()) {
    id v14 = [WeakRetained isCollaborationSelected];
  }
  else {
    id v14 = 0;
  }
  uint64_t v15 = [WeakRetained note];
  +[ICCollaborationController saveActivityType:v10 isCollaborationSelected:v14 error:v9 completed:a3 forNote:v15];
}

uint64_t sub_1000A35A8(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
  uint64_t v3 = [*(id *)(a1 + 32) note];
  +[ICCollaborationController trackShare:v2 forNote:v3];

  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    id v5 = *(uint64_t (**)(void))(result + 16);
    return v5();
  }
  return result;
}

void sub_1000A3A6C(uint64_t a1, void *a2)
{
  id v3 = a2;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  void block[2] = sub_1000A3B74;
  block[3] = &unk_100627E68;
  id v4 = *(void **)(a1 + 40);
  void block[4] = *(void *)(a1 + 32);
  id v9 = v4;
  id v10 = *(id *)(a1 + 48);
  id v11 = *(id *)(a1 + 56);
  id v5 = *(id *)(a1 + 64);
  long long v6 = *(_OWORD *)(a1 + 96);
  long long v15 = *(_OWORD *)(a1 + 80);
  long long v16 = v6;
  id v12 = v5;
  id v13 = v3;
  id v14 = *(id *)(a1 + 72);
  id v7 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

id sub_1000A3B74(uint64_t a1)
{
  return [*(id *)(a1 + 32) showFolderActivityViewControllerWithFolder:*(void *)(a1 + 40) presentingViewController:*(void *)(a1 + 48) sourceItem:*(void *)(a1 + 56) sourceView:*(void *)(a1 + 64) sourceRect:*(double *)(a1 + 88) itemProvider:*(double *)(a1 + 96) completion:*(double *)(a1 + 104)];
}

void sub_1000A3B94(uint64_t a1)
{
  id v3 = objc_alloc_init((Class)NSItemProvider);
  uint64_t v2 = +[ICCollaborationController sharedInstance];
  [v2 registerShareForObject:*(void *)(a1 + 32) itemProvider:v3 generateThumbnails:1];

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_1000A3C1C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [*(id *)(a1 + 32) managedObjectContext];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1000A3CF4;
  v6[3] = &unk_100625CC8;
  id v7 = *(id *)(a1 + 32);
  id v8 = v3;
  id v9 = *(id *)(a1 + 40);
  id v5 = v3;
  [v4 performBlock:v6];
}

void sub_1000A3CF4(uint64_t a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  _DWORD v3[2] = sub_1000A3DA8;
  v3[3] = &unk_100627EB8;
  uint64_t v2 = *(void *)(a1 + 32);
  id v4 = *(id *)(a1 + 40);
  id v5 = *(id *)(a1 + 48);
  +[ICDeleteDecisionController deleteSharesInFolder:v2 completion:v3];
}

void sub_1000A3DA8(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = os_log_create("com.apple.notes", "Collaboration");
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1004D9160();
    }

    uint64_t v5 = *(void *)(a1 + 40);
    if (v5) {
      (*(void (**)(void))(v5 + 16))();
    }
  }
  else
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    void block[2] = sub_1000A3EA0;
    block[3] = &unk_100625988;
    id v7 = *(id *)(a1 + 32);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

uint64_t sub_1000A3EA0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1000A3EB0(void *a1)
{
  id v3 = objc_alloc_init((Class)NSItemProvider);
  uint64_t v2 = +[ICCollaborationController sharedInstance];
  [v2 registerShareForObject:a1[4] itemProvider:v3 generateThumbnails:1 sharePreparationHandler:a1[5]];

  (*(void (**)(void))(a1[6] + 16))();
}

void sub_1000A42F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000A4320(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) shareTitle];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_1000A436C(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0)
  {
    id v6 = +[ICCollaborationController sharedInstance];
    uint64_t v5 = [*(id *)(a1 + 32) objectID];
    [v6 removeShareIfNeededWithOwnedObjectID:v5 countParticipants:1 completionHandler:0];
  }
}

void sub_1000A4630(uint64_t a1)
{
  uint64_t v2 = os_log_create("com.apple.notes", "Collaboration");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    sub_1004D91C8(a1);
  }

  uint64_t v3 = +[ICCollaborationController sharedInstance];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  id v5[2] = sub_1000A4720;
  v5[3] = &unk_100625988;
  uint64_t v4 = *(void *)(a1 + 32);
  id v6 = *(id *)(a1 + 40);
  [v3 fetchShareIfNecessaryForObject:v4 completionHandler:v5];
}

void sub_1000A4720(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  void block[2] = sub_1000A47A4;
  block[3] = &unk_100625988;
  id v2 = *(id *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

uint64_t sub_1000A47A4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1000A47BC(uint64_t a1)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_1000A4850;
  v2[3] = &unk_1006267D8;
  uint64_t v1 = *(void *)(a1 + 32);
  id v3 = *(id *)(a1 + 40);
  +[ICDeleteDecisionController deleteSharesInFolder:v1 completion:v2];
}

void sub_1000A4850(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    uint64_t v4 = os_log_create("com.apple.notes", "Collaboration");
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1004D9160();
    }
  }
  else
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    void block[2] = sub_1000A4924;
    block[3] = &unk_100625988;
    id v6 = *(id *)(a1 + 32);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
    uint64_t v4 = v6;
  }
}

uint64_t sub_1000A4924(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1000A5214(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) note];
  id v3 = v2;
  if (v2)
  {
    id v4 = v2;
  }
  else
  {
    id v4 = [*(id *)(a1 + 32) folder];
  }
  id v10 = v4;

  objc_opt_class();
  uint64_t v5 = [v10 sharedRootObject];
  id v6 = ICDynamicCast();

  if (v6)
  {
    id v7 = *(void **)(a1 + 32);
    id v8 = [v7 presentingViewController];
    id v9 = [*(id *)(a1 + 32) presentingBarButtonItem];
    [v7 showCloudSharingControllerForFolder:v6 presentingViewController:v8 popoverBarButtonItem:v9 presented:0 dismissed:0];
  }
}

void sub_1000A56E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location, id a18)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a18);
  _Unwind_Resume(a1);
}

void sub_1000A570C(uint64_t a1)
{
  id v2 = objc_alloc((Class)ICPaperStyleSheetCollectionViewController);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = [WeakRetained note];
  uint64_t v5 = (int)[v4 paperStyleType];
  id v6 = objc_loadWeakRetained((id *)(a1 + 32));
  id v9 = [v2 initWithInitialPaperStyleType:v5 delegate:v6];

  id v7 = [v9 ic_embedInNavigationControllerForModalPresentation];
  id v8 = objc_loadWeakRetained((id *)(a1 + 40));
  [v8 ic_replacePresentedViewControllerWithViewController:v7 animated:1 completion:0];
}

id sub_1000A5EF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 40);
  if (v4)
  {
    uint64_t v5 = [*(id *)(a1 + 32) activityType];
    (*(void (**)(uint64_t, BOOL, void *))(v4 + 16))(v4, a2 == 0, v5);
  }
  id v6 = *(void **)(a1 + 32);

  return [v6 activityDidFinish:a2 == 0];
}

id sub_1000A6178()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)qword_1006AA188;
  uint64_t v7 = qword_1006AA188;
  if (!qword_1006AA188)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    _DWORD v3[2] = sub_1000A63B0;
    v3[3] = &unk_1006265A8;
    void v3[4] = &v4;
    sub_1000A63B0((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_1000A6244(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class sub_1000A63B0(uint64_t a1)
{
  v4[0] = 0;
  if (!qword_1006AA190)
  {
    v4[1] = _NSConcreteStackBlock;
    _OWORD v4[2] = 3221225472;
    v4[3] = sub_1000A64F4;
    void v4[4] = &unk_100627688;
    void v4[5] = v4;
    long long v5 = off_100627F50;
    uint64_t v6 = 0;
    qword_1006AA190 = _sl_dlopen();
    id v2 = (void *)v4[0];
    if (!qword_1006AA190)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("LPLinkMetadata");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    id v2 = (void *)sub_1004D9348();
LABEL_8:
    free(v2);
  }
  qword_1006AA188 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_1000A64F4()
{
  uint64_t result = _sl_dlopen();
  qword_1006AA190 = result;
  return result;
}

uint64_t sub_1000A6EC8(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) containsObject:a2] ^ 1;
}

void sub_1000A7048()
{
  uint64_t v0 = os_log_create("com.apple.notes", "Migration");
  if (os_log_type_enabled(v0, OS_LOG_TYPE_DEBUG)) {
    sub_1004D9370();
  }

  id v1 = +[ICNoteContext sharedContext];
  id v2 = [v1 workerManagedObjectContext];

  uint64_t v4 = +[ICDeviceMigrationState deviceMigrationStatesByAccountIDInContext:v2];
  id v3 = v4;
  performBlockOnMainThreadAndWait();
}

id sub_1000A7150(uint64_t a1)
{
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  id v2 = [*(id *)(a1 + 32) allKeys];
  id v3 = [v2 countByEnumeratingWithState:&v18 objects:v24 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v19;
    do
    {
      for (unint64_t i = 0; i != v4; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v19 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void *)(*((void *)&v18 + 1) + 8 * i);
        id v8 = [*(id *)(a1 + 32) objectForKeyedSubscript:v7];
        id v9 = [v8 shortValue];

        if ((v9 - 2) >= 5)
        {
          if (v9 >= 2)
          {
            if (v9 == 7)
            {
              id v13 = os_log_create("com.apple.notes", "Migration");
              if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG)) {
                sub_1004D93A4(&v16, v17, v13);
              }
            }
          }
          else
          {
            id v11 = os_log_create("com.apple.notes", "Migration");
            if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
            {
              id v14 = [*(id *)(a1 + 40) stringFromMigrationState:v9];
              *(_DWORD *)uint8_t buf = 138412290;
              id v23 = v14;
              _os_log_debug_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "Migration state is (%@). Starting migration controller", buf, 0xCu);
            }
            id v12 = [*(id *)(a1 + 40) sharedController];
          }
        }
        else
        {
          id v10 = [*(id *)(a1 + 40) sharedController];
          [v10 continueMigrationForICloudAccountID:v7];
        }
      }
      id v4 = [v2 countByEnumeratingWithState:&v18 objects:v24 count:16];
    }
    while (v4);
  }

  return +[ICMigrationController migrateLocalAccountIfNecessary];
}

void sub_1000A73F4(id a1)
{
  id v1 = objc_alloc_init(ICMigrationController);
  id v2 = (void *)qword_1006AA198;
  qword_1006AA198 = (uint64_t)v1;
}

void sub_1000A7930(uint64_t a1)
{
  id v1 = +[ICAccount localAccountInContext:*(void *)(a1 + 32)];
  if (v1)
  {
    id v2 = v1;
    +[ICMigrationUtilities updateLegacyAccountMigrationStateForModernAccount:v1];
    id v1 = v2;
  }
}

void sub_1000A8A94(uint64_t a1)
{
  id v2 = os_log_create("com.apple.notes", "Migration");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    sub_1004D9550();
  }

  id v3 = *(id *)(a1 + 40);
  performBlockOnMainThreadAndWait();
}

id sub_1000A8B54(uint64_t a1)
{
  id result = [(id)objc_opt_class() currentMigrationStateForAccountID:*(void *)(a1 + 40)];
  if ((result - 2) <= 2)
  {
    [*(id *)(a1 + 32) startRepeatingImportTimer];
    id v3 = *(void **)(a1 + 32);
    uint64_t v4 = *(void *)(a1 + 40);
    return _[v3 performFinalRefreshForICloudAccountID:v4];
  }
  return result;
}

void sub_1000A8F6C(uint64_t a1, int a2)
{
  uint64_t v4 = os_log_create("com.apple.notes", "Migration");
  uint64_t v5 = v4;
  if (a2)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG)) {
      sub_1004D9724();
    }

    [*(id *)(a1 + 32) setDidMigrateLocalAccount:1];
    uint64_t v5 = +[ICNoteContext sharedContext];
    [v5 addOrDeleteLocalAccountIfNecessary];
  }
  else if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Failed to import the local account", v6, 2u);
  }
}

void sub_1000A928C(uint64_t a1, int a2)
{
  uint64_t v4 = os_log_create("com.apple.notes", "Migration");
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG);
  if (a2)
  {
    if (v5) {
      sub_1004D97C0();
    }

    [(id)objc_opt_class() setCurrentMigrationState:6 forAccountID:*(void *)(a1 + 40)];
    [*(id *)(a1 + 32) performFinalPushToCloudKitForAccountID:*(void *)(a1 + 40)];
  }
  else
  {
    if (v5) {
      sub_1004D97F4();
    }
  }
}

void sub_1000A9724(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,id a30)
{
}

void sub_1000A9758(id *a1)
{
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  [WeakRetained isCancelled];

  id v4 = a1[5];
  id v3 = a1[4];
  performBlockOnMainThreadAndWait();
}

void sub_1000A9818(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2) {
    (*(void (**)(uint64_t, void))(v2 + 16))(v2, *(unsigned __int8 *)(a1 + 48));
  }
  int v3 = *(unsigned __int8 *)(a1 + 48);
  id v4 = os_log_create("com.apple.notes", "Migration");
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG);
  if (v3)
  {
    if (v5) {
      sub_1004D9914(a1);
    }
  }
  else if (v5)
  {
    sub_1004D9890(a1);
  }
}

id sub_1000A99F4(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) operationQueue];
  [v2 waitUntilAllOperationsAreFinished];

  if (*(void *)(a1 + 40))
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    void block[2] = sub_1000A9AC4;
    block[3] = &unk_100625988;
    id v5 = *(id *)(a1 + 40);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
  [*(id *)(a1 + 32) resetNotificationObservers];
  +[NSObject cancelPreviousPerformRequestsWithTarget:*(void *)(a1 + 32)];
  return [*(id *)(a1 + 32) resetRetryCounts];
}

uint64_t sub_1000A9AC4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1000A9B48(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) repeatingImportTimer];

  if (v2)
  {
    int v3 = [*(id *)(a1 + 32) repeatingImportTimer];
    [v3 invalidate];
  }
  id v4 = +[NSTimer scheduledTimerWithTimeInterval:*(void *)(a1 + 32) target:"startICloudImportOperationIfNecessary" selector:0 userInfo:1 repeats:10.0];
  [*(id *)(a1 + 32) setRepeatingImportTimer:v4];
}

void sub_1000AA1EC(uint64_t a1, uint64_t a2)
{
  id v4 = os_log_create("com.apple.notes", "Migration");
  id v5 = v4;
  if (a2)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint8_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Failed to perform final push to CloudKit during migration.", buf, 2u);
    }

    [*(id *)(a1 + 32) retrySelector:"performFinalPushToCloudKitForAccountID:" accountID:*(void *)(a1 + 40)];
  }
  else
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG)) {
      sub_1004D9A74();
    }

    [*(id *)(a1 + 32) clearRetryCountForSelector:"performFinalPushToCloudKitForAccountID:" accountID:*(void *)(a1 + 40)];
    id v6 = *(id *)(a1 + 40);
    performBlockOnMainThreadAndWait();
  }
}

id sub_1000AA318(uint64_t a1)
{
  uint64_t v2 = objc_opt_class();
  uint64_t v3 = *(void *)(a1 + 40);

  return [v2 setCurrentMigrationState:7 forAccountID:v3];
}

void sub_1000AA644(id *a1)
{
  if (([a1[4] isValidObject] & 1) == 0)
  {
    id v4 = os_log_create("com.apple.notes", "Migration");
    if (!os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_14;
    }
    *(_WORD *)uint8_t buf = 0;
    uint64_t v7 = "Can't push migration state because CloudKit account isn't a valid object";
LABEL_13:
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, v7, buf, 2u);
    goto LABEL_14;
  }
  uint64_t v2 = [a1[4] userRecordName];

  if (!v2)
  {
    id v4 = os_log_create("com.apple.notes", "Migration");
    if (!os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_14;
    }
    *(_WORD *)uint8_t buf = 0;
    uint64_t v7 = "Can't push migration state because CloudKit account has no user record name";
    goto LABEL_13;
  }
  unsigned __int8 v3 = [a1[5] isValidObject];
  id v4 = os_log_create("com.apple.notes", "Migration");
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);
  if ((v3 & 1) == 0)
  {
    if (!v5) {
      goto LABEL_14;
    }
    *(_WORD *)uint8_t buf = 0;
    uint64_t v7 = "Can't push migration state because device migration state object is not valid";
    goto LABEL_13;
  }
  if (v5)
  {
    *(_WORD *)uint8_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Pushing migration state", buf, 2u);
  }

  id v6 = dispatch_get_global_queue(2, 0);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  void block[2] = sub_1000AA844;
  block[3] = &unk_100625A00;
  id v9 = a1[4];
  id v10 = a1[6];
  id v11 = a1[5];
  dispatch_async(v6, block);

  id v4 = v9;
LABEL_14:
}

void sub_1000AA844(id *a1)
{
  uint64_t v2 = [a1[4] managedObjectContext];
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  _DWORD v3[2] = sub_1000AA90C;
  v3[3] = &unk_100625A00;
  id v4 = a1[5];
  id v5 = a1[4];
  id v6 = a1[6];
  [v2 performBlock:v3];
}

void sub_1000AA90C(void *a1)
{
  id v1 = (void *)a1[4];
  uint64_t v2 = a1[6];
  v4[0] = a1[5];
  v4[1] = v2;
  unsigned __int8 v3 = +[NSArray arrayWithObjects:v4 count:2];
  [v1 pushCloudObjects:v3 operationGroupName:@"SaveMigrationState" completionHandler:&stru_100628080];
}

void sub_1000AA9A4(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  unsigned __int8 v3 = os_log_create("com.apple.notes", "Migration");
  id v4 = v3;
  if (v2)
  {
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      sub_1004D9AA8();
    }
  }
  else if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Finished pushing migration state", v5, 2u);
  }
}

void sub_1000AAA44(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    uint64_t v7 = os_log_create("com.apple.notes", "Migration");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1004D9B1C();
    }
  }
  else
  {
    id v8 = [*(id *)(a1 + 32) managedObjectContext];
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_1000AAB64;
    v9[3] = &unk_100625888;
    id v10 = *(id *)(a1 + 32);
    id v11 = v5;
    id v12 = *(id *)(a1 + 40);
    [v8 performBlockAndWait:v9];

    uint64_t v7 = v10;
  }
}

uint64_t sub_1000AAB64(uint64_t a1)
{
  if (([*(id *)(a1 + 32) isDeleted] & 1) == 0)
  {
    uint64_t v2 = [*(id *)(a1 + 32) userRecordName];
    if (!v2)
    {
      unsigned __int8 v3 = *(void **)(a1 + 40);
      if (!v3) {
        goto LABEL_6;
      }
      uint64_t v2 = [v3 recordID];
      id v4 = [v2 recordName];
      [*(id *)(a1 + 32) setUserRecordName:v4];
    }
  }
LABEL_6:
  id v5 = *(uint64_t (**)(void))(*(void *)(a1 + 48) + 16);

  return v5();
}

void sub_1000AB1EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000AB210(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000AB220(uint64_t a1)
{
}

void sub_1000AB228(uint64_t a1, int a2)
{
  uint64_t v4 = a1 + 40;
  uint64_t v5 = [(id)objc_opt_class() ensureLegacyAccountIsValid:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)];
  uint64_t v6 = *(void *)(*(void *)v4 + 8);
  uint64_t v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;

  id v8 = os_log_create("com.apple.notes", "Migration");
  id v9 = v8;
  if (a2)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG)) {
      sub_1004D9BE8(a1 + 40);
    }

    [*(id *)(a1 + 32) disableLegacyAccount:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)];
  }
  else
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      id v10 = [*(id *)(*(void *)(*(void *)v4 + 8) + 40) objectIdentifier];
      int v11 = 138412290;
      id v12 = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Failed to copy notes from legacy account (%@) to iCloud account", (uint8_t *)&v11, 0xCu);
    }
  }
}

void sub_1000ABC64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000ABC7C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v6 = [*(id *)(a1 + 48) legacyAccountContext];
  uint64_t v3 = +[ICLegacyAccountUtilities legacyAccountForICloudACAccount:v2 context:v6];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

void sub_1000AC01C(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  id v6 = os_log_create("com.apple.notes", "Migration");
  uint64_t v7 = v6;
  if (a2)
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG)) {
      sub_1004D9E10(a1);
    }
  }
  else if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
  {
    sub_1004D9E94(a1, (uint64_t)v5, v7);
  }
}

id sub_1000ACB04(uint64_t a1, void *a2)
{
  return [a2 handleDarwinNotificationName:];
}

id sub_1000ACB0C()
{
  uint64_t v4 = 0;
  id v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)qword_1006AA1A8;
  uint64_t v7 = qword_1006AA1A8;
  if (!qword_1006AA1A8)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    _DWORD v3[2] = sub_1000AD1D0;
    v3[3] = &unk_1006265A8;
    void v3[4] = &v4;
    sub_1000AD1D0((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_1000ACBD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000AD004(id a1)
{
  id v1 = os_log_create("com.apple.notes", "Migration");
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "Migration took too long and our background task expired. This is not good.", v2, 2u);
  }
}

void sub_1000AD078(uint64_t a1)
{
  uint64_t v2 = os_log_create("com.apple.notes", "Migration");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    sub_1004DA1BC();
  }

  uint64_t v3 = +[UIApplication sharedApplication];
  [v3 endBackgroundTask:*(void *)(a1 + 32)];
}

Class sub_1000AD1D0(uint64_t a1)
{
  v4[0] = 0;
  if (!qword_1006AA1B0)
  {
    v4[1] = _NSConcreteStackBlock;
    void v4[2] = 3221225472;
    v4[3] = sub_1000AD314;
    void v4[4] = &unk_100627688;
    void v4[5] = v4;
    long long v5 = off_100628138;
    uint64_t v6 = 0;
    qword_1006AA1B0 = _sl_dlopen();
    uint64_t v2 = (void *)v4[0];
    if (!qword_1006AA1B0)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("DADConnection");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    uint64_t v2 = (void *)sub_1004DA1F0();
LABEL_8:
    free(v2);
  }
  qword_1006AA1A8 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_1000AD314()
{
  uint64_t result = _sl_dlopen();
  qword_1006AA1B0 = result;
  return result;
}

uint64_t sub_1000AD388(uint64_t a1)
{
  return *(void *)(a1 + 32);
}

void sub_1000AE2CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000AE2E8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000AE2F8(uint64_t a1)
{
}

void sub_1000AE300(uint64_t a1)
{
  objc_opt_class();
  uint64_t v2 = [*(id *)(a1 + 32) noteBrowseViewController];
  uint64_t v3 = [v2 modernViewContext];
  uint64_t v4 = [v3 objectWithID:*(void *)(a1 + 40)];
  ICCheckedDynamicCast();
  id v8 = (id)objc_claimAutoreleasedReturnValue();

  uint64_t v5 = +[ICAppURLUtilities appURLForNote:v8];
  uint64_t v6 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;
}

void sub_1000AE3D0(uint64_t a1)
{
  objc_opt_class();
  uint64_t v2 = [*(id *)(a1 + 32) noteBrowseViewController];
  uint64_t v3 = [v2 legacyViewContext];
  uint64_t v4 = [v3 objectWithID:*(void *)(a1 + 40)];
  ICCheckedDynamicCast();
  id v8 = (id)objc_claimAutoreleasedReturnValue();

  uint64_t v5 = +[ICAppURLUtilities appURLForHTMLNote:v8];
  uint64_t v6 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;
}

void sub_1000AE54C(uint64_t a1)
{
  uint64_t v2 = +[ICCloudContext sharedContext];
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  _DWORD v3[2] = sub_1000AE5F0;
  v3[3] = &unk_100625988;
  id v4 = *(id *)(a1 + 32);
  [v2 cancelEverythingWithCompletionHandler:v3];
}

void sub_1000AE5F0(uint64_t a1)
{
  uint64_t v2 = +[ICNoteContext sharedContext];
  [v2 purgeEverything];

  uint64_t v3 = +[ICAppDelegate sharedInstance];
  id v4 = [v3 viewControllerManagers];
  [v4 enumerateObjectsUsingBlock:&stru_100628170];

  +[ICCache purgeAllCaches];
  +[ICLRUCache purgeAllCaches];
  uint64_t v5 = *(void **)(a1 + 32);
  if (v5)
  {
    id v6 = v5;
    performBlockOnMainThreadAndWait();
  }
}

void sub_1000AE6EC(id a1, ICViewControllerManager *a2, unint64_t a3, BOOL *a4)
{
  id v4 = [(ICViewControllerManager *)a2 visibleViewsUndoManager];
  [v4 removeAllActions];
}

uint64_t sub_1000AE730(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1000AE86C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000AE884(id a1)
{
  id v1 = +[ICNoteContext sharedContext];
  [v1 deleteEverything];
}

void sub_1000AE8CC(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(a1 + 56);
  id v4 = a2;
  uint64_t v5 = +[ICCloudContext notesZoneID];
  id v12 = v5;
  id v6 = +[NSArray arrayWithObjects:&v12 count:1];
  uint64_t v7 = [v4 identifier];

  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1000AEA1C;
  v8[3] = &unk_1006281D8;
  long long v11 = *(_OWORD *)(a1 + 48);
  id v9 = *(id *)(a1 + 32);
  id v10 = *(id *)(a1 + 40);
  [v3 deleteZonesWithZoneIDs:v6 accountID:v7 completionHandler:v8];
}

id sub_1000AEA1C(uint64_t a1)
{
  id v2 = *(id *)(a1 + 56);
  objc_sync_enter(v2);
  ++*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
  objc_sync_exit(v2);

  unint64_t v3 = *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
  id result = [*(id *)(a1 + 32) count];
  if (v3 >= (unint64_t)result)
  {
    uint64_t v5 = +[ICAppDelegate sharedInstance];
    id v6 = [v5 viewControllerManagers];
    [v6 enumerateObjectsUsingBlock:&stru_1006281B0];

    +[ICCache purgeAllCaches];
    +[ICLRUCache purgeAllCaches];
    id result = *(id *)(a1 + 40);
    if (result)
    {
      uint64_t v7 = (uint64_t (*)(void))*((void *)result + 2);
      return (id)v7();
    }
  }
  return result;
}

void sub_1000AEB0C(id a1, ICViewControllerManager *a2, unint64_t a3, BOOL *a4)
{
  id v4 = [(ICViewControllerManager *)a2 visibleViewsUndoManager];
  [v4 removeAllActions];
}

void sub_1000AEC80(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  id v5[2] = sub_1000AED58;
  v5[3] = &unk_100628278;
  id v6 = v2;
  id v7 = *(id *)(a1 + 40);
  id v8 = *(id *)(a1 + 48);
  long long v4 = *(_OWORD *)(a1 + 56);
  id v3 = (id)v4;
  long long v9 = v4;
  [v6 cancelEverythingWithCompletionHandler:v5];
}

void sub_1000AED58(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  id v5[2] = sub_1000AEE30;
  v5[3] = &unk_100628250;
  uint64_t v9 = *(void *)(a1 + 64);
  id v6 = v2;
  id v7 = *(id *)(a1 + 48);
  id v8 = *(id *)(a1 + 56);
  [v6 deleteRecordZonesWithZoneIDs:v3 accountID:v4 markZonesAsUserPurged:1 completionHandler:v5];
}

void sub_1000AEE30(uint64_t a1, uint64_t a2)
{
  if (a2) {
    [*(id *)(a1 + 56) showAlertForError:a2 title:@"Error deleting zone(s)"];
  }
  uint64_t v3 = *(void **)(a1 + 32);
  uint64_t v4 = +[ICCloudContext notesZoneID];
  long long v11 = v4;
  uint64_t v5 = +[NSArray arrayWithObjects:&v11 count:1];
  uint64_t v6 = *(void *)(a1 + 40);
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_1000AEF70;
  v9[3] = &unk_100628228;
  long long v8 = *(_OWORD *)(a1 + 48);
  id v7 = (id)v8;
  long long v10 = v8;
  [v3 fetchRecordZoneChangesForZoneIDs:v5 accountID:v6 reason:@"DebugMenu-DeleteEverything" completionHandler:v9];
}

void sub_1000AEF70(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  if (v3 && [v3 code] != (id)28) {
    [*(id *)(a1 + 40) showAlertForError:v4 title:@"Error syncing after deleting zone(s)"];
  }
  uint64_t v5 = *(void **)(a1 + 32);
  if (v5)
  {
    id v6 = v5;
    performBlockOnMainThreadAndWait();
  }
}

uint64_t sub_1000AF030(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1000AF168(uint64_t a1)
{
  id v8 = +[UIAlertController alertControllerWithTitle:*(void *)(a1 + 32) message:*(void *)(a1 + 40) preferredStyle:1];
  id v1 = +[NSBundle mainBundle];
  id v2 = [v1 localizedStringForKey:@"OK" value:&stru_10063F3D8 table:0];
  id v3 = +[UIAlertAction actionWithTitle:v2 style:0 handler:0];
  [v8 addAction:v3];

  uint64_t v4 = +[UIApplication sharedApplication];
  uint64_t v5 = [v4 delegate];
  id v6 = [v5 window];
  id v7 = [v6 rootViewController];
  [v7 presentViewController:v8 animated:1 completion:0];
}

void sub_1000AF518(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000AF530(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [v3 identifier];
  +[ICMigrationController setCurrentMigrationState:0 forAccountID:v4];
  [v3 setDidChooseToMigrate:0];
  [v3 setDidFinishMigration:0];
  [v3 setDidMigrateOnMac:0];
  [v3 updateChangeCountWithReason:@"Reset migration"];
  uint64_t v5 = +[ICAccountUtilities sharedInstance];
  id v6 = [v5 accountStore];
  id v7 = [v6 accountWithIdentifier:v4];

  if (v7)
  {
    id v8 = [v3 didChooseToMigrate];
    id v9 = [v3 didFinishMigration];
    id v10 = [v3 didMigrateOnMac];
    long long v11 = [v7 accountStore];
    +[ICMigrationUtilities saveDidChooseToMigrate:v8 didFinishMigration:v9 didMigrateOnMac:v10 toACAccount:v7 inStore:v11 completionHandler:0];
  }
  else
  {
    id v12 = os_log_create("com.apple.notes", "Internal");
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_1004DA25C((uint64_t)v4, v12, v13, v14, v15, v16, v17, v18);
    }
  }
  long long v19 = *(void **)(a1 + 72);
  long long v20 = +[ICCloudContext sharedContext];
  long long v21 = [v20 allZoneIDs];
  v23[0] = _NSConcreteStackBlock;
  v23[1] = 3221225472;
  v23[2] = sub_1000AF7A8;
  v23[3] = &unk_100628378;
  id v24 = v4;
  long long v29 = *(_OWORD *)(a1 + 64);
  id v25 = *(id *)(a1 + 32);
  id v26 = *(id *)(a1 + 40);
  id v27 = *(id *)(a1 + 48);
  id v28 = *(id *)(a1 + 56);
  id v22 = v4;
  [v19 deleteZonesWithZoneIDs:v21 accountID:v22 completionHandler:v23];
}

void sub_1000AF7A8(uint64_t a1)
{
  id v2 = os_log_create("com.apple.notes", "Internal");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    sub_1004DA2C8();
  }

  id v3 = +[ICCloudContext sharedContext];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  void v4[2] = sub_1000AF8E4;
  v4[3] = &unk_100628350;
  id v5 = *(id *)(a1 + 32);
  long long v10 = *(_OWORD *)(a1 + 72);
  id v6 = *(id *)(a1 + 40);
  id v7 = *(id *)(a1 + 48);
  id v8 = *(id *)(a1 + 56);
  id v9 = *(id *)(a1 + 64);
  [v3 syncWithReason:@"DebugMenu-ResetMigration" completionHandler:v4];
}

void sub_1000AF8E4(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = +[ICCloudContext errorsFromError:v3];
  unsigned __int8 v5 = [v4 ic_containsObjectPassingTest:&stru_1006282B8];

  id v6 = os_log_create("com.apple.notes", "Internal");
  id v7 = v6;
  if (!v3 || (v5 & 1) != 0)
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG)) {
      sub_1004DA340();
    }
  }
  else
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1004DA3B8();
    }

    uint64_t v16 = _NSConcreteStackBlock;
    uint64_t v17 = 3221225472;
    uint64_t v18 = sub_1000AFB34;
    long long v19 = &unk_100626EA8;
    uint64_t v21 = *(void *)(a1 + 80);
    long long v20 = v3;
    performBlockOnMainThreadAndWait();
    id v7 = v20;
  }

  id v8 = *(id *)(a1 + 80);
  objc_sync_enter(v8);
  uint64_t v9 = --*(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 24);
  objc_sync_exit(v8);

  if (!v9)
  {
    long long v10 = [*(id *)(a1 + 40) managedObjectContext];
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    void v11[2] = sub_1000AFB48;
    v11[3] = &unk_100628328;
    id v12 = *(id *)(a1 + 48);
    id v13 = *(id *)(a1 + 32);
    id v14 = *(id *)(a1 + 56);
    id v15 = *(id *)(a1 + 64);
    [v10 performBlockAndWait:v11];
  }
}

BOOL sub_1000AFB10(id a1, NSError *a2, unint64_t a3, BOOL *a4)
{
  return (id)[(NSError *)a2 code] == (id)28;
}

id sub_1000AFB34(uint64_t a1)
{
  return [*(id *)(a1 + 40) showAlertForError:*(void *)(a1 + 32) title:@"Error syncing after deleting zones"];
}

void sub_1000AFB48(uint64_t a1)
{
  id v2 = +[ICNoteContext sharedContext];
  [v2 purgeEverything];

  +[ICMigrationController setDidMigrateLocalAccount:0];
  +[ICMigrationController setDidChooseToMigrateLocalAccount:0];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_1000AFD00;
  void v10[3] = &unk_1006282E0;
  id v3 = *(void **)(a1 + 32);
  id v11 = *(id *)(a1 + 40);
  [v3 enumerateObjectsUsingBlock:v10];
  performBlockOnMainThreadAndWait();
  uint64_t v4 = +[ICNoteContext sharedContext];
  unsigned __int8 v5 = [v4 managedObjectContext];
  id v6 = +[ICAccount localAccountInContext:v5];

  if (v6)
  {
    id v7 = +[NSNotificationCenter defaultCenter];
    [v7 postNotificationName:ICMigrationStateWillChangeNotification object:0];

    +[ICAccount deleteAccount:v6];
    id v8 = +[ICNoteContext sharedContext];
    [v8 save];

    uint64_t v9 = +[NSNotificationCenter defaultCenter];
    [v9 postNotificationName:ICMigrationStateDidChangeNotification object:0];
  }
  if (*(void *)(a1 + 48)) {
    (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
  }
}

void sub_1000AFD00(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 setDidChooseToMigrate:0];
  [v3 setDidFinishMigration:0];
  [v3 setDidMigrateOnMac:0];
  [v3 updateChangeCountWithReason:@"Reset migration"];
  uint64_t v4 = +[ICAccountUtilities sharedInstance];
  unsigned __int8 v5 = [v4 accountStore];
  id v6 = [v5 accountWithIdentifier:*(void *)(a1 + 32)];

  if (v6)
  {
    id v7 = [v3 didChooseToMigrate];
    id v8 = [v3 didFinishMigration];
    id v9 = [v3 didMigrateOnMac];
    long long v10 = [v6 accountStore];
    +[ICMigrationUtilities saveDidChooseToMigrate:v7 didFinishMigration:v8 didMigrateOnMac:v9 toACAccount:v6 inStore:v10 completionHandler:0];
  }
  else
  {
    id v11 = os_log_create("com.apple.notes", "Internal");
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      sub_1004DA440();
    }
  }
}

void sub_1000AFE50(id a1)
{
  id v1 = +[NSNotificationCenter defaultCenter];
  [v1 postNotificationName:ICMigrationStateDidChangeNotification object:0];
}

void sub_1000AFF74(uint64_t a1)
{
  id v2 = +[ICCloudContext sharedContext];
  [v2 enumerateAllCloudObjectsInContext:*(void *)(a1 + 32) batchSize:10 saveAfterBatch:1 usingBlock:&stru_1006283C0];
}

void sub_1000AFFDC(id a1, ICCloudObject *a2, BOOL *a3)
{
  id v3 = a2;
  objc_opt_class();
  ICCheckedDynamicCast();
  id v4 = (id)objc_claimAutoreleasedReturnValue();

  if (([v4 markedForDeletion] & 1) == 0) {
    [v4 updateChangeCountWithReason:@"Manually updated change count"];
  }
}

void sub_1000B00AC(id a1, NSManagedObjectContext *a2)
{
  id v2 = a2;
  id v3 = +[ICCloudContext sharedContext];
  [v3 enumerateAllCloudObjectsInContext:v2 batchSize:10 saveAfterBatch:1 usingBlock:&stru_100628420];
}

void sub_1000B0120(id a1, ICCloudObject *a2, BOOL *a3)
{
  id v3 = a2;
  objc_opt_class();
  ICCheckedDynamicCast();
  id v4 = (id)objc_claimAutoreleasedReturnValue();

  [v4 setNeedsToBeFetchedFromCloud:1];
}

void sub_1000B02E0(uint64_t a1)
{
  id v2 = +[NSFetchRequest fetchRequestWithEntityName:ICNoteEntityName];
  id v3 = +[NSPredicate predicateWithFormat:@"account == nil"];
  [v2 setPredicate:v3];

  id v4 = *(void **)(a1 + 32);
  id v24 = 0;
  unsigned __int8 v5 = [v4 executeFetchRequest:v2 error:&v24];
  id v6 = v24;
  if (v6)
  {
    id v7 = os_log_create("com.apple.notes", "Internal");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1004DA4AC((uint64_t)v6, v7, v8, v9, v10, v11, v12, v13);
    }
  }
  id v14 = os_log_create("com.apple.notes", "Internal");
  if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)uint8_t buf = 138412290;
    id v27 = v5;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, "Deleting invalid notes: %@", buf, 0xCu);
  }

  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  id v15 = v5;
  id v16 = [v15 countByEnumeratingWithState:&v20 objects:v25 count:16];
  if (v16)
  {
    id v17 = v16;
    uint64_t v18 = *(void *)v21;
    do
    {
      long long v19 = 0;
      do
      {
        if (*(void *)v21 != v18) {
          objc_enumerationMutation(v15);
        }
        [*(id *)(a1 + 32) deleteObject:*(void *)(*((void *)&v20 + 1) + 8 * (void)v19) v20];
        long long v19 = (char *)v19 + 1;
      }
      while (v17 != v19);
      id v17 = [v15 countByEnumeratingWithState:&v20 objects:v25 count:16];
    }
    while (v17);
  }
}

void sub_1000B0624(uint64_t a1)
{
  v13[0] = 0;
  v13[1] = v13;
  void v13[2] = 0x2020000000;
  v13[3] = 0;
  id v2 = [*(id *)(a1 + 32) managedObjectContext];
  id v3 = +[ICAccount allCloudKitAccountsInContext:v2];

  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1000B075C;
  v7[3] = &unk_100628448;
  id v4 = *(id *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 48);
  id v8 = v4;
  uint64_t v11 = v13;
  uint64_t v12 = v5;
  id v6 = v3;
  id v9 = v6;
  id v10 = *(id *)(a1 + 40);
  [v6 enumerateObjectsUsingBlock:v7];

  _Block_object_dispose(v13, 8);
}

void sub_1000B0744(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_1000B075C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 identifier];
  uint64_t v34 = 0;
  long long v35 = &v34;
  uint64_t v36 = 0x3032000000;
  long long v37 = sub_1000B0B28;
  uint64_t v38 = sub_1000B0B38;
  id v39 = 0;
  uint64_t v5 = [*(id *)(a1 + 32) managedObjectContext];
  v31[0] = _NSConcreteStackBlock;
  v31[1] = 3221225472;
  v31[2] = sub_1000B0B40;
  v31[3] = &unk_100626040;
  id v33 = &v34;
  id v19 = v3;
  id v32 = v19;
  [v5 performBlockAndWait:v31];

  id v6 = +[NSMutableSet set];
  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  id v7 = (id)v35[5];
  id v8 = [v7 countByEnumeratingWithState:&v27 objects:v40 count:16];
  if (v8)
  {
    uint64_t v9 = *(void *)v28;
    do
    {
      for (unint64_t i = 0; i != v8; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v28 != v9) {
          objc_enumerationMutation(v7);
        }
        uint64_t v11 = *(void *)(*((void *)&v27 + 1) + 8 * i);
        if (([v6 containsObject:v11] & 1) == 0)
        {
          uint64_t v12 = [*(id *)(a1 + 32) managedObjectContext];
          v23[0] = _NSConcreteStackBlock;
          v23[1] = 3221225472;
          v23[2] = sub_1000B0BA8;
          v23[3] = &unk_100625A78;
          void v23[4] = v11;
          id v24 = v4;
          id v25 = *(id *)(a1 + 32);
          id v26 = v6;
          [v12 performBlockAndWait:v23];
        }
      }
      id v8 = [v7 countByEnumeratingWithState:&v27 objects:v40 count:16];
    }
    while (v8);
  }

  uint64_t v13 = [*(id *)(a1 + 32) managedObjectContext];
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472;
  v20[2] = sub_1000B0F04;
  v20[3] = &unk_100625860;
  id v14 = v6;
  id v21 = v14;
  id v15 = v4;
  id v22 = v15;
  [v13 performBlockAndWait:v20];

  id v16 = *(id *)(a1 + 64);
  objc_sync_enter(v16);
  ++*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24);
  objc_sync_exit(v16);

  unint64_t v17 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24);
  if (v17 >= (unint64_t)[*(id *)(a1 + 40) count])
  {
    uint64_t v18 = *(void *)(a1 + 48);
    if (v18) {
      (*(void (**)(void))(v18 + 16))();
    }
  }

  _Block_object_dispose(&v34, 8);
}

void sub_1000B0AF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
}

uint64_t sub_1000B0B28(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000B0B38(uint64_t a1)
{
}

void sub_1000B0B40(uint64_t a1)
{
  id v5 = [*(id *)(a1 + 32) notes];
  uint64_t v2 = [v5 allObjects];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_1000B0BA8(id *a1)
{
  uint64_t v1 = a1 + 4;
  id v26 = [a1[4] legacyContentHashAtImport];
  if ([v26 length])
  {
    uint64_t v2 = [*v1 folder];
    uint64_t v3 = [*v1 account];
    id v4 = [v3 trashFolder];

    if (v2 != v4)
    {
      id v5 = os_log_create("com.apple.notes", "Internal");
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG)) {
        sub_1004DA518((uint64_t)a1, v1, v5);
      }

      id v6 = [a1[4] textStorage];
      id v7 = [v6 string];
      id v8 = [v7 ic_md5];

      uint64_t v9 = [a1[4] legacyContentHashAtImport];
      id v10 = +[NSPredicate predicateWithFormat:@"legacyContentHashAtImport == %@", v9];
      v34[0] = v10;
      uint64_t v11 = +[NSPredicate predicateWithFormat:@"SELF != %@", a1[4]];
      v34[1] = v11;
      uint64_t v12 = +[NSArray arrayWithObjects:v34 count:2];

      id v27 = (id)v12;
      uint64_t v13 = +[NSCompoundPredicate andPredicateWithSubpredicates:v12];
      id v14 = [a1[6] managedObjectContext];
      id v15 = +[ICNote notesMatchingPredicate:v13 context:v14];

      long long v31 = 0u;
      long long v32 = 0u;
      long long v29 = 0u;
      long long v30 = 0u;
      id v16 = v15;
      id v17 = [v16 countByEnumeratingWithState:&v29 objects:v33 count:16];
      if (v17)
      {
        id v18 = v17;
        uint64_t v19 = *(void *)v30;
        do
        {
          for (unint64_t i = 0; i != v18; unint64_t i = (char *)i + 1)
          {
            if (*(void *)v30 != v19) {
              objc_enumerationMutation(v16);
            }
            id v21 = *(void **)(*((void *)&v29 + 1) + 8 * i);
            id v22 = [v21 textStorage];
            long long v23 = [v22 string];
            id v24 = [v23 ic_md5];
            unsigned int v25 = [v24 isEqualToString:v8];

            if (v25) {
              [a1[7] addObject:v21];
            }
          }
          id v18 = [v16 countByEnumeratingWithState:&v29 objects:v33 count:16];
        }
        while (v18);
      }
    }
  }
  else
  {
  }
}

void sub_1000B0F04(uint64_t a1)
{
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  id v1 = *(id *)(a1 + 32);
  id v2 = [v1 countByEnumeratingWithState:&v18 objects:v26 count:16];
  if (v2)
  {
    id v4 = v2;
    uint64_t v5 = *(void *)v19;
    *(void *)&long long v3 = 138412546;
    long long v16 = v3;
    do
    {
      for (unint64_t i = 0; i != v4; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v19 != v5) {
          objc_enumerationMutation(v1);
        }
        id v7 = *(void **)(*((void *)&v18 + 1) + 8 * i);
        id v8 = [v7 folder:v16];
        uint64_t v9 = [v7 account];
        id v10 = [v9 trashFolder];

        if (v8 != v10)
        {
          uint64_t v11 = os_log_create("com.apple.notes", "Internal");
          if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
          {
            uint64_t v12 = *(void *)(a1 + 40);
            uint64_t v13 = [v7 loggingDescription];
            *(_DWORD *)uint8_t buf = v16;
            uint64_t v23 = v12;
            __int16 v24 = 2112;
            unsigned int v25 = v13;
            _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "Deleting duplicate in account ID %@: %@", buf, 0x16u);
          }
          id v14 = [v7 account];
          id v15 = [v14 trashFolder];
          [v7 setFolder:v15];

          [v7 updateChangeCountWithReason:@"Deleted migrated duplicate"];
        }
      }
      id v4 = [v1 countByEnumeratingWithState:&v18 objects:v26 count:16];
    }
    while (v4);
  }
}

void sub_1000B1170(id a1)
{
  id v1 = objc_alloc_init(ICBrowseAttachmentsDragAndDropDelegate);
  id v2 = (void *)qword_1006AA1B8;
  qword_1006AA1B8 = (uint64_t)v1;
}

id sub_1000B166C(id a1, id a2)
{
  id v2 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v3 = v2;
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0
      && ([v2 object],
          id v4 = objc_claimAutoreleasedReturnValue(),
          objc_opt_class(),
          char isKindOfClass = objc_opt_isKindOfClass(),
          v4,
          (isKindOfClass & 1) != 0))
    {
      objc_opt_class();
      id v6 = ICDynamicCast();
      id v3 = [v6 object];
    }
    else
    {
      id v3 = 0;
    }
  }

  return v3;
}

id sub_1000B1754(id a1, id a2)
{
  id v2 = a2;
  objc_opt_class();
  id v3 = ICDynamicCast();

  return v3;
}

id sub_1000B17B0(id a1, id a2)
{
  id v2 = a2;
  if (+[ICDeleteDecision isHTMLNote:v2])
  {
    id v3 = v2;
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0
      && ([v2 object],
          id v4 = objc_claimAutoreleasedReturnValue(),
          unsigned int v5 = +[ICDeleteDecision isHTMLNote:v4],
          v4,
          v5))
    {
      objc_opt_class();
      id v6 = ICDynamicCast();
      id v3 = [v6 object];
    }
    else
    {
      id v3 = 0;
    }
  }

  return v3;
}

id sub_1000B188C(id a1, id a2)
{
  id v2 = a2;
  if (+[ICDeleteDecision isHTMLFolder:v2]) {
    id v3 = v2;
  }
  else {
    id v3 = 0;
  }
  id v4 = v3;

  return v4;
}

CFStringRef sub_1000B19E0(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 0xC) {
    return @"ICDeleteDecisionAdditionalStepNone";
  }
  else {
    return off_1006285E8[a1 - 1];
  }
}

void sub_1000B250C(uint64_t a1, void *a2)
{
  id v5 = a2;
  objc_opt_class();
  id v3 = ICDynamicCast();
  unsigned int v4 = [v3 markedForDeletion];

  if (v4) {
    [*(id *)(a1 + 32) removeObject:v5];
  }
}

void sub_1000B2590(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 && ([v3 isSharedViaICloud] & 1) == 0) {
    [*(id *)(a1 + 32) addObject:v3];
  }
}

void sub_1000B2608(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  ICDynamicCast();
  id v6 = (id)objc_claimAutoreleasedReturnValue();

  unsigned int v4 = *(void **)(a1 + 32);
  id v5 = +[ICDeleteDecision decisionObjectsForFolder:v6];
  [v4 addObjectsFromArray:v5];
}

void sub_1000B26A4(id *a1, void *a2)
{
  id v20 = a2;
  if (([v20 isSharedViaICloud] & 1) == 0) {
    [a1[4] setContainsUnsharedObjects:1];
  }
  objc_opt_class();
  id v3 = ICDynamicCast();
  unsigned int v4 = [v3 folder];
  unsigned int v5 = [v4 isTrashFolder];

  if (v5) {
    [a1[5] addObject:v20];
  }
  if ([v20 isPasswordProtected])
  {
    id v6 = a1 + 6;
LABEL_7:
    [*v6 addObject:v20];
    id v7 = v20;
    goto LABEL_8;
  }
  if ([v20 isSharedViaICloud])
  {
    if ([v20 isSharedRootObject])
    {
      unsigned int v8 = [v20 isOwnedByCurrentUser];
      objc_opt_class();
      char isKindOfClass = objc_opt_isKindOfClass();
      if (v8)
      {
        if (isKindOfClass)
        {
          id v6 = a1 + 7;
          goto LABEL_7;
        }
        objc_opt_class();
        char v17 = objc_opt_isKindOfClass();
        id v7 = v20;
        if (v17)
        {
          id v6 = a1 + 8;
          goto LABEL_7;
        }
      }
      else
      {
        if (isKindOfClass)
        {
          id v6 = a1 + 9;
          goto LABEL_7;
        }
        objc_opt_class();
        char v18 = objc_opt_isKindOfClass();
        id v7 = v20;
        if (v18)
        {
          id v6 = a1 + 10;
          goto LABEL_7;
        }
      }
    }
    else
    {
      if ([v20 isSharedReadOnly])
      {
        id v6 = a1 + 11;
        goto LABEL_7;
      }
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        id v6 = a1 + 12;
        goto LABEL_7;
      }
      objc_opt_class();
      char v19 = objc_opt_isKindOfClass();
      id v7 = v20;
      if (v19)
      {
        id v6 = a1 + 13;
        goto LABEL_7;
      }
    }
  }
  else
  {
    objc_opt_class();
    id v10 = ICDynamicCast();
    unsigned int v11 = [v10 isSmartFolder];

    if (v11)
    {
      id v6 = a1 + 14;
      goto LABEL_7;
    }
    objc_opt_class();
    uint64_t v12 = ICDynamicCast();
    uint64_t v13 = [v12 visibleNotesIncludingChildFolders];
    id v14 = [v13 count];

    if (v14)
    {
      id v6 = a1 + 15;
      goto LABEL_7;
    }
    objc_opt_class();
    id v15 = ICDynamicCast();
    unsigned int v16 = [v15 isTrashFolder];

    id v7 = v20;
    if (v16)
    {
      id v6 = a1 + 16;
      goto LABEL_7;
    }
  }
LABEL_8:
}

BOOL sub_1000B2918(id a1, ICFolder *a2, BOOL *a3)
{
  return [(ICFolder *)a2 isDeletable] ^ 1;
}

void sub_1000B2AC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000B2ADC(uint64_t a1, void *a2)
{
  id v7 = a2;
  objc_opt_class();
  id v3 = ICDynamicCast();
  unsigned int v4 = [v3 isDeleted];

  objc_opt_class();
  unsigned int v5 = ICDynamicCast();
  id v6 = v5;
  if (v5 && ([v5 isDeletedOrInTrash] & 1) == 0) {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
  }
  if (v4) {
    [*(id *)(a1 + 32) removeObject:v7];
  }
}

void sub_1000B3084(uint64_t a1)
{
  id v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  _DWORD v3[2] = sub_1000B3144;
  v3[3] = &unk_100625938;
  objc_copyWeak(&v4, v1);
  [WeakRetained dismissViewControllerAnimated:1 completion:v3];

  objc_destroyWeak(&v4);
}

void sub_1000B3130(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1000B3144(uint64_t a1)
{
  id v2 = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = [v2 iCloudShareBarButtonItem];
  [v2 createAndPresentCloudSharingControllerBySender:v1];
}

id sub_1000B337C(uint64_t a1)
{
  return [*(id *)(a1 + 32) setShowsActivityIndicator:1];
}

void sub_1000B3388(uint64_t a1)
{
  id v2 = +[ICCollaborationUIController sharedInstance];
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = [*(id *)(a1 + 40) ic_windowScene];
  unsigned int v5 = +[ICNoteContext sharedContext];
  id v6 = [v5 managedObjectContext];
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_1000B34E8;
  v14[3] = &unk_100628658;
  id v7 = *(id *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 48);
  id v15 = v7;
  uint64_t v16 = v8;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  void v11[2] = sub_1000B366C;
  v11[3] = &unk_100628680;
  id v9 = *(id *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  id v12 = v9;
  uint64_t v13 = v10;
  [v2 fetchAndAcceptShareMetadataWithURL:v3 windowScene:v4 managedObjectContext:v6 alertBlock:v14 showObjectBlock:v11];
}

void sub_1000B34E8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_1000B35C4;
  void v10[3] = &unk_100625A78;
  id v11 = *(id *)(a1 + 32);
  id v12 = v5;
  uint64_t v7 = *(void *)(a1 + 40);
  id v13 = v6;
  uint64_t v14 = v7;
  id v8 = v6;
  id v9 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v10);
}

void sub_1000B35C4(uint64_t a1)
{
  [*(id *)(a1 + 32) setShowsActivityIndicator:0];
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  id v6 = [*(id *)(a1 + 56) viewControllerManager];
  id v4 = [v6 window];
  id v5 = [v4 rootViewController];
  +[UIAlertController ic_showAlertWithTitle:v2 message:v3 viewController:v5];
}

void sub_1000B366C(uint64_t a1, void *a2)
{
  id v3 = a2;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  void block[2] = sub_1000B3720;
  block[3] = &unk_100625A00;
  id v4 = *(id *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  id v8 = v4;
  uint64_t v9 = v5;
  id v10 = v3;
  id v6 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_1000B3720(uint64_t a1)
{
  [*(id *)(a1 + 32) setShowsActivityIndicator:0];
  uint64_t v2 = [*(id *)(a1 + 40) viewControllerManager];
  id v4 = [v2 searchController];

  if (v4) {
    [v4 cancelSearch];
  }
  id v3 = [*(id *)(a1 + 40) viewControllerManager];
  [v3 selectObjectWithObjectID:*(void *)(a1 + 48)];
}

id sub_1000B38A8(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) isEditing];
  if (result)
  {
    id v3 = *(void **)(a1 + 32);
    return [v3 setEditing:0 animated:1];
  }
  return result;
}

id sub_1000B3938(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = +[UIApplication sharedApplication];
  id v3 = [v2 applicationState];

  if (v3)
  {
    id v4 = 0;
  }
  else
  {
    uint64_t v5 = [WeakRetained note];
    id v4 = [v5 folder];
  }

  return v4;
}

void sub_1000B39CC(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (objc_msgSend(WeakRetained, "ic_isViewVisible")
    && [WeakRetained isEditing])
  {
    [WeakRetained setCurrentTextStyle:a2];
  }
}

void sub_1000B3A34(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v6 = v3;
  id v4 = v3;
  performBlockOnMainThreadAndWait();
}

void sub_1000B3AD8(uint64_t a1)
{
  if (objc_msgSend(*(id *)(a1 + 32), "ic_isViewVisible")
    && [*(id *)(a1 + 32) isEditing])
  {
    uint64_t v2 = [*(id *)(a1 + 32) textView];
    id v3 = [v2 selectedRange];
    uint64_t v5 = v4;

    id v6 = [*(id *)(a1 + 32) textStorage];
    [v6 replaceCharactersInRange:v3 withAttributedString:v5 *(void *)(a1 + 40)];

    uint64_t v7 = [*(id *)(a1 + 32) note];
    [v7 updateModificationDateAndChangeCountAndSaveImmediately];

    id v8 = [*(id *)(a1 + 40) length];
    id v9 = [*(id *)(a1 + 32) textView];
    [v9 setSelectedRange:v3, v8];
  }
}

id sub_1000B4150(uint64_t a1)
{
  return [*(id *)(a1 + 32) setRecentlyCreated:0];
}

void sub_1000B43FC(uint64_t a1)
{
  uint64_t v12 = 0;
  id v13 = &v12;
  uint64_t v14 = 0x3032000000;
  id v15 = sub_1000B4670;
  uint64_t v16 = sub_1000B4680;
  id v17 = 0;
  uint64_t v2 = [*(id *)(a1 + 32) noteContainer];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  if (isKindOfClass)
  {
    uint64_t v4 = [(id)objc_opt_class() modernWorkerContext];
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    void v11[2] = sub_1000B4688;
    v11[3] = &unk_100625C78;
    void v11[4] = *(void *)(a1 + 32);
    v11[5] = &v12;
    [v4 performBlockAndWait:v11];
LABEL_5:

    goto LABEL_6;
  }
  uint64_t v5 = [*(id *)(a1 + 32) noteCollection];
  objc_opt_class();
  char v6 = objc_opt_isKindOfClass();

  if (v6)
  {
    uint64_t v4 = +[NoteContext sharedContext];
    uint64_t v7 = [v4 managedObjectContext];
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_1000B4774;
    void v10[3] = &unk_100625C78;
    void v10[4] = *(void *)(a1 + 32);
    v10[5] = &v12;
    [v7 performBlockAndWait:v10];

    goto LABEL_5;
  }
  id v8 = [*(id *)(a1 + 32) virtualSmartFolder];

  if (v8)
  {
    id v9 = (void *)v13[5];
    v13[5] = 0;
  }
LABEL_6:
  [*(id *)(a1 + 32) setSubfoldersCount:v13[5]];
  performBlockOnMainThread();
  _Block_object_dispose(&v12, 8);
}

void sub_1000B4658(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000B4670(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000B4680(uint64_t a1)
{
}

void sub_1000B4688(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) noteContainer];
  id v9 = [v2 objectID];

  if (objc_msgSend(v9, "ic_isModernFolderType"))
  {
    id v3 = [(id)objc_opt_class() modernWorkerContext];
    uint64_t v4 = [v3 ic_existingObjectWithID:v9];

    uint64_t v5 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [v4 visibleNoteContainerChildrenCount]);
    uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
    uint64_t v7 = *(void **)(v6 + 40);
    *(void *)(v6 + 40) = v5;
  }
  else
  {
    uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(void **)(v8 + 40);
    *(void *)(v8 + 40) = &off_10064B228;
  }
}

void sub_1000B4774(uint64_t a1)
{
  uint64_t v2 = +[NoteContext sharedContext];
  id v3 = [v2 managedObjectContext];
  uint64_t v4 = [*(id *)(a1 + 32) noteCollection];
  uint64_t v5 = [v4 objectID];
  [v3 ic_existingObjectWithID:v5];
  id v11 = (id)objc_claimAutoreleasedReturnValue();

  uint64_t v6 = +[NoteContext sharedContext];
  uint64_t v7 = [v6 storesInCollection:v11];
  uint64_t v8 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [v7 count]);
  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  id v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v8;
}

void sub_1000B4878(uint64_t a1)
{
  int v2 = ICAccessibilityAccessibilityLargerTextSizesEnabled();
  id v3 = *(void **)(a1 + 32);
  if (v2)
  {
    [v3 updateTextAndStatus];
  }
  else
  {
    id v4 = [v3 configurationState];
    [v3 updateAccessoriesUsingState:v4];
  }
}

void sub_1000B498C(uint64_t a1)
{
  uint64_t v16 = 0;
  id v17 = &v16;
  uint64_t v18 = 0x3032000000;
  char v19 = sub_1000B4670;
  id v20 = sub_1000B4680;
  id v21 = 0;
  if ([*(id *)(a1 + 32) showsNoteCount])
  {
    int v2 = [*(id *)(a1 + 32) noteContainer];

    if (v2)
    {
      id v3 = [(id)objc_opt_class() modernWorkerContext];
      v15[0] = _NSConcreteStackBlock;
      v15[1] = 3221225472;
      v15[2] = sub_1000B4C74;
      v15[3] = &unk_100625C78;
      void v15[4] = *(void *)(a1 + 32);
      v15[5] = &v16;
      [v3 performBlockAndWait:v15];
LABEL_8:

      goto LABEL_9;
    }
    uint64_t v5 = [*(id *)(a1 + 32) noteCollection];

    if (v5)
    {
      id v3 = [(id)objc_opt_class() legacyWorkerContext];
      v14[0] = _NSConcreteStackBlock;
      v14[1] = 3221225472;
      v14[2] = sub_1000B4D3C;
      v14[3] = &unk_100625C78;
      void v14[4] = *(void *)(a1 + 32);
      void v14[5] = &v16;
      [v3 performBlockAndWait:v14];
      goto LABEL_8;
    }
    uint64_t v6 = [*(id *)(a1 + 32) virtualSmartFolder];

    if (!v6) {
      goto LABEL_9;
    }
    uint64_t v7 = [*(id *)(a1 + 32) virtualSmartFolder];
    uint64_t v8 = [(id)objc_opt_class() modernWorkerContext];
    uint64_t v9 = (char *)[v7 visibleNoteCountInContext:v8];

    id v10 = [*(id *)(a1 + 32) virtualSmartFolder];
    id v11 = [(id)objc_opt_class() modernWorkerContext];
    id v12 = [v10 visibleInvitationCountInContext:v11];

    uint64_t v13 = +[NSNumber numberWithInteger:&v9[(void)v12]];
    id v4 = (void *)v17[5];
    id v17[5] = v13;
  }
  else
  {
    id v4 = (void *)v17[5];
    id v17[5] = 0;
  }

LABEL_9:
  [*(id *)(a1 + 32) setNoteCount:v17[5]];
  performBlockOnMainThread();
  _Block_object_dispose(&v16, 8);
}

void sub_1000B4C54(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1000B4C74(uint64_t a1)
{
  int v2 = [(id)objc_opt_class() modernWorkerContext];
  id v3 = [*(id *)(a1 + 32) noteContainer];
  id v4 = [v3 objectID];
  [v2 ic_existingObjectWithID:v4];
  id v8 = (id)objc_claimAutoreleasedReturnValue();

  uint64_t v5 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [v8 visibleNotesCount]);
  uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;
}

void sub_1000B4D3C(uint64_t a1)
{
  int v2 = [(id)objc_opt_class() legacyWorkerContext];
  id v3 = [*(id *)(a1 + 32) noteCollection];
  id v4 = [v3 objectID];
  [v2 ic_existingObjectWithID:v4];
  id v10 = (id)objc_claimAutoreleasedReturnValue();

  uint64_t v5 = [v10 predicateForNotes];
  uint64_t v6 = [(id)objc_opt_class() legacyWorkerContext];
  uint64_t v7 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", +[NoteContext countOfVisibleNotesMatchingPredicate:v5 context:v6]);
  uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = v7;
}

void sub_1000B4E48(uint64_t a1)
{
  int v2 = ICAccessibilityAccessibilityLargerTextSizesEnabled();
  id v3 = *(void **)(a1 + 32);
  if (v2)
  {
    [v3 updateTextAndStatus];
  }
  else
  {
    id v4 = [v3 configurationState];
    [v3 updateAccessoriesUsingState:v4];
  }
}

void sub_1000B5598(id a1)
{
  id v3 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  dispatch_queue_t v1 = dispatch_queue_create("com.apple.notes.update-counts", v3);
  int v2 = (void *)qword_1006AA1D0;
  qword_1006AA1D0 = (uint64_t)v1;
}

void sub_1000B5650(id a1)
{
  id v3 = +[ICNoteContext sharedContext];
  uint64_t v1 = [v3 workerManagedObjectContext];
  int v2 = (void *)qword_1006AA1E0;
  qword_1006AA1E0 = v1;
}

void sub_1000B5700(id a1)
{
  id v3 = [objc_alloc((Class)NoteContext) initWithPrivateQueue];
  uint64_t v1 = [v3 managedObjectContext];
  int v2 = (void *)qword_1006AA1F0;
  qword_1006AA1F0 = v1;
}

void sub_1000B5EBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000B5EDC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v1 = [WeakRetained unsupportedFolderButton];
  [WeakRetained onUnsupportedFolderInfoPressed:v1];
}

NSCollectionLayoutSection *__cdecl sub_1000B7298(id a1, int64_t a2, NSCollectionLayoutEnvironment *a3)
{
  id v3 = a3;
  id v4 = [objc_alloc((Class)UICollectionLayoutListConfiguration) initWithAppearance:2];
  [v4 setHeaderMode:1];
  uint64_t v5 = +[NSCollectionLayoutSection sectionWithListConfiguration:v4 layoutEnvironment:v3];

  return (NSCollectionLayoutSection *)v5;
}

uint64_t sub_1000B75A8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1000B7848(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 88));
  _Unwind_Resume(a1);
}

void sub_1000B7888(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  objc_copyWeak(&to, (id *)(a1 + 32));
  id v10 = objc_loadWeakRetained(&to);
  unsigned int v11 = [v10 shouldShowRecentItems];

  id v12 = objc_loadWeakRetained(&to);
  uint64_t v13 = v12;
  if (v11)
  {
    uint64_t v14 = [v12 recentItems];
    id v15 = [v14 objectAtIndexedSubscript:[v8 row]];
  }
  else
  {
    uint64_t v16 = [v12 filteredSections];
    id v17 = [v16 objectAtIndexedSubscript:[v8 section]];

    uint64_t v14 = [v17 items];
    id v15 = [v14 objectAtIndexedSubscript:[v8 row]];
    uint64_t v13 = v17;
  }

  [v7 setItem:v15];
  objc_destroyWeak(&to);
}

void sub_1000B79DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
}

id sub_1000B79F8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return [a2 dequeueConfiguredReusableCellWithRegistration:*(void *)(a1 + 32) forIndexPath:a3 item:a4];
}

void sub_1000B7A0C(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  objc_copyWeak(&to, (id *)(a1 + 32));
  id v10 = objc_loadWeakRetained(&to);
  unsigned int v11 = [v10 shouldShowRecentItems];

  if (v11)
  {
    uint64_t v16 = _NSConcreteStackBlock;
    uint64_t v17 = 3221225472;
    uint64_t v18 = sub_1000B7BA8;
    char v19 = &unk_100625938;
    objc_copyWeak(&v20, &to);
    [v7 setClearButtonHandler:&v16];
    objc_destroyWeak(&v20);
    id v12 = @"Recent";
  }
  else
  {
    id v13 = objc_loadWeakRetained(&to);
    uint64_t v14 = [v13 filteredSections];
    id v15 = objc_msgSend(v14, "objectAtIndexedSubscript:", objc_msgSend(v9, "section"));

    id v12 = [v15 title];
    [v7 setClearButtonHandler:0];
  }
  [v7 setTitle:v12, v16, v17, v18, v19];

  objc_destroyWeak(&to);
}

void sub_1000B7B80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000B7BA8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained clearRecentItems];
}

id sub_1000B7BE8(uint64_t a1, void *a2)
{
  return [a2 dequeueConfiguredReusableSupplementaryViewWithRegistration:*(void *)(a1 + 32) forIndexPath:];
}

NSString *__cdecl sub_1000B7E0C(id a1, ICDebuggingItem *a2)
{
  return [(ICDebuggingItem *)a2 identifier];
}

NSString *__cdecl sub_1000B7E14(id a1, ICDebuggingSection *a2)
{
  return [(ICDebuggingSection *)a2 identifier];
}

void sub_1000B7E1C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v6 = [v3 identifier];
  id v4 = [v3 items];

  uint64_t v5 = [v4 ic_map:&stru_1006288D8];
  [*(id *)(a1 + 32) appendItemsWithIdentifiers:v5 intoSectionWithIdentifier:v6];
}

NSString *__cdecl sub_1000B7EB8(id a1, ICDebuggingItem *a2)
{
  return [(ICDebuggingItem *)a2 identifier];
}

NSArray *__cdecl sub_1000B81D4(id a1, ICDebuggingSection *a2)
{
  return [(ICDebuggingSection *)a2 items];
}

NSString *__cdecl sub_1000B81DC(id a1, ICDebuggingItem *a2)
{
  return [(ICDebuggingItem *)a2 identifier];
}

id sub_1000B81E4(uint64_t a1, uint64_t a2)
{
  id v3 = [*(id *)(a1 + 32) indexOfObject:a2];
  if (v3 == (id)0x7FFFFFFFFFFFFFFFLL)
  {
    id v4 = 0;
  }
  else
  {
    id v4 = [*(id *)(a1 + 40) objectAtIndexedSubscript:v3];
  }

  return v4;
}

BOOL sub_1000B99E0(id a1, ICAccount *a2, unint64_t a3, BOOL *a4)
{
  id v4 = [(ICAccount *)a2 accountData];
  unsigned __int8 v5 = [v4 supportsV1Neo];

  return v5;
}

uint64_t sub_1000B9CFC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 title];
  unsigned __int8 v5 = [v4 lowercaseString];

  id v6 = [v3 subtitle];

  id v7 = [v6 lowercaseString];

  if ([v5 containsString:*(void *)(a1 + 32)]) {
    uint64_t v8 = 1;
  }
  else {
    uint64_t v8 = (uint64_t)[v7 containsString:*(void *)(a1 + 32)];
  }

  return v8;
}

void sub_1000B9F40(id a1)
{
  id v1 = +[ICAppDelegate sharedInstance];
  [v1 dismissAllowNotificationsWarmingSheet];
}

void sub_1000BA7A4(uint64_t a1)
{
  +[ICCloudThrottlingPolicy resetSavedPolicyState];
  +[ICCloudConfiguration setDefaultConfigurationURL:*(void *)(a1 + 32)];
  id v2 = +[ICCloudConfiguration sharedConfiguration];
  [v2 loadConfigurationFromURL:*(void *)(a1 + 32)];
}

void sub_1000BA8B4(id a1)
{
  id v1 = objc_alloc_init(ICDebugSpinner);
  [(ICDebugSpinner *)v1 show];
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  _DWORD v3[2] = sub_1000BA95C;
  v3[3] = &unk_100625AF0;
  id v4 = v1;
  id v2 = v1;
  +[ICDebugUtilities purgeEverythingWithCompletionHandler:v3];
}

id sub_1000BA95C(uint64_t a1)
{
  return [*(id *)(a1 + 32) hide];
}

void sub_1000BA988(id a1)
{
  id v1 = objc_alloc_init(ICDebugSpinner);
  [(ICDebugSpinner *)v1 show];
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  _DWORD v3[2] = sub_1000BAA30;
  v3[3] = &unk_100625AF0;
  id v4 = v1;
  id v2 = v1;
  +[ICDebugUtilities deleteEverythingWithCompletionHandler:v3];
}

id sub_1000BAA30(uint64_t a1)
{
  return [*(id *)(a1 + 32) hide];
}

id sub_1000BAC78(uint64_t a1)
{
  return _[*(id *)(a1 + 32) importTestDataFromDirectoryAtURL:*(void *)(a1 + 40)];
}

id sub_1000BB0A0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = (unint64_t)[@"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXZY0123456789" length];
  for (unint64_t i = +[NSMutableString stringWithCapacity:20];
    [i appendFormat:@"%C", [@"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXZY0123456789" characterAtIndex:arc4random() % v3]];

  return i;
}

void sub_1000BB6F4(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  void block[2] = sub_1000BB778;
  block[3] = &unk_100625AF0;
  id v2 = *(id *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

id sub_1000BB778(uint64_t a1)
{
  return [*(id *)(a1 + 32) hide];
}

void sub_1000BB7A4(id a1)
{
  +[ICMigrationController setDidChooseToMigrateLocalAccount:0];
  +[ICMigrationController setDidMigrateLocalAccount:0];
  id v1 = +[ICNoteContext sharedContext];
  id v2 = [v1 managedObjectContext];
  unint64_t v3 = +[ICAccount localAccountInContext:v2];

  if (v3)
  {
    id v4 = +[NSNotificationCenter defaultCenter];
    uint64_t v5 = ICMigrationStateWillChangeNotification;
    CFStringRef v13 = @"ICCurrentDeviceMigrationStateChangeWasForLocalAccountKey";
    uint64_t v14 = &__kCFBooleanTrue;
    id v6 = +[NSDictionary dictionaryWithObjects:&v14 forKeys:&v13 count:1];
    [v4 postNotificationName:v5 object:0 userInfo:v6];

    +[ICAccount deleteAccount:v3];
    id v7 = +[ICNoteContext sharedContext];
    [v7 save];

    uint64_t v8 = +[NSNotificationCenter defaultCenter];
    uint64_t v9 = ICMigrationStateDidChangeNotification;
    CFStringRef v11 = @"ICCurrentDeviceMigrationStateChangeWasForLocalAccountKey";
    id v12 = &__kCFBooleanTrue;
    id v10 = +[NSDictionary dictionaryWithObjects:&v12 forKeys:&v11 count:1];
    [v8 postNotificationName:v9 object:0 userInfo:v10];
  }
}

void sub_1000BBB88(id a1)
{
  id v1 = objc_alloc_init(ICDebugSpinner);
  [(ICDebugSpinner *)v1 show];
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  _DWORD v3[2] = sub_1000BBC30;
  v3[3] = &unk_100625AF0;
  id v4 = v1;
  id v2 = v1;
  +[ICDebugUtilities startFreshWithCompletionHandler:v3];
}

id sub_1000BBC30(uint64_t a1)
{
  return [*(id *)(a1 + 32) hide];
}

void sub_1000BBD1C(uint64_t a1)
{
  id v2 = +[ICDatabaseStateHandler stateDictionary];
  id v23 = 0;
  unint64_t v3 = +[NSPropertyListSerialization dataWithPropertyList:v2 format:200 options:0 error:&v23];
  id v4 = v23;
  if (v3) {
    BOOL v5 = v4 == 0;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    uint64_t v8 = NSTemporaryDirectory();
    uint64_t v9 = +[NSURL fileURLWithPath:v8];

    uint64_t v10 = +[NSDate date];
    [(id)v10 timeIntervalSinceReferenceDate];
    id v12 = +[NSString localizedStringWithFormat:@"statedump-%ld", (uint64_t)v11];
    CFStringRef v13 = [v9 URLByAppendingPathComponent:v12 isDirectory:0];

    id v7 = [v13 URLByAppendingPathExtension:@"plist"];

    id v22 = 0;
    LOBYTE(v10) = [v3 writeToURL:v7 options:0 error:&v22];
    id v6 = v22;
    if (v10)
    {
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      void block[2] = sub_1000BBF94;
      block[3] = &unk_100625A78;
      uint64_t v18 = *(id *)(a1 + 32);
      char v19 = v7;
      id v14 = *(id *)(a1 + 40);
      uint64_t v15 = *(void *)(a1 + 48);
      id v20 = v14;
      uint64_t v21 = v15;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

      uint64_t v16 = v18;
    }
    else
    {
      uint64_t v16 = os_log_create("com.apple.notes", "Internal");
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_1004DA634();
      }
    }
  }
  else
  {
    id v6 = v4;
    id v7 = os_log_create("com.apple.notes", "Internal");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1004DA5CC();
    }
  }
}

void sub_1000BBF94(uint64_t a1)
{
  [*(id *)(a1 + 32) hide];
  id v2 = objc_alloc((Class)UIActivityViewController);
  uint64_t v9 = *(void *)(a1 + 40);
  unint64_t v3 = +[NSArray arrayWithObjects:&v9 count:1];
  id v4 = [v2 initWithActivityItems:v3 applicationActivities:0];

  v8[0] = UIActivityTypeOpenInIBooks;
  v8[1] = ICActivityTypeShareToNote;
  v8[2] = UIActivityTypeSharePlay;
  BOOL v5 = +[NSArray arrayWithObjects:v8 count:3];
  [v4 setExcludedActivityTypes:v5];

  uint64_t v6 = *(void *)(a1 + 48);
  id v7 = [v4 popoverPresentationController];
  [v7 setSourceView:v6];

  [*(id *)(a1 + 56) presentViewController:v4 animated:1 completion:0];
}

void sub_1000BC398(uint64_t a1)
{
  id v2 = +[NSUserDefaults standardUserDefaults];
  [v2 setBool:*(unsigned char *)(a1 + 32) == 0 forKey:ICViewControllerUseNonContiguousLayoutDefaultKey];
}

void sub_1000BC574(id a1, NSError *a2)
{
  id v2 = a2;
  if (v2)
  {
    unint64_t v3 = os_log_create("com.apple.notes", "Internal");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      sub_1004DA69C();
    }
  }
}

BOOL sub_1000BC8A8(id a1, ICAccount *a2, unint64_t a3, BOOL *a4)
{
  id v4 = [(ICAccount *)a2 accountData];
  unsigned __int8 v5 = [v4 supportsV1Neo];

  return v5;
}

void sub_1000BCD2C(uint64_t a1, uint64_t a2)
{
  if (a2 == 2)
  {
    unint64_t v3 = +[ICLockedNotesModeMigrator sharedMigrator];
    uint64_t v4 = *(__int16 *)(a1 + 64);
    unsigned __int8 v5 = *(void **)(a1 + 32);
    uint64_t v6 = *(void *)(a1 + 40);
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_1000BCE7C;
    v12[3] = &unk_100628B40;
    id v13 = v5;
    id v7 = *(id *)(a1 + 40);
    uint64_t v8 = *(void *)(a1 + 48);
    uint64_t v9 = *(void **)(a1 + 56);
    id v14 = v7;
    uint64_t v15 = v8;
    id v16 = v9;
    __int16 v17 = *(_WORD *)(a1 + 64);
    [v3 migrateLockedNotesInAccount:v13 toMode:v4 window:v6 completionHandler:v12];
  }
  else
  {
    uint64_t v10 = *(void **)(a1 + 48);
    [*(id *)(a1 + 56) ic_subarrayFromIndex:1];
    id v11 = (id)objc_claimAutoreleasedReturnValue();
    [v10 migrateAccounts:v11 toMode:*(__int16 *)(a1 + 64)];
  }
}

void sub_1000BCE7C(uint64_t a1)
{
  id v2 = +[ICAuthenticationAlert switchedModeInfoAlertWithAccount:*(void *)(a1 + 32)];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  id v5[2] = sub_1000BCF40;
  v5[3] = &unk_100628B18;
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void **)(a1 + 56);
  void v5[4] = *(void *)(a1 + 48);
  id v6 = v4;
  __int16 v7 = *(_WORD *)(a1 + 64);
  [v2 presentInWindow:v3 completionHandler:v5];
}

void sub_1000BCF40(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  [*(id *)(a1 + 40) ic_subarrayFromIndex:1];
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  [v2 migrateAccounts:v3 toMode:*(__int16 *)(a1 + 48)];
}

void sub_1000BD0F8(uint64_t a1)
{
  id v4 = +[ICPasswordUtilities sharedInstance];
  id v2 = [*(id *)(a1 + 32) view];
  id v3 = [v2 window];
  [v4 showChangePasswordDialogueFromDisplayWindow:v3 account:*(void *)(a1 + 40) completionHandler:0];
}

void sub_1000BD3FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000BD414(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000BD424(uint64_t a1)
{
}

void sub_1000BD42C(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 setAutocapitalizationType:0];
  [v3 setAutocorrectionType:1];
  [v3 setSecureTextEntry:1];
  id v4 = ICUnlocalizedString();
  [v3 setPlaceholder:v4];

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
}

void sub_1000BD4C0(uint64_t a1)
{
  id v2 = +[ICAuthenticationState sharedState];
  id v16 = [v2 cachedMainKeyForObject:*(void *)(a1 + 32)];

  id v3 = [*(id *)(a1 + 32) cryptoStrategy];
  id v4 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) text];
  uint64_t v5 = [v3 mainKeyForPassphrase:v4];

  if (v5)
  {
    id v6 = +[ICAuthenticationState sharedState];
    __int16 v7 = [*(id *)(a1 + 32) identifier];
    [v6 setCachedMainKey:v5 forIdentifier:v7];

    id v8 = [objc_alloc((Class)NSAttributedString) initWithString:@"Hello\tWorld"];
    uint64_t v9 = [*(id *)(a1 + 32) addTableAttachmentWithText:v8];
    [v9 saveMergeableDataIfNeeded];
    uint64_t v10 = +[ICAuthenticationState sharedState];
    id v11 = [*(id *)(a1 + 32) identifier];
    [v10 setCachedMainKey:v16 forIdentifier:v11];

    id v12 = +[ICAuthenticationState sharedState];
    id v13 = [v9 identifier];
    [v12 setCachedMainKey:0 forIdentifier:v13];

    id v14 = [objc_alloc((Class)ICAttachmentInsertionController) initWithNote:*(void *)(a1 + 32)];
    id v15 = [v14 addAttachment:v9];
  }
}

void sub_1000BD910(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000BD928(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 setAutocapitalizationType:0];
  [v3 setAutocorrectionType:1];
  [v3 setSecureTextEntry:1];
  id v4 = ICUnlocalizedString();
  [v3 setPlaceholder:v4];

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
}

void sub_1000BD9BC(uint64_t a1)
{
  id v9 = objc_alloc_init((Class)ICCryptoConvergenceControllerConfiguration);
  id v2 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) text];
  [v9 setDivergedPassphrase:v2];

  id v3 = +[ICCryptoConvergenceController sharedController];
  id v4 = [*(id *)(a1 + 32) objectID];
  unsigned int v5 = [v3 convergeAttachmentsInNoteWithID:v4 configuration:v9];

  if (v5)
  {
    id v6 = +[ICNoteContext sharedContext];
    __int16 v7 = [v6 managedObjectContext];
    [v7 ic_saveWithLogDescription:@"Converged attachments"];

    id v8 = +[NSNotificationCenter defaultCenter];
    [v8 postNotificationName:ICAuthenticationStateDidAuthenticateNotification object:0];
  }
}

void sub_1000BDD0C(id a1)
{
  id v1 = [objc_alloc((Class)ICSearchQueryOperation) initWithQueryString:@"*==*" rankingQueries:&__NSArray0__struct];
  id v2 = +[ICSearchQueryOperation newOperationQueueWithName:@"com.apple.notes.log-search-index-queue"];
  [v2 addOperation:v1];
  [v2 waitUntilAllOperationsAreFinished];
  id v3 = os_log_create("com.apple.notes", "Internal");
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    id v4 = [v1 results];
    int v5 = 138412290;
    id v6 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "All indexed items: %@", (uint8_t *)&v5, 0xCu);
  }
}

id sub_1000BDEE4(uint64_t a1)
{
  return _[*(id *)(a1 + 32) performSelectorOnMainThread:"hide" withObject:0 waitUntilDone:0];
}

void sub_1000BE0DC(uint64_t a1)
{
  id v2 = +[ICFolder smartFolderWithQuery:*(void *)(a1 + 32) titleComponents:&off_10064B5C0 account:*(void *)(a1 + 40)];
  [v2 updateChangeCountWithReason:@"Created partially supported Smart Folder"];
  [*(id *)(a1 + 48) ic_save];
}

void sub_1000BE1F8(uint64_t a1)
{
  id v2 = +[ICHashtag allVisibleHashtagsInContext:*(void *)(a1 + 32)];
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  id v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      id v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v7 + 1) + 8 * (void)v6) markForDeletion];
        id v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
  [*(id *)(a1 + 32) ic_save];
}

id sub_1000BE470(uint64_t a1)
{
  return [*(id *)(a1 + 32) ic_save];
}

id sub_1000BE550(uint64_t a1)
{
  return [*(id *)(a1 + 32) ic_save];
}

id sub_1000BE630(uint64_t a1)
{
  return [*(id *)(a1 + 32) ic_save];
}

void sub_1000BE714(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_1000BE790;
  v2[3] = &unk_100625AF0;
  id v3 = v1;
  [v3 performBlock:v2];
}

id sub_1000BE790(uint64_t a1)
{
  return [*(id *)(a1 + 32) ic_saveWithLogDescription:@"Regenerate handwriting summaries debug menu item"];
}

id sub_1000BE85C(uint64_t a1)
{
  return [*(id *)(a1 + 32) ic_save];
}

void sub_1000BEE70(uint64_t a1)
{
  id v2 = +[ICAppRemovalServiceClient sharedClient];
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  _DWORD v3[2] = sub_1000BEF04;
  v3[3] = &unk_100628C50;
  void v3[4] = *(void *)(a1 + 32);
  [v2 removeAppWithReply:v3];
}

void sub_1000BEF04(uint64_t a1, void *a2)
{
  id v2 = a2;
  if (!v2) {
    exit(0);
  }
  id v4 = v2;
  id v3 = v2;
  dispatchMainAfterDelay();
}

void sub_1000BEFA8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) localizedDescription];
  id v6 = +[UIAlertController alertControllerWithTitle:@"Error in App Removal" message:v2 preferredStyle:1];

  id v3 = +[NSBundle mainBundle];
  id v4 = [v3 localizedStringForKey:@"OK" value:&stru_10063F3D8 table:0];
  uint64_t v5 = +[UIAlertAction actionWithTitle:v4 style:0 handler:0];
  [v6 addAction:v5];

  [*(id *)(a1 + 40) presentViewController:v6 animated:1 completion:0];
}

void sub_1000BF514(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) presentingViewController];
  id v3 = [*(id *)(a1 + 32) note];
  id v4 = [v3 allDrawings];
  +[PKHandwritingDebugUtility presentHandwritingDebugViewFromViewController:v2 allDrawings:v4 tiledView:*(void *)(a1 + 40)];

  [*(id *)(a1 + 32) activityDidFinish:1];
  uint64_t v5 = *(void *)(a1 + 48);
  if (v5)
  {
    id v6 = [*(id *)(a1 + 32) activityType];
    (*(void (**)(uint64_t, uint64_t, id))(v5 + 16))(v5, 1, v6);
  }
}

id sub_1000BF808(uint64_t a1)
{
  return _[*(id *)(a1 + 32) showDocumentCamera];
}

id sub_1000BF890(uint64_t a1)
{
  return _[*(id *)(a1 + 32) showHandwritingDebug:1];
}

void sub_1000BFF4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_1000BFF68(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  long long v7 = WeakRetained;
  if (WeakRetained)
  {
    long long v8 = [WeakRetained diffableDataSource];
    long long v9 = [v8 snapshot];
    long long v10 = [v9 sectionIdentifiers];
    id v11 = [v10 objectAtIndexedSubscript:a2];

    if (v11 == @"ICNoteSearchDataSourceAttachmentSectionIdentifier")
    {
      id v12 = [v7 attachmentSectionForLayoutEnvironment:v5];
    }
    else
    {
      if (v11 == @"ICNoteSearchDataSourceSuggestionsSectionIdentifier")
      {
        id v12 = [v7 notesListSectionForSectionIndex:a2 layoutEnvironment:v5];
      }
      else
      {
        id v12 = [v7 notesSectionForSectionIndex:a2 layoutEnvironment:v5];
        if (+[UIDevice ic_isVision])
        {
          [v12 contentInsets];
          [v12 setContentInsets:0.0];
        }
      }
      [v7 setHeaderOfSectionLayout:v12];
    }
  }
  else
  {
    id v12 = 0;
  }

  return v12;
}

void sub_1000C07D0(uint64_t a1)
{
  double v1 = *(double *)(a1 + 40);
  double v2 = *(double *)(a1 + 48);
  double v3 = *(double *)(a1 + 56);
  double v4 = *(double *)(a1 + 64);
  id v5 = [*(id *)(a1 + 32) window];
  [v5 setFrame:v1, v2, v3, v4];
}

uint64_t sub_1000C083C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1000C0A70(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) window];
  double v1 = [v3 rootViewController];
  double v2 = [v1 view];
  [v2 setAlpha:1.0];
}

uint64_t sub_1000C0AE0(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_1000C0BF0(uint64_t a1)
{
  double v2 = [*(id *)(a1 + 32) window];
  [v2 setHidden:1];

  [*(id *)(a1 + 32) setWindow:0];
  id v3 = [*(id *)(a1 + 32) window];
  [v3 setWindowScene:0];

  double v4 = [*(id *)(a1 + 32) presentingWindow];
  [v4 makeKeyAndVisible];

  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    id v6 = *(uint64_t (**)(void))(result + 16);
    return v6();
  }
  return result;
}

void sub_1000C0F8C(uint64_t a1)
{
  [*(id *)(a1 + 32) activityDidFinish:1];
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2)
  {
    id v3 = [*(id *)(a1 + 32) activityType];
    (*(void (**)(uint64_t, uint64_t, id))(v2 + 16))(v2, 1, v3);
  }
}

id sub_1000C1364(uint64_t a1)
{
  +[ICDateHeadersUtilities setQueryDateHeadersType:*(unsigned int *)(a1 + 48)];
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);

  return [v2 performActivityWithCompletion:v3];
}

id sub_1000C1484()
{
  uint64_t v0 = +[NotesApp sharedNotesApp];
  double v1 = [v0 noteContext];

  return v1;
}

void sub_1000C17E8(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) clearButtonHandler];

  if (v2)
  {
    uint64_t v3 = [*(id *)(a1 + 32) clearButtonHandler];
    v3[2]();
  }
}

void sub_1000C31B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *location)
{
  objc_destroyWeak(v11);
  objc_destroyWeak(v13);
  objc_destroyWeak(v12);
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v14 - 112));
  _Unwind_Resume(a1);
}

void sub_1000C322C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [*(id *)(a1 + 32) copy:WeakRetained];
}

void sub_1000C3280(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained shareAttachment:WeakRetained];
}

void sub_1000C32C4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained showInNote:WeakRetained];
}

void sub_1000C3308(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained openAttachmentInspector:WeakRetained];
}

void sub_1000C4898(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 80));
  _Unwind_Resume(a1);
}

void sub_1000C48D0(id *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1[4];
  objc_copyWeak(&v6, a1 + 6);
  id v5 = a1[5];
  performBlockOnMainThread();

  objc_destroyWeak(&v6);
}

void sub_1000C49A8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1000C49BC(uint64_t a1)
{
  if (*(void *)(a1 + 32) && ([*(id *)(a1 + 40) value] & 1) == 0)
  {
    id v3 = os_log_create("com.apple.notes", "Migration");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint8_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Got device list response", buf, 2u);
    }

    uint64_t v4 = *(void *)(a1 + 32);
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
    [WeakRetained setPrimaryAccountDevices:v4];

    uint64_t v2 = objc_loadWeakRetained((id *)(a1 + 56));
    [v2 stopIndicatorAnimationIfNecessaryForDeviceCheckIndicator:*(void *)(a1 + 48)];
  }
  else
  {
    uint64_t v2 = os_log_create("com.apple.notes", "Migration");
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Device list request was cancelled or failed", v6, 2u);
    }
  }
}

void sub_1000C4AD8(uint64_t a1)
{
  if ([*(id *)(a1 + 32) value])
  {
    id WeakRetained = os_log_create("com.apple.notes", "Migration");
    if (os_log_type_enabled(WeakRetained, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, WeakRetained, OS_LOG_TYPE_DEFAULT, "Migration state fetch request was cancelled", v6, 2u);
    }
    goto LABEL_13;
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = os_log_create("com.apple.notes", "Migration");
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint8_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Got migration state response.", buf, 2u);
  }

  uint64_t v4 = [WeakRetained timeoutTimer];
  if (v4)
  {

LABEL_12:
    [WeakRetained stopIndicatorAnimationIfNecessaryForDeviceCheckIndicator:*(void *)(a1 + 40)];
    goto LABEL_13;
  }
  if (([WeakRetained userDidContinue] & 1) == 0) {
    goto LABEL_12;
  }
  id v5 = os_log_create("com.apple.notes", "Migration");
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG)) {
    sub_1004DA824(v5);
  }

LABEL_13:
}

BOOL sub_1000C5B48(id a1, ICCompatibilityControllerDevice *a2, unint64_t a3, BOOL *a4)
{
  return (unint64_t)[(ICCompatibilityControllerDevice *)a2 notesVersion] >> 63;
}

void sub_1000C5D08(uint64_t a1)
{
  uint64_t v2 = ICKeyPathFromSelector();
  id v3 = ICKeyPathFromSelector();
  uint64_t v4 = +[NSPredicate predicateWithFormat:@"%K == nil OR %K == nil", v2, v3];
  id v5 = [*(id *)(a1 + 32) workerContext];
  id v6 = +[ICNote ic_objectIDsMatchingPredicate:v4 context:v5];

  long long v7 = os_log_create("com.apple.notes", "LaunchTask");
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)uint8_t buf = 134218498;
    id v22 = [v6 count];
    __int16 v23 = 2112;
    id v24 = v2;
    __int16 v25 = 2112;
    id v26 = v3;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Found %lu notes with no value for %@ or %@", buf, 0x20u);
  }

  long long v8 = +[NSMutableSet set];
  long long v9 = +[NSMutableSet set];
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  v18[2] = sub_1000C6060;
  v18[3] = &unk_100628D80;
  void v18[4] = *(void *)(a1 + 32);
  id v10 = v8;
  id v19 = v10;
  id v11 = v9;
  id v20 = v11;
  [v6 enumerateObjectsUsingBlock:v18];
  id v12 = os_log_create("com.apple.notes", "LaunchTask");
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
  {
    id v13 = [v10 count];
    id v14 = [v11 count];
    *(_DWORD *)uint8_t buf = 134218240;
    id v22 = v13;
    __int16 v23 = 2048;
    id v24 = v14;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "Found %lu notes with a checklist and %lu notes with a checklist in progress", buf, 0x16u);
  }

  id v15 = [*(id *)(a1 + 32) workerContext];
  [v15 reset];

  [*(id *)(a1 + 32) updateNotesWithObjectIDs:v10 usingValue:1 forKey:v2];
  id v16 = +[NSMutableSet setWithArray:v6];
  [v16 minusSet:v10];
  [*(id *)(a1 + 32) updateNotesWithObjectIDs:v16 usingValue:0 forKey:v2];
  [*(id *)(a1 + 32) updateNotesWithObjectIDs:v11 usingValue:1 forKey:v3];
  __int16 v17 = +[NSMutableSet setWithArray:v6];
  [v17 minusSet:v11];
  [*(id *)(a1 + 32) updateNotesWithObjectIDs:v17 usingValue:0 forKey:v3];
}

void sub_1000C6060(void *a1, void *a2)
{
  id v3 = (void *)a1[4];
  id v4 = a2;
  id v5 = [v3 workerContext];
  [v5 ic_existingObjectWithID:v4];
  id v13 = (id)objc_claimAutoreleasedReturnValue();

  [v13 updateDerivedAttributesIfNeeded];
  id v6 = [v13 hasChecklist];
  LODWORD(v4) = [v6 BOOLValue];

  if (v4)
  {
    long long v7 = (void *)a1[5];
    long long v8 = [v13 objectID];
    [v7 addObject:v8];
  }
  long long v9 = [v13 hasChecklistInProgress];
  unsigned int v10 = [v9 BOOLValue];

  if (v10)
  {
    id v11 = (void *)a1[6];
    id v12 = [v13 objectID];
    [v11 addObject:v12];
  }
}

void sub_1000C76C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000C76DC(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id result = [a2 didChooseToMigrate];
  if (result)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 1;
    *a4 = 1;
  }
  return result;
}

id sub_1000C7CC8(uint64_t a1)
{
  return [*(id *)(a1 + 32) ic_sceneDidDisconnect:*(void *)(a1 + 40)];
}

id sub_1000C7CF8(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  id v5 = [WeakRetained isCellReorderableForIdentifier:v3];

  return v5;
}

void sub_1000C7D4C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  long long v49 = 0u;
  long long v50 = 0u;
  long long v51 = 0u;
  long long v52 = 0u;
  uint64_t v36 = v3;
  id obj = [v3 sectionTransactions];
  id v37 = [obj countByEnumeratingWithState:&v49 objects:v55 count:16];
  if (v37)
  {
    uint64_t v35 = *(void *)v50;
    do
    {
      uint64_t v4 = 0;
      do
      {
        if (*(void *)v50 != v35) {
          objc_enumerationMutation(obj);
        }
        uint64_t v41 = v4;
        uint64_t v5 = [*(id *)(*((void *)&v49 + 1) + 8 * v4) finalSnapshot];
        id v6 = [v36 difference];
        long long v7 = [v6 insertions];
        __int16 v40 = v6;
        long long v8 = [v6 removals];
        uint64_t v9 = [v7 arrayByAddingObjectsFromArray:v8];

        unsigned int v10 = (void *)v5;
        id v39 = (void *)v9;
        uint64_t v38 = +[NSSet setWithArray:v9];
        id v11 = [v38 ic_compactMap:&stru_100628E10];
        long long v45 = 0u;
        long long v46 = 0u;
        long long v47 = 0u;
        long long v48 = 0u;
        id v12 = [v11 countByEnumeratingWithState:&v45 objects:v54 count:16];
        if (v12)
        {
          id v13 = v12;
          uint64_t v14 = *(void *)v46;
          char v44 = v10;
          __int16 v42 = v11;
          do
          {
            for (unint64_t i = 0; i != v13; unint64_t i = (char *)i + 1)
            {
              if (*(void *)v46 != v14) {
                objc_enumerationMutation(v11);
              }
              id v16 = *(void **)(*((void *)&v45 + 1) + 8 * i);
              objc_opt_class();
              if ((objc_opt_isKindOfClass() & 1) != 0
                && objc_msgSend(v16, "ic_isEntityOfClass:", objc_opt_class())
                && [v10 containsItem:v16])
              {
                uint64_t v17 = [WeakRetained diffableDataSource];
                uint64_t v18 = [(id)v17 snapshot];
                id v19 = [v18 sectionIdentifierForSectionContainingItemIdentifier:v16];

                objc_opt_class();
                LOBYTE(v17) = objc_opt_isKindOfClass();
                uint64_t v20 = [v10 parentOfChild:v16];
                id v21 = (id)v20;
                if (v17)
                {
                  if (v20)
                  {
                    id v22 = [v10 childrenOfParent:v20];
                    id v23 = [v22 indexOfObject:v16];
                  }
                  else
                  {
                    id v23 = [v10 indexOfItem:v16];
                  }
                  __int16 v25 = [v10 parentOfChild:v16];
                  objc_opt_class();
                  if ((objc_opt_isKindOfClass() & 1) == 0
                    || (unsigned __int8 v26 = objc_msgSend(v25, "ic_isModernFolderType"), !v25)
                    || (v26 & 1) == 0)
                  {
                    uint64_t v27 = [v19 noteContainerObjectID];

                    __int16 v25 = (void *)v27;
                  }

                  id v21 = v25;
                }
                else if (v20)
                {
                  id v24 = [v10 childrenOfParent:v20];
                  id v23 = [v24 indexOfObject:v16];
                }
                else
                {
                  id v21 = v19;
                  id v23 = 0;
                }
                objc_opt_class();
                if (objc_opt_isKindOfClass())
                {
                  id v28 = [v21 accountObjectID];
                }
                else
                {
                  id v28 = v21;
                }
                long long v29 = v28;
                id v30 = [WeakRetained actualChildIndexForSnapshotIndex:v23 inDestinationObjectID:v28 sectionSnapshot:v44];
                unsigned int v53 = v16;
                long long v31 = +[NSArray arrayWithObjects:&v53 count:1];
                [WeakRetained performDropOfFolderObjectIDs:v31 atFolderObjectID:v29 atIndex:v30];

                long long v32 = [WeakRetained cellForItemIdentifier:v16];
                id v33 = ICProtocolCast();
                if (objc_opt_respondsToSelector()) {
                  [v33 updateAccessories];
                }

                unsigned int v10 = v44;
                id v11 = v42;
              }
            }
            id v13 = [v11 countByEnumeratingWithState:&v45 objects:v54 count:16];
          }
          while (v13);
        }

        uint64_t v4 = v41 + 1;
      }
      while ((id)(v41 + 1) != v37);
      id v37 = [obj countByEnumeratingWithState:&v49 objects:v55 count:16];
    }
    while (v37);
  }
}

id sub_1000C822C(id a1, NSOrderedCollectionChange *a2)
{
  return [(NSOrderedCollectionChange *)a2 object];
}

BOOL sub_1000C8384(id a1, UICellAccessory *a2, unint64_t a3, BOOL *a4)
{
  uint64_t v4 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  return isKindOfClass & 1;
}

id sub_1000C8F44(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (objc_msgSend(v3, "ic_isModernType"))
  {
    uint64_t v4 = [*(id *)(a1 + 32) modernManagedObjectContext];
    uint64_t v5 = [v4 objectWithID:v3];
  }
  else
  {
    uint64_t v5 = 0;
  }

  return v5;
}

id sub_1000C8FC0(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) cellForItemIdentifier:a2];
}

BOOL sub_1000C9824(id a1, id a2, unint64_t a3, BOOL *a4)
{
  id v4 = a2;
  objc_opt_class();
  uint64_t v5 = ICDynamicCast();

  LOBYTE(v4) = [v5 sectionType] == (id)3;
  return (char)v4;
}

void sub_1000C9884(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) movableNoteObjectIDsIn:*(void *)(a1 + 40) forDropIntoSection:*(void *)(a1 + 48)];
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id v3 = [v2 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v14;
    do
    {
      id v6 = 0;
      do
      {
        if (*(void *)v14 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void *)(*((void *)&v13 + 1) + 8 * (void)v6);
        long long v8 = [*(id *)(a1 + 32) modernManagedObjectContext];
        uint64_t v9 = [v8 objectWithID:v7];

        [v9 changePinStatusIfPossible];
        unsigned int v10 = [*(id *)(a1 + 32) presentingViewController];
        id v11 = [v10 eventReporter];

        [v11 submitNotePinEventForModernNote:v9 contextPath:0];
        id v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }
    while (v4);
  }
  id v12 = [*(id *)(a1 + 32) modernManagedObjectContext];
  [v12 ic_save];
}

id sub_1000C9A04(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = [v2 modernManagedObjectContext];
  uint64_t v5 = [v4 objectWithID:v3];

  return v5;
}

UIViewController *__cdecl sub_1000CA02C(id a1)
{
  return 0;
}

id sub_1000CA034(uint64_t a1)
{
  uint64_t v2 = +[NSMutableArray array];
  if (*(unsigned char *)(a1 + 80))
  {
    v26[0] = _NSConcreteStackBlock;
    v26[1] = 3221225472;
    v26[2] = sub_1000CA34C;
    void v26[3] = &unk_100626400;
    id v3 = *(id *)(a1 + 32);
    uint64_t v4 = *(void *)(a1 + 40);
    id v27 = v3;
    uint64_t v28 = v4;
    uint64_t v5 = +[UIAction ic_removeActionWithHandler:v26];
    [v2 addObject:v5];
  }
  if (*(unsigned char *)(a1 + 81))
  {
    BOOL v6 = *(void *)(a1 + 64) == *(void *)(a1 + 72);
    id v7 = [*(id *)(a1 + 48) count];
    v22[0] = _NSConcreteStackBlock;
    v22[1] = 3221225472;
    v22[2] = sub_1000CA440;
    v22[3] = &unk_100628F98;
    id v8 = *(id *)(a1 + 56);
    BOOL v25 = v6;
    uint64_t v9 = *(void *)(a1 + 40);
    id v23 = v8;
    uint64_t v24 = v9;
    unsigned int v10 = +[UIAction ic_pinNoteActionPinned:v6 numberOfElements:v7 withHandler:v22];
    [v2 addObject:v10];
  }
  if (*(unsigned char *)(a1 + 82))
  {
    id v11 = [*(id *)(a1 + 48) count];
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 3221225472;
    v20[2] = sub_1000CA55C;
    v20[3] = &unk_100626400;
    void v20[4] = *(void *)(a1 + 40);
    id v21 = *(id *)(a1 + 56);
    id v12 = +[UIAction ic_moveActionWithWithNumberOfElements:v11 handler:v20];
    [v2 addObject:v12];
  }
  if (*(unsigned char *)(a1 + 83))
  {
    id v13 = [*(id *)(a1 + 48) count];
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472;
    v18[2] = sub_1000CA56C;
    v18[3] = &unk_100626400;
    void v18[4] = *(void *)(a1 + 40);
    id v19 = *(id *)(a1 + 56);
    long long v14 = +[UIAction ic_deleteActionWithNumberOfElements:v13 handler:v18];
    [v2 addObject:v14];
  }
  id v15 = [v2 copy];
  long long v16 = +[UIMenu menuWithTitle:&stru_10063F3D8 image:0 identifier:0 options:1 children:v15];

  return v16;
}

void sub_1000CA34C(uint64_t a1)
{
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      BOOL v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(a1 + 40) performRemoveActionWithInvitation:*(void *)(*((void *)&v7 + 1) + 8 * (void)v6) v7];
        BOOL v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

void sub_1000CA440(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  void v4[2] = sub_1000CA4D8;
  v4[3] = &unk_100628F70;
  char v5 = *(unsigned char *)(a1 + 48);
  id v3 = [v2 ic_compactMap:v4];
  [*(id *)(a1 + 40) performPinActionWithNotes:v3];
}

id sub_1000CA4D8(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  id v4 = ICDynamicCast();

  if (*(unsigned char *)(a1 + 32) || ([v4 isPinned] & 1) == 0) {
    char v5 = v4;
  }
  else {
    char v5 = 0;
  }
  id v6 = v5;

  return v6;
}

id sub_1000CA55C(uint64_t a1)
{
  return [*(id *)(a1 + 32) performMoveActionWithNotes:*(void *)(a1 + 40) completion:0];
}

void sub_1000CA56C(uint64_t a1)
{
  double v1 = *(void **)(a1 + 32);
  id v2 = [*(id *)(a1 + 40) copy];
  [v1 performDeleteActionWithObjects:v2 completion:0];
}

ICFolderPreviewViewController *sub_1000CAA4C(void *a1)
{
  if (a1[4]) {
    goto LABEL_2;
  }
  if (a1[5])
  {
    id v2 = [[ICFolderPreviewViewController alloc] initWithFolder:a1[5]];
LABEL_7:
    double v1 = v2;
    goto LABEL_8;
  }
  if (a1[6])
  {
    id v2 = [[ICNotePreviewViewController alloc] initWithNote:a1[6]];
    goto LABEL_7;
  }
  if (!a1[7])
  {
LABEL_2:
    double v1 = 0;
    goto LABEL_8;
  }
  double v1 = (ICFolderPreviewViewController *)[objc_alloc((Class)NotePreviewController) initWithNote:a1[7]];
  [(ICFolderPreviewViewController *)v1 setupPreview];
LABEL_8:

  return v1;
}

id sub_1000CAAF8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void *)(a1 + 32);
  if (v4)
  {
    uint64_t v5 = [*(id *)(a1 + 40) contextMenuForInvitation:v4 sourceView:*(void *)(a1 + 48)];
LABEL_9:
    long long v9 = (void *)v5;
    goto LABEL_10;
  }
  uint64_t v6 = *(void *)(a1 + 56);
  if (v6)
  {
    uint64_t v5 = [*(id *)(a1 + 40) contextMenuForFolder:v6 sourceView:*(void *)(a1 + 48)];
    goto LABEL_9;
  }
  uint64_t v7 = *(void *)(a1 + 64);
  if (v7)
  {
    uint64_t v5 = [*(id *)(a1 + 40) contextMenuForModernNote:v7 sourceView:*(void *)(a1 + 48)];
    goto LABEL_9;
  }
  uint64_t v8 = *(void *)(a1 + 72);
  if (v8)
  {
    uint64_t v5 = [*(id *)(a1 + 40) contextMenuForLegacyNote:v8 sourceView:*(void *)(a1 + 48)];
    goto LABEL_9;
  }
  long long v9 = 0;
LABEL_10:

  return v9;
}

void sub_1000CAD68(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = [*(id *)(a1 + 40) identifier];
  uint64_t v4 = [v2 cellForItemIdentifier:v3];
  id v12 = [v2 indexPathForCell:v4];

  [*(id *)(a1 + 32) ic_deselectAllItems];
  [*(id *)(a1 + 32) selectItemAtIndexPath:v12 animated:1 scrollPosition:0];
  uint64_t v5 = [*(id *)(a1 + 32) delegate];
  LOBYTE(v3) = objc_opt_respondsToSelector();

  if (v3)
  {
    uint64_t v6 = [*(id *)(a1 + 32) delegate];
    [v6 collectionView:*(void *)(a1 + 32) didSelectItemAtIndexPath:v12];
  }
  uint64_t v7 = [*(id *)(a1 + 32) delegate];
  if ((objc_opt_respondsToSelector() & 1) == 0) {
    goto LABEL_7;
  }
  uint64_t v8 = [*(id *)(a1 + 32) delegate];
  unsigned int v9 = [v8 collectionView:*(void *)(a1 + 32) canPerformPrimaryActionForItemAtIndexPath:v12];

  if (v9)
  {
    long long v10 = [*(id *)(a1 + 32) delegate];
    char v11 = objc_opt_respondsToSelector();

    if (v11)
    {
      uint64_t v7 = [*(id *)(a1 + 32) delegate];
      [v7 collectionView:*(void *)(a1 + 32) performPrimaryActionForItemAtIndexPath:v12];
LABEL_7:
    }
  }
}

id sub_1000CAF80(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (objc_msgSend(v3, "ic_isModernNoteType"))
  {
    uint64_t v4 = [*(id *)(a1 + 32) modernManagedObjectContext];
    uint64_t v5 = [v4 objectWithID:v3];
  }
  else
  {
    uint64_t v5 = 0;
  }

  return v5;
}

BOOL sub_1000CAFFC(id a1, ICNote *a2, unint64_t a3, BOOL *a4)
{
  return [(ICNote *)a2 isSystemPaper];
}

void sub_1000CB09C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) diffableDataSource];
  id v3 = [v2 snapshot];

  uint64_t v4 = [v3 itemIdentifiers];
  unsigned int v5 = [v4 containsObject:*(void *)(a1 + 40)];

  if (v5)
  {
    uint64_t v8 = *(void *)(a1 + 40);
    uint64_t v6 = +[NSArray arrayWithObjects:&v8 count:1];
    [v3 reloadItemsWithIdentifiers:v6];

    uint64_t v7 = [*(id *)(a1 + 32) diffableDataSource];
    [v7 applySnapshot:v3 animatingDifferences:1];
  }
}

NSManagedObjectID *__cdecl sub_1000CB2E0(id a1, UIDragItem *a2)
{
  id v2 = a2;
  objc_opt_class();
  id v3 = [(UIDragItem *)v2 localObject];

  uint64_t v4 = ICDynamicCast();

  return (NSManagedObjectID *)v4;
}

id sub_1000CBB54(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (objc_msgSend(v3, "ic_isEntityOfClass:", objc_opt_class()))
  {
    uint64_t v4 = [*(id *)(a1 + 32) modernManagedObjectContext];
    unsigned int v5 = [v4 objectWithID:v3];

    LODWORD(v4) = *(unsigned __int8 *)(a1 + 40);
    if (v4 == [v5 isPinned]
      || ([v5 isPinnable] & 1) == 0 && *(unsigned char *)(a1 + 40))
    {
      uint64_t v6 = 0;
    }
    else
    {
      uint64_t v6 = v3;
    }
    id v7 = v6;
  }
  else
  {
    id v7 = 0;
  }

  return v7;
}

void sub_1000CBD14(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) modernManagedObjectContext];
  id v3 = [v2 objectWithID:*(void *)(a1 + 40)];

  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  id obj = *(id *)(a1 + 48);
  id v4 = [obj countByEnumeratingWithState:&v25 objects:v30 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v18 = *(void *)v26;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v26 != v18) {
          objc_enumerationMutation(obj);
        }
        uint64_t v7 = *(void *)(*((void *)&v25 + 1) + 8 * (void)v6);
        uint64_t v8 = [*(id *)(a1 + 32) modernManagedObjectContext];
        unsigned int v9 = [v8 objectWithID:v7];

        long long v10 = [ICMoveDecisionController alloc];
        long long v29 = v9;
        char v11 = +[NSArray arrayWithObjects:&v29 count:1];
        id v12 = [*(id *)(a1 + 32) presentingViewController];
        id v13 = [(ICMoveDecisionController *)v10 initWithSourceObjects:v11 presentingViewController:v12];

        [(ICMoveDecisionController *)v13 setDestination:v3];
        v19[0] = _NSConcreteStackBlock;
        v19[1] = 3221225472;
        v19[2] = sub_1000CBF64;
        v19[3] = &unk_100629110;
        uint64_t v24 = *(void *)(a1 + 56);
        id v14 = v3;
        uint64_t v15 = *(void *)(a1 + 32);
        long long v16 = *(void **)(a1 + 40);
        id v20 = v14;
        uint64_t v21 = v15;
        uint64_t v22 = v7;
        id v23 = v16;
        [(ICMoveDecisionController *)v13 performDecisionWithCompletion:v19];

        uint64_t v6 = (char *)v6 + 1;
      }
      while (v5 != v6);
      id v5 = [obj countByEnumeratingWithState:&v25 objects:v30 count:16];
    }
    while (v5);
  }
}

void sub_1000CBF64(uint64_t a1, void *a2)
{
  id v3 = a2;
  unint64_t v4 = *(void *)(a1 + 64);
  id v5 = [*(id *)(a1 + 32) visibleSubFolders];
  id v6 = [v5 count];

  if (v4 < (unint64_t)v6)
  {
    uint64_t v7 = [*(id *)(a1 + 40) modernManagedObjectContext];
    v26[0] = _NSConcreteStackBlock;
    v26[1] = 3221225472;
    v26[2] = sub_1000CC238;
    void v26[3] = &unk_1006290E8;
    id v27 = v3;
    id v8 = *(id *)(a1 + 32);
    uint64_t v9 = *(void *)(a1 + 64);
    uint64_t v10 = *(void *)(a1 + 40);
    id v28 = v8;
    uint64_t v29 = v10;
    uint64_t v30 = v9;
    [v7 performBlockAndWait:v26];

    v24[0] = _NSConcreteStackBlock;
    v24[1] = 3221225472;
    v24[2] = sub_1000CC2DC;
    v24[3] = &unk_100625860;
    long long v25 = *(_OWORD *)(a1 + 40);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v24);
    char v11 = [*(id *)(a1 + 40) diffableDataSource];
    id v12 = [v11 snapshot];
    id v13 = [v12 sectionIdentifierForSectionContainingItemIdentifier:*(void *)(a1 + 48)];

    id v14 = [*(id *)(a1 + 40) diffableDataSource];
    uint64_t v15 = [v14 snapshotForSection:v13];

    if ([v15 containsItem:*(void *)(a1 + 56)]) {
      unsigned int v16 = [v15 isExpanded:*(void *)(a1 + 56)];
    }
    else {
      unsigned int v16 = 0;
    }
    if ([*(id *)(a1 + 40) isEditing]) {
      goto LABEL_7;
    }
    uint64_t v17 = [*(id *)(a1 + 40) diffableDataSource];
    uint64_t v18 = [v17 snapshot];
    id v19 = [v18 itemIdentifiers];
    unsigned int v20 = [v19 containsObject:*(void *)(a1 + 48)] ^ 1 | v16;

    if (v20 == 1)
    {
LABEL_7:
      [*(id *)(a1 + 40) reloadCellAfterDelayForObjectID:*(void *)(a1 + 48)];
    }
    else
    {
      uint64_t v21 = [*(id *)(a1 + 40) diffableDataSource];
      uint64_t v22 = [v21 snapshot];
      uint64_t v31 = *(void *)(a1 + 48);
      id v23 = +[NSArray arrayWithObjects:&v31 count:1];
      [v22 reconfigureItemsWithIdentifiers:v23];
    }
  }
}

void sub_1000CC238(uint64_t a1)
{
  objc_opt_class();
  id v2 = [*(id *)(a1 + 32) firstObject];
  ICDynamicCast();
  id v4 = (id)objc_claimAutoreleasedReturnValue();

  [*(id *)(a1 + 40) undoablyMoveSubFolder:v4 toIndex:*(void *)(a1 + 56)];
  id v3 = [*(id *)(a1 + 48) modernManagedObjectContext];
  [v3 ic_save];
}

id sub_1000CC2DC(uint64_t a1)
{
  return [*(id *)(a1 + 32) reExpandFolderWithObjectID:*(void *)(a1 + 40)];
}

id sub_1000CC534(uint64_t a1)
{
  return [*(id *)(a1 + 32) performReplyActionWithInvitation:*(void *)(a1 + 40)];
}

id sub_1000CC540(uint64_t a1)
{
  return [*(id *)(a1 + 32) performRemoveActionWithInvitation:*(void *)(a1 + 40)];
}

id sub_1000CCB80(uint64_t a1)
{
  return [*(id *)(a1 + 32) performCollaborationActionWithFolder:1 forceShareSheet:0 sourceView:0 sourceRect:CGRectNull.origin.x, CGRectNull.origin.y, CGRectNull.size.width, CGRectNull.size.height];
}

id sub_1000CCBA8(uint64_t a1)
{
  return [*(id *)(a1 + 32) performCollaborationActionWithFolder:*(void *)(a1 + 40) forceShareSheet:0 sourceView:*(void *)(a1 + 48) sourceRect:CGRectNull.origin.x, CGRectNull.origin.y, CGRectNull.size.width, CGRectNull.size.height];
}

id sub_1000CCBD0(uint64_t a1)
{
  return [*(id *)(a1 + 32) performShowActivityStreamActionWithFolder:*(void *)(a1 + 40)];
}

id sub_1000CCBDC(uint64_t a1)
{
  return [*(id *)(a1 + 32) performMoveActionWithFolder:*(void *)(a1 + 40) completion:0];
}

id sub_1000CCBEC(uint64_t a1)
{
  return _[*(id *)(a1 + 32) performEditSmartFolderActionWithFolder:*(void *)(a1 + 40)];
}

id sub_1000CCBF8(uint64_t a1)
{
  return [*(id *)(a1 + 32) performRenameActionWithFolder:*(void *)(a1 + 40)];
}

void sub_1000CCC04(uint64_t a1)
{
  double v1 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  id v2 = +[NSArray arrayWithObjects:&v3 count:1];
  [v1 performDeleteActionWithObjects:v2 completion:0];
}

id sub_1000CCC8C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) performImportArchiveActionWithNoteContainer:*(void *)(a1 + 40) fromSourceView:*(void *)(a1 + 48)];
}

void sub_1000CCC9C(void *a1)
{
  id v2 = (void *)a1[4];
  uint64_t v4 = a1[5];
  uint64_t v3 = +[NSArray arrayWithObjects:&v4 count:1];
  [v2 performExportArchiveActionWithObjects:v3 fromSourceView:a1[6]];
}

id sub_1000CD214(uint64_t a1)
{
  return [*(id *)(a1 + 32) performPinActionWithNote:*(void *)(a1 + 40)];
}

id sub_1000CD220(uint64_t a1)
{
  return [*(id *)(a1 + 32) performLockActionWithNote:*(void *)(a1 + 40)];
}

id sub_1000CD22C(uint64_t a1)
{
  return [*(id *)(a1 + 32) performCollaborationActionWithNote:*(void *)(a1 + 40) forceShareSheet:1 sourceView:*(void *)(a1 + 48) sourceRect:CGRectNull.origin.x, CGRectNull.origin.y, CGRectNull.size.width, CGRectNull.size.height]
}

id sub_1000CD254(uint64_t a1)
{
  return [*(id *)(a1 + 32) performCollaborationActionWithNote:*(void *)(a1 + 40) forceShareSheet:0 sourceView:*(void *)(a1 + 48) sourceRect:CGRectNull.origin.x, CGRectNull.origin.y, CGRectNull.size.width, CGRectNull.size.height];
}

void sub_1000CD27C(void *a1)
{
  id v2 = (void *)a1[4];
  uint64_t v4 = a1[5];
  uint64_t v3 = +[NSArray arrayWithObjects:&v4 count:1];
  [v2 performExportArchiveActionWithObjects:v3 fromSourceView:a1[6]];
}

void sub_1000CD310(uint64_t a1)
{
  double v1 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  id v2 = +[NSArray arrayWithObjects:&v3 count:1];
  [v1 performMoveActionWithNotes:v2 completion:0];
}

void sub_1000CD398(uint64_t a1)
{
  double v1 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  id v2 = +[NSArray arrayWithObjects:&v3 count:1];
  [v1 performDeleteActionWithObjects:v2 completion:0];
}

id sub_1000CD670(uint64_t a1)
{
  return _[*(id *)(a1 + 32) performSendActionWithNote:*(void *)(a1 + 40) fromSourceView:*(void *)(a1 + 48)];
}

void sub_1000CD680(uint64_t a1)
{
  double v1 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  id v2 = +[NSArray arrayWithObjects:&v3 count:1];
  [v1 performMoveActionWithNotes:v2 completion:0];
}

void sub_1000CD708(uint64_t a1)
{
  double v1 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  id v2 = +[NSArray arrayWithObjects:&v3 count:1];
  [v1 performDeleteActionWithObjects:v2 completion:0];
}

id sub_1000CD96C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    id v6 = [WeakRetained diffableDataSource];
    uint64_t v7 = [v6 itemIdentifierForIndexPath:v3];

    id v8 = [v5 cellForItemIdentifier:v7];
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      uint64_t v9 = [v7 object];
      uint64_t v10 = [v9 objectID];

      uint64_t v7 = (void *)v10;
    }
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v11 = v7;
      if (objc_msgSend(v11, "ic_isModernNoteType"))
      {
        id v12 = [v5 modernManagedObjectContext];
        id v13 = [v12 objectWithID:v11];

        id v14 = [v5 leadingSwipeActionsConfigurationForModernNote:v13 inCell:v8];
      }
      else
      {
        id v14 = 0;
      }
    }
    else
    {
      id v14 = 0;
    }
  }
  else
  {
    id v14 = 0;
  }

  return v14;
}

id sub_1000CDB98(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = WeakRetained;
  if (!WeakRetained)
  {
    id v14 = 0;
    goto LABEL_21;
  }
  id v6 = [WeakRetained diffableDataSource];
  uint64_t v7 = [v6 itemIdentifierForIndexPath:v3];

  id v8 = [v5 cellForItemIdentifier:v7];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v9 = [v7 object];
    uint64_t v10 = [v9 objectID];

    uint64_t v7 = (void *)v10;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v11 = v7;
    if (objc_msgSend(v11, "ic_isModernFolderType"))
    {
      id v12 = [v5 modernManagedObjectContext];
      id v13 = [v12 objectWithID:v11];

      if ([v13 isUnsupported])
      {
        id v14 = 0;
LABEL_18:

LABEL_19:
        goto LABEL_20;
      }
      uint64_t v16 = [v5 trailingSwipeActionsConfigurationForModernFolder:v13 inCell:v8];
    }
    else if (objc_msgSend(v11, "ic_isModernNoteType"))
    {
      uint64_t v15 = [v5 modernManagedObjectContext];
      id v13 = [v15 objectWithID:v11];

      uint64_t v16 = [v5 trailingSwipeActionsConfigurationForModernNote:v13 inCell:v8];
    }
    else if (objc_msgSend(v11, "ic_isLegacyNoteType"))
    {
      uint64_t v17 = [v5 legacyManagedObjectContext];
      id v13 = [v17 objectWithID:v11];

      uint64_t v16 = [v5 trailingSwipeActionsConfigurationForLegacyNote:v13 inCell:v8];
    }
    else
    {
      if (!objc_msgSend(v11, "ic_isInvitationType"))
      {
        id v14 = 0;
        goto LABEL_19;
      }
      uint64_t v18 = [v5 modernManagedObjectContext];
      id v13 = [v18 objectWithID:v11];

      uint64_t v16 = [v5 trailingSwipeActionsConfigurationForInvitation:v13 inCell:v8];
    }
    id v14 = (void *)v16;
    goto LABEL_18;
  }
  id v14 = 0;
LABEL_20:

LABEL_21:

  return v14;
}

void sub_1000CDFB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000CDFE4(uint64_t a1, void *a2)
{
  id v3 = (id *)(a1 + 40);
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  [WeakRetained performPinActionWithNote:*(void *)(a1 + 32)];

  v5[2](v5, 1);
}

void sub_1000CE2A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000CE2D8(uint64_t a1, void *a2)
{
  id v3 = (id *)(a1 + 40);
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  uint64_t v7 = *(void *)(a1 + 32);
  id v6 = +[NSArray arrayWithObjects:&v7 count:1];
  [WeakRetained performDeleteActionWithObjects:v6 completion:v4];
}

void sub_1000CE38C(uint64_t a1, void *a2)
{
  id v3 = (id *)(a1 + 40);
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  uint64_t v7 = *(void *)(a1 + 32);
  id v6 = +[NSArray arrayWithObjects:&v7 count:1];
  [WeakRetained performMoveActionWithNotes:v6 completion:v4];
}

void sub_1000CE790(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_1000CE7CC(uint64_t a1, void *a2)
{
  id v3 = (id *)(a1 + 40);
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  uint64_t v7 = *(void *)(a1 + 32);
  id v6 = +[NSArray arrayWithObjects:&v7 count:1];
  [WeakRetained performDeleteActionWithObjects:v6 completion:v4];
}

void sub_1000CE880(uint64_t a1, void *a2)
{
  id v3 = (id *)(a1 + 40);
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  uint64_t v7 = *(void *)(a1 + 32);
  id v6 = +[NSArray arrayWithObjects:&v7 count:1];
  [WeakRetained performMoveActionWithNotes:v6 completion:v4];
}

void sub_1000CE934(uint64_t a1, void *a2)
{
  id v3 = (id *)(a1 + 48);
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  [WeakRetained presentationSourceRectForCell:*(void *)(a1 + 32)];
  double v7 = v6;
  double v9 = v8;
  double v11 = v10;
  double v13 = v12;

  id v14 = objc_loadWeakRetained(v3);
  [v14 performCollaborationActionWithNote:*(void *)(a1 + 40) forceShareSheet:1 sourceView:v14 sourceRect:v4 completion:v7, v9, v11, v13];
}

void sub_1000CED64(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_1000CEDA4(uint64_t a1, void *a2)
{
  id v3 = (id *)(a1 + 40);
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  uint64_t v7 = *(void *)(a1 + 32);
  double v6 = +[NSArray arrayWithObjects:&v7 count:1];
  [WeakRetained performDeleteActionWithObjects:v6 completion:v4];
}

void sub_1000CEE58(uint64_t a1, void *a2)
{
  id v3 = (id *)(a1 + 40);
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  [WeakRetained performMoveActionWithFolder:*(void *)(a1 + 32) completion:v4];
}

void sub_1000CEEC4(uint64_t a1, void *a2)
{
  id v3 = (id *)(a1 + 48);
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  [WeakRetained presentationSourceRectForCell:*(void *)(a1 + 32)];
  double v7 = v6;
  double v9 = v8;
  double v11 = v10;
  double v13 = v12;

  id v14 = objc_loadWeakRetained(v3);
  [v14 performCollaborationActionWithFolder:*(void *)(a1 + 40) forceShareSheet:1 sourceView:v14 sourceRect:v4 completion:v7 v9 v11 v13];
}

void sub_1000CF1DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000CF21C(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained performRemoveActionWithInvitation:*(void *)(a1 + 32)];

  id v4 = v5;
  if (v5)
  {
    (*((void (**)(id, uint64_t))v5 + 2))(v5, 1);
    id v4 = v5;
  }
}

void sub_1000CF290(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained performReplyActionWithInvitation:*(void *)(a1 + 32)];

  id v4 = v5;
  if (v5)
  {
    (*((void (**)(id, uint64_t))v5 + 2))(v5, 1);
    id v4 = v5;
  }
}

void sub_1000CF74C(uint64_t a1)
{
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      double v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(a1 + 40) togglePinnedForNote:*(void *)(*((void *)&v7 + 1) + 8 * (void)v6) (void)v7];
        double v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

void sub_1000CFA14(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1000CFA3C(uint64_t a1)
{
  double v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = [WeakRetained lockNoteActivity];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  void v4[2] = sub_1000CFB08;
  v4[3] = &unk_100626358;
  objc_copyWeak(&v5, v1);
  [v3 performActivityWithCompletion:v4];

  objc_destroyWeak(&v5);
}

void sub_1000CFAF4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1000CFB08(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setLockNoteActivity:0];
}

void sub_1000CFB4C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setLockNoteActivity:0];
}

uint64_t sub_1000CFDF4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_1000CFE0C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1000D0280(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [ICFolderListSelectionValidator alloc];
  id v5 = +[ICNoteContext sharedContext];
  double v6 = [v5 workerManagedObjectContext];
  long long v7 = +[NoteContext sharedContext];
  long long v8 = [v7 managedObjectContext];
  long long v9 = [(ICFolderListSelectionValidator *)v4 initWithModernContext:v6 htmlContext:v8];

  id v14 = _NSConcreteStackBlock;
  uint64_t v15 = 3221225472;
  uint64_t v16 = sub_1000D03EC;
  uint64_t v17 = &unk_100629200;
  long long v10 = v9;
  uint64_t v11 = *(void *)(a1 + 32);
  uint64_t v18 = v10;
  uint64_t v19 = v11;
  double v12 = [v3 ic_compactMap:&v14];
  [*(id *)(a1 + 32) synchronouslyRemoveItemsWithIdentifiers:v12, v14, v15, v16, v17];
  uint64_t v13 = *(void *)(a1 + 40);
  if (v13) {
    (*(void (**)(uint64_t, BOOL))(v13 + 16))(v13, [v3 count] != 0);
  }
}

id sub_1000D03EC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  id v5 = [*(id *)(a1 + 40) viewControllerManager];
  double v6 = [v5 selectedContainerIdentifiers];
  LOBYTE(v4) = [v4 isSelectionAppropriateForObject:v3 selectedContainerIdentifiers:v6];

  if (v4)
  {
    long long v7 = 0;
  }
  else
  {
    long long v7 = [v3 objectID];
  }

  return v7;
}

NSManagedObjectID *__cdecl sub_1000D0898(id a1, NSManagedObject *a2)
{
  return [(NSManagedObject *)a2 objectID];
}

uint64_t sub_1000D08A0(uint64_t a1, int a2)
{
  if (a2) {
    [*(id *)(a1 + 32) synchronouslyRemoveItemsWithIdentifiers:*(void *)(a1 + 40)];
  }
  uint64_t result = *(void *)(a1 + 48);
  if (result)
  {
    id v4 = *(uint64_t (**)(void))(result + 16);
    return v4();
  }
  return result;
}

uint64_t sub_1000D0900(uint64_t a1, int a2)
{
  if (a2) {
    [*(id *)(a1 + 32) synchronouslyRemoveItemsWithIdentifiers:*(void *)(a1 + 40)];
  }
  uint64_t result = *(void *)(a1 + 48);
  if (result)
  {
    id v4 = *(uint64_t (**)(void))(result + 16);
    return v4();
  }
  return result;
}

uint64_t sub_1000D0960(uint64_t a1)
{
  [*(id *)(a1 + 32) performUpdatesIfNeededAndWait];
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    id v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

void sub_1000D0AC4(uint64_t a1, uint64_t a2, void *a3)
{
  id v8 = a3;
  if (a2)
  {
    id v5 = *(void **)(a1 + 32);
    double v6 = [*(id *)(a1 + 40) objectID];
    [v5 reloadCellAfterDelayForObjectID:v6];
  }
  uint64_t v7 = *(void *)(a1 + 48);
  if (v7) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v7, a2);
  }
}

uint64_t sub_1000D0E1C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1000D1854(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va1, a11);
  va_start(va, a11);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000D187C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000D188C(uint64_t a1)
{
}

void sub_1000D1894(uint64_t a1, void *a2)
{
  id v16 = a2;
  id v4 = [v16 representedElementCategory];
  if (*(void *)(a1 + 32))
  {
    id v5 = [v16 indexPath];
    BOOL v6 = v5 == *(void **)(a1 + 32);
  }
  else
  {
    BOOL v6 = 0;
  }
  uint64_t v7 = [*(id *)(a1 + 40) diffableDataSource];
  id v8 = [v16 indexPath];
  long long v9 = [v7 itemIdentifierForIndexPath:v8];

  unsigned __int8 v10 = [v9 conformsToProtocol:&OBJC_PROTOCOL___ICSectionIdentifier];
  if (!v4 && !v6 && (v10 & 1) == 0)
  {
    switch(*(void *)(a1 + 64))
    {
      case 1:
        [v16 frame];
        double v12 = v11;
        if (v11 > *(double *)(*(void *)(*(void *)(a1 + 48) + 8) + 24)) {
          goto LABEL_15;
        }
        break;
      case 2:
        [v16 frame];
        double v12 = v13;
        if (v13 < *(double *)(*(void *)(*(void *)(a1 + 48) + 8) + 24)) {
          goto LABEL_15;
        }
        break;
      case 4:
        [v16 frame];
        double v12 = v14;
        if (v14 > *(double *)(*(void *)(*(void *)(a1 + 48) + 8) + 24)) {
          goto LABEL_15;
        }
        break;
      case 8:
        [v16 frame];
        double v12 = v15;
        if (v15 < *(double *)(*(void *)(*(void *)(a1 + 48) + 8) + 24))
        {
LABEL_15:
          objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), a2);
          *(double *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = v12;
        }
        break;
      default:
        break;
    }
  }
}

uint64_t sub_1000D1C54(uint64_t a1)
{
  return 1;
}

uint64_t sub_1000D1C78(uint64_t a1)
{
  return 1;
}

uint64_t sub_1000D1F54(uint64_t a1)
{
  double v1 = *(void **)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v2 = +[NSArray arrayWithObjects:&v4 count:1];
  [v1 performDeleteActionWithObjects:v2 completion:0];

  return 1;
}

uint64_t sub_1000D1FE0(uint64_t a1)
{
  return 1;
}

uint64_t sub_1000D2008(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = [*(id *)(a1 + 40) objectID];
  uint64_t v4 = [v2 cellForItemIdentifier:v3];

  [*(id *)(a1 + 32) performCollaborationActionWithFolder:*(void *)(a1 + 40) forceShareSheet:0 sourceView:v4 sourceRect:CGRectMake(CGRectNull.origin.x, CGRectNull.origin.y, CGRectNull.size.width, CGRectNull.size.height)];
  return 1;
}

uint64_t sub_1000D223C(uint64_t a1)
{
  return 1;
}

uint64_t sub_1000D25E8(uint64_t a1)
{
  double v1 = *(void **)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v2 = +[NSArray arrayWithObjects:&v4 count:1];
  [v1 performDeleteActionWithObjects:v2 completion:0];

  return 1;
}

uint64_t sub_1000D2674(uint64_t a1)
{
  double v1 = *(void **)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v2 = +[NSArray arrayWithObjects:&v4 count:1];
  [v1 performMoveActionWithNotes:v2 completion:0];

  return 1;
}

uint64_t sub_1000D2700(uint64_t a1)
{
  return 1;
}

uint64_t sub_1000D2724(uint64_t a1)
{
  return 1;
}

void sub_1000D384C(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if ((objc_opt_respondsToSelector() & 1) != 0 && ![v3 shouldAttemptLaunchTask])
  {
    double v13 = os_log_create("com.apple.notes", "LaunchTask");
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG)) {
      sub_1004DAA1C((uint64_t)v3, v13, v20, v21, v22, v23, v24, v25);
    }
    goto LABEL_12;
  }
  BOOL v6 = os_log_create("com.apple.notes", "LaunchTask");
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG)) {
    sub_1004DA9B0((uint64_t)v3, v6, v7, v8, v9, v10, v11, v12);
  }

  if (objc_opt_respondsToSelector())
  {
    v26[0] = _NSConcreteStackBlock;
    v26[1] = 3221225472;
    v26[2] = sub_1000D3A64;
    void v26[3] = &unk_100625230;
    id v27 = v3;
    id v28 = v4;
    [v27 runLaunchTaskWithCompletionHandler:v26];

    goto LABEL_16;
  }
  if (objc_opt_respondsToSelector())
  {
    [v3 runLaunchTask];
    double v13 = os_log_create("com.apple.notes", "LaunchTask");
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG)) {
      sub_1004DA944((uint64_t)v3, v13, v14, v15, v16, v17, v18, v19);
    }
LABEL_12:

    goto LABEL_14;
  }
  +[ICAssert handleFailedAssertWithCondition:"__objc_no", "void _ICLaunchTaskRunWithCompletionHandler(__strong id<ICLaunchTask> _Nonnull, void (^__strong _Nonnull)(NSError * _Nullable __strong))", 1, 0, @"Launch task %@ does not implement either -runLaunchTaskWithCompletionHandler: or -runLaunchTask:", v3 functionName simulateCrash showAlert format];
LABEL_14:
  if (v4) {
    (*((void (**)(id, void))v4 + 2))(v4, 0);
  }
LABEL_16:
}

void sub_1000D3A64(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = os_log_create("com.apple.notes", "LaunchTask");
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG)) {
    sub_1004DAA88(a1, v4, v5, v6, v7, v8, v9, v10);
  }

  uint64_t v11 = *(void *)(a1 + 40);
  if (v11) {
    (*(void (**)(uint64_t, id))(v11 + 16))(v11, v3);
  }
}

void sub_1000D491C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2)
  {
    id v4 = [*(id *)(a1 + 32) activityType];
    (*(void (**)(uint64_t, uint64_t, id))(v2 + 16))(v2, a2, v4);
  }
}

void sub_1000D4F04(uint64_t a1, void *a2)
{
  id v10 = a2;
  id v3 = +[NSNotificationCenter defaultCenter];
  [v3 addObserver:*(void *)(a1 + 32) selector:"textChanged:" name:UITextFieldTextDidChangeNotification object:v10];

  id v4 = +[NSBundle mainBundle];
  uint64_t v5 = [v4 localizedStringForKey:@"Name" value:&stru_10063F3D8 table:0];
  [v10 setPlaceholder:v5];

  uint64_t v6 = [*(id *)(a1 + 32) presentingViewController];
  uint64_t v7 = [v6 view];
  [v10 setAutocapitalizationType:ICLocalizedCapitalizationStyleForView()];

  [v10 setClearButtonMode:1];
  [v10 setReturnKeyType:9];
  [v10 setEnablesReturnKeyAutomatically:1];
  uint64_t v8 = [*(id *)(a1 + 32) folder];
  uint64_t v9 = [v8 localizedTitle];
  [v10 setText:v9];

  [*(id *)(a1 + 32) setTextField:v10];
}

void sub_1000D5068(uint64_t a1)
{
  [*(id *)(a1 + 32) activityDidFinish:0];
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2)
  {
    id v3 = [*(id *)(a1 + 32) activityType];
    (*(void (**)(uint64_t, void, id))(v2 + 16))(v2, 0, v3);
  }
}

void sub_1000D50F0(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) textField];
  id v3 = [v2 text];
  id v4 = [v3 ic_trimmedString];

  uint64_t v5 = +[ICFolder stringByScrubbingStringForFolderName:v4];
  uint64_t v6 = [*(id *)(a1 + 32) folder];
  id v24 = 0;
  unsigned int v7 = [v6 isTitleValid:v5 error:&v24];
  id v8 = v24;

  if (!v7)
  {
    uint64_t v17 = [v8 userInfo];
    uint64_t v18 = [*(id *)(a1 + 32) presentingViewController];
    uint64_t v19 = [v17 objectForKeyedSubscript:NSLocalizedDescriptionKey];
    uint64_t v20 = [v17 objectForKeyedSubscript:NSLocalizedRecoverySuggestionErrorKey];
    v22[0] = _NSConcreteStackBlock;
    v22[1] = 3221225472;
    v22[2] = sub_1000D5378;
    v22[3] = &unk_1006264F0;
    uint64_t v21 = *(void **)(a1 + 40);
    void v22[4] = *(void *)(a1 + 32);
    id v23 = v21;
    [v18 ic_showSingleButtonAlertWithTitle:v19 message:v20 handler:v22];

    goto LABEL_5;
  }
  uint64_t v9 = [*(id *)(a1 + 32) folder];
  [v9 undoablySetTitle:v5];

  id v10 = [*(id *)(a1 + 32) presentingViewController];
  uint64_t v11 = [v10 ic_viewControllerManager];
  uint64_t v12 = [v11 noteEditorViewController];
  [v12 resetTextViewUndoManager];

  double v13 = +[NSNotificationCenter defaultCenter];
  uint64_t v14 = *(void **)(a1 + 32);
  uint64_t v15 = [v14 textField];
  [v13 removeObserver:v14 name:UITextFieldTextDidChangeNotification object:v15];

  [*(id *)(a1 + 32) activityDidFinish:1];
  uint64_t v16 = *(void *)(a1 + 40);
  if (v16)
  {
    uint64_t v17 = [*(id *)(a1 + 32) activityType];
    (*(void (**)(uint64_t, uint64_t, void *))(v16 + 16))(v16, 1, v17);
LABEL_5:
  }
}

id sub_1000D5378(uint64_t a1)
{
  [*(id *)(a1 + 32) activityDidFinish:1];
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2)
  {
    id v3 = [*(id *)(a1 + 32) activityType];
    (*(void (**)(uint64_t, uint64_t, void *))(v2 + 16))(v2, 1, v3);
  }
  id v4 = *(void **)(a1 + 32);

  return [v4 performActivityWithCompletion:0];
}

void sub_1000D53F8(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) textField];
  [v1 selectAll:0];
}

void sub_1000D5664(id a1, NSString *a2)
{
  uint64_t v2 = (void *)UIApp;
  uint64_t v3 = qword_1006AA1F8;
  id v4 = a2;
  [v2 startedTest:v3];
  [UIApp failedTest:qword_1006AA1F8 withFailure:v4];
}

void sub_1000D63F4(void *a1)
{
  if (byte_1006AA228 == 1)
  {
    id v1 = (void *)UIApp;
    id v2 = a1;
    [v1 finishedSubTest:@"ICDelaySubTest" forTest:v2];
    byte_1006AA228 = 0;
    [UIApp startedSubTest:@"ICAnimationSubTest" forTest:v2];
  }
}

void sub_1000D65D0(id a1)
{
}

void sub_1000D6680(id a1)
{
  if (byte_1006AA228 == 1)
  {
    [UIApp finishedSubTest:@"ICDelaySubTest" forTest:qword_1006AA1F8];
    byte_1006AA228 = 0;
  }
  else
  {
    [UIApp finishedSubTest:@"ICAnimationSubTest" forTest:qword_1006AA1F8];
  }
  id v1 = (void *)UIApp;
  uint64_t v2 = qword_1006AA1F8;
  uint64_t v3 = qword_1006AA208;

  _[v1 finishedTest:v2 extraResults:0 withTeardownBlock:v3];
}

void sub_1000D6770(id a1)
{
  if (byte_1006AA228 == 1)
  {
    [UIApp finishedSubTest:@"ICDelaySubTest" forTest:qword_1006AA1F8];
    byte_1006AA228 = 0;
  }
  else
  {
    [UIApp finishedSubTest:@"ICAnimationSubTest" forTest:qword_1006AA1F8];
  }
  id v1 = (void *)UIApp;
  uint64_t v2 = qword_1006AA1F8;
  uint64_t v3 = qword_1006AA208;

  _[v1 finishedTest:v2 extraResults:0 withTeardownBlock:v3];
}

void sub_1000D6988(id a1)
{
}

void sub_1000D69AC(id a1)
{
  [UIApp finishedSubTest:@"ICNoteEditorTypingFinishedSubTest" forTest:qword_1006AA1F8];
  id v1 = (void *)UIApp;
  uint64_t v2 = qword_1006AA1F8;
  uint64_t v3 = qword_1006AA208;

  _[v1 finishedTest:v2 extraResults:0 withTeardownBlock:v3];
}

void sub_1000D6B34(id a1)
{
}

void sub_1000D6CB4(uint64_t a1)
{
  [*(id *)(a1 + 32) ic_selectLocalModernAccount];
  uint64_t v2 = +[UIDevice currentDevice];
  id v3 = [v2 userInterfaceIdiom];

  if (v3 == (id)1)
  {
    [*(id *)(a1 + 32) ic_viewControllerManager];
    id v5 = (id)objc_claimAutoreleasedReturnValue();
    id v4 = [v5 mainSplitViewController];
    [v4 hideColumn:0];
  }
}

id sub_1000D6D64(uint64_t a1)
{
  byte_1006AA211 = 0;
  [UIApp startedTest:qword_1006AA1F8];
  [UIApp startedSubTest:@"ICDelaySubTest" forTest:qword_1006AA1F8];
  byte_1006AA228 = 1;
  uint64_t v2 = *(void **)(a1 + 32);

  return _[v2 showAccountsListAnimated:1];
}

void sub_1000D6DE4(void *a1, int a2)
{
  id v3 = a1;
  [UIApp startedSubTest:@"ICDelaySubTest" forTest:v3];
  byte_1006AA228 = 1;
  if (a2)
  {
    id v4 = (void *)UIApp;
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    id v5[2] = sub_1000DD868;
    v5[3] = &unk_100625AF0;
    id v6 = v3;
    [v4 installCACommitCompletionBlock:v5];
  }
}

void sub_1000D6F44(uint64_t a1)
{
  [*(id *)(a1 + 32) showAccountsList];
  dispatch_time_t v2 = dispatch_time(0, 4000000000);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  void v4[2] = sub_1000D6FF8;
  v4[3] = &unk_100625860;
  id v3 = *(void **)(a1 + 40);
  void v4[4] = *(void *)(a1 + 32);
  id v5 = v3;
  dispatch_after(v2, (dispatch_queue_t)&_dispatch_main_q, v4);
}

void sub_1000D6FF8(uint64_t a1)
{
  dispatch_time_t v2 = +[ICApplicationTestingHelper sharedHelper];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  void v4[2] = sub_1000D70A0;
  v4[3] = &unk_100625860;
  id v3 = *(void **)(a1 + 40);
  void v4[4] = *(void *)(a1 + 32);
  id v5 = v3;
  [v2 waitForPostLaunchTasksThenPerformBlock:v4];
}

void sub_1000D70A0(uint64_t a1)
{
  [*(id *)(a1 + 32) ic_folderListScrollView];
  id v2 = (id)objc_claimAutoreleasedReturnValue();
  [*(id *)(a1 + 32) performScrollTestForScrollView:v2 withOptions:*(void *)(a1 + 40)];
}

void sub_1000D718C(uint64_t a1)
{
  [*(id *)(a1 + 32) showAccountsList];
  dispatch_time_t v2 = dispatch_time(0, 2000000000);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  id v5[2] = sub_1000D7240;
  v5[3] = &unk_100625860;
  id v3 = *(id *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 32);
  id v6 = v3;
  uint64_t v7 = v4;
  dispatch_after(v2, (dispatch_queue_t)&_dispatch_main_q, v5);
}

void sub_1000D7240(uint64_t a1)
{
  dispatch_time_t v2 = +[ICApplicationTestingHelper sharedHelper];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  id v5[2] = sub_1000D72E8;
  v5[3] = &unk_100625860;
  id v3 = *(id *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  id v6 = v3;
  uint64_t v7 = v4;
  [v2 waitForPostLaunchTasksThenPerformBlock:v5];
}

id sub_1000D72E8(uint64_t a1)
{
  dispatch_time_t v2 = [*(id *)(a1 + 32) objectForKey:@"iterations"];
  unsigned int v3 = [v2 intValue];

  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  id v5[2] = sub_1000D73A4;
  v5[3] = &unk_100629458;
  void v5[4] = *(void *)(a1 + 40);
  unsigned int v6 = v3;
  return [UIApp rotateIfNeeded:1 completion:v5];
}

id sub_1000D73A4(uint64_t a1)
{
  [UIApp startedTest:qword_1006AA1F8];
  dispatch_time_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(unsigned int *)(a1 + 40);

  return _[v2 rotateToOrientation:4 iterationsRemaining:v3 completion:&stru_100629430];
}

void sub_1000D7400(id a1)
{
}

void sub_1000D7494(uint64_t a1)
{
  [*(id *)(a1 + 32) showAccountsList];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1000D75C8;
  v7[3] = &unk_100625AF0;
  void v7[4] = *(void *)(a1 + 32);
  dispatch_time_t v2 = objc_retainBlock(v7);
  uint64_t v3 = v2;
  if (*(unsigned char *)(a1 + 40))
  {
    dispatch_time_t v4 = dispatch_time(0, 2000000000);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    void block[2] = sub_1000D77E0;
    block[3] = &unk_100625B40;
    void block[4] = *(void *)(a1 + 32);
    id v6 = v3;
    dispatch_after(v4, (dispatch_queue_t)&_dispatch_main_q, block);
  }
  else
  {
    ((void (*)(void *))v2[2])(v2);
  }
}

void sub_1000D75C8(uint64_t a1)
{
  dispatch_time_t v2 = dispatch_time(0, 2000000000);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  void block[2] = sub_1000D765C;
  block[3] = &unk_100625AF0;
  void block[4] = *(void *)(a1 + 32);
  dispatch_after(v2, (dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_1000D765C(uint64_t a1)
{
  dispatch_time_t v2 = +[ICApplicationTestingHelper sharedHelper];
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  _DWORD v3[2] = sub_1000D76F0;
  v3[3] = &unk_100625AF0;
  void v3[4] = *(void *)(a1 + 32);
  [v2 waitForPostLaunchTasksThenPerformBlock:v3];
}

void sub_1000D76F0(uint64_t a1)
{
  byte_1006AA211 = 0;
  [UIApp startedTest:qword_1006AA1F8];
  [UIApp startedSubTest:@"ICDelaySubTest" forTest:qword_1006AA1F8];
  byte_1006AA228 = 1;
  [*(id *)(a1 + 32) ic_selectLocalModernAccount];
  dispatch_time_t v2 = +[UIDevice currentDevice];
  id v3 = [v2 userInterfaceIdiom];

  if (v3 == (id)1)
  {
    [*(id *)(a1 + 32) ic_viewControllerManager];
    id v5 = (id)objc_claimAutoreleasedReturnValue();
    dispatch_time_t v4 = [v5 mainSplitViewController];
    [v4 showColumn:1];
  }
}

void sub_1000D77E0(uint64_t a1)
{
  [*(id *)(a1 + 32) ic_selectLocalModernAccount];
  dispatch_time_t v2 = dispatch_time(0, 2000000000);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  void v4[2] = sub_1000D7894;
  v4[3] = &unk_100625B40;
  id v3 = *(void **)(a1 + 40);
  void v4[4] = *(void *)(a1 + 32);
  id v5 = v3;
  dispatch_after(v2, (dispatch_queue_t)&_dispatch_main_q, v4);
}

uint64_t sub_1000D7894(uint64_t a1)
{
  [*(id *)(a1 + 32) showAccountsList];
  dispatch_time_t v2 = +[UIDevice currentDevice];
  id v3 = [v2 userInterfaceIdiom];

  if (v3 == (id)1)
  {
    dispatch_time_t v4 = [*(id *)(a1 + 32) ic_viewControllerManager];
    id v5 = [v4 mainSplitViewController];
    [v5 hideColumn:1];
  }
  id v6 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);

  return v6();
}

void sub_1000D7B60(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 48);
  uint64_t v2 = v1 - 1;
  if (v1 != 1)
  {
    dispatch_time_t v4 = os_log_create("com.apple.notes", "Test");
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG)) {
      sub_1004DAEC8(v2, v4);
    }

    dispatch_time_t v5 = dispatch_time(0, (uint64_t)(*(double *)(a1 + 56) * 1000000000.0));
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_1000D7C7C;
    void v8[3] = &unk_100629480;
    id v6 = *(void **)(a1 + 40);
    void v8[4] = *(void *)(a1 + 32);
    id v9 = v6;
    uint64_t v7 = *(void *)(a1 + 56);
    uint64_t v10 = *(void *)(a1 + 64);
    uint64_t v11 = *(void *)(a1 + 72);
    uint64_t v12 = v7;
    uint64_t v13 = v2;
    dispatch_after(v5, (dispatch_queue_t)&_dispatch_main_q, v8);
  }
}

id sub_1000D7C7C(uint64_t a1)
{
  return [*(id *)(a1 + 32) performFlickScrollOnScrollView:*(void *)(a1 + 40) duration:*(void *)(a1 + 56) delta:*(void *)(a1 + 72) delayBetweenScroll:*(double *)(a1 + 48) iterations:*(double *)(a1 + 64)];
}

id sub_1000D7F2C(uint64_t a1)
{
  return [*(id *)(a1 + 32) ic_selectLocalModernAccount];
}

void sub_1000D7F34(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  [v2 ic_notesListScrollView];
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  [v2 performScrollTestForScrollView:v3 withOptions:*(void *)(a1 + 40)];
}

id sub_1000D806C(uint64_t a1)
{
  return [*(id *)(a1 + 32) ic_selectFolderNamed:@"Notes"];
}

void sub_1000D807C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  [v2 ic_notesListScrollView];
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  [v2 performScrollTestForScrollView:v3 withOptions:*(void *)(a1 + 40)];
}

void sub_1000D8170(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1000D8248;
  void v8[3] = &unk_100625AF0;
  void v8[4] = v2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  id v5[2] = sub_1000D8250;
  v5[3] = &unk_100625860;
  id v3 = *(id *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 32);
  id v6 = v3;
  uint64_t v7 = v4;
  [v2 showNotesListWithAccountSelectionBlock:v8 readyBlock:v5];
}

id sub_1000D8248(uint64_t a1)
{
  return [*(id *)(a1 + 32) ic_selectLocalModernAccount];
}

void sub_1000D8250(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) objectForKey:@"searchQuery"];
  id v3 = (void *)v2;
  uint64_t v4 = @"a";
  if (v2) {
    uint64_t v4 = (__CFString *)v2;
  }
  dispatch_time_t v5 = v4;

  id v6 = [*(id *)(a1 + 40) ic_viewControllerManager];
  [v6 startSearchWithSearchQueryString:v5 becomeFirstResponder:0];

  dispatch_time_t v7 = dispatch_time(0, 10000000000);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  void block[2] = sub_1000D836C;
  block[3] = &unk_100625860;
  int8x16_t v9 = *(int8x16_t *)(a1 + 32);
  id v8 = (id)v9.i64[0];
  int8x16_t v11 = vextq_s8(v9, v9, 8uLL);
  dispatch_after(v7, (dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_1000D836C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) ic_viewControllerManager];
  id v5 = [v2 searchController];

  objc_opt_class();
  id v3 = [v5 collectionView];
  uint64_t v4 = ICCheckedDynamicCast();

  [*(id *)(a1 + 32) performScrollTestForScrollView:v4 withOptions:*(void *)(a1 + 40)];
}

id sub_1000D84F0(uint64_t a1)
{
  return [*(id *)(a1 + 32) ic_selectLocalModernAccount];
}

id sub_1000D84F8(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) objectForKey:@"iterations"];
  unsigned int v3 = [v2 intValue];

  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  id v5[2] = sub_1000D85B4;
  v5[3] = &unk_100629458;
  void v5[4] = *(void *)(a1 + 40);
  unsigned int v6 = v3;
  return [UIApp rotateIfNeeded:1 completion:v5];
}

id sub_1000D85B4(uint64_t a1)
{
  [UIApp startedTest:qword_1006AA1F8];
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(unsigned int *)(a1 + 40);

  return _[v2 rotateToOrientation:4 iterationsRemaining:v3 completion:&stru_1006294A0];
}

void sub_1000D8610(id a1)
{
}

id sub_1000D86CC(uint64_t a1)
{
  return [*(id *)(a1 + 32) ic_selectLocalModernAccount];
}

void sub_1000D86D4(uint64_t a1)
{
  [UIApp startedTest:qword_1006AA1F8];
  uint64_t v2 = +[UIDevice currentDevice];
  int v3 = [v2 userInterfaceIdiom] != 0;

  sub_1000D6DE4((void *)qword_1006AA1F8, v3);
  uint64_t v4 = *(void **)(a1 + 32);
  id v5 = [v4 ic_notesListScrollView];
  id v7 = 0;
  LOBYTE(v3) = [v4 selectFirstNoteInScrollView:v5 errorString:&v7];
  id v6 = v7;

  if ((v3 & 1) == 0) {
    [UIApp failedTest:qword_1006AA1F8 withFailure:v6];
  }
}

id sub_1000D8858(uint64_t a1)
{
  return [*(id *)(a1 + 32) ic_selectLocalModernAccount];
}

void sub_1000D8860(uint64_t a1)
{
  byte_1006AA211 = 0;
  [UIApp startedTest:qword_1006AA1F8];
  sub_1000D6DE4((void *)qword_1006AA1F8, 1);
  uint64_t v2 = [*(id *)(a1 + 32) ic_viewControllerManager];
  int v3 = [v2 showNewNoteWithApproach:2 sender:0 animated:1];

  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1000D8954;
  v7[3] = &unk_100625AF0;
  id v8 = v3;
  id v4 = v3;
  id v5 = objc_retainBlock(v7);
  id v6 = (void *)qword_1006AA208;
  qword_1006AA208 = (uint64_t)v5;
}

void sub_1000D8954()
{
  objc_opt_class();
  uint64_t v0 = ICCheckedDynamicCast();
  +[ICNote purgeNote:v0];

  id v1 = +[ICNoteContext sharedContext];
  [v1 saveImmediately];
}

uint64_t sub_1000D8AE8(uint64_t a1)
{
  return 1;
}

id sub_1000D8B1C(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)(a1 + 32);
  id v5 = [v4 ic_notesListScrollView];
  id v6 = [v4 selectFirstNoteInScrollView:v5 errorString:a2];

  if (v6 && *(unsigned char *)(a1 + 40)) {
    dispatchMainAfterDelay();
  }
  return v6;
}

void sub_1000D8BE8(uint64_t a1)
{
  [*(id *)(a1 + 32) ic_noteEditorViewController];
  id v1 = (id)objc_claimAutoreleasedReturnValue();
  [v1 setEditing:1 animated:0];
}

void sub_1000D8C34(uint64_t a1)
{
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1000D8D14;
  v6[3] = &unk_100625AF0;
  void v6[4] = *(void *)(a1 + 32);
  uint64_t v2 = objc_retainBlock(v6);
  int v3 = v2;
  if (*(unsigned char *)(a1 + 40))
  {
    id v4 = [*(id *)(a1 + 32) ic_noteEditorViewController];
    [v4 setEditing:0 animated:0];

    dispatch_time_t v5 = dispatch_time(0, 2000000000);
    dispatch_after(v5, (dispatch_queue_t)&_dispatch_main_q, v3);
  }
  else
  {
    ((void (*)(void *))v2[2])(v2);
  }
}

void sub_1000D8D14(uint64_t a1)
{
  byte_1006AA211 = 0;
  [UIApp startedTest:qword_1006AA1F8];
  sub_1000D6DE4((void *)qword_1006AA1F8, 1);
  objc_opt_class();
  uint64_t v2 = [*(id *)(a1 + 32) ic_noteEditorViewController];
  int v3 = [v2 addNewNote];
  id v4 = ICDynamicCast();

  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1000D8E2C;
  void v8[3] = &unk_100625AF0;
  id v9 = v4;
  id v5 = v4;
  id v6 = objc_retainBlock(v8);
  id v7 = (void *)qword_1006AA208;
  qword_1006AA208 = (uint64_t)v6;
}

void sub_1000D8E2C(uint64_t a1)
{
  +[ICNote purgeNote:*(void *)(a1 + 32)];
  id v1 = +[ICNoteContext sharedContext];
  [v1 saveImmediately];
}

uint64_t sub_1000D8FB4(uint64_t a1)
{
  return 1;
}

id sub_1000D8FD4(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)(a1 + 32);
  id v5 = [v4 ic_notesListScrollView];
  id v6 = [v4 selectFirstNoteInScrollView:v5 errorString:a2];

  if (v6 && *(unsigned char *)(a1 + 40)) {
    [*(id *)(a1 + 32) bringUpKeyboard];
  }
  return v6;
}

void sub_1000D9044(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) ic_noteEditorViewController];
  id v3 = [v2 textView];

  [*(id *)(a1 + 32) performScrollTestForScrollView:v3 withOptions:*(void *)(a1 + 40)];
}

uint64_t sub_1000D919C(uint64_t a1)
{
  return 1;
}

id sub_1000D91BC(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = [v3 ic_notesListScrollView];
  id v5 = [v3 selectFirstNoteInTableView:v4 errorString:a2];

  return v5;
}

void sub_1000D9214(uint64_t a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  _DWORD v3[2] = sub_1000D92C0;
  v3[3] = &unk_100625AF0;
  void v3[4] = *(void *)(a1 + 32);
  id v1 = objc_retainBlock(v3);
  uint64_t v2 = (void *)qword_1006AA208;
  qword_1006AA208 = (uint64_t)v1;

  [UIApp startedTest:qword_1006AA1F8];
  sub_1000D6DE4((void *)qword_1006AA1F8, 1);
}

void sub_1000D92C0(uint64_t a1)
{
  [*(id *)(a1 + 32) ic_noteEditorViewController];
  id v1 = (id)objc_claimAutoreleasedReturnValue();
  [v1 dismissViewControllerAnimated:1 completion:0];
}

uint64_t sub_1000D9428(uint64_t a1)
{
  return 1;
}

id sub_1000D9448(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = [v3 ic_notesListScrollView];
  id v5 = [v3 selectFirstNoteInScrollView:v4 errorString:a2];

  return v5;
}

id sub_1000D94A0(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) objectForKey:@"iterations"];
  unsigned int v3 = [v2 intValue];

  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  id v5[2] = sub_1000D955C;
  v5[3] = &unk_100629458;
  void v5[4] = *(void *)(a1 + 40);
  unsigned int v6 = v3;
  return [UIApp rotateIfNeeded:1 completion:v5];
}

id sub_1000D955C(uint64_t a1)
{
  [UIApp startedTest:qword_1006AA1F8];
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(unsigned int *)(a1 + 40);

  return _[v2 rotateToOrientation:4 iterationsRemaining:v3 completion:&stru_100629510];
}

void sub_1000D95B8(id a1)
{
}

uint64_t sub_1000D96EC(uint64_t a1)
{
  return 1;
}

id sub_1000D9714(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(a1 + 32);
  id v4 = [v3 ic_notesListScrollView];
  id v5 = [v3 selectFirstNoteInScrollView:v4 errorString:a2];

  return v5;
}

void sub_1000D976C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) objectForKey:@"iterations"];
  id v3 = [v2 intValue];

  id v4 = [*(id *)(a1 + 32) objectForKey:@"offset"];
  unsigned int v5 = [v4 intValue];
  if (v5) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 20;
  }

  [*(id *)(a1 + 40) ic_noteEditorViewController];
  id v7 = (id)objc_claimAutoreleasedReturnValue();
  [v7 runTableHorizontalScrollPerformanceTest:qword_1006AA1F8 iterations:v3 offset:v6];
}

uint64_t sub_1000D9940(uint64_t a1)
{
  return 1;
}

id sub_1000D9968(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = [v3 ic_notesListScrollView];
  id v5 = [v3 selectFirstNoteInScrollView:v4 errorString:a2];

  return v5;
}

void sub_1000D99C0(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) objectForKey:@"iterations"];
  id v3 = [v2 intValue];

  id v4 = [*(id *)(a1 + 32) objectForKey:@"offset"];
  unsigned int v5 = [v4 intValue];
  if (v5) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 20;
  }

  [*(id *)(a1 + 40) ic_noteEditorViewController];
  id v7 = (id)objc_claimAutoreleasedReturnValue();
  [v7 runScrollPerformanceTest:qword_1006AA1F8 iterations:v3 offset:v6];
}

id sub_1000D9B1C(uint64_t a1)
{
  return [*(id *)(a1 + 32) ic_selectLocalModernAccount];
}

void sub_1000D9B24(uint64_t a1)
{
  dispatch_time_t v2 = dispatch_time(0, 3000000000);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  void block[2] = sub_1000D9BB8;
  block[3] = &unk_100625AF0;
  void block[4] = *(void *)(a1 + 32);
  dispatch_after(v2, (dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_1000D9BB8(uint64_t a1)
{
  [UIApp startedTest:qword_1006AA1F8];
  sub_1000D6DE4((void *)qword_1006AA1F8, 1);
  [*(id *)(a1 + 32) ic_viewControllerManager];
  id v2 = (id)objc_claimAutoreleasedReturnValue();
  [v2 setNoteContainerViewMode:1];
}

id sub_1000D9D08(uint64_t a1)
{
  return [*(id *)(a1 + 32) ic_selectFolderNamed:@"Notes"];
}

void sub_1000D9D18(uint64_t a1)
{
  [*(id *)(a1 + 32) ic_notesGridScrollView];
  id v2 = (id)objc_claimAutoreleasedReturnValue();
  [*(id *)(a1 + 32) performScrollTestForScrollView:v2 withOptions:*(void *)(a1 + 40)];
}

id sub_1000D9EEC(uint64_t a1)
{
  byte_1006AA211 = 0;
  return [*(id *)(a1 + 32) ic_selectFolderNamed:*(void *)(a1 + 40)];
}

id sub_1000D9F00(uint64_t a1)
{
  return [*(id *)(a1 + 32) ic_selectFolderNamed:*(void *)(a1 + 40)];
}

void sub_1000D9F0C(uint64_t a1)
{
  byte_1006AA211 = 0;
  [UIApp startedTest:qword_1006AA1F8];
  [UIApp startedSubTest:@"ICDelaySubTest" forTest:qword_1006AA1F8];
  byte_1006AA228 = 1;
  id v2 = *(void **)(a1 + 32);
  id v3 = [v2 ic_notesListScrollView];
  id v6 = 0;
  unsigned __int8 v4 = [v2 selectFirstNoteInScrollView:v3 errorString:&v6];
  id v5 = v6;

  if ((v4 & 1) == 0) {
    [UIApp failedTest:qword_1006AA1F8 withFailure:v5];
  }
}

uint64_t sub_1000DA0F4(uint64_t a1)
{
  return 1;
}

id sub_1000DA11C(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)(a1 + 32);
  unsigned __int8 v4 = [v3 ic_notesListScrollView];
  id v5 = [v3 selectFirstNoteInScrollView:v4 errorString:a2];

  return v5;
}

void sub_1000DA174(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) objectForKey:@"iterations"];
  id v3 = [v2 intValue];

  unsigned __int8 v4 = [*(id *)(a1 + 32) objectForKey:@"offset"];
  unsigned int v5 = [v4 intValue];
  if (v5) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 20;
  }

  [*(id *)(a1 + 40) ic_noteEditorViewController];
  id v7 = (id)objc_claimAutoreleasedReturnValue();
  [v7 runScrollPerformanceTest:qword_1006AA1F8 iterations:v3 offset:v6];
}

uint64_t sub_1000DA31C(uint64_t a1)
{
  return 1;
}

id sub_1000DA33C(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)(a1 + 32);
  unsigned __int8 v4 = [v3 ic_notesListScrollView];
  id v5 = [v3 selectFirstNoteInScrollView:v4 errorString:a2];

  return v5;
}

id sub_1000DA394(uint64_t a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  _DWORD v3[2] = sub_1000DA460;
  v3[3] = &unk_100625AF0;
  uint64_t v4 = *(void *)(a1 + 32);
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_1000DA468;
  v2[3] = &unk_100625AF0;
  void v2[4] = v4;
  return [UIApp runTestForKeyboardBringupAndDismissalWithName:qword_1006AA1F8 withShowKeyboardBlock:v3 withHideKeyboardBlock:v2 withExtraResultsBlock:0 withCleanupBlock:0];
}

id sub_1000DA460(uint64_t a1)
{
  return [*(id *)(a1 + 32) bringUpKeyboard];
}

id sub_1000DA468(uint64_t a1)
{
  return _[*(id *)(a1 + 32) dismissKeyboard];
}

uint64_t sub_1000DA560(uint64_t a1)
{
  return 1;
}

id sub_1000DA580(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)(a1 + 32);
  uint64_t v4 = [v3 ic_notesListScrollView];
  id v5 = [v3 selectFirstNoteInScrollView:v4 errorString:a2];

  return v5;
}

id sub_1000DA5D8(uint64_t a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  _DWORD v3[2] = sub_1000DA6A4;
  v3[3] = &unk_100625AF0;
  uint64_t v4 = *(void *)(a1 + 32);
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_1000DA6AC;
  v2[3] = &unk_100625AF0;
  void v2[4] = v4;
  return [UIApp runTestForKeyboardRotationWithName:qword_1006AA1F8 fromOrientation:1 withShowKeyboardBlock:v3 withExtraResultsBlock:0 withCleanupBlock:v2];
}

id sub_1000DA6A4(uint64_t a1)
{
  return [*(id *)(a1 + 32) bringUpKeyboard];
}

id sub_1000DA6AC(uint64_t a1)
{
  return _[*(id *)(a1 + 32) dismissKeyboard];
}

uint64_t sub_1000DA7A4(uint64_t a1)
{
  return 1;
}

id sub_1000DA7C4(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)(a1 + 32);
  uint64_t v4 = [v3 ic_notesListScrollView];
  id v5 = [v3 selectFirstNoteInScrollView:v4 errorString:a2];

  return v5;
}

id sub_1000DA81C(uint64_t a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  _DWORD v3[2] = sub_1000DA8E4;
  v3[3] = &unk_100625AF0;
  uint64_t v4 = *(void *)(a1 + 32);
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_1000DA8EC;
  v2[3] = &unk_100625AF0;
  void v2[4] = v4;
  return [UIApp runTestForKeyboardSplitAndMergeWithName:qword_1006AA1F8 withShowKeyboardBlock:v3 withExtraResultsBlock:0 withCleanupBlock:v2];
}

id sub_1000DA8E4(uint64_t a1)
{
  return [*(id *)(a1 + 32) bringUpKeyboard];
}

id sub_1000DA8EC(uint64_t a1)
{
  return _[*(id *)(a1 + 32) dismissKeyboard];
}

uint64_t sub_1000DA9F0(uint64_t a1)
{
  return 1;
}

id sub_1000DAA24(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)(a1 + 32);
  uint64_t v4 = [v3 ic_notesListScrollView];
  id v5 = [v3 selectFirstNoteInScrollView:v4 errorString:a2];

  if (v5) {
    dispatchMainAfterDelay();
  }
  return v5;
}

void sub_1000DAAE8(uint64_t a1)
{
  objc_opt_class();
  id v2 = [*(id *)(a1 + 32) ic_noteEditorViewController];
  id v3 = [v2 addNewNote];
  uint64_t v4 = ICDynamicCast();

  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1000DABD4;
  void v8[3] = &unk_100625AF0;
  id v9 = v4;
  id v5 = v4;
  uint64_t v6 = objc_retainBlock(v8);
  id v7 = (void *)qword_1006AA208;
  qword_1006AA208 = (uint64_t)v6;
}

void sub_1000DABD4(uint64_t a1)
{
  +[ICNote purgeNote:*(void *)(a1 + 32)];
  id v1 = +[ICNoteContext sharedContext];
  [v1 saveImmediately];
}

void sub_1000DAC30(uint64_t a1)
{
  byte_1006AA211 = 0;
  [UIApp startedTest:qword_1006AA1F8];
  [*(id *)(a1 + 32) ic_noteEditorViewController];
  id v2 = (id)objc_claimAutoreleasedReturnValue();
  [v2 createTodoListItem:0];
}

void sub_1000DACA4(id a1, NSString *a2)
{
  uint64_t v2 = qword_1006AA208;
  id v3 = *(void (**)(uint64_t))(qword_1006AA208 + 16);
  uint64_t v6 = a2;
  v3(v2);
  uint64_t v4 = (void *)qword_1006AA208;
  qword_1006AA208 = 0;

  sub_1000D5664(v5, v6);
}

uint64_t sub_1000DAE08(uint64_t a1)
{
  return 1;
}

id sub_1000DAE3C(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)(a1 + 32);
  uint64_t v4 = [v3 ic_notesListScrollView];
  id v5 = [v3 selectFirstNoteInScrollView:v4 errorString:a2];

  return v5;
}

void sub_1000DAE94(uint64_t a1)
{
  [UIApp startedTest:qword_1006AA1F8];
  sub_1000D6DE4((void *)qword_1006AA1F8, 1);
  [*(id *)(a1 + 32) ic_noteEditorViewController];
  id v2 = (id)objc_claimAutoreleasedReturnValue();
  [v2 showInkPicker:0];
}

void sub_1000DAFA0(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1000DB078;
  void v8[3] = &unk_100625AF0;
  void v8[4] = v2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  id v5[2] = sub_1000DB0B4;
  v5[3] = &unk_100625860;
  id v3 = *(id *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 32);
  id v6 = v3;
  uint64_t v7 = v4;
  [v2 showNotesListWithAccountSelectionBlock:v8 readyBlock:v5];
}

id sub_1000DB078(uint64_t a1)
{
  [*(id *)(a1 + 32) showAccountsList];
  id v2 = *(void **)(a1 + 32);

  return [v2 ic_selectLocalModernAccount];
}

void sub_1000DB0B4(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) objectForKey:@"searchQuery"];
  id v3 = (void *)v2;
  uint64_t v4 = @"a";
  if (v2) {
    uint64_t v4 = (__CFString *)v2;
  }
  id v5 = v4;

  [UIApp startedTest:qword_1006AA1F8];
  [*(id *)(a1 + 40) ic_viewControllerManager];
  id v6 = (id)objc_claimAutoreleasedReturnValue();
  [v6 startSearchWithSearchQueryString:v5 becomeFirstResponder:0];
}

uint64_t sub_1000DB2AC(uint64_t a1)
{
  return 1;
}

BOOL sub_1000DB2E0(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) ic_viewControllerManager];
  uint64_t v2 = [v1 rootNoteBrowseViewController];

  id v3 = [v2 noteContainer];
  uint64_t v4 = [v3 noteContainerAccount];
  id v5 = [v4 defaultFolder];

  id v6 = +[ICApplicationTestingHelper sharedHelper];
  uint64_t v7 = [v6 testNoteIdentifier];

  id v8 = +[ICNoteContext sharedContext];
  id v9 = [v8 managedObjectContext];
  uint64_t v10 = +[ICNote noteWithIdentifier:v7 includeDeleted:0 context:v9];

  int8x16_t v11 = +[ICNoteContext sharedContext];
  uint64_t v12 = [v11 addNewNoteByCopyingNote:v10 toFolder:v5];

  if (v12)
  {
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472;
    v18[2] = sub_1000DB508;
    v18[3] = &unk_100625AF0;
    id v13 = v12;
    id v19 = v13;
    uint64_t v14 = objc_retainBlock(v18);
    uint64_t v15 = (void *)qword_1006AA208;
    qword_1006AA208 = (uint64_t)v14;

    id v17 = v13;
    dispatchMainAfterDelay();
  }
  return v12 != 0;
}

void sub_1000DB508(uint64_t a1)
{
  +[ICNote purgeNote:*(void *)(a1 + 32)];
  id v1 = +[ICNoteContext sharedContext];
  [v1 saveImmediately];
}

uint64_t sub_1000DB564(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) ic_viewControllerManager];
  id v3 = [*(id *)(a1 + 40) objectID];
  [v2 selectNoteWithObjectID:v3 scrollState:0 startEditing:0 animated:0 ensurePresented:1];

  return dispatchMainAfterDelay();
}

id sub_1000DB634(uint64_t a1)
{
  [*(id *)(a1 + 32) bringUpKeyboard];
  uint64_t v2 = *(void **)(a1 + 32);

  return _[v2 goToBottomOfNoteInEditor];
}

void sub_1000DB670(uint64_t a1)
{
  byte_1006AA211 = 0;
  [UIApp startedTest:qword_1006AA1F8];
  [UIApp startedSubTest:@"ICNoteEditorTypingSubTest" forTest:qword_1006AA1F8];
  uint64_t v2 = +[NSBundle bundleForClass:objc_opt_class()];
  id v3 = [v2 URLForResource:@"iostypingtest" withExtension:@"recap"];

  uint64_t v23 = 0;
  id v24 = &v23;
  uint64_t v25 = 0x2050000000;
  uint64_t v4 = (void *)qword_1006AA230;
  uint64_t v26 = qword_1006AA230;
  if (!qword_1006AA230)
  {
    uint64_t v18 = _NSConcreteStackBlock;
    uint64_t v19 = 3221225472;
    uint64_t v20 = sub_1000DD870;
    uint64_t v21 = &unk_1006265A8;
    uint64_t v22 = &v23;
    sub_1000DD870((uint64_t)&v18);
    uint64_t v4 = (void *)v24[3];
  }
  id v5 = v4;
  _Block_object_dispose(&v23, 8);
  id v17 = 0;
  id v6 = [v5 eventStreamWithFileURL:v3 error:&v17];
  id v7 = v17;
  id v8 = v7;
  if (!v6 || v7)
  {
    uint64_t v14 = (void *)UIApp;
    uint64_t v15 = qword_1006AA1F8;
    id v13 = [v7 localizedDescription];
    [v14 failedTest:v15 withFailure:v13];
  }
  else
  {
    uint64_t v23 = 0;
    id v24 = &v23;
    uint64_t v25 = 0x2050000000;
    id v9 = (void *)qword_1006AA240;
    uint64_t v26 = qword_1006AA240;
    if (!qword_1006AA240)
    {
      uint64_t v18 = _NSConcreteStackBlock;
      uint64_t v19 = 3221225472;
      uint64_t v20 = sub_1000DDA38;
      uint64_t v21 = &unk_1006265A8;
      uint64_t v22 = &v23;
      sub_1000DDA38((uint64_t)&v18);
      id v9 = (void *)v24[3];
    }
    id v10 = v9;
    _Block_object_dispose(&v23, 8);
    uint64_t v23 = 0;
    id v24 = &v23;
    uint64_t v25 = 0x2050000000;
    int8x16_t v11 = (void *)qword_1006AA248;
    uint64_t v26 = qword_1006AA248;
    if (!qword_1006AA248)
    {
      uint64_t v18 = _NSConcreteStackBlock;
      uint64_t v19 = 3221225472;
      uint64_t v20 = sub_1000DDA90;
      uint64_t v21 = &unk_1006265A8;
      uint64_t v22 = &v23;
      sub_1000DDA90((uint64_t)&v18);
      int8x16_t v11 = (void *)v24[3];
    }
    id v12 = v11;
    _Block_object_dispose(&v23, 8);
    id v13 = objc_opt_new();
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472;
    _OWORD v16[2] = sub_1000DB9CC;
    v16[3] = &unk_100625AF0;
    void v16[4] = *(void *)(a1 + 32);
    [v10 playEventStream:v6 options:v13 completion:v16];
  }
}

void sub_1000DB9AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000DB9CC(uint64_t a1)
{
  [UIApp finishedSubTest:@"ICNoteEditorTypingSubTest" forTest:qword_1006AA1F8];
  byte_1006AA212 = 1;
  [UIApp startedSubTest:@"ICNoteEditorTypingFinishedSubTest" forTest:qword_1006AA1F8];
  uint64_t v2 = *(void **)(a1 + 32);

  return [v2 textViewDidChange];
}

void sub_1000DBA48(id a1, NSString *a2)
{
  uint64_t v2 = qword_1006AA208;
  id v3 = *(void (**)(uint64_t))(qword_1006AA208 + 16);
  id v6 = a2;
  v3(v2);
  uint64_t v4 = (void *)qword_1006AA208;
  qword_1006AA208 = 0;

  sub_1000D5664(v5, v6);
}

uint64_t sub_1000DBBF0(uint64_t a1)
{
  return 1;
}

id sub_1000DBC24(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)(a1 + 32);
  uint64_t v4 = [v3 ic_notesListScrollView];
  id v5 = [v3 selectFirstNoteInScrollView:v4 errorString:a2];

  return v5;
}

void sub_1000DBC7C(uint64_t a1)
{
  [*(id *)(a1 + 32) ic_viewControllerManager];
  id v4 = (id)objc_claimAutoreleasedReturnValue();
  id v1 = [v4 window];
  id v2 = objc_alloc((Class)RPTResizeTestParameters);
  id v3 = [v2 initWithTestName:qword_1006AA1F8 window:v1 completionHandler:0];
  [v3 setMinimumWindowSize:300.0, 300.0];
  [v3 setMaximumWindowSize:600.0, 600.0];
  +[RPTTestRunner runTestWithParameters:v3];
}

id sub_1000DBF44(uint64_t a1)
{
  return [*(id *)(a1 + 32) ic_selectFolderNamed:@"Notes"];
}

void sub_1000DBF54(uint64_t a1, int a2)
{
  v10[0] = @"iterations";
  id v4 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [*(id *)(a1 + 32) scrollIterationsFromDefaults]);
  v11[0] = v4;
  v10[1] = @"offset";
  id v5 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [*(id *)(a1 + 32) scrollOffsetFromDefaults]);
  v11[1] = v5;
  v10[2] = @"recapBased";
  id v6 = +[NSNumber numberWithBool:](NSNumber, "numberWithBool:", [*(id *)(a1 + 32) scrollTestUseRecap]);
  void v11[2] = v6;
  id v7 = +[NSDictionary dictionaryWithObjects:v11 forKeys:v10 count:3];

  LODWORD(v5) = [*(id *)(a1 + 32) scrollTestUseFlick];
  id v8 = *(void **)(a1 + 32);
  id v9 = [v8 ic_notesListScrollView];
  if (v5) {
    [v8 performFlickScrollTestForScrollView:v9 withOptions:v7];
  }
  else {
    [v8 performScrollTestForScrollView:v9 withOptions:v7];
  }

  notify_cancel(a2);
}

uint64_t sub_1000DC1F0(uint64_t a1)
{
  return 1;
}

id sub_1000DC210(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = [v3 ic_notesListScrollView];
  id v5 = [v3 selectFirstNoteInScrollView:v4 errorString:a2];

  return v5;
}

void sub_1000DC268(uint64_t a1, int a2)
{
  v12[0] = @"iterations";
  id v4 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [*(id *)(a1 + 32) scrollIterationsFromDefaults]);
  v13[0] = v4;
  v12[1] = @"offset";
  id v5 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [*(id *)(a1 + 32) scrollOffsetFromDefaults]);
  v13[1] = v5;
  v12[2] = @"recapBased";
  id v6 = +[NSNumber numberWithBool:](NSNumber, "numberWithBool:", [*(id *)(a1 + 32) scrollTestUseRecap]);
  void v13[2] = v6;
  id v7 = +[NSDictionary dictionaryWithObjects:v13 forKeys:v12 count:3];

  id v8 = [*(id *)(a1 + 32) ic_noteEditorViewController];
  id v9 = [v8 textView];

  unsigned int v10 = [*(id *)(a1 + 32) scrollTestUseFlick];
  int8x16_t v11 = *(void **)(a1 + 32);
  if (v10) {
    [v11 performFlickScrollTestForScrollView:v9 withOptions:v7];
  }
  else {
    [v11 performScrollTestForScrollView:v9 withOptions:v7];
  }
  notify_cancel(a2);
}

uint64_t sub_1000DC5A0(uint64_t a1)
{
  id v2 = os_log_create("com.apple.notes", "Test");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    sub_1004DAF84(a1);
  }

  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_1000DC614(uint64_t a1)
{
  id v2 = os_log_create("com.apple.notes", "Test");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    sub_1004DAF84(a1);
  }

  [*(id *)(a1 + 40) setDisabled:1];
  uint64_t result = *(void *)(a1 + 48);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_1000DC7CC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1000DC89C(id *a1)
{
  [a1[4] showAccountsList];
  dispatch_time_t v2 = dispatch_time(0, 500000000);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  _DWORD v3[2] = sub_1000DC960;
  v3[3] = &unk_1006295E8;
  id v4 = a1[5];
  id v5 = a1[6];
  dispatch_after(v2, (dispatch_queue_t)&_dispatch_main_q, v3);
}

void sub_1000DC960(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2) {
    (*(void (**)(void))(v2 + 16))();
  }
  dispatch_time_t v3 = dispatch_time(0, 3000000000);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  void block[2] = sub_1000DCA1C;
  block[3] = &unk_100625988;
  id v5 = *(id *)(a1 + 40);
  dispatch_after(v3, (dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_1000DCA1C(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    id v2 = +[ICApplicationTestingHelper sharedHelper];
    [v2 waitForPostLaunchTasksThenPerformBlock:*(void *)(a1 + 32)];
  }
}

void sub_1000DCB30(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) ic_viewControllerManager];
  [v2 setNoteContainerViewMode:1];

  dispatch_time_t v3 = +[UIDevice currentDevice];
  id v4 = [v3 userInterfaceIdiom];

  if (v4 == (id)1)
  {
    id v5 = [*(id *)(a1 + 32) ic_viewControllerManager];
    id v6 = [v5 mainSplitViewController];
    [v6 hideColumn:0];
  }
  dispatch_time_t v7 = dispatch_time(0, 2000000000);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  void block[2] = sub_1000DCC50;
  block[3] = &unk_100625988;
  id v9 = *(id *)(a1 + 40);
  dispatch_after(v7, (dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_1000DCC50(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    id v2 = +[ICApplicationTestingHelper sharedHelper];
    [v2 waitForPostLaunchTasksThenPerformBlock:*(void *)(a1 + 32)];
  }
}

void sub_1000DCDD0(id *a1)
{
  [a1[4] showAccountsList];
  dispatch_time_t v2 = dispatch_time(0, 500000000);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  _DWORD v3[2] = sub_1000DCEBC;
  v3[3] = &unk_100629638;
  id v4 = a1[5];
  id v5 = a1[6];
  id v6 = a1[7];
  id v7 = a1[8];
  dispatch_after(v2, (dispatch_queue_t)&_dispatch_main_q, v3);
}

void sub_1000DCEBC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (!v2) {
    goto LABEL_6;
  }
  id v11 = 0;
  char v3 = (*(uint64_t (**)(uint64_t, id *))(v2 + 16))(v2, &v11);
  id v4 = v11;
  if ((v3 & 1) != 0 || (uint64_t v5 = *(void *)(a1 + 40)) == 0)
  {

LABEL_6:
    dispatch_time_t v6 = dispatch_time(0, 2000000000);
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_1000DCFE4;
    v7[3] = &unk_100629610;
    id v8 = *(id *)(a1 + 48);
    id v9 = *(id *)(a1 + 40);
    id v10 = *(id *)(a1 + 56);
    dispatch_after(v6, (dispatch_queue_t)&_dispatch_main_q, v7);

    id v4 = v8;
    goto LABEL_7;
  }
  (*(void (**)(uint64_t, id))(v5 + 16))(v5, v4);
LABEL_7:
}

void sub_1000DCFE4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (!v2) {
    goto LABEL_6;
  }
  id v9 = 0;
  char v3 = (*(uint64_t (**)(uint64_t, id *))(v2 + 16))(v2, &v9);
  id v4 = v9;
  if ((v3 & 1) != 0 || (uint64_t v5 = *(void *)(a1 + 40)) == 0)
  {

LABEL_6:
    dispatch_time_t v6 = dispatch_time(0, 2000000000);
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_1000DD0E4;
    v7[3] = &unk_100625988;
    id v8 = *(id *)(a1 + 48);
    dispatch_after(v6, (dispatch_queue_t)&_dispatch_main_q, v7);
    id v4 = v8;
    goto LABEL_7;
  }
  (*(void (**)(uint64_t, id))(v5 + 16))(v5, v4);
LABEL_7:
}

void sub_1000DD0E4(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    id v2 = +[ICApplicationTestingHelper sharedHelper];
    [v2 waitForPostLaunchTasksThenPerformBlock:*(void *)(a1 + 32)];
  }
}

void sub_1000DD61C(id a1)
{
  id v1 = [objc_alloc((Class)NSSet) initWithObjects:@"ICScrollAccountsList", @"ICScrollAccountsListRecap", @"ICScrollNotesList", @"ICScrollEnglishNotesListRecap", @"ICScrollNote", @"ICScrollNoteRecap", @"ICScrollTableHorizontally", @"ICScrollTableVertically", @"ICScrollNotesGrid", @"ICScrollNotesGridRecap", 0];
  id v2 = (void *)qword_1006AA218;
  qword_1006AA218 = (uint64_t)v1;
}

void sub_1000DD7AC(uint64_t a1)
{
  uint64_t v1 = 4;
  if (*(void *)(a1 + 48) != 1) {
    uint64_t v1 = 1;
  }
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  _DWORD v3[2] = sub_1000DD850;
  v3[3] = &unk_1006296A8;
  id v2 = *(void **)(a1 + 40);
  void v3[4] = *(void *)(a1 + 32);
  uint64_t v5 = v1;
  int v6 = *(_DWORD *)(a1 + 56);
  id v4 = v2;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v3);
}

id sub_1000DD850(uint64_t a1)
{
  return _[*(id *)(a1 + 32) rotateToOrientation:*(void *)(a1 + 48) iterationsRemaining:(*(_DWORD *)(a1 + 56) - 1) completion:*(void *)(a1 + 40)];
}

void sub_1000DD868(uint64_t a1)
{
}

void sub_1000DD870(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("RCPEventStream");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_1006AA230 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    sub_1004DB028();
    sub_1000DD8C8();
  }
}

void sub_1000DD8C8()
{
  v1[0] = 0;
  if (!qword_1006AA238)
  {
    v1[1] = _NSConcreteStackBlock;
    v1[2] = 3221225472;
    v1[3] = sub_1000DD9C4;
    v1[4] = &unk_100627688;
    v1[5] = v1;
    long long v2 = off_1006296F0;
    uint64_t v3 = 0;
    qword_1006AA238 = _sl_dlopen();
  }
  uint64_t v0 = (void *)v1[0];
  if (!qword_1006AA238)
  {
    uint64_t v0 = (void *)abort_report_np();
    goto LABEL_7;
  }
  if (v1[0]) {
LABEL_7:
  }
    free(v0);
}

uint64_t sub_1000DD9C4()
{
  uint64_t result = _sl_dlopen();
  qword_1006AA238 = result;
  return result;
}

Class sub_1000DDA38(uint64_t a1)
{
  sub_1000DD8C8();
  Class result = objc_getClass("RCPInlinePlayer");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_1006AA240 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = sub_1004DB050();
    return (Class)sub_1000DDA90(v3);
  }
  return result;
}

ICConvertToSmartFolderActivity *sub_1000DDA90(uint64_t a1)
{
  sub_1000DD8C8();
  Class result = (ICConvertToSmartFolderActivity *)objc_getClass("RCPPlayerPlaybackOptions");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_1006AA248 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = (ICConvertToSmartFolderActivity *)sub_1004DB078();
    return [(ICConvertToSmartFolderActivity *)v3 initWithFolder:v5 presentingViewController:v6 presentingBarButtonItem:v7 sender:v8];
  }
  return result;
}

void sub_1000DE028(uint64_t a1, void *a2, void *a3)
{
  id v10 = a2;
  id v5 = a3;
  if (v10)
  {
    [*(id *)(a1 + 32) setEditing:0 animated:1];
    id v6 = *(void **)(a1 + 40);
    id v7 = [v10 objectID];
    [v6 selectContainerWithIdentifier:v7 usingRootViewController:1 deferUntilDataLoaded:0 animated:0];
  }
  uint64_t v8 = *(void *)(a1 + 56);
  if (v8)
  {
    id v9 = [*(id *)(a1 + 48) activityType];
    (*(void (**)(uint64_t, BOOL, void *))(v8 + 16))(v8, v10 != 0, v9);
  }
}

void sub_1000DE640(uint64_t a1)
{
  [*(id *)(a1 + 32) activityDidFinish:1];
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2)
  {
    id v3 = [*(id *)(a1 + 32) activityType];
    (*(void (**)(uint64_t, uint64_t, id))(v2 + 16))(v2, 1, v3);
  }
}

void sub_1000DE8BC(uint64_t a1)
{
  uint64_t v1 = +[ICAccount allActiveCloudKitAccountsInContext:*(void *)(a1 + 32)];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      id v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        +[ICHashtag dedupeHashtagsInAccount:*(void *)(*((void *)&v6 + 1) + 8 * (void)v5)];
        id v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      id v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

id sub_1000DF7FC(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

UIMenu *sub_1000DF804(uint64_t a1)
{
  return +[UIMenu menuWithTitle:&stru_10063F3D8 image:0 identifier:0 options:0 children:*(void *)(a1 + 32)];
}

void sub_1000DFA8C(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) delegate];
  id v2 = [*(id *)(a1 + 32) collectionView];
  [v3 browseAttachmentsCollectionView:v2 didSelectAttachment:*(void *)(a1 + 40) indexPath:*(void *)(a1 + 48)];
}

void sub_1000DFCAC(uint64_t a1)
{
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  id v2 = [*(id *)(a1 + 32) changesFromFetchedResultsController];
  id v3 = [v2 countByEnumeratingWithState:&v12 objects:v19 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v13;
    do
    {
      for (unint64_t i = 0; i != v4; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v13 != v5) {
          objc_enumerationMutation(v2);
        }
        long long v7 = *(void **)(*((void *)&v12 + 1) + 8 * i);
        switch((unint64_t)[v7 type])
        {
          case 1uLL:
            long long v8 = [*(id *)(a1 + 32) collectionView];
            long long v9 = [v7 theNewIndexPath];
            id v17 = v9;
            id v10 = +[NSArray arrayWithObjects:&v17 count:1];
            [v8 insertItemsAtIndexPaths:v10];
            goto LABEL_11;
          case 2uLL:
            long long v8 = [*(id *)(a1 + 32) collectionView];
            long long v9 = [v7 indexPath];
            uint64_t v18 = v9;
            id v10 = +[NSArray arrayWithObjects:&v18 count:1];
            [v8 deleteItemsAtIndexPaths:v10];
            goto LABEL_11;
          case 3uLL:
            long long v8 = [*(id *)(a1 + 32) collectionView];
            long long v9 = [v7 indexPath];
            id v10 = [v7 theNewIndexPath];
            [v8 moveItemAtIndexPath:v9 toIndexPath:v10];
            goto LABEL_11;
          case 4uLL:
            long long v8 = [*(id *)(a1 + 32) collectionView];
            long long v9 = [v7 indexPath];
            uint64_t v16 = v9;
            id v10 = +[NSArray arrayWithObjects:&v16 count:1];
            [v8 reloadItemsAtIndexPaths:v10];
LABEL_11:

            break;
          default:
            continue;
        }
      }
      id v4 = [v2 countByEnumeratingWithState:&v12 objects:v19 count:16];
    }
    while (v4);
  }

  id v11 = [*(id *)(a1 + 32) changesFromFetchedResultsController];
  [v11 removeAllObjects];
}

id sub_1000DFF3C(uint64_t a1)
{
  [*(id *)(a1 + 32) setPerformingBatchUpdatesFromFetchedResultsController:0];
  id result = [*(id *)(a1 + 32) reloadDataAfterBatchUpdates];
  if (result)
  {
    id v3 = [*(id *)(a1 + 32) collectionView];
    [v3 reloadData];

    id v4 = *(void **)(a1 + 32);
    return _[v4 setReloadDataAfterBatchUpdates:0];
  }
  return result;
}

void sub_1000E07FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000E0828(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (WeakRetained)
  {
    id v3 = [WeakRetained thumbnailLayout];
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v4 = [v2 collectionView];
    uint64_t v5 = [v4 visibleCells];

    id v6 = [v5 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = *(void *)v12;
      do
      {
        long long v9 = 0;
        do
        {
          if (*(void *)v12 != v8) {
            objc_enumerationMutation(v5);
          }
          [*(id *)(*((void *)&v11 + 1) + 8 * (void)v9) setThumbnailLayout:v3];
          long long v9 = (char *)v9 + 1;
        }
        while (v7 != v9);
        id v7 = [v5 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v7);
    }

    id v10 = [v2 contextInteraction];
    [v10 dismissMenu];
  }
}

void sub_1000E1490(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) managedObjectContext];
  [v1 ic_save];
}

void sub_1000E1EDC(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) managedObjectContext];
  [v1 ic_save];
}

void sub_1000E3480(uint64_t a1)
{
  id v2 = (objc_class *)objc_opt_class();
  NSStringFromClass(v2);
  id v8 = (id)objc_claimAutoreleasedReturnValue();
  id v3 = +[NSBundle bundleForClass:objc_opt_class()];
  id v4 = [v3 loadNibNamed:v8 owner:*(void *)(a1 + 32) options:0];

  objc_opt_class();
  uint64_t v5 = [v4 firstObject];
  uint64_t v6 = ICDynamicCast();
  id v7 = (void *)qword_1006AA250;
  qword_1006AA250 = v6;

  [(id)qword_1006AA250 setTranslatesAutoresizingMaskIntoConstraints:0];
}

void sub_1000E3D40(uint64_t a1)
{
  id v2 = +[ICCollaborationController sharedInstance];
  id v3 = [v2 objectForShare:*(void *)(a1 + 32) accountID:*(void *)(a1 + 40) context:*(void *)(a1 + 48)];

  if (v3 && ([v3 cloudAccount], id v4 = objc_claimAutoreleasedReturnValue(), v4, v4))
  {
    uint64_t v5 = [*(id *)(a1 + 32) URL];
    uint64_t v6 = [v3 cloudAccount];
    os_log_t v7 = +[ICInvitation makeInvitationIfNeededWithShareURL:v5 account:v6 context:*(void *)(a1 + 48)];

    [v7 setRootObject:v3];
    [v7 updateFromShare:*(void *)(a1 + 32)];
    id v8 = os_log_create("com.apple.notes", "Collaboration");
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG)) {
      sub_1004DB4A8((id *)(a1 + 32), v3, v8);
    }

    long long v16 = 0u;
    long long v17 = 0u;
    long long v14 = 0u;
    long long v15 = 0u;
    long long v9 = [v3 associatedNoteParticipants];
    id v10 = [v9 countByEnumeratingWithState:&v14 objects:v18 count:16];
    if (v10)
    {
      id v11 = v10;
      uint64_t v12 = *(void *)v15;
      do
      {
        long long v13 = 0;
        do
        {
          if (*(void *)v15 != v12) {
            objc_enumerationMutation(v9);
          }
          [*(id *)(a1 + 48) deleteObject:*(void *)(*((void *)&v14 + 1) + 8 * (void)v13)];
          long long v13 = (char *)v13 + 1;
        }
        while (v11 != v13);
        id v11 = [v9 countByEnumeratingWithState:&v14 objects:v18 count:16];
      }
      while (v11);
    }

    [*(id *)(a1 + 48) ic_save];
  }
  else
  {
    os_log_t v7 = os_log_create("com.apple.notes", "Collaboration");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1004DB400((id *)(a1 + 32));
    }
  }
}

ICAccount *__cdecl sub_1000E4730(ICCollaborationUIController *self, SEL a2)
{
  return self->_account;
}

void sub_1000E4DC8(uint64_t a1, void *a2)
{
  id v8 = a2;
  if (v8)
  {
    id v3 = [*(id *)(a1 + 32) presentingViewController];
    id v4 = [v3 ic_viewControllerManager];

    uint64_t v5 = [v8 objectID];
    [v4 selectContainerWithIdentifier:v5 usingRootViewController:1 deferUntilDataLoaded:1 animated:1];
  }
  [*(id *)(a1 + 32) activityDidFinish:1];
  uint64_t v6 = *(void *)(a1 + 40);
  if (v6)
  {
    os_log_t v7 = [*(id *)(a1 + 32) activityType];
    (*(void (**)(uint64_t, uint64_t, void *))(v6 + 16))(v6, 1, v7);
  }
}

NSString *__cdecl sub_1000E50B8(id a1, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = +[NSBundle mainBundle];
  uint64_t v6 = [v5 localizedStringForKey:@"Archiving %lu of %lu Notes" value:&stru_10063F3D8 table:0];
  os_log_t v7 = +[NSString localizedStringWithFormat:](NSString, "localizedStringWithFormat:", v6, a2, a3);

  return (NSString *)v7;
}

void sub_1000E5340(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v17 - 128), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000E5364(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000E5374(uint64_t a1)
{
}

void sub_1000E537C(void *a1, void *a2)
{
  id v3 = (void *)a1[4];
  id v4 = a2;
  uint64_t v5 = [v3 archiveExporter];
  uint64_t v6 = a1[5];
  uint64_t v7 = *(void *)(a1[7] + 8);
  id obj = *(id *)(v7 + 40);
  uint64_t v8 = [v5 createArchiveForObjects:v6 progress:v4 error:&obj];

  objc_storeStrong((id *)(v7 + 40), obj);
  uint64_t v9 = *(void *)(a1[6] + 8);
  id v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v8;
}

uint64_t sub_1000E5420(uint64_t a1, void *a2)
{
  if (([a2 isCancelled] & 1) == 0) {
    [*(id *)(a1 + 32) showResultForArchiveURL:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) andError:*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40)];
  }
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    id v4 = *(uint64_t (**)(void))(result + 16);
    return v4();
  }
  return result;
}

void sub_1000E5788(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) archiveExporter];
  uint64_t v3 = *(void *)(a1 + 40);
  id v6 = 0;
  unsigned __int8 v4 = [v2 removeArchiveAt:v3 error:&v6];
  id v5 = v6;

  if ((v4 & 1) == 0) {
    NSLog(@"Error removing archive: %@", v5);
  }
}

void sub_1000E62E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000E6300(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000E6310(uint64_t a1)
{
}

uint64_t sub_1000E6318(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40));
}

void sub_1000E6508(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 48))
  {
    id v2 = [*(id *)(a1 + 32) collectionView];
    uint64_t v3 = [v2 indexPathsForVisibleSupplementaryElementsOfKind:UICollectionElementKindSectionHeader];

    long long v15 = 0u;
    long long v16 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v4 = v3;
    id v5 = [v4 countByEnumeratingWithState:&v13 objects:v17 count:16];
    if (v5)
    {
      id v6 = v5;
      uint64_t v7 = *(void *)v14;
      do
      {
        for (unint64_t i = 0; i != v6; unint64_t i = (char *)i + 1)
        {
          if (*(void *)v14 != v7) {
            objc_enumerationMutation(v4);
          }
          uint64_t v9 = *(void *)(*((void *)&v13 + 1) + 8 * i);
          id v10 = [*(id *)(a1 + 32) collectionView:v13];
          id v11 = [v10 supplementaryViewForElementKind:UICollectionElementKindSectionHeader atIndexPath:v9];

          objc_opt_class();
          uint64_t v12 = ICDynamicCast();
          [*(id *)(a1 + 32) updateHeaderView:v12 forIndexPath:v9 usingSnapshot:*(void *)(a1 + 40)];
        }
        id v6 = [v4 countByEnumeratingWithState:&v13 objects:v17 count:16];
      }
      while (v6);
    }
  }
}

uint64_t sub_1000E6698(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) diffableDataSource];
  [v2 applySnapshot:*(void *)(a1 + 40) animatingDifferences:1];

  uint64_t v3 = *(uint64_t (**)(void))(*(void *)(a1 + 48) + 16);

  return v3();
}

uint64_t sub_1000E66F4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) diffableDataSource];
  [v2 applySnapshotUsingReloadData:*(void *)(a1 + 40)];

  uint64_t v3 = *(uint64_t (**)(void))(*(void *)(a1 + 48) + 16);

  return v3();
}

void sub_1000E6C58(uint64_t a1, void *a2)
{
  id v3 = a2;
  v24[0] = _NSConcreteStackBlock;
  v24[1] = 3221225472;
  v24[2] = sub_1000E6EA0;
  v24[3] = &unk_100625860;
  void v24[4] = *(void *)(a1 + 32);
  id v4 = v3;
  id v25 = v4;
  id v5 = objc_retainBlock(v24);
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472;
  v22[2] = sub_1000E6F64;
  v22[3] = &unk_100625860;
  void v22[4] = *(void *)(a1 + 32);
  id v6 = v4;
  id v23 = v6;
  uint64_t v7 = objc_retainBlock(v22);
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472;
  v20[2] = sub_1000E70C4;
  v20[3] = &unk_100625860;
  void v20[4] = *(void *)(a1 + 32);
  id v8 = v6;
  id v21 = v8;
  uint64_t v9 = objc_retainBlock(v20);
  long long v14 = _NSConcreteStackBlock;
  uint64_t v15 = 3221225472;
  long long v16 = sub_1000E7144;
  uint64_t v17 = &unk_100625860;
  uint64_t v18 = *(void *)(a1 + 32);
  id v10 = v8;
  id v19 = v10;
  id v11 = objc_retainBlock(&v14);
  [v10 deleteAllItems:v14, v15, v16, v17, v18];
  uint64_t v12 = *(void *)(a1 + 40);
  long long v13 = v5;
  if (!v12) {
    goto LABEL_5;
  }
  long long v13 = v5;
  if (v12 == 2) {
    goto LABEL_5;
  }
  if (v12 == 1)
  {
    ((void (*)(void *))v5[2])(v5);
    long long v13 = v7;
LABEL_5:
    ((void (*)(void))v13[2])();
    ((void (*)(void *))v9[2])(v9);
    ((void (*)(void ***))v11[2])(v11);
  }
}

void sub_1000E6EA0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) searchResults];
  id v3 = [v2 topHitResults];
  id v4 = [v3 count];

  if (v4)
  {
    id v5 = *(void **)(a1 + 32);
    id v7 = [v5 searchResults];
    id v6 = [v7 topHitResults];
    [v5 insertItems:v6 intoSection:@"ICNoteSearchDataSourceTopHitsSectionIdentifier" snapshot:*(void *)(a1 + 40)];
  }
}

void sub_1000E6F64(uint64_t a1)
{
  if ([*(id *)(a1 + 32) integratesSuggestions]
    && ([*(id *)(a1 + 32) searchResults],
        id v2 = objc_claimAutoreleasedReturnValue(),
        [v2 suggestions],
        id v3 = objc_claimAutoreleasedReturnValue(),
        id v4 = [v3 count],
        v3,
        v2,
        v4))
  {
    id v5 = *(void **)(a1 + 32);
    id v9 = [v5 searchResults];
    id v6 = [v9 suggestions];
    [v5 insertItems:v6 intoSection:@"ICNoteSearchDataSourceSuggestionsSectionIdentifier" snapshot:*(void *)(a1 + 40)];
  }
  else
  {
    id v7 = [*(id *)(a1 + 32) currentSnapshot];
    CFStringRef v10 = @"ICNoteSearchDataSourceSuggestionsSectionIdentifier";
    id v8 = +[NSArray arrayWithObjects:&v10 count:1];
    [v7 deleteSectionsWithIdentifiers:v8];
  }
}

void sub_1000E70C4(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  id v4 = [v2 searchResults];
  id v3 = [v4 noteResults];
  [v2 insertItems:v3 intoSection:@"ICNoteSearchDataSourceNoteSectionIdentifier" snapshot:*(void *)(a1 + 40)];
}

void sub_1000E7144(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  id v4 = [v2 searchResults];
  id v3 = [v4 attachmentResults];
  [v2 insertItems:v3 intoSection:@"ICNoteSearchDataSourceAttachmentSectionIdentifier" snapshot:*(void *)(a1 + 40)];
}

id sub_1000E8338(uint64_t a1, char a2)
{
  if (a2) {
    return _[*(id *)(a1 + 32) convertToSmartFolderWithCompletion:*(void *)(a1 + 40)];
  }
  id result = *(id *)(a1 + 40);
  if (result) {
    return (id)(*((uint64_t (**)(id, void, void))result + 2))(result, 0, 0);
  }
  return result;
}

uint64_t sub_1000E8368(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, void))(result + 16))(result, 0, 0);
  }
  return result;
}

uint64_t sub_1000E8D20(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0);
  }
  return result;
}

uint64_t sub_1000E8D3C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1);
  }
  return result;
}

void sub_1000E8D58(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) presentingViewController];
  [v2 presentViewController:*(void *)(a1 + 40) animated:1 completion:0];
}

void sub_1000E9628(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = [a2 objectID];
  [v2 addObject:v3];
}

id sub_1000E9724(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateNoteSelectionAnimated:0];
}

void sub_1000E97E4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) modernViewContext];
  id v3 = [*(id *)(a1 + 40) userInfo];
  id v4 = [v3 objectForKeyedSubscript:ICThumbnailCacheObjectIDKey];
  id v9 = [v2 objectWithID:v4];

  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v5 = [v9 note];
    id v6 = [v5 objectID];

    if (!v6) {
      goto LABEL_7;
    }
LABEL_6:
    id v7 = *(void **)(a1 + 32);
    id v8 = +[NSSet setWithObject:v6];
    [v7 updateCellsForManagedObjectIDs:v8 updateTextAndStatus:1 updateThumbnails:1];

    goto LABEL_7;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v6 = [v9 objectID];
    if (v6) {
      goto LABEL_6;
    }
  }
LABEL_7:
}

id sub_1000E9A88(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateNoteSelectionAnimated:0];
}

id sub_1000E9B38(uint64_t a1)
{
  [*(id *)(a1 + 32) updatePreparedCells];
  id v2 = *(void **)(a1 + 32);

  return _[v2 dismissContextMenu];
}

BOOL sub_1000E9D30(id a1, UIInteraction *a2, unint64_t a3, BOOL *a4)
{
  id v4 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  return isKindOfClass & 1;
}

void sub_1000EA240(uint64_t a1)
{
  id v2 = os_log_create("com.apple.notes", "LaunchTask");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    sub_1004DB570(v2);
  }

  id v3 = +[ICMedia predicateForVisibleObjects];
  +[ICMedia ic_enumerateObjectsMatchingPredicate:v3 sortDescriptors:0 relationshipKeyPathsForPrefetching:0 context:*(void *)(a1 + 32) batchSize:10 saveAfterBatch:1 usingBlock:&stru_100629960];
}

void sub_1000EA2EC(id a1, ICMedia *a2, BOOL *a3)
{
  id v3 = a2;
  if (([(ICMedia *)v3 isUnsupported] & 1) == 0
    && ([(ICMedia *)v3 hasFile] & 1) == 0)
  {
    id v4 = os_log_create("com.apple.notes", "LaunchTask");
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG)) {
      sub_1004DB5B4(v3, v4);
    }

    [(ICMedia *)v3 setNeedsToBeFetchedFromCloud:1];
    [(ICMedia *)v3 clearServerRecords];
  }
}

void sub_1000EA9A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 128), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000EA9CC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000EA9DC(uint64_t a1)
{
}

void sub_1000EA9E4(void *a1, void *a2)
{
  id v3 = (void *)a1[4];
  uint64_t v11 = a1[5];
  id v4 = a2;
  id v5 = +[NSArray arrayWithObjects:&v11 count:1];
  uint64_t v6 = *(void *)(a1[7] + 8);
  id obj = *(id *)(v6 + 40);
  uint64_t v7 = [v3 createArchiveForObjects:v5 progress:v4 error:&obj];

  objc_storeStrong((id *)(v6 + 40), obj);
  uint64_t v8 = *(void *)(a1[6] + 8);
  id v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = v7;
}

void sub_1000EAACC(uint64_t a1)
{
  id v2 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
  if (v2)
  {
    uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
    id obj = *(id *)(v3 + 40);
    id v4 = [v2 bookmarkDataWithOptions:0 includingResourceValuesForKeys:0 relativeToURL:0 error:&obj];
    objc_storeStrong((id *)(v3 + 40), obj);
    if (v4)
    {
      id v5 = [objc_alloc((Class)NSUserActivity) initWithActivityType:@"com.apple.Pages.NoteImport"];
      CFStringRef v14 = @"archive_bookmark";
      uint64_t v15 = v4;
      uint64_t v6 = +[NSDictionary dictionaryWithObjects:&v15 forKeys:&v14 count:1];
      [v5 setUserInfo:v6];

      id v7 = objc_alloc((Class)LSApplicationRecord);
      uint64_t v8 = +[ICPagesHandoffManager bundleIdentifierForPages];
      uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
      id v12 = *(id *)(v9 + 40);
      id v10 = [v7 initWithBundleIdentifier:v8 allowPlaceholder:0 error:&v12];
      objc_storeStrong((id *)(v9 + 40), v12);

      if (v10)
      {
        uint64_t v11 = +[LSApplicationWorkspace defaultWorkspace];
        [v11 openUserActivity:v5 usingApplicationRecord:v10 configuration:0 completionHandler:0];
      }
    }
  }
}

id sub_1000EB2B0(uint64_t a1)
{
  +[ICMedia enumerateMediaInContext:*(void *)(a1 + 32) batchSize:10 saveAfterBatch:0 usingBlock:&stru_100629A08];
  uint64_t v2 = *(void *)(a1 + 32);

  return +[ICAttachmentPreviewImage enumerateAttachmentPreviewImagesInContext:v2 batchSize:10 saveAfterBatch:0 usingBlock:&stru_100629A48];
}

void sub_1000EB31C(id a1, ICMedia *a2, BOOL *a3)
{
}

void sub_1000EB324(id a1, ICAttachmentPreviewImage *a2, BOOL *a3)
{
}

UIColor *__cdecl sub_1000EB600(id a1, UITraitCollection *a2)
{
  if ([(UITraitCollection *)a2 ic_isDark]) {
    +[UIColor secondarySystemBackgroundColor];
  }
  else {
  uint64_t v2 = +[UIColor whiteColor];
  }

  return (UIColor *)v2;
}

void sub_1000EB808(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v3 = v4;
  performBlockOnMainThreadAndWait();
}

void sub_1000EB89C(uint64_t a1)
{
  id v3 = (uint64_t *)(a1 + 32);
  uint64_t v2 = *(void **)(a1 + 32);
  if (v2 && [v2 code] == (id)7)
  {
    if (*v3)
    {
      id v4 = os_log_create("com.apple.notes", "QuickNote");
      if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
        sub_1004DB7EC(v3, v4);
      }
    }
    id v5 = [*(id *)(a1 + 40) launchBlock];
    v5[2](v5, 2);
  }
  else
  {
    uint64_t v6 = +[ICQuickNoteSessionManager sharedManager];
    unsigned int v7 = [v6 isQuickNoteSessionActive];

    if (v7)
    {
      uint64_t v8 = +[ICQuickNoteSessionManager sharedManager];
      [v8 endSession];
    }
    uint64_t v9 = [*(id *)(a1 + 40) launchBlock];
    v9[2](v9, 1);
  }
}

void sub_1000EBE0C(uint64_t a1)
{
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (!v3) {
    goto LABEL_17;
  }
  id v4 = v3;
  char v5 = 0;
  uint64_t v6 = *(void *)v13;
  do
  {
    for (unint64_t i = 0; i != v4; unint64_t i = (char *)i + 1)
    {
      if (*(void *)v13 != v6) {
        objc_enumerationMutation(v2);
      }
      uint64_t v8 = *(void **)(*((void *)&v12 + 1) + 8 * i);
      if (objc_msgSend(v8, "ic_isNotesMigrated", (void)v12))
      {
        uint64_t v9 = [v8 identifier];
        id v10 = [*(id *)(a1 + 40) workerContext];
        uint64_t v11 = +[ICAccount accountWithIdentifier:v9 context:v10];

        if (v11
          && (![v11 didChooseToMigrate]
           || ![v11 didFinishMigration]
           || ([v11 didMigrateOnMac] & 1) == 0))
        {
          char v5 = 1;
          [v11 setDidChooseToMigrate:1];
          [v11 setDidFinishMigration:1];
          [v11 setDidMigrateOnMac:1];
        }
      }
    }
    id v4 = [v2 countByEnumeratingWithState:&v12 objects:v16 count:16];
  }
  while (v4);

  if (v5)
  {
    id v2 = [*(id *)(a1 + 40) workerContext];
    [v2 ic_saveWithLogDescription:@"Fixing hidden iCloud CloudKit account(s)"];
LABEL_17:
  }
}

id sub_1000EC210(uint64_t a1, uint64_t a2)
{
  id v4 = [*(id *)(a1 + 32) note];
  [v4 updateAttachmentViewTypeAndPropagateToAttachments:a2];

  char v5 = [*(id *)(a1 + 32) note];
  uint64_t v6 = [v5 managedObjectContext];
  [v6 ic_save];

  unsigned int v7 = *(void **)(a1 + 32);

  return [v7 activityDidFinish:1];
}

void sub_1000EC470(uint64_t a1)
{
  id v2 = os_log_create("com.apple.notes", "CoreData");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v4 = 138412290;
    uint64_t v5 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Note context background task %@ ran out of time to finish in background", (uint8_t *)&v4, 0xCu);
  }
}

void sub_1000EC7F4(uint64_t a1)
{
  [*(id *)(a1 + 32) activityDidFinish:1];
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2)
  {
    uint64_t v3 = [*(id *)(a1 + 32) activityType];
    (*(void (**)(uint64_t, uint64_t, void *))(v2 + 16))(v2, 1, v3);
  }
  if (*(unsigned char *)(a1 + 48))
  {
    id v4 = [*(id *)(a1 + 32) eventReporter];
    [v4 submitAttachmentBrowserTapEvent];
  }
}

void sub_1000ECB08(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) shareURL];
  uint64_t v3 = [v2 absoluteString];
  id v5 = [v3 dataUsingEncoding:4];

  uint64_t v4 = *(void *)(a1 + 40);
  if (v4) {
    (*(void (**)(uint64_t, id, void))(v4 + 16))(v4, v5, 0);
  }
}

void sub_1000ED070(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) collaborationUIController];
  uint64_t v3 = [*(id *)(a1 + 32) note];
  uint64_t v4 = [*(id *)(a1 + 32) presentingViewController];
  id v5 = [*(id *)(a1 + 32) presentingBarButtonItem];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1000ED1B4;
  void v8[3] = &unk_100625AF0;
  uint64_t v9 = *(void *)(a1 + 32);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1000ED220;
  v6[3] = &unk_100625B40;
  void v6[4] = v9;
  id v7 = *(id *)(a1 + 40);
  [v2 showCloudSharingControllerForNote:v3 presentingViewController:v4 popoverBarButtonItem:v5 presented:v8 dismissed:v6];
}

void sub_1000ED1B4(uint64_t a1)
{
  if ([*(id *)(a1 + 32) contextPathEnum])
  {
    id v2 = [*(id *)(a1 + 32) eventReporter];
    [v2 popContextPathData];
  }
}

void sub_1000ED220(uint64_t a1)
{
  [*(id *)(a1 + 32) activityDidFinish:1];
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2)
  {
    id v3 = [*(id *)(a1 + 32) activityType];
    (*(void (**)(uint64_t, uint64_t, id))(v2 + 16))(v2, 1, v3);
  }
}

void sub_1000ED9B4(uint64_t a1)
{
  uint64_t v2 = os_log_create("com.apple.notes", "LaunchTask");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    sub_1004DB8F0(v2);
  }

  id v3 = +[ICAttachment predicateForVisibleObjects];
  v9[0] = v3;
  uint64_t v4 = +[ICAttachment predicateForAllPaperKitBackedAttachments];
  v9[1] = v4;
  id v5 = +[NSArray arrayWithObjects:v9 count:2];
  uint64_t v6 = +[NSCompoundPredicate andPredicateWithSubpredicates:v5];

  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1000EDB2C;
  void v8[3] = &unk_100629B28;
  uint64_t v7 = *(void *)(a1 + 32);
  void v8[4] = *(void *)(a1 + 40);
  +[ICAttachment ic_enumerateObjectsMatchingPredicate:v6 sortDescriptors:0 relationshipKeyPathsForPrefetching:0 context:v7 batchSize:10 saveAfterBatch:1 usingBlock:v8];
}

void sub_1000EDB2C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (([v3 isUnsupported] & 1) == 0)
  {
    uint64_t v4 = [v3 paperBundleModel];
    id v5 = [v4 paperBundleURL];

    if (v5
      && (([*(id *)(a1 + 32) paperBundleIsMissing:v5] & 1) != 0
       || [*(id *)(a1 + 32) paperBundleIsEmpty:v5]))
    {
      uint64_t v6 = os_log_create("com.apple.notes", "LaunchTask");
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG)) {
        sub_1004DB934(v3, v6);
      }

      uint64_t v7 = +[NSFileManager defaultManager];
      [v7 removeItemAtURL:v5 error:0];

      [v3 setNeedsToBeFetchedFromCloud:1];
      [v3 clearServerRecords];
    }
  }
}

void sub_1000EDD20(id a1)
{
  uint64_t v1 = +[UIImageSymbolConfiguration configurationWithTextStyle:UIFontTextStyleBody scale:3];
  uint64_t v2 = (void *)qword_1006AA278;
  qword_1006AA278 = v1;
}

void sub_1000EDE10(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) selectionImageConfiguration];
  uint64_t v1 = +[UIImage systemImageNamed:@"circle.fill" withConfiguration:v3];
  uint64_t v2 = (void *)qword_1006AA288;
  qword_1006AA288 = v1;
}

void sub_1000EDF28(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) selectionImageConfiguration];
  uint64_t v1 = +[UIImage systemImageNamed:@"checkmark.circle" withConfiguration:v3];
  uint64_t v2 = (void *)qword_1006AA298;
  qword_1006AA298 = v1;
}

void sub_1000EE040(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) selectionImageConfiguration];
  uint64_t v1 = +[UIImage systemImageNamed:@"circle" withConfiguration:v3];
  uint64_t v2 = (void *)qword_1006AA2A8;
  qword_1006AA2A8 = v1;
}

void sub_1000EE8A0(uint64_t a1)
{
  dispatch_time_t v2 = dispatch_time(0, 3000000000);
  dispatch_after(v2, (dispatch_queue_t)&_dispatch_main_q, *(dispatch_block_t *)(a1 + 40));
  id v3 = +[NSNotificationCenter defaultCenter];
  [v3 removeObserver:*(void *)(a1 + 32) name:@"NotesLaunchPostTasksCompleted" object:0];
}

BOOL sub_1000EEC88(unint64_t a1, BOOL *a2)
{
  unint64_t v2 = vcvtmd_u64_f64((double)NoteObjectMaximumImapSyncableSize * 0.98);
  if (a2) {
    *a2 = vabdd_f64((double)a1, (double)v2) < 1000000.0;
  }
  return v2 > a1;
}

void sub_1000EEF94(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) dimmingView];
  [v1 setAlpha:1.0];
}

void sub_1000EF0C4(uint64_t a1)
{
  [*(id *)(a1 + 32) frameOfPresentedViewInContainerView];
  double v3 = v2;
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  id v10 = [*(id *)(a1 + 32) presentedView];
  [v10 setFrame:v3, v5, v7, v9];
}

void sub_1000EF210(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) dimmingView];
  [v1 setAlpha:0.0];
}

id sub_1000EF564(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:1.0];
}

id sub_1000EF570(uint64_t a1)
{
  return [*(id *)(a1 + 32) completeTransition:1];
}

id sub_1000EF57C(uint64_t a1)
{
  [*(id *)(a1 + 32) frame];
  double v2 = *(void **)(a1 + 32);

  return [v2 setFrame:];
}

id sub_1000EF5BC(uint64_t a1)
{
  return [*(id *)(a1 + 32) completeTransition:1];
}

void sub_1000EFE0C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40))
  {
    double v2 = +[NSDate date];
    [*(id *)(a1 + 32) setProgressIndicatorStartDate:v2];

    id v3 = [*(id *)(a1 + 32) delegate];
    [v3 progressIndicatorTrackerStartAnimation];
  }
  else
  {
    id v3 = [*(id *)(a1 + 32) delegate];
    [v3 progressIndicatorTrackerStopAnimation];
  }
}

void sub_1000F01D0(void *a1)
{
  id v1 = [a1 statusBarManager];
  [v1 statusBarFrame];
}

void sub_1000F33EC(uint64_t a1)
{
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v26 objects:v31 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v27;
    do
    {
      for (unint64_t i = 0; i != v4; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v27 != v5) {
          objc_enumerationMutation(v2);
        }
        double v7 = [*(id *)(*((void *)&v26 + 1) + 8 * i) layer];
        LODWORD(v8) = 1.0;
        [v7 setOpacity:v8];
      }
      id v4 = [v2 countByEnumeratingWithState:&v26 objects:v31 count:16];
    }
    while (v4);
  }

  long long v24 = 0u;
  long long v25 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  id v9 = *(id *)(a1 + 40);
  id v10 = [v9 countByEnumeratingWithState:&v22 objects:v30 count:16];
  if (v10)
  {
    id v11 = v10;
    uint64_t v12 = *(void *)v23;
    do
    {
      for (j = 0; j != v11; j = (char *)j + 1)
      {
        if (*(void *)v23 != v12) {
          objc_enumerationMutation(v9);
        }
        long long v14 = [*(id *)(*((void *)&v22 + 1) + 8 * (void)j) layer];
        [v14 setOpacity:0.0];
      }
      id v11 = [v9 countByEnumeratingWithState:&v22 objects:v30 count:16];
    }
    while (v11);
  }

  if ([*(id *)(a1 + 48) isPresenting])
  {
    if (*(unsigned char *)(a1 + 176)) {
      [*(id *)(a1 + 56) setFrame: *(double *)(a1 + 72), *(double *)(a1 + 80), *(double *)(a1 + 88), *(double *)(a1 + 96)];
    }
    long long v15 = *(void **)(a1 + 64);
    if (v15)
    {
      double v16 = *(double *)(a1 + 72);
      double v17 = *(double *)(a1 + 80);
      double v18 = *(double *)(a1 + 88);
      double v19 = *(double *)(a1 + 96);
LABEL_24:
      [v15 setFrame:v16, v17, v18, v19, v22];
      double v20 = *(double *)(a1 + 104);
      id v21 = [*(id *)(a1 + 64) layer];
      [v21 setCornerRadius:v20];
    }
  }
  else
  {
    if (*(unsigned char *)(a1 + 176)) {
      [*(id *)(a1 + 56) setFrame:*(double *)(a1 + 112), *(double *)(a1 + 120), *(double *)(a1 + 128), *(double *)(a1 + 136)];
    }
    long long v15 = *(void **)(a1 + 64);
    if (v15)
    {
      double v16 = *(double *)(a1 + 144);
      double v17 = *(double *)(a1 + 152);
      double v18 = *(double *)(a1 + 160);
      double v19 = *(double *)(a1 + 168);
      goto LABEL_24;
    }
  }
}

void sub_1000F3620(uint64_t a1)
{
  [*(id *)(a1 + 32) completeTransition:[*(id *)(a1 + 32) transitionWasCancelled] ^ 1];
  long long v43 = 0u;
  long long v44 = 0u;
  long long v41 = 0u;
  long long v42 = 0u;
  id v2 = *(id *)(a1 + 40);
  id v3 = [v2 countByEnumeratingWithState:&v41 objects:v47 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v42;
    do
    {
      for (unint64_t i = 0; i != v4; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v42 != v5) {
          objc_enumerationMutation(v2);
        }
        double v7 = [*(id *)(*((void *)&v41 + 1) + 8 * i) layer];
        LODWORD(v8) = 1.0;
        [v7 setOpacity:v8];
      }
      id v4 = [v2 countByEnumeratingWithState:&v41 objects:v47 count:16];
    }
    while (v4);
  }

  long long v39 = 0u;
  long long v40 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  id v9 = *(id *)(a1 + 48);
  id v10 = [v9 countByEnumeratingWithState:&v37 objects:v46 count:16];
  if (v10)
  {
    id v11 = v10;
    uint64_t v12 = *(void *)v38;
    do
    {
      for (j = 0; j != v11; j = (char *)j + 1)
      {
        if (*(void *)v38 != v12) {
          objc_enumerationMutation(v9);
        }
        long long v14 = [*(id *)(*((void *)&v37 + 1) + 8 * (void)j) layer];
        [v14 setOpacity:0.0];
      }
      id v11 = [v9 countByEnumeratingWithState:&v37 objects:v46 count:16];
    }
    while (v11);
  }

  long long v35 = 0u;
  long long v36 = 0u;
  long long v33 = 0u;
  long long v34 = 0u;
  id v15 = *(id *)(a1 + 56);
  id v16 = [v15 countByEnumeratingWithState:&v33 objects:v45 count:16];
  if (v16)
  {
    id v17 = v16;
    uint64_t v18 = *(void *)v34;
    do
    {
      for (k = 0; k != v17; k = (char *)k + 1)
      {
        if (*(void *)v34 != v18) {
          objc_enumerationMutation(v15);
        }
        [*(id *)(*((void *)&v33 + 1) + 8 * (void)k) removeFromSuperview];
      }
      id v17 = [v15 countByEnumeratingWithState:&v33 objects:v45 count:16];
    }
    while (v17);
  }

  double v20 = [*(id *)(a1 + 64) pageViewController];
  id v21 = [v20 view];
  [v21 setAlpha:1.0];

  if ([*(id *)(a1 + 72) isPresenting])
  {
    if (*(unsigned char *)(a1 + 232)) {
      [*(id *)(a1 + 80) setFrame:*(double *)(a1 + 128), *(double *)(a1 + 136), *(double *)(a1 + 144), *(double *)(a1 + 152)];
    }
    long long v22 = *(void **)(a1 + 88);
    if (v22)
    {
      double v23 = *(double *)(a1 + 128);
      double v24 = *(double *)(a1 + 136);
      double v25 = *(double *)(a1 + 144);
      double v26 = *(double *)(a1 + 152);
LABEL_31:
      [v22 setFrame:v23, v24, v25, v26];
      double v27 = *(double *)(a1 + 160);
      long long v28 = [*(id *)(a1 + 88) layer];
      [v28 setCornerRadius:v27];
    }
  }
  else
  {
    if (*(unsigned char *)(a1 + 232)) {
      [*(id *)(a1 + 80) setFrame: *(double *)(a1 + 168), *(double *)(a1 + 176), *(double *)(a1 + 184), *(double *)(a1 + 192)];
    }
    long long v22 = *(void **)(a1 + 88);
    if (v22)
    {
      double v23 = *(double *)(a1 + 200);
      double v24 = *(double *)(a1 + 208);
      double v25 = *(double *)(a1 + 216);
      double v26 = *(double *)(a1 + 224);
      goto LABEL_31;
    }
  }
  [*(id *)(a1 + 96) setAlpha:1.0];
  [*(id *)(a1 + 104) setAlpha:1.0];
  [*(id *)(a1 + 112) setAlpha:1.0];
  if ([*(id *)(a1 + 120) count])
  {
    v31[0] = _NSConcreteStackBlock;
    v31[1] = 3221225472;
    v31[2] = sub_1000F3A1C;
    v31[3] = &unk_100625AF0;
    id v32 = *(id *)(a1 + 120);
    v29[0] = _NSConcreteStackBlock;
    v29[1] = 3221225472;
    v29[2] = sub_1000F3B1C;
    v29[3] = &unk_100626580;
    id v30 = *(id *)(a1 + 120);
    +[UIView animateWithDuration:v31 animations:v29 completion:0.1];
  }
}

void sub_1000F3A1C(uint64_t a1)
{
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  id v1 = *(id *)(a1 + 32);
  id v2 = [v1 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v8;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v1);
        }
        double v6 = [*(id *)(*((void *)&v7 + 1) + 8 * (void)v5) layer];
        [v6 setOpacity:0.0];

        uint64_t v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      id v3 = [v1 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v3);
  }
}

void sub_1000F3B1C(uint64_t a1)
{
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 32);
  id v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        [*(id *)(*((void *)&v6 + 1) + 8 * (void)v5) removeFromSuperview];
        uint64_t v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      id v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

void sub_1000F3D60(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) view];
  [v1 setAlpha:0.0];
}

void sub_1000F3DA8(uint64_t a1)
{
  [*(id *)(a1 + 32) completeTransition:[*(id *)(a1 + 32) transitionWasCancelled] ^ 1];
  id v2 = [*(id *)(a1 + 40) view];
  [v2 setAlpha:0.0];
}

void sub_1000F3F48(id a1)
{
  if (!qword_1006AA2C0)
  {
    id v1 = objc_alloc_init((Class)ICAttachmentPreviewImageCache);
    id v2 = (void *)qword_1006AA2C0;
    qword_1006AA2C0 = (uint64_t)v1;
  }
}

void sub_1000F44A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000F44DC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v5 = WeakRetained;
  if (WeakRetained)
  {
    long long v6 = [WeakRetained attachment];
    long long v7 = [v6 identifier];
    unsigned int v8 = [v7 isEqualToString:*(void *)(a1 + 32)];

    if (v8)
    {
      v9[0] = _NSConcreteStackBlock;
      v9[1] = 3221225472;
      void v9[2] = sub_1000F45E0;
      v9[3] = &unk_100625860;
      id v10 = v5;
      id v11 = v3;
      +[UIView performWithoutAnimation:v9];
    }
  }
}

void sub_1000F45E0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) thumbnailView];
  [v2 setImage:*(void *)(a1 + 40)];
}

id sub_1000F4634(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 size];
  if (v4 <= 0.0 || ([v3 size], v5 <= 0.0))
  {
    id v15 = v3;
  }
  else
  {
    double v6 = *(double *)(a1 + 32);
    [v3 size];
    double v7 = *(double *)(a1 + 40);
    double v9 = v6 / v8;
    [v3 size];
    if (v9 >= v7 / v10) {
      double v11 = v9;
    }
    else {
      double v11 = v7 / v10;
    }
    [v3 size];
    double v13 = ceil(v12 * v11);
    [v3 size];
    [v3 ic_scaledImageWithSize:v13 scale:ceil(v14 * v11)];
    id v15 = (id)objc_claimAutoreleasedReturnValue();
  }
  id v16 = v15;

  return v16;
}

id sub_1000F491C(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  double v7 = WeakRetained;
  if (WeakRetained)
  {
    double v8 = [WeakRetained diffableDataSource];
    double v9 = [v8 snapshot];
    double v10 = [v9 sectionIdentifiers];
    double v11 = [v10 objectAtIndexedSubscript:a2];

    if ([v7 hasGroupInset]) {
      uint64_t v12 = 2;
    }
    else {
      uint64_t v12 = 3;
    }
    id v13 = [objc_alloc((Class)_UICollectionViewListLayoutSectionConfiguration) initWithAppearanceStyle:v12 layoutEnvironment:v5];
    objc_opt_class();
    double v14 = ICDynamicCast();
    [v13 setStylesFirstItemAsHeader:[v14 hasHeader]];
    if ([v14 sectionType] == (id)8)
    {
      [v13 setSeparatorStyle:0];
    }
    else
    {
      [v13 setSeparatorStyle:[v7 hasGroupInset]];
      if ([*(id *)(a1 + 32) hasSwipeActions])
      {
        id v16 = [v7 leadingSwipeActionsConfigurationProvider];
        [v13 setLeadingSwipeActionsConfigurationProvider:v16];

        id v17 = [v7 trailingSwipeActionsConfigurationProvider];
        [v13 setTrailingSwipeActionsConfigurationProvider:v17];
      }
    }
    id v15 = [objc_alloc((Class)_UICollectionViewListLayoutSection) initWithConfiguration:v13 layoutEnvironment:v5];
    if (+[UIDevice ic_isVision]
      && ([v7 shouldShowMoveHeader] & 1) == 0)
    {
      [v15 contentInsets];
      [v15 setContentInsets:];
    }
  }
  else
  {
    id v15 = 0;
  }

  return v15;
}

void sub_1000F4D3C(uint64_t a1)
{
  id v2 = +[NSPredicate predicateWithFormat:@"media != nil && markedForDeletion != media.markedForDeletion"];
  v16[0] = v2;
  id v3 = +[NSPredicate predicateWithFormat:@"markedForDeletion == NO && parentAttachment.markedForDeletion == YES"];
  v16[1] = v3;
  double v4 = +[NSPredicate predicateWithFormat:@"parentAttachment == nil && note.markedForDeletion != markedForDeletion"];
  _OWORD v16[2] = v4;
  id v5 = +[NSArray arrayWithObjects:v16 count:3];
  double v6 = +[NSCompoundPredicate orPredicateWithSubpredicates:v5];

  double v7 = +[ICAttachment attachmentsMatchingPredicate:v6 context:*(void *)(a1 + 32)];
  double v8 = os_log_create("com.apple.notes", "LaunchTask");
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG)) {
    sub_1004DBB7C(v7);
  }

  [*(id *)(a1 + 40) resolveInconsistencies:v7 context:*(void *)(a1 + 32)];
  double v9 = +[NSPredicate predicateWithFormat:@"parentAttachment != nil && parentAttachment.markedForDeletion != markedForDeletion"];
  double v10 = +[NSPredicate predicateWithFormat:@"parentAttachment == nil && note.markedForDeletion != markedForDeletion", v9];
  v15[1] = v10;
  double v11 = +[NSArray arrayWithObjects:v15 count:2];
  uint64_t v12 = +[NSCompoundPredicate orPredicateWithSubpredicates:v11];

  id v13 = +[ICInlineAttachment attachmentsMatchingPredicate:v12 context:*(void *)(a1 + 32)];
  double v14 = os_log_create("com.apple.notes", "LaunchTask");
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG)) {
    sub_1004DBB00(v13);
  }

  [*(id *)(a1 + 40) resolveInconsistencies:v13 context:*(void *)(a1 + 32)];
}

void sub_1000F5584(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000F55AC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  if (*(void *)(result + 32) == a2)
  {
    *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + 24) = 1;
    *a5 = 1;
  }
  return result;
}

void sub_1000F56E0(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  double v4 = ICDynamicCast();
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();
  double v6 = [v4 parentAttachment];

  if ((isKindOfClass & 1) == 0 || !v6)
  {
    double v7 = *(void **)(a1 + 32);
    double v8 = [v3 objectID];
    [v7 ic_addNonNilObject:v8];

    if ([v3 markedForDeletion])
    {
      double v9 = os_log_create("com.apple.notes", "LaunchTask");
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG)) {
        sub_1004DBC68(a1, v3, v9);
      }

      [v3 unmarkForDeletion];
    }
  }
}

void sub_1000F58F8(uint64_t a1, void *a2)
{
  id v3 = a2;
  double v4 = *(void **)(a1 + 32);
  id v5 = [v3 objectID];
  [v4 ic_addNonNilObject:v5];

  if (([v3 markedForDeletion] & 1) == 0)
  {
    double v6 = os_log_create("com.apple.notes", "LaunchTask");
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      double v7 = [*(id *)(a1 + 40) ic_loggingIdentifier];
      double v8 = [v3 shortLoggingDescription];
      int v9 = 138412546;
      double v10 = v7;
      __int16 v11 = 2112;
      uint64_t v12 = v8;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "Resolving inconsistency of (%@) by deleting: %@", (uint8_t *)&v9, 0x16u);
    }
    [v3 markForDeletion];
  }
}

void sub_1000F8DC8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v2 = v3;
  performBlockOnMainThread();
}

void sub_1000F8E5C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) configuration];
  id v3 = [v2 uniqueKey];
  double v4 = [*(id *)(a1 + 40) currentThumbnailConfigurationUniqueKey];
  unsigned int v5 = [v3 isEqual:v4];

  if (!v5) {
    return;
  }
  uint64_t v6 = [*(id *)(a1 + 32) image];
  if (v6)
  {
    double v7 = (void *)v6;
    unsigned int v8 = [*(id *)(a1 + 40) isThumbnailPresent];

    if (v8)
    {
      int v9 = [*(id *)(a1 + 32) image];
      double v10 = [*(id *)(a1 + 40) thumbnailImageView];
      [v10 setImage:v9];

      if (+[UIDevice ic_isVision]) {
        +[UIColor ic_noteEditorBackgroundColor];
      }
      else {
      id v16 = +[UIColor secondarySystemGroupedBackgroundColor];
      }
      id v17 = [*(id *)(a1 + 40) thumbnailImageView];
      [v17 setBackgroundColor:v16];

      [*(id *)(a1 + 40) ic_hairlineWidth];
      double v19 = v18;
      double v20 = [*(id *)(a1 + 40) thumbnailImageView];
      id v21 = [v20 layer];
      [v21 setBorderWidth:v19];

      long long v22 = [*(id *)(a1 + 40) thumbnailImageView];
      [v22 setHidden:0];

      double v23 = [*(id *)(a1 + 40) thumbnailImageView];
      id v24 = [v23 contentMode];
      id v25 = [*(id *)(a1 + 32) preferredContentMode];

      if (v24 == v25) {
        return;
      }
      id v26 = [*(id *)(a1 + 32) preferredContentMode];
      id v27 = [*(id *)(a1 + 40) thumbnailImageView];
      [v27 setContentMode:v26];
LABEL_14:

      return;
    }
  }
  __int16 v11 = [*(id *)(a1 + 40) thumbnailImageView];
  uint64_t v12 = [v11 image];

  if (v12)
  {
    id v13 = [*(id *)(a1 + 40) thumbnailImageView];
    [v13 setImage:0];
  }
  double v14 = [*(id *)(a1 + 40) thumbnailImageView];
  unsigned __int8 v15 = [v14 isHidden];

  if ((v15 & 1) == 0)
  {
    id v27 = [*(id *)(a1 + 40) thumbnailImageView];
    [v27 setHidden:1];
    goto LABEL_14;
  }
}

void sub_1000F92A8(uint64_t a1)
{
  id v5 = +[UIColor quaternaryLabelColor];
  id v2 = [v5 CGColor];
  id v3 = [*(id *)(a1 + 32) thumbnailImageView];
  double v4 = [v3 layer];
  [v4 setBorderColor:v2];
}

void sub_1000F99F0(id a1)
{
  id v3 = [objc_alloc((Class)NoteContext) initWithPrivateQueue];
  uint64_t v1 = [v3 managedObjectContext];
  id v2 = (void *)qword_1006AA2D8;
  qword_1006AA2D8 = v1;
}

void sub_1000F9AA0(id a1)
{
  id v3 = +[ICNoteContext sharedContext];
  uint64_t v1 = [v3 workerManagedObjectContext];
  id v2 = (void *)qword_1006AA2E8;
  qword_1006AA2E8 = v1;
}

void sub_1000F9B50(id a1)
{
  uint64_t v1 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  attr = dispatch_queue_attr_make_with_qos_class(v1, QOS_CLASS_USER_INITIATED, 0);

  dispatch_queue_t v2 = dispatch_queue_create("com.apple.notes.load-data-queue", attr);
  id v3 = (void *)qword_1006AA2F8;
  qword_1006AA2F8 = (uint64_t)v2;
}

void sub_1000F9EBC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1000F9F54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_1000FA054(uint64_t a1)
{
  return [*(id *)(a1 + 32) loadDataWithContext:*(void *)(a1 + 40)];
}

void sub_1000FA118(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) note];
  unsigned __int8 v4 = [v3 isModernNote];
  if ((v4 & 1) != 0
    || ([*(id *)(a1 + 32) invitation], (uint64_t v1 = objc_claimAutoreleasedReturnValue()) != 0))
  {
    id v5 = [(id)objc_opt_class() modernBackgroundContext];
    if (v4) {
      goto LABEL_7;
    }
  }
  else
  {
    id v5 = [(id)objc_opt_class() legacyBackgroundContext];
  }

LABEL_7:
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1000FA230;
  void v8[3] = &unk_100625888;
  uint64_t v6 = *(void **)(a1 + 40);
  void v8[4] = *(void *)(a1 + 32);
  id v9 = v5;
  id v10 = v6;
  id v7 = v5;
  [v7 performBlock:v8];
}

uint64_t sub_1000FA230(uint64_t a1)
{
  [*(id *)(a1 + 32) loadDataWithContext:*(void *)(a1 + 40)];
  uint64_t result = *(void *)(a1 + 48);
  if (result)
  {
    id v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

void sub_1000FAD98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1000FB338(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1000FC68C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id *a12, id *location, id *a14, id *a15, id *a16, id *a17, id *a18)
{
  objc_destroyWeak(location);
  objc_destroyWeak(a14);
  objc_destroyWeak(a15);
  objc_destroyWeak(a16);
  objc_destroyWeak(a17);
  objc_destroyWeak(a18);
  objc_destroyWeak((id *)(v18 - 120));
  objc_destroyWeak((id *)(v18 - 112));
  _Unwind_Resume(a1);
}

void sub_1000FC740(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v14 = a2;
  id v6 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    objc_opt_class();
    unsigned int v8 = ICDynamicCast();
    id v9 = [[ICNoteResultsCellConfiguration alloc] initWithSearchResult:v8];
    id v10 = [WeakRetained viewControllerManager];
    if ((unint64_t)[v10 countOfAllVisibleAccounts] <= 1)
    {
      [(ICNoteResultsCellConfiguration *)v9 setShowAccountName:0];
    }
    else
    {
      __int16 v11 = [WeakRetained accountIdentifier];
      [(ICNoteResultsCellConfiguration *)v9 setShowAccountName:v11 == 0];
    }
    [(ICNoteResultsCellConfiguration *)v9 setShowFolderName:1];
    uint64_t v12 = [WeakRetained collectionView];
    [v14 setConfiguration:v9 synchronously:[v12 ic_shouldOptimizeForScrolling] ^ 1];

    id v13 = objc_loadWeakRetained((id *)(a1 + 40));
    [v14 setAccessibilityCustomActionsDelegate:v13];
  }
}

void sub_1000FC8A0(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v18 = a2;
  id v6 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    objc_opt_class();
    unsigned int v8 = ICDynamicCast();
    id v9 = [v8 object];
    id v10 = [v9 objectID];

    if (objc_msgSend(v10, "ic_isEntityOfClass:", objc_opt_class()))
    {
      __int16 v11 = [WeakRetained modernViewContext];
      uint64_t v12 = [v11 objectWithID:v10];

      id v13 = [[ICNoteResultsCellConfiguration alloc] initWithNote:v12];
      id v14 = [WeakRetained viewControllerManager];
      if ((unint64_t)[v14 countOfAllVisibleAccounts] <= 1)
      {
        [(ICNoteResultsCellConfiguration *)v13 setShowAccountName:0];
      }
      else
      {
        unsigned __int8 v15 = [WeakRetained accountIdentifier];
        [(ICNoteResultsCellConfiguration *)v13 setShowAccountName:v15 == 0];
      }
      [(ICNoteResultsCellConfiguration *)v13 setShowFolderName:1];
      id v16 = [WeakRetained collectionView];
      [v18 setConfiguration:v13 synchronously:[v16 ic_shouldOptimizeForScrolling] ^ 1];

      id v17 = objc_loadWeakRetained((id *)(a1 + 40));
      [v18 setAccessibilityCustomActionsDelegate:v17];
    }
  }
}

void sub_1000FCA6C(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v13 = a2;
  id v6 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    objc_opt_class();
    unsigned int v8 = ICDynamicCast();
    id v9 = [v8 object];
    id v10 = [v9 objectID];

    if (objc_msgSend(v10, "ic_isEntityOfClass:", objc_opt_class()))
    {
      __int16 v11 = [WeakRetained modernViewContext];
      uint64_t v12 = [v11 objectWithID:v10];

      objc_msgSend(v13, "setHighlightSelection:", objc_msgSend(WeakRetained, "noteContainerViewMode") == 0);
      [v13 setAttachment:v12 searchResult:v8];
    }
  }
}

void sub_1000FCB90(id a1, UICollectionViewListCell *a2, NSIndexPath *a3, id a4)
{
  id v14 = a2;
  id v5 = a4;
  objc_opt_class();
  id v6 = ICDynamicCast();

  id v7 = [(UICollectionViewListCell *)v14 defaultContentConfiguration];
  unsigned int v8 = [v6 suggestionItemTitle];
  [v7 setText:v8];

  id v9 = +[UIImageSymbolConfiguration configurationWithTextStyle:UIFontTextStyleBody];
  id v10 = [v7 imageProperties];
  [v10 setPreferredSymbolConfiguration:v9];

  __int16 v11 = [v6 iconImage];
  [v7 setImage:v11];

  [(UICollectionViewListCell *)v14 setContentConfiguration:v7];
  uint64_t v12 = [(UICollectionViewListCell *)v14 defaultBackgroundConfiguration];
  if ([(UICollectionViewListCell *)v14 ic_behavior] == (id)1)
  {
    id v13 = +[UIColor secondarySystemBackgroundColor];
    [v12 setBackgroundColor:v13];
  }
  [(UICollectionViewListCell *)v14 setBackgroundConfiguration:v12];
}

void sub_1000FCD00(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v10 = a2;
  id v6 = a4;
  id v7 = [v10 ic_behavior];
  if (v7 == (id)1)
  {
    [v10 setStyleForCalculator:1];
  }
  else if (v7 == (id)3)
  {
    [v10 setHorizontalInsetsOverride:0.0];
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v9 = [WeakRetained snapshot];
  [v9 updateHeaderView:v10 forIndexPath:v6];
}

id sub_1000FCDBC(id *a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  id WeakRetained = objc_loadWeakRetained(a1 + 8);
  if (!WeakRetained)
  {
    uint64_t v12 = 0;
    goto LABEL_15;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v11 = a1[4];
    if (!v11)
    {
LABEL_11:
      id v16 = [WeakRetained noteContainerViewMode];
      uint64_t v17 = 7;
      if (!v16) {
        uint64_t v17 = 6;
      }
      id v11 = a1[v17];
    }
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0) {
      goto LABEL_11;
    }
    objc_opt_class();
    id v13 = ICDynamicCast();
    id v14 = [v13 object];
    unsigned __int8 v15 = [v14 objectID];

    id v11 = [v15 ic_isEntityOfClass:objc_opt_class()] ? a1[5] : 0;
    if (!v11) {
      goto LABEL_11;
    }
  }
  uint64_t v12 = [v7 dequeueConfiguredReusableCellWithRegistration:v11 forIndexPath:v8 item:v9];

LABEL_15:

  return v12;
}

id sub_1000FCF50(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5 = (id *)(a1 + 40);
  id v6 = a4;
  id WeakRetained = objc_loadWeakRetained(v5);
  id v8 = [WeakRetained dequeueConfiguredReusableSupplementaryViewWithRegistration:*(void *)(a1 + 32) forIndexPath:v6];

  return v8;
}

void sub_1000FD27C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

BOOL sub_1000FD2A0(id a1, ICSearchToken *a2, unint64_t a3, BOOL *a4)
{
  unsigned __int8 v4 = [(ICSearchToken *)a2 csToken];
  BOOL v5 = v4 == 0;

  return v5;
}

void sub_1000FD2D8(uint64_t a1, void *a2)
{
  id v3 = (id *)(a1 + 40);
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  [WeakRetained setDidUpdateForCurrentSearchUserInput:1];
  uint64_t v6 = *(void *)(a1 + 48);
  id v7 = [WeakRetained snapshot];
  [v7 setBehavior:v6];

  id v8 = [WeakRetained snapshot];
  [v8 updateWithResults:v4];

  performBlockOnMainThread();
  uint64_t v9 = *(void *)(a1 + 32);
  if (v9) {
    (*(void (**)(void))(v9 + 16))();
  }
}

void sub_1000FD3D8(uint64_t a1)
{
  dispatch_queue_t v2 = [*(id *)(a1 + 32) collectionViewDiffableDataSource];
  id v9 = [v2 snapshot];

  id v3 = [(id)objc_opt_class() numberOfItemsInSection:@"ICNoteSearchDataSourceTopHitsSectionIdentifier" forSnapshot:v9];
  id v4 = (char *)[(id)objc_opt_class() numberOfItemsInSection:@"ICNoteSearchDataSourceNoteSectionIdentifier" forSnapshot:v9];
  id v5 = [(id)objc_opt_class() numberOfItemsInSection:@"ICNoteSearchDataSourceAttachmentSectionIdentifier" forSnapshot:v9];
  uint64_t v6 = [*(id *)(a1 + 32) viewControllerManager];
  id v7 = [v6 searchController];

  [v7 setNeedsUpdateContentUnavailableConfiguration];
  id v8 = [v7 searchResultExposureReporter];
  [v8 updateWithTopHitResultCount:v3 nonTopHitResultCount:&v4[(void)v5] attachmentSectionCount:v5];
}

id sub_1000FD8F8(id a1, id a2)
{
  id v2 = a2;
  objc_opt_class();
  id v3 = ICDynamicCast();

  id v4 = [v3 object];
  id v5 = [v4 objectID];
  uint64_t v6 = v5;
  if (v5)
  {
    id v7 = v5;
  }
  else
  {
    id v7 = +[NSNull null];
  }
  id v8 = v7;

  return v8;
}

id sub_1000FDAC0(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    objc_opt_class();
    id v4 = ICDynamicCast();
    id v5 = [*(id *)(a1 + 32) collectionViewDiffableDataSource];
    uint64_t v6 = [v5 indexPathForItemIdentifier:v4];

    if (!v6) {
      goto LABEL_6;
    }
    id v7 = *(void **)(a1 + 40);
    id v8 = [v4 object];
    id v9 = [v8 objectID];
    LODWORD(v7) = [v7 containsObject:v9];

    if (v7)
    {
      id v10 = [*(id *)(a1 + 32) collectionView];
      id v11 = [v10 cellForItemAtIndexPath:v6];
    }
    else
    {
LABEL_6:
      id v11 = 0;
    }
  }
  else
  {
    id v11 = 0;
  }

  return v11;
}

void sub_1000FDD08(uint64_t a1, void *a2)
{
  id v13 = a2;
  id v3 = [v13 objectID];
  unsigned int v4 = [v3 ic_isNoteType];

  id v5 = v13;
  if (v4)
  {
    uint64_t v6 = [v13 changedValues];
    id v7 = [v6 allKeys];

    if ([v7 containsObject:@"markedForDeletion"]) {
      unsigned int v8 = 1;
    }
    else {
      unsigned int v8 = [v7 containsObject:@"deletedFlag"];
    }
    objc_opt_class();
    uint64_t v9 = ICDynamicCast();
    id v10 = (void *)v9;
    if (v9)
    {
      LODWORD(v9) = [v7 containsObject:@"folder"];
      if (v9) {
        LODWORD(v9) = [v10 isDeletedOrInTrash];
      }
    }
    if (((v8 | v9) & 1) != 0 || [v13 isDeleted])
    {
      id v11 = *(void **)(a1 + 32);
      uint64_t v12 = [v13 objectID];
      [v11 addObject:v12];
    }
    id v5 = v13;
  }
}

void sub_1000FDEF0(uint64_t a1, void *a2)
{
  id v3 = a2;
  unsigned int v4 = [v3 itemIdentifiers];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1000FDFC4;
  v6[3] = &unk_100629F50;
  id v7 = *(id *)(a1 + 32);
  id v5 = [v4 ic_objectsPassingTest:v6];

  if ([v5 count]) {
    [v3 deleteItemsWithIdentifiers:v5];
  }
}

id sub_1000FDFC4(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    objc_opt_class();
    unsigned int v4 = ICDynamicCast();
    id v5 = *(void **)(a1 + 32);
    uint64_t v6 = [v4 object];
    id v7 = [v6 objectID];
    id v8 = [v5 containsObject:v7];
  }
  else
  {
    id v8 = 0;
  }

  return v8;
}

void sub_1000FE21C(uint64_t a1, void *a2)
{
  id v25 = a2;
  [v25 itemIdentifiers];
  uint64_t v27 = 0;
  long long v28 = &v27;
  uint64_t v29 = 0x3032000000;
  id v30 = sub_1000FE5B0;
  uint64_t v31 = sub_1000FE5C0;
  id v32 = 0;
  id v24 = (id)objc_claimAutoreleasedReturnValue();
  id v26 = *(id *)(a1 + 32);
  performBlockOnMainThreadAndWait();
  if (v28[5])
  {
    unsigned int v4 = [*(id *)(a1 + 32) note];
    unsigned __int8 v5 = [v4 isPasswordProtected];
    if ((v5 & 1) != 0
      || ([*(id *)(a1 + 32) updatedNote],
          id v2 = objc_claimAutoreleasedReturnValue(),
          ([v2 isPasswordProtected] & 1) == 0))
    {
      uint64_t v6 = [(id)v28[5] configuration];
      double v23 = [v6 foundAttachmentObjectID];

      if (v5)
      {
LABEL_7:

        id v7 = objc_alloc((Class)ICSearchResultConfiguration);
        id v8 = [(id)v28[5] configuration];
        uint64_t v9 = [v8 searchString];
        id v10 = [(id)v28[5] configuration];
        id v11 = [v10 searchSuggestionType];
        uint64_t v12 = [(id)v28[5] configuration];
        id v13 = [v12 isTopHit];
        id v14 = [(id)v28[5] configuration];
        unsigned __int8 v15 = [v14 sortableSearchableItem];
        id v16 = [v7 initWithSearchString:v9 searchSuggestionType:v11 isTopHit:v13 foundAttachmentObjectID:v23 sortableSearchableItem:v15];

        id v17 = objc_alloc((Class)ICSearchResult);
        id v18 = [*(id *)(a1 + 32) updatedNote];
        id v19 = [v17 initWithObject:v18 configuration:v16];

        double v20 = [*(id *)(a1 + 32) updatedNote];
        [v19 setMathNote:[v20 isMathNote]];

        id v34 = v19;
        id v21 = +[NSArray arrayWithObjects:&v34 count:1];
        [v25 insertItemsWithIdentifiers:v21 afterItemWithIdentifier:v28[5]];

        uint64_t v33 = v28[5];
        long long v22 = +[NSArray arrayWithObjects:&v33 count:1];
        [v25 deleteItemsWithIdentifiers:v22];

        goto LABEL_8;
      }
    }
    else
    {
      double v23 = 0;
    }

    goto LABEL_7;
  }
LABEL_8:

  _Block_object_dispose(&v27, 8);
}

void sub_1000FE584(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000FE5B0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000FE5C0(uint64_t a1)
{
}

void sub_1000FE5C8(uint64_t a1)
{
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id obj = *(id *)(a1 + 32);
  id v2 = (char *)[obj countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v17;
    while (2)
    {
      for (unint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v17 != v4) {
          objc_enumerationMutation(obj);
        }
        objc_opt_class();
        uint64_t v6 = ICDynamicCast();
        id v7 = v6;
        if (v6)
        {
          id v8 = [v6 object];
          uint64_t v9 = [v8 objectID];
          id v10 = [*(id *)(a1 + 40) note];
          id v11 = [v10 objectID];
          unsigned int v12 = [v9 isEqual:v11];

          if (v12)
          {
            uint64_t v13 = *(void *)(*(void *)(a1 + 48) + 8);
            id v14 = *(void **)(v13 + 40);
            *(void *)(v13 + 40) = v7;

            goto LABEL_12;
          }
        }
      }
      id v3 = (char *)[obj countByEnumeratingWithState:&v16 objects:v20 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_12:
}

void sub_100101450(uint64_t a1, void *a2)
{
  if (![a2 numberOfItems])
  {
    id v3 = (id *)(a1 + 32);
    id WeakRetained = objc_loadWeakRetained(v3);
    unsigned __int8 v5 = [WeakRetained summaryView];
    [v5 setHidden:1];

    id v6 = objc_loadWeakRetained(v3);
    id v7 = [v6 splitViewController];
    unsigned __int8 v8 = [v7 isCollapsed];

    if ((v8 & 1) == 0)
    {
      id v9 = objc_loadWeakRetained(v3);
      id v10 = [v9 navigationController];
      [v10 setToolbarHidden:1 animated:0];
    }
    id v11 = objc_loadWeakRetained(v3);
    unsigned int v12 = [v11 navigationController];
    unsigned int v13 = [v12 isToolbarHidden];

    if (v13)
    {
      id v14 = objc_loadWeakRetained(v3);
      [v14 setNeedsUpdateContentUnavailableConfiguration];
    }
  }
}

void sub_100101CBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100101CF8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = +[UIApplication sharedApplication];
  id v3 = [v2 applicationState];

  if (v3)
  {
    uint64_t v4 = 0;
    goto LABEL_11;
  }
  unsigned __int8 v5 = [WeakRetained noteContainer];

  if (v5)
  {
    objc_opt_class();
    id v6 = [WeakRetained noteContainer];
    uint64_t v4 = ICDynamicCast();

    objc_opt_class();
    id v7 = [WeakRetained noteContainer];
    unsigned __int8 v8 = ICDynamicCast();

    if (!v4)
    {
      uint64_t v9 = [v8 defaultFolder];
LABEL_9:
      uint64_t v4 = (void *)v9;
    }
  }
  else
  {
    uint64_t v4 = [WeakRetained noteCollection];

    if (!v4) {
      goto LABEL_11;
    }
    objc_opt_class();
    id v10 = [WeakRetained noteCollection];
    uint64_t v4 = ICDynamicCast();

    objc_opt_class();
    id v11 = [WeakRetained noteCollection];
    unsigned __int8 v8 = ICDynamicCast();

    if (!v4)
    {
      uint64_t v9 = [v8 defaultStore];
      goto LABEL_9;
    }
  }

LABEL_11:

  return v4;
}

id sub_1001021D8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) updateTagSelectionIfNeeded];
}

id sub_1001021E0(uint64_t a1)
{
  return _[*(id *)(a1 + 32) updateVisibleGalleryCellThumbnails];
}

uint64_t sub_100102424(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2)
  {
    id v3 = [*(id *)(a1 + 32) noteDataSource];
    uint64_t v4 = [v3 indexer];
    (*(void (**)(uint64_t, void *))(v2 + 16))(v2, v4);
  }
  uint64_t result = *(void *)(a1 + 48);
  if (result)
  {
    id v6 = *(uint64_t (**)(void))(result + 16);
    return v6();
  }
  return result;
}

uint64_t sub_1001026F8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2)
  {
    id v3 = [*(id *)(a1 + 32) noteDataSource];
    uint64_t v4 = [v3 indexer];
    (*(void (**)(uint64_t, void *))(v2 + 16))(v2, v4);
  }
  uint64_t result = *(void *)(a1 + 48);
  if (result)
  {
    id v6 = *(uint64_t (**)(void))(result + 16);
    return v6();
  }
  return result;
}

void sub_100102790(uint64_t a1)
{
  if ([*(id *)(a1 + 32) noteContainerViewMode] == (id)1) {
    uint64_t v2 = 0;
  }
  else {
    uint64_t v2 = *(void *)(a1 + 40);
  }
  id v3 = [*(id *)(a1 + 32) noteDataSource];
  [v3 setNoteCollection:v2];
}

uint64_t sub_100102A38(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2)
  {
    id v3 = [*(id *)(a1 + 32) noteDataSource];
    uint64_t v4 = [v3 indexer];
    (*(void (**)(uint64_t, void *))(v2 + 16))(v2, v4);
  }
  uint64_t result = *(void *)(a1 + 48);
  if (result)
  {
    id v6 = *(uint64_t (**)(void))(result + 16);
    return v6();
  }
  return result;
}

void sub_100102AD0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  id v2 = [*(id *)(a1 + 32) noteDataSource];
  [v2 setNoteQuery:v1];
}

uint64_t sub_100102DD8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2)
  {
    id v3 = [*(id *)(a1 + 32) noteDataSource];
    uint64_t v4 = [v3 indexer];
    (*(void (**)(uint64_t, void *))(v2 + 16))(v2, v4);
  }
  uint64_t result = *(void *)(a1 + 48);
  if (result)
  {
    id v6 = *(uint64_t (**)(void))(result + 16);
    return v6();
  }
  return result;
}

void sub_100102E70(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  id v2 = [*(id *)(a1 + 32) noteDataSource];
  [v2 setVirtualSmartFolder:v1];
}

uint64_t sub_100103090(uint64_t a1)
{
  [*(id *)(a1 + 32) updateContainerSelection];
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    id v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

void sub_1001030E4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2)
  {
    id v4 = +[ICQuery queryForNotesMatchingTagSelection:v2];
  }
  else
  {
    id v4 = 0;
  }
  id v3 = [*(id *)(a1 + 32) noteDataSource];
  [v3 setNoteQuery:v4];

  if (v2)
  {
  }
}

id sub_1001032D8(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) isEditing];
  if ((result & 1) == 0)
  {
    [*(id *)(a1 + 32) updateNoteSelectionAnimated:1];
    id v3 = *(void **)(a1 + 32);
    return [v3 updateContainerSelection];
  }
  return result;
}

void sub_100103330(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 40);
  id v2 = [*(id *)(a1 + 32) collectionView];
  [v2 setEditing:v1];
}

void sub_1001035DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100103604(uint64_t a1, int a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  unsigned __int8 v5 = WeakRetained;
  if (a2)
  {
    id v6 = [WeakRetained noteDataSource];
    char v7 = *(unsigned char *)(a1 + 48);
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_1001036E4;
    void v8[3] = &unk_100625D18;
    void v8[4] = *(void *)(a1 + 32);
    char v9 = v7;
    [v6 reloadDataAnimated:v7 == 0 dataIndexedBlock:0 dataRenderedBlock:v8];
  }
  else
  {
    [*(id *)(a1 + 32) setShouldAvoidEditingChanges:0];
  }
  [v5 setNeedsToConfirmDeletion:0];
}

id sub_1001036E4(uint64_t a1)
{
  [*(id *)(a1 + 32) setShouldAvoidEditingChanges:0];
  id v2 = *(void **)(a1 + 32);
  BOOL v3 = *(unsigned char *)(a1 + 40) == 0;

  return [v2 setEditing:0 animated:v3];
}

void sub_10010380C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100103830(uint64_t a1, void *a2)
{
  if ([a2 count])
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained setEditing:0 animated:1];
    BOOL v3 = [WeakRetained noteDataSource];
    [v3 reloadDataAnimated:1];
  }
}

id sub_100103FF8(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateSummaryView];
}

void sub_100104268(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1001042C4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_100104348;
  v2[3] = &unk_100625AF0;
  void v2[4] = WeakRetained;
  [WeakRetained ic_performBlockAfterActiveTransition:v2];
}

void sub_100104348(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) collectionView];
  [v2 setNeedsLayout];

  id v3 = [*(id *)(a1 + 32) collectionView];
  [v3 layoutIfNeeded];
}

void sub_1001043B0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (([WeakRetained updateFolderSectionVisibility] & 1) != 0
    || [WeakRetained updateTagSectionVisibility])
  {
    [WeakRetained reloadDataSourceAnimated:0 dataIndexedBlock:0 dataRenderedBlock:0];
  }
}

void sub_100104414(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  id v4 = [WeakRetained viewControllerManager];
  [v4 selectTagSelection:v3];
}

uint64_t sub_100104520(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100104530(uint64_t a1)
{
}

id sub_1001045AC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 168);
  *(void *)(v2 + 168) = 0;

  id v4 = *(void **)(a1 + 32);

  return [v4 updateBarButtonItemsAnimated:1];
}

void sub_100104774(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100104790(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained showSharedFolderActions:0];
}

id sub_1001047D4(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    id v6 = 0;
    goto LABEL_10;
  }
  id v4 = v3;
  if (objc_msgSend(v4, "ic_isEntityOfClass:", objc_opt_class()))
  {
    unsigned __int8 v5 = [*(id *)(a1 + 32) modernViewContext];
  }
  else
  {
    if (!objc_msgSend(v4, "ic_isEntityOfClass:", objc_opt_class()))
    {
      id v6 = 0;
      goto LABEL_9;
    }
    unsigned __int8 v5 = [*(id *)(a1 + 32) legacyViewContext];
  }
  char v7 = v5;
  id v6 = [v5 objectWithID:v4];

LABEL_9:
LABEL_10:

  return v6;
}

void sub_1001048C0(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  void block[2] = sub_100104950;
  block[3] = &unk_100625938;
  objc_copyWeak(&v2, (id *)(a1 + 32));
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  objc_destroyWeak(&v2);
}

void sub_100104950(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained updateNoteSelection];
}

BOOL sub_100104A3C(id a1, ICSearchIndexableNote *a2, unint64_t a3, BOOL *a4)
{
  return [(ICSearchIndexableNote *)a2 isMovable];
}

BOOL sub_100104A44(id a1, ICSearchIndexableNote *a2, unint64_t a3, BOOL *a4)
{
  return [(ICSearchIndexableNote *)a2 isDeletable];
}

id sub_100104DDC(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  id v4 = [*(id *)(a1 + 32) noteDataSource];
  unsigned __int8 v5 = [v4 collectionViewDiffableDataSource];
  id v6 = [v5 itemIdentifierForIndexPath:v3];

  char v7 = ICDynamicCast();

  return v7;
}

id sub_100104E8C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (objc_msgSend(v3, "ic_isEntityOfClass:", objc_opt_class()))
  {
    id v4 = [*(id *)(a1 + 32) modernViewContext];
LABEL_5:
    unsigned __int8 v5 = v4;
    id v6 = [v4 objectWithID:v3];

    goto LABEL_7;
  }
  if (objc_msgSend(v3, "ic_isEntityOfClass:", objc_opt_class()))
  {
    id v4 = [*(id *)(a1 + 32) legacyViewContext];
    goto LABEL_5;
  }
  id v6 = 0;
LABEL_7:

  return v6;
}

BOOL sub_100104FC8(id a1, ICSearchIndexableNote *a2, unint64_t a3, BOOL *a4)
{
  id v4 = a2;
  if ([(ICSearchIndexableNote *)v4 isModernNote]
    && ([(ICSearchIndexableNote *)v4 isPasswordProtected] & 1) == 0)
  {
    unsigned int v5 = [(ICSearchIndexableNote *)v4 isSharedReadOnly] ^ 1;
  }
  else
  {
    LOBYTE(v5) = 0;
  }

  return v5;
}

id sub_1001050DC(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateBarButtonItemsAnimated:1];
}

void sub_1001054D0(uint64_t a1)
{
  objc_opt_class();
  id v2 = [*(id *)(a1 + 32) noteContainer];
  ICDynamicCast();
  id v13 = (id)objc_claimAutoreleasedReturnValue();

  id v3 = [v13 visibleNotesInFolder];
  id v4 = [v3 ic_compactMap:&stru_10062A1A8];
  unsigned int v5 = [*(id *)(a1 + 32) viewControllerManager];
  id v6 = [v5 selectedNoteObjectID];
  unsigned __int8 v7 = [v4 containsObject:v6];

  unsigned __int8 v8 = v13;
  if ((v7 & 1) == 0)
  {
    objc_opt_class();
    char v9 = [*(id *)(a1 + 32) noteDataSource];
    id v10 = [v9 firstRelevantItemIdentifier];
    id v11 = ICDynamicCast();

    if (v11)
    {
      unsigned int v12 = [*(id *)(a1 + 32) viewControllerManager];
      [v12 selectNoteWithObjectID:v11 scrollState:0 startEditing:0 animated:0 ensurePresented:0];
    }
    unsigned __int8 v8 = v13;
  }
}

NSManagedObjectID *__cdecl sub_100105638(id a1, ICNote *a2)
{
  return (NSManagedObjectID *)[(ICNote *)a2 objectID];
}

void sub_100105F0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location, id a19, id a20)
{
  objc_destroyWeak(v22);
  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a19);
  objc_destroyWeak(&a20);
  _Unwind_Resume(a1);
}

void sub_100105F50(id *a1)
{
  id v2 = a1 + 5;
  id WeakRetained = objc_loadWeakRetained(a1 + 5);
  id v4 = [WeakRetained noteContainerViewMode];

  if (v4 == (id)1)
  {
    id v8 = objc_loadWeakRetained(v2);
    id v5 = objc_loadWeakRetained(a1 + 6);
    id v6 = objc_loadWeakRetained(a1 + 7);
    unsigned __int8 v7 = [v8 noteBrowseNavigationItemConfigurationNoteContainerActionMenu:v5 actionBarButtonItem:v6];
    [a1[4] setMenu:v7];
  }
}

void sub_100106204(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location, id a19, id a20)
{
  objc_destroyWeak(v22);
  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a19);
  objc_destroyWeak(&a20);
  _Unwind_Resume(a1);
}

void sub_100106248(id *a1)
{
  id v2 = a1 + 5;
  id WeakRetained = objc_loadWeakRetained(a1 + 5);
  id v4 = [WeakRetained noteContainerViewMode];

  if (v4 == (id)1)
  {
    id v8 = objc_loadWeakRetained(v2);
    id v5 = objc_loadWeakRetained(a1 + 6);
    id v6 = objc_loadWeakRetained(a1 + 7);
    unsigned __int8 v7 = [v8 noteBrowseNavigationItemConfigurationQueryActionMenu:v5 actionBarButtonItem:v6];
    [a1[4] setMenu:v7];
  }
}

void sub_1001064E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location, id a19, id a20)
{
  objc_destroyWeak(v22);
  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a19);
  objc_destroyWeak(&a20);
  _Unwind_Resume(a1);
}

void sub_100106524(id *a1)
{
  id v2 = a1 + 5;
  id WeakRetained = objc_loadWeakRetained(a1 + 5);
  id v4 = [WeakRetained noteContainerViewMode];

  if (v4 == (id)1)
  {
    id v8 = objc_loadWeakRetained(v2);
    id v5 = objc_loadWeakRetained(a1 + 6);
    id v6 = objc_loadWeakRetained(a1 + 7);
    unsigned __int8 v7 = [v8 noteBrowseNavigationItemConfigurationVirtualSmartFolderActionMenu:v5 actionBarButtonItem:v6];
    [a1[4] setMenu:v7];
  }
}

void sub_100106814(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_10010683C(id a1, ICSearchIndexableNote *a2)
{
  id v2 = a2;
  objc_opt_class();
  id v3 = ICDynamicCast();

  return v3;
}

void sub_100106898(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setEditing:0 animated:1];
}

void sub_100106A54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100106A78(uint64_t a1, int a2)
{
  if (a2)
  {
    id v4 = objc_loadWeakRetained((id *)(a1 + 40));
    id v3 = [v4 allNotes];
    [v4 deleteNotes:v3 sender:*(void *)(a1 + 32)];
  }
}

void sub_100106F28(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) workerContext];
  +[ICNote enumerateNotesInContext:v1 batchSize:10 visibleOnly:1 saveAfterBatch:1 usingBlock:&stru_10062A278];
}

void sub_100106F98(id a1, ICNote *a2, BOOL *a3)
{
  id v5 = a2;
  if ([(ICNote *)v5 isPasswordProtected])
  {
    [(ICNote *)v5 setWidgetSnippet:0];
  }
  else
  {
    id v3 = [(ICNote *)v5 identifier];
    id v4 = [v3 length];

    if (v4) {
      [(ICNote *)v5 regenerateTitle:1 snippet:1];
    }
  }
}

void sub_100107CC4(uint64_t a1, void *a2, unint64_t a3)
{
  id v5 = *(void **)(a1 + 32);
  id v6 = a2;
  if ((unint64_t)[v5 count] <= a3)
  {
    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v7 = [*(id *)(a1 + 32) objectAtIndexedSubscript:a3];
  }
  id v10 = (id)v7;
  [v6 setNote:v7];
  unsigned int v8 = [*(id *)(a1 + 40) isCompact];
  double v9 = 6.0;
  if (v8) {
    double v9 = 4.0;
  }
  [v6 setCornerRadius:v9];
}

id sub_100108D40(uint64_t a1)
{
  [*(id *)(a1 + 32) fixNotesWithNilFolderWithContext:*(void *)(a1 + 40)];
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);

  return _[v2 fixNotesWithPlaceholderFoldersWithContext:v3];
}

void sub_100109A48(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v5 = a3;
  if (v8 && !*(unsigned char *)(a1 + 40))
  {
    id v6 = [*(id *)(a1 + 32) notesToDelete];
    [v6 addObject:v8];
  }
  if (v5)
  {
    uint64_t v7 = [*(id *)(a1 + 32) createdLegacyNotes];
    [v7 addObject:v5];
  }
}

intptr_t sub_100109CD4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) operationQueue];
  [v2 waitUntilAllOperationsAreFinished];

  uint64_t v3 = *(NSObject **)(a1 + 40);

  return dispatch_semaphore_signal(v3);
}

void sub_100109DC0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) operationQueue];
  [v2 waitUntilAllOperationsAreFinished];

  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  _DWORD v3[2] = sub_100109E64;
  v3[3] = &unk_100625D18;
  void v3[4] = *(void *)(a1 + 32);
  char v4 = *(unsigned char *)(a1 + 40);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v3);
}

id sub_100109E64(uint64_t a1)
{
  return _[*(id *)(a1 + 32) finishAfterCopyingNotesCopyOnly:*(unsigned __int8 *)(a1 + 40)];
}

void sub_10010A920(uint64_t a1)
{
  uint64_t v30 = ICAttachmentUTTypeGallery;
  uint64_t v2 = +[NSPredicate predicateWithFormat:@"typeUTI == %@ AND             subAttachments.@count > 1 AND userTitle != nil AND             SUBQUERY(subAttachments, $sa, $sa.ocrSummary != nil).@count > 0", ICAttachmentUTTypeGallery];
  uint64_t v3 = +[NSSortDescriptor sortDescriptorWithKey:@"modificationDate" ascending:0];
  long long v48 = v3;
  uint64_t v4 = +[NSArray arrayWithObjects:&v48 count:1];

  uint64_t v31 = (void *)v4;
  id v32 = (void *)v2;
  id v5 = +[ICAttachment ic_objectIDsMatchingPredicate:v2 sortDescriptors:v4 context:*(void *)(a1 + 32)];
  id v6 = os_log_create("com.apple.notes", "LaunchTask");
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG)) {
    sub_1004DC25C(v5);
  }

  long long v43 = 0u;
  long long v44 = 0u;
  long long v41 = 0u;
  long long v42 = 0u;
  id obj = v5;
  id v7 = [obj countByEnumeratingWithState:&v41 objects:v47 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v42;
    do
    {
      id v10 = 0;
      do
      {
        if (*(void *)v42 != v9) {
          objc_enumerationMutation(obj);
        }
        uint64_t v11 = *(void *)(*((void *)&v41 + 1) + 8 * (void)v10);
        id v13 = [*(id *)(a1 + 32) objectWithID:v11];
        objc_opt_class();
        id v14 = [v13 attachmentModel];
        unsigned __int8 v15 = ICDynamicCast();

        v38[0] = _NSConcreteStackBlock;
        v38[1] = 3221225472;
        v38[2] = sub_10010ADBC;
        v38[3] = &unk_100627650;
        id v39 = v13;
        id v40 = *(id *)(a1 + 32);
        id v16 = v13;
        [v15 enumerateSubAttachmentsWithBlock:v38];

        id v10 = (char *)v10 + 1;
      }
      while (v8 != v10);
      id v8 = [obj countByEnumeratingWithState:&v41 objects:v47 count:16];
    }
    while (v8);
  }

  long long v17 = +[NSPredicate predicateWithFormat:@"SUBQUERY(attachments, $a, $a.typeUTI == %@ AND $a.userTitle == nil).@count > 0", v30];
  long long v18 = +[NSSortDescriptor sortDescriptorWithKey:@"modificationDate" ascending:0];
  long long v46 = v18;
  long long v19 = +[NSArray arrayWithObjects:&v46 count:1];

  double v20 = +[ICNote ic_objectIDsMatchingPredicate:v17 sortDescriptors:v19 context:*(void *)(a1 + 32)];
  id v21 = os_log_create("com.apple.notes", "LaunchTask");
  if (os_log_type_enabled(v21, OS_LOG_TYPE_DEBUG)) {
    sub_1004DC1E0(v20);
  }

  long long v36 = 0u;
  long long v37 = 0u;
  long long v34 = 0u;
  long long v35 = 0u;
  id v22 = v20;
  id v23 = [v22 countByEnumeratingWithState:&v34 objects:v45 count:16];
  if (v23)
  {
    id v24 = v23;
    uint64_t v25 = *(void *)v35;
    do
    {
      id v26 = 0;
      do
      {
        if (*(void *)v35 != v25) {
          objc_enumerationMutation(v22);
        }
        uint64_t v27 = *(void *)(*((void *)&v34 + 1) + 8 * (void)v26);
        uint64_t v29 = [*(id *)(a1 + 32) objectWithID:v27];
        if ([v29 regenerateTitle:1 snippet:1])
        {
          [v29 markShareDirtyIfNeededWithReason:@"Regenerated gallery note title"];
          [v29 updateChangeCountWithReason:@"Regenerated gallery note title"];
          [*(id *)(a1 + 32) ic_save];
        }
        [*(id *)(a1 + 32) ic_refreshObject:v29 mergeChanges:0];

        id v26 = (char *)v26 + 1;
      }
      while (v24 != v26);
      id v24 = [v22 countByEnumeratingWithState:&v34 objects:v45 count:16];
    }
    while (v24);
  }
}

void sub_10010ADBC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  id v7 = a2;
  uint64_t v8 = [*(id *)(a1 + 32) userTitle];
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    id v10 = [v7 ocrSummary];
    uint64_t v11 = [*(id *)(a1 + 32) userTitle];
    unsigned int v12 = [v10 containsString:v11];

    if (v12)
    {
      id v13 = os_log_create("com.apple.notes", "LaunchTask");
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG)) {
        sub_1004DC2D8((id *)(a1 + 32));
      }

      [*(id *)(a1 + 32) setUserTitle:0];
      [*(id *)(a1 + 40) ic_save];
      [*(id *)(a1 + 40) ic_refreshObject:*(void *)(a1 + 32) mergeChanges:0];
      *a5 = 1;
    }
  }
}

id sub_10010AFAC(uint64_t a1)
{
  return _[*(id *)(a1 + 32) fixTombstonesWithNilAccountWithContext:*(void *)(a1 + 40)];
}

void sub_10010C590(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  if (v1)
  {
    id v2 = [*(id *)(a1 + 32) activityType];
    (*(void (**)(uint64_t, uint64_t, id))(v1 + 16))(v1, 1, v2);
  }
}

void sub_10010CA0C(uint64_t a1)
{
  objc_opt_class();
  id v2 = [*(id *)(a1 + 32) noteContainer];
  uint64_t v3 = ICDynamicCast();

  if (v3)
  {
    uint64_t v4 = [v3 managedObjectContext];
    uint64_t v8 = _NSConcreteStackBlock;
    uint64_t v9 = 3221225472;
    id v10 = sub_10010CB3C;
    uint64_t v11 = &unk_10062A2F0;
    id v12 = v3;
    int v13 = *(_DWORD *)(a1 + 48);
    [v4 performBlockAndWait:&v8];
  }
  else
  {
    id v5 = [*(id *)(a1 + 32) virtualSmartFolder];

    if (v5)
    {
      uint64_t v6 = *(unsigned int *)(a1 + 48);
      id v7 = [*(id *)(a1 + 32) virtualSmartFolder];
      [v7 setDateHeadersType:v6];
    }
  }
  [*(id *)(a1 + 32) performActivityWithCompletion:*(void *)(a1 + 40) v8, v9, v10, v11];
}

void sub_10010CB3C(uint64_t a1)
{
  [*(id *)(a1 + 32) applyDateHeadersType:*(unsigned int *)(a1 + 40)];
  id v2 = [*(id *)(a1 + 32) managedObjectContext];
  [v2 ic_save];
}

void sub_10010D280(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) alertTextField];
  [v2 selectAll:0];

  [*(id *)(a1 + 40) activityDidFinish:1];
  uint64_t v3 = *(void *)(a1 + 48);
  if (v3)
  {
    id v4 = [*(id *)(a1 + 40) activityType];
    (*(void (**)(uint64_t, uint64_t, id))(v3 + 16))(v3, 1, v4);
  }
}

void sub_10010D524(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6 = a2;
  id v7 = a4;
  if (v6)
  {
    uint64_t v8 = +[ICAccount accountUtilities];
    uint64_t v9 = [*(id *)(a1 + 40) accountId];
    id v10 = [v8 temporaryDirectoryURLForAccountIdentifier:v9];

    if (!v10) {
      +[ICAssert handleFailedAssertWithCondition:functionName:simulateCrash:showAlert:format:](ICAssert, "handleFailedAssertWithCondition:functionName:simulateCrash:showAlert:format:", "((tempDirectoryURL) != nil)", "-[ICSharingExtensionItemExtractor extractMediaFileURLWithProvider:contentType:completion:]_block_invoke_2", 1, 0, @"Expected non-nil value for '%s'", "tempDirectoryURL");
    }
    uint64_t v11 = +[NSUUID UUID];
    uint64_t v12 = [v11 UUIDString];
    int v13 = [v10 URLByAppendingPathComponent:v12 isDirectory:1];

    id v14 = +[NSFileManager defaultManager];
    [v14 createDirectoryAtURL:v13 withIntermediateDirectories:1 attributes:0 error:0];

    unsigned __int8 v15 = [v6 lastPathComponent];
    id v16 = [v13 URLByAppendingPathComponent:v15];

    long long v17 = +[NSFileManager defaultManager];
    LOBYTE(v12) = [v17 linkItemAtURL:v6 toURL:v16 error:0];

    if ((v12 & 1) == 0)
    {
      long long v18 = +[NSFileManager defaultManager];
      v25[0] = 0;
      unsigned __int8 v19 = [v18 copyItemAtURL:v6 toURL:v16 error:v25];
      id v20 = v25[0];

      if ((v19 & 1) == 0) {
        +[ICAssert handleFailedAssertWithCondition:functionName:simulateCrash:showAlert:format:](ICAssert, "handleFailedAssertWithCondition:functionName:simulateCrash:showAlert:format:", "[[NSFileManager defaultManager] copyItemAtURL:url toURL:tempFileURL error:&copyError]", "-[ICSharingExtensionItemExtractor extractMediaFileURLWithProvider:contentType:completion:]_block_invoke_2", 1, 0, @"Extracting media file: Failed to create temporary file copy: %@", v20);
      }
    }
    id v21 = [objc_alloc((Class)ICAddAttachmentsManagerAttachmentInfo) initWithFileURL:v16];
    [v21 setUsesTemporaryFile:1];
    id v24 = *(id *)(a1 + 48);
    id v22 = v21;
    performBlockOnMainThread();
  }
  else
  {
    id v23 = os_log_create("com.apple.notes", "SharingExtension");
    if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
      sub_1004DC4A0(a1, (uint64_t)v7, v23);
    }

    v25[1] = _NSConcreteStackBlock;
    void v25[2] = (id)3221225472;
    v25[3] = sub_10010D86C;
    v25[4] = &unk_100625988;
    id v26 = *(id *)(a1 + 48);
    performBlockOnMainThread();
    int v13 = v26;
  }
}

uint64_t sub_10010D86C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_10010D880(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_10010D9D4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v8 = a3;
  id v9 = *(id *)(a1 + 32);
  id v6 = v8;
  id v7 = v5;
  performBlockOnMainThreadAndWait();
}

void sub_10010DAA4(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    id v3 = [objc_alloc((Class)ICAddAttachmentsManagerAttachmentInfo) initWithFileURL:*(void *)(a1 + 32)];
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
  else
  {
    id v2 = os_log_create("com.apple.notes", "SharingExtension");
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
      sub_1004DC52C(a1, v2);
    }

    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
}

void sub_10010DC90(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v8 = a3;
  id v11 = a1[7];
  id v9 = a1[5];
  id v10 = a1[6];
  id v6 = v5;
  id v7 = v8;
  performBlockOnMainThreadAndWait();
}

void sub_10010DD94(uint64_t a1)
{
  id v2 = (uint64_t *)(a1 + 32);
  if (*(void *)(a1 + 32))
  {
    id v3 = os_log_create("com.apple.notes", "SharingExtension");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      sub_1004DC6CC(v2, v3);
    }

LABEL_5:
    (*(void (**)(void))(*(void *)(a1 + 72) + 16))();
    return;
  }
  if (!*(void *)(a1 + 40))
  {
    id v7 = os_log_create("com.apple.notes", "SharingExtension");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1004DC5EC(v7);
    }

    goto LABEL_5;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 && [*(id *)(a1 + 40) isFileURL])
  {
    id v22 = [objc_alloc((Class)ICAddAttachmentsManagerAttachmentInfo) initWithFileURL:*(void *)(a1 + 40)];
    (*(void (**)(void))(*(void *)(a1 + 72) + 16))();
LABEL_12:

    return;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v4 = *(void **)(a1 + 48);
    uint64_t v5 = *(unsigned __int8 *)(a1 + 80);
    id v6 = *(id *)(a1 + 40);
    id v22 = [v4 getAttachmentInfoWithImage:v6 useTempFile:v5];
    (*(void (**)(void))(*(void *)(a1 + 72) + 16))();

    goto LABEL_12;
  }
  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  id v8 = [*(id *)(a1 + 56) registeredTypeIdentifiers];
  id v9 = [v8 countByEnumeratingWithState:&v23 objects:v27 count:16];
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = *(void *)v24;
LABEL_20:
    uint64_t v12 = 0;
    while (1)
    {
      if (*(void *)v24 != v11) {
        objc_enumerationMutation(v8);
      }
      int v13 = *(void **)(*((void *)&v23 + 1) + 8 * v12);
      id v14 = +[ICUTType typeWithIdentifier:v13];
      unsigned __int8 v15 = +[ICUTType typeWithIdentifier:*(void *)(a1 + 64)];
      unsigned __int8 v16 = [v14 conformsToType:v15];

      if (v16) {
        break;
      }
      if (v10 == (id)++v12)
      {
        id v10 = [v8 countByEnumeratingWithState:&v23 objects:v27 count:16];
        if (v10) {
          goto LABEL_20;
        }
        goto LABEL_26;
      }
    }
    long long v18 = +[ICUTType typeWithIdentifier:v13];
    unsigned __int8 v19 = [v18 preferredFilenameExtension];

    id v17 = v13;
    if (!v19) {
      goto LABEL_29;
    }
    id v20 = objc_opt_new();
    [v20 setMediaUTI:v17];
    [v20 setMediaData:*(void *)(a1 + 40)];
    [v20 setMediaFilenameExtension:v19];
    (*(void (**)(void))(*(void *)(a1 + 72) + 16))();
  }
  else
  {
LABEL_26:

    id v17 = 0;
LABEL_29:
    id v21 = os_log_create("com.apple.notes", "SharingExtension");
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
      sub_1004DC630((id *)(a1 + 56), v21);
    }

    (*(void (**)(void))(*(void *)(a1 + 72) + 16))();
  }
}

void sub_10010EA44(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained updateBarButtonItemsAnimated:1];
  [WeakRetained updateBarsVisibilityAnimated:1];
}

id sub_10010F040(uint64_t a1)
{
  return [*(id *)(a1 + 32) didDismissDeleteAlertController];
}

id sub_10010F914(uint64_t a1, void *a2)
{
  id v3 = [a2 contentID];
  id v4 = [*(id *)(a1 + 32) contentID];
  id v5 = [v3 isEqualToString:v4];

  return v5;
}

BOOL sub_1001103EC(id a1, id a2, unint64_t a3, BOOL *a4)
{
  id v4 = [a2 presentation:a3, a4];
  char v5 = [v4 sourceIsManaged] ^ 1;

  return v5;
}

id sub_1001108BC(id a1, id a2)
{
  return [a2 contentID];
}

id sub_1001108C4(id a1, id a2)
{
  return [a2 contentID];
}

id sub_1001110F8(uint64_t a1)
{
  [*(id *)(a1 + 32) refreshAttachmentPresentations];
  id v2 = [*(id *)(a1 + 32) contentLayer];
  uint64_t v3 = *(unsigned __int8 *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 40);
  char v5 = [*(id *)(a1 + 32) note];
  id v6 = [v5 attachments];
  id v7 = [v6 allObjects];
  [v2 setContent:v4 isPlainText:v3 attachments:v7];

  [*(id *)(a1 + 32) prepareForPresentation];
  [*(id *)(a1 + 32) setDelayingSetContent:0];
  id v8 = *(void **)(a1 + 32);

  return [v8 updateBarButtonItemsAnimated:0];
}

void sub_100111E04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100111E2C(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateForceLightContentIfNecessary];
}

id sub_100111E34(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = +[UIApplication sharedApplication];
  id v3 = [v2 applicationState];

  if (v3)
  {
    uint64_t v4 = 0;
  }
  else
  {
    char v5 = [WeakRetained note];
    uint64_t v4 = [v5 store];
  }

  return v4;
}

id sub_1001124DC(uint64_t a1, void *a2)
{
  id result = [a2 isCancelled];
  if (result)
  {
    uint64_t v4 = *(void **)(a1 + 32);
    return [v4 updateForceLightContentIfNecessary];
  }
  return result;
}

void sub_100113808(uint64_t a1)
{
  id v1 = *(id *)(a1 + 40);
  performBlockOnMainThread();
}

void sub_1001138B0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) contentLayer];
  [v2 resignFirstResponder];

  if (+[UIDevice ic_isVision]) {
    uint64_t v3 = -2;
  }
  else {
    uint64_t v3 = 7;
  }
  [*(id *)(a1 + 40) setModalPresentationStyle:v3];
  [*(id *)(a1 + 32) presentViewController:*(void *)(a1 + 40) animated:1 completion:0];
  id v5 = [*(id *)(a1 + 40) popoverPresentationController];
  [v5 setDelegate:*(void *)(a1 + 32)];
  [v5 setPermittedArrowDirections:15];
  uint64_t v4 = [*(id *)(a1 + 32) contentLayer];
  [v5 setSourceView:v4];

  [v5 setSourceRect:*(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72)];
}

void sub_100113A40(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v5 = *(id *)(a1 + 40);
  id v4 = v3;
  performBlockOnMainThread();
}

uint64_t sub_100113B10(uint64_t a1)
{
  CGFloat MidX = *(double *)(a1 + 56);
  CGFloat MidY = *(double *)(a1 + 64);
  double v4 = *(double *)(a1 + 72);
  double v5 = *(double *)(a1 + 80);
  v25.origin.x = CGRectZero.origin.x;
  v25.origin.y = CGRectZero.origin.y;
  v25.size.width = CGRectZero.size.width;
  v25.size.height = CGRectZero.size.height;
  v22.origin.x = MidX;
  v22.origin.y = MidY;
  v22.size.width = v4;
  v22.size.height = v5;
  if (CGRectEqualToRect(v22, v25))
  {
    id v10 = [*(id *)(a1 + 32) contentLayer];
    [v10 frame];
    CGFloat v12 = v11;
    CGFloat v14 = v13;
    CGFloat v16 = v15;
    CGFloat v18 = v17;

    v23.origin.x = v12;
    v23.origin.y = v14;
    v23.size.width = v16;
    v23.size.height = v18;
    CGFloat MidX = CGRectGetMidX(v23);
    v24.origin.x = v12;
    v24.origin.y = v14;
    v24.size.width = v16;
    v24.size.height = v18;
    CGFloat MidY = CGRectGetMidY(v24);
  }
  uint64_t result = *(void *)(a1 + 48);
  if (result)
  {
    if (v5 == 0.0) {
      v9.n128_f64[0] = 1.0;
    }
    else {
      v9.n128_f64[0] = v5;
    }
    if (v4 == 0.0) {
      v8.n128_f64[0] = 1.0;
    }
    else {
      v8.n128_f64[0] = v4;
    }
    id v20 = *(uint64_t (**)(__n128, __n128, __n128, __n128))(result + 16);
    v6.n128_f64[0] = MidX;
    v7.n128_f64[0] = MidY;
    return v20(v6, v7, v8, v9);
  }
  return result;
}

uint64_t sub_100113CDC(uint64_t a1)
{
  [*(id *)(a1 + 32) didDismissPickerController];
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    id v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

void sub_100113F10(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  id v4 = [*(id *)(a1 + 56) filename];
  [v1 insertAttachmentWithData:v2 mimeType:v3 preferredFilename:v4];
}

id sub_10011427C(uint64_t a1)
{
  return [*(id *)(a1 + 32) cleanupAfterBarSourcedPopoverPresentation];
}

id sub_100114284(uint64_t a1)
{
  return [*(id *)(a1 + 32) didDismissActivityController];
}

void sub_1001149F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100114A30(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v3 = [WeakRetained contentLayer];
    id v4 = [v3 webArchive];
    double v5 = +[ICAirDropDocument legacyNoteAirDropDocumentWithWebArchive:v4];
  }
  else
  {
    double v5 = 0;
  }

  return v5;
}

void sub_100114EF4(uint64_t a1, void *a2, int a3, uint64_t a4, uint64_t a5)
{
  id v10 = a2;
  [*(id *)(a1 + 32) cleanupAfterBarSourcedPopoverPresentation];
  if (!a5 && a3 && [v10 length])
  {
    __n128 v8 = [*(id *)(a1 + 32) eventReporter];
    __n128 v9 = [*(id *)(a1 + 32) note];
    [v8 submitNoteSharrowEventForHTMLNote:v9 activityType:v10 contextPath:0];
  }
}

void sub_1001154E0(uint64_t a1, int a2)
{
  if (a2)
  {
    [*(id *)(a1 + 32) animateDeleteTransitionWithCompletion:0];
    id v3 = [*(id *)(a1 + 32) delegate];
    [v3 noteDisplayController:*(void *)(a1 + 32) noteWasDeleted:*(void *)(a1 + 40) actionOrigin:0];
  }
}

void sub_1001157E4(uint64_t a1)
{
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  void v11[2] = sub_1001158FC;
  void v11[3] = &unk_100625F50;
  char v14 = *(unsigned char *)(a1 + 56);
  id v2 = *(id *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  id v12 = v2;
  uint64_t v13 = v3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100115964;
  v7[3] = &unk_100629248;
  id v4 = *(id *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  __n128 v6 = *(void **)(a1 + 48);
  id v8 = v4;
  uint64_t v9 = v5;
  id v10 = v6;
  +[UIView animateWithDuration:v11 animations:v7 completion:0.35];
}

void sub_1001158FC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 48)) {
    [*(id *)(a1 + 32) setAlpha:0.0];
  }
  id v2 = [*(id *)(a1 + 40) backgroundView];
  [v2 setContentViewVisible:1];
}

uint64_t sub_100115964(uint64_t a1)
{
  [*(id *)(a1 + 32) removeFromSuperview];
  [*(id *)(a1 + 40) setPerformingDeleteAnimation:0];
  uint64_t result = *(void *)(a1 + 48);
  if (result)
  {
    uint64_t v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

uint64_t sub_1001159C4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100116728(id a1, UIAlertAction *a2)
{
  +[NSURL URLWithString:@"prefs:root=APPLE_ACCOUNT&path=ICLOUD_SERVICE"];
  id v6 = (id)objc_claimAutoreleasedReturnValue();
  id v2 = +[LSApplicationWorkspace defaultWorkspace];
  unsigned __int8 v3 = [v2 openSensitiveURL:v6 withOptions:0];

  if ((v3 & 1) == 0)
  {
    id v4 = +[UIApplication sharedApplication];
    uint64_t v5 = +[NSURL URLWithString:UIApplicationOpenSettingsURLString];
    [v4 openURL:v5 options:&__NSDictionary0__struct completionHandler:0];
  }
}

void sub_100117888(uint64_t a1)
{
  [*(id *)(a1 + 32) setTransitioningToSize:0];
  if ([*(id *)(a1 + 32) isPickingAttachment])
  {
    id v2 = [*(id *)(a1 + 32) contentLayer];
    [v2 scrollSelectionToVisible:1];
  }
}

void sub_100117A00(uint64_t a1)
{
  [*(id *)(a1 + 32) setChangingTraitCollection:0];
  if (*(unsigned char *)(a1 + 40))
  {
    id v3 = [*(id *)(a1 + 32) contentLayer];
    id v2 = [v3 noteHTMLEditorView];
    [v2 startEditing];
  }
}

id sub_100118048(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v5 = [v3 traitCollectionByModifyingTraits:&stru_10062A5A0];

    id v4 = (void *)v5;
  }
  id v6 = [*(id *)(a1 + 32) resolvedColorWithTraitCollection:v4];
  __n128 v7 = [v4 ic_appearanceInfo];
  [v7 navigationBarAlpha];
  id v8 = [v6 colorWithAlphaComponent:];

  return v8;
}

void sub_1001180F8(id a1, UIMutableTraits *a2)
{
}

id sub_10011853C(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) isEditing];
  if (result)
  {
    id result = [*(id *)(a1 + 32) noteCanBeSaved];
    if (result)
    {
      id v3 = *(void **)(a1 + 32);
      return [v3 setEditing:0 animated:1];
    }
  }
  return result;
}

void sub_100118614(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

uint64_t sub_1001196C4()
{
  return performBlockOnMainThread();
}

id sub_100119734(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateFromConfiguration];
}

id sub_100119E08(uint64_t a1)
{
  [*(id *)(a1 + 32) updateViewStateProperties];
  id v2 = *(void **)(a1 + 32);

  return [v2 synchronouslyLoadConfigurationDataAndUpdate];
}

id sub_10011B1B8(uint64_t a1)
{
  if ([*(id *)(a1 + 32) prefersLightBackground]) {
    uint64_t v2 = 1;
  }
  else {
    uint64_t v2 = 2;
  }
  [*(id *)(a1 + 32) setPreferredBackgroundType:v2];
  [*(id *)(a1 + 32) updateUserSpecificChangeCountWithReason:@"Changed preferred background type"];
  [*(id *)(a1 + 32) updateChangeCountWithReason:@"Changed preferred background type"];
  id v3 = *(void **)(a1 + 40);

  return [v3 ic_save];
}

void sub_10011B588(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10011B5B0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = [WeakRetained note];
  [v1 changePinStatusIfPossible];

  uint64_t v2 = [WeakRetained note];
  id v3 = [v2 managedObjectContext];
  [v3 ic_save];
}

void sub_10011BCBC(uint64_t a1)
{
  uint64_t v2 = os_log_create("com.apple.notes", "UI");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    sub_1004DC9A4(v2, v3, v4, v5, v6, v7, v8, v9);
  }

  id v10 = [*(id *)(a1 + 32) updateMakingProgressDelayer];
  [v10 requestFire];
}

id sub_10011BDFC(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _performProgressUpdate];
}

void sub_10011BF74(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10011BF98(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  unsigned __int8 v5 = [(id)objc_opt_class() isMigratingICloudAccount:v3];

  objc_copyWeak(&v6, (id *)(a1 + 40));
  unsigned __int8 v7 = v5;
  performBlockOnMainThread();
  objc_destroyWeak(&v6);
}

void sub_10011C070(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10011C084(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = +[ICReachability sharedReachabilityForInternetConnection];
    id v4 = [v3 currentReachabilityStatus];
    BOOL v5 = v4 != 0;

    id v6 = +[ICLegacyImportManager sharedLegacyImportManager];
    unsigned int v7 = [v6 hasPendingOperations];

    uint64_t v8 = +[ICCloudContext sharedContext];
    unsigned int v9 = [v8 hasPendingOperations];

    unsigned int v10 = [(id)objc_opt_class() isMigratingLocalAccount];
    if ((v10 & 1) == 0)
    {
      int v11 = *(unsigned char *)(a1 + 48) ? 1 : v9;
      if (v11 != 1) {
        BOOL v5 = 0;
      }
    }
    id v12 = os_log_create("com.apple.notes", "UI");
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG))
    {
      int v13 = *(unsigned __int8 *)(a1 + 48);
      v14[0] = 67110144;
      v14[1] = v7;
      __int16 v15 = 1024;
      int v16 = v13;
      __int16 v17 = 1024;
      unsigned int v18 = v10;
      __int16 v19 = 1024;
      unsigned int v20 = v9;
      __int16 v21 = 1024;
      BOOL v22 = v4 != 0;
      _os_log_debug_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "Updating progress spinner. importing=%d migratingICloud=%d migratingLocal=%d syncing=%d reachable=%d", (uint8_t *)v14, 0x20u);
    }

    [WeakRetained setMakingProgress:v5 | v7];
    [WeakRetained setIsPerformingProgressUpdate:0];
    if ([WeakRetained needsPerformingProgressUpdateAfterCurrentIsComplete])
    {
      [WeakRetained setNeedsPerformingProgressUpdateAfterCurrentIsComplete:0];
      [WeakRetained updateMakingProgress];
    }
  }
}

void sub_10011C408(uint64_t a1)
{
  uint64_t v2 = +[ICHashtag hashtagWithStandardizedContent:*(void *)(a1 + 32) onlyVisible:0 account:*(void *)(a1 + 40)];
  id v3 = v2;
  if (*(unsigned char *)(a1 + 56)) {
    [v2 markForDeletion];
  }
  else {
    [v2 unmarkForDeletion];
  }
  [*(id *)(a1 + 48) ic_save];
}

void sub_10011C4D0(id a1)
{
  id v1 = objc_alloc_init(ICLegacyImportManager);
  uint64_t v2 = (void *)qword_1006AA318;
  qword_1006AA318 = (uint64_t)v1;
}

void sub_10011C89C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24)
{
  objc_destroyWeak(v25);
  _Block_object_dispose(&a24, 8);
  objc_destroyWeak(v24);
  objc_destroyWeak((id *)(v26 - 136));
  _Unwind_Resume(a1);
}

void sub_10011C8F4(uint64_t a1)
{
  uint64_t v2 = os_log_create("com.apple.notes", "Migration");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v6 = 138412290;
    uint64_t v7 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Took too long for import background task %@", (uint8_t *)&v6, 0xCu);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained cancel];

  BOOL v5 = +[UIApplication sharedApplication];
  [v5 endBackgroundTask:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)];

  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = UIBackgroundTaskInvalid;
}

void sub_10011C9FC(uint64_t a1)
{
  uint64_t v2 = os_log_create("com.apple.notes", "Migration");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    int v6 = 138412290;
    id v7 = WeakRetained;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Completed import operation: %@", (uint8_t *)&v6, 0xCu);
  }
  id v4 = +[UIApplication sharedApplication];
  [v4 endBackgroundTask:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)];

  BOOL v5 = +[NSNotificationCenter defaultCenter];
  [v5 postNotificationName:@"ICLegacyImportManagerOperationsDidChangeNotification" object:*(void *)(a1 + 32)];
}

void sub_10011D8FC(uint64_t a1)
{
  uint64_t v2 = +[NSPredicate predicateWithFormat:@"typeUTI == %@", AVFileTypeAppleM4A];
  uint64_t v3 = [*(id *)(a1 + 32) workerContext];
  uint64_t v31 = (void *)v2;
  id v4 = +[ICAttachment attachmentsMatchingPredicate:v2 context:v3];

  long long v44 = 0u;
  long long v45 = 0u;
  long long v42 = 0u;
  long long v43 = 0u;
  id v5 = v4;
  id v6 = [v5 countByEnumeratingWithState:&v42 objects:v47 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v43;
    uint64_t v32 = *(void *)v43;
    id v33 = v5;
    do
    {
      unsigned int v9 = 0;
      id v34 = v7;
      do
      {
        if (*(void *)v43 != v8) {
          objc_enumerationMutation(v5);
        }
        unsigned int v10 = *(void **)(*((void *)&v42 + 1) + 8 * (void)v9);
        int v11 = [v10 audioModel];
        id v12 = v11;
        if (v11)
        {
          int v13 = [v11 audioDocument];
          char v14 = v13;
          if (v13)
          {
            id v15 = [v13 transcriptVersion];
            [v15 floatValue];
            if (v16 >= 1.0) {
              goto LABEL_22;
            }
            __int16 v17 = [v14 transcriptVersion];

            if (v17)
            {
              id v15 = objc_alloc_init((Class)NSMutableDictionary);
              unsigned int v18 = [v10 subAttachments];
              __int16 v19 = [v18 allObjects];

              if (v19)
              {
                long long v36 = v10;
                long long v37 = v14;
                long long v40 = 0u;
                long long v41 = 0u;
                long long v38 = 0u;
                long long v39 = 0u;
                long long v35 = v19;
                id v20 = v19;
                id v21 = [v20 countByEnumeratingWithState:&v38 objects:v46 count:16];
                if (v21)
                {
                  id v22 = v21;
                  uint64_t v23 = *(void *)v39;
                  do
                  {
                    for (unint64_t i = 0; i != v22; unint64_t i = (char *)i + 1)
                    {
                      if (*(void *)v39 != v23) {
                        objc_enumerationMutation(v20);
                      }
                      CGRect v25 = *(void **)(*((void *)&v38 + 1) + 8 * i);
                      uint64_t v26 = [v25 media];
                      uint64_t v27 = [v26 mediaURL];

                      if (v27)
                      {
                        long long v28 = [v25 objectID];
                        [v15 setObject:v27 forKeyedSubscript:v28];
                      }
                    }
                    id v22 = [v20 countByEnumeratingWithState:&v38 objects:v46 count:16];
                  }
                  while (v22);
                }

                uint64_t v8 = v32;
                id v5 = v33;
                id v7 = v34;
                __int16 v19 = v35;
                unsigned int v10 = v36;
                char v14 = v37;
              }
              uint64_t v29 = +[ICBackgroundTranscriptionHelper sharedInstance];
              uint64_t v30 = [v10 objectID];
              [v29 addRetranscriptionTaskToQueue:v15 attachmentIdentifier:v30];

LABEL_22:
            }
          }
        }
        unsigned int v9 = (char *)v9 + 1;
      }
      while (v9 != v7);
      id v7 = [v5 countByEnumeratingWithState:&v42 objects:v47 count:16];
    }
    while (v7);
  }
}

void sub_10011E274(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47)
{
}

uint64_t sub_10011E2B8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10011E2C8(uint64_t a1)
{
}

void sub_10011E2D0(uint64_t a1)
{
  id v5 = [*(id *)(a1 + 32) destinationFolder];
  uint64_t v2 = [v5 identifier];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_10011E338(uint64_t a1)
{
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v3 = a1 + 40;
  id v5 = (id *)(v3 - 8);
  uint64_t v6 = [*(id *)(v3 - 8) ensureLegacyNoteIsValid:*(void *)(*(void *)(v4 + 8) + 40)];
  uint64_t v7 = *(void *)(*(void *)v3 + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;

  uint64_t v9 = *(void *)(*(void *)(*(void *)v3 + 8) + 40);
  unsigned int v10 = os_log_create("com.apple.notes", "Migration");
  int v11 = v10;
  if (!v9)
  {
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      id v22 = *v5;
      uint64_t v23 = [*(id *)(*(void *)(*(void *)v3 + 8) + 40) identifier];
      *(_DWORD *)uint8_t buf = 138412546;
      id v26 = v22;
      __int16 v27 = 2112;
      long long v28 = v23;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "%@ found deleted legacy note: %@", buf, 0x16u);
    }
    int v13 = v11;
    goto LABEL_12;
  }
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG)) {
    sub_1004DCB84((uint64_t *)(v3 - 8), v3, v11);
  }

  id v12 = [*v5 destinationFolder];
  int v13 = +[ICNote newEmptyNoteInFolder:v12];

  uint64_t v14 = *(void *)(*(void *)(*(void *)v3 + 8) + 40);
  id v15 = objc_alloc_init((Class)ICTextController);
  float v16 = +[ICAttachmentPreviewGenerator sharedGenerator];
  +[ICLegacyNoteUtilities copyValuesFromLegacyNote:v14 toNote:v13 styler:v15 attachmentPreviewGenerator:v16];

  [v13 updateChangeCountWithReason:@"Imported HTML note"];
  if ([*v5 deleteLegacyNotesAfterImport])
  {
    __int16 v17 = +[NSNotificationCenter defaultCenter];
    [v17 postNotificationName:@"ICImportOperationWillDeleteNoteNotification" object:*(void *)(*(void *)(*(void *)v3 + 8) + 40)];

    [*(id *)(*(void *)(*(void *)v3 + 8) + 40) markForDeletion];
    unsigned int v18 = +[NotesApp sharedNotesApp];
    __int16 v19 = [v18 noteContext];
    id v24 = 0;
    unsigned __int8 v20 = [v19 save:&v24];
    int v11 = v24;

    if ((v20 & 1) == 0)
    {
      id v21 = os_log_create("com.apple.notes", "Migration");
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
        sub_1004DCB0C((uint64_t)v11, v21);
      }
    }
LABEL_12:
  }
}

void sub_10011E618(uint64_t a1)
{
  uint64_t v2 = +[NotesApp sharedNotesApp];
  uint64_t v3 = [v2 noteContext];
  uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 8);
  id obj = *(id *)(v4 + 40);
  [v3 save:&obj];
  objc_storeStrong((id *)(v4 + 40), obj);
}

id sub_10011E694(uint64_t a1)
{
  return [*(id *)(a1 + 32) save];
}

void sub_10011E858(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) destinationFolder];
  unsigned int v3 = [v2 isDeleted];

  if (v3)
  {
    uint64_t v4 = os_log_create("com.apple.notes", "Migration");
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      int v10 = 138412290;
      uint64_t v11 = v5;
      uint64_t v6 = "Cancelling import operation because folder was deleted: %@";
LABEL_7:
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, v6, (uint8_t *)&v10, 0xCu);
    }
  }
  else
  {
    uint64_t v7 = [*(id *)(a1 + 32) destinationFolder];
    unsigned int v8 = [v7 markedForDeletion];

    if (!v8) {
      return;
    }
    uint64_t v4 = os_log_create("com.apple.notes", "Migration");
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      int v10 = 138412290;
      uint64_t v11 = v9;
      uint64_t v6 = "Cancelling import operation because folder was marked for deletion: %@";
      goto LABEL_7;
    }
  }

  [*(id *)(a1 + 32) cancel];
}

void sub_10011EADC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10011EAF4(uint64_t a1)
{
  id v6 = [*(id *)(a1 + 32) legacyManagedObjectContext];
  uint64_t v2 = [*(id *)(a1 + 40) objectID];
  uint64_t v3 = [v6 objectWithID:v2];
  uint64_t v4 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

void sub_10011EC60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10011EC78(uint64_t a1)
{
  id v6 = +[NotesApp sharedNotesApp];
  uint64_t v2 = [v6 noteContext];
  uint64_t v3 = [v2 managedObjectContext];
  uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

void sub_10011EE5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10011EE74(uint64_t a1)
{
  id v5 = [*(id *)(a1 + 32) destinationFolder];
  uint64_t v2 = [v5 identifier];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_10011F4F4(id a1, UIMutableTraits *a2)
{
}

void sub_10011F908(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = [*(id *)(a1 + 40) accountsFetchedResultsController];

  if (v2 != v3)
  {
    uint64_t v4 = *(void **)(a1 + 32);
    id v5 = [*(id *)(a1 + 40) storesFetchedResultsController];

    if (v4 != v5 || (unint64_t)(*(void *)(a1 + 48) - 1) > 1) {
      return;
    }
    goto LABEL_9;
  }
  unint64_t v6 = *(void *)(a1 + 48);
  BOOL v7 = v6 > 4;
  uint64_t v8 = (1 << v6) & 0x16;
  if (!v7 && v8 != 0)
  {
LABEL_9:
    int v10 = *(void **)(a1 + 40);
    [v10 setAccountsListNeedsUpdate:1];
  }
}

void sub_10011FA50(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = [*(id *)(a1 + 40) accountsFetchedResultsController];
  if (v2 == (void *)v3)
  {
  }
  else
  {
    uint64_t v4 = (void *)v3;
    id v5 = *(void **)(a1 + 32);
    unint64_t v6 = [*(id *)(a1 + 40) storesFetchedResultsController];

    if (v5 != v6) {
      return;
    }
  }
  if ([*(id *)(a1 + 40) accountsListNeedsUpdate])
  {
    [*(id *)(a1 + 40) setAccountsListNeedsUpdate:0];
    id v7 = +[ICAppDelegate sharedInstance];
    [v7 legacyNotesChanged];
  }
}

void sub_10011FEBC(id a1)
{
  id v1 = +[ICNoteContext sharedContext];
  id v2 = [v1 workerManagedObjectContext];

  +[ICMigrationUtilities updateAllLegacyAccountMigrationStatesInContext:v2];
}

void sub_100120DC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100120DE4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = [WeakRetained closeHandler];

  if (v1)
  {
    id v2 = [WeakRetained closeHandler];
    v2[2]();
  }
}

void sub_1001210A8(id a1, UIAction *a2)
{
}

id sub_100123168(uint64_t a1)
{
  [*(id *)(a1 + 32) contentSizeCategoryDidChange];
  [*(id *)(a1 + 32) updateHeaderViewMargins];
  id v2 = *(void **)(a1 + 32);

  return _[v2 updateImagesAndMoviesScrollViewContentInset];
}

id sub_100123A7C(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = (__int16)[a2 integerValue];

  return [v2 titleForAttachmentSection:v3];
}

uint64_t sub_100123C34(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1);
  }
  return result;
}

void sub_100124C38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_100124C68(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  unint64_t v6 = [v5 name];
  unsigned int v7 = [v6 intValue];

  if (v7 == 7)
  {
    long long v19 = 0u;
    long long v20 = 0u;
    long long v17 = 0u;
    long long v18 = 0u;
    uint64_t v8 = [v5 objects];
    id v9 = [v8 countByEnumeratingWithState:&v17 objects:v21 count:16];
    if (v9)
    {
      id v10 = v9;
      uint64_t v11 = *(void *)v18;
      do
      {
        for (unint64_t i = 0; i != v10; unint64_t i = (char *)i + 1)
        {
          if (*(void *)v18 != v11) {
            objc_enumerationMutation(v8);
          }
          uint64_t v13 = *(void **)(*((void *)&v17 + 1) + 8 * i);
          if ([v13 attachmentType] == 15) {
            [*(id *)(a1 + 32) addObject:v13];
          }
        }
        id v10 = [v8 countByEnumeratingWithState:&v17 objects:v21 count:16];
      }
      while (v10);
    }

    uint64_t v14 = *(void *)(a1 + 40);
    goto LABEL_14;
  }
  id v15 = [v5 name];
  unsigned int v16 = [v15 intValue];

  if (v16 == 6)
  {
    uint64_t v14 = *(void *)(a1 + 48);
LABEL_14:
    *(void *)(*(void *)(v14 + 8) + 24) = a3;
  }
}

int64_t sub_100124DEC(id a1, id a2, id a3)
{
  id v3 = a3;
  uint64_t v4 = ICCheckedProtocolCast();
  id v5 = ICCheckedProtocolCast();

  unint64_t v6 = +[ICAttachment attachmentSectionSortOrder];
  unsigned int v7 = [v4 name];
  uint64_t v8 = +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", [v7 intValue]);
  id v9 = [v6 indexOfObject:v8];

  id v10 = +[ICAttachment attachmentSectionSortOrder];
  uint64_t v11 = [v5 name];
  uint64_t v12 = +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", [v11 intValue]);
  id v13 = [v10 indexOfObject:v12];

  if (v9 == (id)0x7FFFFFFFFFFFFFFFLL || v13 == (id)0x7FFFFFFFFFFFFFFFLL) {
    +[ICAssert handleFailedAssertWithCondition:functionName:simulateCrash:showAlert:format:](ICAssert, "handleFailedAssertWithCondition:functionName:simulateCrash:showAlert:format:", "index1 != NSNotFound && index2 != NSNotFound", "-[ICBrowseAttachmentsCollectionController sortFetchedResultsSections]_block_invoke", 1, 0, @"Unknown section");
  }
  if (v9 == v13) {
    +[ICAssert handleFailedAssertWithCondition:functionName:simulateCrash:showAlert:format:](ICAssert, "handleFailedAssertWithCondition:functionName:simulateCrash:showAlert:format:", "index1 != index2", "-[ICBrowseAttachmentsCollectionController sortFetchedResultsSections]_block_invoke", 1, 0, @"Sections should different");
  }
  if (v9 < v13) {
    int64_t v14 = -1;
  }
  else {
    int64_t v14 = 1;
  }

  return v14;
}

id sub_100125014(uint64_t a1)
{
  [*(id *)(a1 + 32) sortFetchedResultsSections];
  id v2 = [*(id *)(a1 + 32) collectionView];
  [v2 reloadData];

  id v3 = [*(id *)(a1 + 32) collectionViewLayout];
  [v3 invalidateLayout];

  uint64_t v4 = *(void **)(a1 + 32);

  return [v4 updateEmptyView];
}

id sub_100125CA4(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

id sub_100125CAC(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = [*(id *)(a1 + 40) ic_viewControllerManager];
  uint64_t v4 = [*(id *)(a1 + 40) view];
  id v5 = [v2 previewActionsForViewControllerManager:v3 fromView:v4];

  unint64_t v6 = +[UIMenu menuWithTitle:&stru_10063F3D8 image:0 identifier:0 options:0 children:v5];

  return v6;
}

void sub_100125FD4(void *a1)
{
  id v2 = (void *)a1[4];
  id v3 = [v2 collectionView];
  [v2 browseAttachmentsCollectionView:v3 didSelectAttachment:a1[5] indexPath:a1[6]];
}

void sub_100127E40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100127E64(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id result = [a2 didChooseToMigrate];
  if (result)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 1;
    *a4 = 1;
  }
  return result;
}

void sub_100127F20(uint64_t a1)
{
  id v16 = +[ICQuickNoteSessionManager sharedManager];
  id v2 = [v16 noteEditorViewController];
  id v3 = [v2 note];
  if ([v16 isQuickNoteSessionActive])
  {
    uint64_t v4 = [v2 presentedViewController];
    char v5 = objc_opt_respondsToSelector();

    if (v5)
    {
      unint64_t v6 = [v2 presentedViewController];
      [v6 prepareForDismissal];
    }
    [v16 endSession];
  }
  if ([v3 isEmpty])
  {
    +[ICNote deleteEmptyNote:v3];
    unsigned int v7 = [v3 managedObjectContext];
    [v7 ic_save];
  }
  else
  {
    [v2 saveNote];
    unsigned int v7 = +[ICNoteContext sharedContext];
    [v7 saveImmediately];
  }

  uint64_t v8 = [*(id *)(a1 + 32) viewControllerManager];
  id v9 = [v8 noteEditorViewController];
  [v9 updateInlineDrawings];

  id v10 = [*(id *)(a1 + 32) viewControllerManager];
  uint64_t v11 = [v10 noteEditorViewController];
  [v11 resetTextViewUndoManager];

  uint64_t v12 = [*(id *)(a1 + 32) viewControllerManager];
  id v13 = [v12 currentAttachmentPresenter];
  [v13 dismissAnimated:0 completion:0];

  int64_t v14 = +[ICQuickNoteSessionManager sharedManager];
  [v14 setSecureScreenShowing:0];

  id v15 = [*(id *)(a1 + 32) viewControllerManager];
  [v15 dismissAnyPresentedViewControllerAnimated:0 completion:0];

  [*(id *)(a1 + 32) setIcWindow:0];
}

void sub_1001283EC(uint64_t a1)
{
  +[UIView setAnimationsEnabled:0];
  id v2 = [*(id *)(a1 + 32) navigationController];
  id v3 = [v2 view];
  [v3 layoutIfNeeded];

  uint64_t v4 = [*(id *)(a1 + 32) view];
  [v4 layoutIfNeeded];

  LODWORD(v3) = [*(id *)(a1 + 40) isQuickNoteFirstLaunch];
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  _DWORD v14[2] = sub_10012862C;
  v14[3] = &unk_10062A858;
  id v15 = *(id *)(a1 + 32);
  id v16 = *(id *)(a1 + 40);
  id v17 = *(id *)(a1 + 48);
  id v18 = *(id *)(a1 + 56);
  id v19 = *(id *)(a1 + 64);
  char v20 = (char)v3;
  char v21 = *(unsigned char *)(a1 + 72);
  char v5 = objc_retainBlock(v14);
  unint64_t v6 = v5;
  if (v3)
  {
    unsigned int v7 = [ICStartupQuickNoteFirstLaunchViewController alloc];
    uint64_t v8 = +[ICAppDelegate sharedInstance];
    id v9 = -[ICStartupQuickNoteFirstLaunchViewController initStartedWithPencil:launchBlock:](v7, "initStartedWithPencil:launchBlock:", [v8 isLaunchingQuickNoteViaPencil], v6);

    id v10 = +[ICAppDelegate sharedInstance];
    [v10 setLaunchingQuickNoteViaPencil:0];

    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_100128B54;
    void v12[3] = &unk_100625AF0;
    uint64_t v11 = *(void **)(a1 + 32);
    id v13 = *(id *)(a1 + 40);
    [v11 presentViewController:v9 animated:1 completion:v12];
  }
  else
  {
    ((void (*)(void *, void))v5[2])(v5, 0);
  }
}

void sub_10012862C(uint64_t a1, uint64_t a2)
{
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  v18[2] = sub_10012891C;
  v18[3] = &unk_10062A830;
  id v19 = *(id *)(a1 + 32);
  id v20 = *(id *)(a1 + 40);
  id v21 = *(id *)(a1 + 48);
  id v22 = *(id *)(a1 + 56);
  id v23 = *(id *)(a1 + 64);
  char v24 = *(unsigned char *)(a1 + 72);
  uint64_t v4 = objc_retainBlock(v18);
  char v5 = v4;
  if (a2 != 1)
  {
    if (*(unsigned char *)(a1 + 73))
    {
      unint64_t v6 = +[NSMutableDictionary dictionary];
      unsigned int v7 = [&__kCFBooleanFalse stringValue];
      [v6 setValue:v7 forKey:ICQuickNoteURLOptionShowList];

      if (ICInternalSettingsIsSelectionStateTrackingEnabled())
      {
        uint64_t v8 = +[ICSelectionStateUtilities selectedNoteObjectIDFromArchive:*(void *)(a1 + 56) modernManagedObjectContext:*(void *)(a1 + 48) legacyManagedObjectContext:0];
        id v9 = +[ICNote ic_existingObjectWithID:v8 context:*(void *)(a1 + 48)];
        id v10 = [v9 identifier];
        [v6 setValue:v10 forKey:ICQuickNoteURLOptionNoteIdentifier];
      }
      else
      {
        uint64_t v11 = [*(id *)(a1 + 56) currentNoteObjectIDURL];

        if (!v11)
        {
LABEL_9:
          id v15 = *(void **)(a1 + 64);
          v16[0] = _NSConcreteStackBlock;
          v16[1] = 3221225472;
          _OWORD v16[2] = sub_100128B38;
          void v16[3] = &unk_100626248;
          id v17 = v5;
          [v15 launchNotesAppFromLockscreenWithQueryOptions:v6 completionBlock:v16];

          goto LABEL_10;
        }
        uint64_t v12 = [*(id *)(a1 + 48) persistentStoreCoordinator];
        id v13 = [*(id *)(a1 + 56) currentNoteObjectIDURL];
        int64_t v14 = [v12 ic_managedObjectIDForURIRepresentation:v13];
        uint64_t v8 = +[ICNote ic_existingObjectWithID:v14 context:*(void *)(a1 + 48)];

        id v9 = [v8 identifier];
        [v6 setValue:v9 forKey:ICQuickNoteURLOptionNoteIdentifier];
      }

      goto LABEL_9;
    }
    ((void (*)(void *, uint64_t))v4[2])(v4, 1);
  }
LABEL_10:
}

void sub_10012891C(uint64_t a1, uint64_t a2)
{
  char v13 = 0;
  id v3 = [*(id *)(a1 + 40) noteForSessionCreatingIfNecessaryInContext:*(void *)(a1 + 48) stateArchive:*(void *)(a1 + 56) canResume:a2 isNewlyCreated:&v13];
  [*(id *)(a1 + 32) setNote:v3];

  if (v13)
  {
    uint64_t v4 = [*(id *)(a1 + 32) eventReporter];
    char v5 = [*(id *)(a1 + 32) note];
    [v4 submitNoteCreateEventForModernNote:v5 createApproach:12];
  }
  [*(id *)(a1 + 40) beginSessionWithNoteEditorViewController:*(void *)(a1 + 32)];
  [*(id *)(a1 + 64) updateNoteEditorViewControllerWithStateArchive:*(void *)(a1 + 56)];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_100128A48;
  void v10[3] = &unk_100625D18;
  id v11 = *(id *)(a1 + 32);
  char v12 = *(unsigned char *)(a1 + 72);
  unint64_t v6 = objc_retainBlock(v10);
  ((void (*)(void *, uint64_t, uint64_t, uint64_t))v6[2])(v6, v7, v8, v9);
}

void sub_100128A48(uint64_t a1)
{
  id v2 = +[UIDevice currentDevice];
  id v3 = [v2 userInterfaceIdiom];

  id v7 = [*(id *)(a1 + 32) note];
  if ([v7 isPasswordProtected])
  {
    unsigned int v4 = [v7 isAuthenticated] ^ 1;
    if (!v3) {
      goto LABEL_7;
    }
  }
  else
  {
    LOBYTE(v4) = 0;
    if (!v3) {
      goto LABEL_7;
    }
  }
  if ((v4 & 1) == 0) {
    [*(id *)(a1 + 32) showInkPicker:1 animated:0];
  }
LABEL_7:
  +[UIView setAnimationsEnabled:1];
  if (!*(unsigned char *)(a1 + 40) && !v3)
  {
    char v5 = [*(id *)(a1 + 32) note];
    unsigned int v6 = [v5 isEmpty];

    if (v6) {
      [*(id *)(a1 + 32) startEditing];
    }
  }
}

uint64_t sub_100128B38(uint64_t result, char a2)
{
  if ((a2 & 1) == 0) {
    return (*(uint64_t (**)(void))(*(void *)(result + 32) + 16))();
  }
  return result;
}

id sub_100128B54(uint64_t a1)
{
  return _[*(id *)(a1 + 32) setQuickNoteFirstLaunch:0];
}

void sub_100128B80(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  objc_opt_class();
  char v5 = ICCheckedDynamicCast();

  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100128C54;
  v7[3] = &unk_10062A8E8;
  id v8 = v3;
  id v6 = v3;
  [v5 takeScreenshotOfDisplays:0 handler:v7];
}

void sub_100128C54(uint64_t a1, void *a2, void *a3)
{
  id v7 = a3;
  char v5 = [a2 allValues];
  id v6 = [v5 ic_map:&stru_10062A8C0];

  [v6 count];
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

NSData *__cdecl sub_100128D04(id a1, UIImage *a2)
{
  [(UIImage *)a2 ioSurface];
  id v2 = (const void *)UICreateCGImageFromIOSurface();
  id v3 = +[UIImage imageWithCGImage:CFAutorelease(v2)];
  id v4 = UIImagePNGRepresentation(v3);

  return (NSData *)v4;
}

uint64_t sub_10012A4D8()
{
  return performBlockOnMainThread();
}

void sub_10012A548(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) eventReporter];
  [v1 startWindowSceneEventDurationTracking];
}

void sub_10012AB3C(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  [v7 setDisplayGenericTitle:0];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v11 = [WeakRetained collectionViewDiffableDataSource];
  char v12 = [v11 snapshot];
  [v7 setDisplayDisclosure:((uint64_t)[v12 numberOfSections] > 1)];

  objc_opt_class();
  char v13 = ICDynamicCast();
  int64_t v14 = v13;
  uint64_t v15 = *(void *)(a1 + 32);
  if (v15)
  {
    id v16 = [v13 accountObjectID];
    id v17 = (*(void (**)(uint64_t, void *))(v15 + 16))(v15, v16);
    [v7 setUpgradeButtonTapHandler:v17];
  }
  else
  {
    [v7 setUpgradeButtonTapHandler:0];
  }
  [v7 setFolderListSectionIdentifier:v14];
  [v7 setTagSelection:0];
  if ([v14 sectionType] == (id)8)
  {
    id v19 = _NSConcreteStackBlock;
    uint64_t v20 = 3221225472;
    id v21 = sub_10012AD9C;
    id v22 = &unk_10062A910;
    objc_copyWeak(&v24, (id *)(a1 + 48));
    id v23 = *(id *)(a1 + 40);
    [v7 setTagSelectionDidChange:&v19];
    id v18 = objc_loadWeakRetained((id *)(a1 + 48));
    [v7 setShouldDisplayTagSelectionOperator:[v18 shouldDisplayTagOperatorInTagHeading:v19, v20, v21, v22]];

    objc_destroyWeak(&v24);
  }
  else
  {
    [v7 setTagSelectionDidChange:0];
    [v7 setShouldDisplayTagSelectionOperator:0];
  }
  [v7 setUsesSidebarHeaderConfiguration:[v7 ic_inSidebar]];
  if (+[UIDevice ic_isVision]) {
    [v7 setHorizontalInsetsOverride:24.0];
  }
}

void sub_10012AD84(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10012AD9C(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained setTagSelection:v5];

  uint64_t v4 = *(void *)(a1 + 32);
  if (v4) {
    (*(void (**)(uint64_t, id))(v4 + 16))(v4, v5);
  }
}

void sub_10012AE10(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6 = a2;
  id v7 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v9 = WeakRetained;
  if (WeakRetained)
  {
    id v10 = [WeakRetained presentingViewController];
    [v6 setPresentingViewController:v10];

    [v6 setHasGroupInset:[v9 hasGroupInset]];
    [v6 setHasDisclosureIndicator:[v9 hasGroupInset]];
    [v6 setShouldIndentNoteCount:[v9 shouldIndentNoteCount]];
    id v11 = [v9 unsupportedFolderInfoButtonTapHandler];
    [v6 setUnsupportedFolderInfoButtonTapHandler:v11];

    id v12 = objc_loadWeakRetained((id *)(a1 + 40));
    [v6 setAccessibilityCustomActionsDelegate:v12];

    objc_opt_class();
    char v13 = ICDynamicCast();
    LODWORD(v11) = [v13 ic_isModernContainerType];

    if (v11)
    {
      objc_opt_class();
      int64_t v14 = [v9 modernViewContext];
      uint64_t v15 = [v14 objectWithID:v7];
      id v16 = ICCheckedDynamicCast();
      [v6 setNoteContainer:v16];
LABEL_6:

      goto LABEL_12;
    }
    objc_opt_class();
    id v17 = ICDynamicCast();
    unsigned int v18 = [v17 ic_isLegacyContainerType];

    if (v18)
    {
      objc_opt_class();
      int64_t v14 = [v9 legacyViewContext];
      uint64_t v15 = [v14 objectWithID:v7];
      id v16 = ICCheckedDynamicCast();
      [v6 setNoteCollection:v16];
      goto LABEL_6;
    }
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      objc_opt_class();
      id v19 = ICCheckedDynamicCast();
      [v6 setVirtualSmartFolder:v19];
    }
    else
    {
      id v19 = os_log_create("com.apple.notes", "UI");
      if (os_log_type_enabled(v19, OS_LOG_TYPE_FAULT)) {
        sub_1004DCE0C((uint64_t)v7, v19);
      }
    }
  }
LABEL_12:
}

void sub_10012B08C(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [v7 setHasGroupInset:[WeakRetained hasGroupInset]];

  id v11 = _NSConcreteStackBlock;
  uint64_t v12 = 3221225472;
  char v13 = sub_10012B1B4;
  int64_t v14 = &unk_10062A910;
  objc_copyWeak(&v16, (id *)(a1 + 40));
  id v15 = *(id *)(a1 + 32);
  [v7 setSelectionDidChange:&v11];
  [v7 setAllowsExclusion:1 v11, v12, v13, v14];

  objc_destroyWeak(&v16);
}

void sub_10012B19C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10012B1B4(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained setTagSelection:v5];

  uint64_t v4 = *(void *)(a1 + 32);
  if (v4) {
    (*(void (**)(uint64_t, id))(v4 + 16))(v4, v5);
  }
}

void sub_10012B228(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  int64_t v14 = _NSConcreteStackBlock;
  uint64_t v15 = 3221225472;
  id v16 = sub_10012B36C;
  id v17 = &unk_10062A910;
  id v10 = (id *)(a1 + 40);
  objc_copyWeak(&v19, (id *)(a1 + 40));
  id v18 = *(id *)(a1 + 32);
  [v7 setSelectionChangeHandler:&v14];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v12 = [WeakRetained tagSelection:v14, v15, v16, v17];
  [v7 setTagSelection:v12];

  id v13 = objc_loadWeakRetained(v10);
  [v13 updateTagOperatorVisibility];

  objc_destroyWeak(&v19);
}

void sub_10012B354(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10012B36C(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained setTagSelection:v5];

  uint64_t v4 = *(void *)(a1 + 32);
  if (v4) {
    (*(void (**)(uint64_t, id))(v4 + 16))(v4, v5);
  }
}

id sub_10012B3E0(id *a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a4;
  id v7 = a3;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v8 = a1 + 4;
  }
  else
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v8 = a1 + 5;
    }
    else
    {
      objc_opt_class();
      char isKindOfClass = objc_opt_isKindOfClass();
      id v8 = a1 + 7;
      if (isKindOfClass) {
        id v8 = a1 + 6;
      }
    }
  }
  id v10 = *v8;
  id WeakRetained = objc_loadWeakRetained(a1 + 8);
  uint64_t v12 = [WeakRetained dequeueConfiguredReusableCellWithRegistration:v10 forIndexPath:v7 item:v6];

  return v12;
}

void sub_10012B4EC(uint64_t a1, void *a2)
{
  id v3 = (id *)(a1 + 40);
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  [v5 setHasGroupInset:[WeakRetained hasGroupInset]];

  [v5 setCloseHandler:*(void *)(a1 + 32)];
}

id sub_10012B560(uint64_t a1, void *a2)
{
  return [a2 dequeueConfiguredReusableSupplementaryViewWithRegistration:*(void *)(a1 + 32) forIndexPath:];
}

void sub_10012B56C(uint64_t a1, void *a2)
{
  id v12 = a2;
  id v3 = +[ICExpansionState sharedExpansionState];
  uint64_t v4 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained(v4);
  id v6 = [WeakRetained indexer];
  id v7 = [v6 expansionStateContext];
  [v3 expandItemIdentifier:v12 context:v7];

  id v8 = objc_loadWeakRetained(v4);
  id v9 = [v8 willExpandItemHandler];

  if (v9)
  {
    id v10 = objc_loadWeakRetained(v4);
    id v11 = [v10 willExpandItemHandler];
    ((void (**)(void, id))v11)[2](v11, v12);
  }
}

void sub_10012B670(uint64_t a1, void *a2)
{
  id v12 = a2;
  id v3 = +[ICExpansionState sharedExpansionState];
  uint64_t v4 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained(v4);
  id v6 = [WeakRetained indexer];
  id v7 = [v6 expansionStateContext];
  [v3 collapseItemIdentifier:v12 context:v7];

  id v8 = objc_loadWeakRetained(v4);
  id v9 = [v8 willCollapseItemHandler];

  if (v9)
  {
    id v10 = objc_loadWeakRetained(v4);
    id v11 = [v10 willCollapseItemHandler];
    ((void (**)(void, id))v11)[2](v11, v12);
  }
}

void sub_10012B878(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_10012B894(uint64_t a1, void *a2)
{
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  id v16 = a2;
  id obj = [v16 allVirtualSmartFolderIdentifiers];
  id v2 = [obj countByEnumeratingWithState:&v19 objects:v23 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v20;
    id v5 = (id *)(a1 + 40);
    do
    {
      for (unint64_t i = 0; i != v3; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v20 != v4) {
          objc_enumerationMutation(obj);
        }
        uint64_t v7 = *(void *)(*((void *)&v19 + 1) + 8 * i);
        id WeakRetained = objc_loadWeakRetained(v5);
        id v9 = [WeakRetained collectionViewDiffableDataSource];
        id v10 = [v9 indexPathForItemIdentifier:v7];

        if (v10)
        {
          id v11 = objc_loadWeakRetained(v5);
          id v12 = [v11 collectionView];
          id v13 = [v12 cellForItemAtIndexPath:v10];
        }
        else
        {
          id v13 = 0;
        }
        objc_opt_class();
        int64_t v14 = ICDynamicCast();
        [v14 setVirtualSmartFolder:v7];
      }
      id v3 = [obj countByEnumeratingWithState:&v19 objects:v23 count:16];
    }
    while (v3);
  }

  uint64_t v15 = *(void *)(a1 + 32);
  if (v15) {
    (*(void (**)(uint64_t, id))(v15 + 16))(v15, v16);
  }
}

uint64_t sub_10012C190(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  uint64_t v4 = [v2 modernViewContext];
  unsigned int v5 = [v3 isHiddenInContext:v4];

  return v5 ^ 1;
}

BOOL sub_10012C308(id a1, id a2, unint64_t a3, BOOL *a4)
{
  id v4 = a2;
  objc_opt_class();
  unsigned int v5 = ICDynamicCast();

  LOBYTE(v4) = [v5 sectionType] == (id)8;
  return (char)v4;
}

void sub_10012CB68(uint64_t a1)
{
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  id obj = *(id *)(a1 + 32);
  id v2 = [obj countByEnumeratingWithState:&v18 objects:v22 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v19;
    do
    {
      unsigned int v5 = 0;
      do
      {
        if (*(void *)v19 != v4) {
          objc_enumerationMutation(obj);
        }
        id v6 = *(void **)(*((void *)&v18 + 1) + 8 * (void)v5);
        objc_opt_class();
        uint64_t v7 = [v6 attachmentModel];
        id v8 = ICDynamicCast();

        id v9 = +[UIScreen mainScreen];
        [v9 scale];
        id v11 = [v6 attachmentPreviewImageWithMinSize:240.0 scale:240.0];

        id v12 = [v11 orientedImage];
        if (v8)
        {
          id v13 = [v8 drawing];

          if (v13) {
            BOOL v14 = v12 == 0;
          }
          else {
            BOOL v14 = 1;
          }
          if (!v14)
          {
            [*(id *)(a1 + 40) addObject:v6];
            uint64_t v15 = *(void **)(a1 + 48);
            id v16 = [v8 drawing];
            [v15 addObject:v16];

            [*(id *)(a1 + 56) addObject:v12];
          }
        }

        unsigned int v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      id v3 = [obj countByEnumeratingWithState:&v18 objects:v22 count:16];
    }
    while (v3);
  }
}

void sub_10012E468(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  +[ICDrawing defaultPixelSize];
  [v2 attachmentPreviewImageWithMinSize:scale:];
  id v9 = (id)objc_claimAutoreleasedReturnValue();
  id v3 = [v9 image];
  uint64_t v4 = v3;
  if (v3)
  {
    unsigned int v5 = UIImagePNGRepresentation(v3);
    id v6 = *(void **)(a1 + 40);
    uint64_t v7 = +[NSString stringWithFormat:@"/image_%d.png", *(void *)(a1 + 56)];
    id v8 = [v6 URLByAppendingPathComponent:v7 isDirectory:0];

    [v5 writeToURL:v8 atomically:1];
    [*(id *)(a1 + 48) addObject:v8];
  }
}

void sub_10013008C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1001300AC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1001300BC(uint64_t a1)
{
}

void sub_1001300C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2)
  {
    id v3 = +[ICNote ic_objectsFromObjectIDs:a2 context:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)];
    (*(void (**)(uint64_t, id))(v2 + 16))(v2, v3);
  }
}

uint64_t sub_100130388(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [v3 account];
  if (v4 == *(void **)(a1 + 32)) {
    uint64_t v5 = (uint64_t)[v3 isDeletedOrInTrash];
  }
  else {
    uint64_t v5 = 1;
  }

  return v5;
}

void sub_1001303F0(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  id v4 = [*(id *)(a1 + 48) type];
  [v2 undoablyMoveNotes:v3 toVirtualSmartFolderType:v4 completionHandler:*(void *)(a1 + 56)];
}

void sub_100130F88(uint64_t a1)
{
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      id v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v8 + 1) + 8 * (void)v6) markAsSystemPaperIfNeeded:*(unsigned __int8 *)(a1 + 48) v8];
        id v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }

  uint64_t v7 = [*(id *)(a1 + 40) managedObjectContext];
  [v7 ic_save];
}

void sub_100131188(uint64_t a1)
{
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      id v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v8 + 1) + 8 * (void)v6) markAsMathNoteIfNeeded:*(unsigned __int8 *)(a1 + 48) v8];
        id v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }

  uint64_t v7 = [*(id *)(a1 + 40) managedObjectContext];
  [v7 ic_save];
}

void sub_100131388(uint64_t a1)
{
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      id v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v8 + 1) + 8 * (void)v6) markAsCallNoteIfNeeded:*(unsigned __int8 *)(a1 + 48) v8];
        id v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }

  uint64_t v7 = [*(id *)(a1 + 40) managedObjectContext];
  [v7 ic_save];
}

void sub_100131B7C(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) managedObjectContext];
  [v1 ic_save];
}

void sub_100131F60(uint64_t a1)
{
  if ([*(id *)(a1 + 32) isSmartFolder])
  {
    id v6 = [*(id *)(a1 + 32) account];
    id v2 = [*(id *)(a1 + 32) smartFolderQuery];
    id v3 = [v2 tagSelectionWithManagedObjectContext:*(void *)(a1 + 40)];
    if ([v3 isNonEmpty]) {
      BOOL v4 = v6 == 0;
    }
    else {
      BOOL v4 = 1;
    }
    if (!v4)
    {
      uint64_t v5 = [v3 tagIdentifiers];
      [v6 deleteUnusedHashtagsWithStandardizedContent:v5];
    }
  }
}

void sub_100132120(uint64_t a1)
{
  if ([*(id *)(a1 + 32) isSmartFolder])
  {
    id v2 = [*(id *)(a1 + 32) smartFolderQuery];
    id v3 = [v2 tagSelectionWithManagedObjectContext:*(void *)(a1 + 40)];
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    long long v15 = 0u;
    BOOL v4 = [v3 tagIdentifiers];
    id v5 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
    if (v5)
    {
      id v6 = v5;
      uint64_t v7 = *(void *)v13;
      do
      {
        long long v8 = 0;
        do
        {
          if (*(void *)v13 != v7) {
            objc_enumerationMutation(v4);
          }
          uint64_t v9 = *(void *)(*((void *)&v12 + 1) + 8 * (void)v8);
          long long v10 = [*(id *)(a1 + 32) account];
          long long v11 = +[ICHashtag hashtagWithStandardizedContent:v9 onlyVisible:0 account:v10];
          [v11 unmarkForDeletion];

          long long v8 = (char *)v8 + 1;
        }
        while (v6 != v8);
        id v6 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
      }
      while (v6);
    }
  }
}

void sub_100132CC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100132CD8(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 setTotalUnitCount:[*(id *)(a1 + 32) count]];
  [v3 setCompletedUnitCount:0];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_100132DD4;
  void v8[3] = &unk_10062AB10;
  BOOL v4 = *(void **)(a1 + 40);
  id v9 = *(id *)(a1 + 32);
  id v10 = v3;
  id v11 = *(id *)(a1 + 40);
  id v5 = *(id *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  id v12 = v5;
  uint64_t v13 = v6;
  id v7 = v3;
  [v4 performBlockAndWait:v8];
}

void sub_100132DD4(uint64_t a1)
{
  long long v21 = +[NSMutableArray array];
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v23 objects:v29 count:16];
  if (v3)
  {
    id v5 = v3;
    uint64_t v6 = 0;
    uint64_t v7 = *(void *)v24;
    *(void *)&long long v4 = 138412290;
    long long v20 = v4;
    while (2)
    {
      for (unint64_t i = 0; i != v5; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v24 != v7) {
          objc_enumerationMutation(v2);
        }
        uint64_t v9 = *(void *)(*((void *)&v23 + 1) + 8 * i);
        if ([*(id *)(a1 + 40) isCancelled])
        {
          goto LABEL_16;
        }
        id v11 = +[ICNote ic_existingObjectWithID:v9 context:*(void *)(a1 + 48)];
        if (v11)
        {
          id v12 = (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
          if (v12) {
            [v21 addObject:v12];
          }
        }
        else
        {
          id v12 = os_log_create("com.apple.notes", "Move");
          if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)uint8_t buf = v20;
            uint64_t v28 = v9;
            _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "Cannot retrieve note to be processed — skipping {objectID: %@}", buf, 0xCu);
          }
        }

        [*(id *)(a1 + 40) setCompletedUnitCount:(char *)i + v6 + 1];
      }
      id v5 = [v2 countByEnumeratingWithState:&v23 objects:v29 count:16];
      v6 += (uint64_t)i;
      if (v5) {
        continue;
      }
      break;
    }
  }
LABEL_16:

  if (objc_msgSend(*(id *)(a1 + 48), "ic_isMainThreadContext"))
  {
    id v13 = 0;
  }
  else
  {
    long long v14 = *(void **)(a1 + 48);
    id v22 = 0;
    unsigned __int8 v15 = [v14 save:&v22];
    id v13 = v22;
    if ((v15 & 1) == 0)
    {
      id v16 = os_log_create("com.apple.notes", "CoreData");
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_1004DD178();
      }
    }
  }
  uint64_t v17 = +[NSManagedObject ic_permanentObjectIDsFromObjects:](NSManagedObject, "ic_permanentObjectIDsFromObjects:", v21, v20);
  uint64_t v18 = *(void *)(*(void *)(a1 + 64) + 8);
  long long v19 = *(void **)(v18 + 40);
  *(void *)(v18 + 40) = v17;
}

uint64_t sub_100133080(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40));
  }
  return result;
}

NSString *__cdecl sub_100133220(id a1, unint64_t a2, unint64_t a3)
{
  id v5 = +[NSBundle mainBundle];
  uint64_t v6 = [v5 localizedStringForKey:@"Moving note %lu of %lu…" value:&stru_10063F3D8 table:0];

  uint64_t v7 = +[NSString localizedStringWithFormat:](NSString, "localizedStringWithFormat:", v6, a2, a3);

  return (NSString *)v7;
}

id sub_1001332C0(uint64_t a1, void *a2)
{
  id v3 = a2;
  long long v4 = *(void **)(a1 + 32);
  id v5 = [v3 objectID];
  uint64_t v6 = [v4 objectForKeyedSubscript:v5];

  if (v6)
  {
    uint64_t v7 = *(void **)(a1 + 32);
    long long v8 = [v3 objectID];
    uint64_t v9 = [v7 objectForKeyedSubscript:v8];
    id v10 = [v3 managedObjectContext];
    id v11 = +[ICFolder ic_existingObjectWithID:v9 context:v10];
  }
  else
  {
    id v11 = 0;
  }
  if ([v11 isSmartFolder])
  {
    id v12 = os_log_create("com.apple.notes", "CoreData");
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG)) {
      sub_1004DD264();
    }

    id v13 = [v11 account];
    uint64_t v14 = [v13 defaultFolder];

    id v11 = (void *)v14;
  }
  if (v11)
  {
    if ([v3 markedForDeletion])
    {
      unsigned __int8 v15 = *(void **)(a1 + 40);
      id v16 = [v3 objectID];
      uint64_t v17 = [v15 objectForKeyedSubscript:v16];

      uint64_t v18 = [v3 managedObjectContext];
      long long v19 = +[ICNote ic_existingObjectWithID:v17 context:v18];

      [*(id *)(a1 + 48) unmarkNoteAndAttachmentsForDeletion:v3];
      if (v19)
      {
        [*(id *)(a1 + 48) markNoteAndAttachmentsForDeletion:v19];
      }
      else
      {
        long long v23 = os_log_create("com.apple.notes", "CoreData");
        if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
          sub_1004DD230();
        }
      }
      id v21 = v3;
    }
    else
    {
      [v3 setFolder:v11];
      id v22 = +[NSDate date];
      [v3 setFolderModificationDate:v22];

      [v3 updateChangeCountWithReason:@"Unmoved note"];
      id v21 = v3;
    }
  }
  else
  {
    long long v20 = os_log_create("com.apple.notes", "CoreData");
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
      sub_1004DD1AC(v3);
    }

    id v21 = 0;
  }

  return v21;
}

NSString *__cdecl sub_100133808(id a1, unint64_t a2, unint64_t a3)
{
  id v5 = +[NSBundle mainBundle];
  uint64_t v6 = [v5 localizedStringForKey:@"Moving note %lu of %lu…" value:&stru_10063F3D8 table:0];

  uint64_t v7 = +[NSString localizedStringWithFormat:](NSString, "localizedStringWithFormat:", v6, a2, a3);

  return (NSString *)v7;
}

id sub_1001338A8(uint64_t a1, void *a2)
{
  id v3 = a2;
  long long v4 = [v3 folder];
  id v5 = *(void **)(a1 + 32);
  uint64_t v6 = [v3 objectID];
  uint64_t v7 = [v5 objectForKeyedSubscript:v6];
  if (v7)
  {
    long long v8 = *(void **)(a1 + 32);
    uint64_t v9 = [v3 objectID];
    id v10 = [v8 objectForKeyedSubscript:v9];
    id v11 = [v3 managedObjectContext];
    id v12 = +[ICFolder ic_existingObjectWithID:v10 context:v11];
  }
  else
  {
    id v12 = 0;
  }

  if ([v12 isSmartFolder])
  {
    id v13 = [v3 account];
    uint64_t v14 = [v13 defaultFolder];

    id v12 = (void *)v14;
  }
  if (v12)
  {
    unsigned __int8 v15 = [v3 folder];
    id v16 = [v15 objectID];
    uint64_t v17 = *(void **)(a1 + 40);
    uint64_t v18 = [v3 objectID];
    [v17 setObject:v16 forKeyedSubscript:v18];

    if (+[ICMoveDecision shouldCopyThenDeleteWhenMovingObject:v3 toNoteContainer:v12])
    {
      if ([v3 isPasswordProtected])
      {
        if ([v3 isAuthenticated])
        {
          id v19 = +[ICNote duplicateNote:v3 intoFolder:v12 isPasswordProtected:1 removeOriginalNote:1];
          [v19 setIsPinned:[v3 isPinned]];
          [v19 setPreferredBackgroundType:[v3 preferredBackgroundType]];
          [v19 updateChangeCountWithReason:@"Moved note"];
        }
        else
        {
          id v19 = 0;
        }
        id v21 = 0;
        goto LABEL_19;
      }
      id v19 = +[ICNote newEmptyNoteInFolder:v12];
      long long v24 = [v19 ic_permanentObjectID];
      long long v25 = *(void **)(a1 + 48);
      long long v26 = [v3 objectID];
      [v25 setObject:v24 forKeyedSubscript:v26];

      [v3 copyValuesToNote:v19];
      __int16 v27 = [v3 account];
      [v19 setAccount:v27];

      uint64_t v28 = [v12 account];
      [v19 setAccount:v28];

      uint64_t v29 = +[NSDate date];
      [v19 setFolderModificationDate:v29];

      [v19 updateChangeCountWithReason:@"Moved note"];
      [*(id *)(a1 + 56) markNoteAndAttachmentsForDeletion:v3];
      id v23 = v3;
    }
    else
    {
      [v3 setFolder:v12];
      id v22 = +[NSDate date];
      [v3 setFolderModificationDate:v22];

      [v3 updateChangeCountWithReason:@"Moved note"];
      id v23 = v3;
      id v19 = v23;
    }
    id v21 = v23;
LABEL_19:
    uint64_t v30 = +[NSUndoManager shared];
    unsigned __int8 v31 = [v30 isUndoing];

    if ((v31 & 1) == 0)
    {
      uint64_t v32 = [[ICCloudSyncingObjectMoveAction alloc] initWithObject:v3 fromParentObject:v4 toParentObject:v12 isCopy:0];
      if (v32) {
        +[ICCloudSyncingObject undoablyPersistActivityEventsForMoveAction:v32 oldObject:v3 newObject:v19];
      }
    }
    id v33 = *(void **)(a1 + 64);
    id v34 = [v19 objectID];
    [v33 ic_addNonNilObject:v34];

    goto LABEL_24;
  }
  long long v20 = os_log_create("com.apple.notes", "CoreData");
  if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
    sub_1004DD2A4(v3);
  }

  id v19 = 0;
  id v21 = 0;
LABEL_24:
  id v35 = v21;

  return v35;
}

void sub_100133CE8(void *a1, void *a2)
{
  id v8 = a2;
  if ([v8 count])
  {
    id v3 = +[NSUndoManager shared];
    long long v4 = [v3 prepareWithInvocationTarget:a1[4]];
    [v4 undoablyUnmoveNoteIDs:v8 toFolderIDs:a1[5] originalToCopyNoteIDs:a1[6] actionName:a1[7] noteToFolderIDsForRedo:a1[8] workerContext:a1[9]];

    id v5 = +[NSUndoManager shared];
    [v5 setActionName:a1[7]];
  }
  uint64_t v6 = +[NSUndoManager shared];
  [v6 endUndoGrouping];

  uint64_t v7 = a1[11];
  if (v7) {
    (*(void (**)(uint64_t, void))(v7 + 16))(v7, a1[10]);
  }
}

void sub_100134378(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10013439C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    uint64_t v7 = os_log_create("com.apple.notes", "LaunchTask");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1004DD36C((uint64_t)v6, v7);
    }
    goto LABEL_4;
  }
  uint64_t v7 = os_log_create("com.apple.notes", "LaunchTask");
  BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_INFO);
  if (!v5)
  {
    if (v8)
    {
      LOWORD(v10) = 0;
      uint64_t v9 = "No client state found from CoreSpotlight.";
      goto LABEL_14;
    }
LABEL_4:

    *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 1;
    goto LABEL_5;
  }
  if (v8)
  {
    int v10 = 138412290;
    id v11 = v5;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Client State from CoreSpotlight: %@", (uint8_t *)&v10, 0xCu);
  }

  if (([v5 isEqual:*(void *)(a1 + 32)] & 1) == 0)
  {
    uint64_t v7 = os_log_create("com.apple.notes", "LaunchTask");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      LOWORD(v10) = 0;
      uint64_t v9 = "clientStateFromCoreSpotlight not equal to clientStateFromDefaults";
LABEL_14:
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, v9, (uint8_t *)&v10, 2u);
      goto LABEL_4;
    }
    goto LABEL_4;
  }
LABEL_5:
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

void sub_100134544(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  long long v4 = +[UIColor systemBackgroundColor];
  id v5 = [v3 traitCollection];

  id v6 = [v4 resolvedColorWithTraitCollection:v5];

  uint64_t v7 = [WeakRetained view];
  [v7 setBackgroundColor:v6];
}

void sub_1001349B8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) directory];

  if (v2)
  {
    id v4 = [*(id *)(a1 + 32) directory];
    +[ICCallNoteCoordinator importAndDeleteCallRecordingFilesIfNeededFromDirectory:v4 managedObjectContext:*(void *)(a1 + 40)];
  }
  else
  {
    uint64_t v3 = *(void *)(a1 + 40);
    +[ICCallNoteCoordinator importAndDeleteCallRecordingFilesIfNeededFromDirectory:0 managedObjectContext:v3];
  }
}

void sub_100134E20(id a1)
{
  id v1 = +[ICNoteContext sharedContext];
  id v3 = [v1 managedObjectContext];

  id v2 = +[ICAttachmentPreviewGenerator sharedGenerator];
  [v2 generateMissingOrOutdatedAttachmentMetaDataIfNeededInContext:v3];
}

id sub_100135220(uint64_t a1)
{
  return _[*(id *)(a1 + 32) clearAtIndexPath:*(void *)(a1 + 40)];
}

__CFString *sub_100135CE0(void *a1)
{
  id v1 = a1;
  if ([(__CFString *)v1 length]) {
    id v2 = v1;
  }
  else {
    id v2 = @"(None)";
  }
  id v3 = v2;

  return v3;
}

void sub_100136200(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

id sub_10013623C(uint64_t a1)
{
  return [*(id *)(a1 + 32) ic_save];
}

void sub_100136244(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = [WeakRetained tableView];
  uint64_t v5 = *(void *)(a1 + 32);
  id v4 = +[NSArray arrayWithObjects:&v5 count:1];
  [v3 reloadRowsAtIndexPaths:v4 withRowAnimation:100];
}

void sub_100136648(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,id location)
{
  objc_destroyWeak(v32);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1001366B0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  +[CATransaction begin];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1001367AC;
  v7[3] = &unk_100625860;
  uint64_t v3 = *(void *)(a1 + 32);
  void v7[4] = WeakRetained;
  void v7[5] = v3;
  +[CATransaction setCompletionBlock:v7];
  id v4 = [WeakRetained tableView];
  uint64_t v5 = [WeakRetained tableView];
  id v6 = [v5 indexPathForSelectedRow];
  [v4 deselectRowAtIndexPath:v6 animated:1];

  +[CATransaction commit];
}

id sub_1001367AC(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAttachment:*(void *)(a1 + 40)];
}

void sub_1001367B4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = [WeakRetained tableView];
  uint64_t v2 = [WeakRetained tableView];
  uint64_t v3 = [v2 indexPathForSelectedRow];
  [v1 deselectRowAtIndexPath:v3 animated:1];
}

id sub_100136E0C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 identifier];
  uint64_t v5 = [*(id *)(a1 + 32) identifier];
  if ([v4 isEqualToString:v5]) {
    id v6 = 0;
  }
  else {
    id v6 = v3;
  }
  id v7 = v6;

  return v7;
}

id sub_100136ED8(id a1, ICAttachment *a2)
{
  return [(ICAttachment *)a2 identifier];
}

void sub_1001373A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location, id a18)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a18);
  _Unwind_Resume(a1);
}

void sub_1001373DC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = objc_loadWeakRetained((id *)(a1 + 40));
  id v2 = WeakRetained;
  performBlockOnMainThread();
}

void sub_100137484(uint64_t a1)
{
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v2 = [*(id *)(a1 + 32) results];
  id v3 = [v2 countByEnumeratingWithState:&v15 objects:v19 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v16;
    while (2)
    {
      for (unint64_t i = 0; i != v4; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v16 != v5) {
          objc_enumerationMutation(v2);
        }
        id v7 = *(void **)(*((void *)&v15 + 1) + 8 * i);
        BOOL v8 = [v7 uniqueIdentifier];
        uint64_t v9 = [*(id *)(a1 + 40) attachment];
        int v10 = [v9 searchIndexingIdentifier];
        unsigned int v11 = [v8 isEqualToString:v10];

        if (v11)
        {
          id v12 = sub_100137634(v7);
          [*(id *)(a1 + 40) setSpotlightResults:v12];

          id v13 = [*(id *)(a1 + 40) tableView];
          uint64_t v14 = +[NSIndexSet indexSetWithIndex:7];
          [v13 reloadSections:v14 withRowAnimation:100];

          goto LABEL_11;
        }
      }
      id v4 = [v2 countByEnumeratingWithState:&v15 objects:v19 count:16];
      if (v4) {
        continue;
      }
      break;
    }
  }
LABEL_11:
}

id sub_100137634(void *a1)
{
  id v1 = a1;
  id v2 = +[NSMutableArray array];
  id v19 = v1;
  id v3 = [v1 attributeSet];
  id v4 = [v3 attributeDictionary];
  uint64_t v5 = [v4 objectForKeyedSubscript:@"_kMDItemSDBInfo"];

  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  id v6 = [v5 allKeys];
  id v7 = [v6 sortedArrayUsingSelector:"compare:"];

  id v8 = [v7 countByEnumeratingWithState:&v20 objects:v24 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v21;
    do
    {
      for (unint64_t i = 0; i != v9; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v21 != v10) {
          objc_enumerationMutation(v7);
        }
        uint64_t v12 = *(void *)(*((void *)&v20 + 1) + 8 * i);
        id v13 = [ICKeyValuePair alloc];
        uint64_t v14 = [v5 objectForKeyedSubscript:v12];
        long long v15 = [v14 debugDescription];
        long long v16 = [(ICKeyValuePair *)v13 initWithKey:v12 value:v15];
        [v2 addObject:v16];
      }
      id v9 = [v7 countByEnumeratingWithState:&v20 objects:v24 count:16];
    }
    while (v9);
  }

  id v17 = [v2 copy];

  return v17;
}

void sub_100137E04(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = os_log_create("com.apple.notes", "LaunchTask");
  uint64_t v5 = v4;
  if (v3)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1004DD4A4(a1, (uint64_t)v3, v5);
    }
  }
  else
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG)) {
      sub_1004DD428(a1, v5);
    }

    uint64_t v5 = +[NSNumber numberWithInteger:11];
    +[ICSettingsUtilities setObject:v5 forKey:kICSearchIndexingVersionKey];
  }

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

void sub_10013810C(uint64_t a1)
{
  id v2 = [ICMoveDecisionController alloc];
  id v3 = [*(id *)(a1 + 32) note];
  uint64_t v10 = v3;
  id v4 = +[NSArray arrayWithObjects:&v10 count:1];
  uint64_t v5 = [*(id *)(a1 + 32) presentingViewController];
  id v6 = [(ICMoveDecisionController *)v2 initWithSourceObjects:v4 presentingViewController:v5];

  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_10013824C;
  void v8[3] = &unk_100627A30;
  id v7 = *(void **)(a1 + 40);
  void v8[4] = *(void *)(a1 + 32);
  id v9 = v7;
  [(ICMoveDecisionController *)v6 performDecisionWithCompletion:v8];
}

void sub_10013824C(uint64_t a1, void *a2)
{
  id v6 = a2;
  [*(id *)(a1 + 32) activityDidFinish:1];
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3)
  {
    BOOL v4 = [v6 count] != 0;
    uint64_t v5 = [*(id *)(a1 + 32) activityType];
    (*(void (**)(uint64_t, BOOL, void *))(v3 + 16))(v3, v4, v5);
  }
}

void sub_100138724()
{
}

id sub_100138738()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)qword_1006AA340;
  uint64_t v7 = qword_1006AA340;
  if (!qword_1006AA340)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    _DWORD v3[2] = sub_1001392F8;
    v3[3] = &unk_1006265A8;
    void v3[4] = &v4;
    sub_1001392F8((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_100138804(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1001389F4()
{
}

void sub_1001391FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a2 == 1)
  {
    id v11 = objc_begin_catch(exception_object);
    NSLog(@"Exception raised when attempting to refresh notes for %@: %@");

    objc_end_catch();
    JUMPOUT(0x1001391ACLL);
  }
  _Unwind_Resume(exception_object);
}

Class sub_1001392F8(uint64_t a1)
{
  v4[0] = 0;
  if (!qword_1006AA348)
  {
    v4[1] = _NSConcreteStackBlock;
    void v4[2] = 3221225472;
    v4[3] = sub_10013943C;
    void v4[4] = &unk_100627688;
    void v4[5] = v4;
    long long v5 = off_10062ADA0;
    uint64_t v6 = 0;
    qword_1006AA348 = _sl_dlopen();
    id v2 = (void *)v4[0];
    if (!qword_1006AA348)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("DADConnection");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    id v2 = (void *)sub_1004DA1F0();
LABEL_8:
    free(v2);
  }
  qword_1006AA340 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_10013943C()
{
  uint64_t result = _sl_dlopen();
  qword_1006AA348 = result;
  return result;
}

NSString *__cdecl sub_100139594(id a1, unint64_t a2, unint64_t a3)
{
  long long v5 = +[NSBundle mainBundle];
  uint64_t v6 = [v5 localizedStringForKey:@"Importing %lu of %lu Notes" value:&stru_10063F3D8 table:0];

  uint64_t v7 = +[NSString localizedStringWithFormat:](NSString, "localizedStringWithFormat:", v6, a2, a3);

  return (NSString *)v7;
}

void sub_100139900(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100139918(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100139928(uint64_t a1)
{
}

void sub_100139930(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(a1 + 32);
  id v4 = a2;
  long long v5 = [v3 archiveImporter];
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v7 = [*(id *)(a1 + 48) objectID];
  uint64_t v8 = *(void *)(*(void *)(a1 + 56) + 8);
  id obj = *(id *)(v8 + 40);
  [v5 importArchiveAtURL:v6 intoNoteContainerWithID:v7 progress:v4 error:&obj];

  objc_storeStrong((id *)(v8 + 40), obj);
}

id sub_1001399D4(uint64_t a1, void *a2)
{
  if (([a2 isCancelled] & 1) != 0
    || !*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40))
  {
    uint64_t v3 = +[ICAttachmentPreviewGenerator sharedGenerator];
    [v3 generatePreviewsIfNeeded];
  }
  else
  {
    [*(id *)(a1 + 32) showError:];
  }
  id v4 = [*(id *)(a1 + 32) completion];

  if (v4)
  {
    long long v5 = [*(id *)(a1 + 32) completion];
    v5[2](v5, *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40));
  }
  uint64_t v6 = *(void **)(a1 + 32);

  return [v6 setCompletion:0];
}

uint64_t sub_100139CD4()
{
  return 4;
}

objc_class *sub_100139CDC()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes32FolderComposerFilterCellMentions____lazy_storage___menu;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC11MobileNotes32FolderComposerFilterCellMentions____lazy_storage___menu);
  if (v2)
  {
    uint64_t v3 = *(objc_class **)(v0 + OBJC_IVAR____TtC11MobileNotes32FolderComposerFilterCellMentions____lazy_storage___menu);
  }
  else
  {
    uint64_t v4 = v0;
    sub_100031418(0, (unint64_t *)&unk_1006A4D40);
    sub_10002F214(&qword_10069BA00);
    uint64_t preferredElementSize = swift_allocObject();
    *(_OWORD *)(preferredElementSize + 16) = xmmword_100524CD0;
    *(void *)(preferredElementSize + 32) = sub_10013A258();
    *(void *)(preferredElementSize + 40) = sub_10013A3C4();
    *(void *)(preferredElementSize + 48) = sub_10013A528();
    *(void *)(preferredElementSize + 56) = sub_10013A6A4();
    specialized Array._endMutation()();
    v6._countAndFlagsBits = 0;
    v6._object = (void *)0xE000000000000000;
    v14.value.super.Class isa = 0;
    v14.is_nil = 0;
    Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v6, (Swift::String_optional)0, v14, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)preferredElementSize, (Swift::OpaquePointer)preferredElementSize).super.super.isa;
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_100524CE0;
    *(void *)(v8 + 32) = sub_10013A054();
    *(void *)(v8 + 40) = isa;
    specialized Array._endMutation()();
    v9._countAndFlagsBits = 0;
    v9._object = (void *)0xE000000000000000;
    v15.value.super.Class isa = 0;
    v15.is_nil = 0;
    v10.super.super.Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v9, (Swift::String_optional)0, v15, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v8, (Swift::OpaquePointer)v8).super.super.isa;
    id v11 = *(void **)(v0 + v1);
    *(UIMenu *)(v4 + v1) = v10;
    uint64_t v3 = v10.super.super.isa;

    id v2 = 0;
  }
  id v12 = v2;
  return v3;
}

void sub_100139E5C()
{
  uint64_t v1 = (void *)sub_10013A054();
  uint64_t v2 = OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection;
  BOOL v3 = 1;
  if (*(void *)(v0 + OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection))
  {
    self;
    if (swift_dynamicCastObjCClass()) {
      BOOL v3 = 0;
    }
  }
  [v1 setState:v3];

  id v4 = sub_10013A258();
  BOOL v6 = 0;
  if (*(void *)(v0 + v2))
  {
    self;
    long long v5 = (void *)swift_dynamicCastObjCClass();
    if (v5)
    {
      if ([v5 selectionType] == (id)1) {
        BOOL v6 = 1;
      }
    }
  }
  [v4 setState:v6];

  id v7 = sub_10013A3C4();
  BOOL v9 = 0;
  if (*(void *)(v0 + v2))
  {
    self;
    uint64_t v8 = (void *)swift_dynamicCastObjCClass();
    if (v8)
    {
      if (![v8 selectionType]) {
        BOOL v9 = 1;
      }
    }
  }
  [v7 setState:v9];

  id v10 = sub_10013A528();
  BOOL v12 = 0;
  if (*(void *)(v0 + v2))
  {
    self;
    id v11 = (void *)swift_dynamicCastObjCClass();
    if (v11)
    {
      if ([v11 selectionType] == (id)2) {
        BOOL v12 = 1;
      }
    }
  }
  [v10 setState:v12];

  id v15 = sub_10013A6A4();
  BOOL v14 = 0;
  if (*(void *)(v0 + v2))
  {
    self;
    id v13 = (void *)swift_dynamicCastObjCClass();
    if (v13)
    {
      if ([v13 selectionType] == (id)3) {
        BOOL v14 = 1;
      }
    }
  }
  [v15 setState:v14];
}

id sub_10013A054()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes32FolderComposerFilterCellMentions____lazy_storage___menuActionOff;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11MobileNotes32FolderComposerFilterCellMentions____lazy_storage___menuActionOff];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC11MobileNotes32FolderComposerFilterCellMentions____lazy_storage___menuActionOff];
  }
  else
  {
    id v4 = v0;
    sub_100031418(0, (unint64_t *)&unk_10069B9F0);
    id v5 = [self mainBundle];
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [v5 localizedStringForKey:v6 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(swift_allocObject() + 16) = v0;
    uint64_t v8 = v0;
    BOOL v9 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    id v10 = *(void **)&v0[v1];
    *(void *)&v4[v1] = v9;
    id v3 = v9;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

void sub_10013A1BC(uint64_t a1, char *a2)
{
  id v3 = *(void **)&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection];
  *(void *)&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection] = 0;

  [a2 setNeedsUpdateConfiguration];
  sub_100139E5C();
  id v4 = *(void (**)(uint64_t))&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelectionDidChange];
  if (v4)
  {
    uint64_t v5 = swift_retain();
    v4(v5);
    sub_10002E70C((uint64_t)v4);
  }
}

id sub_10013A258()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes32FolderComposerFilterCellMentions____lazy_storage___menuActionAnyone;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11MobileNotes32FolderComposerFilterCellMentions____lazy_storage___menuActionAnyone];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC11MobileNotes32FolderComposerFilterCellMentions____lazy_storage___menuActionAnyone];
  }
  else
  {
    id v4 = v0;
    sub_100031418(0, (unint64_t *)&unk_10069B9F0);
    id v5 = [self mainBundle];
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [v5 localizedStringForKey:v6 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(swift_allocObject() + 16) = v0;
    uint64_t v8 = v0;
    BOOL v9 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    id v10 = *(void **)&v0[v1];
    *(void *)&v4[v1] = v9;
    id v3 = v9;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

id sub_10013A3C4()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes32FolderComposerFilterCellMentions____lazy_storage___menuActionMe;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11MobileNotes32FolderComposerFilterCellMentions____lazy_storage___menuActionMe];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC11MobileNotes32FolderComposerFilterCellMentions____lazy_storage___menuActionMe];
  }
  else
  {
    id v4 = v0;
    sub_100031418(0, (unint64_t *)&unk_10069B9F0);
    id v5 = [self mainBundle];
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [v5 localizedStringForKey:v6 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(swift_allocObject() + 16) = v0;
    uint64_t v8 = v0;
    BOOL v9 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    id v10 = *(void **)&v0[v1];
    *(void *)&v4[v1] = v9;
    id v3 = v9;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

id sub_10013A528()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes32FolderComposerFilterCellMentions____lazy_storage___menuActionSpecificUsers;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11MobileNotes32FolderComposerFilterCellMentions____lazy_storage___menuActionSpecificUsers];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC11MobileNotes32FolderComposerFilterCellMentions____lazy_storage___menuActionSpecificUsers];
  }
  else
  {
    id v4 = v0;
    sub_100031418(0, (unint64_t *)&unk_10069B9F0);
    id v5 = [self mainBundle];
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [v5 localizedStringForKey:v6 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(swift_allocObject() + 16) = v0;
    uint64_t v8 = v0;
    BOOL v9 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    id v10 = *(void **)&v0[v1];
    *(void *)&v4[v1] = v9;
    id v3 = v9;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

id sub_10013A6A4()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes32FolderComposerFilterCellMentions____lazy_storage___menuActionNone;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11MobileNotes32FolderComposerFilterCellMentions____lazy_storage___menuActionNone];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC11MobileNotes32FolderComposerFilterCellMentions____lazy_storage___menuActionNone];
  }
  else
  {
    id v4 = v0;
    sub_100031418(0, (unint64_t *)&unk_10069B9F0);
    id v5 = [self mainBundle];
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [v5 localizedStringForKey:v6 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(swift_allocObject() + 16) = v0;
    uint64_t v8 = v0;
    BOOL v9 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    id v10 = *(void **)&v0[v1];
    *(void *)&v4[v1] = v9;
    id v3 = v9;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

uint64_t sub_10013A80C(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
  {
    id v4 = [self sharedContext];
    if (v4)
    {
      id v5 = v4;
      id v6 = [v4 managedObjectContext];

      if (v6)
      {
        id v7 = *(void **)&v2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_accountObjectID];
        if (v7)
        {
          id v8 = objc_allocWithZone((Class)ICMentionsFilterTypeSelection);
          id v9 = v7;
          id v10 = [v8 initWithManagedObjectContext:v6 accountObjectID:v9 selectionType:a1 joinOperator:a1 == 2];
          id v11 = *(void **)&v2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection];
          *(void *)&v2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection] = v10;
          id v12 = v10;

          [v2 setNeedsUpdateConfiguration];
          goto LABEL_8;
        }
      }
    }
  }
  BOOL v14 = *(void **)&v2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection];
  *(void *)&v2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection] = 0;

  id v13 = [v2 setNeedsUpdateConfiguration];
LABEL_8:
  uint64_t result = sub_100139E5C(v13);
  long long v16 = *(void (**)(uint64_t))&v2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelectionDidChange];
  if (v16)
  {
    uint64_t v17 = swift_retain();
    v16(v17);
    return sub_10002E70C((uint64_t)v16);
  }
  return result;
}

id sub_10013AA5C(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes32FolderComposerFilterCellMentions____lazy_storage___menu] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes32FolderComposerFilterCellMentions____lazy_storage___menuActionOff] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes32FolderComposerFilterCellMentions____lazy_storage___menuActionAnyone] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes32FolderComposerFilterCellMentions____lazy_storage___menuActionMe] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes32FolderComposerFilterCellMentions____lazy_storage___menuActionSpecificUsers] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes32FolderComposerFilterCellMentions____lazy_storage___menuActionNone] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for FolderComposerFilterCellMentions();
  [super initWithCoder:a1];

  return v3;
}

void sub_10013AB1C()
{
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11MobileNotes32FolderComposerFilterCellMentions____lazy_storage___menuActionOff));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11MobileNotes32FolderComposerFilterCellMentions____lazy_storage___menuActionAnyone));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11MobileNotes32FolderComposerFilterCellMentions____lazy_storage___menuActionMe));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11MobileNotes32FolderComposerFilterCellMentions____lazy_storage___menuActionSpecificUsers));
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC11MobileNotes32FolderComposerFilterCellMentions____lazy_storage___menuActionNone);
}

id sub_10013AB9C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FolderComposerFilterCellMentions();
  return [super dealloc];
}

objc_class *sub_10013AC5C()
{
  return sub_100139CDC();
}

void sub_10013AC80()
{
}

uint64_t variable initialization expression of OpenAccountIntent._target()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v32 = *(void *)(v0 - 8);
  uint64_t v33 = v0;
  __chkstk_darwin(v0);
  unsigned __int8 v31 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v30 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v29 = (char *)&v25 - v5;
  uint64_t v6 = sub_10002F214((uint64_t *)&unk_10069B110);
  __chkstk_darwin(v6 - 8);
  uint64_t v28 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v8 - 8);
  long long v26 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Locale();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = type metadata accessor for LocalizedStringResource();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v27 = sub_10002F214((uint64_t *)&unk_10069B120);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v18 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  id v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v19(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v19(v13, v18, v10);
  long long v20 = v26;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
  uint64_t v21 = type metadata accessor for AccountEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v28, 1, 1, v21);
  uint64_t v22 = type metadata accessor for IntentDialog();
  long long v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(v29, 1, 1, v22);
  v23(v30, 1, 1, v22);
  (*(void (**)(char *, void, uint64_t))(v32 + 104))(v31, enum case for InputConnectionBehavior.default(_:), v33);
  sub_100157A14(&qword_1006A2940, (void (*)(uint64_t))type metadata accessor for AccountEntity);
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

uint64_t variable initialization expression of SetChecklistItemsCheckedIntentv1._loggingConfiguration()
{
  return sub_1001560F8((uint64_t *)&unk_10069B130);
}

uint64_t variable initialization expression of SetChecklistItemsCheckedIntentv1._context()
{
  return sub_1001560F8((uint64_t *)&unk_10069CE60);
}

uint64_t variable initialization expression of RemoveTagsFromNotesIntent._notes()
{
  return sub_100149360((uint64_t)"Parameter title for Remove Tags from Notes intent", 49, 0xD000000000000028, 0x8000000100549300);
}

uint64_t variable initialization expression of RemoveTagsFromNotesIntent._tags()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  long long v26 = (char *)v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v25 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  long long v24 = (char *)v22 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  long long v23 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  v22[1] = sub_10002F214((uint64_t *)&unk_10069B150);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  uint64_t v18 = v23;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  uint64_t v29 = 0;
  uint64_t v19 = type metadata accessor for IntentDialog();
  long long v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v24, 1, 1, v19);
  v20(v25, 1, 1, v19);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, enum case for InputConnectionBehavior.default(_:), v28);
  sub_100157A14((unint64_t *)&unk_1006A3B60, (void (*)(uint64_t))type metadata accessor for TagEntity);
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

uint64_t variable initialization expression of FastSync.LeaveActivityAction.isFinished()
{
  return 0;
}

uint64_t variable initialization expression of DeleteChecklistItemsIntent._entities()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  long long v26 = (char *)v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v25 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  long long v24 = (char *)v22 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  long long v23 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  v22[1] = sub_10002F214((uint64_t *)&unk_10069B160);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  uint64_t v18 = v23;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  uint64_t v29 = 0;
  uint64_t v19 = type metadata accessor for IntentDialog();
  long long v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v24, 1, 1, v19);
  v20(v25, 1, 1, v19);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, enum case for InputConnectionBehavior.default(_:), v28);
  sub_100157A14(qword_1006A4EE0, (void (*)(uint64_t))type metadata accessor for ChecklistItemEntity);
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

uint64_t variable initialization expression of AppendToNoteIntent._entity()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v32 = *(void *)(v0 - 8);
  uint64_t v33 = v0;
  __chkstk_darwin(v0);
  unsigned __int8 v31 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v30 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v29 = (char *)&v25 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069B1D0);
  __chkstk_darwin(v6 - 8);
  uint64_t v28 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v8 - 8);
  long long v26 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Locale();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = type metadata accessor for LocalizedStringResource();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v27 = sub_10002F214(&qword_10069B1D8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v18 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v19(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v19(v13, v18, v10);
  long long v20 = v26;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
  uint64_t v21 = type metadata accessor for NoteEntity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v28, 1, 1, v21);
  uint64_t v22 = type metadata accessor for IntentDialog();
  long long v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(v29, 1, 1, v22);
  v23(v30, 1, 1, v22);
  (*(void (**)(char *, void, uint64_t))(v32 + 104))(v31, enum case for InputConnectionBehavior.default(_:), v33);
  sub_100157A14((unint64_t *)&qword_10069B1E0, (void (*)(uint64_t))type metadata accessor for NoteEntity);
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

uint64_t variable initialization expression of AppendToNoteIntent._text()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  long long v26 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  __chkstk_darwin(v2 - 8);
  uint64_t v25 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214((uint64_t *)&unk_10069CE50);
  __chkstk_darwin(v4 - 8);
  long long v24 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  long long v23 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v22 = sub_10002F214((uint64_t *)&unk_10069B1F0);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  uint64_t v18 = v23;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  uint64_t v19 = type metadata accessor for AttributedString();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v24, 1, 1, v19);
  uint64_t v20 = type metadata accessor for IntentDialog();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v25, 1, 1, v20);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, enum case for InputConnectionBehavior.default(_:), v28);
  return IntentParameter<>.init(title:description:default:requestValueDialog:inputConnectionBehavior:)();
}

uint64_t variable initialization expression of TableEntity._title()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v6 - 8);
  sub_10002F214((uint64_t *)&unk_10069EE20);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  return EntityProperty<>.init(title:)();
}

uint64_t variable initialization expression of AddTagsToNotesIntent._notes()
{
  return sub_100149360((uint64_t)"Parameter title for notes to add tags to", 40, 0xD000000000000024, 0x8000000100549580);
}

uint64_t variable initialization expression of AddTagsToNotesIntent._tags()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  long long v26 = (char *)v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v25 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  long long v24 = (char *)v22 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  long long v23 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  v22[1] = sub_10002F214((uint64_t *)&unk_10069B150);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  uint64_t v18 = v23;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  uint64_t v29 = 0;
  uint64_t v19 = type metadata accessor for IntentDialog();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v24, 1, 1, v19);
  v20(v25, 1, 1, v19);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, enum case for InputConnectionBehavior.default(_:), v28);
  sub_100157A14((unint64_t *)&unk_1006A3B60, (void (*)(uint64_t))type metadata accessor for TagEntity);
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

uint64_t variable initialization expression of SetChecklistItemsCheckedIntentv1._entities()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  long long v26 = (char *)v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v25 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  long long v24 = (char *)v22 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  long long v23 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  v22[1] = sub_10002F214((uint64_t *)&unk_10069B160);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  uint64_t v18 = v23;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  uint64_t v29 = 0;
  uint64_t v19 = type metadata accessor for IntentDialog();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v24, 1, 1, v19);
  v20(v25, 1, 1, v19);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, enum case for InputConnectionBehavior.default(_:), v28);
  sub_100157A14(qword_1006A4EE0, (void (*)(uint64_t))type metadata accessor for ChecklistItemEntity);
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

uint64_t variable initialization expression of SetChecklistItemsCheckedIntentv1._changeOperation()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  long long v26 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v25 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  long long v24 = (char *)&v22 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  long long v23 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v22 = sub_10002F214((uint64_t *)&unk_10069B200);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  uint64_t v18 = v23;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  char v29 = 2;
  uint64_t v19 = type metadata accessor for IntentDialog();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v24, 1, 1, v19);
  v20(v25, 1, 1, v19);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, enum case for InputConnectionBehavior.default(_:), v28);
  sub_100157A5C();
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
}

uint64_t variable initialization expression of LockNoteIntent._target()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v35 = *(void *)(v0 - 8);
  uint64_t v36 = v0;
  __chkstk_darwin(v0);
  id v34 = (char *)v30 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v33 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v32 = (char *)v30 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069B1D0);
  __chkstk_darwin(v6 - 8);
  unsigned __int8 v31 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v8 - 8);
  v30[0] = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Locale();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = type metadata accessor for LocalizedStringResource();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  v30[1] = sub_10002F214(&qword_10069B210);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v18 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v19(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v19(v13, v18, v10);
  uint64_t v20 = v30[0];
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
  uint64_t v21 = type metadata accessor for NoteEntity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v31, 1, 1, v21);
  uint64_t v22 = type metadata accessor for IntentDialog();
  long long v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(v32, 1, 1, v22);
  v23(v33, 1, 1, v22);
  uint64_t v37 = sub_10023F2DC();
  uint64_t v38 = v24;
  uint64_t v39 = v25;
  uint64x2_t v27 = (uint64x2_t)vdupq_n_s64(v26);
  char v40 = v26 & 1;
  int16x8_t v28 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v27, (uint64x2_t)xmmword_100524D00), (int32x4_t)vshlq_u64(v27, (uint64x2_t)xmmword_100524CF0));
  *(int8x8_t *)v28.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v28), (int8x8_t)0x1000100010001);
  unsigned __int32 v41 = vmovn_s16(v28).u32[0];
  (*(void (**)(char *, void, uint64_t))(v35 + 104))(v34, enum case for InputConnectionBehavior.default(_:), v36);
  sub_1001579C0();
  return IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:query:)();
}

uint64_t variable initialization expression of TagCell.$__lazy_storage_$_imageViewBackgroundColor()
{
  return 0;
}

uint64_t variable initialization expression of ChangeFolderViewSettingIntent._changeOperation()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v30 = *(void *)(v0 - 8);
  uint64_t v31 = v0;
  __chkstk_darwin(v0);
  char v29 = (char *)v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  int16x8_t v28 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64x2_t v27 = (char *)v25 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069B218);
  __chkstk_darwin(v6 - 8);
  unint64_t v26 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v8 - 8);
  v25[0] = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Locale();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = type metadata accessor for LocalizedStringResource();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  v25[1] = sub_10002F214(&qword_10069B220);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v18 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v19(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v19(v13, v18, v10);
  uint64_t v20 = v25[0];
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
  uint64_t v21 = type metadata accessor for ChangeOperation();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v26, 1, 1, v21);
  uint64_t v22 = type metadata accessor for IntentDialog();
  long long v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(v27, 1, 1, v22);
  v23(v28, 1, 1, v22);
  (*(void (**)(char *, void, uint64_t))(v30 + 104))(v29, enum case for InputConnectionBehavior.default(_:), v31);
  sub_100157A14(&qword_10069B228, (void (*)(uint64_t))&type metadata accessor for ChangeOperation);
  dispatch thunk of static CaseIterable.allCases.getter();
  sub_100157A14(&qword_10069B230, (void (*)(uint64_t))&type metadata accessor for ChangeOperation);
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
}

uint64_t variable initialization expression of ChangeFolderViewSettingIntent._setting()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  unint64_t v26 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v25 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v24 = (char *)&v22 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  long long v23 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v22 = sub_10002F214(&qword_10069B238);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  uint64_t v18 = v23;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  char v29 = 2;
  uint64_t v19 = type metadata accessor for IntentDialog();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v24, 1, 1, v19);
  v20(v25, 1, 1, v19);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, enum case for InputConnectionBehavior.default(_:), v28);
  sub_100157B04();
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
}

uint64_t variable initialization expression of CreateNoteIntent._name()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  unint64_t v26 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  __chkstk_darwin(v2 - 8);
  uint64_t v25 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214((uint64_t *)&unk_10069E280);
  __chkstk_darwin(v4 - 8);
  uint64_t v24 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  long long v23 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v22 = sub_10002F214((uint64_t *)&unk_10069B250);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  uint64_t v18 = v23;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  uint64_t v19 = type metadata accessor for String.IntentInputOptions();
  uint64_t v29 = 0;
  uint64_t v30 = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v24, 1, 1, v19);
  uint64_t v20 = type metadata accessor for IntentDialog();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v25, 1, 1, v20);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, enum case for InputConnectionBehavior.default(_:), v28);
  return IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)();
}

uint64_t variable initialization expression of CreateNoteIntent._contents()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  unint64_t v26 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  __chkstk_darwin(v2 - 8);
  uint64_t v25 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214((uint64_t *)&unk_10069CE50);
  __chkstk_darwin(v4 - 8);
  uint64_t v24 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  long long v23 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v22 = sub_10002F214((uint64_t *)&unk_10069E290);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  uint64_t v18 = v23;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  uint64_t v19 = type metadata accessor for AttributedString();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v24, 1, 1, v19);
  uint64_t v20 = type metadata accessor for IntentDialog();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v25, 1, 1, v20);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, enum case for InputConnectionBehavior.default(_:), v28);
  return IntentParameter<>.init(title:description:default:requestValueDialog:inputConnectionBehavior:)();
}

uint64_t variable initialization expression of CreateNoteIntent._folder()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v37 = *(void *)(v0 - 8);
  uint64_t v38 = v0;
  __chkstk_darwin(v0);
  uint64_t v36 = (char *)&v30 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v35 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  id v34 = (char *)&v30 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069B260);
  __chkstk_darwin(v6 - 8);
  uint64_t v33 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v8 - 8);
  uint64_t v31 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Locale();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = type metadata accessor for LocalizedStringResource();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v32 = sub_10002F214(&qword_10069B268);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v18 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v19(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v19(v13, v18, v10);
  uint64_t v20 = v31;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
  uint64_t v21 = type metadata accessor for FolderEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v33, 1, 1, v21);
  uint64_t v22 = type metadata accessor for IntentDialog();
  long long v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(v34, 1, 1, v22);
  v23(v35, 1, 1, v22);
  uint64_t v39 = sub_10017952C();
  uint64_t v40 = v24;
  char v41 = v25 & 1;
  char v42 = v26 & 1;
  char v43 = v27 & 1;
  char v44 = v28 & 1;
  (*(void (**)(char *, void, uint64_t))(v37 + 104))(v36, enum case for InputConnectionBehavior.default(_:), v38);
  sub_100157B58();
  return IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:query:)();
}

uint64_t variable initialization expression of ICNavigableQueue.accessQueue()
{
  uint64_t v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v5 - 8);
  sub_100031418(0, (unint64_t *)&qword_10069D2D0);
  static DispatchQoS.unspecified.getter();
  v7[1] = &_swiftEmptyArrayStorage;
  sub_100157A14((unint64_t *)&qword_10069B280, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10002F214((uint64_t *)&unk_10069E6B0);
  sub_100157BAC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  return OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
}

uint64_t variable initialization expression of ICNavigableQueue.maxCount()
{
  return 50;
}

uint64_t variable initialization expression of ICNavigableQueue._deferredItem@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56))(a2, 1, 1, a1);
}

uint64_t variable initialization expression of TagCell.displayText()
{
  return 0;
}

uint64_t variable initialization expression of ICNavigableQueue.currentIndex()
{
  return 0;
}

uint64_t variable initialization expression of AttachmentEntity.fileURL@<X0>(uint64_t a1@<X8>)
{
  return sub_100153834((uint64_t (*)(void))&type metadata accessor for URL, a1);
}

uint64_t variable initialization expression of AttachmentEntity._title()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v6 - 8);
  sub_10002F214((uint64_t *)&unk_10069EE20);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  return EntityProperty<>.init(title:)();
}

uint64_t variable initialization expression of CreateTagIntent._name()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  char v26 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  __chkstk_darwin(v2 - 8);
  char v25 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214((uint64_t *)&unk_10069E280);
  __chkstk_darwin(v4 - 8);
  uint64_t v24 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  long long v23 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v22 = sub_10002F214((uint64_t *)&unk_10069B250);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  uint64_t v18 = v23;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  uint64_t v19 = type metadata accessor for String.IntentInputOptions();
  uint64_t v29 = 0;
  uint64_t v30 = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v24, 1, 1, v19);
  uint64_t v20 = type metadata accessor for IntentDialog();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v25, 1, 1, v20);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, enum case for InputConnectionBehavior.default(_:), v28);
  return IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)();
}

uint64_t variable initialization expression of CreateChecklistItemIntent._name()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  char v26 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  __chkstk_darwin(v2 - 8);
  char v25 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214((uint64_t *)&unk_10069E280);
  __chkstk_darwin(v4 - 8);
  uint64_t v24 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  long long v23 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v22 = sub_10002F214((uint64_t *)&unk_10069B250);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  uint64_t v18 = v23;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  uint64_t v19 = type metadata accessor for String.IntentInputOptions();
  uint64_t v29 = 0;
  uint64_t v30 = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v24, 1, 1, v19);
  uint64_t v20 = type metadata accessor for IntentDialog();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v25, 1, 1, v20);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, enum case for InputConnectionBehavior.default(_:), v28);
  return IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)();
}

uint64_t variable initialization expression of CreateChecklistItemIntent._noteEntity()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v35 = *(void *)(v0 - 8);
  uint64_t v36 = v0;
  __chkstk_darwin(v0);
  id v34 = (char *)v30 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v33 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v32 = (char *)v30 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069B1D0);
  __chkstk_darwin(v6 - 8);
  uint64_t v31 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v8 - 8);
  v30[0] = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Locale();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = type metadata accessor for LocalizedStringResource();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  v30[1] = sub_10002F214(&qword_10069B210);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v18 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v19(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v19(v13, v18, v10);
  uint64_t v20 = v30[0];
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
  uint64_t v21 = type metadata accessor for NoteEntity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v31, 1, 1, v21);
  uint64_t v22 = type metadata accessor for IntentDialog();
  long long v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(v32, 1, 1, v22);
  v23(v33, 1, 1, v22);
  uint64_t v37 = sub_10023ED64();
  uint64_t v38 = v24;
  uint64_t v39 = v25;
  uint64x2_t v27 = (uint64x2_t)vdupq_n_s64(v26);
  char v40 = v26 & 1;
  int16x8_t v28 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v27, (uint64x2_t)xmmword_100524D00), (int32x4_t)vshlq_u64(v27, (uint64x2_t)xmmword_100524CF0));
  *(int8x8_t *)v28.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v28), (int8x8_t)0x1000100010001);
  unsigned __int32 v41 = vmovn_s16(v28).u32[0];
  (*(void (**)(char *, void, uint64_t))(v35 + 104))(v34, enum case for InputConnectionBehavior.default(_:), v36);
  sub_1001579C0();
  return IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:query:)();
}

uint64_t variable initialization expression of CreateChecklistItemIntent.insertionRange()
{
  return 0;
}

uint64_t variable initialization expression of ChangeTagSelectionIntent._includedTags()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  unint64_t v26 = (char *)v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v25 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v24 = (char *)v22 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  long long v23 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  v22[1] = sub_10002F214((uint64_t *)&unk_10069B150);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  uint64_t v18 = v23;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  uint64_t v29 = 0;
  uint64_t v19 = type metadata accessor for IntentDialog();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v24, 1, 1, v19);
  v20(v25, 1, 1, v19);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, enum case for InputConnectionBehavior.default(_:), v28);
  sub_100157A14((unint64_t *)&unk_1006A3B60, (void (*)(uint64_t))type metadata accessor for TagEntity);
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

uint64_t variable initialization expression of ChangeTagSelectionIntent._excludedTags()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  unint64_t v26 = (char *)v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v25 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v24 = (char *)v22 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  long long v23 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  v22[1] = sub_10002F214((uint64_t *)&unk_10069B150);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  uint64_t v18 = v23;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  uint64_t v29 = 0;
  uint64_t v19 = type metadata accessor for IntentDialog();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v24, 1, 1, v19);
  v20(v25, 1, 1, v19);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, enum case for InputConnectionBehavior.default(_:), v28);
  sub_100157A14((unint64_t *)&unk_1006A3B60, (void (*)(uint64_t))type metadata accessor for TagEntity);
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

uint64_t variable initialization expression of ChangeTagSelectionIntent._selectionOperator()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  unint64_t v26 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v25 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v24 = (char *)&v22 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  long long v23 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v22 = sub_10002F214(&qword_10069B298);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  uint64_t v18 = v23;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  char v29 = 2;
  uint64_t v19 = type metadata accessor for IntentDialog();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v24, 1, 1, v19);
  v20(v25, 1, 1, v19);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, enum case for InputConnectionBehavior.default(_:), v28);
  sub_100157C08();
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
}

uint64_t variable initialization expression of VisibleNotesQuery._addOrRemoveNoteLockIntent()
{
  return sub_10014B96C(&qword_10069B2A8);
}

uint64_t sub_100141B0C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t variable initialization expression of AsyncChannel.Iterator.active()
{
  return 1;
}

uint64_t variable initialization expression of AddLinkAttachmentIntent._name()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  unint64_t v26 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  __chkstk_darwin(v2 - 8);
  uint64_t v25 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214((uint64_t *)&unk_10069E280);
  __chkstk_darwin(v4 - 8);
  uint64_t v24 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  long long v23 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v22 = sub_10002F214((uint64_t *)&unk_10069B250);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  uint64_t v18 = v23;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  uint64_t v19 = type metadata accessor for String.IntentInputOptions();
  uint64_t v29 = 0;
  uint64_t v30 = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v24, 1, 1, v19);
  uint64_t v20 = type metadata accessor for IntentDialog();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v25, 1, 1, v20);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, enum case for InputConnectionBehavior.default(_:), v28);
  return IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)();
}

uint64_t variable initialization expression of AddLinkAttachmentIntent._url()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  unint64_t v26 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  __chkstk_darwin(v2 - 8);
  uint64_t v25 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214(&qword_10069B310);
  __chkstk_darwin(v4 - 8);
  uint64_t v24 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  long long v23 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v22 = sub_10002F214(&qword_10069B318);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  uint64_t v18 = v23;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  uint64_t v19 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v24, 1, 1, v19);
  uint64_t v20 = type metadata accessor for IntentDialog();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v25, 1, 1, v20);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, enum case for InputConnectionBehavior.default(_:), v28);
  return IntentParameter<>.init(title:description:default:requestValueDialog:inputConnectionBehavior:)();
}

uint64_t variable initialization expression of AddLinkAttachmentIntent._note()
{
  return sub_100152268((uint64_t)"Parameter title for Add Link intent", 35, 0xD000000000000025, 0x8000000100549E30);
}

uint64_t variable initialization expression of OpenFolderIntent._target()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v32 = *(void *)(v0 - 8);
  uint64_t v33 = v0;
  __chkstk_darwin(v0);
  uint64_t v31 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v30 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v29 = (char *)&v25 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069B260);
  __chkstk_darwin(v6 - 8);
  uint64_t v28 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v8 - 8);
  unint64_t v26 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Locale();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = type metadata accessor for LocalizedStringResource();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v27 = sub_10002F214((uint64_t *)&unk_10069B320);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v18 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v19(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v19(v13, v18, v10);
  uint64_t v20 = v26;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
  uint64_t v21 = type metadata accessor for FolderEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v28, 1, 1, v21);
  uint64_t v22 = type metadata accessor for IntentDialog();
  long long v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(v29, 1, 1, v22);
  v23(v30, 1, 1, v22);
  (*(void (**)(char *, void, uint64_t))(v32 + 104))(v31, enum case for InputConnectionBehavior.default(_:), v33);
  sub_100157A14((unint64_t *)&qword_1006A3B50, (void (*)(uint64_t))type metadata accessor for FolderEntity);
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

uint64_t variable initialization expression of ApplyFormattingIntent._bold()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  unint64_t v26 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v25 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v24 = (char *)&v22 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  long long v23 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v22 = sub_10002F214(&qword_10069B330);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  uint64_t v18 = v23;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  char v29 = 3;
  uint64_t v19 = type metadata accessor for IntentDialog();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v24, 1, 1, v19);
  v20(v25, 1, 1, v19);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, enum case for InputConnectionBehavior.default(_:), v28);
  sub_100157FB4();
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
}

uint64_t variable initialization expression of ApplyFormattingIntent._italic()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  unint64_t v26 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v25 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v24 = (char *)&v22 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  long long v23 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v22 = sub_10002F214(&qword_10069B330);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  uint64_t v18 = v23;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  char v29 = 3;
  uint64_t v19 = type metadata accessor for IntentDialog();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v24, 1, 1, v19);
  v20(v25, 1, 1, v19);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, enum case for InputConnectionBehavior.default(_:), v28);
  sub_100157FB4();
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
}

uint64_t variable initialization expression of ApplyFormattingIntent._underline()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  unint64_t v26 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v25 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v24 = (char *)&v22 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  long long v23 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v22 = sub_10002F214(&qword_10069B330);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  uint64_t v18 = v23;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  char v29 = 3;
  uint64_t v19 = type metadata accessor for IntentDialog();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v24, 1, 1, v19);
  v20(v25, 1, 1, v19);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, enum case for InputConnectionBehavior.default(_:), v28);
  sub_100157FB4();
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
}

uint64_t variable initialization expression of ApplyFormattingIntent._strikethrough()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  unint64_t v26 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v25 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v24 = (char *)&v22 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  long long v23 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v22 = sub_10002F214(&qword_10069B330);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  uint64_t v18 = v23;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  char v29 = 3;
  uint64_t v19 = type metadata accessor for IntentDialog();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v24, 1, 1, v19);
  v20(v25, 1, 1, v19);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, enum case for InputConnectionBehavior.default(_:), v28);
  sub_100157FB4();
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
}

uint64_t variable initialization expression of SetParagraphStyleIntent._paragraphStyle()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  unint64_t v26 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v25 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v24 = (char *)&v22 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  long long v23 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v22 = sub_10002F214(&qword_10069B340);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  uint64_t v18 = v23;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  char v29 = 10;
  uint64_t v19 = type metadata accessor for IntentDialog();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v24, 1, 1, v19);
  v20(v25, 1, 1, v19);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, enum case for InputConnectionBehavior.default(_:), v28);
  sub_100158008();
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
}

void *variable initialization expression of RealtimeCollaborationSelectionController.activeParticipants()
{
  return &_swiftEmptySetSingleton;
}

id variable initialization expression of TagCreateOrRenameAlertController.workerContext()
{
  return sub_10014B294((SEL *)&selRef_workerManagedObjectContext);
}

id variable initialization expression of TagCreateOrRenameAlertController.viewContext()
{
  return sub_10014B294((SEL *)&selRef_managedObjectContext);
}

uint64_t variable initialization expression of TagCreateOrRenameAlertController.renameMethod()
{
  return 0;
}

uint64_t variable initialization expression of ICArchiveExporterConfiguration.exportsAttributions()
{
  return ICInternalSettingsIsAlexandriaDemoModeEnabled();
}

double variable initialization expression of ICArchiveImporter.Configuration.timestampOffset()
{
  return 0.0;
}

unint64_t variable initialization expression of ICArchiveImporter.errors()
{
  return sub_10016807C((uint64_t)&_swiftEmptyArrayStorage);
}

uint64_t variable initialization expression of ICArchiveImporter.saveBatchSize()
{
  return 32;
}

double variable initialization expression of ICArchiveImporter.didReceiveMemoryWarningObserver@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t variable initialization expression of InsertMentionIntent._target()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v35 = *(void *)(v0 - 8);
  uint64_t v36 = v0;
  __chkstk_darwin(v0);
  id v34 = (char *)v30 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v33 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v32 = (char *)v30 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069B1D0);
  __chkstk_darwin(v6 - 8);
  uint64_t v31 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v8 - 8);
  v30[0] = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Locale();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = type metadata accessor for LocalizedStringResource();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  v30[1] = sub_10002F214(&qword_10069B210);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v18 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v19(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v19(v13, v18, v10);
  uint64_t v20 = v30[0];
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
  uint64_t v21 = type metadata accessor for NoteEntity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v31, 1, 1, v21);
  uint64_t v22 = type metadata accessor for IntentDialog();
  long long v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(v32, 1, 1, v22);
  v23(v33, 1, 1, v22);
  uint64_t v37 = sub_10023ED64();
  uint64_t v38 = v24;
  uint64_t v39 = v25;
  uint64x2_t v27 = (uint64x2_t)vdupq_n_s64(v26);
  char v40 = v26 & 1;
  int16x8_t v28 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v27, (uint64x2_t)xmmword_100524D00), (int32x4_t)vshlq_u64(v27, (uint64x2_t)xmmword_100524CF0));
  *(int8x8_t *)v28.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v28), (int8x8_t)0x1000100010001);
  unsigned __int32 v41 = vmovn_s16(v28).u32[0];
  (*(void (**)(char *, void, uint64_t))(v35 + 104))(v34, enum case for InputConnectionBehavior.default(_:), v36);
  sub_1001579C0();
  return IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:query:)();
}

uint64_t variable initialization expression of InsertMentionIntent._mentionText()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  unint64_t v26 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  __chkstk_darwin(v2 - 8);
  uint64_t v25 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214((uint64_t *)&unk_10069E280);
  __chkstk_darwin(v4 - 8);
  uint64_t v24 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  long long v23 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v22 = sub_10002F214(&qword_10069B3B0);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  uint64_t v18 = v23;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  uint64_t v19 = type metadata accessor for String.IntentInputOptions();
  uint64_t v29 = 0;
  uint64_t v30 = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v24, 1, 1, v19);
  uint64_t v20 = type metadata accessor for IntentDialog();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v25, 1, 1, v20);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, enum case for InputConnectionBehavior.default(_:), v28);
  return IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)();
}

uint64_t variable initialization expression of RemoveLockFromNoteIntent._target()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v35 = *(void *)(v0 - 8);
  uint64_t v36 = v0;
  __chkstk_darwin(v0);
  id v34 = (char *)v30 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v33 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v32 = (char *)v30 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069B1D0);
  __chkstk_darwin(v6 - 8);
  uint64_t v31 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v8 - 8);
  v30[0] = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Locale();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = type metadata accessor for LocalizedStringResource();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  v30[1] = sub_10002F214(&qword_10069B210);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v18 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v19(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v19(v13, v18, v10);
  uint64_t v20 = v30[0];
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
  uint64_t v21 = type metadata accessor for NoteEntity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v31, 1, 1, v21);
  uint64_t v22 = type metadata accessor for IntentDialog();
  long long v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(v32, 1, 1, v22);
  v23(v33, 1, 1, v22);
  uint64_t v37 = sub_10023F838();
  uint64_t v38 = v24;
  uint64_t v39 = v25;
  uint64x2_t v27 = (uint64x2_t)vdupq_n_s64(v26);
  char v40 = v26 & 1;
  int16x8_t v28 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v27, (uint64x2_t)xmmword_100524D00), (int32x4_t)vshlq_u64(v27, (uint64x2_t)xmmword_100524CF0));
  *(int8x8_t *)v28.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v28), (int8x8_t)0x1000100010001);
  unsigned __int32 v41 = vmovn_s16(v28).u32[0];
  (*(void (**)(char *, void, uint64_t))(v35 + 104))(v34, enum case for InputConnectionBehavior.default(_:), v36);
  sub_1001579C0();
  return IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:query:)();
}

uint64_t variable initialization expression of OpenNotesViewIntent._target()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  unint64_t v26 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v25 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v24 = (char *)&v22 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  long long v23 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v22 = sub_10002F214(&qword_10069B3B8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  uint64_t v18 = v23;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  char v29 = 2;
  uint64_t v19 = type metadata accessor for IntentDialog();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v24, 1, 1, v19);
  v20(v25, 1, 1, v19);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, enum case for InputConnectionBehavior.default(_:), v28);
  sub_10015805C();
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
}

unint64_t variable initialization expression of ICArchivePreviewer.objects()
{
  return sub_100168270((uint64_t)&_swiftEmptyArrayStorage);
}

uint64_t variable initialization expression of OpenTableIntent._target()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v32 = *(void *)(v0 - 8);
  uint64_t v33 = v0;
  __chkstk_darwin(v0);
  uint64_t v31 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v30 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  char v29 = (char *)&v25 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069B3C8);
  __chkstk_darwin(v6 - 8);
  uint64_t v28 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v8 - 8);
  unint64_t v26 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Locale();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = type metadata accessor for LocalizedStringResource();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v27 = sub_10002F214((uint64_t *)&unk_10069B3D0);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v18 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v19(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v19(v13, v18, v10);
  uint64_t v20 = v26;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
  uint64_t v21 = type metadata accessor for TableEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v28, 1, 1, v21);
  uint64_t v22 = type metadata accessor for IntentDialog();
  long long v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(v29, 1, 1, v22);
  v23(v30, 1, 1, v22);
  (*(void (**)(char *, void, uint64_t))(v32 + 104))(v31, enum case for InputConnectionBehavior.default(_:), v33);
  sub_100157A14(&qword_1006A9020, (void (*)(uint64_t))type metadata accessor for TableEntity);
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

uint64_t variable initialization expression of DeleteAttachmentsIntent._entities()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  unint64_t v26 = (char *)v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v25 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v24 = (char *)v22 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  long long v23 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  v22[1] = sub_10002F214((uint64_t *)&unk_10069B3E0);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  uint64_t v18 = v23;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  uint64_t v29 = 0;
  uint64_t v19 = type metadata accessor for IntentDialog();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v24, 1, 1, v19);
  v20(v25, 1, 1, v19);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, enum case for InputConnectionBehavior.default(_:), v28);
  sub_100157A14((unint64_t *)&qword_10069EF80, (void (*)(uint64_t))type metadata accessor for AttachmentEntity);
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

uint64_t variable initialization expression of RenameFolderIntent._entity()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v37 = *(void *)(v0 - 8);
  uint64_t v38 = v0;
  __chkstk_darwin(v0);
  uint64_t v36 = (char *)&v30 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v35 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  id v34 = (char *)&v30 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069B260);
  __chkstk_darwin(v6 - 8);
  uint64_t v33 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v8 - 8);
  uint64_t v31 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Locale();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = type metadata accessor for LocalizedStringResource();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v32 = sub_10002F214((uint64_t *)&unk_10069B320);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v18 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v19(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v19(v13, v18, v10);
  uint64_t v20 = v31;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
  uint64_t v21 = type metadata accessor for FolderEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v33, 1, 1, v21);
  uint64_t v22 = type metadata accessor for IntentDialog();
  long long v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(v34, 1, 1, v22);
  v23(v35, 1, 1, v22);
  uint64_t v39 = VisibleAccountsQuery.init(requireFolderCreationSupport:)();
  uint64_t v40 = v24;
  char v41 = v25 & 1;
  char v42 = v26 & 1;
  char v43 = v27 & 1;
  char v44 = v28 & 1;
  (*(void (**)(char *, void, uint64_t))(v37 + 104))(v36, enum case for InputConnectionBehavior.default(_:), v38);
  sub_100157B58();
  return IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:query:)();
}

uint64_t variable initialization expression of RenameFolderIntent._name()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  char v26 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  __chkstk_darwin(v2 - 8);
  char v25 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214((uint64_t *)&unk_10069E280);
  __chkstk_darwin(v4 - 8);
  uint64_t v24 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  long long v23 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v22 = sub_10002F214(&qword_10069B3B0);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  uint64_t v18 = v23;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  uint64_t v19 = type metadata accessor for String.IntentInputOptions();
  uint64_t v29 = 0;
  uint64_t v30 = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v24, 1, 1, v19);
  uint64_t v20 = type metadata accessor for IntentDialog();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v25, 1, 1, v20);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, enum case for InputConnectionBehavior.default(_:), v28);
  return IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)();
}

uint64_t variable initialization expression of DeleteTablesIntent._entities()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  char v26 = (char *)v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  char v25 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v24 = (char *)v22 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  long long v23 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  v22[1] = sub_10002F214(&qword_10069B3F0);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  uint64_t v18 = v23;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  uint64_t v29 = 0;
  uint64_t v19 = type metadata accessor for IntentDialog();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v24, 1, 1, v19);
  v20(v25, 1, 1, v19);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, enum case for InputConnectionBehavior.default(_:), v28);
  sub_100157A14(&qword_1006A9020, (void (*)(uint64_t))type metadata accessor for TableEntity);
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

uint64_t variable initialization expression of CreateFolderIntent._name()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  char v26 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  __chkstk_darwin(v2 - 8);
  char v25 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214((uint64_t *)&unk_10069E280);
  __chkstk_darwin(v4 - 8);
  uint64_t v24 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  long long v23 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v22 = sub_10002F214((uint64_t *)&unk_10069B250);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  uint64_t v18 = v23;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  uint64_t v19 = type metadata accessor for String.IntentInputOptions();
  uint64_t v29 = 0;
  uint64_t v30 = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v24, 1, 1, v19);
  uint64_t v20 = type metadata accessor for IntentDialog();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v25, 1, 1, v20);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, enum case for InputConnectionBehavior.default(_:), v28);
  return IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)();
}

uint64_t variable initialization expression of CreateFolderIntent.parentAccount@<X0>(uint64_t a1@<X8>)
{
  return sub_100153834((uint64_t (*)(void))type metadata accessor for AccountEntity, a1);
}

uint64_t variable initialization expression of CreateFolderIntent.parentFolder@<X0>(uint64_t a1@<X8>)
{
  return sub_100153834((uint64_t (*)(void))type metadata accessor for FolderEntity, a1);
}

id variable initialization expression of RealtimeCollaborationController.eventReporter()
{
  type metadata accessor for RealtimeCollaborationController();
  sub_10002F214(&qword_10069B3F8);
  String.init<A>(describing:)();
  id v0 = objc_allocWithZone((Class)ICNAEventReporter);
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithSubTrackerName:v1];

  return v2;
}

uint64_t variable initialization expression of RealtimeCollaborationController.stateMachine@<X0>(uint64_t a1@<X8>)
{
  return sub_100153834((uint64_t (*)(void))type metadata accessor for FastSyncStateMachine, a1);
}

uint64_t variable initialization expression of RealtimeCollaborationController.mergeableFieldStateCache()
{
  return sub_100150054(&qword_10069B400, (uint64_t)&_swiftEmptyDictionarySingleton);
}

uint64_t variable initialization expression of RealtimeCollaborationController.contextNotifications()
{
  return sub_10014FF50(&qword_10069B408, &qword_10069B410, (uint64_t (*)(char *))sub_1001543D4);
}

uint64_t variable initialization expression of OpenTopLevelFolderIntent._target()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  char v26 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  char v25 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v24 = (char *)&v22 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  long long v23 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v22 = sub_10002F214(&qword_10069B418);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  uint64_t v18 = v23;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  char v29 = 4;
  uint64_t v19 = type metadata accessor for IntentDialog();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v24, 1, 1, v19);
  v20(v25, 1, 1, v19);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, enum case for InputConnectionBehavior.default(_:), v28);
  sub_1001580B0();
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
}

uint64_t variable initialization expression of MoveNotesToFolderIntent._container()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v37 = *(void *)(v0 - 8);
  uint64_t v38 = v0;
  __chkstk_darwin(v0);
  uint64_t v36 = (char *)&v30 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v35 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  id v34 = (char *)&v30 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069B260);
  __chkstk_darwin(v6 - 8);
  uint64_t v33 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v8 - 8);
  uint64_t v31 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Locale();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = type metadata accessor for LocalizedStringResource();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v32 = sub_10002F214((uint64_t *)&unk_10069B320);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v18 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v19(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v19(v13, v18, v10);
  uint64_t v20 = v31;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
  uint64_t v21 = type metadata accessor for FolderEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v33, 1, 1, v21);
  uint64_t v22 = type metadata accessor for IntentDialog();
  long long v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(v34, 1, 1, v22);
  v23(v35, 1, 1, v22);
  uint64_t v39 = sub_10017964C();
  uint64_t v40 = v24;
  char v41 = v25 & 1;
  char v42 = v26 & 1;
  char v43 = v27 & 1;
  char v44 = v28 & 1;
  (*(void (**)(char *, void, uint64_t))(v37 + 104))(v36, enum case for InputConnectionBehavior.default(_:), v38);
  sub_100157B58();
  return IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:query:)();
}

uint64_t variable initialization expression of MoveNotesToFolderIntent._entities()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  char v26 = (char *)v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  char v25 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v24 = (char *)v22 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  long long v23 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  v22[1] = sub_10002F214((uint64_t *)&unk_10069B140);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  uint64_t v18 = v23;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  uint64_t v29 = 0;
  uint64_t v19 = type metadata accessor for IntentDialog();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v24, 1, 1, v19);
  v20(v25, 1, 1, v19);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, enum case for InputConnectionBehavior.default(_:), v28);
  sub_100157A14((unint64_t *)&qword_10069B1E0, (void (*)(uint64_t))type metadata accessor for NoteEntity);
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

uint64_t variable initialization expression of GetLinkedNotesIntent._entity()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v32 = *(void *)(v0 - 8);
  uint64_t v33 = v0;
  __chkstk_darwin(v0);
  uint64_t v31 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v30 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v29 = (char *)&v25 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069B1D0);
  __chkstk_darwin(v6 - 8);
  uint64_t v28 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v8 - 8);
  char v26 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Locale();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = type metadata accessor for LocalizedStringResource();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v27 = sub_10002F214(&qword_10069B1D8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v18 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v19(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v19(v13, v18, v10);
  uint64_t v20 = v26;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
  uint64_t v21 = type metadata accessor for NoteEntity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v28, 1, 1, v21);
  uint64_t v22 = type metadata accessor for IntentDialog();
  long long v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(v29, 1, 1, v22);
  v23(v30, 1, 1, v22);
  (*(void (**)(char *, void, uint64_t))(v32 + 104))(v31, enum case for InputConnectionBehavior.default(_:), v33);
  sub_100157A14((unint64_t *)&qword_10069B1E0, (void (*)(uint64_t))type metadata accessor for NoteEntity);
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

uint64_t variable initialization expression of PinNotesIntent._operation()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v30 = *(void *)(v0 - 8);
  uint64_t v31 = v0;
  __chkstk_darwin(v0);
  uint64_t v29 = (char *)v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v28 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v27 = (char *)v25 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069B428);
  __chkstk_darwin(v6 - 8);
  char v26 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v8 - 8);
  v25[0] = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Locale();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = type metadata accessor for LocalizedStringResource();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  v25[1] = sub_10002F214(&qword_10069B430);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v18 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v19(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v19(v13, v18, v10);
  uint64_t v20 = v25[0];
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
  uint64_t v21 = type metadata accessor for FavoriteOperation();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v26, 1, 1, v21);
  uint64_t v22 = type metadata accessor for IntentDialog();
  long long v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(v27, 1, 1, v22);
  v23(v28, 1, 1, v22);
  (*(void (**)(char *, void, uint64_t))(v30 + 104))(v29, enum case for InputConnectionBehavior.default(_:), v31);
  sub_100157A14(&qword_10069B438, (void (*)(uint64_t))&type metadata accessor for FavoriteOperation);
  dispatch thunk of static CaseIterable.allCases.getter();
  sub_100157A14(&qword_10069B440, (void (*)(uint64_t))&type metadata accessor for FavoriteOperation);
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
}

uint64_t variable initialization expression of PinNotesIntent._entities()
{
  return sub_100149360((uint64_t)"Parameter title for Pin Notes intent", 36, 0xD000000000000029, 0x800000010054A7A0);
}

uint64_t sub_100149360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v38 = a4;
  uint64_t v35 = a2;
  uint64_t v36 = a3;
  uint64_t v34 = a1;
  uint64_t v4 = type metadata accessor for InputConnectionBehavior();
  uint64_t v41 = *(void *)(v4 - 8);
  uint64_t v42 = v4;
  __chkstk_darwin(v4);
  uint64_t v40 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v39 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v37 = (char *)&v31 - v9;
  uint64_t v10 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v10 - 8);
  uint64_t v32 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Locale();
  __chkstk_darwin(v16 - 8);
  uint64_t v17 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v17 - 8);
  uint64_t v18 = type metadata accessor for LocalizedStringResource();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v33 = sub_10002F214((uint64_t *)&unk_10069B140);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v20 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 104);
  v21(v15, enum case for LocalizedStringResource.BundleDescription.main(_:), v12);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v21(v15, v20, v12);
  uint64_t v22 = v32;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v22, 0, 1, v18);
  uint64_t v48 = 0;
  uint64_t v23 = type metadata accessor for IntentDialog();
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
  v24(v37, 1, 1, v23);
  v24(v39, 1, 1, v23);
  uint64_t v43 = sub_10023ED64();
  uint64_t v44 = v25;
  uint64_t v45 = v26;
  uint64x2_t v28 = (uint64x2_t)vdupq_n_s64(v27);
  char v46 = v27 & 1;
  int16x8_t v29 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v28, (uint64x2_t)xmmword_100524D00), (int32x4_t)vshlq_u64(v28, (uint64x2_t)xmmword_100524CF0));
  *(int8x8_t *)v29.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v29), (int8x8_t)0x1000100010001);
  unsigned __int32 v47 = vmovn_s16(v29).u32[0];
  (*(void (**)(char *, void, uint64_t))(v41 + 104))(v40, enum case for InputConnectionBehavior.default(_:), v42);
  sub_1001579C0();
  return IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:query:)();
}

uint64_t variable initialization expression of DeleteTagsIntent._entities()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  uint64_t v26 = (char *)v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v25 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v24 = (char *)v22 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  uint64_t v23 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  v22[1] = sub_10002F214((uint64_t *)&unk_10069B150);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  uint64_t v18 = v23;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  uint64_t v29 = 0;
  uint64_t v19 = type metadata accessor for IntentDialog();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v24, 1, 1, v19);
  v20(v25, 1, 1, v19);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, enum case for InputConnectionBehavior.default(_:), v28);
  sub_100157A14((unint64_t *)&unk_1006A3B60, (void (*)(uint64_t))type metadata accessor for TagEntity);
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

uint64_t variable initialization expression of OpenAttachmentIntent._target()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v32 = *(void *)(v0 - 8);
  uint64_t v33 = v0;
  __chkstk_darwin(v0);
  uint64_t v31 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v30 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v29 = (char *)&v25 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069B448);
  __chkstk_darwin(v6 - 8);
  uint64_t v28 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v8 - 8);
  uint64_t v26 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Locale();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = type metadata accessor for LocalizedStringResource();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v27 = sub_10002F214((uint64_t *)&unk_10069B450);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v18 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v19(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v19(v13, v18, v10);
  uint64_t v20 = v26;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
  uint64_t v21 = type metadata accessor for AttachmentEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v28, 1, 1, v21);
  uint64_t v22 = type metadata accessor for IntentDialog();
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(v29, 1, 1, v22);
  v23(v30, 1, 1, v22);
  (*(void (**)(char *, void, uint64_t))(v32 + 104))(v31, enum case for InputConnectionBehavior.default(_:), v33);
  sub_100157A14((unint64_t *)&qword_10069EF80, (void (*)(uint64_t))type metadata accessor for AttachmentEntity);
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

uint64_t variable initialization expression of NoteEntity._title()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v6 - 8);
  sub_10002F214((uint64_t *)&unk_10069EE20);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  return EntityProperty<>.init(title:)();
}

uint64_t variable initialization expression of NoteEntity._subtitle()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v6 - 8);
  sub_10002F214((uint64_t *)&unk_10069EE20);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  return EntityProperty<>.init(title:)();
}

uint64_t variable initialization expression of NoteEntity._contents()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v6 - 8);
  sub_10002F214((uint64_t *)&unk_1006A3B40);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  return EntityProperty<>.init(title:)();
}

uint64_t variable initialization expression of NoteEntity._folder()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v6 - 8);
  sub_10002F214((uint64_t *)&unk_10069B460);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  sub_100157A14((unint64_t *)&qword_1006A3B50, (void (*)(uint64_t))type metadata accessor for FolderEntity);
  return EntityProperty<>.init(title:)();
}

uint64_t variable initialization expression of NoteEntity._tags()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v6 - 8);
  sub_10002F214((uint64_t *)&unk_1006A0160);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  sub_100157A14((unint64_t *)&unk_1006A3B60, (void (*)(uint64_t))type metadata accessor for TagEntity);
  return EntityProperty<>.init(title:)();
}

uint64_t variable initialization expression of NoteEntity._creationDate()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v6 - 8);
  sub_10002F214(&qword_10069B470);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  return EntityProperty<>.init(title:)();
}

uint64_t variable initialization expression of NoteEntity._modificationDate()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v6 - 8);
  sub_10002F214(&qword_10069B470);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  return EntityProperty<>.init(title:)();
}

uint64_t variable initialization expression of FastSyncPresenceController.controllerPool@<X0>(uint64_t a1@<X8>)
{
  return sub_100153834(type metadata accessor for FastSyncControllerPool, a1);
}

uint64_t variable initialization expression of FastSyncPresenceController.editorActivityChanges@<X0>(uint64_t a1@<X8>)
{
  return sub_10014B1F0(&qword_10069B478, a1);
}

uint64_t variable initialization expression of FastSyncPresenceController.noteActivityShareChanges@<X0>(uint64_t a1@<X8>)
{
  return sub_10014B1F0(&qword_10069B480, a1);
}

uint64_t sub_10014B1F0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = sub_10002F214(a1);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);

  return v4(a2, 1, 1, v3);
}

id variable initialization expression of TagCreateOrRenameAlertController.sizingCell()
{
  type metadata accessor for TagCell();
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  return [v0 init];
}

id sub_10014B294(SEL *a1)
{
  id v2 = [self sharedContext];
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v2;
  id v4 = [v2 *a1];

  return v4;
}

uint64_t variable initialization expression of ChecklistItemEntity._text()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v6 - 8);
  sub_10002F214((uint64_t *)&unk_10069EE20);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  return EntityProperty<>.init(title:)();
}

uint64_t variable initialization expression of ChecklistItemEntity._checked()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v6 - 8);
  sub_10002F214(&qword_10069B488);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  return EntityProperty<>.init(title:)();
}

uint64_t variable initialization expression of ChecklistItemEntity._note()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v6 - 8);
  sub_10002F214((uint64_t *)&unk_10069B490);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  sub_100157A14((unint64_t *)&qword_10069B1E0, (void (*)(uint64_t))type metadata accessor for NoteEntity);
  return EntityProperty<>.init(title:)();
}

uint64_t variable initialization expression of VisibleChecklistItemsQuery._setChecklistItemsCheckedIntent()
{
  return sub_10014B96C((uint64_t *)&unk_1006A4F70);
}

uint64_t sub_10014B96C(uint64_t *a1)
{
  return IntentParameterDependency.__allocating_init<A, B>(_:)();
}

uint64_t sub_10014B9A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t variable initialization expression of DeleteFoldersIntent._entities()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  uint64_t v26 = (char *)v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v25 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v24 = (char *)v22 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  uint64_t v23 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  v22[1] = sub_10002F214((uint64_t *)&unk_10069B4A0);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  uint64_t v18 = v23;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  uint64_t v29 = 0;
  uint64_t v19 = type metadata accessor for IntentDialog();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v24, 1, 1, v19);
  v20(v25, 1, 1, v19);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, enum case for InputConnectionBehavior.default(_:), v28);
  sub_100157A14((unint64_t *)&qword_1006A3B50, (void (*)(uint64_t))type metadata accessor for FolderEntity);
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

uint64_t variable initialization expression of SetAttachmentSizeIntent._target()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v34 = *(void *)(v0 - 8);
  uint64_t v35 = v0;
  __chkstk_darwin(v0);
  uint64_t v33 = (char *)&v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v32 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v31 = (char *)&v27 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069B448);
  __chkstk_darwin(v6 - 8);
  uint64_t v30 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v8 - 8);
  uint64_t v28 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Locale();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = type metadata accessor for LocalizedStringResource();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v29 = sub_10002F214((uint64_t *)&unk_10069B450);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v18 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v19(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v19(v13, v18, v10);
  uint64_t v20 = v28;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
  uint64_t v21 = type metadata accessor for AttachmentEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v30, 1, 1, v21);
  uint64_t v22 = type metadata accessor for IntentDialog();
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(v31, 1, 1, v22);
  v23(v32, 1, 1, v22);
  uint64_t v36 = VisibleAccountsQuery.init(requireFolderCreationSupport:)();
  uint64_t v37 = v24;
  char v38 = v25 & 1;
  (*(void (**)(char *, void, uint64_t))(v34 + 104))(v33, enum case for InputConnectionBehavior.default(_:), v35);
  sub_100158104();
  return IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:query:)();
}

uint64_t variable initialization expression of SetAttachmentSizeIntent._attachmentSize()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  uint64_t v26 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  char v25 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v24 = (char *)&v22 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  uint64_t v23 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v22 = sub_10002F214((uint64_t *)&unk_10069B4B0);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  uint64_t v18 = v23;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  char v29 = 4;
  uint64_t v19 = type metadata accessor for IntentDialog();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v24, 1, 1, v19);
  v20(v25, 1, 1, v19);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, enum case for InputConnectionBehavior.default(_:), v28);
  sub_100158158();
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
}

uint64_t variable initialization expression of ReplaceSelectionIntent._text()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  uint64_t v26 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  __chkstk_darwin(v2 - 8);
  char v25 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214((uint64_t *)&unk_10069CE50);
  __chkstk_darwin(v4 - 8);
  uint64_t v24 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  uint64_t v23 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v22 = sub_10002F214((uint64_t *)&unk_10069B1F0);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  uint64_t v18 = v23;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  uint64_t v19 = type metadata accessor for AttributedString();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v24, 1, 1, v19);
  uint64_t v20 = type metadata accessor for IntentDialog();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v25, 1, 1, v20);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, enum case for InputConnectionBehavior.default(_:), v28);
  return IntentParameter<>.init(title:description:default:requestValueDialog:inputConnectionBehavior:)();
}

uint64_t variable initialization expression of InsertNoteLinkIntent._linkedNote()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v35 = *(void *)(v0 - 8);
  uint64_t v36 = v0;
  __chkstk_darwin(v0);
  uint64_t v34 = (char *)v30 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v33 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v32 = (char *)v30 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069B1D0);
  __chkstk_darwin(v6 - 8);
  uint64_t v31 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v8 - 8);
  v30[0] = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Locale();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = type metadata accessor for LocalizedStringResource();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  v30[1] = sub_10002F214(&qword_10069B1D8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v18 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v19(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v19(v13, v18, v10);
  uint64_t v20 = v30[0];
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
  uint64_t v21 = type metadata accessor for NoteEntity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v31, 1, 1, v21);
  uint64_t v22 = type metadata accessor for IntentDialog();
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(v32, 1, 1, v22);
  v23(v33, 1, 1, v22);
  uint64_t v37 = sub_10023ED64();
  uint64_t v38 = v24;
  uint64_t v39 = v25;
  uint64x2_t v27 = (uint64x2_t)vdupq_n_s64(v26);
  char v40 = v26 & 1;
  int16x8_t v28 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v27, (uint64x2_t)xmmword_100524D00), (int32x4_t)vshlq_u64(v27, (uint64x2_t)xmmword_100524CF0));
  *(int8x8_t *)v28.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v28), (int8x8_t)0x1000100010001);
  unsigned __int32 v41 = vmovn_s16(v28).u32[0];
  (*(void (**)(char *, void, uint64_t))(v35 + 104))(v34, enum case for InputConnectionBehavior.default(_:), v36);
  sub_1001579C0();
  return IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:query:)();
}

uint64_t variable initialization expression of InsertNoteLinkIntent._target()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v35 = *(void *)(v0 - 8);
  uint64_t v36 = v0;
  __chkstk_darwin(v0);
  uint64_t v34 = (char *)v30 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v33 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v32 = (char *)v30 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069B1D0);
  __chkstk_darwin(v6 - 8);
  uint64_t v31 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v8 - 8);
  v30[0] = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Locale();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = type metadata accessor for LocalizedStringResource();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  v30[1] = sub_10002F214(&qword_10069B210);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v18 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v19(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v19(v13, v18, v10);
  uint64_t v20 = v30[0];
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
  uint64_t v21 = type metadata accessor for NoteEntity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v31, 1, 1, v21);
  uint64_t v22 = type metadata accessor for IntentDialog();
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(v32, 1, 1, v22);
  v23(v33, 1, 1, v22);
  uint64_t v37 = sub_10023ED64();
  uint64_t v38 = v24;
  uint64_t v39 = v25;
  uint64x2_t v27 = (uint64x2_t)vdupq_n_s64(v26);
  char v40 = v26 & 1;
  int16x8_t v28 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v27, (uint64x2_t)xmmword_100524D00), (int32x4_t)vshlq_u64(v27, (uint64x2_t)xmmword_100524CF0));
  *(int8x8_t *)v28.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v28), (int8x8_t)0x1000100010001);
  unsigned __int32 v41 = vmovn_s16(v28).u32[0];
  (*(void (**)(char *, void, uint64_t))(v35 + 104))(v34, enum case for InputConnectionBehavior.default(_:), v36);
  sub_1001579C0();
  return IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:query:)();
}

uint64_t variable initialization expression of InsertNoteLinkIntent._useNoteTitleAsName()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  unint64_t v26 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  __chkstk_darwin(v2 - 8);
  uint64_t v25 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214(&qword_10069B4C0);
  __chkstk_darwin(v4 - 8);
  uint64_t v24 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  uint64_t v23 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v22 = sub_10002F214(&qword_10069B4C8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  uint64_t v18 = v23;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  char v29 = 1;
  uint64_t v19 = type metadata accessor for Bool.IntentDisplayName();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v24, 1, 1, v19);
  uint64_t v20 = type metadata accessor for IntentDialog();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v25, 1, 1, v20);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, enum case for InputConnectionBehavior.default(_:), v28);
  return IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)();
}

uint64_t variable initialization expression of ICArchiveCreator.softwareIdentifier()
{
  id v0 = [self mainBundle];
  id v1 = [v0 bundleIdentifier];

  if (!v1) {
    return 0;
  }
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v2;
}

uint64_t variable initialization expression of ICArchiveCreator.softwareVersionName()
{
  id v0 = [self mainBundle];
  id v1 = [v0 infoDictionary];

  if (!v1)
  {
    long long v7 = 0u;
    long long v8 = 0u;
    goto LABEL_11;
  }
  uint64_t v2 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  if (!*(void *)(v2 + 16) || (unint64_t v3 = sub_1002B63D4(0xD00000000000001ALL, 0x800000010054AD30), (v4 & 1) == 0))
  {
    long long v7 = 0u;
    long long v8 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  sub_100032E28(*(void *)(v2 + 56) + 32 * v3, (uint64_t)&v7);
  swift_bridgeObjectRelease();
  if (!*((void *)&v8 + 1))
  {
LABEL_11:
    sub_10002B754((uint64_t)&v7, &qword_10069B4D0);
    return 0;
  }
  if (swift_dynamicCast()) {
    return v6;
  }
  else {
    return 0;
  }
}

CFStringRef variable initialization expression of ICArchiveCreator.softwareVersion()
{
  id v0 = [self mainBundle];
  id v1 = [v0 infoDictionary];

  if (!v1)
  {
    long long v9 = 0u;
    long long v10 = 0u;
    goto LABEL_12;
  }
  uint64_t v2 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  CFStringRef result = kCFBundleVersionKey;
  if (!kCFBundleVersionKey)
  {
    __break(1u);
    return result;
  }
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!*(void *)(v2 + 16) || (unint64_t v6 = sub_1002B63D4(v4, v5), (v7 & 1) == 0))
  {
    long long v9 = 0u;
    long long v10 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  sub_100032E28(*(void *)(v2 + 56) + 32 * v6, (uint64_t)&v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v10 + 1))
  {
LABEL_12:
    sub_10002B754((uint64_t)&v9, &qword_10069B4D0);
    return 0;
  }
  if (swift_dynamicCast()) {
    return (CFStringRef)v8;
  }
  else {
    return 0;
  }
}

uint64_t variable initialization expression of OpenChecklistItemIntent._target()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v32 = *(void *)(v0 - 8);
  uint64_t v33 = v0;
  __chkstk_darwin(v0);
  uint64_t v31 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v30 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  char v29 = (char *)&v25 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069B4D8);
  __chkstk_darwin(v6 - 8);
  uint64_t v28 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v8 - 8);
  unint64_t v26 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Locale();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = type metadata accessor for LocalizedStringResource();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v27 = sub_10002F214(&qword_10069B4E0);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v18 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v19(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v19(v13, v18, v10);
  uint64_t v20 = v26;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
  uint64_t v21 = type metadata accessor for ChecklistItemEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v28, 1, 1, v21);
  uint64_t v22 = type metadata accessor for IntentDialog();
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(v29, 1, 1, v22);
  v23(v30, 1, 1, v22);
  (*(void (**)(char *, void, uint64_t))(v32 + 104))(v31, enum case for InputConnectionBehavior.default(_:), v33);
  sub_100157A14(qword_1006A4EE0, (void (*)(uint64_t))type metadata accessor for ChecklistItemEntity);
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

uint64_t variable initialization expression of DeleteNotesIntent._entities()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  unint64_t v26 = (char *)v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v25 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v24 = (char *)v22 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  uint64_t v23 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  v22[1] = sub_10002F214((uint64_t *)&unk_10069B140);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  uint64_t v18 = v23;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  uint64_t v29 = 0;
  uint64_t v19 = type metadata accessor for IntentDialog();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v24, 1, 1, v19);
  v20(v25, 1, 1, v19);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, enum case for InputConnectionBehavior.default(_:), v28);
  sub_100157A14((unint64_t *)&qword_10069B1E0, (void (*)(uint64_t))type metadata accessor for NoteEntity);
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

uint64_t variable initialization expression of CreateTableIntent._name()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  unint64_t v26 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  __chkstk_darwin(v2 - 8);
  uint64_t v25 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214((uint64_t *)&unk_10069E280);
  __chkstk_darwin(v4 - 8);
  uint64_t v24 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  uint64_t v23 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v22 = sub_10002F214((uint64_t *)&unk_10069B250);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  uint64_t v18 = v23;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  uint64_t v19 = type metadata accessor for String.IntentInputOptions();
  uint64_t v29 = 0;
  uint64_t v30 = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v24, 1, 1, v19);
  uint64_t v20 = type metadata accessor for IntentDialog();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v25, 1, 1, v20);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, enum case for InputConnectionBehavior.default(_:), v28);
  return IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)();
}

uint64_t variable initialization expression of CreateTableIntent._csvString()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  unint64_t v26 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  __chkstk_darwin(v2 - 8);
  uint64_t v25 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214((uint64_t *)&unk_10069E280);
  __chkstk_darwin(v4 - 8);
  uint64_t v24 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  uint64_t v23 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v22 = sub_10002F214((uint64_t *)&unk_10069B250);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  uint64_t v18 = v23;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  uint64_t v19 = type metadata accessor for String.IntentInputOptions();
  uint64_t v29 = 0;
  uint64_t v30 = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v24, 1, 1, v19);
  uint64_t v20 = type metadata accessor for IntentDialog();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v25, 1, 1, v20);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, enum case for InputConnectionBehavior.default(_:), v28);
  return IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)();
}

uint64_t variable initialization expression of CreateTableIntent._note()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v35 = *(void *)(v0 - 8);
  uint64_t v36 = v0;
  __chkstk_darwin(v0);
  uint64_t v34 = (char *)v30 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v33 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v32 = (char *)v30 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069B1D0);
  __chkstk_darwin(v6 - 8);
  uint64_t v31 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v8 - 8);
  v30[0] = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Locale();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = type metadata accessor for LocalizedStringResource();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  v30[1] = sub_10002F214(&qword_10069B1D8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v18 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v19(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v19(v13, v18, v10);
  uint64_t v20 = v30[0];
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
  uint64_t v21 = type metadata accessor for NoteEntity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v31, 1, 1, v21);
  uint64_t v22 = type metadata accessor for IntentDialog();
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(v32, 1, 1, v22);
  v23(v33, 1, 1, v22);
  uint64_t v37 = sub_10023ED64();
  uint64_t v38 = v24;
  uint64_t v39 = v25;
  uint64x2_t v27 = (uint64x2_t)vdupq_n_s64(v26);
  char v40 = v26 & 1;
  int16x8_t v28 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v27, (uint64x2_t)xmmword_100524D00), (int32x4_t)vshlq_u64(v27, (uint64x2_t)xmmword_100524CF0));
  *(int8x8_t *)v28.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v28), (int8x8_t)0x1000100010001);
  unsigned __int32 v41 = vmovn_s16(v28).u32[0];
  (*(void (**)(char *, void, uint64_t))(v35 + 104))(v34, enum case for InputConnectionBehavior.default(_:), v36);
  sub_1001579C0();
  return IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:query:)();
}

uint64_t variable initialization expression of ICArchiveExporterConfiguration.creator@<X0>(uint64_t a1@<X8>)
{
  if (qword_10069AFF8 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1006CE130;
  *(void *)a1 = static ICArchiveCreator.default;
  *(_OWORD *)(a1 + 8) = *(long long *)((char *)&static ICArchiveCreator.default + 8);
  *(_OWORD *)(a1 + 24) = unk_1006CE120;
  *(void *)(a1 + 40) = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

void variable initialization expression of RealtimeCollaborationPaperKitController.activeParticipants()
{
  if (((unint64_t)&_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
  {
    if (_CocoaArrayWrapper.endIndex.getter()) {
      sub_1001581C8((unint64_t)&_swiftEmptyArrayStorage, (uint64_t *)&unk_10069BAD0, &qword_1006A4840);
    }
  }
}

uint64_t variable initialization expression of RealtimeCollaborationMessageController.cloudKitRecords()
{
  return sub_10014FD40(&qword_10069B4E8, (uint64_t *)&unk_10069B4F0, (uint64_t (*)(char *))sub_100154D50);
}

uint64_t variable initialization expression of RealtimeCollaborationMessageController.selectionMessages()
{
  return sub_10014FD40((uint64_t *)&unk_1006A7400, (uint64_t *)&unk_10069B500, (uint64_t (*)(char *))sub_100154A28);
}

uint64_t sub_10014FD40(uint64_t *a1, uint64_t *a2, uint64_t (*a3)(char *))
{
  uint64_t v5 = sub_10002F214(a1);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v15 - v10;
  (*(void (**)(char *, void, uint64_t))(v6 + 104))((char *)&v15 - v10, enum case for AsyncStream.Continuation.BufferingPolicy.unbounded<A>(_:), v5);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v12(v9, v11, v5);
  sub_10002F214(a2);
  swift_allocObject();
  uint64_t v13 = a3(v9);
  v12(v9, v11, v5);
  swift_allocObject();
  a3(v9);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  return v13;
}

uint64_t variable initialization expression of RealtimeCollaborationMessageController.paperKitInbox()
{
  sub_10002F214((uint64_t *)&unk_1006A7410);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 16) = &_swiftEmptyArrayStorage;
  return result;
}

uint64_t variable initialization expression of RealtimeCollaborationMessageController.paperKitOutbox()
{
  return sub_10014FF50(&qword_10069B510, &qword_10069B518, (uint64_t (*)(char *))sub_1001546FC);
}

uint64_t sub_10014FF50(uint64_t *a1, uint64_t *a2, uint64_t (*a3)(char *))
{
  uint64_t v5 = sub_10002F214(a1);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void))(v8 + 104))(v7, enum case for AsyncStream.Continuation.BufferingPolicy.unbounded<A>(_:));
  sub_10002F214(a2);
  swift_allocObject();
  return a3(v7);
}

void *variable initialization expression of RealtimeCollaborationMessageController.subtasks()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t variable initialization expression of RealtimeCollaborationMessageController.nonFatalErrorCount()
{
  return sub_100150054(&qword_10069B520, 0);
}

uint64_t sub_100150054(uint64_t *a1, uint64_t a2)
{
  sub_10002F214(a1);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 16) = a2;
  return result;
}

uint64_t variable initialization expression of OpenTagIntent._target()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v32 = *(void *)(v0 - 8);
  uint64_t v33 = v0;
  __chkstk_darwin(v0);
  uint64_t v31 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v30 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v29 = (char *)&v25 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069B528);
  __chkstk_darwin(v6 - 8);
  int16x8_t v28 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v8 - 8);
  unint64_t v26 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Locale();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = type metadata accessor for LocalizedStringResource();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v27 = sub_10002F214(&qword_10069B530);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v18 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v19(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v19(v13, v18, v10);
  uint64_t v20 = v26;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
  uint64_t v21 = type metadata accessor for TagEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v28, 1, 1, v21);
  uint64_t v22 = type metadata accessor for IntentDialog();
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(v29, 1, 1, v22);
  v23(v30, 1, 1, v22);
  (*(void (**)(char *, void, uint64_t))(v32 + 104))(v31, enum case for InputConnectionBehavior.default(_:), v33);
  sub_100157A14((unint64_t *)&unk_1006A3B60, (void (*)(uint64_t))type metadata accessor for TagEntity);
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

uint64_t variable initialization expression of OpenNoteIntent._target()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v32 = *(void *)(v0 - 8);
  uint64_t v33 = v0;
  __chkstk_darwin(v0);
  uint64_t v31 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v30 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v29 = (char *)&v25 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069B1D0);
  __chkstk_darwin(v6 - 8);
  int16x8_t v28 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v8 - 8);
  unint64_t v26 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Locale();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = type metadata accessor for LocalizedStringResource();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v27 = sub_10002F214(&qword_10069B1D8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v18 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v19(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v19(v13, v18, v10);
  uint64_t v20 = v26;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
  uint64_t v21 = type metadata accessor for NoteEntity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v28, 1, 1, v21);
  uint64_t v22 = type metadata accessor for IntentDialog();
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(v29, 1, 1, v22);
  v23(v30, 1, 1, v22);
  (*(void (**)(char *, void, uint64_t))(v32 + 104))(v31, enum case for InputConnectionBehavior.default(_:), v33);
  sub_100157A14((unint64_t *)&qword_10069B1E0, (void (*)(uint64_t))type metadata accessor for NoteEntity);
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

uint64_t variable initialization expression of CreateAttachmentIntent._name()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  unint64_t v26 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  __chkstk_darwin(v2 - 8);
  uint64_t v25 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214((uint64_t *)&unk_10069E280);
  __chkstk_darwin(v4 - 8);
  uint64_t v24 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  uint64_t v23 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v22 = sub_10002F214((uint64_t *)&unk_10069B250);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  uint64_t v18 = v23;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  uint64_t v19 = type metadata accessor for String.IntentInputOptions();
  uint64_t v29 = 0;
  uint64_t v30 = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v24, 1, 1, v19);
  uint64_t v20 = type metadata accessor for IntentDialog();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v25, 1, 1, v20);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, enum case for InputConnectionBehavior.default(_:), v28);
  return IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)();
}

uint64_t variable initialization expression of CreateAttachmentIntent._file()
{
  return sub_100151CD0((uint64_t)"Parameter title for Create Attachment intent", 44, 0xD00000000000001FLL, 0x800000010054B070);
}

uint64_t variable initialization expression of CreateAttachmentIntent._url()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  unint64_t v26 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  __chkstk_darwin(v2 - 8);
  uint64_t v25 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214(&qword_10069B310);
  __chkstk_darwin(v4 - 8);
  uint64_t v24 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  uint64_t v23 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v22 = sub_10002F214(&qword_10069B318);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  uint64_t v18 = v23;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  uint64_t v19 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v24, 1, 1, v19);
  uint64_t v20 = type metadata accessor for IntentDialog();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v25, 1, 1, v20);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, enum case for InputConnectionBehavior.default(_:), v28);
  return IntentParameter<>.init(title:description:default:requestValueDialog:inputConnectionBehavior:)();
}

uint64_t variable initialization expression of CreateAttachmentIntent._note()
{
  return sub_100152268((uint64_t)"Parameter title for Create attachment intent", 44, 0xD000000000000020, 0x800000010054B100);
}

id variable initialization expression of TagCell.imageView()
{
  id v0 = objc_allocWithZone((Class)UIImageView);

  return [v0 initWithFrame:0.0, 0.0, 0.0, 0.0];
}

id variable initialization expression of TagCell.textLabel()
{
  id v0 = objc_allocWithZone((Class)UILabel);

  return [v0 initWithFrame:0.0, 0.0, 0.0, 0.0];
}

id variable initialization expression of TagCell.unemphasizedBackgroundColor()
{
  id v0 = [self tertiarySystemFillColor];

  return v0;
}

id variable initialization expression of TagCell.excludedBackgroundColor()
{
  id v0 = [self systemBackgroundColor];

  return v0;
}

id variable initialization expression of TagCell.emphasizedTextColor()
{
  id v0 = [self whiteColor];

  return v0;
}

id variable initialization expression of ContentInsetViewController.configuration()
{
  long long v6 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.top;
  CGFloat bottom = NSDirectionalEdgeInsetsZero.bottom;
  CGFloat trailing = NSDirectionalEdgeInsetsZero.trailing;
  uint64_t v2 = (objc_class *)type metadata accessor for ContentInsetViewController.Configuration();
  uint64_t v3 = objc_allocWithZone(v2);
  uint64_t v4 = (CGFloat *)&v3[OBJC_IVAR___ICContentInsetViewControllerConfiguration_insets];
  *(_OWORD *)uint64_t v4 = v6;
  void v4[2] = bottom;
  v4[3] = trailing;
  v3[OBJC_IVAR___ICContentInsetViewControllerConfiguration_usesSafeAreaLayoutGuide] = 0;
  *(void *)&v3[OBJC_IVAR___ICContentInsetViewControllerConfiguration_cornerRadius] = 0;
  v7.receiver = v3;
  v7.super_class = v2;
  return [super init];
}

uint64_t variable initialization expression of AddFileAttachmentIntent._name()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  unint64_t v26 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  __chkstk_darwin(v2 - 8);
  uint64_t v25 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214((uint64_t *)&unk_10069E280);
  __chkstk_darwin(v4 - 8);
  uint64_t v24 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  uint64_t v23 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v22 = sub_10002F214((uint64_t *)&unk_10069B250);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  uint64_t v18 = v23;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  uint64_t v19 = type metadata accessor for String.IntentInputOptions();
  uint64_t v29 = 0;
  uint64_t v30 = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v24, 1, 1, v19);
  uint64_t v20 = type metadata accessor for IntentDialog();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v25, 1, 1, v20);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, enum case for InputConnectionBehavior.default(_:), v28);
  return IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)();
}

uint64_t variable initialization expression of AddFileAttachmentIntent._file()
{
  return sub_100151CD0((uint64_t)"Parameter title for Add File intent", 35, 0xD000000000000029, 0x800000010054B160);
}

uint64_t sub_100151CD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v30 = a3;
  uint64_t v31 = a4;
  uint64_t v28 = a1;
  uint64_t v29 = a2;
  uint64_t v4 = type metadata accessor for InputConnectionBehavior();
  uint64_t v34 = *(void *)(v4 - 8);
  uint64_t v35 = v4;
  __chkstk_darwin(v4);
  uint64_t v33 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  __chkstk_darwin(v6 - 8);
  uint64_t v32 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214(&qword_10069B538);
  __chkstk_darwin(v8 - 8);
  uint64_t v27 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v10 - 8);
  v26[0] = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Locale();
  __chkstk_darwin(v16 - 8);
  uint64_t v17 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v17 - 8);
  uint64_t v18 = type metadata accessor for LocalizedStringResource();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  v26[1] = sub_10002F214(&qword_10069B540);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v20 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 104);
  v21(v15, enum case for LocalizedStringResource.BundleDescription.main(_:), v12);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v21(v15, v20, v12);
  uint64_t v22 = v26[0];
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v19 + 56))(v22, 0, 1, v18);
  uint64_t v23 = type metadata accessor for IntentFile();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v27, 1, 1, v23);
  uint64_t v24 = type metadata accessor for IntentDialog();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v32, 1, 1, v24);
  sub_10002F214(&qword_10069B548);
  type metadata accessor for UTType();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100524D10;
  static UTType.item.getter();
  (*(void (**)(char *, void, uint64_t))(v34 + 104))(v33, enum case for InputConnectionBehavior.default(_:), v35);
  return IntentParameter<>.init(title:description:default:supportedContentTypes:requestValueDialog:inputConnectionBehavior:)();
}

uint64_t variable initialization expression of AddFileAttachmentIntent._note()
{
  return sub_100152268((uint64_t)"Parameter title for Add File intent", 35, 0xD00000000000002CLL, 0x800000010054B190);
}

uint64_t sub_100152268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v38 = a3;
  uint64_t v39 = a4;
  uint64_t v36 = a1;
  uint64_t v37 = a2;
  uint64_t v4 = type metadata accessor for InputConnectionBehavior();
  uint64_t v43 = *(void *)(v4 - 8);
  uint64_t v44 = v4;
  __chkstk_darwin(v4);
  uint64_t v42 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  unsigned __int32 v41 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  char v40 = (char *)v34 - v9;
  uint64_t v10 = sub_10002F214(&qword_10069B1D0);
  __chkstk_darwin(v10 - 8);
  uint64_t v35 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v12 - 8);
  v34[0] = (char *)v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for Locale();
  __chkstk_darwin(v18 - 8);
  uint64_t v19 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v19 - 8);
  uint64_t v20 = type metadata accessor for LocalizedStringResource();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  v34[1] = sub_10002F214(&qword_10069B1D8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v22 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 104);
  v23(v17, enum case for LocalizedStringResource.BundleDescription.main(_:), v14);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v23(v17, v22, v14);
  uint64_t v24 = v34[0];
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v21 + 56))(v24, 0, 1, v20);
  uint64_t v25 = type metadata accessor for NoteEntity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v35, 1, 1, v25);
  uint64_t v26 = type metadata accessor for IntentDialog();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
  v27(v40, 1, 1, v26);
  v27(v41, 1, 1, v26);
  uint64_t v45 = sub_10023F448();
  uint64_t v46 = v28;
  uint64_t v47 = v29;
  uint64x2_t v31 = (uint64x2_t)vdupq_n_s64(v30);
  char v48 = v30 & 1;
  int16x8_t v32 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v31, (uint64x2_t)xmmword_100524D00), (int32x4_t)vshlq_u64(v31, (uint64x2_t)xmmword_100524CF0));
  *(int8x8_t *)v32.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v32), (int8x8_t)0x1000100010001);
  unsigned __int32 v49 = vmovn_s16(v32).u32[0];
  (*(void (**)(char *, void, uint64_t))(v43 + 104))(v42, enum case for InputConnectionBehavior.default(_:), v44);
  sub_1001579C0();
  return IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:query:)();
}

uint64_t variable initialization expression of InsertAllMentionIntent._target()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v35 = *(void *)(v0 - 8);
  uint64_t v36 = v0;
  __chkstk_darwin(v0);
  uint64_t v34 = (char *)v30 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v33 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  int16x8_t v32 = (char *)v30 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069B1D0);
  __chkstk_darwin(v6 - 8);
  uint64x2_t v31 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v8 - 8);
  v30[0] = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Locale();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = type metadata accessor for LocalizedStringResource();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  v30[1] = sub_10002F214(&qword_10069B210);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v18 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v19(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v19(v13, v18, v10);
  uint64_t v20 = v30[0];
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
  uint64_t v21 = type metadata accessor for NoteEntity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v31, 1, 1, v21);
  uint64_t v22 = type metadata accessor for IntentDialog();
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(v32, 1, 1, v22);
  v23(v33, 1, 1, v22);
  uint64_t v37 = sub_10023ED64();
  uint64_t v38 = v24;
  uint64_t v39 = v25;
  uint64x2_t v27 = (uint64x2_t)vdupq_n_s64(v26);
  char v40 = v26 & 1;
  int16x8_t v28 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v27, (uint64x2_t)xmmword_100524D00), (int32x4_t)vshlq_u64(v27, (uint64x2_t)xmmword_100524CF0));
  *(int8x8_t *)v28.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v28), (int8x8_t)0x1000100010001);
  unsigned __int32 v41 = vmovn_s16(v28).u32[0];
  (*(void (**)(char *, void, uint64_t))(v35 + 104))(v34, enum case for InputConnectionBehavior.default(_:), v36);
  sub_1001579C0();
  return IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:query:)();
}

uint64_t variable initialization expression of AddOrRemoveNoteLockIntent._operation()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  unint64_t v26 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v25 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v24 = (char *)&v22 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  uint64_t v23 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v22 = sub_10002F214(&qword_10069B550);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  uint64_t v18 = v23;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  char v29 = 3;
  uint64_t v19 = type metadata accessor for IntentDialog();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v24, 1, 1, v19);
  v20(v25, 1, 1, v19);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, enum case for InputConnectionBehavior.default(_:), v28);
  sub_1001585E0();
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
}

uint64_t variable initialization expression of AddOrRemoveNoteLockIntent._target()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v35 = *(void *)(v0 - 8);
  uint64_t v36 = v0;
  __chkstk_darwin(v0);
  uint64_t v34 = (char *)v30 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v33 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  int16x8_t v32 = (char *)v30 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069B1D0);
  __chkstk_darwin(v6 - 8);
  uint64x2_t v31 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v8 - 8);
  v30[0] = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Locale();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = type metadata accessor for LocalizedStringResource();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  v30[1] = sub_10002F214(&qword_10069B210);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v18 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v19(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v19(v13, v18, v10);
  uint64_t v20 = v30[0];
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
  uint64_t v21 = type metadata accessor for NoteEntity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v31, 1, 1, v21);
  uint64_t v22 = type metadata accessor for IntentDialog();
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(v32, 1, 1, v22);
  v23(v33, 1, 1, v22);
  uint64_t v37 = sub_10023F448();
  uint64_t v38 = v24;
  uint64_t v39 = v25;
  uint64x2_t v27 = (uint64x2_t)vdupq_n_s64(v26);
  char v40 = v26 & 1;
  int16x8_t v28 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v27, (uint64x2_t)xmmword_100524D00), (int32x4_t)vshlq_u64(v27, (uint64x2_t)xmmword_100524CF0));
  *(int8x8_t *)v28.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v28), (int8x8_t)0x1000100010001);
  unsigned __int32 v41 = vmovn_s16(v28).u32[0];
  (*(void (**)(char *, void, uint64_t))(v35 + 104))(v34, enum case for InputConnectionBehavior.default(_:), v36);
  sub_1001579C0();
  return IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:query:)();
}

uint64_t variable initialization expression of AppStoreRatingController.lastInteractionDate@<X0>(uint64_t a1@<X8>)
{
  return sub_100153834((uint64_t (*)(void))&type metadata accessor for Date, a1);
}

uint64_t sub_100153834@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1(0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);

  return v4(a2, 1, 1, v3);
}

uint64_t variable initialization expression of AppStoreRatingController.maximumPersistedLaunchDaysCount()
{
  return 100;
}

uint64_t variable initialization expression of ShowQuickNoteIntent.layoutMonitor()
{
  id v0 = [self configurationForDefaultMainDisplayMonitor];
  id v1 = [self monitorWithConfiguration:v0];

  type metadata accessor for ShowQuickNoteIntent.LayoutMonitorBox();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v1;
  return result;
}

uint64_t variable initialization expression of ChangeSettingIntent._changeOperation()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v30 = *(void *)(v0 - 8);
  uint64_t v31 = v0;
  __chkstk_darwin(v0);
  char v29 = (char *)v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  int16x8_t v28 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64x2_t v27 = (char *)v25 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069B218);
  __chkstk_darwin(v6 - 8);
  unint64_t v26 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v8 - 8);
  v25[0] = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Locale();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = type metadata accessor for LocalizedStringResource();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  v25[1] = sub_10002F214(&qword_10069B220);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v18 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v19(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v19(v13, v18, v10);
  uint64_t v20 = v25[0];
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
  uint64_t v21 = type metadata accessor for ChangeOperation();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v26, 1, 1, v21);
  uint64_t v22 = type metadata accessor for IntentDialog();
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(v27, 1, 1, v22);
  v23(v28, 1, 1, v22);
  (*(void (**)(char *, void, uint64_t))(v30 + 104))(v29, enum case for InputConnectionBehavior.default(_:), v31);
  sub_100157A14(&qword_10069B228, (void (*)(uint64_t))&type metadata accessor for ChangeOperation);
  dispatch thunk of static CaseIterable.allCases.getter();
  sub_100157A14(&qword_10069B230, (void (*)(uint64_t))&type metadata accessor for ChangeOperation);
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
}

uint64_t variable initialization expression of ChangeSettingIntent._setting()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  unint64_t v26 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v25 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v24 = (char *)&v22 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  uint64_t v23 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v22 = sub_10002F214(&qword_10069B560);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  uint64_t v18 = v23;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  char v29 = 5;
  uint64_t v19 = type metadata accessor for IntentDialog();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v24, 1, 1, v19);
  v20(v25, 1, 1, v19);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, enum case for InputConnectionBehavior.default(_:), v28);
  sub_100158634();
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
}

uint64_t sub_1001543D4(uint64_t a1)
{
  uint64_t v19 = a1;
  uint64_t v2 = sub_10002F214(&qword_10069B408);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10002F214(&qword_10069BBB0);
  uint64_t v6 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10002F214(&qword_10069BBB8);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v18 - v13;
  uint64_t v15 = sub_10002F214(&qword_10069BBC0);
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v19, v2);
  uint64_t v20 = v14;
  type metadata accessor for Notification();
  AsyncStream.init(_:bufferingPolicy:_:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v1 + *(void *)(*(void *)v1 + 96), v8, v18);
  sub_10002F034((uint64_t)v14, (uint64_t)v12, &qword_10069BBB8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v12, 1, v15);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v19, v2);
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v1 + *(void *)(*(void *)v1 + 88), v12, v15);
    sub_10002B754((uint64_t)v14, &qword_10069BBB8);
    return v1;
  }
  return result;
}

uint64_t sub_1001546FC(uint64_t a1)
{
  uint64_t v22 = a1;
  uint64_t v2 = sub_10002F214(&qword_10069B510);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10002F214(&qword_10069BAB8);
  uint64_t v6 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10002F214(&qword_10069BAC0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v19 - v13;
  uint64_t v15 = sub_10002F214(&qword_10069BAC8);
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  uint64_t v20 = v2;
  v17(v5, v22, v2);
  uint64_t v23 = v14;
  AsyncStream.init(_:bufferingPolicy:_:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v1 + *(void *)(*(void *)v1 + 96), v8, v21);
  sub_10002F034((uint64_t)v14, (uint64_t)v12, &qword_10069BAC0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v12, 1, v15);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v22, v20);
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v1 + *(void *)(*(void *)v1 + 88), v12, v15);
    sub_10002B754((uint64_t)v14, &qword_10069BAC0);
    return v1;
  }
  return result;
}

uint64_t sub_100154A28(uint64_t a1)
{
  uint64_t v19 = a1;
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_1006A7400);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10002F214(&qword_10069BA80);
  uint64_t v6 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10002F214(&qword_10069BA88);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v18 - v13;
  uint64_t v15 = sub_10002F214(&qword_10069BA90);
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v19, v2);
  uint64_t v20 = v14;
  type metadata accessor for FastSync.SelectionMessage();
  AsyncStream.init(_:bufferingPolicy:_:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v1 + *(void *)(*(void *)v1 + 96), v8, v18);
  sub_10002F034((uint64_t)v14, (uint64_t)v12, &qword_10069BA88);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v12, 1, v15);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v19, v2);
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v1 + *(void *)(*(void *)v1 + 88), v12, v15);
    sub_10002B754((uint64_t)v14, &qword_10069BA88);
    return v1;
  }
  return result;
}

uint64_t sub_100154D50(uint64_t a1)
{
  uint64_t v19 = a1;
  uint64_t v2 = sub_10002F214(&qword_10069B4E8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10002F214(&qword_10069BA98);
  uint64_t v6 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10002F214(&qword_10069BAA0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v18 - v13;
  uint64_t v15 = sub_10002F214(&qword_10069BAA8);
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v19, v2);
  uint64_t v20 = v14;
  sub_10002F214(&qword_10069BAB0);
  AsyncStream.init(_:bufferingPolicy:_:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v1 + *(void *)(*(void *)v1 + 96), v8, v18);
  sub_10002F034((uint64_t)v14, (uint64_t)v12, &qword_10069BAA0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v12, 1, v15);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v19, v2);
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v1 + *(void *)(*(void *)v1 + 88), v12, v15);
    sub_10002B754((uint64_t)v14, &qword_10069BAA0);
    return v1;
  }
  return result;
}

uint64_t sub_10015507C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4)
{
  sub_10002B754(a2, a3);
  uint64_t v7 = sub_10002F214(a4);
  uint64_t v10 = *(void *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(a2, a1, v7);
  uint64_t v8 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56);

  return v8(a2, 0, 1, v7);
}

uint64_t variable initialization expression of AsyncBufferedMulticastManager.streams()
{
  type metadata accessor for AsyncBufferedQueue();
  Array.init()();
  type metadata accessor for Array();
  uint64_t v0 = sub_100158548();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t variable initialization expression of SetChecklistItemsCheckedIntent._changeOperation()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  unint64_t v26 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v25 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v24 = (char *)&v22 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  uint64_t v23 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v22 = sub_10002F214(&qword_10069B570);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  uint64_t v18 = v23;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  char v29 = 2;
  uint64_t v19 = type metadata accessor for IntentDialog();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v24, 1, 1, v19);
  v20(v25, 1, 1, v19);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, enum case for InputConnectionBehavior.default(_:), v28);
  sub_1001589BC();
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
}

uint64_t variable initialization expression of SetChecklistItemsCheckedIntent._entities()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  unint64_t v26 = (char *)v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v25 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v24 = (char *)v22 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  uint64_t v23 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  v22[1] = sub_10002F214((uint64_t *)&unk_10069B160);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  uint64_t v18 = v23;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  uint64_t v29 = 0;
  uint64_t v19 = type metadata accessor for IntentDialog();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v24, 1, 1, v19);
  v20(v25, 1, 1, v19);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, enum case for InputConnectionBehavior.default(_:), v28);
  sub_100157A14(qword_1006A4EE0, (void (*)(uint64_t))type metadata accessor for ChecklistItemEntity);
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

uint64_t variable initialization expression of SetChecklistItemsCheckedIntent._note()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v32 = *(void *)(v0 - 8);
  uint64_t v33 = v0;
  __chkstk_darwin(v0);
  uint64_t v31 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v30 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v29 = (char *)&v25 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069B1D0);
  __chkstk_darwin(v6 - 8);
  uint64_t v28 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v8 - 8);
  unint64_t v26 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Locale();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = type metadata accessor for LocalizedStringResource();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v27 = sub_10002F214(&qword_10069B210);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v18 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v19(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v19(v13, v18, v10);
  uint64_t v20 = v26;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
  uint64_t v21 = type metadata accessor for NoteEntity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v28, 1, 1, v21);
  uint64_t v22 = type metadata accessor for IntentDialog();
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(v29, 1, 1, v22);
  v23(v30, 1, 1, v22);
  (*(void (**)(char *, void, uint64_t))(v32 + 104))(v31, enum case for InputConnectionBehavior.default(_:), v33);
  sub_100157A14((unint64_t *)&qword_10069B1E0, (void (*)(uint64_t))type metadata accessor for NoteEntity);
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

uint64_t sub_1001560F8(uint64_t *a1)
{
  return AppDependency.__allocating_init(key:manager:)();
}

uint64_t sub_100156174(uint64_t a1, uint64_t a2)
{
  return sub_100157804(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

_DWORD *sub_100156198@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

uint64_t sub_1001561B0(uint64_t a1)
{
  uint64_t v2 = sub_100157A14(&qword_10069B850, type metadata accessor for ICError);

  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_10015621C(uint64_t a1)
{
  uint64_t v2 = sub_100157A14(&qword_10069B850, type metadata accessor for ICError);

  return Error<>._code.getter(a1, v2);
}

uint64_t sub_10015628C(uint64_t a1)
{
  uint64_t v2 = sub_100157A14((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);

  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

uint64_t sub_1001562F8@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

NSNumber sub_100156308()
{
  return CGFloat._bridgeToObjectiveC()();
}

uint64_t sub_100156310(uint64_t a1, uint64_t a2)
{
  uint64_t result = static CGFloat._forceBridgeFromObjectiveC(_:result:)();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return result;
}

uint64_t sub_100156364(uint64_t a1, uint64_t a2)
{
  char v3 = static CGFloat._conditionallyBridgeFromObjectiveC(_:result:)();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return v3 & 1;
}

uint64_t sub_1001563BC@<X0>(void *a1@<X8>)
{
  uint64_t result = static CGFloat._unconditionallyBridgeFromObjectiveC(_:)();
  *a1 = v3;
  return result;
}

_DWORD *sub_1001563E4@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

_DWORD *sub_1001563F0@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

_DWORD *sub_100156404(_DWORD *result)
{
  *v1 &= *result;
  return result;
}

BOOL sub_100156418(_DWORD *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_10015642C(_DWORD *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_100156440(void *a1, void *a2)
{
  return *a1 == *a2;
}

void sub_10015645C(void *a1@<X8>)
{
  *a1 = *v1;
}

NSNumber sub_100156468()
{
  return Int._bridgeToObjectiveC()();
}

uint64_t sub_100156470(uint64_t a1, uint64_t a2)
{
  uint64_t result = static Int._forceBridgeFromObjectiveC(_:result:)();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return result;
}

uint64_t sub_1001564C4(uint64_t a1, uint64_t a2)
{
  char v3 = static Int._conditionallyBridgeFromObjectiveC(_:result:)();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return v3 & 1;
}

uint64_t sub_10015651C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static Int._unconditionallyBridgeFromObjectiveC(_:)();
  *a1 = result;
  return result;
}

id sub_100156544()
{
  return *v0;
}

Swift::Int sub_10015654C()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_100156594()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int sub_1001565C0()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t sub_100156604()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100156614(uint64_t a1)
{
  uint64_t v2 = sub_100157A14((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);

  return _BridgedStoredNSError.errorCode.getter(a1, v2);
}

uint64_t sub_100156680(uint64_t a1)
{
  uint64_t v2 = sub_100157A14((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);

  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t sub_1001566EC(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_100157A14((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);
  id v5 = a1;

  return _BridgedStoredNSError.init(_bridgedNSError:)(v5, a2, v4);
}

uint64_t sub_10015677C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100157A14((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);

  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

void sub_1001567FC(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

BOOL sub_100156808(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_10015681C(uint64_t a1, id *a2)
{
  uint64_t result = static String._forceBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return result;
}

uint64_t sub_100156894(uint64_t a1, id *a2)
{
  char v3 = static String._conditionallyBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_100156914@<X0>(void *a1@<X8>)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

void sub_100156958(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

_DWORD *sub_100156960@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

_DWORD *sub_100156974@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_100156988(_DWORD *a1, int *a2)
{
  int v3 = *a2;
  int v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

_DWORD *sub_1001569B8@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  int v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(_DWORD *)a2 = v3;
  *(unsigned char *)(a2 + 4) = v3 == 0;
  return result;
}

int *sub_1001569E4@<X0>(int *result@<X0>, uint64_t a2@<X8>)
{
  int v3 = *result;
  int v4 = *v2;
  *v2 |= *result;
  int v5 = v4 & v3;
  *(_DWORD *)a2 = v5;
  *(unsigned char *)(a2 + 4) = v5 == 0;
  return result;
}

_DWORD *sub_100156A08(_DWORD *result)
{
  *v1 |= *result;
  return result;
}

_DWORD *sub_100156A1C(_DWORD *result)
{
  *v1 ^= *result;
  return result;
}

_DWORD *sub_100156A30@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_100156A44(_DWORD *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_100156A58()
{
  return *v0 == 0;
}

uint64_t sub_100156A68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

_DWORD *sub_100156A80(_DWORD *result)
{
  *v1 &= ~*result;
  return result;
}

uint64_t sub_100156A94()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100156AA4(uint64_t a1)
{
  uint64_t v2 = sub_100157A14(&qword_10069BD40, type metadata accessor for CKError);

  return _BridgedStoredNSError.errorCode.getter(a1, v2);
}

uint64_t sub_100156B10(uint64_t a1)
{
  uint64_t v2 = sub_100157A14(&qword_10069BD40, type metadata accessor for CKError);

  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t sub_100156B7C(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_100157A14(&qword_10069BD40, type metadata accessor for CKError);
  id v5 = a1;

  return _BridgedStoredNSError.init(_bridgedNSError:)(v5, a2, v4);
}

uint64_t sub_100156C0C()
{
  id v1 = *v0;
  uint64_t v2 = NSObject.hashValue.getter();

  return v2;
}

uint64_t sub_100156C44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100157A14(&qword_10069BD40, type metadata accessor for CKError);

  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

Swift::Int sub_100156CC0()
{
  return Hasher._finalize()();
}

void *sub_100156D20@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_100156D30()
{
  sub_100157A14(&qword_10069B8E0, type metadata accessor for TextStyle);
  sub_100157A14(&qword_10069B8E8, type metadata accessor for TextStyle);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_100156DEC()
{
  sub_100157A14((unint64_t *)&qword_10069BE28, type metadata accessor for Key);
  sub_100157A14(&qword_10069BE30, type metadata accessor for Key);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_100156EA8()
{
  sub_100157A14((unint64_t *)&qword_10069BDC0, type metadata accessor for OpenExternalURLOptionsKey);
  sub_100157A14(&qword_10069BDC8, type metadata accessor for OpenExternalURLOptionsKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_100156F64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100157A14((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);

  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

uint64_t sub_100156FE8()
{
  sub_100157A14(&qword_10069BE08, type metadata accessor for VirtualSmartFolderItemIdentifierTypes);
  sub_100157A14(&qword_10069BE10, type metadata accessor for VirtualSmartFolderItemIdentifierTypes);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_1001570A4()
{
  sub_100157A14(&qword_10069BDB0, type metadata accessor for Name);
  sub_100157A14(&qword_10069BDB8, type metadata accessor for Name);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

double sub_100157160@<D0>(void *a1@<X8>)
{
  double result = *v1;
  *a1 = *(void *)v1;
  return result;
}

uint64_t sub_10015716C()
{
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_100157234@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100157260()
{
  sub_100157A14(&qword_10069BE18, type metadata accessor for ActivityType);
  sub_100157A14(&qword_10069BE20, type metadata accessor for ActivityType);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10015731C()
{
  sub_100157A14(&qword_10069BD90, type metadata accessor for DocumentAttributeKey);
  sub_100157A14(&qword_10069BD98, type metadata accessor for DocumentAttributeKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_1001573D8@<X0>(void *a1@<X8>)
{
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_100157420()
{
  sub_100157A14(&qword_10069BDA0, type metadata accessor for DocumentReadingOptionKey);
  sub_100157A14(&qword_10069BDA8, type metadata accessor for DocumentReadingOptionKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_1001574DC()
{
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_100157598@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  int v3 = sub_100157ACC(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_1001575D8(uint64_t a1)
{
  uint64_t v2 = sub_100157A14(&qword_10069BD48, type metadata accessor for CKError);

  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_100157644(uint64_t a1)
{
  uint64_t v2 = sub_100157A14(&qword_10069BD48, type metadata accessor for CKError);

  return Error<>._code.getter(a1, v2);
}

uint64_t sub_1001576B0(uint64_t a1)
{
  uint64_t v2 = sub_100157A14(&qword_10069BD40, type metadata accessor for CKError);

  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

uint64_t sub_10015771C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100157A14(&qword_10069BD40, type metadata accessor for CKError);

  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

uint64_t sub_1001577A0()
{
  return Double.hashValue.getter(*v0);
}

void sub_1001577A8()
{
  if ((*v0 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v1 = *v0;
  }
  else {
    Swift::UInt64 v1 = 0;
  }
  Hasher._combine(_:)(v1);
}

uint64_t sub_1001577DC()
{
  return static Hasher._hash(seed:_:)();
}

uint64_t sub_1001577EC(uint64_t a1, uint64_t a2)
{
  return sub_100157804(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_100157804(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_100157848()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10015789C()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v0 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100157910()
{
  return Int.hashValue.getter(*v0);
}

uint64_t sub_100157918()
{
  return static Hasher._hash(seed:_:)();
}

BOOL sub_100157920(double *a1, double *a2)
{
  return *a1 == *a2;
}

uint64_t sub_100157934()
{
  uint64_t v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v2 = v1;
  if (v0 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

unint64_t sub_1001579C0()
{
  unint64_t result = qword_1006A3BF0;
  if (!qword_1006A3BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A3BF0);
  }
  return result;
}

uint64_t sub_100157A14(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100157A5C()
{
  unint64_t result = qword_10069DDE0;
  if (!qword_10069DDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069DDE0);
  }
  return result;
}

void sub_100157AB0(unint64_t a1)
{
}

uint64_t sub_100157ACC(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = result;
  LODWORD(result) = 0;
  uint64_t v3 = (int *)(v2 + 32);
  do
  {
    int v5 = *v3++;
    int v4 = v5;
    if ((v5 & ~result) == 0) {
      int v4 = 0;
    }
    unint64_t result = v4 | result;
    --v1;
  }
  while (v1);
  return result;
}

unint64_t sub_100157B04()
{
  unint64_t result = qword_10069B240;
  if (!qword_10069B240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069B240);
  }
  return result;
}

unint64_t sub_100157B58()
{
  unint64_t result = qword_10069B270;
  if (!qword_10069B270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069B270);
  }
  return result;
}

unint64_t sub_100157BAC()
{
  unint64_t result = qword_10069B290;
  if (!qword_10069B290)
  {
    sub_10001DFF4((uint64_t *)&unk_10069E6B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069B290);
  }
  return result;
}

unint64_t sub_100157C08()
{
  unint64_t result = qword_10069B2A0;
  if (!qword_10069B2A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069B2A0);
  }
  return result;
}

void sub_100157C5C(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_10002F214(&qword_10069B9E8);
      uint64_t v3 = (void *)static _SetStorage.allocate(capacity:)();
      uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v5) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = &_swiftEmptySetSingleton;
  uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return;
  }
LABEL_9:
  uint64_t v7 = (char *)(v3 + 7);
  uint64_t v42 = v5;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      BOOL v10 = __OFADD__(v8++, 1);
      if (v10)
      {
        __break(1u);
        goto LABEL_36;
      }
      uint64_t v11 = v9;
      Swift::Int v12 = NSObject._rawHashValue(seed:)(v3[5]);
      uint64_t v13 = -1 << *((unsigned char *)v3 + 32);
      unint64_t v14 = v12 & ~v13;
      unint64_t v15 = v14 >> 6;
      uint64_t v16 = *(void *)&v7[8 * (v14 >> 6)];
      uint64_t v17 = 1 << v14;
      if (((1 << v14) & v16) != 0)
      {
        type metadata accessor for UIAppIntentInteraction();
        id v18 = *(id *)(v3[6] + 8 * v14);
        char v19 = static NSObject.== infix(_:_:)();

        if (v19)
        {
LABEL_11:
          swift_unknownObjectRelease();
          goto LABEL_12;
        }
        uint64_t v20 = ~v13;
        while (1)
        {
          unint64_t v14 = (v14 + 1) & v20;
          unint64_t v15 = v14 >> 6;
          uint64_t v16 = *(void *)&v7[8 * (v14 >> 6)];
          uint64_t v17 = 1 << v14;
          if ((v16 & (1 << v14)) == 0) {
            break;
          }
          id v21 = *(id *)(v3[6] + 8 * v14);
          char v22 = static NSObject.== infix(_:_:)();

          if (v22) {
            goto LABEL_11;
          }
        }
      }
      *(void *)&v7[8 * v15] = v17 | v16;
      *(void *)(v3[6] + 8 * v14) = v11;
      uint64_t v23 = v3[2];
      BOOL v10 = __OFADD__(v23, 1);
      uint64_t v24 = v23 + 1;
      if (v10) {
        goto LABEL_37;
      }
      _DWORD v3[2] = v24;
LABEL_12:
      if (v8 == v42) {
        return;
      }
    }
  }
  uint64_t v25 = 0;
  uint64_t v41 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v25 != v41)
  {
    Swift::Int v26 = v3[5];
    id v27 = *(id *)(a1 + 32 + 8 * v25);
    Swift::Int v28 = NSObject._rawHashValue(seed:)(v26);
    uint64_t v29 = -1 << *((unsigned char *)v3 + 32);
    unint64_t v30 = v28 & ~v29;
    unint64_t v31 = v30 >> 6;
    uint64_t v32 = *(void *)&v7[8 * (v30 >> 6)];
    uint64_t v33 = 1 << v30;
    if (((1 << v30) & v32) != 0)
    {
      type metadata accessor for UIAppIntentInteraction();
      id v34 = *(id *)(v3[6] + 8 * v30);
      char v35 = static NSObject.== infix(_:_:)();

      if (v35) {
        goto LABEL_23;
      }
      uint64_t v36 = ~v29;
      unint64_t v30 = (v30 + 1) & v36;
      unint64_t v31 = v30 >> 6;
      uint64_t v32 = *(void *)&v7[8 * (v30 >> 6)];
      uint64_t v33 = 1 << v30;
      if ((v32 & (1 << v30)) != 0)
      {
        while (1)
        {
          id v37 = *(id *)(v3[6] + 8 * v30);
          char v38 = static NSObject.== infix(_:_:)();

          if (v38) {
            break;
          }
          unint64_t v30 = (v30 + 1) & v36;
          unint64_t v31 = v30 >> 6;
          uint64_t v32 = *(void *)&v7[8 * (v30 >> 6)];
          uint64_t v33 = 1 << v30;
          if ((v32 & (1 << v30)) == 0) {
            goto LABEL_31;
          }
        }
LABEL_23:

        uint64_t v5 = v42;
        goto LABEL_24;
      }
LABEL_31:
      uint64_t v5 = v42;
    }
    *(void *)&v7[8 * v31] = v33 | v32;
    *(void *)(v3[6] + 8 * v30) = v27;
    uint64_t v39 = v3[2];
    BOOL v10 = __OFADD__(v39, 1);
    uint64_t v40 = v39 + 1;
    if (v10) {
      goto LABEL_38;
    }
    _DWORD v3[2] = v40;
LABEL_24:
    if (++v25 == v5) {
      return;
    }
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

unint64_t sub_100157FB4()
{
  unint64_t result = qword_10069B338;
  if (!qword_10069B338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069B338);
  }
  return result;
}

unint64_t sub_100158008()
{
  unint64_t result = qword_10069B348;
  if (!qword_10069B348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069B348);
  }
  return result;
}

unint64_t sub_10015805C()
{
  unint64_t result = qword_10069B3C0;
  if (!qword_10069B3C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069B3C0);
  }
  return result;
}

unint64_t sub_1001580B0()
{
  unint64_t result = qword_10069B420;
  if (!qword_10069B420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069B420);
  }
  return result;
}

unint64_t sub_100158104()
{
  unint64_t result = qword_10069EED0;
  if (!qword_10069EED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069EED0);
  }
  return result;
}

unint64_t sub_100158158()
{
  unint64_t result = qword_1006A5620;
  if (!qword_1006A5620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5620);
  }
  return result;
}

void sub_1001581AC(unint64_t a1)
{
}

void sub_1001581C8(unint64_t a1, uint64_t *a2, unint64_t *a3)
{
  unint64_t v5 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v9)
    {
LABEL_3:
      sub_10002F214(a2);
      uint64_t v6 = (void *)static _SetStorage.allocate(capacity:)();
      uint64_t v7 = a1 & 0xFFFFFFFFFFFFFF8;
      if (!v5) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v8) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v6 = &_swiftEmptySetSingleton;
  uint64_t v7 = a1 & 0xFFFFFFFFFFFFFF8;
  if (v5) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8) {
    return;
  }
LABEL_9:
  BOOL v10 = (char *)(v6 + 7);
  uint64_t v46 = v8;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v11 = 0;
    while (1)
    {
      uint64_t v12 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      BOOL v13 = __OFADD__(v11++, 1);
      if (v13)
      {
        __break(1u);
        goto LABEL_36;
      }
      uint64_t v14 = v12;
      Swift::Int v15 = NSObject._rawHashValue(seed:)(v6[5]);
      uint64_t v16 = -1 << *((unsigned char *)v6 + 32);
      unint64_t v17 = v15 & ~v16;
      unint64_t v18 = v17 >> 6;
      uint64_t v19 = *(void *)&v10[8 * (v17 >> 6)];
      uint64_t v20 = 1 << v17;
      if (((1 << v17) & v19) != 0)
      {
        sub_100031418(0, a3);
        id v21 = *(id *)(v6[6] + 8 * v17);
        char v22 = static NSObject.== infix(_:_:)();

        if (v22)
        {
LABEL_11:
          swift_unknownObjectRelease();
          goto LABEL_12;
        }
        uint64_t v23 = ~v16;
        while (1)
        {
          unint64_t v17 = (v17 + 1) & v23;
          unint64_t v18 = v17 >> 6;
          uint64_t v19 = *(void *)&v10[8 * (v17 >> 6)];
          uint64_t v20 = 1 << v17;
          if ((v19 & (1 << v17)) == 0) {
            break;
          }
          id v24 = *(id *)(v6[6] + 8 * v17);
          char v25 = static NSObject.== infix(_:_:)();

          if (v25) {
            goto LABEL_11;
          }
        }
      }
      *(void *)&v10[8 * v18] = v20 | v19;
      *(void *)(v6[6] + 8 * v17) = v14;
      uint64_t v26 = v6[2];
      BOOL v13 = __OFADD__(v26, 1);
      uint64_t v27 = v26 + 1;
      if (v13) {
        goto LABEL_37;
      }
      v6[2] = v27;
LABEL_12:
      if (v11 == v46) {
        return;
      }
    }
  }
  uint64_t v28 = 0;
  uint64_t v44 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v28 != v44)
  {
    Swift::Int v29 = v6[5];
    id v30 = *(id *)(a1 + 32 + 8 * v28);
    Swift::Int v31 = NSObject._rawHashValue(seed:)(v29);
    uint64_t v32 = -1 << *((unsigned char *)v6 + 32);
    unint64_t v33 = v31 & ~v32;
    unint64_t v34 = v33 >> 6;
    uint64_t v35 = *(void *)&v10[8 * (v33 >> 6)];
    uint64_t v36 = 1 << v33;
    if (((1 << v33) & v35) != 0)
    {
      sub_100031418(0, a3);
      id v37 = *(id *)(v6[6] + 8 * v33);
      char v38 = static NSObject.== infix(_:_:)();

      if (v38) {
        goto LABEL_23;
      }
      uint64_t v39 = ~v32;
      unint64_t v33 = (v33 + 1) & v39;
      unint64_t v34 = v33 >> 6;
      uint64_t v35 = *(void *)&v10[8 * (v33 >> 6)];
      uint64_t v36 = 1 << v33;
      if ((v35 & (1 << v33)) != 0)
      {
        while (1)
        {
          id v40 = *(id *)(v6[6] + 8 * v33);
          char v41 = static NSObject.== infix(_:_:)();

          if (v41) {
            break;
          }
          unint64_t v33 = (v33 + 1) & v39;
          unint64_t v34 = v33 >> 6;
          uint64_t v35 = *(void *)&v10[8 * (v33 >> 6)];
          uint64_t v36 = 1 << v33;
          if ((v35 & (1 << v33)) == 0) {
            goto LABEL_31;
          }
        }
LABEL_23:

        uint64_t v8 = v46;
        goto LABEL_24;
      }
LABEL_31:
      uint64_t v8 = v46;
    }
    *(void *)&v10[8 * v34] = v36 | v35;
    *(void *)(v6[6] + 8 * v33) = v30;
    uint64_t v42 = v6[2];
    BOOL v13 = __OFADD__(v42, 1);
    uint64_t v43 = v42 + 1;
    if (v13) {
      goto LABEL_38;
    }
    v6[2] = v43;
LABEL_24:
    if (++v28 == v8) {
      return;
    }
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

void sub_10015852C(unint64_t a1)
{
}

uint64_t sub_100158548()
{
  return static ManagedBuffer.create(minimumCapacity:makingHeaderWith:)();
}

void sub_1001585C4(unint64_t a1)
{
}

unint64_t sub_1001585E0()
{
  unint64_t result = qword_10069B558;
  if (!qword_10069B558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069B558);
  }
  return result;
}

unint64_t sub_100158634()
{
  unint64_t result = qword_10069B568;
  if (!qword_10069B568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069B568);
  }
  return result;
}

void *sub_100158688(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  id v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_10002F214(&qword_10069BA08);
    uint64_t v9 = static _SetStorage.allocate(capacity:)();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    Swift::Int v15 = (void (**)(char *, uint64_t))(v11 - 8);
    Swift::Int v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_100157A14((unint64_t *)&unk_10069BA10, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v16 = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_100157A14((unint64_t *)&qword_1006A4D60, (void (*)(uint64_t))&type metadata accessor for URL);
          char v23 = dispatch thunk of static Equatable.== infix(_:_:)();
          id v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        char v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        unint64_t result = (void *)(*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return (void *)v9;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

void sub_1001589A0(unint64_t a1)
{
}

unint64_t sub_1001589BC()
{
  unint64_t result = qword_10069B578;
  if (!qword_10069B578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069B578);
  }
  return result;
}

uint64_t type metadata accessor for FolderComposerFilterCellMentions()
{
  return self;
}

void type metadata accessor for FilterType(uint64_t a1)
{
}

void type metadata accessor for SymbolicTraits(uint64_t a1)
{
}

void type metadata accessor for TextStyle(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for RemoveTagsFromNotesIntent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 initializeWithTake for RemoveTagsFromNotesIntent(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_100158AB0(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100158AD0(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for NSDirectionalEdgeInsets(uint64_t a1)
{
}

void type metadata accessor for FilterSelectionJoinOperator(uint64_t a1)
{
}

void type metadata accessor for TagSelectionOperator(uint64_t a1)
{
}

void type metadata accessor for DateFilterRelativeRangeSelectionType(uint64_t a1)
{
}

void type metadata accessor for ParticipantsFilterJoinOperator(uint64_t a1)
{
}

void type metadata accessor for UIBackgroundTaskIdentifier(uint64_t a1)
{
}

void type metadata accessor for ICASTagRenameApproachEnum(uint64_t a1)
{
}

void type metadata accessor for ICASTagDeleteApproachEnum(uint64_t a1)
{
}

__n128 initializeWithTake for VisibleTagsQuery(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for _NSRange(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

__n128 initializeWithTake for OpenAccountIntent(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t _s17LaunchRequirementVwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s17LaunchRequirementVwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

void type metadata accessor for OperatingSystemVersion(uint64_t a1)
{
}

void type metadata accessor for ICMoveDecisionType(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void type metadata accessor for Code(uint64_t a1)
{
}

void type metadata accessor for ICError(uint64_t a1)
{
}

uint64_t sub_100158C94()
{
  return sub_100157A14(&qword_10069B7F0, type metadata accessor for ICError);
}

uint64_t sub_100158CDC()
{
  return sub_100157A14(&qword_10069B7F8, type metadata accessor for ICError);
}

uint64_t sub_100158D24()
{
  return sub_100157A14(&qword_10069B800, type metadata accessor for UIBackgroundTaskIdentifier);
}

uint64_t sub_100158D6C()
{
  return sub_100157A14(&qword_10069B808, type metadata accessor for UIBackgroundTaskIdentifier);
}

uint64_t sub_100158DB4()
{
  return sub_100157A14(&qword_10069B810, type metadata accessor for UIBackgroundTaskIdentifier);
}

uint64_t sub_100158DFC()
{
  return sub_100157A14(&qword_10069B818, type metadata accessor for DateFilterRelativeRangeSelectionType);
}

uint64_t sub_100158E44()
{
  return sub_100157A14(&qword_10069B820, type metadata accessor for TextStyle);
}

uint64_t sub_100158E8C()
{
  return sub_100157A14(&qword_10069B828, type metadata accessor for TextStyle);
}

uint64_t sub_100158ED4()
{
  return sub_100157A14(&qword_10069B830, type metadata accessor for TextStyle);
}

uint64_t sub_100158F1C()
{
  return sub_100157A14(&qword_10069B838, type metadata accessor for FilterType);
}

uint64_t sub_100158F64()
{
  return sub_100157A14((unint64_t *)&unk_10069B840, type metadata accessor for Code);
}

uint64_t sub_100158FAC()
{
  return sub_100157A14((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);
}

uint64_t sub_100158FF4()
{
  return sub_100157A14(&qword_10069B850, type metadata accessor for ICError);
}

uint64_t sub_10015903C()
{
  return sub_100157A14(&qword_10069B858, type metadata accessor for ICError);
}

uint64_t sub_100159084()
{
  return sub_100157A14(&qword_10069B860, type metadata accessor for ICError);
}

uint64_t sub_1001590CC()
{
  return sub_100157A14(&qword_10069B868, type metadata accessor for Code);
}

uint64_t sub_100159114()
{
  return sub_100157A14(&qword_10069B870, type metadata accessor for Code);
}

unint64_t sub_100159160()
{
  unint64_t result = qword_10069B878;
  if (!qword_10069B878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069B878);
  }
  return result;
}

unint64_t sub_1001591B4(unint64_t result)
{
  unint64_t v1 = result;
  unint64_t v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    unint64_t result = swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_10002F214(&qword_10069B9D0);
      unint64_t result = static _SetStorage.allocate(capacity:)();
      char v3 = (unsigned char *)result;
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      unint64_t result = swift_bridgeObjectRelease();
      if (!v5) {
        return (unint64_t)v3;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  char v3 = &_swiftEmptySetSingleton;
  uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return (unint64_t)v3;
  }
LABEL_9:
  unint64_t v7 = 0;
  uint64_t v8 = v3 + 56;
  unint64_t v21 = v1 & 0xC000000000000001;
  unint64_t v19 = v1 + 32;
  uint64_t v20 = v1 & 0xFFFFFFFFFFFFFF8;
  while (v21)
  {
    unint64_t result = specialized _ArrayBuffer._getElementSlowPath(_:)();
    unint64_t v9 = result;
    BOOL v10 = __OFADD__(v7++, 1);
    if (v10) {
      goto LABEL_25;
    }
LABEL_18:
    type metadata accessor for AnyCancellable();
    sub_100157A14(&qword_10069B9D8, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
    unint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v11 = -1 << v3[32];
    unint64_t v12 = result & ~v11;
    unint64_t v13 = v12 >> 6;
    uint64_t v14 = *(void *)&v8[8 * (v12 >> 6)];
    uint64_t v15 = 1 << v12;
    if (((1 << v12) & v14) != 0)
    {
      uint64_t v16 = ~v11;
      sub_100157A14(&qword_10069B9E0, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
      while (1)
      {
        unint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
        if (result) {
          break;
        }
        unint64_t v12 = (v12 + 1) & v16;
        unint64_t v13 = v12 >> 6;
        uint64_t v14 = *(void *)&v8[8 * (v12 >> 6)];
        uint64_t v15 = 1 << v12;
        if ((v14 & (1 << v12)) == 0) {
          goto LABEL_22;
        }
      }
      unint64_t result = swift_release();
    }
    else
    {
LABEL_22:
      *(void *)&v8[8 * v13] = v15 | v14;
      *(void *)(*((void *)v3 + 6) + 8 * v12) = v9;
      uint64_t v17 = *((void *)v3 + 2);
      BOOL v10 = __OFADD__(v17, 1);
      uint64_t v18 = v17 + 1;
      if (v10) {
        goto LABEL_26;
      }
      *((void *)v3 + 2) = v18;
    }
    if (v7 == v5) {
      return (unint64_t)v3;
    }
  }
  if (v7 >= *(void *)(v20 + 16)) {
    goto LABEL_27;
  }
  unint64_t v9 = *(void *)(v19 + 8 * v7);
  unint64_t result = swift_retain();
  BOOL v10 = __OFADD__(v7++, 1);
  if (!v10) {
    goto LABEL_18;
  }
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_100159468()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001594A0()
{
  return sub_10013A80C(3, 0);
}

uint64_t sub_1001594CC()
{
  return sub_10013A80C(2, 0);
}

uint64_t sub_1001594F8()
{
  return sub_10013A80C(0, 0);
}

uint64_t sub_100159524()
{
  return sub_10013A80C(1, 0);
}

void sub_100159550(uint64_t a1)
{
  sub_10013A1BC(a1, *(char **)(v1 + 16));
}

uint64_t sub_100159558@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = *a1;
  *(_DWORD *)((char *)a1 + ((*(unsigned int *)(v4 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v4
                                                                             + class metadata base offset for ManagedBuffer)
                                                                 - 8)
                                                     + 16))(a2, v3);
}

uint64_t sub_1001595F0(uint64_t a1)
{
  return sub_10015507C(a1, *(void *)(v1 + 16), &qword_10069BA88, &qword_10069BA90);
}

uint64_t sub_10015961C(uint64_t a1)
{
  return sub_10015507C(a1, *(void *)(v1 + 16), &qword_10069BAA0, &qword_10069BAA8);
}

uint64_t sub_100159648(uint64_t a1)
{
  return sub_10015507C(a1, *(void *)(v1 + 16), &qword_10069BAC0, &qword_10069BAC8);
}

uint64_t sub_100159674(uint64_t a1)
{
  return sub_10015507C(a1, *(void *)(v1 + 16), &qword_10069BBB8, &qword_10069BBC0);
}

void type metadata accessor for CMFormatDescription(uint64_t a1)
{
}

void type metadata accessor for ICCRMergeResult(uint64_t a1)
{
}

void type metadata accessor for DocumentAttributeKey(uint64_t a1)
{
}

void type metadata accessor for DocumentReadingOptionKey(uint64_t a1)
{
}

void type metadata accessor for ID(uint64_t a1)
{
}

void _s3__C4CodeOMa_0(uint64_t a1)
{
}

void type metadata accessor for CGColor(uint64_t a1)
{
}

void type metadata accessor for OpenExternalURLOptionsKey(uint64_t a1)
{
}

void type metadata accessor for Level(uint64_t a1)
{
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

void type metadata accessor for VirtualSmartFolderItemIdentifierTypes(uint64_t a1)
{
}

void type metadata accessor for _UIDataOwner(uint64_t a1)
{
}

void type metadata accessor for ActivityType(uint64_t a1)
{
}

void type metadata accessor for CADisableUpdateMask(uint64_t a1)
{
}

void type metadata accessor for NavigationDirection(uint64_t a1)
{
}

uint64_t getEnumTagSinglePayload for ICAttachmentArchiveModel.Coordinate(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ICAttachmentArchiveModel.Coordinate(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for ICTTNamedStyle(uint64_t a1)
{
}

void type metadata accessor for Key(uint64_t a1)
{
}

uint64_t sub_100159850()
{
  return sub_100157A14(&qword_10069BC60, type metadata accessor for Key);
}

uint64_t sub_100159898()
{
  return sub_100157A14(&qword_10069BC68, type metadata accessor for Key);
}

uint64_t sub_1001598E0()
{
  return sub_100157A14(&qword_10069BC70, type metadata accessor for CADisableUpdateMask);
}

uint64_t sub_100159928()
{
  return sub_100157A14(&qword_10069BC78, type metadata accessor for CADisableUpdateMask);
}

uint64_t sub_100159970()
{
  return sub_100157A14(&qword_10069BC80, type metadata accessor for CADisableUpdateMask);
}

uint64_t sub_1001599B8()
{
  return sub_100157A14(&qword_10069BC88, type metadata accessor for CADisableUpdateMask);
}

uint64_t sub_100159A00()
{
  return sub_100157A14(&qword_10069BC90, type metadata accessor for ActivityType);
}

uint64_t sub_100159A48()
{
  return sub_100157A14(&qword_10069BC98, type metadata accessor for ActivityType);
}

uint64_t sub_100159A90()
{
  return sub_100157A14(&qword_10069BCA0, type metadata accessor for ActivityType);
}

uint64_t sub_100159AD8()
{
  return sub_100157A14(&qword_10069BCA8, type metadata accessor for VirtualSmartFolderItemIdentifierTypes);
}

uint64_t sub_100159B20()
{
  return sub_100157A14(&qword_10069BCB0, type metadata accessor for VirtualSmartFolderItemIdentifierTypes);
}

uint64_t sub_100159B68()
{
  return sub_100157A14(&qword_10069BCB8, type metadata accessor for VirtualSmartFolderItemIdentifierTypes);
}

uint64_t sub_100159BB0()
{
  return sub_100157A14(&qword_10069BCC0, type metadata accessor for Level);
}

uint64_t sub_100159BF8()
{
  return sub_100157A14(&qword_10069BCC8, type metadata accessor for Level);
}

uint64_t sub_100159C40()
{
  return sub_100157A14(&qword_10069BCD0, type metadata accessor for Level);
}

uint64_t sub_100159C88()
{
  return sub_100157A14(&qword_10069BCD8, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_100159CD0()
{
  return sub_100157A14(&qword_10069BCE0, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_100159D18()
{
  return sub_100157A14(&qword_10069BCE8, type metadata accessor for Name);
}

uint64_t sub_100159D60()
{
  return sub_100157A14(&qword_10069BCF0, type metadata accessor for Name);
}

uint64_t sub_100159DA8()
{
  return sub_100157A14(&qword_10069BCF8, type metadata accessor for Name);
}

uint64_t sub_100159DF0()
{
  return sub_100157A14(&qword_10069BD00, type metadata accessor for ID);
}

uint64_t sub_100159E38()
{
  return sub_100157A14(&qword_10069BD08, type metadata accessor for DocumentReadingOptionKey);
}

uint64_t sub_100159E80()
{
  return sub_100157A14(&qword_10069BD10, type metadata accessor for DocumentReadingOptionKey);
}

uint64_t sub_100159EC8()
{
  return sub_100157A14(&qword_10069BD18, type metadata accessor for DocumentAttributeKey);
}

uint64_t sub_100159F10()
{
  return sub_100157A14(&qword_10069BD20, type metadata accessor for DocumentAttributeKey);
}

uint64_t sub_100159F58()
{
  return sub_100157A14(&qword_10069BD28, type metadata accessor for DocumentAttributeKey);
}

uint64_t sub_100159FA0()
{
  return sub_100157A14(&qword_10069BD30, type metadata accessor for DocumentReadingOptionKey);
}

uint64_t sub_100159FE8()
{
  return sub_100157A14(&qword_10069BD38, _s3__C4CodeOMa_0);
}

uint64_t sub_10015A030()
{
  return sub_100157A14(&qword_10069BD40, type metadata accessor for CKError);
}

void type metadata accessor for CKError(uint64_t a1)
{
}

uint64_t sub_10015A08C()
{
  return sub_100157A14(&qword_10069BD48, type metadata accessor for CKError);
}

uint64_t sub_10015A0D4()
{
  return sub_100157A14(&qword_10069BD50, type metadata accessor for CKError);
}

uint64_t sub_10015A11C()
{
  return sub_100157A14(&qword_10069BD58, type metadata accessor for CKError);
}

uint64_t sub_10015A164()
{
  return sub_100157A14(&qword_10069BD60, _s3__C4CodeOMa_0);
}

uint64_t sub_10015A1AC()
{
  return sub_100157A14(&qword_10069BD68, _s3__C4CodeOMa_0);
}

uint64_t sub_10015A1F4()
{
  return sub_100157A14(&qword_10069BD70, type metadata accessor for CKError);
}

uint64_t sub_10015A23C()
{
  return sub_100157A14(&qword_10069BD78, type metadata accessor for CKError);
}

uint64_t sub_10015A284()
{
  return sub_100157A14(&qword_10069BD80, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_10015A2CC()
{
  return sub_100157A14(&qword_10069BD88, type metadata accessor for Key);
}

unint64_t sub_10015A314()
{
  unint64_t result = qword_10069BDE0;
  if (!qword_10069BDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069BDE0);
  }
  return result;
}

void type metadata accessor for NotesVersion(uint64_t a1)
{
}

void *OpenAccountIntent.persistentIdentifier.unsafeMutableAddressor()
{
  return &static OpenAccountIntent.persistentIdentifier;
}

uint64_t sub_10015A3EC()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  char v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  sub_100032974(v6, static OpenAccountIntent.title);
  sub_10003293C(v6, (uint64_t)static OpenAccountIntent.title);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t OpenAccountIntent.title.unsafeMutableAddressor()
{
  if (qword_10069AC40 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for LocalizedStringResource();

  return sub_10003293C(v0, (uint64_t)static OpenAccountIntent.title);
}

uint64_t static OpenAccountIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_10069AC40 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_10003293C(v2, (uint64_t)static OpenAccountIntent.title);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

void *OpenAccountIntent.openAppWhenRun.unsafeMutableAddressor()
{
  return &static OpenAccountIntent.openAppWhenRun;
}

uint64_t static OpenAccountIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for Locale();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = type metadata accessor for LocalizedStringResource();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v4, 1, 1, v11);
  IntentDescription.init(_:categoryName:searchKeywords:)();
  uint64_t v13 = type metadata accessor for IntentDescription();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 0, 1, v13);
}

uint64_t static OpenAccountIntent.parameterSummary.getter()
{
  uint64_t v0 = sub_10002F214(&qword_10069BFD0);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10002F214(&qword_10069BFD8);
  __chkstk_darwin(v1);
  sub_100034BB8();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._countAndFlagsBits = 0x656874206E65704FLL;
  v2._object = (void *)0xE900000000000020;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_10002F214(&qword_10069BFE0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._countAndFlagsBits = 0x746E756F63636120;
  v3._object = (void *)0xE800000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t SetChecklistItemsCheckedIntentv1.$entities.getter()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_10015ABA0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t ChangeFolderViewSettingIntent.changeOperation.getter()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t OpenAccountIntent.target.setter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AccountEntity();
  __chkstk_darwin(v2 - 8);
  sub_10015B884(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  IntentParameter.wrappedValue.setter();
  return sub_10015B8E8(a1);
}

uint64_t (*SetChecklistItemsCheckedIntentv1.entities.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  void v2[4] = IntentParameter.wrappedValue.modify();
  return sub_10015ACE0;
}

uint64_t DeleteChecklistItemsIntent.loggingConfiguration.getter()
{
  AppDependency.wrappedValue.getter();
  return v1;
}

uint64_t DeleteChecklistItemsIntent.loggingConfiguration.setter()
{
  return AppDependency.wrappedValue.setter();
}

uint64_t (*DeleteChecklistItemsIntent.loggingConfiguration.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  void v2[4] = AppDependency.wrappedValue.modify();
  return sub_10015ACE0;
}

uint64_t DeleteChecklistItemsIntent.$loggingConfiguration.getter()
{
  return AppDependency.projectedValue.getter();
}

uint64_t ChangeFolderViewSettingIntent.perform()(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  type metadata accessor for MainActor();
  *(void *)(v1 + 24) = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10015AE6C, v3, v2);
}

uint64_t sub_10015AE6C()
{
  swift_release();
  static IntentResult.result<>()();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10015AED8()
{
  AppDependency.wrappedValue.getter();
  return v1;
}

uint64_t InsertAllMentionIntent.target.getter()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_10015AF34(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AccountEntity();
  __chkstk_darwin(v2 - 8);
  sub_10015B884(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  IntentParameter.wrappedValue.setter();
  return sub_10015B8E8(a1);
}

uint64_t (*SetChecklistItemsCheckedIntent.changeOperation.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  void v2[4] = IntentParameter.wrappedValue.modify();
  return sub_10015ACE0;
}

void sub_10015B020(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);

  free(v1);
}

uint64_t sub_10015B074()
{
  uint64_t v0 = sub_10002F214(&qword_10069BFD0);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10002F214(&qword_10069BFD8);
  __chkstk_darwin(v1);
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._countAndFlagsBits = 0x656874206E65704FLL;
  v2._object = (void *)0xE900000000000020;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_10002F214(&qword_10069BFE0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._countAndFlagsBits = 0x746E756F63636120;
  v3._object = (void *)0xE800000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_10015B20C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = _s11MobileNotes17OpenAccountIntentVACycfC_0();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t _s11MobileNotes17OpenAccountIntentVACycfC_0()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v31 = *(void *)(v0 - 8);
  uint64_t v32 = v0;
  __chkstk_darwin(v0);
  uint64_t v30 = (char *)v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v29 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  BOOL v28 = (char *)v26 - v5;
  uint64_t v6 = sub_10002F214((uint64_t *)&unk_10069B110);
  __chkstk_darwin(v6 - 8);
  uint64_t v27 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v8 - 8);
  v26[0] = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Locale();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = type metadata accessor for LocalizedStringResource();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  v26[1] = sub_10002F214((uint64_t *)&unk_10069B120);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v18 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  unint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v19(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v19(v13, v18, v10);
  uint64_t v20 = v26[0];
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
  uint64_t v21 = type metadata accessor for AccountEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v27, 1, 1, v21);
  uint64_t v22 = type metadata accessor for IntentDialog();
  char v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(v28, 1, 1, v22);
  v23(v29, 1, 1, v22);
  (*(void (**)(char *, void, uint64_t))(v31 + 104))(v30, enum case for InputConnectionBehavior.default(_:), v32);
  sub_10015BD2C(&qword_1006A2940);
  uint64_t v24 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  sub_10002F214((uint64_t *)&unk_10069B130);
  unint64_t v33 = 0xD000000000000024;
  unint64_t v34 = 0x8000000100549260;
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  sub_10002F214((uint64_t *)&unk_10069CE60);
  unint64_t v33 = 0xD000000000000021;
  unint64_t v34 = 0x8000000100549290;
  AnyHashable.init<A>(_:)();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  return v24;
}

uint64_t sub_10015B884(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AccountEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10015B8E8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AccountEntity();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10015B944()
{
  return sub_10015BD2C(&qword_10069BFF0);
}

unint64_t sub_10015B978(uint64_t a1)
{
  unint64_t result = sub_10015B9A0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10015B9A0()
{
  unint64_t result = qword_10069C020;
  if (!qword_10069C020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069C020);
  }
  return result;
}

unint64_t sub_10015B9F8()
{
  unint64_t result = qword_10069C028;
  if (!qword_10069C028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069C028);
  }
  return result;
}

uint64_t sub_10015BA4C()
{
  return sub_10015BD2C(&qword_1006A2880);
}

uint64_t sub_10015BA84()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10015BAA0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for OpenAccountIntent()
{
  swift_release();
  swift_release();

  return swift_release();
}

void *_s11MobileNotes17OpenAccountIntentVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for OpenAccountIntent(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for OpenAccountIntent(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for OpenAccountIntent(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OpenAccountIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OpenAccountIntent()
{
  return &type metadata for OpenAccountIntent;
}

uint64_t sub_10015BCB4()
{
  return sub_10001DFB0(&qword_10069C048, &qword_10069C050);
}

uint64_t sub_10015BCF0()
{
  return sub_10001DFB0((unint64_t *)&qword_10069DE30, (uint64_t *)&unk_10069C980);
}

uint64_t sub_10015BD2C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for AccountEntity();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_10015BD78(void *a1@<X8>)
{
  *a1 = &off_10062AF60;
}

BOOL sub_10015BD88(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

Swift::Int sub_10015BDA0()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_10015BDE8()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int sub_10015BE14()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void *sub_10015BE58@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

void sub_10015BE78(void *a1@<X8>)
{
  *a1 = *v1;
}

void sub_10015BE84(void *a1@<X8>)
{
  *a1 = &off_10062AF88;
}

uint64_t sub_10015BE94()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for IndexPath();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_10002F214((uint64_t *)&unk_1006A2670);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v11 = &v17[-v10];
  id v12 = sub_10015C304();
  unsigned char v17[15] = 0;
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();

  sub_10015E1A0((uint64_t)v11, (uint64_t)v9);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v3 + 48))(v9, 1, v2) == 1)
  {
    sub_10015E208((uint64_t)v11);
    sub_10015E208((uint64_t)v9);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 32))(v5, v9, v2);
    uint64_t v13 = *(void **)(v1 + 16);
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    id v15 = [v13 cellForItemAtIndexPath:isa];

    (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
    sub_10015E208((uint64_t)v11);
    if (v15)
    {
      type metadata accessor for SmartFolderComposerTextFieldCell();
      uint64_t result = swift_dynamicCastClass();
      if (result) {
        return result;
      }
    }
  }
  return 0;
}

uint64_t sub_10015C0B0()
{
  uint64_t v1 = (void *)v0[3];
  if (v1)
  {
    id v2 = v1;
    id v3 = [v2 title];
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v5 = (void *)v0[7];
    if (v5) {
      [v5 isEmpty];
    }
    uint64_t v6 = self;
    id v7 = [self mainBundle];
    NSString v8 = String._bridgeToObjectiveC()();
    id v9 = [v7 localizedStringForKey:v8 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v3 = [v6 deduplicatingTitle:v10 account:v0[4]];

    if (!v3) {
      return 0;
    }
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  }

  return v4;
}

id sub_10015C304()
{
  uint64_t v1 = *(void **)(v0 + 80);
  if (v1)
  {
    id v2 = *(id *)(v0 + 80);
  }
  else
  {
    id v3 = (void *)sub_10015C448(v0);
    uint64_t v4 = *(void **)(v0 + 80);
    *(void *)(v0 + 80) = v3;
    id v2 = v3;

    uint64_t v1 = 0;
  }
  id v5 = v1;
  return v2;
}

uint64_t sub_10015C360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 24) = 0;
  *(void *)(v4 + 48) = 0;
  *(void *)(v4 + 56) = 0;
  *(void *)(v4 + 40) = 0;
  id v9 = [self sharedContext];
  if (v9)
  {
    NSString v10 = v9;
    id v11 = [v9 managedObjectContext];
  }
  else
  {
    id v11 = 0;
  }
  *(void *)(v4 + 64) = v11;
  *(unsigned char *)(v4 + 72) = 0;
  *(void *)(v4 + 80) = 0;
  id v12 = *(void **)(v4 + 24);
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = 0;
  *(void *)(v4 + 32) = a2;

  *(void *)(v4 + 40) = a3;
  *(void *)(v4 + 48) = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a4)
  {
    swift_bridgeObjectRelease();
    *(unsigned char *)(v4 + 72) = 1;
  }
  return v4;
}

uint64_t sub_10015C448(uint64_t a1)
{
  uint64_t v28 = sub_10002F214(&qword_10069C180);
  uint64_t v2 = *(void *)(v28 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = __chkstk_darwin(v28);
  uint64_t v27 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v29 = (char *)&v24 - v5;
  uint64_t v25 = sub_10002F214(&qword_10069C188);
  uint64_t v6 = *(void *)(v25 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = __chkstk_darwin(v25);
  id v9 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v11 = (char *)&v24 - v10;
  type metadata accessor for SmartFolderComposerTextFieldCell();
  swift_retain();
  uint64_t v26 = v11;
  UICollectionView.CellRegistration.init(handler:)();
  sub_100031418(0, &qword_10069C190);
  swift_retain();
  id v12 = v29;
  UICollectionView.CellRegistration.init(handler:)();
  id v24 = *(id *)(a1 + 16);
  uint64_t v13 = v25;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v25);
  uint64_t v14 = v27;
  id v15 = v12;
  uint64_t v16 = v28;
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v27, v15, v28);
  unint64_t v17 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v18 = (v7 + *(unsigned __int8 *)(v2 + 80) + v17) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v19 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v19 + v17, v9, v13);
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v19 + v18, v14, v16);
  id v20 = objc_allocWithZone((Class)sub_10002F214(&qword_10069C198));
  id v21 = v24;
  uint64_t v22 = UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v29, v16);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v26, v13);
  return v22;
}

uint64_t sub_10015C7A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 48);
  swift_bridgeObjectRetain();
  id v7 = sub_10042419C();
  if (v6)
  {
    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v8 = 0;
  }
  [v7 setText:v8];

  id v9 = sub_10042419C();
  id v10 = [self mainBundle];
  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = [v10 localizedStringForKey:v11 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v9 setAccessibilityLabel:v13];

  uint64_t v14 = (void (**)(uint64_t, uint64_t))(a1
                                               + OBJC_IVAR____TtC11MobileNotes32SmartFolderComposerTextFieldCell_textDidChange);
  uint64_t v15 = *(void *)(a1 + OBJC_IVAR____TtC11MobileNotes32SmartFolderComposerTextFieldCell_textDidChange);
  *uint64_t v14 = sub_10015E198;
  v14[1] = (void (*)(uint64_t, uint64_t))a4;
  swift_retain();

  return sub_10002E70C(v15);
}

void sub_10015C940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(a3 + 40) = a1;
  *(void *)(a3 + 48) = a2;
  swift_bridgeObjectRetain();
  uint64_t v4 = swift_bridgeObjectRelease();
  uint64_t v5 = sub_10015BE94(v4);
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    uint64_t v7 = *(void *)(a3 + 48);
    swift_bridgeObjectRetain();
    id v8 = sub_10042419C();
    if (v7)
    {
      NSString v9 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v9 = 0;
    }
    [v8 setText:v9];
  }
  *(unsigned char *)(a3 + 72) = 1;
}

void sub_10015C9F8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v67 = a4;
  uint64_t v5 = sub_10002F214(&qword_10069C1A0);
  __chkstk_darwin(v5 - 8);
  uint64_t v64 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UICellAccessory.DisclosureIndicatorOptions();
  uint64_t v66 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v62 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = type metadata accessor for UICellAccessory.DisplayedState();
  uint64_t v9 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  id v61 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UIListContentConfiguration();
  uint64_t v65 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  NSString v13 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1;
  UICollectionViewListCell.defaultContentConfiguration()();
  uint64_t v15 = self;
  id v16 = [v15 tintColor];
  id v17 = [self systemFontOfSize:17.0];
  id v18 = [self configurationWithFont:v17];

  id v19 = v18;
  NSString v20 = String._bridgeToObjectiveC()();
  id v21 = [self _systemImageNamed:v20 withConfiguration:v19];

  if (v21)
  {
    id v22 = [v15 whiteColor];
    id v23 = [v21 imageWithTintColor:v22];

    uint64_t v60 = v7;
    if (v16)
    {
      id v24 = v16;
      [v23 ic_imageCenteredWithBackgroundColor:v24 size:28.0, 28.0];
    }
    uint64_t v68 = v11;

    UIListContentConfiguration.image.setter();
    uint64_t v25 = (void (*)(uint64_t *, void))UIListContentConfiguration.imageProperties.modify();
    UIListContentConfiguration.ImageProperties.cornerRadius.setter();
    v25(v69, 0);
    uint64_t v26 = *(void **)(v67 + 56);
    if (v26 && ([v26 isEmpty] & 1) == 0)
    {
      uint64_t v36 = self;
      id v37 = [v36 mainBundle];
      NSString v38 = String._bridgeToObjectiveC()();
      id v39 = [v37 localizedStringForKey:v38 value:0 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      UIListContentConfiguration.text.setter();
      id v40 = *(void **)(v67 + 56);
      if (v40)
      {
        id v41 = [v40 filterTypeSelections];
        sub_100031418(0, &qword_1006A2680);
        unint64_t v42 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (v42 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v43 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v43 = *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        uint64_t v35 = v68;
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v43 = 0;
        uint64_t v35 = v68;
      }
      sub_10002F214((uint64_t *)&unk_1006A1950);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_100524D10;
      *(void *)(inited + 56) = &type metadata for Int;
      *(void *)(inited + 64) = &protocol witness table for Int;
      *(void *)(inited + 32) = v43;
      id v45 = [v36 mainBundle];
      NSString v46 = String._bridgeToObjectiveC()();
      id v47 = [v45 localizedStringForKey:v46 value:0 table:0];

      uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v50 = v49;

      swift_bridgeObjectRetain();
      sub_10015DE40(inited, v48, v50);
      swift_bridgeObjectRelease_n();
      swift_setDeallocating();
      sub_10002F214(&qword_10069C1A8);
      swift_arrayDestroy();
      uint64_t v31 = v13;
    }
    else
    {
      uint64_t v27 = self;
      id v28 = [v27 mainBundle];
      NSString v29 = String._bridgeToObjectiveC()();
      id v30 = [v28 localizedStringForKey:v29 value:0 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v31 = v13;
      UIListContentConfiguration.text.setter();
      id v32 = [v27 mainBundle];
      NSString v33 = String._bridgeToObjectiveC()();
      id v34 = [v32 localizedStringForKey:v33 value:0 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v35 = v68;
    }
    UIListContentConfiguration.secondaryText.setter();
    v69[3] = v35;
    v69[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
    long long v51 = sub_10015E0F0(v69);
    uint64_t v52 = v65;
    (*(void (**)(uint64_t *, char *, uint64_t))(v65 + 16))(v51, v31, v35);
    UICollectionViewCell.contentConfiguration.setter();
    sub_10002F214(&qword_10069C1B0);
    type metadata accessor for UICellAccessory();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_100524D10;
    unsigned int v53 = v61;
    uint64_t v54 = v63;
    (*(void (**)(char *, void, uint64_t))(v9 + 104))(v61, enum case for UICellAccessory.DisplayedState.always(_:), v63);
    uint64_t v55 = type metadata accessor for UICellAccessory.LayoutDimension();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v64, 1, 1, v55);
    long long v56 = v62;
    UICellAccessory.DisclosureIndicatorOptions.init(isHidden:reservedLayoutWidth:tintColor:)();
    static UICellAccessory.disclosureIndicator(displayed:options:)();
    (*(void (**)(char *, uint64_t))(v66 + 8))(v56, v60);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v53, v54);
    UICollectionViewListCell.accessories.setter();
    UIAccessibilityTraits v57 = UIAccessibilityTraitButton;
    unint64_t v58 = (unint64_t)[v14 accessibilityTraits];
    if ((v57 & ~v58) != 0) {
      UIAccessibilityTraits v59 = v57;
    }
    else {
      UIAccessibilityTraits v59 = 0;
    }
    [v14 setAccessibilityTraits:v59 | v58];
    (*(void (**)(char *, uint64_t))(v52 + 8))(v31, v68);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10015D360(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  if (*a3) {
    sub_100031418(0, &qword_10069C190);
  }
  else {
    type metadata accessor for SmartFolderComposerTextFieldCell();
  }
  return UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();
}

id *sub_10015D404()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_10015D454()
{
  sub_10015D404();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FolderComposerDataSource()
{
  return self;
}

unsigned char *initializeBufferWithCopyOfBuffer for FolderComposerDataSource.Section(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t sub_10015D4C0(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_10015D4CC(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for FolderComposerDataSource.Item()
{
  return &type metadata for FolderComposerDataSource.Item;
}

uint64_t getEnumTagSinglePayload for TableEntity.SortType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s11MobileNotes24FolderComposerDataSourceC7SectionOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10015D644);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FolderComposerDataSource.Section()
{
  return &type metadata for FolderComposerDataSource.Section;
}

uint64_t sub_10015D67C()
{
  return sub_10015D724(&qword_10069C138, &qword_10069C140);
}

unint64_t sub_10015D6A8()
{
  unint64_t result = qword_10069C148;
  if (!qword_10069C148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069C148);
  }
  return result;
}

uint64_t sub_10015D6FC()
{
  return sub_10015D724(&qword_10069C150, &qword_10069C158);
}

uint64_t sub_10015D724(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001DFF4(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10015D778()
{
  unint64_t result = qword_10069C160;
  if (!qword_10069C160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069C160);
  }
  return result;
}

id sub_10015D7CC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[3];
  if (v7)
  {
    int v8 = sub_10015E154(a3, a3[3]);
    uint64_t v9 = *(void *)(v7 - 8);
    __chkstk_darwin(v8);
    uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v9 + 16))(v11);
    uint64_t v12 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v7);
    sub_100018FE8((uint64_t)a3);
  }
  else
  {
    uint64_t v12 = 0;
  }
  id v13 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithFormat:v6 locale:v12 arguments:a4];

  swift_unknownObjectRelease();
  return v13;
}

uint64_t sub_10015D944()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10002F214(&qword_10069C168);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*(unsigned char *)(v0 + 72) != 1 || !*(void *)(v0 + 48))
  {
    *(void *)(v0 + 40) = sub_10015C0B0();
    *(void *)(v0 + 48) = v6;
    swift_bridgeObjectRelease();
    uint64_t v7 = sub_10015BE94();
    if (v7)
    {
      int v8 = (void *)v7;
      uint64_t v9 = *(void *)(v1 + 48);
      swift_bridgeObjectRetain();
      id v10 = sub_10042419C();
      if (v9)
      {
        NSString v11 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      else
      {
        NSString v11 = 0;
      }
      [v10 setText:v11];
    }
  }
  sub_10015DB3C();
  sub_10015DB90();
  NSDiffableDataSourceSnapshot.init()();
  NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_10062AFB0);
  v14[15] = 0;
  NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
  v14[14] = 1;
  NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
  id v12 = sub_10015C304();
  dispatch thunk of UICollectionViewDiffableDataSource.applySnapshotUsingReloadData(_:completion:)();

  return (*(uint64_t (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_10015DB3C()
{
  unint64_t result = qword_10069C170;
  if (!qword_10069C170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069C170);
  }
  return result;
}

unint64_t sub_10015DB90()
{
  unint64_t result = qword_10069C178;
  if (!qword_10069C178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069C178);
  }
  return result;
}

uint64_t sub_10015DBE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10015C7A8(a1, a2, a3, v3);
}

void sub_10015DBEC(void *a1, uint64_t a2, uint64_t a3)
{
  sub_10015C9F8(a1, a2, a3, v3);
}

uint64_t sub_10015DBF4()
{
  uint64_t v1 = sub_10002F214(&qword_10069C188);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_10002F214(&qword_10069C180);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return _swift_deallocObject(v0, v10, v11);
}

uint64_t sub_10015DD4C(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  sub_10002F214(&qword_10069C188);
  sub_10002F214(&qword_10069C180);

  return sub_10015D360(a1, a2, a3);
}

char *sub_10015DE40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for __VaListBuilder();
  uint64_t v4 = (void *)swift_allocObject();
  void v4[2] = 8;
  v4[3] = 0;
  uint64_t v5 = v4 + 3;
  void v4[4] = 0;
  void v4[5] = 0;
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
LABEL_25:
    uint64_t v22 = __VaListBuilder.va_list()();
    sub_100031418(0, (unint64_t *)&qword_10069C1B8);
    uint64_t v28 = type metadata accessor for Locale();
    sub_10015E0F0(v27);
    swift_bridgeObjectRetain();
    static Locale.current.getter();
    id v23 = sub_10015D7CC(a2, a3, v27, v22);
    uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    swift_release();

    return (char *)v24;
  }
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 32;
  while (1)
  {
    sub_10015E08C(v8 + 40 * v7, (uint64_t)v27);
    sub_10015E154(v27, v28);
    unint64_t result = (char *)dispatch thunk of CVarArg._cVarArgEncoding.getter();
    uint64_t v10 = *v5;
    uint64_t v11 = *((void *)result + 2);
    BOOL v12 = __OFADD__(*v5, v11);
    uint64_t v13 = *v5 + v11;
    if (v12) {
      break;
    }
    uint64_t v14 = result;
    uint64_t v15 = v4[4];
    if (v15 >= v13) {
      goto LABEL_18;
    }
    if (v15 + 0x4000000000000000 < 0) {
      goto LABEL_28;
    }
    id v16 = (char *)v4[5];
    if (2 * v15 > v13) {
      uint64_t v13 = 2 * v15;
    }
    void v4[4] = v13;
    if ((unint64_t)(v13 - 0x1000000000000000) >> 61 != 7) {
      goto LABEL_29;
    }
    unint64_t result = (char *)swift_slowAlloc();
    void v4[5] = result;
    if (v16)
    {
      if (result != v16 || result >= &v16[8 * v10]) {
        memmove(result, v16, 8 * v10);
      }
      __VaListBuilder.deallocStorage(wordCount:storage:)();
LABEL_18:
      unint64_t result = (char *)v4[5];
    }
    if (!result) {
      goto LABEL_30;
    }
    uint64_t v18 = *((void *)v14 + 2);
    if (v18)
    {
      id v19 = (uint64_t *)(v14 + 32);
      uint64_t v20 = *v5;
      while (1)
      {
        uint64_t v21 = *v19++;
        *(void *)&result[8 * v20] = v21;
        uint64_t v20 = *v5 + 1;
        if (__OFADD__(*v5, 1)) {
          break;
        }
        *uint64_t v5 = v20;
        if (!--v18) {
          goto LABEL_3;
        }
      }
      __break(1u);
      break;
    }
LABEL_3:
    ++v7;
    swift_bridgeObjectRelease();
    sub_100018FE8((uint64_t)v27);
    if (v7 == v6) {
      goto LABEL_25;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_10015E08C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t *sub_10015E0F0(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

void *sub_10015E154(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

void sub_10015E198(uint64_t a1, uint64_t a2)
{
  sub_10015C940(a1, a2, v2);
}

uint64_t sub_10015E1A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002F214((uint64_t *)&unk_1006A2670);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10015E208(uint64_t a1)
{
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_1006A2670);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_10015E288(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes24ActivityStreamHeaderView_horizontalMargin] = 0x4030000000000000;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes24ActivityStreamHeaderView_verticalMargin] = 0x4024000000000000;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes24ActivityStreamHeaderView_closeButtonTopMargin] = 0x4018000000000000;
  v1[OBJC_IVAR____TtC11MobileNotes24ActivityStreamHeaderView_isCloseButtonHidden] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes24ActivityStreamHeaderView____lazy_storage___label] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes24ActivityStreamHeaderView____lazy_storage___closeButton] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void *sub_10015E370()
{
  unint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    [result hideActivityStreamWithCompletion:0];
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

id ICCloudSyncingObject.MoveAction.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return [super dealloc];
}

uint64_t sub_10015E4E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002F214(&qword_10069C288);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10015E548(uint64_t a1)
{
  uint64_t v2 = sub_10002F214(&qword_10069C288);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10015E5A8()
{
  return _swift_deallocObject(v0, 24, 7);
}

void *sub_10015E5E0()
{
  return sub_10015E370();
}

uint64_t sub_10015E5E8(uint64_t a1)
{
  return a1;
}

uint64_t sub_10015E610()
{
  return 6;
}

objc_class *sub_10015E618()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menu;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menu);
  if (v2)
  {
    uint64_t v3 = *(objc_class **)(v0 + OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menu);
  }
  else
  {
    uint64_t v4 = v0;
    sub_100031418(0, (unint64_t *)&unk_1006A4D40);
    sub_10002F214(&qword_10069BA00);
    uint64_t preferredElementSize = swift_allocObject();
    *(_OWORD *)(preferredElementSize + 16) = xmmword_100526F90;
    *(void *)(preferredElementSize + 32) = sub_10015ED78();
    *(void *)(preferredElementSize + 40) = sub_10015EFB0();
    *(void *)(preferredElementSize + 48) = sub_10015F1FC();
    *(void *)(preferredElementSize + 56) = sub_10015F438();
    *(void *)(preferredElementSize + 64) = sub_10015F678();
    *(void *)(preferredElementSize + 72) = sub_10015F8B0();
    *(void *)(preferredElementSize + 80) = sub_10015FAF0();
    *(void *)(preferredElementSize + 88) = sub_10015FD2C();
    *(void *)(preferredElementSize + 96) = sub_10015FF70();
    specialized Array._endMutation()();
    v6._countAndFlagsBits = 0;
    v6._object = (void *)0xE000000000000000;
    v14.value.super.Class isa = 0;
    v14.is_nil = 0;
    Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v6, (Swift::String_optional)0, v14, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)preferredElementSize, (Swift::OpaquePointer)preferredElementSize).super.super.isa;
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_100524CE0;
    *(void *)(v8 + 32) = sub_10015EB74();
    *(void *)(v8 + 40) = isa;
    specialized Array._endMutation()();
    v9._countAndFlagsBits = 0;
    v9._object = (void *)0xE000000000000000;
    v15.value.super.Class isa = 0;
    v15.is_nil = 0;
    v10.super.super.Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v9, (Swift::String_optional)0, v15, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v8, (Swift::OpaquePointer)v8).super.super.isa;
    uint64_t v11 = *(void **)(v0 + v1);
    *(UIMenu *)(v4 + v1) = v10;
    uint64_t v3 = v10.super.super.isa;

    uint64_t v2 = 0;
  }
  id v12 = v2;
  return v3;
}

void sub_10015E7C0()
{
  uint64_t v1 = (void *)sub_10015EB74();
  uint64_t v2 = OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection;
  BOOL v3 = 1;
  if (*(void *)(v0 + OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection))
  {
    self;
    if (swift_dynamicCastObjCClass()) {
      BOOL v3 = 0;
    }
  }
  [v1 setState:v3];

  id v4 = sub_10015ED78();
  BOOL v6 = 0;
  if (*(void *)(v0 + v2))
  {
    self;
    uint64_t v5 = (void *)swift_dynamicCastObjCClass();
    if (v5)
    {
      if ([v5 selectionType] == (id)1) {
        BOOL v6 = 1;
      }
    }
  }
  [v4 setState:v6];

  id v7 = sub_10015EFB0();
  BOOL v9 = 0;
  if (*(void *)(v0 + v2))
  {
    self;
    uint64_t v8 = (void *)swift_dynamicCastObjCClass();
    if (v8)
    {
      if ([v8 selectionType] == (id)2) {
        BOOL v9 = 1;
      }
    }
  }
  [v7 setState:v9];

  id v10 = sub_10015F1FC();
  BOOL v12 = 0;
  if (*(void *)(v0 + v2))
  {
    self;
    uint64_t v11 = (void *)swift_dynamicCastObjCClass();
    if (v11)
    {
      if ([v11 selectionType] == (id)3) {
        BOOL v12 = 1;
      }
    }
  }
  [v10 setState:v12];

  id v13 = sub_10015F438();
  BOOL v15 = 0;
  if (*(void *)(v0 + v2))
  {
    self;
    UIImage_optional v14 = (void *)swift_dynamicCastObjCClass();
    if (v14)
    {
      if ([v14 selectionType] == (id)4) {
        BOOL v15 = 1;
      }
    }
  }
  [v13 setState:v15];

  id v16 = sub_10015F678();
  BOOL v18 = 0;
  if (*(void *)(v0 + v2))
  {
    self;
    id v17 = (void *)swift_dynamicCastObjCClass();
    if (v17)
    {
      if ([v17 selectionType] == (id)5) {
        BOOL v18 = 1;
      }
    }
  }
  [v16 setState:v18];

  id v19 = sub_10015F8B0();
  BOOL v21 = 0;
  if (*(void *)(v0 + v2))
  {
    self;
    uint64_t v20 = (void *)swift_dynamicCastObjCClass();
    if (v20)
    {
      if ([v20 selectionType] == (id)6) {
        BOOL v21 = 1;
      }
    }
  }
  [v19 setState:v21];

  id v22 = sub_10015FAF0();
  BOOL v24 = 0;
  if (*(void *)(v0 + v2))
  {
    self;
    id v23 = (void *)swift_dynamicCastObjCClass();
    if (v23)
    {
      if ([v23 selectionType] == (id)7) {
        BOOL v24 = 1;
      }
    }
  }
  [v22 setState:v24];

  id v25 = sub_10015FD2C();
  BOOL v27 = 0;
  if (*(void *)(v0 + v2))
  {
    self;
    uint64_t v26 = (void *)swift_dynamicCastObjCClass();
    if (v26)
    {
      if ([v26 selectionType] == (id)8) {
        BOOL v27 = 1;
      }
    }
  }
  [v25 setState:v27];

  id v30 = sub_10015FF70();
  BOOL v29 = 0;
  if (*(void *)(v0 + v2))
  {
    self;
    uint64_t v28 = (void *)swift_dynamicCastObjCClass();
    if (v28)
    {
      if ([v28 selectionType] == (id)9) {
        BOOL v29 = 1;
      }
    }
  }
  [v30 setState:v29];
}

id sub_10015EB74()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionOff;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionOff];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionOff];
  }
  else
  {
    id v4 = v0;
    sub_100031418(0, (unint64_t *)&unk_10069B9F0);
    id v5 = [self mainBundle];
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [v5 localizedStringForKey:v6 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(swift_allocObject() + 16) = v0;
    uint64_t v8 = v0;
    BOOL v9 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    id v10 = *(void **)&v0[v1];
    *(void *)&v4[v1] = v9;
    id v3 = v9;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

void sub_10015ECDC(uint64_t a1, char *a2)
{
  id v3 = *(void **)&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection];
  *(void *)&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection] = 0;

  [a2 setNeedsUpdateConfiguration];
  sub_10015E7C0();
  id v4 = *(void (**)(uint64_t))&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelectionDidChange];
  if (v4)
  {
    uint64_t v5 = swift_retain();
    v4(v5);
    sub_10002E70C((uint64_t)v4);
  }
}

id sub_10015ED78()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionAny;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionAny];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionAny];
  }
  else
  {
    id v4 = v0;
    sub_100031418(0, (unint64_t *)&unk_10069B9F0);
    id v5 = [self mainBundle];
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [v5 localizedStringForKey:v6 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(swift_allocObject() + 16) = v0;
    uint64_t v8 = v0;
    BOOL v9 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    id v10 = *(void **)&v0[v1];
    *(void *)&v4[v1] = v9;
    id v3 = v9;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

uint64_t sub_10015EEE0(uint64_t a1, char *a2)
{
  id v3 = [objc_allocWithZone((Class)ICAttachmentsFilterTypeSelection) initWithSelectionType:1];
  id v4 = *(void **)&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection];
  *(void *)&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection] = v3;
  id v5 = v3;

  [a2 setNeedsUpdateConfiguration];
  uint64_t result = sub_10015E7C0();
  id v7 = *(void (**)(uint64_t))&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelectionDidChange];
  if (v7)
  {
    uint64_t v8 = swift_retain();
    v7(v8);
    return sub_10002E70C((uint64_t)v7);
  }
  return result;
}

id sub_10015EFB0()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionPhotoVideo;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionPhotoVideo];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionPhotoVideo];
  }
  else
  {
    id v4 = v0;
    sub_100031418(0, (unint64_t *)&unk_10069B9F0);
    id v5 = [self mainBundle];
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [v5 localizedStringForKey:v6 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(swift_allocObject() + 16) = v0;
    uint64_t v8 = v0;
    BOOL v9 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    id v10 = *(void **)&v0[v1];
    *(void *)&v4[v1] = v9;
    id v3 = v9;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

uint64_t sub_10015F12C(uint64_t a1, char *a2)
{
  id v3 = [objc_allocWithZone((Class)ICAttachmentsFilterTypeSelection) initWithSelectionType:2];
  id v4 = *(void **)&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection];
  *(void *)&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection] = v3;
  id v5 = v3;

  [a2 setNeedsUpdateConfiguration];
  uint64_t result = sub_10015E7C0();
  id v7 = *(void (**)(uint64_t))&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelectionDidChange];
  if (v7)
  {
    uint64_t v8 = swift_retain();
    v7(v8);
    return sub_10002E70C((uint64_t)v7);
  }
  return result;
}

id sub_10015F1FC()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionScan;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionScan];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionScan];
  }
  else
  {
    id v4 = v0;
    sub_100031418(0, (unint64_t *)&unk_10069B9F0);
    id v5 = [self mainBundle];
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [v5 localizedStringForKey:v6 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(swift_allocObject() + 16) = v0;
    uint64_t v8 = v0;
    BOOL v9 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    id v10 = *(void **)&v0[v1];
    *(void *)&v4[v1] = v9;
    id v3 = v9;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

uint64_t sub_10015F368(uint64_t a1, char *a2)
{
  id v3 = [objc_allocWithZone((Class)ICAttachmentsFilterTypeSelection) initWithSelectionType:3];
  id v4 = *(void **)&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection];
  *(void *)&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection] = v3;
  id v5 = v3;

  [a2 setNeedsUpdateConfiguration];
  uint64_t result = sub_10015E7C0();
  id v7 = *(void (**)(uint64_t))&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelectionDidChange];
  if (v7)
  {
    uint64_t v8 = swift_retain();
    v7(v8);
    return sub_10002E70C((uint64_t)v7);
  }
  return result;
}

id sub_10015F438()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionDrawing;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionDrawing];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionDrawing];
  }
  else
  {
    id v4 = v0;
    sub_100031418(0, (unint64_t *)&unk_10069B9F0);
    id v5 = [self mainBundle];
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [v5 localizedStringForKey:v6 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(swift_allocObject() + 16) = v0;
    uint64_t v8 = v0;
    BOOL v9 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    id v10 = *(void **)&v0[v1];
    *(void *)&v4[v1] = v9;
    id v3 = v9;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

uint64_t sub_10015F5A8(uint64_t a1, char *a2)
{
  id v3 = [objc_allocWithZone((Class)ICAttachmentsFilterTypeSelection) initWithSelectionType:4];
  id v4 = *(void **)&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection];
  *(void *)&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection] = v3;
  id v5 = v3;

  [a2 setNeedsUpdateConfiguration];
  uint64_t result = sub_10015E7C0();
  id v7 = *(void (**)(uint64_t))&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelectionDidChange];
  if (v7)
  {
    uint64_t v8 = swift_retain();
    v7(v8);
    return sub_10002E70C((uint64_t)v7);
  }
  return result;
}

id sub_10015F678()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionMap;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionMap];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionMap];
  }
  else
  {
    id v4 = v0;
    sub_100031418(0, (unint64_t *)&unk_10069B9F0);
    id v5 = [self mainBundle];
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [v5 localizedStringForKey:v6 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(swift_allocObject() + 16) = v0;
    uint64_t v8 = v0;
    BOOL v9 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    id v10 = *(void **)&v0[v1];
    *(void *)&v4[v1] = v9;
    id v3 = v9;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

uint64_t sub_10015F7E0(uint64_t a1, char *a2)
{
  id v3 = [objc_allocWithZone((Class)ICAttachmentsFilterTypeSelection) initWithSelectionType:5];
  id v4 = *(void **)&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection];
  *(void *)&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection] = v3;
  id v5 = v3;

  [a2 setNeedsUpdateConfiguration];
  uint64_t result = sub_10015E7C0();
  id v7 = *(void (**)(uint64_t))&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelectionDidChange];
  if (v7)
  {
    uint64_t v8 = swift_retain();
    v7(v8);
    return sub_10002E70C((uint64_t)v7);
  }
  return result;
}

id sub_10015F8B0()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionWebsite;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionWebsite];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionWebsite];
  }
  else
  {
    id v4 = v0;
    sub_100031418(0, (unint64_t *)&unk_10069B9F0);
    id v5 = [self mainBundle];
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [v5 localizedStringForKey:v6 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(swift_allocObject() + 16) = v0;
    uint64_t v8 = v0;
    BOOL v9 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    id v10 = *(void **)&v0[v1];
    *(void *)&v4[v1] = v9;
    id v3 = v9;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

uint64_t sub_10015FA20(uint64_t a1, char *a2)
{
  id v3 = [objc_allocWithZone((Class)ICAttachmentsFilterTypeSelection) initWithSelectionType:6];
  id v4 = *(void **)&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection];
  *(void *)&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection] = v3;
  id v5 = v3;

  [a2 setNeedsUpdateConfiguration];
  uint64_t result = sub_10015E7C0();
  id v7 = *(void (**)(uint64_t))&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelectionDidChange];
  if (v7)
  {
    uint64_t v8 = swift_retain();
    v7(v8);
    return sub_10002E70C((uint64_t)v7);
  }
  return result;
}

id sub_10015FAF0()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionAudio;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionAudio];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionAudio];
  }
  else
  {
    id v4 = v0;
    sub_100031418(0, (unint64_t *)&unk_10069B9F0);
    id v5 = [self mainBundle];
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [v5 localizedStringForKey:v6 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(swift_allocObject() + 16) = v0;
    uint64_t v8 = v0;
    BOOL v9 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    id v10 = *(void **)&v0[v1];
    *(void *)&v4[v1] = v9;
    id v3 = v9;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

uint64_t sub_10015FC5C(uint64_t a1, char *a2)
{
  id v3 = [objc_allocWithZone((Class)ICAttachmentsFilterTypeSelection) initWithSelectionType:7];
  id v4 = *(void **)&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection];
  *(void *)&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection] = v3;
  id v5 = v3;

  [a2 setNeedsUpdateConfiguration];
  uint64_t result = sub_10015E7C0();
  id v7 = *(void (**)(uint64_t))&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelectionDidChange];
  if (v7)
  {
    uint64_t v8 = swift_retain();
    v7(v8);
    return sub_10002E70C((uint64_t)v7);
  }
  return result;
}

id sub_10015FD2C()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionDocument;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionDocument];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionDocument];
  }
  else
  {
    id v4 = v0;
    sub_100031418(0, (unint64_t *)&unk_10069B9F0);
    id v5 = [self mainBundle];
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [v5 localizedStringForKey:v6 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(swift_allocObject() + 16) = v0;
    uint64_t v8 = v0;
    BOOL v9 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    id v10 = *(void **)&v0[v1];
    *(void *)&v4[v1] = v9;
    id v3 = v9;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

uint64_t sub_10015FEA0(uint64_t a1, char *a2)
{
  id v3 = [objc_allocWithZone((Class)ICAttachmentsFilterTypeSelection) initWithSelectionType:8];
  id v4 = *(void **)&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection];
  *(void *)&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection] = v3;
  id v5 = v3;

  [a2 setNeedsUpdateConfiguration];
  uint64_t result = sub_10015E7C0();
  id v7 = *(void (**)(uint64_t))&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelectionDidChange];
  if (v7)
  {
    uint64_t v8 = swift_retain();
    v7(v8);
    return sub_10002E70C((uint64_t)v7);
  }
  return result;
}

id sub_10015FF70()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionNone;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionNone];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionNone];
  }
  else
  {
    id v4 = v0;
    sub_100031418(0, (unint64_t *)&unk_10069B9F0);
    id v5 = [self mainBundle];
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [v5 localizedStringForKey:v6 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(swift_allocObject() + 16) = v0;
    uint64_t v8 = v0;
    BOOL v9 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    id v10 = *(void **)&v0[v1];
    *(void *)&v4[v1] = v9;
    id v3 = v9;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

uint64_t sub_1001600EC(uint64_t a1, char *a2)
{
  id v3 = [objc_allocWithZone((Class)ICAttachmentsFilterTypeSelection) initWithSelectionType:9];
  id v4 = *(void **)&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection];
  *(void *)&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection] = v3;
  id v5 = v3;

  [a2 setNeedsUpdateConfiguration];
  uint64_t result = sub_10015E7C0();
  id v7 = *(void (**)(uint64_t))&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelectionDidChange];
  if (v7)
  {
    uint64_t v8 = swift_retain();
    v7(v8);
    return sub_10002E70C((uint64_t)v7);
  }
  return result;
}

id sub_1001601BC(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menu] = 0;
  *(void *)&v4[OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionOff] = 0;
  *(void *)&v4[OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionAny] = 0;
  *(void *)&v4[OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionPhotoVideo] = 0;
  *(void *)&v4[OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionScan] = 0;
  *(void *)&v4[OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionDrawing] = 0;
  *(void *)&v4[OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionMap] = 0;
  *(void *)&v4[OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionWebsite] = 0;
  *(void *)&v4[OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionAudio] = 0;
  *(void *)&v4[OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionDocument] = 0;
  *(void *)&v4[OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionNone] = 0;
  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for FolderComposerFilterCellAttachments();
  return [super initWithFrame:a1 a2:a2 a3:a3 a4:a4];
}

id sub_1001602C8(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menu] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionOff] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionAny] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionPhotoVideo] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionScan] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionDrawing] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionMap] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionWebsite] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionAudio] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionDocument] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionNone] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for FolderComposerFilterCellAttachments();
  [super initWithCoder:a1];

  return v3;
}

void sub_1001603C4()
{
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionOff));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionAny));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionPhotoVideo));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionScan));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionDrawing));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionMap));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionWebsite));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionAudio));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionDocument));
  uint64_t v1 = *(void **)(v0
                + OBJC_IVAR____TtC11MobileNotes35FolderComposerFilterCellAttachments____lazy_storage___menuActionNone);
}

id sub_100160494()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FolderComposerFilterCellAttachments();
  return [super dealloc];
}

uint64_t type metadata accessor for FolderComposerFilterCellAttachments()
{
  return self;
}

objc_class *sub_1001605C8()
{
  return sub_10015E618();
}

void sub_1001605EC()
{
}

uint64_t sub_100160610()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100160648(uint64_t a1)
{
  return sub_1001600EC(a1, *(char **)(v1 + 16));
}

uint64_t sub_100160650(uint64_t a1)
{
  return sub_10015FEA0(a1, *(char **)(v1 + 16));
}

uint64_t sub_100160658(uint64_t a1)
{
  return sub_10015FC5C(a1, *(char **)(v1 + 16));
}

uint64_t sub_100160660(uint64_t a1)
{
  return sub_10015FA20(a1, *(char **)(v1 + 16));
}

uint64_t sub_100160668(uint64_t a1)
{
  return sub_10015F7E0(a1, *(char **)(v1 + 16));
}

uint64_t sub_100160670(uint64_t a1)
{
  return sub_10015F5A8(a1, *(char **)(v1 + 16));
}

uint64_t sub_100160678(uint64_t a1)
{
  return sub_10015F368(a1, *(char **)(v1 + 16));
}

uint64_t sub_100160680(uint64_t a1)
{
  return sub_10015F12C(a1, *(char **)(v1 + 16));
}

uint64_t sub_100160688(uint64_t a1)
{
  return sub_10015EEE0(a1, *(char **)(v1 + 16));
}

void sub_100160690(uint64_t a1)
{
  sub_10015ECDC(a1, *(char **)(v1 + 16));
}

void *RemoveTagsFromNotesIntent.persistentIdentifier.unsafeMutableAddressor()
{
  return &static RemoveTagsFromNotesIntent.persistentIdentifier;
}

unint64_t static RemoveTagsFromNotesIntent.persistentIdentifier.getter()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_1001606E4()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  sub_100032974(v6, static RemoveTagsFromNotesIntent.title);
  sub_10003293C(v6, (uint64_t)static RemoveTagsFromNotesIntent.title);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t RemoveTagsFromNotesIntent.title.unsafeMutableAddressor()
{
  if (qword_10069AC48 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for LocalizedStringResource();

  return sub_10003293C(v0, (uint64_t)static RemoveTagsFromNotesIntent.title);
}

uint64_t static RemoveTagsFromNotesIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_10069AC48 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_10003293C(v2, (uint64_t)static RemoveTagsFromNotesIntent.title);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t static RemoveTagsFromNotesIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for Locale();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = type metadata accessor for LocalizedStringResource();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v4, 1, 1, v11);
  IntentDescription.init(_:categoryName:searchKeywords:)();
  uint64_t v13 = type metadata accessor for IntentDescription();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 0, 1, v13);
}

uint64_t static RemoveTagsFromNotesIntent.parameterSummary.getter()
{
  uint64_t v0 = sub_10002F214(&qword_10069C320);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10002F214(&qword_10069C328);
  __chkstk_darwin(v1);
  sub_100160EBC();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._countAndFlagsBits = 0x742065766F6D6552;
  v2._object = (void *)0xEB00000000206568;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_10002F214(&qword_10069C338);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._object = (void *)0xEB00000000206D6FLL;
  v3._countAndFlagsBits = 0x7266207367617420;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  swift_getKeyPath();
  sub_10002F214(&qword_10069C340);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v4);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

unint64_t sub_100160EBC()
{
  unint64_t result = qword_10069C330;
  if (!qword_10069C330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069C330);
  }
  return result;
}

uint64_t SetChecklistItemsCheckedIntentv1.$changeOperation.getter()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_100160F34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100160F60@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t SetChecklistItemsCheckedIntentv1.entities.getter()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t SetChecklistItemsCheckedIntentv1.entities.setter()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t AddTagsToNotesIntent.tags.getter()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t AddTagsToNotesIntent.tags.setter()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t (*SetChecklistItemsCheckedIntentv1.changeOperation.modify(void *a1))()
{
  Swift::String v2 = malloc(0x28uLL);
  *a1 = v2;
  void v2[4] = IntentParameter.wrappedValue.modify();
  return sub_10015ACE0;
}

uint64_t ChangeSettingIntent.loggingConfiguration.getter()
{
  AppDependency.wrappedValue.getter();
  return v1;
}

uint64_t ChangeSettingIntent.loggingConfiguration.setter()
{
  return AppDependency.wrappedValue.setter();
}

uint64_t (*ChangeSettingIntent.loggingConfiguration.modify(void *a1))()
{
  Swift::String v2 = malloc(0x28uLL);
  *a1 = v2;
  void v2[4] = AppDependency.wrappedValue.modify();
  return sub_10015ACE0;
}

uint64_t ChangeSettingIntent.$loggingConfiguration.getter()
{
  return AppDependency.projectedValue.getter();
}

uint64_t RemoveTagsFromNotesIntent.perform()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[13] = a4;
  v5[14] = a5;
  v5[11] = a2;
  v5[12] = a3;
  v5[10] = a1;
  v5[15] = type metadata accessor for BulkModifyNoteTags();
  uint8_t v5[16] = swift_task_alloc();
  return _swift_task_switch(sub_100161248, 0, 0);
}

uint64_t sub_100161248()
{
  uint64_t v1 = v0[16];
  AppDependency.wrappedValue.getter();
  uint64_t v2 = v0[6];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  *(unsigned char *)uint64_t v1 = 1;
  *(void *)(v1 + 8) = v2;
  IntentParameter.wrappedValue.getter();
  uint64_t v3 = v0[7];
  v0[17] = v3;
  IntentParameter.wrappedValue.getter();
  uint64_t v4 = v0[8];
  v0[18] = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[19] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1001613C0;
  return sub_10044D2C4(v3, v4);
}

uint64_t sub_1001613C0(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 160) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v5 = sub_1001615E8;
  }
  else
  {
    *(void *)(v4 + 168) = a1;
    uint64_t v5 = sub_100161528;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100161528()
{
  uint64_t v1 = v0[16];
  v0[9] = v0[21];
  sub_10002F214(qword_10069FDF0);
  sub_100162118();
  static IntentResult.result<A>(value:)();
  sub_1001620BC(v1);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1001615E8()
{
  sub_1001620BC(*(void *)(v0 + 128));
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100161664(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  uint64_t v7 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100161724;
  return RemoveTagsFromNotesIntent.perform()(a1, v4, v5, v7, v6);
}

uint64_t sub_100161724()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100161818@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = _s11MobileNotes014RemoveTagsFromB6IntentVACycfC_0();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return result;
}

uint64_t SetChecklistItemsCheckedIntent.loggingConfiguration.getter()
{
  AppDependency.wrappedValue.getter();
  return v1;
}

uint64_t _s11MobileNotes014RemoveTagsFromB6IntentVACycfC_0()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v53 = v0;
  uint64_t v54 = v1;
  __chkstk_darwin(v0);
  uint64_t v52 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  long long v51 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v50 = (char *)&v36 - v6;
  uint64_t v7 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v7 - 8);
  uint64_t v49 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Locale();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = type metadata accessor for LocalizedStringResource();
  uint64_t v46 = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v48 = sub_10002F214((uint64_t *)&unk_10069B140);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v17 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  BOOL v18 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 104);
  unsigned int v39 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v40 = v9;
  v18(v12, enum case for LocalizedStringResource.BundleDescription.main(_:), v9);
  id v41 = v18;
  uint64_t v42 = v10 + 104;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v18(v12, v17, v9);
  id v19 = v49;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v20 = *(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56);
  uint64_t v45 = v16 + 56;
  id v47 = v20;
  v20(v19, 0, 1, v15);
  unint64_t v55 = 0;
  uint64_t v21 = type metadata accessor for IntentDialog();
  uint64_t v22 = *(void *)(v21 - 8);
  id v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
  uint64_t v43 = v23;
  uint64_t v44 = v22 + 56;
  v23(v50, 1, 1, v21);
  v23(v51, 1, 1, v21);
  uint64_t v57 = sub_10023ED64();
  uint64_t v58 = v24;
  uint64_t v59 = v25;
  uint64x2_t v27 = (uint64x2_t)vdupq_n_s64(v26);
  char v60 = v26 & 1;
  int16x8_t v28 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v27, (uint64x2_t)xmmword_100524D00), (int32x4_t)vshlq_u64(v27, (uint64x2_t)xmmword_100524CF0));
  *(int8x8_t *)v28.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v28), (int8x8_t)0x1000100010001);
  unsigned __int32 v61 = vmovn_s16(v28).u32[0];
  unsigned int v37 = enum case for InputConnectionBehavior.default(_:);
  BOOL v29 = *(void (**)(void))(v54 + 104);
  v54 += 104;
  NSString v38 = (void (*)(char *, void, uint64_t))v29;
  v29(v52);
  sub_1001579C0();
  id v30 = v49;
  uint64_t v48 = IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:query:)();
  uint64_t v36 = sub_10002F214((uint64_t *)&unk_10069B150);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v31 = v39;
  uint64_t v32 = v40;
  NSString v33 = v41;
  v41(v12, v39, v40);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v33(v12, v31, v32);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v47(v30, 0, 1, v46);
  uint64_t v57 = 0;
  id v34 = v43;
  v43(v50, 1, 1, v21);
  v34(v51, 1, 1, v21);
  v38(v52, v37, v53);
  sub_100162558((unint64_t *)&unk_1006A3B60, (void (*)(uint64_t))type metadata accessor for TagEntity);
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  sub_10002F214((uint64_t *)&unk_10069CE60);
  unint64_t v55 = 0xD000000000000021;
  unint64_t v56 = 0x8000000100549290;
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  sub_10002F214((uint64_t *)&unk_10069B130);
  unint64_t v55 = 0xD000000000000024;
  unint64_t v56 = 0x8000000100549260;
  AnyHashable.init<A>(_:)();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  return v48;
}

uint64_t sub_1001620BC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BulkModifyNoteTags();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100162118()
{
  unint64_t result = qword_10069C350;
  if (!qword_10069C350)
  {
    sub_10001DFF4(qword_10069FDF0);
    sub_100162558((unint64_t *)&qword_10069CD70, (void (*)(uint64_t))type metadata accessor for NoteEntity);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069C350);
  }
  return result;
}

unint64_t sub_1001621C0()
{
  unint64_t result = qword_10069C358;
  if (!qword_10069C358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069C358);
  }
  return result;
}

unint64_t sub_100162218()
{
  unint64_t result = qword_10069C360;
  if (!qword_10069C360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069C360);
  }
  return result;
}

uint64_t sub_10016226C()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1001622A0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for RemoveTagsFromNotesIntent()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void *initializeWithCopy for RemoveTagsFromNotesIntent(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for RemoveTagsFromNotesIntent(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for RemoveTagsFromNotesIntent(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoveTagsFromNotesIntent(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RemoveTagsFromNotesIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoveTagsFromNotesIntent()
{
  return &type metadata for RemoveTagsFromNotesIntent;
}

uint64_t sub_1001624E0()
{
  return sub_10001DFB0(&qword_10069C370, &qword_10069C378);
}

uint64_t sub_10016251C()
{
  return sub_10001DFB0(&qword_10069C380, &qword_10069C388);
}

uint64_t sub_100162558(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001625A0()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection);
  if (v1)
  {
    self;
    uint64_t v2 = swift_dynamicCastObjCClass();
    if (v2)
    {
      uint64_t v3 = (void *)v2;
      id v4 = v1;
      if (![v3 mode] && (uint64_t)objc_msgSend(v3, "selectedTagCount") >= 1)
      {
        id v5 = [v3 selectedTagCountString];
        uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();

        goto LABEL_6;
      }
    }
  }
  id v5 = (id)ICLocalizedStringForICFilterType();
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
LABEL_6:

  return v6;
}

objc_class *sub_10016268C()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellTags____lazy_storage___menu;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellTags____lazy_storage___menu);
  if (v2)
  {
    uint64_t v3 = *(objc_class **)(v0 + OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellTags____lazy_storage___menu);
  }
  else
  {
    uint64_t v4 = v0;
    sub_100031418(0, (unint64_t *)&unk_1006A4D40);
    sub_10002F214(&qword_10069BA00);
    UIMenuElementSize preferredElementSize = swift_allocObject();
    *(_OWORD *)(preferredElementSize + 16) = xmmword_100527150;
    *(void *)(preferredElementSize + 32) = sub_100162BE0();
    *(void *)(preferredElementSize + 40) = sub_100162D50();
    *(void *)(preferredElementSize + 48) = sub_100162EC4();
    specialized Array._endMutation()();
    v6._countAndFlagsBits = 0;
    v6._object = (void *)0xE000000000000000;
    v17.value.super.Class isa = 0;
    v17.is_nil = 0;
    Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v6, (Swift::String_optional)0, v17, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v15).super.super.isa;
    UIMenuElementSize v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_100527150;
    *(void *)(v8 + 32) = sub_100162A78();
    *(void *)(v8 + 40) = isa;
    uint64_t v9 = isa;
    *(void *)(v8 + 48) = sub_100163038();
    specialized Array._endMutation()();
    v10._countAndFlagsBits = 0;
    v10._object = (void *)0xE000000000000000;
    v18.value.super.Class isa = 0;
    v18.is_nil = 0;
    Class v11 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v10, (Swift::String_optional)0, v18, 0, 0xFFFFFFFFFFFFFFFFLL, v8, v16).super.super.isa;

    uint64_t v12 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v11;
    uint64_t v3 = v11;

    uint64_t v2 = 0;
  }
  id v13 = v2;
  return v3;
}

void sub_10016281C()
{
  uint64_t v1 = (void *)sub_100162A78();
  uint64_t v2 = OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection;
  BOOL v3 = 1;
  if (*(void *)(v0 + OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection))
  {
    self;
    if (swift_dynamicCastObjCClass()) {
      BOOL v3 = 0;
    }
  }
  [v1 setState:v3];

  id v4 = sub_100162BE0();
  BOOL v6 = 0;
  if (*(void *)(v0 + v2))
  {
    self;
    id v5 = (void *)swift_dynamicCastObjCClass();
    if (v5)
    {
      if ([v5 mode] == (id)1) {
        BOOL v6 = 1;
      }
    }
  }
  [v4 setState:v6];

  id v7 = sub_100162D50();
  BOOL v9 = 0;
  if (*(void *)(v0 + v2))
  {
    self;
    UIMenuElementSize v8 = (void *)swift_dynamicCastObjCClass();
    if (v8)
    {
      if (![v8 mode])
      {
        if (*(void *)(v0 + v2))
        {
          self;
          Swift::OpaquePointer v15 = (void *)swift_dynamicCastObjCClass();
          if (v15)
          {
            if ([v15 tagOperator] == (id)2) {
              BOOL v9 = 1;
            }
          }
        }
      }
    }
  }
  [v7 setState:v9];

  id v10 = sub_100162EC4();
  BOOL v12 = 0;
  if (*(void *)(v0 + v2))
  {
    self;
    Class v11 = (void *)swift_dynamicCastObjCClass();
    if (v11)
    {
      if (![v11 mode])
      {
        if (*(void *)(v0 + v2))
        {
          self;
          Swift::OpaquePointer v16 = (void *)swift_dynamicCastObjCClass();
          if (v16)
          {
            if ([v16 tagOperator] == (id)1) {
              BOOL v12 = 1;
            }
          }
        }
      }
    }
  }
  [v10 setState:v12];

  id v17 = sub_100163038();
  BOOL v14 = 0;
  if (*(void *)(v0 + v2))
  {
    self;
    id v13 = (void *)swift_dynamicCastObjCClass();
    if (v13)
    {
      if ([v13 mode] == (id)2) {
        BOOL v14 = 1;
      }
    }
  }
  [v17 setState:v14];
}

id sub_100162A78()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellTags____lazy_storage___menuActionOff;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellTags____lazy_storage___menuActionOff];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellTags____lazy_storage___menuActionOff];
  }
  else
  {
    id v4 = v0;
    sub_100031418(0, (unint64_t *)&unk_10069B9F0);
    id v5 = [self mainBundle];
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [v5 localizedStringForKey:v6 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(swift_allocObject() + 16) = v0;
    UIMenuElementSize v8 = v0;
    BOOL v9 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    id v10 = *(void **)&v0[v1];
    *(void *)&v4[v1] = v9;
    id v3 = v9;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

id sub_100162BE0()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellTags____lazy_storage___menuActionAnyTag;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellTags____lazy_storage___menuActionAnyTag];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellTags____lazy_storage___menuActionAnyTag];
  }
  else
  {
    id v4 = v0;
    sub_100031418(0, (unint64_t *)&unk_10069B9F0);
    id v5 = [self mainBundle];
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [v5 localizedStringForKey:v6 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(swift_allocObject() + 16) = v0;
    UIMenuElementSize v8 = v0;
    BOOL v9 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    id v10 = *(void **)&v0[v1];
    *(void *)&v4[v1] = v9;
    id v3 = v9;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

id sub_100162D50()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellTags____lazy_storage___menuActionAnySelectedTag;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellTags____lazy_storage___menuActionAnySelectedTag];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellTags____lazy_storage___menuActionAnySelectedTag];
  }
  else
  {
    id v4 = v0;
    sub_100031418(0, (unint64_t *)&unk_10069B9F0);
    id v5 = [self mainBundle];
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [v5 localizedStringForKey:v6 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(swift_allocObject() + 16) = v0;
    UIMenuElementSize v8 = v0;
    BOOL v9 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    id v10 = *(void **)&v0[v1];
    *(void *)&v4[v1] = v9;
    id v3 = v9;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

id sub_100162EC4()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellTags____lazy_storage___menuActionAllSelectedTags;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellTags____lazy_storage___menuActionAllSelectedTags];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellTags____lazy_storage___menuActionAllSelectedTags];
  }
  else
  {
    id v4 = v0;
    sub_100031418(0, (unint64_t *)&unk_10069B9F0);
    id v5 = [self mainBundle];
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [v5 localizedStringForKey:v6 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(swift_allocObject() + 16) = v0;
    UIMenuElementSize v8 = v0;
    BOOL v9 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    id v10 = *(void **)&v0[v1];
    *(void *)&v4[v1] = v9;
    id v3 = v9;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

id sub_100163038()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellTags____lazy_storage___menuActionNoTags;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellTags____lazy_storage___menuActionNoTags];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellTags____lazy_storage___menuActionNoTags];
  }
  else
  {
    id v4 = v0;
    sub_100031418(0, (unint64_t *)&unk_10069B9F0);
    id v5 = [self mainBundle];
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [v5 localizedStringForKey:v6 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(swift_allocObject() + 16) = v0;
    UIMenuElementSize v8 = v0;
    BOOL v9 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    id v10 = *(void **)&v0[v1];
    *(void *)&v4[v1] = v9;
    id v3 = v9;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

void sub_1001631A8(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v9 = OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection;
  id v10 = *(void **)&v4[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection];
  if (v10)
  {
    self;
    uint64_t v11 = swift_dynamicCastObjCClass();
    if (v11)
    {
      BOOL v12 = (void *)v11;
      id v13 = v10;
      id v14 = [v12 mode];
      BOOL v16 = (a2 & 1) == 0 && a1 == 0;
      if (!v14 && !v16)
      {
        [v12 copy];
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();
        sub_100031418(0, &qword_1006A2AF0);
        int v17 = swift_dynamicCast();
        uint64_t v18 = v37;
        if (!v17) {
          uint64_t v18 = 0;
        }
        id v19 = *(void **)&v4[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellTags_previousCustomTagSelection];
        *(void *)&v4[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellTags_previousCustomTagSelection] = v18;

        goto LABEL_20;
      }
    }
    if (*(void *)&v4[v9])
    {
      self;
      uint64_t v20 = (void *)swift_dynamicCastObjCClass();
      if (v20)
      {
        if (![v20 mode])
        {
          if (*(void *)&v4[v9])
          {
            self;
            if (swift_dynamicCastObjCClass()) {
              goto LABEL_20;
            }
          }
        }
      }
    }
  }
  uint64_t v21 = *(void **)&v4[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellTags_previousCustomTagSelection];
  if (v21)
  {
    uint64_t v22 = *(void **)&v4[v9];
    *(void *)&v4[v9] = v21;
    id v23 = v21;

    [v4 setNeedsUpdateConfiguration];
  }
LABEL_20:
  uint64_t v24 = *(void **)&v4[v9];
  if (v24)
  {
    self;
    uint64_t v25 = swift_dynamicCastObjCClass();
    if (v25)
    {
      if ((a2 & 1) == 0)
      {
        unint64_t v26 = (void *)v25;
        id v27 = v24;
        [v26 setMode:a1];
        if ((a4 & 1) == 0) {
          [v26 setTagOperator:a3];
        }
        [v4 setNeedsUpdateConfiguration];

        goto LABEL_33;
      }
LABEL_32:
      id v34 = *(void **)&v4[v9];
      *(void *)&v4[v9] = 0;

      [v4 setNeedsUpdateConfiguration];
      goto LABEL_33;
    }
  }
  if (a2) {
    goto LABEL_32;
  }
  id v28 = [self sharedContext];
  if (!v28) {
    goto LABEL_32;
  }
  BOOL v29 = v28;
  id v30 = [v28 managedObjectContext];

  if (!v30) {
    goto LABEL_32;
  }
  if (a4) {
    a3 = 0;
  }
  id v31 = [objc_allocWithZone((Class)ICTagSelection) initWithManagedObjectContext:v30 mode:a1 tagOperator:a3];
  uint64_t v32 = *(void **)&v4[v9];
  *(void *)&v4[v9] = v31;
  id v33 = v31;

  [v4 setNeedsUpdateConfiguration];
LABEL_33:
  sub_10016281C();
  uint64_t v35 = *(void (**)(uint64_t))&v4[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelectionDidChange];
  if (v35)
  {
    uint64_t v36 = swift_retain();
    v35(v36);
    sub_10002E70C((uint64_t)v35);
  }
}

id sub_1001634EC(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellTags____lazy_storage___menu] = 0;
  *(void *)&v4[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellTags_previousCustomTagSelection] = 0;
  *(void *)&v4[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellTags____lazy_storage___menuActionOff] = 0;
  *(void *)&v4[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellTags____lazy_storage___menuActionAnyTag] = 0;
  *(void *)&v4[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellTags____lazy_storage___menuActionAnySelectedTag] = 0;
  *(void *)&v4[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellTags____lazy_storage___menuActionAllSelectedTags] = 0;
  *(void *)&v4[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellTags____lazy_storage___menuActionNoTags] = 0;
  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for FolderComposerFilterCellTags();
  return [super initWithFrame:a1, a2, a3, a4];
}

id sub_1001635C8(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellTags____lazy_storage___menu] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellTags_previousCustomTagSelection] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellTags____lazy_storage___menuActionOff] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellTags____lazy_storage___menuActionAnyTag] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellTags____lazy_storage___menuActionAnySelectedTag] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellTags____lazy_storage___menuActionAllSelectedTags] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellTags____lazy_storage___menuActionNoTags] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for FolderComposerFilterCellTags();
  id v3 = [super initWithCoder:a1];

  return v3;
}

void sub_100163694()
{
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellTags____lazy_storage___menuActionAnyTag));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellTags____lazy_storage___menuActionAnySelectedTag));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellTags____lazy_storage___menuActionAllSelectedTags));
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellTags____lazy_storage___menuActionNoTags);
}

id sub_100163724()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FolderComposerFilterCellTags();
  return [super dealloc];
}

uint64_t type metadata accessor for FolderComposerFilterCellTags()
{
  return self;
}

objc_class *sub_100163818()
{
  return sub_10016268C();
}

void sub_10016383C()
{
}

uint64_t sub_100163860()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100163898()
{
  return sub_1001631A8(2, 0, 0, 1);
}

uint64_t sub_1001638CC()
{
  return sub_1001631A8(0, 0, 1, 0);
}

uint64_t sub_100163900()
{
  return sub_1001631A8(0, 0, 2, 0);
}

uint64_t sub_100163934()
{
  return sub_1001631A8(1, 0, 0, 1);
}

void sub_100163968()
{
}

uint64_t sub_1001639AC()
{
  sub_100031418(0, &qword_1006A1560);
  uint64_t result = NSPredicate.init(format:_:)();
  qword_10069C3F0 = result;
  return result;
}

uint64_t VisibleChecklistItemsQuery.loggingConfiguration.getter()
{
  AppDependency.wrappedValue.getter();
  return v1;
}

uint64_t VisibleChecklistItemsQuery.loggingConfiguration.setter()
{
  return AppDependency.wrappedValue.setter();
}

void (*VisibleChecklistItemsQuery.loggingConfiguration.modify(void *a1))(void *a1)
{
  objc_super v2 = malloc(0x28uLL);
  *a1 = v2;
  void v2[4] = AppDependency.wrappedValue.modify();
  return sub_10015B020;
}

uint64_t VisibleChecklistItemsQuery.$loggingConfiguration.getter()
{
  return AppDependency.projectedValue.getter();
}

uint64_t VisibleTagsQuery.entities(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 24) = a1;
  *(void *)(v3 + 32) = a3;
  return _swift_task_switch(sub_100163B24, 0, 0);
}

uint64_t sub_100163B24()
{
  AppDependency.wrappedValue.getter();
  uint64_t v1 = v0[2];
  v0[5] = v1;
  objc_super v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_10069C400 + dword_10069C400);
  objc_super v2 = (void *)swift_task_alloc();
  v0[6] = v2;
  *objc_super v2 = v0;
  v2[1] = sub_100163BE4;
  uint64_t v3 = v0[3];
  return v5(v3, v1);
}

uint64_t sub_100163BE4(uint64_t a1)
{
  id v4 = *(void **)(*v2 + 40);
  uint64_t v8 = *v2;
  swift_task_dealloc();

  uint64_t v6 = *(uint64_t (**)(uint64_t))(v8 + 8);
  if (!v1) {
    uint64_t v5 = a1;
  }
  return v6(v5);
}

uint64_t sub_100163D04(uint64_t a1, uint64_t a2, char a3)
{
  *(unsigned char *)(v3 + 196) = a3;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  uint64_t v4 = type metadata accessor for Logger();
  *(void *)(v3 + 32) = v4;
  *(void *)(v3 + 40) = *(void *)(v4 - 8);
  *(void *)(v3 + 48) = swift_task_alloc();
  *(void *)(v3 + 56) = *(void *)(type metadata accessor for NoteEntity(0) - 8);
  *(void *)(v3 + 64) = swift_task_alloc();
  uint64_t v5 = type metadata accessor for NoteID();
  *(void *)(v3 + 72) = v5;
  *(void *)(v3 + 80) = *(void *)(v5 - 8);
  *(void *)(v3 + 88) = swift_task_alloc();
  *(void *)(v3 + 96) = swift_task_alloc();
  return _swift_task_switch(sub_100163E8C, 0, 0);
}

uint64_t sub_100163E8C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 104) = v2;
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 72);
    uint64_t v4 = *(void *)(v0 + 80);
    uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    v4 += 16;
    int v6 = *(_DWORD *)(v4 + 64);
    *(_DWORD *)(v0 + 192) = v6;
    *(void *)(v0 + 112) = *(void *)(v4 + 56);
    *(void *)(v0 + 120) = v5;
    *(void *)(v0 + 128) = 0;
    *(void *)(v0 + 136) = _swiftEmptyArrayStorage;
    uint64_t v7 = *(void *)(v0 + 96);
    uint64_t v8 = v1 + ((v6 + 32) & ~(unint64_t)v6);
    *(void *)(v0 + 144) = v4 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    swift_bridgeObjectRetain();
    v5(v7, v8, v3);
    id v14 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1006A3B80 + dword_1006A3B80);
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_100164024;
    uint64_t v10 = *(void *)(v0 + 96);
    uint64_t v11 = *(void *)(v0 + 24);
    return v14(v10, v11);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v13 = *(uint64_t (**)(void *))(v0 + 8);
    return v13(_swiftEmptyArrayStorage);
  }
}

uint64_t sub_100164024(uint64_t a1)
{
  *(void *)(*(void *)v1 + 160) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100164124, 0, 0);
}

uint64_t sub_100164124()
{
  uint64_t v50 = v0;
  uint64_t v1 = *(void **)(v0 + 160);
  if (v1)
  {
    id v2 = [*(id *)(v0 + 24) managedObjectContextForObjectID:*(void *)(v0 + 160)];
    *(void *)(v0 + 168) = v2;
    if (v2)
    {
      uint64_t v3 = v2;
      uint64_t v4 = *(void **)(v0 + 24);
      id v5 = v1;
      id v6 = v3;
      id v7 = v4;
      uint64_t v8 = (void *)swift_task_alloc();
      *(void *)(v0 + 176) = v8;
      *uint64_t v8 = v0;
      v8[1] = sub_100164698;
      uint64_t v9 = *(void *)(v0 + 64);
      char v10 = *(unsigned char *)(v0 + 196);
      return NoteEntity.init(for:in:includeContents:noteContext:)(v9, (uint64_t)v5, (uint64_t)v6, v10, (uint64_t)v7);
    }
    else
    {
      uint64_t v30 = *(void *)(v0 + 96);
      uint64_t v31 = *(void *)(v0 + 72);
      uint64_t v32 = *(void *)(v0 + 80);
      uint64_t v33 = swift_allocObject();
      *(void *)(v33 + 16) = 0;
      id v34 = v1;
      sub_100188C80(v33, 225, v34);

      swift_release();
      swift_willThrow();

      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v35 = *(uint64_t (**)(void))(v0 + 8);
      return v35();
    }
  }
  else
  {
    BOOL v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 120);
    uint64_t v13 = *(void *)(v0 + 88);
    uint64_t v14 = *(void *)(v0 + 96);
    uint64_t v15 = *(void *)(v0 + 72);
    static Logger.link.getter();
    v12(v13, v14, v15);
    BOOL v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.error.getter();
    BOOL v18 = os_log_type_enabled(v16, v17);
    uint64_t v19 = *(void *)(v0 + 88);
    uint64_t v20 = *(void *)(v0 + 96);
    uint64_t v21 = *(void *)(v0 + 72);
    uint64_t v22 = *(void *)(v0 + 80);
    uint64_t v23 = *(void *)(v0 + 40);
    uint64_t v24 = *(void *)(v0 + 48);
    uint64_t v47 = *(void *)(v0 + 32);
    if (v18)
    {
      uint64_t v46 = *(void *)(v0 + 96);
      uint64_t v25 = swift_slowAlloc();
      v49[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 136315394;
      *(void *)(v25 + 4) = sub_10045DA1C(0x69746E4565746F4ELL, 0xEA00000000007974, v49);
      *(_WORD *)(v25 + 12) = 2080;
      sub_10016F128(&qword_10069C5D0, (void (*)(uint64_t))&type metadata accessor for NoteID);
      uint64_t v26 = dispatch thunk of EntityIdentifierConvertible.entityIdentifierString.getter();
      *(void *)(v25 + 14) = sub_10045DA1C(v26, v27, v49);
      swift_bridgeObjectRelease();
      id v28 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
      v28(v19, v21);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "%s: Managed object not found with entity identifier: %s", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24, v47);
      uint64_t v29 = v46;
    }
    else
    {

      id v28 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
      v28(v19, v21);
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24, v47);
      uint64_t v29 = v20;
    }
    v28(v29, v21);
    uint64_t v36 = *(void *)(v0 + 128) + 1;
    if (v36 == *(void *)(v0 + 104))
    {
      uint64_t v37 = *(void *)(v0 + 136);
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      NSString v38 = *(uint64_t (**)(uint64_t))(v0 + 8);
      return v38(v37);
    }
    else
    {
      *(void *)(v0 + 128) = v36;
      unsigned int v39 = *(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 120);
      uint64_t v40 = *(void *)(v0 + 96);
      uint64_t v41 = *(void *)(v0 + 72);
      unint64_t v42 = *(void *)(v0 + 16)
          + ((*(unsigned __int8 *)(v0 + 192) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 192))
          + *(void *)(v0 + 112) * v36;
      *(void *)(v0 + 144) = (*(void *)(v0 + 80) + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v39(v40, v42, v41);
      uint64_t v48 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1006A3B80 + dword_1006A3B80);
      uint64_t v43 = (void *)swift_task_alloc();
      *(void *)(v0 + 152) = v43;
      *uint64_t v43 = v0;
      v43[1] = sub_100164024;
      uint64_t v44 = *(void *)(v0 + 96);
      uint64_t v45 = *(void *)(v0 + 24);
      return v48(v44, v45);
    }
  }
}

uint64_t sub_100164698()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    id v2 = sub_100164A10;
  }
  else
  {
    id v2 = sub_1001647B4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001647B4()
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v2 = *(void *)(v0 + 136);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    unint64_t v2 = sub_1001A8030(0, *(void *)(v2 + 16) + 1, 1, *(void *)(v0 + 136));
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    unint64_t v2 = sub_1001A8030(v3 > 1, v4 + 1, 1, v2);
  }
  id v6 = *(void **)(v0 + 160);
  id v5 = *(void **)(v0 + 168);
  uint64_t v7 = *(void *)(v0 + 96);
  uint64_t v8 = *(void *)(v0 + 72);
  uint64_t v9 = *(void *)(v0 + 80);
  uint64_t v11 = *(void *)(v0 + 56);
  uint64_t v10 = *(void *)(v0 + 64);
  *(void *)(v2 + 16) = v4 + 1;
  sub_10016F060(v10, v2+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v4, type metadata accessor for NoteEntity);

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  uint64_t v12 = *(void *)(v0 + 128) + 1;
  if (v12 == *(void *)(v0 + 104))
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = *(uint64_t (**)(unint64_t))(v0 + 8);
    return v13(v2);
  }
  else
  {
    *(void *)(v0 + 128) = v12;
    *(void *)(v0 + 136) = v2;
    uint64_t v15 = *(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 120);
    uint64_t v16 = *(void *)(v0 + 96);
    uint64_t v17 = *(void *)(v0 + 72);
    unint64_t v18 = *(void *)(v0 + 16)
        + ((*(unsigned __int8 *)(v0 + 192) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 192))
        + *(void *)(v0 + 112) * v12;
    *(void *)(v0 + 144) = (*(void *)(v0 + 80) + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v15(v16, v18, v17);
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1006A3B80 + dword_1006A3B80);
    uint64_t v19 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v19;
    *uint64_t v19 = v0;
    v19[1] = sub_100164024;
    uint64_t v20 = *(void *)(v0 + 96);
    uint64_t v21 = *(void *)(v0 + 24);
    return v22(v20, v21);
  }
}

uint64_t sub_100164A10()
{
  uint64_t v1 = *(void **)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 80);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_100164ADC(uint64_t a1, uint64_t a2, char a3)
{
  *(unsigned char *)(v3 + 276) = a3;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  uint64_t v4 = type metadata accessor for Logger();
  *(void *)(v3 + 32) = v4;
  *(void *)(v3 + 40) = *(void *)(v4 - 8);
  *(void *)(v3 + 48) = swift_task_alloc();
  uint64_t v5 = type metadata accessor for LocalizedStringResource.BundleDescription();
  *(void *)(v3 + 56) = v5;
  *(void *)(v3 + 64) = *(void *)(v5 - 8);
  *(void *)(v3 + 72) = swift_task_alloc();
  type metadata accessor for Locale();
  *(void *)(v3 + 80) = swift_task_alloc();
  type metadata accessor for String.LocalizationValue();
  *(void *)(v3 + 88) = swift_task_alloc();
  type metadata accessor for LocalizedStringResource();
  *(void *)(v3 + 96) = swift_task_alloc();
  uint64_t v6 = type metadata accessor for AttachmentEntity();
  *(void *)(v3 + 104) = v6;
  *(void *)(v3 + 112) = *(void *)(v6 - 8);
  *(void *)(v3 + 120) = swift_task_alloc();
  *(void *)(v3 + 128) = swift_task_alloc();
  uint64_t v7 = type metadata accessor for AttachmentID();
  *(void *)(v3 + 136) = v7;
  *(void *)(v3 + 144) = *(void *)(v7 - 8);
  *(void *)(v3 + 152) = swift_task_alloc();
  *(void *)(v3 + 160) = swift_task_alloc();
  return _swift_task_switch(sub_100164D58, 0, 0);
}

uint64_t sub_100164D58()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 168) = v2;
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 136);
    uint64_t v4 = *(void *)(v0 + 144);
    uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    v4 += 16;
    int v6 = *(_DWORD *)(v4 + 64);
    *(_DWORD *)(v0 + 256) = v6;
    *(_DWORD *)(v0 + 260) = enum case for LocalizedStringResource.BundleDescription.main(_:);
    *(void *)(v0 + 176) = *(void *)(v4 + 56);
    *(void *)(v0 + 184) = v5;
    *(void *)(v0 + 192) = 0;
    *(void *)(v0 + 200) = _swiftEmptyArrayStorage;
    uint64_t v7 = *(void *)(v0 + 160);
    uint64_t v8 = v1 + ((v6 + 32) & ~(unint64_t)v6);
    *(void *)(v0 + 208) = v4 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    swift_bridgeObjectRetain();
    v5(v7, v8, v3);
    uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_10069EEB0 + dword_10069EEB0);
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 216) = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_100164F44;
    uint64_t v10 = *(void *)(v0 + 160);
    uint64_t v11 = *(void *)(v0 + 24);
    return v14(v10, v11);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = *(uint64_t (**)(void *))(v0 + 8);
    return v13(_swiftEmptyArrayStorage);
  }
}

uint64_t sub_100164F44(uint64_t a1)
{
  *(void *)(*(void *)v1 + 224) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100165044, 0, 0);
}

uint64_t sub_100165044()
{
  uint64_t v64 = v0;
  uint64_t v1 = *(void **)(v0 + 224);
  if (v1)
  {
    id v2 = [*(id *)(v0 + 24) managedObjectContextForObjectID:*(void *)(v0 + 224)];
    *(void *)(v0 + 232) = v2;
    if (v2)
    {
      uint64_t v3 = v2;
      unsigned int v58 = *(_DWORD *)(v0 + 260);
      uint64_t v4 = *(int **)(v0 + 104);
      uint64_t v60 = *(void *)(v0 + 128);
      uint64_t v5 = *(void *)(v0 + 64);
      uint64_t v56 = *(void *)(v0 + 72);
      uint64_t v57 = *(void *)(v0 + 56);
      int v6 = *(void **)(v0 + 24);
      uint64_t v7 = v4[6];
      *(_DWORD *)(v0 + 264) = v7;
      uint64_t v8 = (void *)(v60 + v7);
      *uint64_t v8 = 0;
      v8[1] = 0;
      uint64_t v9 = v4[7];
      *(_DWORD *)(v0 + 268) = v9;
      uint64_t v10 = v60 + v9;
      uint64_t v11 = type metadata accessor for URL();
      uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
      id v13 = v1;
      id v14 = v3;
      id v15 = v6;
      v12(v10, 1, 1, v11);
      uint64_t v16 = v4[8];
      *(_DWORD *)(v0 + 272) = v16;
      sub_10002F214((uint64_t *)&unk_10069EE20);
      String.LocalizationValue.init(stringLiteral:)();
      static Locale.current.getter();
      (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v56, v58, v57);
      LocalizedStringResource.init(_:table:locale:bundle:comment:)();
      *(void *)(v60 + v16) = EntityProperty<>.init(title:)();
      id v17 = v13;
      id v18 = v14;
      uint64_t v19 = (void *)swift_task_alloc();
      *(void *)(v0 + 240) = v19;
      *uint64_t v19 = v0;
      v19[1] = sub_10016574C;
      uint64_t v20 = *(void *)(v0 + 120);
      return AttachmentEntity.init(for:in:includeContents:)(v20, (uint64_t)v17, (uint64_t)v18);
    }
    else
    {
      uint64_t v40 = *(void *)(v0 + 160);
      uint64_t v42 = *(void *)(v0 + 136);
      uint64_t v41 = *(void *)(v0 + 144);
      uint64_t v43 = swift_allocObject();
      *(void *)(v43 + 16) = 0;
      id v44 = v1;
      sub_100188E80(v43, 225, v44);

      swift_release();
      swift_willThrow();

      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v40, v42);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v45 = *(uint64_t (**)(void))(v0 + 8);
      return v45();
    }
  }
  else
  {
    uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 184);
    uint64_t v23 = *(void *)(v0 + 152);
    uint64_t v24 = *(void *)(v0 + 160);
    uint64_t v25 = *(void *)(v0 + 136);
    static Logger.link.getter();
    v22(v23, v24, v25);
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.error.getter();
    BOOL v28 = os_log_type_enabled(v26, v27);
    uint64_t v29 = *(void *)(v0 + 152);
    uint64_t v30 = *(void *)(v0 + 160);
    uint64_t v31 = *(void *)(v0 + 136);
    uint64_t v32 = *(void *)(v0 + 144);
    uint64_t v33 = *(void *)(v0 + 40);
    uint64_t v34 = *(void *)(v0 + 48);
    uint64_t v61 = *(void *)(v0 + 32);
    if (v28)
    {
      uint64_t v59 = *(void *)(v0 + 160);
      uint64_t v35 = swift_slowAlloc();
      v63[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v35 = 136315394;
      *(void *)(v35 + 4) = sub_10045DA1C(0xD000000000000010, 0x800000010054C1E0, v63);
      *(_WORD *)(v35 + 12) = 2080;
      sub_10016F128(&qword_10069C568, (void (*)(uint64_t))&type metadata accessor for AttachmentID);
      uint64_t v36 = dispatch thunk of EntityIdentifierConvertible.entityIdentifierString.getter();
      *(void *)(v35 + 14) = sub_10045DA1C(v36, v37, v63);
      swift_bridgeObjectRelease();
      NSString v38 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
      v38(v29, v31);
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "%s: Managed object not found with entity identifier: %s", (uint8_t *)v35, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v34, v61);
      uint64_t v39 = v59;
    }
    else
    {

      NSString v38 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
      v38(v29, v31);
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v34, v61);
      uint64_t v39 = v30;
    }
    v38(v39, v31);
    uint64_t v46 = *(void *)(v0 + 192) + 1;
    if (v46 == *(void *)(v0 + 168))
    {
      uint64_t v47 = *(void *)(v0 + 200);
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v48 = *(uint64_t (**)(uint64_t))(v0 + 8);
      return v48(v47);
    }
    else
    {
      *(void *)(v0 + 192) = v46;
      uint64_t v49 = *(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 184);
      uint64_t v50 = *(void *)(v0 + 160);
      uint64_t v51 = *(void *)(v0 + 136);
      unint64_t v52 = *(void *)(v0 + 16)
          + ((*(unsigned __int8 *)(v0 + 256) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 256))
          + *(void *)(v0 + 176) * v46;
      *(void *)(v0 + 208) = (*(void *)(v0 + 144) + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v49(v50, v52, v51);
      uint64_t v62 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_10069EEB0 + dword_10069EEB0);
      uint64_t v53 = (void *)swift_task_alloc();
      *(void *)(v0 + 216) = v53;
      *uint64_t v53 = v0;
      v53[1] = sub_100164F44;
      uint64_t v54 = *(void *)(v0 + 160);
      uint64_t v55 = *(void *)(v0 + 24);
      return v62(v54, v55);
    }
  }
}

uint64_t sub_10016574C()
{
  *(void *)(*(void *)v1 + 248) = v0;
  swift_task_dealloc();
  if (v0) {
    id v2 = sub_100165B5C;
  }
  else {
    id v2 = sub_100165860;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100165860()
{
  uint64_t v1 = *(int *)(v0 + 268);
  uint64_t v3 = *(void **)(v0 + 224);
  id v2 = *(void **)(v0 + 232);
  uint64_t v5 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 128);

  swift_bridgeObjectRelease();
  sub_10016EFE4(v4 + v1);
  swift_release();
  sub_10016F060(v5, v4, (uint64_t (*)(void))type metadata accessor for AttachmentEntity);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v7 = *(void *)(v0 + 200);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    unint64_t v7 = sub_1001A8BA8(0, *(void *)(v7 + 16) + 1, 1, *(void *)(v0 + 200));
  }
  unint64_t v9 = *(void *)(v7 + 16);
  unint64_t v8 = *(void *)(v7 + 24);
  if (v9 >= v8 >> 1) {
    unint64_t v7 = sub_1001A8BA8(v8 > 1, v9 + 1, 1, v7);
  }
  uint64_t v11 = *(void **)(v0 + 224);
  uint64_t v10 = *(void **)(v0 + 232);
  uint64_t v12 = *(void *)(v0 + 160);
  uint64_t v13 = *(void *)(v0 + 136);
  uint64_t v14 = *(void *)(v0 + 144);
  uint64_t v15 = *(void *)(v0 + 128);
  uint64_t v16 = *(void *)(v0 + 112);
  *(void *)(v7 + 16) = v9 + 1;
  sub_10016F060(v15, v7+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(void *)(v16 + 72) * v9, (uint64_t (*)(void))type metadata accessor for AttachmentEntity);

  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  uint64_t v17 = *(void *)(v0 + 192) + 1;
  if (v17 == *(void *)(v0 + 168))
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v18 = *(uint64_t (**)(unint64_t))(v0 + 8);
    return v18(v7);
  }
  else
  {
    *(void *)(v0 + 192) = v17;
    *(void *)(v0 + 200) = v7;
    uint64_t v20 = *(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 184);
    uint64_t v21 = *(void *)(v0 + 160);
    uint64_t v22 = *(void *)(v0 + 136);
    unint64_t v23 = *(void *)(v0 + 16)
        + ((*(unsigned __int8 *)(v0 + 256) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 256))
        + *(void *)(v0 + 176) * v17;
    *(void *)(v0 + 208) = (*(void *)(v0 + 144) + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v20(v21, v23, v22);
    os_log_type_t v27 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_10069EEB0 + dword_10069EEB0);
    uint64_t v24 = (void *)swift_task_alloc();
    *(void *)(v0 + 216) = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_100164F44;
    uint64_t v25 = *(void *)(v0 + 160);
    uint64_t v26 = *(void *)(v0 + 24);
    return v27(v25, v26);
  }
}

uint64_t sub_100165B5C()
{
  uint64_t v1 = *(int *)(v0 + 268);
  uint64_t v3 = *(void **)(v0 + 224);
  id v2 = *(void **)(v0 + 232);
  uint64_t v9 = *(void *)(v0 + 160);
  uint64_t v4 = *(void *)(v0 + 136);
  uint64_t v5 = *(void *)(v0 + 144);
  uint64_t v6 = *(void *)(v0 + 128);

  swift_bridgeObjectRelease();
  sub_10016EFE4(v6 + v1);
  swift_release();
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v4);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t VisibleTagsQuery.suggestedEntities()(uint64_t a1, uint64_t a2)
{
  v2[9] = a1;
  v2[10] = a2;
  uint64_t v3 = type metadata accessor for Logger();
  v2[11] = v3;
  v2[12] = *(void *)(v3 - 8);
  v2[13] = swift_task_alloc();
  return _swift_task_switch(sub_100165D80, 0, 0);
}

uint64_t sub_100165D80()
{
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  AppDependency.wrappedValue.getter();
  uint64_t v3 = (void *)v0[7];
  v0[14] = [v3 modernManagedObjectContext];

  uint64_t v4 = swift_allocObject();
  v0[15] = v4;
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v1;
  swift_retain();
  swift_retain();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[16] = v5;
  uint64_t v6 = sub_10002F214(&qword_10069C410);
  *uint64_t v5 = v0;
  v5[1] = sub_100165EC4;
  return NSManagedObjectContext.perform<A>(_:)(v0 + 6, sub_10016B410, v4, v6);
}

uint64_t sub_100165EC4()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 112);
  swift_task_dealloc();
  swift_release();

  return _swift_task_switch(sub_100165FF4, 0, 0);
}

uint64_t sub_100165FF4()
{
  uint64_t v17 = v0;
  uint64_t v1 = v0[6];
  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  swift_bridgeObjectRetain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v13 = v0[12];
    uint64_t v14 = v0[11];
    uint64_t v15 = v0[13];
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136642819;
    type metadata accessor for TagEntity();
    swift_bridgeObjectRetain();
    uint64_t v5 = Array.description.getter();
    unint64_t v7 = v6;
    swift_bridgeObjectRelease();
    v0[8] = sub_10045DA1C(v5, v7, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "VisibleTagsQuery: suggesting tags %{sensitive}s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v14);
  }
  else
  {
    uint64_t v9 = v0[12];
    uint64_t v8 = v0[13];
    uint64_t v10 = v0[11];
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(uint64_t))v0[1];
  return v11(v1);
}

uint64_t sub_100166268@<X0>(void *a1@<X8>)
{
  uint64_t v35 = a1;
  uint64_t v2 = type metadata accessor for TagEntity();
  uint64_t v40 = *(void *)(v2 - 8);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  unint64_t v7 = (char *)&v35 - v6;
  uint64_t v8 = self;
  AppDependency.wrappedValue.getter();
  id v9 = v41;
  id v10 = [v41 modernManagedObjectContext];

  id v11 = [v8 canonicalHashtagsInContext:v10];
  sub_100031418(0, (unint64_t *)&qword_1006A49F0);
  unint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v12 >> 62))
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v36 = v1;
    if (v13) {
      goto LABEL_3;
    }
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v16 = &_swiftEmptyArrayStorage;
LABEL_20:
    *uint64_t v35 = v16;
    return result;
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v36 = v1;
  if (!v13) {
    goto LABEL_19;
  }
LABEL_3:
  id v41 = &_swiftEmptyArrayStorage;
  uint64_t result = sub_100169A8C(0, v13 & ~(v13 >> 63), 0);
  if ((v13 & 0x8000000000000000) == 0)
  {
    uint64_t v15 = 0;
    unint64_t v37 = v12 & 0xC000000000000001;
    uint64_t v38 = v13;
    uint64_t v16 = v41;
    unint64_t v39 = v12;
    do
    {
      if (v37) {
        id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v17 = *(id *)(v12 + 8 * v15 + 32);
      }
      id v18 = v17;
      TagID.init(_:)();
      id v19 = [v18 objectID];
      id v20 = [v19 URIRepresentation];

      static URL._unconditionallyBridgeFromObjectiveC(_:)();
      id v21 = [v18 standardizedContent];
      if (v21)
      {
        uint64_t v22 = v21;
        uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v25 = v24;
      }
      else
      {
        uint64_t v23 = 0;
        unint64_t v25 = 0xE000000000000000;
      }
      uint64_t v26 = (uint64_t *)&v5[*(int *)(v2 + 24)];
      *uint64_t v26 = v23;
      v26[1] = v25;
      id v27 = [v18 displayText:v35];
      if (v27)
      {
        uint64_t v28 = v27;
        uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v31 = v30;
      }
      else
      {

        uint64_t v29 = 0;
        unint64_t v31 = 0xE000000000000000;
      }
      uint64_t v32 = (uint64_t *)&v5[*(int *)(v2 + 28)];
      *uint64_t v32 = v29;
      v32[1] = v31;
      sub_10016F060((uint64_t)v5, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for TagEntity);
      id v41 = v16;
      unint64_t v34 = v16[2];
      unint64_t v33 = v16[3];
      if (v34 >= v33 >> 1)
      {
        sub_100169A8C(v33 > 1, v34 + 1, 1);
        uint64_t v16 = v41;
      }
      ++v15;
      _OWORD v16[2] = v34 + 1;
      sub_10016F060((uint64_t)v7, (uint64_t)v16+ ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))+ *(void *)(v40 + 72) * v34, (uint64_t (*)(void))type metadata accessor for TagEntity);
      unint64_t v12 = v39;
    }
    while (v38 != v15);
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  __break(1u);
  return result;
}

uint64_t sub_100166640@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = _s11MobileNotes18VisibleTablesQueryVACycfC_0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100166668(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 8);
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v3;
  return _swift_task_switch(sub_100163B24, 0, 0);
}

uint64_t sub_10016668C(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10016F18C;
  return VisibleTagsQuery.suggestedEntities()(v3, v4);
}

uint64_t sub_100166728()
{
  AppDependency.wrappedValue.getter();
  return v1;
}

uint64_t sub_100166760(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10016B798();
  *uint64_t v5 = v2;
  v5[1] = sub_100161724;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t sub_100166814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_100161724;
  return DynamicOptionsProvider.defaultResult()(a1, a2, a3);
}

uint64_t VisibleTagsQuery.entities(matching:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[41] = a3;
  v4[42] = a4;
  v4[39] = a1;
  v4[40] = a2;
  uint64_t v5 = type metadata accessor for TagEntity();
  v4[43] = v5;
  v4[44] = *(void *)(v5 - 8);
  v4[45] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for TagID();
  v4[46] = v6;
  v4[47] = *(void *)(v6 - 8);
  v4[48] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Logger();
  v4[49] = v7;
  v4[50] = *(void *)(v7 - 8);
  v4[51] = swift_task_alloc();
  v4[52] = swift_task_alloc();
  v4[53] = swift_task_alloc();
  v4[54] = swift_task_alloc();
  v4[55] = swift_task_alloc();
  return _swift_task_switch(sub_100166A7C, 0, 0);
}

uint64_t sub_100166A7C()
{
  uint64_t v36 = v0;
  sub_100031418(0, (unint64_t *)&qword_1006A49F0);
  id v34 = (id)static NSObject<>.ic_fetchRequest()();
  v0[56] = v34;
  sub_10002F214(&qword_10069BA00);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100524CE0;
  *(void *)(v1 + 32) = [(id)swift_getObjCClassFromMetadata() predicateForVisibleObjects];
  if (qword_10069AC50 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_10069C3F0;
  sub_10002F214((uint64_t *)&unk_10069E1D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100524D10;
  *(void *)(inited + 32) = 0x7972657571;
  *(void *)(inited + 40) = 0xE500000000000000;
  uint64_t v4 = self;
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v4 standardizedHashtagRepresentationForDisplayText:v5];

  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;

  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = v7;
  *(void *)(inited + 56) = v9;
  sub_100167B58(inited);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v11 = [v2 predicateWithSubstitutionVariables:isa];

  *(void *)(v1 + 40) = v11;
  uint64_t v35 = v1;
  specialized Array._endMutation()();
  sub_100031418(0, &qword_1006A1560);
  Class v12 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v13 = [self andPredicateWithSubpredicates:v12];

  uint64_t v14 = v34;
  [v34 setPredicate:v13];

  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  swift_bridgeObjectRetain_n();
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.info.getter();
  BOOL v17 = os_log_type_enabled(v15, v16);
  uint64_t v18 = v0[55];
  uint64_t v20 = v0[49];
  uint64_t v19 = v0[50];
  unint64_t v21 = v0[40];
  if (v17)
  {
    uint64_t v32 = v0[39];
    uint64_t v33 = v0[49];
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 136642819;
    swift_bridgeObjectRetain();
    v0[38] = sub_10045DA1C(v32, v21, &v35);
    uint64_t v14 = v34;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "VisibleTagsQuery: performing with query string '%{sensitive}s'", v22, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    v23(v18, v33);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    v23(v18, v20);
  }
  v0[57] = v23;
  uint64_t v25 = v0[41];
  uint64_t v24 = v0[42];
  AppDependency.wrappedValue.getter();
  uint64_t v26 = (void *)v0[33];
  v0[58] = [v26 modernManagedObjectContext];

  id v27 = (void *)swift_allocObject();
  v0[59] = v27;
  v27[2] = v25;
  uint64_t v27[3] = v24;
  v27[4] = v14;
  swift_retain();
  swift_retain();
  id v28 = v14;
  uint64_t v29 = (void *)swift_task_alloc();
  v0[60] = v29;
  uint64_t v30 = sub_10002F214(&qword_10069C410);
  *uint64_t v29 = v0;
  v29[1] = sub_100166FC8;
  return NSManagedObjectContext.perform<A>(_:)(v0 + 32, sub_10016B474, v27, v30);
}

uint64_t sub_100166FC8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 488) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1001678D0;
  }
  else
  {
    uint64_t v4 = *(void **)(v2 + 464);
    swift_release();

    uint64_t v3 = sub_1001670E8;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001670E8()
{
  uint64_t v68 = v0;
  uint64_t v1 = *(void *)(v0 + 256);
  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  swift_bridgeObjectRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 134349056;
    *(void *)(v0 + 296) = *(void *)(v1 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "VisibleTagsQuery: found %{public}ld matching tag(s)", v4, 0xCu);
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  (*(void (**)(void, void))(v0 + 456))(*(void *)(v0 + 432), *(void *)(v0 + 392));
  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  swift_bridgeObjectRetain_n();
  NSString v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v5, v6))
  {
    os_log_type_t v57 = v6;
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v66 = swift_slowAlloc();
    unsigned int v58 = v7;
    *(_DWORD *)uint64_t v7 = 136446210;
    int64_t v8 = *(void *)(v1 + 16);
    if (v8)
    {
      uint64_t v54 = v5;
      uint64_t v9 = *(void *)(v0 + 376);
      uint64_t v10 = *(void *)(v0 + 352);
      uint64_t v67 = &_swiftEmptyArrayStorage;
      sub_100169ACC(0, v8, 0);
      uint64_t v61 = v1;
      uint64_t v11 = v1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
      uint64_t v63 = *(void *)(v10 + 72);
      Class v12 = &_swiftEmptyArrayStorage;
      do
      {
        uint64_t v13 = *(void *)(v0 + 384);
        uint64_t v14 = *(void *)(v0 + 360);
        uint64_t v15 = *(void *)(v0 + 368);
        sub_10016B494(v11, v14);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v13, v14, v15);
        sub_10016B4F8(v14);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100169ACC(0, v12[2] + 1, 1);
          Class v12 = v67;
        }
        unint64_t v17 = v12[2];
        unint64_t v16 = v12[3];
        if (v17 >= v16 >> 1)
        {
          sub_100169ACC(v16 > 1, v17 + 1, 1);
          Class v12 = v67;
        }
        uint64_t v18 = *(void *)(v0 + 384);
        uint64_t v19 = *(void *)(v0 + 368);
        v12[2] = v17 + 1;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v9 + 32))((unint64_t)v12+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v17, v18, v19);
        uint64_t v67 = v12;
        v11 += v63;
        --v8;
      }
      while (v8);
      uint64_t v1 = v61;
      NSString v5 = v54;
    }
    uint64_t v64 = *(void (**)(uint64_t, uint64_t))(v0 + 456);
    uint64_t v60 = *(void *)(v0 + 424);
    uint64_t v23 = *(void *)(v0 + 392);
    uint64_t v24 = Array.description.getter();
    unint64_t v26 = v25;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 288) = sub_10045DA1C(v24, v26, &v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v5, v57, "VisibleTagsQuery: matching tag IDs: %{public}s", v58, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v64(v60, v23);
  }
  else
  {
    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v0 + 456);
    uint64_t v21 = *(void *)(v0 + 424);
    uint64_t v22 = *(void *)(v0 + 392);
    swift_bridgeObjectRelease_n();

    v20(v21, v22);
  }
  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  swift_bridgeObjectRetain_n();
  id v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v27, v28))
  {
    os_log_type_t v59 = v28;
    uint64_t v65 = (uint8_t *)swift_slowAlloc();
    uint64_t v66 = swift_slowAlloc();
    *(_DWORD *)uint64_t v65 = 136642819;
    int64_t v29 = *(void *)(v1 + 16);
    uint64_t v62 = v1;
    if (v29)
    {
      uint64_t v55 = v27;
      uint64_t v31 = *(void *)(v0 + 344);
      uint64_t v30 = *(void *)(v0 + 352);
      uint64_t v67 = &_swiftEmptyArrayStorage;
      sub_100169AAC(0, v29, 0);
      uint64_t v32 = v1 + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80));
      uint64_t v33 = *(void *)(v30 + 72);
      id v34 = v67;
      do
      {
        uint64_t v35 = *(void *)(v0 + 360);
        sub_10016B494(v32, v35);
        uint64_t v36 = (uint64_t *)(v35 + *(int *)(v31 + 28));
        uint64_t v37 = *v36;
        uint64_t v38 = v36[1];
        swift_bridgeObjectRetain();
        sub_10016B4F8(v35);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100169AAC(0, v34[2] + 1, 1);
          id v34 = v67;
        }
        unint64_t v40 = v34[2];
        unint64_t v39 = v34[3];
        if (v40 >= v39 >> 1)
        {
          sub_100169AAC(v39 > 1, v40 + 1, 1);
          id v34 = v67;
        }
        void v34[2] = v40 + 1;
        id v41 = (char *)&v34[2 * v40];
        *((void *)v41 + 4) = v37;
        *((void *)v41 + 5) = v38;
        v32 += v33;
        --v29;
      }
      while (v29);
      id v27 = v55;
    }
    uint64_t v47 = *(void **)(v0 + 448);
    uint64_t v46 = *(void (**)(uint64_t, uint64_t))(v0 + 456);
    uint64_t v56 = *(void *)(v0 + 416);
    uint64_t v48 = *(void *)(v0 + 392);
    uint64_t v49 = Array.description.getter();
    unint64_t v51 = v50;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 280) = sub_10045DA1C(v49, v51, &v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v45 = v62;
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v27, v59, "VisibleTagsQuery: matching tag displayText: %{sensitive}s", v65, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v46(v56, v48);
  }
  else
  {
    uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v0 + 456);
    uint64_t v43 = *(void *)(v0 + 416);
    uint64_t v44 = *(void *)(v0 + 392);

    swift_bridgeObjectRelease_n();
    v42(v43, v44);
    uint64_t v45 = v1;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v52 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v52(v45);
}

uint64_t sub_1001678D0()
{
  uint64_t v1 = (void *)v0[58];
  swift_release();

  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    NSString v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    uint64_t v6 = _convertErrorToNSError(_:)();
    v0[34] = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *NSString v5 = v6;
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "VisibleTagsQuery: error fetching tags: %@", v4, 0xCu);
    sub_10002F214(&qword_10069FD50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
  }
  uint64_t v7 = v2;
  uint64_t v9 = (void *)v0[56];
  int64_t v8 = (void (*)(uint64_t, uint64_t))v0[57];
  uint64_t v10 = v0[51];
  uint64_t v11 = v0[49];

  v8(v10, v11);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  Class v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

unint64_t sub_100167B30(uint64_t a1)
{
  return sub_100167DDC(a1, &qword_10069C540, &qword_10069C548, (uint64_t (*)(uint64_t))sub_1002B62FC);
}

unint64_t sub_100167B58(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    os_log_type_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10002F214(&qword_10069C620);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  os_log_type_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_10002F034(v6, (uint64_t)&v15, &qword_10069C628);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1002B63D4(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_100032E84(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    _DWORD v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100167C90(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10002F214(&qword_10069C4C0);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1002B63D4(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    void *v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100167DB4(uint64_t a1)
{
  return sub_100167DDC(a1, &qword_10069C4C8, &qword_10069C4D0, (uint64_t (*)(uint64_t))sub_1002B644C);
}

unint64_t sub_100167DDC(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10002F214(a2);
  uint64_t v7 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = v7 + 64;
  uint64_t v11 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_10002F034(v11, (uint64_t)&v18, a3);
    uint64_t v12 = v18;
    unint64_t result = a4(v18);
    if (v14) {
      break;
    }
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v8[6] + 8 * result) = v12;
    unint64_t result = (unint64_t)sub_100032E84(&v19, (_OWORD *)(v8[7] + 32 * result));
    uint64_t v15 = v8[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v8[2] = v17;
    v11 += 40;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100167F0C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10002F214(&qword_10069C488);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v20 = v2 + 64;
  swift_retain();
  uint64_t v5 = (void *)(a1 + 80);
  while (1)
  {
    uint64_t v6 = *(v5 - 6);
    uint64_t v7 = *(v5 - 5);
    uint64_t v8 = *(v5 - 4);
    uint64_t v9 = *(v5 - 3);
    unint64_t v10 = *(v5 - 2);
    char v11 = *((unsigned char *)v5 - 8);
    uint64_t v12 = *v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10016ECFC(v10, v11);
    swift_retain();
    unint64_t result = sub_1002B64E0(v6, v7, v8, v9);
    if (v14) {
      break;
    }
    *(void *)(v20 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v15 = (uint64_t *)(v3[6] + 32 * result);
    *uint64_t v15 = v6;
    v15[1] = v7;
    void v15[2] = v8;
    v15[3] = v9;
    uint64_t v16 = v3[7] + 24 * result;
    *(void *)uint64_t v16 = v10;
    *(unsigned char *)(v16 + 8) = v11;
    *(void *)(v16 + 16) = v12;
    uint64_t v17 = v3[2];
    BOOL v18 = __OFADD__(v17, 1);
    uint64_t v19 = v17 + 1;
    if (v18) {
      goto LABEL_11;
    }
    v5 += 7;
    _DWORD v3[2] = v19;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10016807C(uint64_t a1)
{
  uint64_t v2 = sub_10002F214(&qword_10069C588);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10002F214(&qword_10069C590);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_10002F034(v12, (uint64_t)v5, &qword_10069C588);
    unint64_t result = sub_1002B660C((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = type metadata accessor for URL();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    void v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100168270(uint64_t a1)
{
  uint64_t v2 = sub_10002F214(&qword_10069C550);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10002F214(&qword_10069C558);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = &v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_10002F034(v12, (uint64_t)v5, &qword_10069C550);
    unint64_t result = sub_1002B66E0((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_10002F214(&qword_10069D190);
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    uint64_t v19 = v7[7] + 24 * v16;
    char v20 = v9[16];
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v9;
    *(unsigned char *)(v19 + 16) = v20;
    uint64_t v21 = v7[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_11;
    }
    void v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100168480(uint64_t a1)
{
  return sub_100167DDC(a1, &qword_10069C470, &qword_10069C478, (uint64_t (*)(uint64_t))sub_1002B62FC);
}

unint64_t sub_1001684A8(uint64_t a1)
{
  return sub_10016862C(a1, &qword_10069DE40, &qword_10069C608, (uint64_t (*)(void))sub_1002B6808);
}

unint64_t sub_1001684D0(uint64_t a1)
{
  return sub_100168850(a1, &qword_10069C5F8, &qword_10069C600, (uint64_t (*)(void))sub_1002B680C);
}

unint64_t sub_1001684F8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10002F214(&qword_10069C4B8);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = *(v4 - 1);
    id v7 = v5;
    unint64_t result = sub_1002B65BC((uint64_t)v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v2[6] + v10) = v6;
    *(void *)(v2[7] + v10) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100168604(uint64_t a1)
{
  return sub_10016862C(a1, &qword_10069C5E8, &qword_10069C5F0, (uint64_t (*)(void))sub_1002B68BC);
}

unint64_t sub_10016862C(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  int64_t v29 = a4;
  uint64_t v7 = sub_10002F214(a2);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    BOOL v12 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10002F214(a3);
  uint64_t v11 = static _DictionaryStorage.allocate(capacity:)();
  BOOL v12 = (void *)v11;
  uint64_t v13 = *(void *)(a1 + 16);
  if (!v13)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v12;
  }
  char v14 = &v10[*(int *)(v7 + 48)];
  uint64_t v15 = v11 + 64;
  unint64_t v16 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v28 = a1;
  uint64_t v17 = a1 + v16;
  uint64_t v18 = *(void *)(v8 + 72);
  swift_retain();
  while (1)
  {
    sub_10002F034(v17, (uint64_t)v10, a2);
    char v19 = *v10;
    unint64_t result = v29(*v10);
    if (v21) {
      break;
    }
    unint64_t v22 = result;
    *(void *)(v15 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(unsigned char *)(v12[6] + result) = v19;
    uint64_t v23 = v12[7];
    uint64_t v24 = type metadata accessor for DisplayRepresentation();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v23 + *(void *)(*(void *)(v24 - 8) + 72) * v22, v14, v24);
    uint64_t v25 = v12[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26) {
      goto LABEL_11;
    }
    v12[2] = v27;
    v17 += v18;
    if (!--v13)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100168828(uint64_t a1)
{
  return sub_100168850(a1, &qword_10069C5D8, &qword_10069C5E0, (uint64_t (*)(void))sub_1002B69CC);
}

unint64_t sub_100168850(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  int64_t v29 = a4;
  uint64_t v7 = sub_10002F214(a2);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    BOOL v12 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10002F214(a3);
  uint64_t v11 = static _DictionaryStorage.allocate(capacity:)();
  BOOL v12 = (void *)v11;
  uint64_t v13 = *(void *)(a1 + 16);
  if (!v13)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v12;
  }
  char v14 = &v10[*(int *)(v7 + 48)];
  uint64_t v15 = v11 + 64;
  unint64_t v16 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v28 = a1;
  uint64_t v17 = a1 + v16;
  uint64_t v18 = *(void *)(v8 + 72);
  swift_retain();
  while (1)
  {
    sub_10002F034(v17, (uint64_t)v10, a2);
    char v19 = *v10;
    unint64_t result = v29(*v10);
    if (v21) {
      break;
    }
    unint64_t v22 = result;
    *(void *)(v15 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(unsigned char *)(v12[6] + result) = v19;
    uint64_t v23 = v12[7];
    uint64_t v24 = type metadata accessor for DisplayRepresentation();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v23 + *(void *)(*(void *)(v24 - 8) + 72) * v22, v14, v24);
    uint64_t v25 = v12[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26) {
      goto LABEL_11;
    }
    v12[2] = v27;
    v17 += v18;
    if (!--v13)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100168A4C(uint64_t a1)
{
  return sub_100169394(a1, &qword_10069C580);
}

unint64_t sub_100168A58(uint64_t a1)
{
  return sub_10016862C(a1, &qword_10069C5B8, &qword_10069C5C0, (uint64_t (*)(void))sub_1002B6AFC);
}

unint64_t sub_100168A80(uint64_t a1)
{
  return sub_10016862C(a1, &qword_10069C5A8, &qword_10069C5B0, (uint64_t (*)(void))sub_1002B6C20);
}

unint64_t sub_100168AA8(uint64_t a1)
{
  return sub_10016862C(a1, &qword_10069C598, &qword_10069C5A0, (uint64_t (*)(void))sub_1002B6CE0);
}

unint64_t sub_100168AD0(uint64_t a1)
{
  uint64_t v2 = sub_10002F214(&qword_10069C570);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10002F214(&qword_10069C578);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = &v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_10002F034(v12, (uint64_t)v5, &qword_10069C570);
    unint64_t result = sub_1002B6300((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = type metadata accessor for UUID();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    char v19 = (void *)(v7[7] + 16 * v16);
    uint64_t v20 = *((void *)v9 + 1);
    *char v19 = *(void *)v9;
    v19[1] = v20;
    uint64_t v21 = v7[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_11;
    }
    void v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100168CCC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10002F214(&qword_10069C4A0);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_10002F034(v6, (uint64_t)v15, &qword_10069C4A8);
    unint64_t result = sub_100033028((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_100032E84(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    _DWORD v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100168E10(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10002F214(&qword_10069C538);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1002B6DD4(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v10 = (uint64_t *)(v2[6] + 16 * result);
    *long long v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100168F24(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10002F214(&qword_1006A4630);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1002B63D4(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v10 = (uint64_t *)(v2[6] + 16 * result);
    *long long v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100169038(uint64_t a1)
{
  return sub_100168850(a1, &qword_10069C518, &qword_10069C520, (uint64_t (*)(void))sub_1002B6E60);
}

unint64_t sub_100169060(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10002F214(&qword_10069C4B0);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (id *)(a1 + 40);
  while (1)
  {
    int v5 = *(_DWORD *)v4;
    id v6 = *(v4 - 1);
    unint64_t result = sub_1002B6F10((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v2[6] + 8 * result) = v6;
    *(_DWORD *)(v2[7] + 4 * result) = v5;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100169160(uint64_t a1)
{
  uint64_t v2 = sub_10002F214(&qword_10069C500);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  int v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10002F214(&qword_10069C508);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (long long *)&v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_10002F034(v12, (uint64_t)v5, &qword_10069C500);
    unint64_t result = sub_1002B6300((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = type metadata accessor for UUID();
    (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    unint64_t result = sub_10016EFCC(v9, v7[7] + 40 * v16);
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    void v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100169360(uint64_t a1)
{
  return sub_10016862C(a1, &qword_1006A5670, &qword_10069C510, (uint64_t (*)(void))sub_1002B6F60);
}

unint64_t sub_100169388(uint64_t a1)
{
  return sub_100169394(a1, &qword_10069C498);
}

unint64_t sub_100169394(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10002F214(a2);
  uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  int v5 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v6 = (uint64_t)*(v5 - 2);
    uint64_t v7 = (uint64_t)*(v5 - 1);
    uint64_t v8 = *v5;
    swift_bridgeObjectRetain();
    id v9 = v8;
    unint64_t result = sub_1002B63D4(v6, v7);
    if (v11) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v12 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v12 = v6;
    v12[1] = v7;
    *(void *)(v3[7] + 8 * result) = v9;
    uint64_t v13 = v3[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    _DWORD v3[2] = v15;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1001694AC(uint64_t a1)
{
  return sub_10016862C(a1, &qword_10069C4E0, &qword_10069C4E8, (uint64_t (*)(void))sub_1002B70C4);
}

unint64_t sub_1001694D4(uint64_t a1)
{
  return sub_10016862C(a1, &qword_1006A9450, &qword_10069C4D8, (uint64_t (*)(void))sub_1002B6808);
}

void sub_1001694FC(void *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for TagEntity();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  id v9 = (char *)&v36 - v8;
  AppDependency.wrappedValue.getter();
  id v10 = v42;
  id v11 = [v42 modernManagedObjectContext];

  sub_100031418(0, (unint64_t *)&qword_1006A49F0);
  unint64_t v12 = NSManagedObjectContext.fetch<A>(_:)();

  if (v1) {
    return;
  }
  id v41 = v9;
  if (!(v12 >> 62))
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v13) {
      goto LABEL_4;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    *a1 = &_swiftEmptyArrayStorage;
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v13) {
    goto LABEL_20;
  }
LABEL_4:
  id v42 = &_swiftEmptyArrayStorage;
  sub_100169A8C(0, v13 & ~(v13 >> 63), 0);
  if (v13 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v36 = 0;
    uint64_t v37 = a1;
    uint64_t v14 = 0;
    unint64_t v38 = v12 & 0xC000000000000001;
    uint64_t v39 = v13;
    uint64_t v15 = v42;
    unint64_t v40 = v12;
    do
    {
      if (v38) {
        id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v16 = *(id *)(v12 + 8 * v14 + 32);
      }
      uint64_t v17 = v4;
      id v18 = v16;
      TagID.init(_:)();
      id v19 = [v18 objectID];
      id v20 = [v19 URIRepresentation];

      static URL._unconditionallyBridgeFromObjectiveC(_:)();
      id v21 = [v18 standardizedContent];
      if (v21)
      {
        BOOL v22 = v21;
        uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v25 = v24;
      }
      else
      {
        uint64_t v23 = 0;
        unint64_t v25 = 0xE000000000000000;
      }
      BOOL v26 = (uint64_t *)&v7[*(int *)(v3 + 24)];
      *BOOL v26 = v23;
      v26[1] = v25;
      id v27 = [v18 displayText:v36, v37];
      if (v27)
      {
        uint64_t v28 = v27;
        uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v31 = v30;
      }
      else
      {

        uint64_t v29 = 0;
        unint64_t v31 = 0xE000000000000000;
      }
      uint64_t v32 = (uint64_t *)&v7[*(int *)(v3 + 28)];
      *uint64_t v32 = v29;
      v32[1] = v31;
      uint64_t v33 = (uint64_t)v41;
      sub_10016F060((uint64_t)v7, (uint64_t)v41, (uint64_t (*)(void))type metadata accessor for TagEntity);
      id v42 = v15;
      unint64_t v35 = v15[2];
      unint64_t v34 = v15[3];
      if (v35 >= v34 >> 1)
      {
        sub_100169A8C(v34 > 1, v35 + 1, 1);
        uint64_t v33 = (uint64_t)v41;
        uint64_t v15 = v42;
      }
      ++v14;
      _OWORD v15[2] = v35 + 1;
      uint64_t v4 = v17;
      sub_10016F060(v33, (uint64_t)v15+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(void *)(v17 + 72) * v35, (uint64_t (*)(void))type metadata accessor for TagEntity);
      unint64_t v12 = v40;
    }
    while (v39 != v14);
    swift_bridgeObjectRelease();
    void *v37 = v15;
  }
}

uint64_t sub_1001698C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 16) = a1;
  uint64_t v8 = *v3;
  uint64_t v7 = v3[1];
  id v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v9;
  *id v9 = v4;
  v9[1] = sub_10016997C;
  return VisibleTagsQuery.entities(matching:)(a2, a3, v8, v7);
}

uint64_t sub_10016997C(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (!v1) {
    **(void **)(v4 + 16) = a1;
  }
  uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
  return v6();
}

uint64_t sub_100169A8C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018D9B0(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100169AAC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018D9D0(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_100169ACC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018DB3C(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100169AEC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018DB5C(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100169B0C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018DB7C(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100169B2C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018DB9C(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_100169B4C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018DD24(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100169B6C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018DD38(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_100169B8C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018DEA8(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100169BAC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018E034(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100169BCC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018E054(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100169BEC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018E074(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100169C0C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018E21C(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100169C2C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018E23C(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_100169C4C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018E39C(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100169C6C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018E3BC(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100169C8C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018E3DC(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_100169CAC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018E53C(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100169CCC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018E55C(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100169CEC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018E704(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100169D0C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018E88C(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_100169D2C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018E9EC(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_100169D4C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018EB70(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_100169D6C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018ECC0(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100169D8C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018ECE0(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_100169DAC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018EE40(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100169DCC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018EE60(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100169DEC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018EE80(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_100169E0C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018EFE0(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100169E2C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018F000(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100169E4C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018F18C(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100169E6C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018F1A0(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100169E8C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018F1C0(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100169EAC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018F1E0(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100169ECC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018F200(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100169EEC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018F468(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100169F0C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018F47C(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t _s11MobileNotes18VisibleTablesQueryVACycfC_0()
{
  sub_10002F214((uint64_t *)&unk_10069B130);
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t v0 = AppDependency.__allocating_init(key:manager:)();
  sub_10002F214((uint64_t *)&unk_10069CE60);
  AnyHashable.init<A>(_:)();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  return v0;
}

id sub_10016A03C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = (void **)(a1 + 16);
  uint64_t v3 = *(void **)(a1 + 16);
  if (v3)
  {
    id v5 = *(id *)(a1 + 16);
  }
  else
  {
    type metadata accessor for ICError(0);
    sub_10002F214((uint64_t *)&unk_10069E1D0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100524D10;
    *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 40) = v8;
    _StringGuts.grow(_:)(87);
    v9._countAndFlagsBits = 0x7469746E45676154;
    v9._object = (void *)0xE900000000000079;
    String.append(_:)(v9);
    v10._object = (void *)0x800000010054C180;
    v10._countAndFlagsBits = 0xD000000000000053;
    String.append(_:)(v10);
    id v11 = [a3 description];
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v14 = v13;

    v15._countAndFlagsBits = v12;
    v15._object = v14;
    String.append(_:)(v15);
    swift_bridgeObjectRelease();
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = 0;
    *(void *)(inited + 56) = 0xE000000000000000;
    sub_1001B50CC(inited);
    sub_10016F128((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_beginAccess();
    id v16 = *v4;
    *uint64_t v4 = 0;
    id v5 = 0;

    uint64_t v3 = 0;
  }
  id v17 = v3;
  return v5;
}

uint64_t sub_10016A21C(uint64_t a1, uint64_t a2)
{
  v2[3] = a1;
  void v2[4] = a2;
  uint64_t v3 = type metadata accessor for Logger();
  void v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for TagEntity();
  v2[8] = v4;
  v2[9] = *(void *)(v4 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for TagID();
  v2[13] = v5;
  v2[14] = *(void *)(v5 - 8);
  v2[15] = swift_task_alloc();
  uint8_t v2[16] = swift_task_alloc();
  return _swift_task_switch(sub_10016A3C0, 0, 0);
}

uint64_t sub_10016A3C0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 24) + 16);
  *(void *)(v0 + 136) = v1;
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 112);
    uint64_t v3 = self;
    *(void *)(v0 + 144) = v3;
    int v4 = *(_DWORD *)(v2 + 80);
    *(_DWORD *)(v0 + 256) = v4;
    *(void *)(v0 + 152) = *(void *)(v2 + 72);
    uint64_t v5 = *(void (**)(uint64_t, unint64_t, uint64_t))(v2 + 16);
    *(void *)(v0 + 160) = v5;
    *(void *)(v0 + 168) = 0;
    uint64_t v6 = *(void *)(v0 + 128);
    uint64_t v7 = *(void *)(v0 + 104);
    uint64_t v8 = *(void **)(v0 + 32);
    uint64_t v9 = *(void *)(v0 + 112) + 16;
    unint64_t v10 = *(void *)(v0 + 24) + ((v4 + 32) & ~(unint64_t)v4);
    *(void *)(v0 + 176) = &_swiftEmptyArrayStorage;
    *(void *)(v0 + 184) = v9 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    swift_bridgeObjectRetain();
    v5(v6, v10, v7);
    id v11 = [v8 modernManagedObjectContext];
    *(void *)(v0 + 192) = v11;
    TagID.displayText.getter();
    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v13 = [v3 standardizedHashtagRepresentationForDisplayText:v12];

    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v16 = v15;

    id v17 = (void *)swift_allocObject();
    *(void *)(v0 + 200) = v17;
    v17[2] = v14;
    v17[3] = v16;
    v17[4] = v11;
    v11;
    id v18 = (void *)swift_task_alloc();
    *(void *)(v0 + 208) = v18;
    uint64_t v19 = sub_10002F214(&qword_10069D520);
    *id v18 = v0;
    v18[1] = sub_10016A668;
    return NSManagedObjectContext.perform<A>(_:)(v0 + 16, sub_10016F108, v17, v19);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v20 = *(uint64_t (**)(void *))(v0 + 8);
    return v20(&_swiftEmptyArrayStorage);
  }
}

uint64_t sub_10016A668()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_10016A780, 0, 0);
}

uint64_t sub_10016A780()
{
  uint64_t v62 = v0;

  uint64_t v1 = *(void **)(v0 + 16);
  *(void *)(v0 + 216) = v1;
  if (v1)
  {
    id v2 = [*(id *)(v0 + 32) managedObjectContextForObjectID:v1];
    *(void *)(v0 + 224) = v2;
    if (v2)
    {
      uint64_t v3 = v2;
      int v4 = *(void **)(v0 + 32);
      uint64_t v5 = swift_allocObject();
      *(void *)(v0 + 232) = v5;
      *(void *)(v5 + 16) = v3;
      *(void *)(v5 + 24) = v1;
      id v6 = v1;
      id v7 = v3;
      id v8 = v6;
      id v9 = v7;
      id v10 = v4;
      id v11 = v8;
      v9;
      NSString v12 = (void *)swift_task_alloc();
      *(void *)(v0 + 240) = v12;
      void *v12 = v0;
      v12[1] = sub_10016AE10;
      uint64_t v13 = *(void *)(v0 + 80);
      uint64_t v14 = *(void *)(v0 + 64);
      uint64_t v15 = sub_10016F170;
      uint64_t v16 = (void *)v5;
LABEL_15:
      return NSManagedObjectContext.perform<A>(_:)(v13, v15, v16, v14);
    }
    uint64_t v34 = *(void *)(v0 + 128);
    uint64_t v35 = *(void *)(v0 + 104);
    uint64_t v36 = *(void *)(v0 + 112);
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = 0;
    id v38 = v1;
    sub_10016A03C(v37, 225, v38);

    swift_release();
    swift_willThrow();

    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v34, v35);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v39 = *(uint64_t (**)(void))(v0 + 8);
    return v39();
  }
  else
  {
    id v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 160);
    uint64_t v19 = *(void *)(v0 + 120);
    uint64_t v18 = *(void *)(v0 + 128);
    uint64_t v20 = *(void *)(v0 + 104);
    static Logger.link.getter();
    v17(v19, v18, v20);
    id v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    BOOL v23 = os_log_type_enabled(v21, v22);
    uint64_t v24 = *(void *)(v0 + 120);
    uint64_t v25 = *(void *)(v0 + 128);
    uint64_t v26 = *(void *)(v0 + 104);
    uint64_t v27 = *(void *)(v0 + 112);
    uint64_t v28 = *(void *)(v0 + 48);
    uint64_t v29 = *(void *)(v0 + 56);
    uint64_t v60 = *(void *)(v0 + 40);
    if (v23)
    {
      uint64_t v59 = *(void *)(v0 + 56);
      uint64_t v30 = swift_slowAlloc();
      v61[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 136315394;
      *(void *)(v30 + 4) = sub_10045DA1C(0x7469746E45676154, 0xE900000000000079, v61);
      *(_WORD *)(v30 + 12) = 2080;
      sub_10016F128((unint64_t *)&unk_1006A7900, (void (*)(uint64_t))&type metadata accessor for TagID);
      uint64_t v31 = dispatch thunk of EntityIdentifierConvertible.entityIdentifierString.getter();
      *(void *)(v30 + 14) = sub_10045DA1C(v31, v32, v61);
      swift_bridgeObjectRelease();
      uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
      v33(v24, v26);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "%s: Managed object not found with entity identifier: %s", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v59, v60);
      v33(v25, v26);
    }
    else
    {

      id v41 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
      v41(v24, v26);
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v29, v60);
      v41(v25, v26);
    }
    uint64_t v42 = *(void *)(v0 + 168) + 1;
    if (v42 != *(void *)(v0 + 136))
    {
      *(void *)(v0 + 168) = v42;
      uint64_t v45 = *(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 160);
      uint64_t v46 = *(void **)(v0 + 144);
      uint64_t v47 = *(void *)(v0 + 128);
      uint64_t v48 = *(void *)(v0 + 104);
      uint64_t v49 = *(void **)(v0 + 32);
      unint64_t v50 = *(void *)(v0 + 24)
          + ((*(unsigned __int8 *)(v0 + 256) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 256))
          + *(void *)(v0 + 152) * v42;
      *(void *)(v0 + 184) = (*(void *)(v0 + 112) + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v45(v47, v50, v48);
      id v51 = [v49 modernManagedObjectContext];
      *(void *)(v0 + 192) = v51;
      TagID.displayText.getter();
      NSString v52 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v53 = [v46 standardizedHashtagRepresentationForDisplayText:v52];

      uint64_t v54 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v56 = v55;

      os_log_type_t v57 = (void *)swift_allocObject();
      *(void *)(v0 + 200) = v57;
      v57[2] = v54;
      v57[3] = v56;
      v57[4] = v51;
      v51;
      unsigned int v58 = (void *)swift_task_alloc();
      *(void *)(v0 + 208) = v58;
      uint64_t v14 = sub_10002F214(&qword_10069D520);
      *unsigned int v58 = v0;
      v58[1] = sub_10016A668;
      uint64_t v15 = sub_10016F108;
      uint64_t v13 = v0 + 16;
      uint64_t v16 = v57;
      goto LABEL_15;
    }
    uint64_t v43 = *(void *)(v0 + 176);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v44 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v44(v43);
  }
}

uint64_t sub_10016AE10()
{
  *(void *)(*(void *)v1 + 248) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v2 = sub_10016B2B8;
  }
  else
  {
    swift_release();
    id v2 = sub_10016AF2C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10016AF2C()
{
  id v2 = *(void **)(v0 + 216);
  uint64_t v1 = *(void **)(v0 + 224);
  uint64_t v4 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v5 = *(void *)(v0 + 80);
  id v6 = *(void **)(v0 + 32);

  sub_10016F060(v5, v4, (uint64_t (*)(void))type metadata accessor for TagEntity);
  sub_10016F060(v4, v3, (uint64_t (*)(void))type metadata accessor for TagEntity);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v8 = *(void *)(v0 + 176);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    unint64_t v8 = sub_1001A8064(0, *(void *)(v8 + 16) + 1, 1, *(void *)(v0 + 176));
  }
  unint64_t v10 = *(void *)(v8 + 16);
  unint64_t v9 = *(void *)(v8 + 24);
  if (v10 >= v9 >> 1) {
    unint64_t v8 = sub_1001A8064(v9 > 1, v10 + 1, 1, v8);
  }
  NSString v12 = *(void **)(v0 + 216);
  id v11 = *(void **)(v0 + 224);
  uint64_t v13 = *(void *)(v0 + 128);
  uint64_t v14 = *(void *)(v0 + 104);
  uint64_t v15 = *(void *)(v0 + 112);
  uint64_t v16 = *(void *)(v0 + 96);
  uint64_t v17 = *(void *)(v0 + 72);
  *(void *)(v8 + 16) = v10 + 1;
  sub_10016F060(v16, v8+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(void *)(v17 + 72) * v10, (uint64_t (*)(void))type metadata accessor for TagEntity);

  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  uint64_t v18 = *(void *)(v0 + 168) + 1;
  if (v18 == *(void *)(v0 + 136))
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v19 = *(uint64_t (**)(unint64_t))(v0 + 8);
    return v19(v8);
  }
  else
  {
    *(void *)(v0 + 168) = v18;
    *(void *)(v0 + 176) = v8;
    id v21 = *(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 160);
    os_log_type_t v22 = *(void **)(v0 + 144);
    uint64_t v23 = *(void *)(v0 + 128);
    uint64_t v24 = *(void *)(v0 + 104);
    uint64_t v25 = *(void **)(v0 + 32);
    unint64_t v26 = *(void *)(v0 + 24)
        + ((*(unsigned __int8 *)(v0 + 256) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 256))
        + *(void *)(v0 + 152) * v18;
    *(void *)(v0 + 184) = (*(void *)(v0 + 112) + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v21(v23, v26, v24);
    id v27 = [v25 modernManagedObjectContext];
    *(void *)(v0 + 192) = v27;
    TagID.displayText.getter();
    NSString v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v29 = [v22 standardizedHashtagRepresentationForDisplayText:v28];

    uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v32 = v31;

    uint64_t v33 = (void *)swift_allocObject();
    *(void *)(v0 + 200) = v33;
    void v33[2] = v30;
    v33[3] = v32;
    v33[4] = v27;
    v27;
    uint64_t v34 = (void *)swift_task_alloc();
    *(void *)(v0 + 208) = v34;
    uint64_t v35 = sub_10002F214(&qword_10069D520);
    void *v34 = v0;
    v34[1] = sub_10016A668;
    return NSManagedObjectContext.perform<A>(_:)(v0 + 16, sub_10016F108, v33, v35);
  }
}

uint64_t sub_10016B2B8()
{
  uint64_t v1 = (void *)v0[28];
  id v2 = (void *)v0[27];
  uint64_t v3 = v0[16];
  uint64_t v4 = v0[13];
  uint64_t v5 = v0[14];
  id v6 = (void *)v0[4];

  swift_release();
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_10016B3D0()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10016B410@<X0>(void *a1@<X8>)
{
  return sub_100166268(a1);
}

uint64_t sub_10016B42C()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_10016B474(void *a1@<X8>)
{
}

uint64_t sub_10016B494(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TagEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10016B4F8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TagEntity();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10016B558()
{
  unint64_t result = qword_10069C420;
  if (!qword_10069C420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069C420);
  }
  return result;
}

unint64_t sub_10016B5B0()
{
  unint64_t result = qword_10069C428[0];
  if (!qword_10069C428[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10069C428);
  }
  return result;
}

uint64_t sub_10016B604()
{
  return sub_10016F128((unint64_t *)&unk_1006A3B60, (void (*)(uint64_t))type metadata accessor for TagEntity);
}

unint64_t sub_10016B650()
{
  unint64_t result = qword_10069C440;
  if (!qword_10069C440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069C440);
  }
  return result;
}

uint64_t sub_10016B6A4()
{
  return sub_10016F128(&qword_1006A0140, (void (*)(uint64_t))type metadata accessor for TagEntity);
}

unint64_t sub_10016B6F0()
{
  unint64_t result = qword_10069C448[0];
  if (!qword_10069C448[0])
  {
    sub_10001DFF4(&qword_10069C410);
    sub_10016F128(&qword_1006A0140, (void (*)(uint64_t))type metadata accessor for TagEntity);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10069C448);
  }
  return result;
}

unint64_t sub_10016B798()
{
  unint64_t result = qword_10069C460;
  if (!qword_10069C460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069C460);
  }
  return result;
}

uint64_t destroy for VisibleTagsQuery()
{
  swift_release();

  return swift_release();
}

void *_s11MobileNotes16VisibleTagsQueryVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for VisibleTagsQuery(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for VisibleTagsQuery(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for VisibleTagsQuery(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VisibleTagsQuery(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisibleTagsQuery()
{
  return &type metadata for VisibleTagsQuery;
}

uint64_t sub_10016B998(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  uint64_t v3 = type metadata accessor for Logger();
  void v2[4] = v3;
  void v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for FolderEntity();
  v2[7] = v4;
  v2[8] = *(void *)(v4 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for FolderID();
  v2[12] = v5;
  v2[13] = *(void *)(v5 - 8);
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  return _swift_task_switch(sub_10016BB3C, 0, 0);
}

uint64_t sub_10016BB3C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 128) = v2;
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 96);
    uint64_t v4 = *(void *)(v0 + 104);
    uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    v4 += 16;
    int v6 = *(_DWORD *)(v4 + 64);
    *(_DWORD *)(v0 + 224) = v6;
    *(void *)(v0 + 136) = *(void *)(v4 + 56);
    *(void *)(v0 + 144) = v5;
    *(void *)(v0 + 152) = 0;
    *(void *)(v0 + 160) = &_swiftEmptyArrayStorage;
    uint64_t v7 = *(void *)(v0 + 120);
    uint64_t v8 = v1 + ((v6 + 32) & ~(unint64_t)v6);
    *(void *)(v0 + 168) = v4 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    swift_bridgeObjectRetain();
    v5(v7, v8, v3);
    uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1006A7D70 + dword_1006A7D70);
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 176) = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_10016BCE8;
    uint64_t v10 = *(void *)(v0 + 120);
    uint64_t v11 = *(void *)(v0 + 24);
    return v14(v10, v11);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = *(uint64_t (**)(void *))(v0 + 8);
    return v13(&_swiftEmptyArrayStorage);
  }
}

uint64_t sub_10016BCE8(uint64_t a1)
{
  *(void *)(*(void *)v1 + 184) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10016BDE8, 0, 0);
}

uint64_t sub_10016BDE8()
{
  uint64_t v54 = v0;
  uint64_t v1 = *(void **)(v0 + 184);
  if (v1)
  {
    id v2 = [*(id *)(v0 + 24) managedObjectContextForObjectID:*(void *)(v0 + 184)];
    *(void *)(v0 + 192) = v2;
    if (v2)
    {
      uint64_t v3 = v2;
      uint64_t v4 = *(void **)(v0 + 24);
      uint64_t v5 = swift_allocObject();
      *(void *)(v0 + 200) = v5;
      *(void *)(v5 + 16) = v3;
      *(void *)(v5 + 24) = v1;
      id v6 = v1;
      id v7 = v3;
      id v8 = v6;
      id v9 = v7;
      id v10 = v4;
      id v11 = v8;
      v9;
      NSString v12 = (void *)swift_task_alloc();
      *(void *)(v0 + 208) = v12;
      void *v12 = v0;
      v12[1] = sub_10016C3C8;
      uint64_t v13 = *(void *)(v0 + 72);
      uint64_t v14 = *(void *)(v0 + 56);
      return NSManagedObjectContext.perform<A>(_:)(v13, sub_10016F044, v5, v14);
    }
    else
    {
      uint64_t v33 = *(void *)(v0 + 120);
      uint64_t v34 = *(void *)(v0 + 96);
      uint64_t v35 = *(void *)(v0 + 104);
      uint64_t v36 = swift_allocObject();
      *(void *)(v36 + 16) = 0;
      id v37 = v1;
      sub_100188E60(v36, 225, v37);

      swift_release();
      swift_willThrow();

      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v34);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      id v38 = *(uint64_t (**)(void))(v0 + 8);
      return v38();
    }
  }
  else
  {
    uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 144);
    uint64_t v16 = *(void *)(v0 + 112);
    uint64_t v17 = *(void *)(v0 + 120);
    uint64_t v18 = *(void *)(v0 + 96);
    static Logger.link.getter();
    v15(v16, v17, v18);
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.error.getter();
    BOOL v21 = os_log_type_enabled(v19, v20);
    uint64_t v22 = *(void *)(v0 + 112);
    uint64_t v23 = *(void *)(v0 + 120);
    uint64_t v24 = *(void *)(v0 + 96);
    uint64_t v25 = *(void *)(v0 + 104);
    uint64_t v26 = *(void *)(v0 + 40);
    uint64_t v27 = *(void *)(v0 + 48);
    uint64_t v51 = *(void *)(v0 + 32);
    if (v21)
    {
      uint64_t v50 = *(void *)(v0 + 120);
      uint64_t v28 = swift_slowAlloc();
      v53[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 136315394;
      *(void *)(v28 + 4) = sub_10045DA1C(0x6E457265646C6F46, 0xEC00000079746974, v53);
      *(_WORD *)(v28 + 12) = 2080;
      sub_10016F128(&qword_10069C618, (void (*)(uint64_t))&type metadata accessor for FolderID);
      uint64_t v29 = dispatch thunk of EntityIdentifierConvertible.entityIdentifierString.getter();
      *(void *)(v28 + 14) = sub_10045DA1C(v29, v30, v53);
      swift_bridgeObjectRelease();
      uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
      v31(v22, v24);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "%s: Managed object not found with entity identifier: %s", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v27, v51);
      uint64_t v32 = v50;
    }
    else
    {

      uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
      v31(v22, v24);
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v27, v51);
      uint64_t v32 = v23;
    }
    v31(v32, v24);
    uint64_t v39 = *(void *)(v0 + 152) + 1;
    if (v39 == *(void *)(v0 + 128))
    {
      uint64_t v40 = *(void *)(v0 + 160);
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      id v41 = *(uint64_t (**)(uint64_t))(v0 + 8);
      return v41(v40);
    }
    else
    {
      *(void *)(v0 + 152) = v39;
      uint64_t v42 = *(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 144);
      uint64_t v43 = *(void *)(v0 + 120);
      uint64_t v44 = *(void *)(v0 + 96);
      unint64_t v45 = *(void *)(v0 + 16)
          + ((*(unsigned __int8 *)(v0 + 224) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 224))
          + *(void *)(v0 + 136) * v39;
      *(void *)(v0 + 168) = (*(void *)(v0 + 104) + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v42(v43, v45, v44);
      NSString v52 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1006A7D70 + dword_1006A7D70);
      uint64_t v46 = (void *)swift_task_alloc();
      *(void *)(v0 + 176) = v46;
      *uint64_t v46 = v0;
      v46[1] = sub_10016BCE8;
      uint64_t v47 = *(void *)(v0 + 120);
      uint64_t v48 = *(void *)(v0 + 24);
      return v52(v47, v48);
    }
  }
}

uint64_t sub_10016C3C8()
{
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v2 = sub_10016C7B4;
  }
  else
  {
    swift_release();
    id v2 = sub_10016C4E4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10016C4E4()
{
  id v2 = *(void **)(v0 + 184);
  uint64_t v1 = *(void **)(v0 + 192);
  uint64_t v4 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v5 = *(void *)(v0 + 72);
  id v6 = *(void **)(v0 + 24);

  sub_10016F060(v5, v4, (uint64_t (*)(void))type metadata accessor for FolderEntity);
  sub_10016F060(v4, v3, (uint64_t (*)(void))type metadata accessor for FolderEntity);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v8 = *(void *)(v0 + 160);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    unint64_t v8 = sub_1001A8318(0, *(void *)(v8 + 16) + 1, 1, *(void *)(v0 + 160));
  }
  unint64_t v10 = *(void *)(v8 + 16);
  unint64_t v9 = *(void *)(v8 + 24);
  if (v10 >= v9 >> 1) {
    unint64_t v8 = sub_1001A8318(v9 > 1, v10 + 1, 1, v8);
  }
  NSString v12 = *(void **)(v0 + 184);
  id v11 = *(void **)(v0 + 192);
  uint64_t v13 = *(void *)(v0 + 120);
  uint64_t v14 = *(void *)(v0 + 96);
  uint64_t v15 = *(void *)(v0 + 104);
  uint64_t v16 = *(void *)(v0 + 88);
  uint64_t v17 = *(void *)(v0 + 64);
  *(void *)(v8 + 16) = v10 + 1;
  sub_10016F060(v16, v8+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(void *)(v17 + 72) * v10, (uint64_t (*)(void))type metadata accessor for FolderEntity);

  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  uint64_t v18 = *(void *)(v0 + 152) + 1;
  if (v18 == *(void *)(v0 + 128))
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v19 = *(uint64_t (**)(unint64_t))(v0 + 8);
    return v19(v8);
  }
  else
  {
    *(void *)(v0 + 152) = v18;
    *(void *)(v0 + 160) = v8;
    BOOL v21 = *(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 144);
    uint64_t v22 = *(void *)(v0 + 120);
    uint64_t v23 = *(void *)(v0 + 96);
    unint64_t v24 = *(void *)(v0 + 16)
        + ((*(unsigned __int8 *)(v0 + 224) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 224))
        + *(void *)(v0 + 136) * v18;
    *(void *)(v0 + 168) = (*(void *)(v0 + 104) + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v21(v22, v24, v23);
    uint64_t v28 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1006A7D70 + dword_1006A7D70);
    uint64_t v25 = (void *)swift_task_alloc();
    *(void *)(v0 + 176) = v25;
    *uint64_t v25 = v0;
    v25[1] = sub_10016BCE8;
    uint64_t v26 = *(void *)(v0 + 120);
    uint64_t v27 = *(void *)(v0 + 24);
    return v28(v26, v27);
  }
}

uint64_t sub_10016C7B4()
{
  uint64_t v1 = (void *)v0[24];
  id v2 = (void *)v0[23];
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[12];
  uint64_t v5 = v0[13];
  id v6 = (void *)v0[3];

  swift_release();
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

id sub_10016C8CC(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_10016DBB8(a1, a2, a3, 0x746E45656C626154, (void *)0xEB00000000797469);
}

uint64_t sub_10016C8EC(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  uint64_t v3 = type metadata accessor for Logger();
  void v2[4] = v3;
  void v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for LocalizedStringResource.BundleDescription();
  v2[7] = v4;
  v2[8] = *(void *)(v4 - 8);
  v2[9] = swift_task_alloc();
  type metadata accessor for Locale();
  v2[10] = swift_task_alloc();
  type metadata accessor for String.LocalizationValue();
  v2[11] = swift_task_alloc();
  type metadata accessor for LocalizedStringResource();
  v2[12] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for TableEntity();
  v2[13] = v5;
  v2[14] = *(void *)(v5 - 8);
  v2[15] = swift_task_alloc();
  uint8_t v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for TableID();
  v2[18] = v6;
  v2[19] = *(void *)(v6 - 8);
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  return _swift_task_switch(sub_10016CB70, 0, 0);
}

uint64_t sub_10016CB70()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 176) = v2;
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 144);
    uint64_t v4 = *(void *)(v0 + 152);
    uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    v4 += 16;
    int v6 = *(_DWORD *)(v4 + 64);
    *(_DWORD *)(v0 + 272) = v6;
    *(_DWORD *)(v0 + 276) = enum case for LocalizedStringResource.BundleDescription.main(_:);
    *(void *)(v0 + 184) = *(void *)(v4 + 56);
    *(void *)(v0 + 192) = v5;
    *(void *)(v0 + 200) = 0;
    *(void *)(v0 + 208) = _swiftEmptyArrayStorage;
    uint64_t v7 = *(void *)(v0 + 168);
    uint64_t v8 = v1 + ((v6 + 32) & ~(unint64_t)v6);
    *(void *)(v0 + 216) = v4 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    swift_bridgeObjectRetain();
    v5(v7, v8, v3);
    uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_10069D398 + dword_10069D398);
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 224) = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_10016CD6C;
    uint64_t v10 = *(void *)(v0 + 168);
    uint64_t v11 = *(void *)(v0 + 24);
    return v14(v10, v11);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = *(uint64_t (**)(void *))(v0 + 8);
    return v13(_swiftEmptyArrayStorage);
  }
}

uint64_t sub_10016CD6C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 232) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10016CE6C, 0, 0);
}

uint64_t sub_10016CE6C()
{
  uint64_t v66 = v0;
  uint64_t v1 = *(void **)(v0 + 232);
  if (v1)
  {
    id v2 = [*(id *)(v0 + 24) managedObjectContextForObjectID:*(void *)(v0 + 232)];
    *(void *)(v0 + 240) = v2;
    if (v2)
    {
      uint64_t v3 = v2;
      uint64_t v4 = *(unsigned int *)(v0 + 276);
      unsigned int v54 = *(_DWORD *)(v0 + 276);
      uint64_t v58 = *(void *)(v0 + 136);
      uint64_t v61 = *(void *)(v0 + 128);
      uint64_t v57 = *(void *)(v0 + 104);
      uint64_t v6 = *(void *)(v0 + 64);
      uint64_t v5 = *(void *)(v0 + 72);
      uint64_t v7 = *(void *)(v0 + 56);
      uint64_t v53 = v7;
      uint64_t v8 = *(void **)(v0 + 24);
      uint64_t v55 = *(int *)(v57 + 24);
      *(_DWORD *)(v0 + 280) = v55;
      id v56 = v1;
      id v9 = v3;
      id v10 = v8;
      sub_10002F214((uint64_t *)&unk_10069EE20);
      String.LocalizationValue.init(stringLiteral:)();
      static Locale.current.getter();
      uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 104);
      v11(v5, v4, v7);
      LocalizedStringResource.init(_:table:locale:bundle:comment:)();
      *(void *)(v58 + v55) = EntityProperty<>.init(title:)();
      uint64_t v12 = *(int *)(v57 + 24);
      *(_DWORD *)(v0 + 284) = v12;
      id v59 = v56;
      id v13 = v9;
      String.LocalizationValue.init(stringLiteral:)();
      static Locale.current.getter();
      v11(v5, v54, v53);
      LocalizedStringResource.init(_:table:locale:bundle:comment:)();
      *(void *)(v61 + v12) = EntityProperty<>.init(title:)();
      uint64_t v14 = swift_allocObject();
      *(void *)(v0 + 248) = v14;
      *(void *)(v14 + 16) = v13;
      *(void *)(v14 + 24) = v59;
      id v15 = v59;
      v13;
      uint64_t v16 = (void *)swift_task_alloc();
      *(void *)(v0 + 256) = v16;
      void *v16 = v0;
      v16[1] = sub_10016D614;
      uint64_t v17 = *(void *)(v0 + 120);
      uint64_t v18 = *(void *)(v0 + 104);
      return NSManagedObjectContext.perform<A>(_:)(v17, sub_10016EFB0, v14, v18);
    }
    else
    {
      uint64_t v37 = *(void *)(v0 + 168);
      uint64_t v38 = *(void *)(v0 + 144);
      uint64_t v39 = *(void *)(v0 + 152);
      uint64_t v40 = swift_allocObject();
      *(void *)(v40 + 16) = 0;
      id v41 = v1;
      sub_10016DBB8(v40, 225, v41, 0x746E45656C626154, (void *)0xEB00000000797469);

      swift_release();
      swift_willThrow();

      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v37, v38);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v42 = *(uint64_t (**)(void))(v0 + 8);
      return v42();
    }
  }
  else
  {
    uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 192);
    uint64_t v20 = *(void *)(v0 + 160);
    uint64_t v21 = *(void *)(v0 + 168);
    uint64_t v22 = *(void *)(v0 + 144);
    static Logger.link.getter();
    v19(v20, v21, v22);
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.error.getter();
    BOOL v25 = os_log_type_enabled(v23, v24);
    uint64_t v26 = *(void *)(v0 + 160);
    uint64_t v27 = *(void *)(v0 + 168);
    uint64_t v28 = *(void *)(v0 + 144);
    uint64_t v29 = *(void *)(v0 + 152);
    uint64_t v30 = *(void *)(v0 + 40);
    uint64_t v31 = *(void *)(v0 + 48);
    uint64_t v62 = *(void *)(v0 + 32);
    if (v25)
    {
      uint64_t v60 = *(void *)(v0 + 168);
      uint64_t v32 = swift_slowAlloc();
      v65[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v32 = 136315394;
      *(void *)(v32 + 4) = sub_10045DA1C(0x746E45656C626154, 0xEB00000000797469, v65);
      *(_WORD *)(v32 + 12) = 2080;
      sub_10016F128(&qword_10069D3C0, (void (*)(uint64_t))&type metadata accessor for TableID);
      uint64_t v33 = dispatch thunk of EntityIdentifierConvertible.entityIdentifierString.getter();
      *(void *)(v32 + 14) = sub_10045DA1C(v33, v34, v65);
      swift_bridgeObjectRelease();
      uint64_t v35 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
      v35(v26, v28);
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "%s: Managed object not found with entity identifier: %s", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v31, v62);
      uint64_t v36 = v60;
    }
    else
    {

      uint64_t v35 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
      v35(v26, v28);
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v31, v62);
      uint64_t v36 = v27;
    }
    v35(v36, v28);
    uint64_t v43 = *(void *)(v0 + 200) + 1;
    if (v43 == *(void *)(v0 + 176))
    {
      uint64_t v63 = *(void *)(v0 + 208);
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v44 = *(uint64_t (**)(uint64_t))(v0 + 8);
      return v44(v63);
    }
    else
    {
      *(void *)(v0 + 200) = v43;
      unint64_t v45 = *(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 192);
      uint64_t v46 = *(void *)(v0 + 168);
      uint64_t v47 = *(void *)(v0 + 144);
      unint64_t v48 = *(void *)(v0 + 16)
          + ((*(unsigned __int8 *)(v0 + 272) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 272))
          + *(void *)(v0 + 184) * v43;
      *(void *)(v0 + 216) = (*(void *)(v0 + 152) + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v45(v46, v48, v47);
      uint64_t v64 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_10069D398 + dword_10069D398);
      uint64_t v49 = (void *)swift_task_alloc();
      *(void *)(v0 + 224) = v49;
      void *v49 = v0;
      v49[1] = sub_10016CD6C;
      uint64_t v50 = *(void *)(v0 + 168);
      uint64_t v51 = *(void *)(v0 + 24);
      return v64(v50, v51);
    }
  }
}

uint64_t sub_10016D614()
{
  *(void *)(*(void *)v1 + 264) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v2 = sub_10016DA48;
  }
  else
  {
    swift_release();
    id v2 = sub_10016D730;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10016D730()
{
  id v2 = *(void **)(v0 + 232);
  uint64_t v1 = *(void **)(v0 + 240);
  uint64_t v4 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 136);
  uint64_t v5 = *(void *)(v0 + 120);
  uint64_t v6 = *(void **)(v0 + 24);

  swift_release();
  sub_10016F060(v5, v4, (uint64_t (*)(void))type metadata accessor for TableEntity);

  swift_release();
  sub_10016F060(v4, v3, (uint64_t (*)(void))type metadata accessor for TableEntity);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v8 = *(void *)(v0 + 208);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    unint64_t v8 = sub_1001A9300(0, *(void *)(v8 + 16) + 1, 1, *(void *)(v0 + 208));
  }
  unint64_t v10 = *(void *)(v8 + 16);
  unint64_t v9 = *(void *)(v8 + 24);
  if (v10 >= v9 >> 1) {
    unint64_t v8 = sub_1001A9300(v9 > 1, v10 + 1, 1, v8);
  }
  uint64_t v12 = *(void **)(v0 + 232);
  uint64_t v11 = *(void **)(v0 + 240);
  uint64_t v13 = *(void *)(v0 + 168);
  uint64_t v14 = *(void *)(v0 + 144);
  uint64_t v15 = *(void *)(v0 + 152);
  uint64_t v16 = *(void *)(v0 + 136);
  uint64_t v17 = *(void *)(v0 + 112);
  *(void *)(v8 + 16) = v10 + 1;
  sub_10016F060(v16, v8+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(void *)(v17 + 72) * v10, (uint64_t (*)(void))type metadata accessor for TableEntity);

  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  uint64_t v18 = *(void *)(v0 + 200) + 1;
  if (v18 == *(void *)(v0 + 176))
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v19 = *(uint64_t (**)(unint64_t))(v0 + 8);
    return v19(v8);
  }
  else
  {
    *(void *)(v0 + 200) = v18;
    *(void *)(v0 + 208) = v8;
    uint64_t v21 = *(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 192);
    uint64_t v22 = *(void *)(v0 + 168);
    uint64_t v23 = *(void *)(v0 + 144);
    unint64_t v24 = *(void *)(v0 + 16)
        + ((*(unsigned __int8 *)(v0 + 272) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 272))
        + *(void *)(v0 + 184) * v18;
    *(void *)(v0 + 216) = (*(void *)(v0 + 152) + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v21(v22, v24, v23);
    uint64_t v28 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_10069D398 + dword_10069D398);
    BOOL v25 = (void *)swift_task_alloc();
    *(void *)(v0 + 224) = v25;
    *BOOL v25 = v0;
    v25[1] = sub_10016CD6C;
    uint64_t v26 = *(void *)(v0 + 168);
    uint64_t v27 = *(void *)(v0 + 24);
    return v28(v26, v27);
  }
}

uint64_t sub_10016DA48()
{
  uint64_t v1 = (void *)v0[30];
  id v2 = (void *)v0[29];
  uint64_t v8 = v0[21];
  uint64_t v3 = v0[19];
  uint64_t v7 = v0[18];
  uint64_t v4 = (void *)v0[3];

  swift_release();
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v8, v7);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

id sub_10016DBB8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v6 = (void **)(a1 + 16);
  uint64_t v5 = *(void **)(a1 + 16);
  if (v5)
  {
    id v7 = *(id *)(a1 + 16);
  }
  else
  {
    type metadata accessor for ICError(0);
    sub_10002F214((uint64_t *)&unk_10069E1D0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100524D10;
    *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 40) = v12;
    _StringGuts.grow(_:)(87);
    v13._countAndFlagsBits = 0;
    v13._object = (void *)0xE000000000000000;
    String.append(_:)(v13);
    v14._countAndFlagsBits = a4;
    v14._object = a5;
    String.append(_:)(v14);
    v15._object = (void *)0x800000010054C180;
    v15._countAndFlagsBits = 0xD000000000000053;
    String.append(_:)(v15);
    id v16 = [a3 description];
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v19 = v18;

    v20._countAndFlagsBits = v17;
    v20._object = v19;
    String.append(_:)(v20);
    swift_bridgeObjectRelease();
    v21._countAndFlagsBits = 0;
    v21._object = (void *)0xE000000000000000;
    String.append(_:)(v21);
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = 0;
    *(void *)(inited + 56) = 0xE000000000000000;
    sub_1001B50CC(inited);
    sub_10016F128((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_beginAccess();
    uint64_t v22 = *v6;
    void *v6 = 0;
    id v7 = 0;

    uint64_t v5 = 0;
  }
  id v23 = v5;
  return v7;
}

uint64_t sub_10016DDB8(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  uint64_t v3 = type metadata accessor for Logger();
  void v2[4] = v3;
  void v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for AccountEntity();
  v2[7] = v4;
  v2[8] = *(void *)(v4 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for AccountID();
  v2[12] = v5;
  v2[13] = *(void *)(v5 - 8);
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  return _swift_task_switch(sub_10016DF5C, 0, 0);
}

uint64_t sub_10016DF5C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 128) = v2;
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 96);
    uint64_t v4 = *(void *)(v0 + 104);
    uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    v4 += 16;
    int v6 = *(_DWORD *)(v4 + 64);
    *(_DWORD *)(v0 + 224) = v6;
    *(void *)(v0 + 136) = *(void *)(v4 + 56);
    *(void *)(v0 + 144) = v5;
    *(void *)(v0 + 152) = 0;
    *(void *)(v0 + 160) = _swiftEmptyArrayStorage;
    uint64_t v7 = *(void *)(v0 + 120);
    uint64_t v8 = v1 + ((v6 + 32) & ~(unint64_t)v6);
    *(void *)(v0 + 168) = v4 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    swift_bridgeObjectRetain();
    v5(v7, v8, v3);
    Swift::String v14 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1006A2870 + dword_1006A2870);
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 176) = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_10016E108;
    uint64_t v10 = *(void *)(v0 + 120);
    uint64_t v11 = *(void *)(v0 + 24);
    return v14(v10, v11);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    Swift::String v13 = *(uint64_t (**)(void *))(v0 + 8);
    return v13(_swiftEmptyArrayStorage);
  }
}

uint64_t sub_10016E108(uint64_t a1)
{
  *(void *)(*(void *)v1 + 184) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10016E208, 0, 0);
}

uint64_t sub_10016E208()
{
  uint64_t v54 = v0;
  uint64_t v1 = *(void **)(v0 + 184);
  if (v1)
  {
    id v2 = [*(id *)(v0 + 24) managedObjectContextForObjectID:*(void *)(v0 + 184)];
    *(void *)(v0 + 192) = v2;
    if (v2)
    {
      uint64_t v3 = v2;
      uint64_t v4 = *(void **)(v0 + 24);
      uint64_t v5 = swift_allocObject();
      *(void *)(v0 + 200) = v5;
      *(void *)(v5 + 16) = v3;
      *(void *)(v5 + 24) = v1;
      id v6 = v1;
      id v7 = v3;
      id v8 = v6;
      id v9 = v7;
      id v10 = v4;
      id v11 = v8;
      v9;
      uint64_t v12 = (void *)swift_task_alloc();
      *(void *)(v0 + 208) = v12;
      void *v12 = v0;
      v12[1] = sub_10016E80C;
      uint64_t v13 = *(void *)(v0 + 72);
      uint64_t v14 = *(void *)(v0 + 56);
      return NSManagedObjectContext.perform<A>(_:)(v13, sub_10016EF94, v5, v14);
    }
    else
    {
      uint64_t v33 = *(void *)(v0 + 120);
      uint64_t v34 = *(void *)(v0 + 96);
      uint64_t v35 = *(void *)(v0 + 104);
      uint64_t v36 = swift_allocObject();
      *(void *)(v36 + 16) = 0;
      id v37 = v1;
      sub_10016DBB8(v36, 225, v37, 0x45746E756F636341, (void *)0xED0000797469746ELL);

      swift_release();
      swift_willThrow();

      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v34);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v38 = *(uint64_t (**)(void))(v0 + 8);
      return v38();
    }
  }
  else
  {
    uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 144);
    uint64_t v16 = *(void *)(v0 + 112);
    uint64_t v17 = *(void *)(v0 + 120);
    uint64_t v18 = *(void *)(v0 + 96);
    static Logger.link.getter();
    v15(v16, v17, v18);
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.error.getter();
    BOOL v21 = os_log_type_enabled(v19, v20);
    uint64_t v22 = *(void *)(v0 + 112);
    uint64_t v23 = *(void *)(v0 + 120);
    uint64_t v24 = *(void *)(v0 + 96);
    uint64_t v25 = *(void *)(v0 + 104);
    uint64_t v26 = *(void *)(v0 + 40);
    uint64_t v27 = *(void *)(v0 + 48);
    uint64_t v51 = *(void *)(v0 + 32);
    if (v21)
    {
      uint64_t v50 = *(void *)(v0 + 120);
      uint64_t v28 = swift_slowAlloc();
      v53[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 136315394;
      *(void *)(v28 + 4) = sub_10045DA1C(0x45746E756F636341, 0xED0000797469746ELL, v53);
      *(_WORD *)(v28 + 12) = 2080;
      sub_10016F128(&qword_1006A28A0, (void (*)(uint64_t))&type metadata accessor for AccountID);
      uint64_t v29 = dispatch thunk of EntityIdentifierConvertible.entityIdentifierString.getter();
      *(void *)(v28 + 14) = sub_10045DA1C(v29, v30, v53);
      swift_bridgeObjectRelease();
      uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
      v31(v22, v24);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "%s: Managed object not found with entity identifier: %s", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v27, v51);
      uint64_t v32 = v50;
    }
    else
    {

      uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
      v31(v22, v24);
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v27, v51);
      uint64_t v32 = v23;
    }
    v31(v32, v24);
    uint64_t v39 = *(void *)(v0 + 152) + 1;
    if (v39 == *(void *)(v0 + 128))
    {
      uint64_t v40 = *(void *)(v0 + 160);
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      id v41 = *(uint64_t (**)(uint64_t))(v0 + 8);
      return v41(v40);
    }
    else
    {
      *(void *)(v0 + 152) = v39;
      uint64_t v42 = *(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 144);
      uint64_t v43 = *(void *)(v0 + 120);
      uint64_t v44 = *(void *)(v0 + 96);
      unint64_t v45 = *(void *)(v0 + 16)
          + ((*(unsigned __int8 *)(v0 + 224) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 224))
          + *(void *)(v0 + 136) * v39;
      *(void *)(v0 + 168) = (*(void *)(v0 + 104) + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v42(v43, v45, v44);
      NSString v52 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1006A2870 + dword_1006A2870);
      uint64_t v46 = (void *)swift_task_alloc();
      *(void *)(v0 + 176) = v46;
      *uint64_t v46 = v0;
      v46[1] = sub_10016E108;
      uint64_t v47 = *(void *)(v0 + 120);
      uint64_t v48 = *(void *)(v0 + 24);
      return v52(v47, v48);
    }
  }
}

uint64_t sub_10016E80C()
{
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v2 = sub_10016F190;
  }
  else
  {
    swift_release();
    id v2 = sub_10016E928;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10016E928()
{
  id v2 = *(void **)(v0 + 184);
  uint64_t v1 = *(void **)(v0 + 192);
  uint64_t v4 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v5 = *(void *)(v0 + 72);
  id v6 = *(void **)(v0 + 24);

  sub_10016F060(v5, v4, (uint64_t (*)(void))type metadata accessor for AccountEntity);
  sub_10016F060(v4, v3, (uint64_t (*)(void))type metadata accessor for AccountEntity);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v8 = *(void *)(v0 + 160);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    unint64_t v8 = sub_1001A946C(0, *(void *)(v8 + 16) + 1, 1, *(void *)(v0 + 160));
  }
  unint64_t v10 = *(void *)(v8 + 16);
  unint64_t v9 = *(void *)(v8 + 24);
  if (v10 >= v9 >> 1) {
    unint64_t v8 = sub_1001A946C(v9 > 1, v10 + 1, 1, v8);
  }
  uint64_t v12 = *(void **)(v0 + 184);
  id v11 = *(void **)(v0 + 192);
  uint64_t v13 = *(void *)(v0 + 120);
  uint64_t v14 = *(void *)(v0 + 96);
  uint64_t v15 = *(void *)(v0 + 104);
  uint64_t v16 = *(void *)(v0 + 88);
  uint64_t v17 = *(void *)(v0 + 64);
  *(void *)(v8 + 16) = v10 + 1;
  sub_10016F060(v16, v8+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(void *)(v17 + 72) * v10, (uint64_t (*)(void))type metadata accessor for AccountEntity);

  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  uint64_t v18 = *(void *)(v0 + 152) + 1;
  if (v18 == *(void *)(v0 + 128))
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v19 = *(uint64_t (**)(unint64_t))(v0 + 8);
    return v19(v8);
  }
  else
  {
    *(void *)(v0 + 152) = v18;
    *(void *)(v0 + 160) = v8;
    BOOL v21 = *(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 144);
    uint64_t v22 = *(void *)(v0 + 120);
    uint64_t v23 = *(void *)(v0 + 96);
    unint64_t v24 = *(void *)(v0 + 16)
        + ((*(unsigned __int8 *)(v0 + 224) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 224))
        + *(void *)(v0 + 136) * v18;
    *(void *)(v0 + 168) = (*(void *)(v0 + 104) + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v21(v22, v24, v23);
    uint64_t v28 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1006A2870 + dword_1006A2870);
    uint64_t v25 = (void *)swift_task_alloc();
    *(void *)(v0 + 176) = v25;
    *uint64_t v25 = v0;
    v25[1] = sub_10016E108;
    uint64_t v26 = *(void *)(v0 + 120);
    uint64_t v27 = *(void *)(v0 + 24);
    return v28(v26, v27);
  }
}

unint64_t sub_10016EBF8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  sub_10002F214(&qword_10069C480);
  uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  unsigned __int8 v4 = *(unsigned char *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  unint64_t result = sub_1002B6D68(v4);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  unint64_t v8 = (void *)(a1 + 56);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v4;
    *(void *)(v3[7] + 8 * result) = v5;
    uint64_t v9 = v3[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      break;
    }
    _DWORD v3[2] = v11;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v12 = v8 + 2;
    unsigned __int8 v4 = *((unsigned char *)v8 - 8);
    uint64_t v13 = *v8;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1002B6D68(v4);
    unint64_t v8 = v12;
    uint64_t v5 = v13;
    if (v14) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_10016ECFC(unint64_t result, char a2)
{
  switch(a2)
  {
    case 0:
    case 2:
    case 3:
      unint64_t result = swift_errorRetain();
      break;
    case 1:
      unint64_t result = sub_10016ED48(result);
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_10016ED48(unint64_t result)
{
  if (result >= 2) {
    return swift_errorRetain();
  }
  return result;
}

unint64_t sub_10016ED58(uint64_t a1)
{
  uint64_t v2 = sub_10002F214(&qword_10069C528);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    sub_10002F214(&qword_10069C530);
    char v7 = (void *)static _DictionaryStorage.allocate(capacity:)();
    uint64_t v8 = (uint64_t)v5 + *(int *)(v2 + 48);
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v10 = *(void *)(v3 + 72);
    while (1)
    {
      sub_10002F034(v9, (uint64_t)v5, &qword_10069C528);
      uint64_t v11 = *v5;
      unint64_t result = sub_1002B6E5C(*v5);
      if (v13) {
        break;
      }
      unint64_t v14 = result;
      *(void *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(void *)(v7[6] + 8 * result) = v11;
      uint64_t v15 = v7[7];
      uint64_t v16 = type metadata accessor for FastSyncPresenceController.EditorDebounceState(0);
      unint64_t result = sub_10016F060(v8, v15 + *(void *)(*(void *)(v16 - 8) + 72) * v14, type metadata accessor for FastSyncPresenceController.EditorDebounceState);
      uint64_t v17 = v7[2];
      BOOL v18 = __OFADD__(v17, 1);
      uint64_t v19 = v17 + 1;
      if (v18) {
        goto LABEL_10;
      }
      void v7[2] = v19;
      v9 += v10;
      if (!--v6) {
        return (unint64_t)v7;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

uint64_t sub_10016EF1C()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10016EF54()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_10016EF94(uint64_t a1@<X8>)
{
  sub_1002E84E4(*(void **)(v1 + 16), *(void *)(v1 + 24), a1);
}

void sub_10016EFB0(uint64_t a1@<X8>)
{
  sub_100193B28(*(void **)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_10016EFCC(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_10016EFE4(uint64_t a1)
{
  uint64_t v2 = sub_10002F214(&qword_10069B310);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_10016F044(uint64_t a1@<X8>)
{
  sub_10046471C(*(void **)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_10016F060(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10016F0C8()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_10016F108(void *a1@<X8>)
{
  sub_10032BCEC(*(void *)(v1 + 32), a1);
}

uint64_t sub_10016F128(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_10016F170(uint64_t a1@<X8>)
{
  sub_10032B7F0(*(void **)(v1 + 16), *(void *)(v1 + 24), a1);
}

id sub_10016F1D4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v46 = a1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = type metadata accessor for Date();
  __chkstk_darwin(v3 - 8);
  id v37 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for ActivityStream();
  __chkstk_darwin(v36);
  uint64_t v33 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214(&qword_10069C748);
  uint64_t v34 = *(void *)(v6 - 8);
  uint64_t v35 = v6;
  __chkstk_darwin(v6);
  uint64_t v32 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214(&qword_10069C6F8);
  uint64_t v45 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_10002F214(&qword_1006A4800);
  uint64_t v11 = __chkstk_darwin(v42);
  char v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v31 - v14;
  uint64_t v16 = sub_10002F214(&qword_10069C6E8);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = OBJC_IVAR___ICActivityStreamViewController_hostingController;
  uint64_t v39 = v2;
  *(void *)&v2[OBJC_IVAR___ICActivityStreamViewController_hostingController] = 0;
  *(void *)&v2[OBJC_IVAR___ICActivityStreamViewController_topInset] = 0;
  uint64_t v20 = &v2[OBJC_IVAR___ICActivityStreamViewController__selection];
  uint64_t v48 = 0;
  BOOL v21 = v2;
  sub_10002F214(&qword_1006A2AD0);
  Published.init(initialValue:)();
  uint64_t v40 = v17;
  uint64_t v41 = v16;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v20, v19, v16);
  uint64_t v22 = &v21[OBJC_IVAR___ICActivityStreamViewController__pressedItem];
  uint64_t v23 = type metadata accessor for ActivityStream.Item();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v15, 1, 1, v23);
  sub_100171AF8((uint64_t)v15, (uint64_t)v13);
  Published.init(initialValue:)();
  sub_10002B754((uint64_t)v15, &qword_1006A4800);
  unint64_t v24 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
  uint64_t v42 = v8;
  v24(v22, v10, v8);
  *(void *)&v21[OBJC_IVAR___ICActivityStreamViewController_activityStreamUpdater] = 0;
  uint64_t v25 = OBJC_IVAR___ICActivityStreamViewController_activityStreamObservation;
  *(void *)&v21[OBJC_IVAR___ICActivityStreamViewController_activityStreamObservation] = 0;
  *(void *)&v21[OBJC_IVAR___ICActivityStreamViewController_coordinator] = v46;
  id v26 = objc_allocWithZone((Class)type metadata accessor for ActivityEventResolver());
  swift_unknownObjectRetain();
  uint64_t v27 = v43;
  ActivityEventResolver.init(object:)();
  if (v27)
  {
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

    (*(void (**)(char *, uint64_t))(v40 + 8))(v20, v41);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v22, v42);
    swift_release();
    id v28 = *(id *)&v21[v25];

    swift_release();
    swift_deallocPartialClassInstance();
  }
  else
  {
    static Date.now.getter();
    ActivityStream.init(items:resolver:now:)();
    uint64_t v29 = v32;
    Published.init(initialValue:)();
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(&v21[OBJC_IVAR___ICActivityStreamViewController__activityStream], v29, v35);

    v47.receiver = v21;
    v47.super_class = ObjectType;
    id v28 = [super initWithNibName:0 bundle:0];
    swift_unknownObjectRelease();
  }
  return v28;
}

void sub_10016F7F0(void *a1)
{
  v19[0] = sub_10002F214(&qword_10069C6F8);
  uint64_t v3 = *(void *)(v19[0] - 8);
  __chkstk_darwin(v19[0]);
  uint64_t v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214(&qword_1006A4800);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v19 - v10;
  uint64_t v12 = sub_10002F214(&qword_10069C6E8);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);

  *(void *)&v1[OBJC_IVAR___ICActivityStreamViewController_hostingController] = 0;
  *(void *)&v1[OBJC_IVAR___ICActivityStreamViewController_topInset] = 0;
  uint64_t v16 = &v1[OBJC_IVAR___ICActivityStreamViewController__selection];
  v19[1] = 0;
  sub_10002F214(&qword_1006A2AD0);
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v15, v12);
  uint64_t v17 = &v1[OBJC_IVAR___ICActivityStreamViewController__pressedItem];
  uint64_t v18 = type metadata accessor for ActivityStream.Item();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v11, 1, 1, v18);
  sub_100171AF8((uint64_t)v11, (uint64_t)v9);
  Published.init(initialValue:)();
  sub_10002B754((uint64_t)v11, &qword_1006A4800);
  (*(void (**)(char *, char *, void))(v3 + 32))(v17, v5, v19[0]);
  *(void *)&v1[OBJC_IVAR___ICActivityStreamViewController_activityStreamUpdater] = 0;
  *(void *)&v1[OBJC_IVAR___ICActivityStreamViewController_activityStreamObservation] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_10016FBC0()
{
  if ([self _isInAnimationBlockWithAnimationsEnabled]
    && [v0 _appearState] != 1)
  {
    return;
  }
  id v1 = [v0 view];
  if (!v1)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v2 = v1;
  [v1 bounds];
  double v4 = v3;
  double v6 = v5;
  double v8 = v7;

  if (v6 <= 0.0) {
    return;
  }
  uint64_t v9 = *(void **)&v0[OBJC_IVAR___ICActivityStreamViewController_hostingController];
  if (!v9) {
    return;
  }
  double v10 = *(double *)&v0[OBJC_IVAR___ICActivityStreamViewController_topInset];
  id v11 = [v9 view];
  if (!v11)
  {
LABEL_12:
    __break(1u);
    return;
  }
  id v12 = v11;
  [v11 setFrame:v4, v10, v6, v8 - v10];
}

void sub_10016FD54()
{
  id v1 = v0;
  swift_getObjectType();
  uint64_t v2 = sub_10002F214(&qword_10069C730);
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = OBJC_IVAR___ICActivityStreamViewController_hostingController;
  if (!*(void *)&v0[OBJC_IVAR___ICActivityStreamViewController_hostingController])
  {
    sub_100171C8C(&qword_10069C738);
    double v4 = v0;
    ActivityStreamPanelView.init(controller:)();
    id v5 = objc_allocWithZone((Class)sub_10002F214(&qword_10069C740));
    double v6 = (void *)UIHostingController.init(rootView:)();
    id v7 = [v6 view];
    if (v7)
    {
      double v8 = v7;
      [v7 setTranslatesAutoresizingMaskIntoConstraints:0];

      id v9 = [v6 view];
      if (v9)
      {
        double v10 = v9;
        id v11 = [self clearColor];
        [v10 setBackgroundColor:v11];

        id v12 = *(void **)&v1[v3];
        *(void *)&v1[v3] = v6;
        id v13 = v6;

        [v4 addChildViewController:v13];
        id v14 = [v4 view];
        if (v14)
        {
          uint64_t v15 = v14;
          id v16 = [v13 view];
          if (v16)
          {
            uint64_t v17 = v16;
            [v15 addSubview:v16];

            [v13 didMoveToParentViewController:v4];
            return;
          }
LABEL_11:
          __break(1u);
          return;
        }
LABEL_10:
        __break(1u);
        goto LABEL_11;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_10;
  }
}

uint64_t sub_100170074()
{
  return sub_100170214();
}

uint64_t sub_100170118()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100170200()
{
  return sub_100170214();
}

uint64_t sub_100170214()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();

  return swift_release();
}

void sub_100170284(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10002F214(&qword_10069C6D8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214(&qword_10069C6E0);
  __chkstk_darwin(v8);
  double v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = OBJC_IVAR___ICActivityStreamViewController_activityStreamUpdater;
  uint64_t v12 = *(void *)&v1[OBJC_IVAR___ICActivityStreamViewController_activityStreamUpdater];
  uint64_t v35 = v13;
  uint64_t v36 = v5;
  if (v12)
  {
    swift_retain();
    id v14 = (void *)ActivityStream.Updater.resolver.getter();
    swift_release();
    uint64_t v15 = (void *)ActivityEventResolver.object.getter();

    if (a1)
    {
      if (v15)
      {
        sub_100171C30();
        id v16 = a1;
        char v17 = static NSObject.== infix(_:_:)();

        if (v17) {
          return;
        }
      }
    }
    else
    {
      if (!v15) {
        return;
      }
    }
  }
  else if (!a1)
  {
    return;
  }
  id v18 = objc_allocWithZone((Class)type metadata accessor for ActivityEventResolver());
  id v19 = a1;
  uint64_t v20 = (void *)ActivityEventResolver.init(object:)();
  if (v20)
  {
    uint64_t v21 = swift_allocObject();
    *(unsigned char *)(v21 + 16) = 1;
    uint64_t v33 = v21;
    uint64_t v34 = v21 + 16;
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v32 = v4;
    uint64_t v37 = 0;
    uint64_t v22 = v2;
    static Published.subscript.setter();
    swift_beginAccess();
    id v23 = v20;
    sub_10002F214(&qword_10069C6E8);
    Published.projectedValue.getter();
    swift_endAccess();
    sub_10001DFB0(&qword_10069C6F0, &qword_10069C6E0);
    Publisher.eraseToAnyPublisher()();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v10, v8);
    swift_beginAccess();
    sub_10002F214(&qword_10069C6F8);
    Published.projectedValue.getter();
    swift_endAccess();
    sub_10001DFB0(&qword_10069C700, &qword_10069C6D8);
    uint64_t v24 = v32;
    Publisher.eraseToAnyPublisher()();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v7, v24);
    type metadata accessor for ActivityStream.Updater();
    swift_allocObject();
    *(void *)&v2[v11] = ActivityStream.Updater.init(resolver:selection:pressedItem:)();
    swift_release();
    if (*(void *)&v2[v11])
    {
      swift_retain();
      uint64_t v25 = ActivityStream.Updater.activityStream.getter();
      swift_release();
      uint64_t v37 = v25;
      uint64_t v26 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v27 = (void *)swift_allocObject();
      v27[2] = v26;
      uint64_t v27[3] = v23;
      uint64_t v28 = v33;
      v27[4] = v33;
      id v29 = v23;
      swift_retain();
      sub_10002F214(&qword_10069C708);
      sub_10001DFB0((unint64_t *)&unk_10069C710, &qword_10069C708);
      uint64_t v30 = Publisher<>.sink(receiveValue:)();
      swift_release();

      swift_release();
    }
    else
    {

      uint64_t v30 = 0;
      uint64_t v28 = v33;
    }
    *(void *)&v22[OBJC_IVAR___ICActivityStreamViewController_activityStreamObservation] = v30;
    swift_release();
    swift_beginAccess();
    *(unsigned char *)(v28 + 16) = 0;
    swift_release();
  }
}

uint64_t sub_1001707BC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v38 = a1;
  uint64_t v7 = sub_10002F214((uint64_t *)&unk_10069C720);
  __chkstk_darwin(v7 - 8);
  uint64_t v36 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Date();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = type metadata accessor for ActivityStream();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  id v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  char v17 = (char *)&v35 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v35 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v35 - v21;
  uint64_t v37 = a2;
  id v23 = (char *)(a4 + 16);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v25 = (void *)Strong;
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();

    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v22, v20, v10);
  }
  else
  {
    static Date.now.getter();
    id v26 = a3;
    ActivityStream.init(items:resolver:now:)();
  }
  swift_beginAccess();
  char v27 = *v23;
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v29 = v38;
  v28(v17, v38, v10);
  v28(v14, (uint64_t)v22, v10);
  if (v27)
  {
    uint64_t v30 = *(void (**)(char *, uint64_t))(v11 + 8);
    v30(v14, v10);
    uint64_t v31 = ((uint64_t (*)(char *, uint64_t))v30)(v17, v10);
  }
  else
  {
    uint64_t v32 = (uint64_t)v36;
    v28(v36, (uint64_t)v14, v10);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(v32, 0, 1, v10);
    char v33 = ActivityStream.animatesTransition(from:)();
    sub_10002B754(v32, (uint64_t *)&unk_10069C720);
    uint64_t v30 = *(void (**)(char *, uint64_t))(v11 + 8);
    v30(v14, v10);
    uint64_t v31 = ((uint64_t (*)(char *, uint64_t))v30)(v17, v10);
    if (v33) {
      uint64_t v31 = static Animation.easeOut.getter();
    }
  }
  __chkstk_darwin(v31);
  *(&v35 - 2) = v37;
  *(&v35 - sub_1001631A8(0, 1, 0, 1) = v29;
  sub_10002F214((uint64_t *)&unk_1006A2BA0);
  withAnimation<A>(_:_:)();
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v30)(v22, v10);
}

void sub_100170BE8(uint64_t a1@<X1>, BOOL *a2@<X8>)
{
  uint64_t v5 = type metadata accessor for ActivityStream();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v15 - v10;
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    v15[5] = v2;
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v13(v11, a1, v5);
    v15[0] = swift_getKeyPath();
    swift_getKeyPath();
    v13(v9, (uint64_t)v11, v5);
    id v14 = Strong;
    static Published.subscript.setter();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
  *a2 = Strong == 0;
}

id sub_100170E4C()
{
  id v1 = *(id *)(v0 + OBJC_IVAR___ICActivityStreamViewController_activityStreamUpdater);
  if (v1)
  {
    swift_retain();
    uint64_t v2 = (void *)ActivityStream.Updater.resolver.getter();
    swift_release();
    uint64_t v3 = (void *)ActivityEventResolver.object.getter();

    if (v3)
    {
      id v1 = [v3 objectID];
    }
    else
    {
      return 0;
    }
  }
  return v1;
}

uint64_t sub_100171050()
{
  return type metadata accessor for ActivityStreamViewController();
}

uint64_t type metadata accessor for ActivityStreamViewController()
{
  uint64_t result = qword_10069C698;
  if (!qword_10069C698) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1001710A4()
{
  sub_1001711F0();
  if (v0 <= 0x3F)
  {
    sub_10001DF60(319, (unint64_t *)&unk_10069C6B0, &qword_1006A2AD0);
    if (v1 <= 0x3F)
    {
      sub_10001DF60(319, (unint64_t *)&unk_10069C6C0, &qword_1006A4800);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_1001711F0()
{
  if (!qword_10069C6A8)
  {
    type metadata accessor for ActivityStream();
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10069C6A8);
    }
  }
}

void *sub_100171248()
{
  return &protocol witness table for ObservableObjectPublisher;
}

uint64_t sub_100171254()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_100171264()
{
  return sub_100171440();
}

uint64_t sub_100171278(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ActivityStream();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  id v7 = v1;
  static Published.subscript.setter();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
}

uint64_t (*sub_10017139C(void *a1))()
{
  unint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  void v2[4] = swift_getKeyPath();
  void v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return sub_100171428;
}

uint64_t sub_10017142C()
{
  return sub_100171440();
}

uint64_t sub_100171440()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();

  return swift_release();
}

uint64_t sub_1001714B4(uint64_t a1)
{
  uint64_t v3 = sub_10002F214(&qword_1006A4800);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100171AF8(a1, (uint64_t)v5);
  id v6 = v1;
  static Published.subscript.setter();
  return sub_10002B754(a1, &qword_1006A4800);
}

uint64_t (*sub_100171584(void *a1))()
{
  unint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  void v2[4] = swift_getKeyPath();
  void v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return sub_100171428;
}

void sub_100171610(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 48))(*a1, 0);
  swift_release();
  swift_release();

  free(v1);
}

uint64_t sub_100171678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();

  return ActivityStreamControlling.isItemEnabled(_:)(a1, ObjectType, a3);
}

uint64_t sub_1001716C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();

  return ActivityStreamControlling.press(_:isPressed:)(a1, a2, ObjectType, a4);
}

uint64_t sub_100171720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();

  return ActivityStreamControlling.select(_:)(a1, ObjectType, a3);
}

uint64_t sub_100171770@<X0>(uint64_t *a1@<X8>)
{
  swift_getObjectType();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001717B0()
{
  return sub_100171C8C(&qword_10069C6D0);
}

uint64_t sub_1001717E4(uint64_t a1, void **a2)
{
  uint64_t v4 = type metadata accessor for ActivityStream();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v15 - v9;
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v11((char *)&v15 - v9, a1, v4);
  uint64_t v12 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  v11(v8, (uint64_t)v10, v4);
  id v13 = v12;
  static Published.subscript.setter();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
}

uint64_t sub_100171950()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();

  return swift_release();
}

uint64_t sub_1001719C8()
{
  return sub_100171950();
}

uint64_t sub_1001719F0(uint64_t a1, void **a2)
{
  uint64_t v4 = sub_10002F214(&qword_1006A4800);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v13 - v8;
  sub_100171AF8(a1, (uint64_t)&v13 - v8);
  uint64_t v10 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100171AF8((uint64_t)v9, (uint64_t)v7);
  id v11 = v10;
  static Published.subscript.setter();
  return sub_10002B754((uint64_t)v9, &qword_1006A4800);
}

uint64_t sub_100171AF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002F214(&qword_1006A4800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100171B60()
{
  return sub_100171950();
}

uint64_t sub_100171B94()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100171BA4()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100171BDC()
{
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100171C24(uint64_t a1)
{
  return sub_1001707BC(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32));
}

unint64_t sub_100171C30()
{
  unint64_t result = qword_1006A5380;
  if (!qword_1006A5380)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1006A5380);
  }
  return result;
}

void sub_100171C70(BOOL *a1@<X8>)
{
  sub_100170BE8(*(void *)(v1 + 24), a1);
}

uint64_t sub_100171C8C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ActivityStreamViewController();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100171CD0(void *a1)
{
  [a1 setIsPasswordProtected:1];
  [a1 setCryptoIterationCount:*v1];
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  [a1 setCryptoSalt:isa];

  Class v4 = Data._bridgeToObjectiveC()().super.isa;
  [a1 setCryptoInitializationVector:v4];

  Class v5 = Data._bridgeToObjectiveC()().super.isa;
  [a1 setCryptoTag:v5];

  Class v6 = Data._bridgeToObjectiveC()().super.isa;
  [a1 setCryptoWrappedKey:v6];

  id v7 = String._bridgeToObjectiveC()();
  [a1 setPasswordHint:v7];
}

unint64_t sub_100171DE8(char a1)
{
  unint64_t result = 0x6F69746172657469;
  switch(a1)
  {
    case 1:
      unint64_t result = 1953259891;
      break;
    case 2:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      unint64_t result = 6775156;
      break;
    case 4:
      unint64_t result = 0x4B64657070617277;
      break;
    case 5:
      unint64_t result = 0x64726F7773736170;
      break;
    case 6:
      unint64_t result = 1635017060;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_100171ED4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

unint64_t sub_100171EE8()
{
  return sub_100171DE8(*v0);
}

uint64_t sub_100171EF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100172890(a1, a2);
  *a3 = result;
  return result;
}

void sub_100171F18(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_100171F24(uint64_t a1)
{
  unint64_t v2 = sub_1001731C4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100171F60(uint64_t a1)
{
  unint64_t v2 = sub_1001731C4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100171F9C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10002F214(&qword_10069C768);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10015E154(a1, a1[3]);
  sub_1001731C4();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v12) = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    long long v12 = *(_OWORD *)(v3 + 8);
    char v11 = 1;
    sub_10017326C();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    long long v12 = *(_OWORD *)(v3 + 24);
    char v11 = 2;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    long long v12 = *(_OWORD *)(v3 + 40);
    char v11 = 3;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    long long v12 = *(_OWORD *)(v3 + 56);
    char v11 = 4;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v12) = 5;
    KeyedEncodingContainer.encode(_:forKey:)();
    long long v12 = *(_OWORD *)(v3 + 88);
    char v11 = 6;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

__n128 sub_100172230@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100172B88(a1, (uint64_t *)v7);
  if (!v2)
  {
    long long v5 = v7[5];
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_OWORD *)(a2 + 80) = v5;
    *(void *)(a2 + 96) = v8;
    long long v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
    __n128 result = (__n128)v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t sub_100172290(void *a1)
{
  return sub_100171F9C(a1);
}

void sub_1001722A8(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  if ([a1 isPasswordProtected])
  {
    uint64_t v36 = a3;
    id v34 = [a1 cryptoIterationCount];
    id v8 = [a1 cryptoSalt];
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v32 = v11;
      uint64_t v33 = v10;
    }
    else
    {
      unint64_t v32 = 0xC000000000000000;
      uint64_t v33 = 0;
    }
    id v12 = [a1 cryptoInitializationVector];
    uint64_t v35 = a2;
    if (v12)
    {
      uint64_t v13 = v12;
      uint64_t v14 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v16 = v15;
    }
    else
    {
      uint64_t v14 = 0;
      unint64_t v16 = 0xC000000000000000;
    }
    id v17 = [a1 cryptoTag];
    if (v17)
    {
      uint64_t v18 = v17;
      uint64_t v19 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v21 = v20;
    }
    else
    {
      uint64_t v19 = 0;
      unint64_t v21 = 0xC000000000000000;
    }
    id v22 = [a1 cryptoWrappedKey];
    if (v22)
    {
      id v23 = v22;
      uint64_t v24 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v26 = v25;
    }
    else
    {
      uint64_t v24 = 0;
      unint64_t v26 = 0xC000000000000000;
    }
    id v27 = [a1 passwordHint];
    if (v27)
    {
      uint64_t v28 = v27;
      uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v31 = v30;
    }
    else
    {
      uint64_t v29 = 0;
      unint64_t v31 = 0xE000000000000000;
    }
    *a4 = v34;
    a4[1] = v33;
    a4[2] = v32;
    a4[3] = v14;
    a4[4] = v16;
    a4[5] = v19;
    a4[6] = v21;
    a4[7] = v24;
    a4[8] = v26;
    a4[9] = v29;
    a4[10] = v31;
    a4[11] = v35;
    a4[12] = v36;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100172484(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t _s13EncryptedDataVwxx(void *a1)
{
  sub_10017253C(a1[1], a1[2]);
  sub_10017253C(a1[3], a1[4]);
  sub_10017253C(a1[5], a1[6]);
  sub_10017253C(a1[7], a1[8]);
  swift_bridgeObjectRelease();
  uint64_t v2 = a1[11];
  unint64_t v3 = a1[12];

  return sub_10017253C(v2, v3);
}

uint64_t sub_10017253C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

void *_s13EncryptedDataVwcp(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  unint64_t v5 = a2[2];
  sub_100172484(v4, v5);
  a1[1] = v4;
  a1[2] = v5;
  uint64_t v6 = a2[3];
  unint64_t v7 = a2[4];
  sub_100172484(v6, v7);
  a1[3] = v6;
  a1[4] = v7;
  uint64_t v8 = a2[5];
  unint64_t v9 = a2[6];
  sub_100172484(v8, v9);
  a1[5] = v8;
  a1[6] = v9;
  uint64_t v10 = a2[7];
  unint64_t v11 = a2[8];
  sub_100172484(v10, v11);
  a1[7] = v10;
  a1[8] = v11;
  uint64_t v12 = a2[10];
  a1[9] = a2[9];
  a1[10] = v12;
  uint64_t v14 = a2[11];
  unint64_t v13 = a2[12];
  swift_bridgeObjectRetain();
  sub_100172484(v14, v13);
  a1[11] = v14;
  a1[12] = v13;
  return a1;
}

void *_s13EncryptedDataVwca(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = a2[1];
  unint64_t v5 = a2[2];
  sub_100172484(v4, v5);
  uint64_t v6 = a1[1];
  unint64_t v7 = a1[2];
  a1[1] = v4;
  a1[2] = v5;
  sub_10017253C(v6, v7);
  uint64_t v8 = a2[3];
  unint64_t v9 = a2[4];
  sub_100172484(v8, v9);
  uint64_t v10 = a1[3];
  unint64_t v11 = a1[4];
  a1[3] = v8;
  a1[4] = v9;
  sub_10017253C(v10, v11);
  uint64_t v12 = a2[5];
  unint64_t v13 = a2[6];
  sub_100172484(v12, v13);
  uint64_t v14 = a1[5];
  unint64_t v15 = a1[6];
  a1[5] = v12;
  a1[6] = v13;
  sub_10017253C(v14, v15);
  uint64_t v16 = a2[7];
  unint64_t v17 = a2[8];
  sub_100172484(v16, v17);
  uint64_t v18 = a1[7];
  unint64_t v19 = a1[8];
  a1[7] = v16;
  a1[8] = v17;
  sub_10017253C(v18, v19);
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = a2[11];
  unint64_t v20 = a2[12];
  sub_100172484(v21, v20);
  uint64_t v22 = a1[11];
  unint64_t v23 = a1[12];
  a1[11] = v21;
  a1[12] = v20;
  sub_10017253C(v22, v23);
  return a1;
}

__n128 _s13EncryptedDataVwtk(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t _s13EncryptedDataVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  unint64_t v5 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_10017253C(v4, v5);
  uint64_t v6 = *(void *)(a1 + 24);
  unint64_t v7 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  sub_10017253C(v6, v7);
  uint64_t v8 = *(void *)(a1 + 40);
  unint64_t v9 = *(void *)(a1 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  sub_10017253C(v8, v9);
  uint64_t v10 = *(void *)(a1 + 56);
  unint64_t v11 = *(void *)(a1 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  sub_10017253C(v10, v11);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a1 + 88);
  unint64_t v13 = *(void *)(a1 + 96);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  sub_10017253C(v12, v13);
  return a1;
}

uint64_t _s13EncryptedDataVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 104)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 80);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s13EncryptedDataVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 80) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s13EncryptedDataVMa()
{
  return &_s13EncryptedDataVN;
}

uint64_t sub_100172890(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F69746172657469 && a2 == 0xEE00746E756F436ELL;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1953259891 && a2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000010054C420 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 6775156 && a2 == 0xE300000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4B64657070617277 && a2 == 0xEA00000000007965 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x64726F7773736170 && a2 == 0xEC000000746E6948 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_100172B88@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_10002F214(&qword_10069C750);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10015E154(a1, a1[3]);
  sub_1001731C4();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return sub_100018FE8((uint64_t)a1);
  }
  LOBYTE(v50) = 0;
  uint64_t v9 = KeyedDecodingContainer.decode(_:forKey:)();
  char v52 = 1;
  sub_100173218();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  char v52 = 2;
  unint64_t v45 = v51;
  uint64_t v46 = v50;
  sub_100172484(v50, v51);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  char v52 = 3;
  unint64_t v48 = v51;
  uint64_t v49 = v50;
  sub_100172484(v50, v51);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v43 = v9;
  uint64_t v10 = v50;
  char v52 = 4;
  unint64_t v44 = v51;
  sub_100172484(v50, v51);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v47 = v10;
  unint64_t v11 = v44;
  uint64_t v12 = v50;
  LOBYTE(v50) = 5;
  unint64_t v41 = v51;
  uint64_t v42 = v12;
  sub_100172484(v12, v51);
  uint64_t v39 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v40 = v13;
  char v52 = 6;
  swift_bridgeObjectRetain();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v15 = v50;
  unint64_t v14 = v51;
  unint64_t v37 = v51;
  uint64_t v38 = v50;
  sub_100172484(v46, v45);
  sub_100172484(v49, v48);
  sub_100172484(v47, v11);
  unint64_t v16 = v41;
  uint64_t v17 = v42;
  sub_100172484(v42, v41);
  swift_bridgeObjectRetain();
  sub_100172484(v15, v14);
  swift_bridgeObjectRelease();
  uint64_t v18 = v17;
  unint64_t v19 = v16;
  sub_10017253C(v18, v16);
  uint64_t v20 = v47;
  sub_10017253C(v47, v11);
  unint64_t v21 = v48;
  uint64_t v22 = v49;
  sub_10017253C(v49, v48);
  unint64_t v23 = v45;
  uint64_t v24 = v46;
  sub_10017253C(v46, v45);
  sub_100018FE8((uint64_t)a1);
  sub_10017253C(v24, v23);
  sub_10017253C(v22, v21);
  uint64_t v25 = v20;
  unint64_t v26 = v44;
  sub_10017253C(v20, v44);
  uint64_t v27 = v42;
  unint64_t v28 = v19;
  sub_10017253C(v42, v19);
  uint64_t v29 = v40;
  swift_bridgeObjectRelease();
  unint64_t v31 = v37;
  uint64_t v30 = v38;
  uint64_t result = sub_10017253C(v38, v37);
  uint64_t v33 = v46;
  *a2 = v43;
  a2[1] = v33;
  uint64_t v34 = v49;
  a2[2] = v45;
  a2[3] = v34;
  a2[4] = v48;
  a2[5] = v25;
  a2[6] = v26;
  a2[7] = v27;
  uint64_t v35 = v39;
  a2[8] = v28;
  a2[9] = v35;
  a2[10] = v29;
  a2[11] = v30;
  a2[12] = v31;
  return result;
}

unint64_t sub_1001731C4()
{
  unint64_t result = qword_10069C758;
  if (!qword_10069C758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069C758);
  }
  return result;
}

unint64_t sub_100173218()
{
  unint64_t result = qword_10069C760;
  if (!qword_10069C760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069C760);
  }
  return result;
}

unint64_t sub_10017326C()
{
  unint64_t result = qword_10069C770;
  if (!qword_10069C770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069C770);
  }
  return result;
}

uint64_t _s13EncryptedDataV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s13EncryptedDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + sub_1001631A8(0, 1, 0, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10017341CLL);
      case 4:
        *(_DWORD *)(result + sub_1001631A8(0, 1, 0, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + sub_1001631A8(0, 1, 0, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + sub_1001631A8(0, 1, 0, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

unsigned char *sub_100173444(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *_s13EncryptedDataV10CodingKeysOMa()
{
  return &_s13EncryptedDataV10CodingKeysON;
}

unint64_t sub_100173460()
{
  unint64_t result = qword_10069C778;
  if (!qword_10069C778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069C778);
  }
  return result;
}

unint64_t sub_1001734B8()
{
  unint64_t result = qword_10069C780;
  if (!qword_10069C780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069C780);
  }
  return result;
}

unint64_t sub_100173510()
{
  unint64_t result = qword_10069C788;
  if (!qword_10069C788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069C788);
  }
  return result;
}

BOOL static AppIntentsError.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void AppIntentsError.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
}

Swift::Int AppIntentsError.hashValue.getter(unsigned __int8 a1)
{
  return Hasher._finalize()();
}

uint64_t AppIntentsError.localizedStringResource.getter()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  int v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t sub_100173EAC()
{
  return AppIntentsError.localizedStringResource.getter();
}

uint64_t AppIntentsError.errorDescription.getter()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v0 - 8);
  AppIntentsError.localizedStringResource.getter();
  return String.init(localized:)();
}

unint64_t sub_100173F34()
{
  unint64_t result = qword_10069C790;
  if (!qword_10069C790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069C790);
  }
  return result;
}

unint64_t sub_100173F8C()
{
  unint64_t result = qword_10069E1E0;
  if (!qword_10069E1E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069E1E0);
  }
  return result;
}

uint64_t sub_100173FE0()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v0 - 8);
  AppIntentsError.localizedStringResource.getter();
  return String.init(localized:)();
}

uint64_t getEnumTagSinglePayload for AppIntentsError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEB) {
    goto LABEL_17;
  }
  if (a2 + 21 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 21) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 21;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 21;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 21;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x16;
  int v8 = v6 - 22;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AppIntentsError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 21 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 21) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEA)
  {
    unsigned int v6 = ((a2 - 235) >> 8) + 1;
    *unint64_t result = a2 + 21;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + sub_1001631A8(0, 1, 0, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001741C0);
      case 4:
        *(_DWORD *)(result + sub_1001631A8(0, 1, 0, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + sub_1001631A8(0, 1, 0, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + sub_1001631A8(0, 1, 0, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 21;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppIntentsError()
{
  return &type metadata for AppIntentsError;
}

__n128 initializeBufferWithCopyOfBuffer for NotesFeature(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for NotesFeature(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for NotesFeature(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 17) = v3;
  return result;
}

ValueMetadata *type metadata accessor for NotesFeature()
{
  return &type metadata for NotesFeature;
}

uint64_t sub_100174268()
{
  return sub_100174408();
}

uint64_t sub_100174278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100174830(a1, a2, a3, (uint64_t (*)(void))sub_100035D4C, (uint64_t (*)(void))sub_1001742A4);
}

unint64_t sub_1001742A4()
{
  unint64_t result = qword_10069C798;
  if (!qword_10069C798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069C798);
  }
  return result;
}

const char *sub_1001742F8()
{
  return "PencilAndPaper";
}

uint64_t sub_10017430C()
{
  return sub_100174408();
}

uint64_t sub_10017431C()
{
  return sub_100174408();
}

ValueMetadata *type metadata accessor for GreyParrotFeature()
{
  return &type metadata for GreyParrotFeature;
}

ValueMetadata *type metadata accessor for SiriSMARTFeature()
{
  return &type metadata for SiriSMARTFeature;
}

ValueMetadata *type metadata accessor for UniquelyiPadFeature()
{
  return &type metadata for UniquelyiPadFeature;
}

ValueMetadata *type metadata accessor for PencilAndPaperFeature()
{
  return &type metadata for PencilAndPaperFeature;
}

ValueMetadata *type metadata accessor for TelephonyUtilitiesFeature()
{
  return &type metadata for TelephonyUtilitiesFeature;
}

ValueMetadata *type metadata accessor for AppIntentsFeature()
{
  return &type metadata for AppIntentsFeature;
}

const char *sub_10017438C()
{
  return "GreyParrot";
}

uint64_t sub_1001743A0()
{
  return sub_100174408();
}

const char *sub_1001743B0()
{
  return "ResponseFramework";
}

uint64_t sub_1001743C4()
{
  return sub_100174408();
}

const char *sub_1001743D4()
{
  return "UIKit";
}

uint64_t sub_1001743E8()
{
  return sub_100174408();
}

uint64_t sub_1001743F8()
{
  return sub_100174408();
}

uint64_t sub_100174408()
{
  uint64_t v3 = StaticString.description.getter();
  v0._countAndFlagsBits = 47;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  v1._countAndFlagsBits = StaticString.description.getter();
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_100174488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100174830(a1, a2, a3, (uint64_t (*)(void))sub_100019038, (uint64_t (*)(void))sub_1001744B4);
}

unint64_t sub_1001744B4()
{
  unint64_t result = qword_10069C7A8;
  if (!qword_10069C7A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069C7A8);
  }
  return result;
}

uint64_t sub_100174508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100174830(a1, a2, a3, (uint64_t (*)(void))sub_100033ECC, (uint64_t (*)(void))sub_100174534);
}

unint64_t sub_100174534()
{
  unint64_t result = qword_10069C7B8;
  if (!qword_10069C7B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069C7B8);
  }
  return result;
}

uint64_t sub_100174588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100174830(a1, a2, a3, (uint64_t (*)(void))sub_1001745B4, (uint64_t (*)(void))sub_100174608);
}

unint64_t sub_1001745B4()
{
  unint64_t result = qword_1006A5280;
  if (!qword_1006A5280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5280);
  }
  return result;
}

unint64_t sub_100174608()
{
  unint64_t result = qword_10069C7C0;
  if (!qword_10069C7C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069C7C0);
  }
  return result;
}

uint64_t sub_10017465C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100174830(a1, a2, a3, (uint64_t (*)(void))sub_100174688, (uint64_t (*)(void))sub_1001746DC);
}

unint64_t sub_100174688()
{
  unint64_t result = qword_10069C7C8;
  if (!qword_10069C7C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069C7C8);
  }
  return result;
}

unint64_t sub_1001746DC()
{
  unint64_t result = qword_10069C7D0;
  if (!qword_10069C7D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069C7D0);
  }
  return result;
}

uint64_t sub_100174730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100174830(a1, a2, a3, (uint64_t (*)(void))sub_10017475C, (uint64_t (*)(void))sub_1001747B0);
}

unint64_t sub_10017475C()
{
  unint64_t result = qword_10069C7D8;
  if (!qword_10069C7D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069C7D8);
  }
  return result;
}

unint64_t sub_1001747B0()
{
  unint64_t result = qword_10069C7E0;
  if (!qword_10069C7E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069C7E0);
  }
  return result;
}

uint64_t sub_100174804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100174830(a1, a2, a3, (uint64_t (*)(void))sub_10017486C, (uint64_t (*)(void))sub_1001748C0);
}

uint64_t sub_100174830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_10017486C()
{
  unint64_t result = qword_10069C7E8;
  if (!qword_10069C7E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069C7E8);
  }
  return result;
}

unint64_t sub_1001748C0()
{
  unint64_t result = qword_10069C7F0;
  if (!qword_10069C7F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069C7F0);
  }
  return result;
}

uint64_t VisibleFoldersQuery.init()()
{
  return _s11MobileNotes20VisibleAccountsQueryVACycfC_0();
}

uint64_t VisibleFoldersQuery.init(requireRenamingSupport:)()
{
  return VisibleAccountsQuery.init(requireFolderCreationSupport:)();
}

uint64_t VisibleFoldersQuery.init(requireNewNoteDestinationSupport:)()
{
  return sub_10017952C();
}

uint64_t VisibleFoldersQuery.init(requireMoveNoteDestinationSupport:)()
{
  return sub_10017964C();
}

uint64_t VisibleFoldersQuery.init(requireFolderCreationSupport:)()
{
  sub_10002F214((uint64_t *)&unk_10069B130);
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t v0 = AppDependency.__allocating_init(key:manager:)();
  sub_10002F214((uint64_t *)&unk_10069CE60);
  AnyHashable.init<A>(_:)();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  return v0;
}

uint64_t VisibleFoldersQuery.entities(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[9] = a2;
  void v3[10] = a3;
  v3[8] = a1;
  uint64_t v4 = type metadata accessor for Logger();
  v3[11] = v4;
  v3[12] = *(void *)(v4 - 8);
  v3[13] = swift_task_alloc();
  return _swift_task_switch(sub_100174B70, 0, 0);
}

uint64_t sub_100174B70()
{
  AppDependency.wrappedValue.getter();
  uint64_t v1 = v0[6];
  v0[14] = v1;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_10069C610 + dword_10069C610);
  int v2 = (void *)swift_task_alloc();
  v0[15] = v2;
  *int v2 = v0;
  v2[1] = sub_100174C30;
  uint64_t v3 = v0[8];
  return v5(v3, v1);
}

uint64_t sub_100174C30(uint64_t a1)
{
  uint64_t v3 = *(void **)(*v2 + 112);
  uint64_t v4 = *v2;
  *(void *)(*v2 + 128) = a1;
  swift_task_dealloc();

  if (v1)
  {
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v4 + 8);
    return v5();
  }
  else
  {
    return _swift_task_switch(sub_100174D9C, 0, 0);
  }
}

uint64_t sub_100174D9C()
{
  uint64_t v17 = v0;
  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  swift_bridgeObjectRetain_n();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v13 = v0[12];
    uint64_t v14 = v0[11];
    uint64_t v15 = v0[13];
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136642819;
    type metadata accessor for FolderEntity();
    swift_bridgeObjectRetain();
    uint64_t v4 = Array.description.getter();
    unint64_t v6 = v5;
    swift_bridgeObjectRelease();
    v0[7] = sub_10045DA1C(v4, v6, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "VisibleFoldersQuery: Suggesting folders: %{sensitive}s", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v14);
  }
  else
  {
    uint64_t v8 = v0[12];
    uint64_t v7 = v0[13];
    uint64_t v9 = v0[11];
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  }
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v11 = v0[16];
  return v10(v11);
}

uint64_t VisibleFoldersQuery.suggestedEntities()(uint64_t a1, uint64_t a2, int a3)
{
  *(_DWORD *)(v3 + 1784) = a3;
  *(void *)(v3 + 1624) = a2;
  *(void *)(v3 + 1576) = a1;
  uint64_t v4 = type metadata accessor for ManagedEntityContextType();
  *(void *)(v3 + 1672) = v4;
  *(void *)(v3 + 1680) = *(void *)(v4 - 8);
  *(void *)(v3 + 1688) = swift_task_alloc();
  return _swift_task_switch(sub_1001750D4, 0, 0);
}

uint64_t sub_1001750D4()
{
  uint64_t v14 = v0;
  uint64_t v1 = *(void *)(v0 + 1688);
  uint64_t v2 = *(void *)(v0 + 1680);
  uint64_t v3 = *(void *)(v0 + 1672);
  AppDependency.wrappedValue.getter();
  uint64_t v4 = *(void **)(v0 + 1336);
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, enum case for ManagedEntityContextType.html(_:), v3);
  *(void *)(v0 + 1696) = ICUnifiedNoteContext.managedObjectContext(for:)();
  unsigned int v5 = *(_DWORD *)(v0 + 1784);
  char v12 = v5 & 1;
  LODWORD(v2) = HIBYTE(v5) & 1;
  int v6 = HIWORD(v5) & 1;
  int v7 = (v5 >> 8) & 1;
  (*(void (**)(void, void))(*(void *)(v0 + 1680) + 8))(*(void *)(v0 + 1688), *(void *)(v0 + 1672));

  AppDependency.wrappedValue.getter();
  uint64_t v8 = *(void **)(v0 + 1480);
  *(void *)(v0 + 1704) = [v8 modernManagedObjectContext];

  AppDependency.wrappedValue.getter();
  uint64_t v9 = *(void **)(v0 + 1384);
  sub_100031418(0, &qword_10069C808);
  static ICUnifiedNoteContext.$prefersViewContext.getter();
  *(unsigned char *)(v0 + 1788) = 0;
  swift_task_localValuePush();
  sub_1001775DC(v9, v7, v6, v2, v12, &v13);
  swift_task_localValuePop();
  swift_release();

  *(void *)(v0 + 1712) = v13;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 1720) = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_100175354;
  return ICCoreDataIndexer.reloadSnapshot()();
}

uint64_t sub_100175354(uint64_t a1)
{
  *(void *)(*(void *)v1 + 1728) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100175454, 0, 0);
}

uint64_t sub_100175454()
{
  uint64_t v1 = *(void **)(v0 + 1704);
  uint64_t v17 = *(void **)(v0 + 1696);
  unsigned int v2 = *(_DWORD *)(v0 + 1784);
  uint64_t v3 = *(void *)(v0 + 1624);
  uint64_t v4 = *(void *)(v0 + 1576);
  unsigned int v5 = sub_10017976C(*(id *)(v0 + 1728));
  uint64_t v7 = v6;
  uint64_t v8 = swift_allocObject();
  *(void *)(v0 + 1736) = v8;
  *(void *)(v8 + 16) = v4;
  *(void *)(v8 + 24) = v3;
  char v16 = v2 & 1;
  *(unsigned char *)(v8 + 32) = v2 & 1;
  int v15 = (v2 >> 8) & 1;
  *(unsigned char *)(v8 + 33) = v15;
  int v14 = HIWORD(v2) & 1;
  *(unsigned char *)(v8 + 34) = BYTE2(v2) & 1;
  int v9 = HIBYTE(v2) & 1;
  *(unsigned char *)(v8 + 35) = v9;
  *(void *)(v8 + 40) = v5;
  *(void *)(v8 + 48) = v7;
  *(void *)(v8 + 56) = v1;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v10 = v1;
  swift_retain();
  sub_10001DFF4(&qword_10069C820);
  swift_asyncLet_begin();
  uint64_t v11 = swift_allocObject();
  *(void *)(v0 + 1744) = v11;
  *(void *)(v11 + 16) = v4;
  *(void *)(v11 + 24) = v3;
  *(unsigned char *)(v11 + 32) = v16;
  *(unsigned char *)(v11 + 33) = v15;
  *(unsigned char *)(v11 + 34) = v14;
  *(unsigned char *)(v11 + 35) = v9;
  *(void *)(v11 + 40) = v5;
  *(void *)(v11 + 48) = v7;
  *(void *)(v11 + 56) = v17;
  swift_retain();
  swift_retain();
  id v12 = v17;
  swift_retain();
  swift_asyncLet_begin();
  return _swift_asyncLet_get_throwing(v0 + 656, v0 + 1528, sub_100175664, v0 + 1536);
}

uint64_t sub_100175664()
{
  v1[219] = v0;
  if (v0)
  {
    return _swift_asyncLet_finish(v1 + 2, v1 + 179, sub_100175974, v1 + 168);
  }
  else
  {
    v1[220] = v1[191];
    swift_bridgeObjectRetain();
    return _swift_asyncLet_get_throwing(v1 + 2, v1 + 179, sub_100175730, v1 + 198);
  }
}

uint64_t sub_100175730()
{
  *(void *)(v1 + 1768) = v0;
  if (v0) {
    unsigned int v2 = sub_100175ADC;
  }
  else {
    unsigned int v2 = sub_100175764;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100175764()
{
  uint64_t v1 = *(void *)(v0 + 1760);
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_1001760C0(v2, v1);
  *(void *)(v0 + 1776) = sub_100176F00(v3);
  return _swift_asyncLet_finish(v0 + 16, v0 + 1432, sub_100175804, v0 + 1392);
}

uint64_t sub_100175804()
{
  return _swift_task_switch(sub_100175820, 0, 0);
}

uint64_t sub_100175820()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 656, v0 + 1528, sub_1001758A0, v0 + 1296);
}

uint64_t sub_1001758A0()
{
  return _swift_task_switch(sub_1001758BC, 0, 0);
}

uint64_t sub_1001758BC()
{
  uint64_t v1 = *(void **)(v0 + 1728);
  uint64_t v2 = *(void **)(v0 + 1712);
  uint64_t v3 = *(void **)(v0 + 1696);

  swift_release_n();
  swift_release();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v5 = *(void *)(v0 + 1776);
  return v4(v5);
}

uint64_t sub_100175974()
{
  return _swift_task_switch(sub_100175990, 0, 0);
}

uint64_t sub_100175990()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 656, v0 + 1528, sub_100175A10, v0 + 1632);
}

uint64_t sub_100175A10()
{
  return _swift_task_switch(sub_100175A2C, 0, 0);
}

uint64_t sub_100175A2C()
{
  uint64_t v1 = *(void **)(v0 + 1728);
  uint64_t v2 = *(void **)(v0 + 1712);
  uint64_t v3 = *(void **)(v0 + 1696);

  swift_release_n();
  swift_release();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100175ADC()
{
  swift_bridgeObjectRelease();
  return _swift_asyncLet_finish(v0 + 16, v0 + 1432, sub_100175B5C, v0 + 1488);
}

uint64_t sub_100175B5C()
{
  return _swift_task_switch(sub_100175B78, 0, 0);
}

uint64_t sub_100175B78()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 656, v0 + 1528, sub_100175BF8, v0 + 1440);
}

uint64_t sub_100175BF8()
{
  return _swift_task_switch(sub_100175C14, 0, 0);
}

uint64_t sub_100175C14()
{
  uint64_t v1 = *(void **)(v0 + 1728);
  uint64_t v2 = *(void **)(v0 + 1712);
  uint64_t v3 = *(void **)(v0 + 1696);

  swift_release_n();
  swift_release();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100175CC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 16) = a1;
  id v10 = (void *)swift_task_alloc();
  *(void *)(v7 + 24) = v10;
  *id v10 = v7;
  v10[1] = sub_100175D64;
  return sub_100179D68(a5, a7);
}

uint64_t sub_100175D64(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 32) = a1;
    return _swift_task_switch(sub_10017B620, 0, 0);
  }
}

uint64_t sub_100175EB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 16) = a1;
  id v10 = (void *)swift_task_alloc();
  *(void *)(v7 + 24) = v10;
  *id v10 = v7;
  v10[1] = sub_100175F50;
  return sub_100179D68(a6, a7);
}

uint64_t sub_100175F50(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 32) = a1;
    return _swift_task_switch(sub_10017609C, 0, 0);
  }
}

uint64_t sub_10017609C()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001760C0(uint64_t a1, uint64_t a2)
{
  uint64_t v54 = a2;
  uint64_t v3 = (int *)type metadata accessor for FolderEntity();
  uint64_t v48 = *((void *)v3 - 1);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v46 = (uint64_t)&v43 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v43 - v10;
  uint64_t result = __chkstk_darwin(v9);
  uint64_t v47 = (uint64_t)&v43 - v13;
  int64_t v14 = 0;
  uint64_t v49 = a1;
  uint64_t v17 = *(void *)(a1 + 56);
  uint64_t v16 = a1 + 56;
  uint64_t v15 = v17;
  uint64_t v18 = 1 << *(unsigned char *)(v16 - 24);
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  else {
    uint64_t v19 = -1;
  }
  unint64_t v20 = v19 & v15;
  uint64_t v44 = v16;
  int64_t v45 = (unint64_t)(v18 + 63) >> 6;
  while (1)
  {
    if (v20)
    {
      uint64_t v50 = (v20 - 1) & v20;
      int64_t v51 = v14;
      unint64_t v24 = __clz(__rbit64(v20)) | (v14 << 6);
      goto LABEL_25;
    }
    int64_t v25 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v25 >= v45) {
      goto LABEL_43;
    }
    unint64_t v26 = *(void *)(v44 + 8 * v25);
    int64_t v27 = v14 + 1;
    if (!v26)
    {
      int64_t v27 = v14 + 2;
      if (v14 + 2 >= v45) {
        goto LABEL_43;
      }
      unint64_t v26 = *(void *)(v44 + 8 * v27);
      if (!v26)
      {
        int64_t v27 = v14 + 3;
        if (v14 + 3 >= v45) {
          goto LABEL_43;
        }
        unint64_t v26 = *(void *)(v44 + 8 * v27);
        if (!v26)
        {
          int64_t v27 = v14 + 4;
          if (v14 + 4 >= v45) {
            goto LABEL_43;
          }
          unint64_t v26 = *(void *)(v44 + 8 * v27);
          if (!v26) {
            break;
          }
        }
      }
    }
LABEL_24:
    uint64_t v50 = (v26 - 1) & v26;
    int64_t v51 = v27;
    unint64_t v24 = __clz(__rbit64(v26)) + (v27 << 6);
LABEL_25:
    uint64_t v29 = *(void *)(v48 + 72);
    uint64_t v30 = v47;
    sub_10017B450(*(void *)(v49 + 48) + v29 * v24, v47, (uint64_t (*)(void))type metadata accessor for FolderEntity);
    sub_10017B520(v30, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FolderEntity);
    uint64_t v31 = v54;
    Hasher.init(_seed:)();
    type metadata accessor for FolderID();
    sub_1000122EC(&qword_10069C8B8, (void (*)(uint64_t))&type metadata accessor for FolderID);
    swift_bridgeObjectRetain();
    dispatch thunk of Hashable.hash(into:)();
    type metadata accessor for URL();
    sub_1000122EC((unint64_t *)&unk_10069BA10, (void (*)(uint64_t))&type metadata accessor for URL);
    dispatch thunk of Hashable.hash(into:)();
    unint64_t v32 = &v11[v3[6]];
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    uint64_t v33 = &v11[v3[7]];
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    uint64_t v53 = v3[8];
    Hasher._combine(_:)(v11[v53]);
    uint64_t v52 = v3[9];
    Hasher._combine(_:)(v11[v52]);
    Swift::Int v34 = Hasher._finalize()();
    uint64_t v35 = -1 << *(unsigned char *)(v31 + 32);
    unint64_t v36 = v34 & ~v35;
    uint64_t v37 = v31 + 56;
    if ((*(void *)(v31 + 56 + ((v36 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v36))
    {
      uint64_t v38 = ~v35;
      while (1)
      {
        sub_10017B450(*(void *)(v54 + 48) + v36 * v29, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FolderEntity);
        if (static FolderID.== infix(_:_:)() & 1) != 0 && (static URL.== infix(_:_:)())
        {
          uint64_t v39 = &v6[v3[6]];
          BOOL v40 = *(void *)v39 == *(void *)v32 && *((void *)v39 + 1) == *((void *)v32 + 1);
          if (v40 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            unint64_t v41 = &v6[v3[7]];
            BOOL v42 = *(void *)v41 == *(void *)v33 && *((void *)v41 + 1) == *((void *)v33 + 1);
            if (v42 || (_stringCompareWithSmolCheck(_:_:expecting:)())
              && v6[v3[8]] == v11[v53]
              && v6[v3[9]] == v11[v52])
            {
              break;
            }
          }
        }
        sub_10017B4B8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FolderEntity);
        unint64_t v36 = (v36 + 1) & v38;
        if (((*(void *)(v37 + ((v36 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v36) & 1) == 0) {
          goto LABEL_5;
        }
      }
      sub_10017B4B8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FolderEntity);
    }
    else
    {
LABEL_5:
      uint64_t v21 = v54;
      swift_bridgeObjectRelease();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v23 = v46;
      sub_10017B450((uint64_t)v11, v46, (uint64_t (*)(void))type metadata accessor for FolderEntity);
      uint64_t v55 = v21;
      sub_100397928(v23, v36, isUniquelyReferenced_nonNull_native);
      uint64_t v54 = v55;
    }
    swift_bridgeObjectRelease();
    uint64_t result = sub_10017B4B8((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FolderEntity);
    unint64_t v20 = v50;
    int64_t v14 = v51;
  }
  uint64_t v28 = v14 + 5;
  if (v14 + 5 >= v45)
  {
LABEL_43:
    swift_release();
    return v54;
  }
  unint64_t v26 = *(void *)(v44 + 8 * v28);
  if (v26)
  {
    int64_t v27 = v14 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v27 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v27 >= v45) {
      goto LABEL_43;
    }
    unint64_t v26 = *(void *)(v44 + 8 * v27);
    ++v28;
    if (v26) {
      goto LABEL_24;
    }
  }
LABEL_45:
  __break(1u);
  return result;
}

void sub_1001766AC(unint64_t a1, void *a2)
{
}

void sub_1001766DC(unint64_t a1, void *a2)
{
}

void sub_10017670C(unint64_t a1, void *a2, unint64_t *a3, uint64_t a4, unint64_t *a5, void (*a6)(id *, id))
{
  unint64_t v7 = a1;
  v26[1] = a2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    sub_100031418(0, a3);
    sub_10002C8EC(a5, a3);
    Set.Iterator.init(_cocoa:)();
    unint64_t v7 = (unint64_t)v26[2];
    int64_t v25 = v26[3];
    uint64_t v10 = (uint64_t)v26[4];
    id v11 = v26[5];
    unint64_t v12 = (unint64_t)v26[6];
  }
  else
  {
    id v11 = 0;
    uint64_t v13 = -1 << *(unsigned char *)(a1 + 32);
    int64_t v25 = (void *)(a1 + 56);
    uint64_t v10 = ~v13;
    uint64_t v14 = -v13;
    if (v14 < 64) {
      uint64_t v15 = ~(-1 << v14);
    }
    else {
      uint64_t v15 = -1;
    }
    unint64_t v12 = v15 & *(void *)(a1 + 56);
  }
  int64_t v16 = (unint64_t)(v10 + 64) >> 6;
  if ((v7 & 0x8000000000000000) != 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v12)
    {
      uint64_t v17 = (v12 - 1) & v12;
      unint64_t v18 = __clz(__rbit64(v12)) | ((void)v11 << 6);
      uint64_t v19 = (char *)v11;
      goto LABEL_29;
    }
    uint64_t v21 = (uint64_t)v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v21 >= v16) {
      goto LABEL_32;
    }
    unint64_t v22 = v25[v21];
    uint64_t v19 = (char *)v11 + 1;
    if (!v22)
    {
      uint64_t v19 = (char *)v11 + 2;
      if ((uint64_t)v11 + 2 >= v16) {
        goto LABEL_32;
      }
      unint64_t v22 = v25[(void)v19];
      if (!v22)
      {
        uint64_t v19 = (char *)v11 + 3;
        if ((uint64_t)v11 + 3 >= v16) {
          goto LABEL_32;
        }
        unint64_t v22 = v25[(void)v19];
        if (!v22)
        {
          uint64_t v19 = (char *)v11 + 4;
          if ((uint64_t)v11 + 4 >= v16) {
            goto LABEL_32;
          }
          unint64_t v22 = v25[(void)v19];
          if (!v22)
          {
            uint64_t v19 = (char *)v11 + 5;
            if ((uint64_t)v11 + 5 >= v16) {
              goto LABEL_32;
            }
            unint64_t v22 = v25[(void)v19];
            if (!v22)
            {
              uint64_t v23 = (char *)v11 + 6;
              while ((char *)v16 != v23)
              {
                unint64_t v22 = v25[(void)v23++];
                if (v22)
                {
                  uint64_t v19 = v23 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_10017B518();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v17 = (v22 - 1) & v22;
    unint64_t v18 = __clz(__rbit64(v22)) + ((void)v19 << 6);
LABEL_29:
    id v20 = *(id *)(*(void *)(v7 + 48) + 8 * v18);
    if (!v20) {
      goto LABEL_32;
    }
    while (1)
    {
      a6(v26, v20);

      id v11 = v19;
      unint64_t v12 = v17;
      if ((v7 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (__CocoaSet.Iterator.next()())
      {
        sub_100031418(0, a3);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v20 = v26[0];
        swift_unknownObjectRelease();
        uint64_t v19 = (char *)v11;
        uint64_t v17 = v12;
        if (v20) {
          continue;
        }
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

uint64_t sub_1001769C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AccountEntity();
  uint64_t v41 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  unint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v39 = (uint64_t)&v36 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  unint64_t v12 = (char *)&v36 - v11;
  uint64_t result = __chkstk_darwin(v10);
  uint64_t v40 = (uint64_t)&v36 - v14;
  int64_t v15 = 0;
  uint64_t v42 = a1;
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v37 = a1 + 56;
  uint64_t v17 = 1 << *(unsigned char *)(a1 + 32);
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & v16;
  int64_t v38 = (unint64_t)(v17 + 63) >> 6;
  while (1)
  {
    if (v19)
    {
      uint64_t v43 = (v19 - 1) & v19;
      int64_t v44 = v15;
      unint64_t v22 = __clz(__rbit64(v19)) | (v15 << 6);
      goto LABEL_25;
    }
    int64_t v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_38;
    }
    if (v23 >= v38) {
      goto LABEL_36;
    }
    unint64_t v24 = *(void *)(v37 + 8 * v23);
    int64_t v25 = v15 + 1;
    if (!v24)
    {
      int64_t v25 = v15 + 2;
      if (v15 + 2 >= v38) {
        goto LABEL_36;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v25);
      if (!v24)
      {
        int64_t v25 = v15 + 3;
        if (v15 + 3 >= v38) {
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v37 + 8 * v25);
        if (!v24)
        {
          int64_t v25 = v15 + 4;
          if (v15 + 4 >= v38) {
            goto LABEL_36;
          }
          unint64_t v24 = *(void *)(v37 + 8 * v25);
          if (!v24) {
            break;
          }
        }
      }
    }
LABEL_24:
    uint64_t v43 = (v24 - 1) & v24;
    int64_t v44 = v25;
    unint64_t v22 = __clz(__rbit64(v24)) + (v25 << 6);
LABEL_25:
    uint64_t v27 = *(void *)(v41 + 72);
    uint64_t v28 = v40;
    sub_10017B450(*(void *)(v42 + 48) + v27 * v22, v40, (uint64_t (*)(void))type metadata accessor for AccountEntity);
    sub_10017B520(v28, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for AccountEntity);
    Hasher.init(_seed:)();
    type metadata accessor for AccountID();
    sub_1000122EC((unint64_t *)&unk_1006A27E0, (void (*)(uint64_t))&type metadata accessor for AccountID);
    swift_bridgeObjectRetain();
    dispatch thunk of Hashable.hash(into:)();
    type metadata accessor for URL();
    sub_1000122EC((unint64_t *)&unk_10069BA10, (void (*)(uint64_t))&type metadata accessor for URL);
    dispatch thunk of Hashable.hash(into:)();
    uint64_t v29 = &v12[*(int *)(v4 + 24)];
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Swift::Int v30 = Hasher._finalize()();
    uint64_t v31 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v32 = v30 & ~v31;
    if ((*(void *)(a2 + 56 + ((v32 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v32))
    {
      uint64_t v33 = ~v31;
      while (1)
      {
        sub_10017B450(*(void *)(a2 + 48) + v32 * v27, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for AccountEntity);
        if (static AccountID.== infix(_:_:)() & 1) != 0 && (static URL.== infix(_:_:)())
        {
          Swift::Int v34 = &v7[*(int *)(v4 + 24)];
          BOOL v35 = *(void *)v34 == *(void *)v29 && *((void *)v34 + 1) == *((void *)v29 + 1);
          if (v35 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
            break;
          }
        }
        sub_10017B4B8((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for AccountEntity);
        unint64_t v32 = (v32 + 1) & v33;
        if (((*(void *)(a2 + 56 + ((v32 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v32) & 1) == 0) {
          goto LABEL_5;
        }
      }
      sub_10017B4B8((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for AccountEntity);
    }
    else
    {
LABEL_5:
      swift_bridgeObjectRelease();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v21 = v39;
      sub_10017B450((uint64_t)v12, v39, (uint64_t (*)(void))type metadata accessor for AccountEntity);
      uint64_t v45 = a2;
      sub_100398FF4(v21, v32, isUniquelyReferenced_nonNull_native);
      a2 = v45;
    }
    swift_bridgeObjectRelease();
    unint64_t v19 = v43;
    int64_t v15 = v44;
    uint64_t result = sub_10017B4B8((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for AccountEntity);
  }
  uint64_t v26 = v15 + 5;
  if (v15 + 5 >= v38)
  {
LABEL_36:
    swift_release();
    return a2;
  }
  unint64_t v24 = *(void *)(v37 + 8 * v26);
  if (v24)
  {
    int64_t v25 = v15 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v25 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v25 >= v38) {
      goto LABEL_36;
    }
    unint64_t v24 = *(void *)(v37 + 8 * v25);
    ++v26;
    if (v24) {
      goto LABEL_24;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_100176F00(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FolderEntity();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2 - 8);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t result = __chkstk_darwin(v7);
  unint64_t v12 = (char *)&v31 - v11;
  int64_t v13 = 0;
  uint64_t v35 = a1;
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v15 = a1 + 56;
  uint64_t v14 = v16;
  uint64_t v17 = 1 << *(unsigned char *)(v15 - 24);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v14;
  uint64_t v32 = v15;
  int64_t v33 = (unint64_t)(v17 + 63) >> 6;
  id v20 = &_swiftEmptyArrayStorage;
  Swift::Int v34 = v6;
  if ((v18 & v14) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v21 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  for (unint64_t i = v21 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v24)) + (v13 << 6))
  {
    uint64_t v26 = *(void *)(v3 + 72);
    sub_10017B450(*(void *)(v35 + 48) + v26 * i, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FolderEntity);
    sub_10017B520((uint64_t)v9, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FolderEntity);
    sub_10017B520((uint64_t)v12, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FolderEntity);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v36 = v20;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100169AEC(0, v20[2] + 1, 1);
      id v20 = v36;
    }
    unint64_t v29 = v20[2];
    unint64_t v28 = v20[3];
    if (v29 >= v28 >> 1)
    {
      sub_100169AEC(v28 > 1, v29 + 1, 1);
      id v20 = v36;
    }
    v20[2] = v29 + 1;
    uint64_t v30 = (uint64_t)v20
        + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))
        + v29 * v26;
    uint64_t v6 = v34;
    uint64_t result = sub_10017B520((uint64_t)v34, v30, (uint64_t (*)(void))type metadata accessor for FolderEntity);
    if (v19) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v23 >= v33) {
      goto LABEL_27;
    }
    unint64_t v24 = *(void *)(v32 + 8 * v23);
    ++v13;
    if (!v24)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v33) {
        goto LABEL_27;
      }
      unint64_t v24 = *(void *)(v32 + 8 * v13);
      if (!v24)
      {
        int64_t v13 = v23 + 2;
        if (v23 + 2 >= v33) {
          goto LABEL_27;
        }
        unint64_t v24 = *(void *)(v32 + 8 * v13);
        if (!v24)
        {
          int64_t v13 = v23 + 3;
          if (v23 + 3 >= v33) {
            goto LABEL_27;
          }
          unint64_t v24 = *(void *)(v32 + 8 * v13);
          if (!v24) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v19 = (v24 - 1) & v24;
  }
  int64_t v25 = v23 + 4;
  if (v25 >= v33)
  {
LABEL_27:
    swift_release();
    return (uint64_t)v20;
  }
  unint64_t v24 = *(void *)(v32 + 8 * v25);
  if (v24)
  {
    int64_t v13 = v25;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v13 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v13 >= v33) {
      goto LABEL_27;
    }
    unint64_t v24 = *(void *)(v32 + 8 * v13);
    ++v25;
    if (v24) {
      goto LABEL_20;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_10017724C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = _s11MobileNotes20VisibleAccountsQueryVACycfC_0();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(unsigned char *)(a1 + 17) = v5 & 1;
  *(unsigned char *)(a1 + 18) = v6 & 1;
  *(unsigned char *)(a1 + 19) = v7 & 1;
  return result;
}

uint64_t sub_100177294(uint64_t a1)
{
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  char v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_10017733C;
  return VisibleFoldersQuery.entities(for:)(a1, v5, v4);
}

uint64_t sub_10017733C(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_10017743C(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v3 = *(void *)v1;
  uint64_t v4 = *(void *)(v1 + 8);
  int v5 = *(unsigned __int8 *)(v1 + 16);
  int v6 = *(unsigned __int8 *)(v1 + 17);
  int v7 = *(unsigned __int8 *)(v1 + 18);
  int v8 = *(unsigned __int8 *)(v1 + 19);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v9;
  if (v6) {
    int v10 = 256;
  }
  else {
    int v10 = 0;
  }
  int v11 = v10 | v5;
  if (v7) {
    int v12 = 0x10000;
  }
  else {
    int v12 = 0;
  }
  if (v8) {
    int v13 = 0x1000000;
  }
  else {
    int v13 = 0;
  }
  *uint64_t v9 = v2;
  v9[1] = sub_10016F18C;
  return VisibleFoldersQuery.suggestedEntities()(v3, v4, v11 | v12 | v13);
}

uint64_t sub_100177528(uint64_t a1, uint64_t a2)
{
  int v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100157B58();
  *int v5 = v2;
  v5[1] = sub_100161724;
  return EntityQuery.results()(a1, a2, v6);
}

void sub_1001775DC(void *a1@<X0>, int a2@<W1>, int a3@<W2>, char a4@<W3>, char a5@<W4>, void *a6@<X8>)
{
  int v21 = a2;
  int v22 = a3;
  uint64_t v11 = type metadata accessor for ManagedEntityContextType();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = [a1 modernManagedObjectContext];
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for ManagedEntityContextType.html(_:), v11);
  uint64_t v16 = ICUnifiedNoteContext.managedObjectContext(for:)();
  if (v6)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  else
  {
    uint64_t v17 = (void *)v16;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    id v18 = [objc_allocWithZone((Class)ICFolderCoreDataIndexer) initWithLegacyManagedObjectContext:v17 modernManagedObjectContext:v15];
    [v18 setShouldIncludeTrash:0];
    char v19 = v22;
    if (v21 & 1) != 0 || (v22 & 1) != 0 || (a4)
    {
      [v18 setShouldIncludeSmartFolders:0];
      [v18 setShouldIncludeSystemPaper:2];
      [v18 setShouldIncludeMathNotes:2];
      [v18 setShouldIncludeCallNotes:2];
      [v18 setShouldIncludeSharedWithYou:2];
    }
    if (v19 & 1) != 0 || (a4)
    {
      [v18 setShouldIncludeLegacyAccounts:0];
      if (a4) {
        [v18 setShouldIncludeDefaultFolder:0];
      }
    }
    if (a5)
    {
      [v18 setShouldIncludeDefaultFolder:0];
      [v18 setShouldIncludeSystemPaper:2];
      [v18 setShouldIncludeMathNotes:2];
      [v18 setShouldIncludeCallNotes:2];
      [v18 setShouldIncludeSharedWithYou:2];
      [v18 setShouldIncludeLegacyAccounts:0];
    }

    *a6 = v18;
  }
}

uint64_t VisibleFoldersQuery.entities(matching:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(_DWORD *)(v5 + 2056) = a5;
  *(void *)(v5 + 1840) = a4;
  *(void *)(v5 + 1832) = a3;
  *(void *)(v5 + 1824) = a2;
  *(void *)(v5 + 1816) = a1;
  uint64_t v6 = type metadata accessor for FolderEntity();
  *(void *)(v5 + 1848) = v6;
  *(void *)(v5 + 1856) = *(void *)(v6 - 8);
  *(void *)(v5 + 1864) = swift_task_alloc();
  uint64_t v7 = type metadata accessor for FolderID();
  *(void *)(v5 + 1872) = v7;
  *(void *)(v5 + 1880) = *(void *)(v7 - 8);
  *(void *)(v5 + 1888) = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Logger();
  *(void *)(v5 + 1896) = v8;
  *(void *)(v5 + 1904) = *(void *)(v8 - 8);
  *(void *)(v5 + 1912) = swift_task_alloc();
  *(void *)(v5 + 1920) = swift_task_alloc();
  *(void *)(v5 + 1928) = swift_task_alloc();
  *(void *)(v5 + 1936) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for ManagedEntityContextType();
  *(void *)(v5 + 1944) = v9;
  *(void *)(v5 + 1952) = *(void *)(v9 - 8);
  *(void *)(v5 + 1960) = swift_task_alloc();
  return _swift_task_switch(sub_100177AB4, 0, 0);
}

uint64_t sub_100177AB4()
{
  uint64_t v23 = v0;
  uint64_t v1 = *(void *)(v0 + 1960);
  uint64_t v2 = *(void *)(v0 + 1952);
  uint64_t v3 = *(void *)(v0 + 1944);
  AppDependency.wrappedValue.getter();
  uint64_t v4 = *(void **)(v0 + 1464);
  *(void *)(v0 + 1968) = [v4 modernManagedObjectContext];

  AppDependency.wrappedValue.getter();
  uint64_t v5 = *(void **)(v0 + 1704);
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, enum case for ManagedEntityContextType.html(_:), v3);
  *(void *)(v0 + 1976) = ICUnifiedNoteContext.managedObjectContext(for:)();
  unsigned int v6 = *(_DWORD *)(v0 + 2056);
  LOBYTE(v2) = v6 & 1;
  int v7 = HIWORD(v6) & 1;
  int v8 = (v6 >> 8) & 1;
  (*(void (**)(void, void))(*(void *)(v0 + 1952) + 8))(*(void *)(v0 + 1960), *(void *)(v0 + 1944));

  AppDependency.wrappedValue.getter();
  uint64_t v9 = *(void **)(v0 + 1656);
  sub_100031418(0, &qword_10069C808);
  static ICUnifiedNoteContext.$prefersViewContext.getter();
  *(unsigned char *)(v0 + 2060) = 0;
  swift_task_localValuePush();
  sub_1001775DC(v9, v8, v7, 0, v2, v22);
  swift_task_localValuePop();
  swift_release();

  *(void *)(v0 + 1984) = v22[0];
  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  swift_bridgeObjectRetain_n();
  int v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.info.getter();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v13 = *(void *)(v0 + 1936);
  uint64_t v14 = *(void *)(v0 + 1904);
  uint64_t v15 = *(void *)(v0 + 1896);
  unint64_t v16 = *(void *)(v0 + 1824);
  if (v12)
  {
    uint64_t v17 = *(void *)(v0 + 1816);
    uint64_t v21 = *(void *)(v0 + 1936);
    id v18 = (uint8_t *)swift_slowAlloc();
    v22[0] = swift_slowAlloc();
    *(_DWORD *)id v18 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 1608) = sub_10045DA1C(v17, v16, v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "VisibleFoldersQuery: performing with query string '%s'", v18, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v21, v15);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  char v19 = (void *)swift_task_alloc();
  *(void *)(v0 + 1992) = v19;
  *char v19 = v0;
  v19[1] = sub_100177F40;
  return ICCoreDataIndexer.reloadSnapshot()();
}

uint64_t sub_100177F40(uint64_t a1)
{
  *(void *)(*(void *)v1 + 2000) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100178040, 0, 0);
}

uint64_t sub_100178040()
{
  uint64_t v17 = *(void **)(v0 + 1976);
  uint64_t v1 = *(void **)(v0 + 1968);
  unsigned int v2 = *(_DWORD *)(v0 + 2056);
  uint64_t v3 = *(void *)(v0 + 1840);
  uint64_t v4 = *(void *)(v0 + 1832);
  uint64_t v5 = sub_10017976C(*(id *)(v0 + 2000));
  uint64_t v7 = v6;
  uint64_t v8 = swift_allocObject();
  *(void *)(v0 + 2008) = v8;
  *(void *)(v8 + 16) = v4;
  *(void *)(v8 + 24) = v3;
  char v16 = v2 & 1;
  *(unsigned char *)(v8 + 32) = v2 & 1;
  int v15 = (v2 >> 8) & 1;
  *(unsigned char *)(v8 + 33) = v15;
  int v14 = HIWORD(v2) & 1;
  *(unsigned char *)(v8 + 34) = BYTE2(v2) & 1;
  int v9 = HIBYTE(v2) & 1;
  *(unsigned char *)(v8 + 35) = v9;
  *(void *)(v8 + 40) = v5;
  *(void *)(v8 + 48) = v7;
  *(void *)(v8 + 56) = v1;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v10 = v1;
  swift_retain();
  sub_10001DFF4(&qword_10069C820);
  swift_asyncLet_begin();
  uint64_t v11 = swift_allocObject();
  *(void *)(v0 + 2016) = v11;
  *(void *)(v11 + 16) = v4;
  *(void *)(v11 + 24) = v3;
  *(unsigned char *)(v11 + 32) = v16;
  *(unsigned char *)(v11 + 33) = v15;
  *(unsigned char *)(v11 + 34) = v14;
  *(unsigned char *)(v11 + 35) = v9;
  *(void *)(v11 + 40) = v5;
  *(void *)(v11 + 48) = v7;
  *(void *)(v11 + 56) = v17;
  swift_retain();
  swift_retain();
  id v12 = v17;
  swift_retain();
  swift_asyncLet_begin();
  return _swift_asyncLet_get_throwing(v0 + 656, v0 + 1560, sub_100178250, v0 + 1760);
}

uint64_t sub_100178250()
{
  v1[253] = v0;
  if (v0)
  {
    return _swift_asyncLet_finish(v1 + 2, v1 + 189, sub_100178D6C, v1 + 214);
  }
  else
  {
    v1[254] = v1[195];
    swift_bridgeObjectRetain();
    return _swift_asyncLet_get_throwing(v1 + 2, v1 + 189, sub_10017831C, v1 + 184);
  }
}

uint64_t sub_10017831C()
{
  *(void *)(v1 + 2040) = v0;
  if (v0) {
    unsigned int v2 = sub_100178F24;
  }
  else {
    unsigned int v2 = sub_100178350;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100178350()
{
  uint64_t v71 = v0;
  uint64_t v1 = v0[254];
  uint64_t v2 = v0[228];
  uint64_t v3 = v0[227];
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_1001760C0(v4, v1);
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_10017AC5C(v5, v3, v2);
  v0[256] = v6;
  swift_bridgeObjectRelease();
  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  swift_bridgeObjectRetain();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v7, v8))
  {
    int v9 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)int v9 = 134349056;
    v0[226] = *(void *)(v6 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "VisibleFoldersQuery: found %{public}ld matching folder(s)", v9, 0xCu);
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  id v10 = v0 + 189;

  uint64_t v11 = *(void (**)(void, void))(v0[238] + 8);
  v11(v0[241], v0[237]);
  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  swift_bridgeObjectRetain_n();
  id v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.debug.getter();
  uint64_t v64 = v6;
  if (os_log_type_enabled(v12, v13))
  {
    os_log_type_t v57 = v13;
    uint64_t v60 = v11;
    int v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v69 = swift_slowAlloc();
    id v59 = v14;
    *(_DWORD *)int v14 = 136446210;
    int64_t v15 = *(void *)(v6 + 16);
    if (v15)
    {
      id v56 = v12;
      uint64_t v16 = v0[235];
      uint64_t v17 = v0[232];
      id v70 = &_swiftEmptyArrayStorage;
      sub_100169B0C(0, v15, 0);
      uint64_t v18 = v6 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
      uint64_t v66 = *(void *)(v17 + 72);
      char v19 = &_swiftEmptyArrayStorage;
      do
      {
        uint64_t v20 = v0[236];
        uint64_t v21 = v0[234];
        uint64_t v22 = v0[233];
        sub_10017B450(v18, v22, (uint64_t (*)(void))type metadata accessor for FolderEntity);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v20, v22, v21);
        sub_10017B4B8(v22, (uint64_t (*)(void))type metadata accessor for FolderEntity);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100169B0C(0, v19[2] + 1, 1);
          char v19 = v70;
        }
        unint64_t v24 = v19[2];
        unint64_t v23 = v19[3];
        if (v24 >= v23 >> 1)
        {
          sub_100169B0C(v23 > 1, v24 + 1, 1);
          char v19 = v70;
        }
        uint64_t v25 = v0[236];
        uint64_t v26 = v0[234];
        void v19[2] = v24 + 1;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v16 + 32))((unint64_t)v19+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(void *)(v16 + 72) * v24, v25, v26);
        id v70 = v19;
        v18 += v66;
        --v15;
      }
      while (v15);
      id v10 = v0 + 189;
      id v12 = v56;
    }
    uint64_t v67 = v0[240];
    uint64_t v30 = v0[237];
    uint64_t v31 = Array.description.getter();
    unint64_t v33 = v32;
    swift_bridgeObjectRelease();
    v0[225] = sub_10045DA1C(v31, v33, &v69);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v6 = v64;
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v12, v57, "VisibleFoldersQuery: matching folder IDs: %{public}s", v59, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    unint64_t v29 = v60;
    v60(v67, v30);
  }
  else
  {
    uint64_t v27 = v0[240];
    uint64_t v28 = v0[237];
    swift_bridgeObjectRelease_n();

    v11(v27, v28);
    unint64_t v29 = v11;
  }
  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  swift_bridgeObjectRetain_n();
  Swift::Int v34 = Logger.logObject.getter();
  os_log_type_t v35 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v34, v35))
  {
    os_log_type_t v65 = v35;
    uint64_t v68 = (uint8_t *)swift_slowAlloc();
    uint64_t v69 = swift_slowAlloc();
    *(_DWORD *)uint64_t v68 = 136642819;
    int64_t v36 = *(void *)(v6 + 16);
    uint64_t v63 = v10;
    if (v36)
    {
      uint64_t v58 = v34;
      uint64_t v61 = v29;
      uint64_t v37 = v0[232];
      uint64_t v38 = v0[231];
      id v70 = &_swiftEmptyArrayStorage;
      sub_100169AAC(0, v36, 0);
      uint64_t v39 = v6 + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80));
      uint64_t v40 = *(void *)(v37 + 72);
      uint64_t v41 = v70;
      do
      {
        uint64_t v42 = v0[233];
        sub_10017B450(v39, v42, (uint64_t (*)(void))type metadata accessor for FolderEntity);
        uint64_t v43 = (uint64_t *)(v42 + *(int *)(v38 + 24));
        uint64_t v44 = *v43;
        uint64_t v45 = v43[1];
        swift_bridgeObjectRetain();
        sub_10017B4B8(v42, (uint64_t (*)(void))type metadata accessor for FolderEntity);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100169AAC(0, v41[2] + 1, 1);
          uint64_t v41 = v70;
        }
        unint64_t v47 = v41[2];
        unint64_t v46 = v41[3];
        if (v47 >= v46 >> 1)
        {
          sub_100169AAC(v46 > 1, v47 + 1, 1);
          uint64_t v41 = v70;
        }
        v41[2] = v47 + 1;
        uint64_t v48 = (char *)&v41[2 * v47];
        *((void *)v48 + 4) = v44;
        *((void *)v48 + 5) = v45;
        v39 += v40;
        --v36;
      }
      while (v36);
      unint64_t v29 = v61;
      Swift::Int v34 = v58;
    }
    uint64_t v62 = v0[239];
    uint64_t v51 = v0[237];
    uint64_t v52 = Array.description.getter();
    unint64_t v54 = v53;
    swift_bridgeObjectRelease();
    v0[219] = sub_10045DA1C(v52, v54, &v69);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v34, v65, "VisibleFoldersQuery: matching folder titles: %{sensitive}s", v68, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v29(v62, v51);
    id v10 = v63;
  }
  else
  {
    uint64_t v49 = v0[239];
    uint64_t v50 = v0[237];
    swift_bridgeObjectRelease_n();

    v29(v49, v50);
  }
  return _swift_asyncLet_finish(v0 + 2, v10, sub_100178B9C, v0 + 162);
}

uint64_t sub_100178B9C()
{
  return _swift_task_switch(sub_100178BB8, 0, 0);
}

uint64_t sub_100178BB8()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 656, v0 + 1560, sub_100178C38, v0 + 1616);
}

uint64_t sub_100178C38()
{
  return _swift_task_switch(sub_100178C54, 0, 0);
}

uint64_t sub_100178C54()
{
  uint64_t v1 = *(void **)(v0 + 2000);
  uint64_t v2 = *(void **)(v0 + 1984);
  uint64_t v3 = *(void **)(v0 + 1976);

  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v5 = *(void *)(v0 + 2048);
  return v4(v5);
}

uint64_t sub_100178D6C()
{
  return _swift_task_switch(sub_100178D88, 0, 0);
}

uint64_t sub_100178D88()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 656, v0 + 1560, sub_100178E08, v0 + 1568);
}

uint64_t sub_100178E08()
{
  return _swift_task_switch(sub_100178E24, 0, 0);
}

uint64_t sub_100178E24()
{
  uint64_t v1 = *(void **)(v0 + 2000);
  uint64_t v2 = *(void **)(v0 + 1984);
  uint64_t v3 = *(void **)(v0 + 1976);

  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100178F24()
{
  swift_bridgeObjectRelease();
  return _swift_asyncLet_finish(v0 + 16, v0 + 1512, sub_100178FA4, v0 + 1664);
}

uint64_t sub_100178FA4()
{
  return _swift_task_switch(sub_100178FC0, 0, 0);
}

uint64_t sub_100178FC0()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 656, v0 + 1560, sub_100179040, v0 + 1520);
}

uint64_t sub_100179040()
{
  return _swift_task_switch(sub_10017905C, 0, 0);
}

uint64_t sub_10017905C()
{
  uint64_t v1 = *(void **)(v0 + 2000);
  uint64_t v2 = *(void **)(v0 + 1984);
  uint64_t v3 = *(void **)(v0 + 1976);

  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10017915C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 16) = a1;
  id v10 = (void *)swift_task_alloc();
  *(void *)(v7 + 24) = v10;
  *id v10 = v7;
  v10[1] = sub_100175D64;
  return sub_100179D68(a6, a7);
}

uint64_t sub_1001791FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 16) = a1;
  uint64_t v7 = *(void *)v3;
  uint64_t v8 = *(void *)(v3 + 8);
  int v9 = *(unsigned __int8 *)(v3 + 16);
  int v10 = *(unsigned __int8 *)(v3 + 17);
  int v11 = *(unsigned __int8 *)(v3 + 18);
  int v12 = *(unsigned __int8 *)(v3 + 19);
  os_log_type_t v13 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v13;
  if (v10) {
    int v14 = 256;
  }
  else {
    int v14 = 0;
  }
  int v15 = v14 | v9;
  if (v11) {
    int v16 = 0x10000;
  }
  else {
    int v16 = 0;
  }
  if (v12) {
    int v17 = 0x1000000;
  }
  else {
    int v17 = 0;
  }
  *os_log_type_t v13 = v4;
  v13[1] = sub_10016997C;
  return VisibleFoldersQuery.entities(matching:)(a2, a3, v7, v8, v15 | v16 | v17);
}

uint64_t _s11MobileNotes20VisibleAccountsQueryVACycfC_0()
{
  sub_10002F214((uint64_t *)&unk_10069B130);
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t v0 = AppDependency.__allocating_init(key:manager:)();
  sub_10002F214((uint64_t *)&unk_10069CE60);
  AnyHashable.init<A>(_:)();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  return v0;
}

uint64_t VisibleAccountsQuery.init(requireFolderCreationSupport:)()
{
  sub_10002F214((uint64_t *)&unk_10069B130);
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t v0 = AppDependency.__allocating_init(key:manager:)();
  sub_10002F214((uint64_t *)&unk_10069CE60);
  AnyHashable.init<A>(_:)();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  return v0;
}

uint64_t sub_10017952C()
{
  sub_10002F214((uint64_t *)&unk_10069B130);
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t v0 = AppDependency.__allocating_init(key:manager:)();
  sub_10002F214((uint64_t *)&unk_10069CE60);
  AnyHashable.init<A>(_:)();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  return v0;
}

uint64_t sub_10017964C()
{
  sub_10002F214((uint64_t *)&unk_10069B130);
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t v0 = AppDependency.__allocating_init(key:manager:)();
  sub_10002F214((uint64_t *)&unk_10069CE60);
  AnyHashable.init<A>(_:)();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  return v0;
}

void *sub_10017976C(id a1)
{
  if (((unint64_t)&_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
  {
    if (_CocoaArrayWrapper.endIndex.getter())
    {
      sub_100157AB0((unint64_t)&_swiftEmptyArrayStorage);
      uint64_t v2 = v10;
    }
    else
    {
      uint64_t v2 = &_swiftEmptySetSingleton;
    }
    int v15 = v2;
    if (((unint64_t)&_swiftEmptyArrayStorage & 0xC000000000000000) != 0
      && _CocoaArrayWrapper.endIndex.getter())
    {
      sub_100157AB0((unint64_t)&_swiftEmptyArrayStorage);
      uint64_t v3 = v11;
    }
    else
    {
      uint64_t v3 = &_swiftEmptySetSingleton;
    }
  }
  else
  {
    uint64_t v2 = &_swiftEmptySetSingleton;
    int v15 = &_swiftEmptySetSingleton;
    uint64_t v3 = &_swiftEmptySetSingleton;
  }
  int v14 = v3;
  id v4 = [a1 itemIdentifiers];
  uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = v5 + 32;
    do
    {
      sub_100032E28(v7, (uint64_t)v13);
      sub_100031418(0, (unint64_t *)&qword_10069E810);
      if (swift_dynamicCast())
      {
        id v8 = v12;
        if (objc_msgSend(v12, "ic_isModernFolderType")
          || objc_msgSend(v8, "ic_isLegacyFolderType"))
        {
          sub_100393BB0(&v12, v8);
        }
        else
        {
        }
      }
      v7 += 32;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    return v15;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_10017995C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v5 = *(void *)(v1 + 56);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_10017B61C;
  v6[2] = a1;
  uint64_t v7 = (void *)swift_task_alloc();
  v6[3] = v7;
  void *v7 = v6;
  v7[1] = sub_100175D64;
  return sub_100179D68(v4, v5);
}

uint64_t sub_100179A4C(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 48);
  uint64_t v4 = *(void *)(v1 + 56);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_100161724;
  v6[2] = a1;
  uint64_t v7 = (void *)swift_task_alloc();
  v6[3] = v7;
  void *v7 = v6;
  v7[1] = sub_100175F50;
  return sub_100179D68(v5, v4);
}

uint64_t sub_100179B38(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v5 = *(void *)(v1 + 56);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_10017B61C;
  v6[2] = a1;
  uint64_t v7 = (void *)swift_task_alloc();
  v6[3] = v7;
  void *v7 = v6;
  v7[1] = sub_100175D64;
  return sub_100179D68(v4, v5);
}

uint64_t sub_100179C28()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100179C80(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 48);
  uint64_t v4 = *(void *)(v1 + 56);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_10017B61C;
  v6[2] = a1;
  uint64_t v7 = (void *)swift_task_alloc();
  v6[3] = v7;
  void *v7 = v6;
  v7[1] = sub_100175D64;
  return sub_100179D68(v5, v4);
}

uint64_t sub_100179D68(uint64_t a1, uint64_t a2)
{
  v2[9] = a1;
  v2[10] = a2;
  uint64_t v3 = type metadata accessor for FolderEntity();
  v2[11] = v3;
  v2[12] = *(void *)(v3 - 8);
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  uint8_t v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  return _swift_task_switch(sub_100179E5C, 0, 0);
}

uint64_t sub_100179E5C()
{
  uint64_t v1 = v0[9];
  if ((v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_100031418(0, (unint64_t *)&qword_10069E810);
    sub_10002C8EC((unint64_t *)&qword_10069FFE0, (unint64_t *)&qword_10069E810);
    Set.Iterator.init(_cocoa:)();
    uint64_t v5 = v0[2];
    uint64_t v6 = v0[3];
    uint64_t v8 = v0[4];
    uint64_t v7 = v0[5];
    unint64_t v9 = v0[6];
  }
  else
  {
    uint64_t v10 = -1 << *(unsigned char *)(v1 + 32);
    uint64_t v6 = v1 + 56;
    uint64_t v8 = ~v10;
    uint64_t v11 = -v10;
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v9 = v12 & *(void *)(v1 + 56);
    uint64_t v5 = swift_bridgeObjectRetain();
    uint64_t v7 = 0;
  }
  v0[18] = v5;
  v0[19] = v6;
  v0[22] = v7;
  v0[23] = v9;
  v0[20] = v8;
  v0[21] = &_swiftEmptySetSingleton;
  if (v5 < 0)
  {
    uint64_t v17 = __CocoaSet.Iterator.next()();
    if (!v17) {
      goto LABEL_33;
    }
    v0[8] = v17;
    sub_100031418(0, (unint64_t *)&qword_10069E810);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v16 = (id)v0[7];
    swift_unknownObjectRelease();
    uint64_t v15 = v7;
    uint64_t v13 = v9;
    goto LABEL_13;
  }
  if (v9)
  {
    uint64_t v13 = (v9 - 1) & v9;
    unint64_t v14 = __clz(__rbit64(v9)) | (v7 << 6);
    uint64_t v15 = v7;
LABEL_10:
    id v16 = *(id *)(*(void *)(v5 + 48) + 8 * v14);
LABEL_13:
    v0[25] = v15;
    v0[26] = v13;
    v0[24] = v16;
    if (v16)
    {
      uint64_t v18 = (void *)v0[10];
      uint64_t v19 = swift_allocObject();
      v0[27] = v19;
      *(void *)(v19 + 16) = v18;
      *(void *)(v19 + 24) = v16;
      id v20 = v16;
      id v21 = v18;
      id v22 = v20;
      id v23 = v21;
      id v24 = v22;
      id v25 = v23;
      uint64_t v26 = (void *)swift_task_alloc();
      v0[28] = v26;
      *uint64_t v26 = v0;
      v26[1] = sub_10017A23C;
      uint64_t v5 = v0[15];
      uint64_t v4 = v0[11];
      uint64_t v2 = sub_10016F044;
      uint64_t v3 = v19;
      return NSManagedObjectContext.perform<A>(_:)(v5, v2, v3, v4);
    }
    goto LABEL_33;
  }
  int64_t v27 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    return NSManagedObjectContext.perform<A>(_:)(v5, v2, v3, v4);
  }
  int64_t v28 = (unint64_t)(v8 + 64) >> 6;
  if (v27 < v28)
  {
    unint64_t v29 = *(void *)(v6 + 8 * v27);
    uint64_t v15 = v7 + 1;
    if (!v29)
    {
      uint64_t v15 = v7 + 2;
      if (v7 + 2 >= v28) {
        goto LABEL_33;
      }
      unint64_t v29 = *(void *)(v6 + 8 * v15);
      if (!v29)
      {
        uint64_t v15 = v7 + 3;
        if (v7 + 3 >= v28) {
          goto LABEL_33;
        }
        unint64_t v29 = *(void *)(v6 + 8 * v15);
        if (!v29)
        {
          uint64_t v15 = v7 + 4;
          if (v7 + 4 >= v28) {
            goto LABEL_33;
          }
          unint64_t v29 = *(void *)(v6 + 8 * v15);
          if (!v29)
          {
            uint64_t v15 = v7 + 5;
            if (v7 + 5 >= v28) {
              goto LABEL_33;
            }
            unint64_t v29 = *(void *)(v6 + 8 * v15);
            if (!v29)
            {
              uint64_t v30 = v7 + 6;
              while (v28 != v30)
              {
                unint64_t v29 = *(void *)(v6 + 8 * v30++);
                if (v29)
                {
                  uint64_t v15 = v30 - 1;
                  goto LABEL_20;
                }
              }
              goto LABEL_33;
            }
          }
        }
      }
    }
LABEL_20:
    uint64_t v13 = (v29 - 1) & v29;
    unint64_t v14 = __clz(__rbit64(v29)) + (v15 << 6);
    goto LABEL_10;
  }
LABEL_33:
  sub_10017B518();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = (uint64_t (*)(void *))v0[1];
  return v31(&_swiftEmptySetSingleton);
}

uint64_t sub_10017A23C()
{
  *(void *)(*(void *)v1 + 232) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10017AA68;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_10017A358;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10017A358()
{
  uint64_t v1 = *(void **)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 136);
  uint64_t v5 = *(void *)(v0 + 120);
  uint64_t v7 = *(void **)(v0 + 80);
  uint64_t v6 = *(int **)(v0 + 88);

  sub_10017B520(v5, v3, (uint64_t (*)(void))type metadata accessor for FolderEntity);
  sub_10017B520(v3, v4, (uint64_t (*)(void))type metadata accessor for FolderEntity);
  Hasher.init(_seed:)();
  type metadata accessor for FolderID();
  sub_1000122EC(&qword_10069C8B8, (void (*)(uint64_t))&type metadata accessor for FolderID);
  swift_bridgeObjectRetain();
  dispatch thunk of Hashable.hash(into:)();
  type metadata accessor for URL();
  sub_1000122EC((unint64_t *)&unk_10069BA10, (void (*)(uint64_t))&type metadata accessor for URL);
  dispatch thunk of Hashable.hash(into:)();
  uint64_t v8 = (void *)(v4 + v6[6]);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  unint64_t v9 = (void *)(v4 + v6[7]);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  uint64_t v61 = v6[8];
  Hasher._combine(_:)(*(unsigned char *)(v4 + v61));
  uint64_t v62 = v4;
  uint64_t v60 = v6[9];
  Hasher._combine(_:)(*(unsigned char *)(v4 + v60));
  Swift::Int v10 = Hasher._finalize()();
  uint64_t v11 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v12 = v10 & ~v11;
  if ((*(void *)(v2 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v13 = ~v11;
    uint64_t v14 = *(void *)(v0 + 168);
    uint64_t v15 = *(void *)(*(void *)(v0 + 96) + 72);
    do
    {
      sub_10017B450(*(void *)(v14 + 48) + v12 * v15, *(void *)(v0 + 104), (uint64_t (*)(void))type metadata accessor for FolderEntity);
      char v16 = static FolderID.== infix(_:_:)();
      uint64_t v17 = *(void *)(v0 + 104);
      if ((v16 & 1) == 0) {
        goto LABEL_3;
      }
      char v18 = static URL.== infix(_:_:)();
      uint64_t v17 = *(void *)(v0 + 104);
      if ((v18 & 1) == 0) {
        goto LABEL_3;
      }
      uint64_t v19 = *(int **)(v0 + 88);
      id v20 = (void *)(v17 + v19[6]);
      if (*v20 != *v8 || v20[1] != v8[1])
      {
        char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
        uint64_t v17 = *(void *)(v0 + 104);
        if ((v22 & 1) == 0) {
          goto LABEL_3;
        }
        uint64_t v19 = *(int **)(v0 + 88);
      }
      id v23 = (void *)(v17 + v19[7]);
      if (*v23 != *v9 || v23[1] != v9[1])
      {
        char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
        uint64_t v17 = *(void *)(v0 + 104);
        if ((v25 & 1) == 0) {
          goto LABEL_3;
        }
        uint64_t v19 = *(int **)(v0 + 88);
      }
      if (*(unsigned __int8 *)(v17 + v19[8]) == *(unsigned __int8 *)(v62 + v61)
        && *(unsigned __int8 *)(v17 + v19[9]) == *(unsigned __int8 *)(v62 + v60))
      {
        uint64_t v26 = *(void *)(v0 + 136);
        sub_10017B4B8(v17, (uint64_t (*)(void))type metadata accessor for FolderEntity);
        swift_bridgeObjectRelease();
        sub_10017B4B8(v26, (uint64_t (*)(void))type metadata accessor for FolderEntity);
        uint64_t v27 = *(void *)(v0 + 168);
        goto LABEL_22;
      }
LABEL_3:
      sub_10017B4B8(v17, (uint64_t (*)(void))type metadata accessor for FolderEntity);
      unint64_t v12 = (v12 + 1) & v13;
    }
    while (((*(void *)(v2 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
  }
  uint64_t v28 = *(void *)(v0 + 168);
  uint64_t v29 = *(void *)(v0 + 136);
  uint64_t v30 = *(void *)(v0 + 112);
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_10017B450(v29, v30, (uint64_t (*)(void))type metadata accessor for FolderEntity);
  sub_100397928(v30, v12, isUniquelyReferenced_nonNull_native);
  uint64_t v27 = v28;
  swift_bridgeObjectRelease();
  sub_10017B4B8(v29, (uint64_t (*)(void))type metadata accessor for FolderEntity);
LABEL_22:

  uint64_t v36 = *(void *)(v0 + 200);
  unint64_t v37 = *(void *)(v0 + 208);
  *(void *)(v0 + 176) = v36;
  *(void *)(v0 + 184) = v37;
  *(void *)(v0 + 168) = v27;
  uint64_t v38 = *(void *)(v0 + 144);
  if (v38 < 0)
  {
    uint64_t v43 = __CocoaSet.Iterator.next()();
    if (!v43) {
      goto LABEL_48;
    }
    *(void *)(v0 + 64) = v43;
    sub_100031418(0, (unint64_t *)&qword_10069E810);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v42 = *(id *)(v0 + 56);
    swift_unknownObjectRelease();
    uint64_t v41 = v36;
    uint64_t v39 = v37;
    goto LABEL_28;
  }
  if (v37)
  {
    uint64_t v39 = (v37 - 1) & v37;
    unint64_t v40 = __clz(__rbit64(v37)) | (v36 << 6);
    uint64_t v41 = v36;
LABEL_25:
    id v42 = *(id *)(*(void *)(v38 + 48) + 8 * v40);
LABEL_28:
    *(void *)(v0 + 200) = v41;
    *(void *)(v0 + 208) = v39;
    *(void *)(v0 + 192) = v42;
    if (v42)
    {
      uint64_t v44 = *(void **)(v0 + 80);
      uint64_t v45 = swift_allocObject();
      *(void *)(v0 + 216) = v45;
      *(void *)(v45 + 16) = v44;
      *(void *)(v45 + 24) = v42;
      id v46 = v42;
      id v47 = v44;
      id v48 = v46;
      id v49 = v47;
      id v50 = v48;
      id v51 = v49;
      uint64_t v52 = (void *)swift_task_alloc();
      *(void *)(v0 + 224) = v52;
      *uint64_t v52 = v0;
      v52[1] = sub_10017A23C;
      uint64_t v32 = *(void *)(v0 + 120);
      uint64_t v35 = *(void *)(v0 + 88);
      uint64_t v33 = sub_10016F044;
      uint64_t v34 = v45;
      return NSManagedObjectContext.perform<A>(_:)(v32, v33, v34, v35);
    }
    goto LABEL_48;
  }
  int64_t v53 = v36 + 1;
  if (__OFADD__(v36, 1))
  {
    __break(1u);
    return NSManagedObjectContext.perform<A>(_:)(v32, v33, v34, v35);
  }
  int64_t v54 = (unint64_t)(*(void *)(v0 + 160) + 64) >> 6;
  if (v53 < v54)
  {
    uint64_t v55 = *(void *)(v0 + 152);
    unint64_t v56 = *(void *)(v55 + 8 * v53);
    uint64_t v41 = v36 + 1;
    if (!v56)
    {
      uint64_t v41 = v36 + 2;
      if (v36 + 2 >= v54) {
        goto LABEL_48;
      }
      unint64_t v56 = *(void *)(v55 + 8 * v41);
      if (!v56)
      {
        uint64_t v41 = v36 + 3;
        if (v36 + 3 >= v54) {
          goto LABEL_48;
        }
        unint64_t v56 = *(void *)(v55 + 8 * v41);
        if (!v56)
        {
          uint64_t v41 = v36 + 4;
          if (v36 + 4 >= v54) {
            goto LABEL_48;
          }
          unint64_t v56 = *(void *)(v55 + 8 * v41);
          if (!v56)
          {
            uint64_t v41 = v36 + 5;
            if (v36 + 5 >= v54) {
              goto LABEL_48;
            }
            unint64_t v56 = *(void *)(v55 + 8 * v41);
            if (!v56)
            {
              uint64_t v57 = v36 + 6;
              while (v54 != v57)
              {
                unint64_t v56 = *(void *)(v55 + 8 * v57++);
                if (v56)
                {
                  uint64_t v41 = v57 - 1;
                  goto LABEL_35;
                }
              }
              goto LABEL_48;
            }
          }
        }
      }
    }
LABEL_35:
    uint64_t v39 = (v56 - 1) & v56;
    unint64_t v40 = __clz(__rbit64(v56)) + (v41 << 6);
    goto LABEL_25;
  }
LABEL_48:
  sub_10017B518();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v58 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v58(v27);
}

uint64_t sub_10017AA68()
{
  uint64_t v1 = (void *)v0[24];
  uint64_t v2 = (void *)v0[10];

  swift_release();
  swift_bridgeObjectRelease();
  sub_10017B518();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

unint64_t sub_10017AB7C(unint64_t result, uint64_t a2)
{
  unint64_t v2 = result;
  uint64_t v9 = a2;
  if (!(result >> 62))
  {
    uint64_t v3 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3) {
      goto LABEL_3;
    }
    return v9;
  }
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v3 = result;
  if (!result) {
    return v9;
  }
LABEL_3:
  if (v3 >= 1)
  {
    if ((v2 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        uint64_t v5 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        sub_1003940BC(&v8, v5);
      }
    }
    else
    {
      uint64_t v6 = (void **)(v2 + 32);
      do
      {
        uint64_t v7 = *v6++;
        sub_1003940BC(&v8, v7);

        --v3;
      }
      while (v3);
    }
    return v9;
  }
  __break(1u);
  return result;
}

uint64_t sub_10017AC5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v41 = a2;
  uint64_t v42 = a3;
  uint64_t v40 = type metadata accessor for FolderEntity();
  uint64_t v4 = *(void *)(v40 - 8);
  uint64_t v5 = __chkstk_darwin(v40);
  uint64_t v36 = (uint64_t)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v34 - v8;
  uint64_t result = __chkstk_darwin(v7);
  unint64_t v12 = (char *)&v34 - v11;
  int64_t v13 = 0;
  uint64_t v14 = a1;
  uint64_t v15 = *(void *)(a1 + 56);
  uint64_t v38 = a1 + 56;
  uint64_t v16 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v37 = &_swiftEmptyArrayStorage;
  id v47 = &_swiftEmptyArrayStorage;
  unint64_t v18 = v17 & v15;
  int64_t v39 = (unint64_t)(v16 + 63) >> 6;
  if ((v17 & v15) == 0) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v19 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  for (unint64_t i = v19 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v26)) + (v13 << 6))
  {
    uint64_t v21 = *(void *)(v4 + 72);
    sub_10017B450(*(void *)(v14 + 48) + v21 * i, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FolderEntity);
    sub_10017B520((uint64_t)v9, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FolderEntity);
    char v22 = &v12[*(int *)(v40 + 24)];
    uint64_t v24 = *(void *)v22;
    uint64_t v23 = *((void *)v22 + 1);
    uint64_t v45 = v24;
    uint64_t v46 = v23;
    uint64_t v43 = v41;
    uint64_t v44 = v42;
    sub_10017B588();
    if (StringProtocol.localizedStandardContains<A>(_:)())
    {
      sub_10017B520((uint64_t)v12, v36, (uint64_t (*)(void))type metadata accessor for FolderEntity);
      uint64_t v28 = v37;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_100169AEC(0, v28[2] + 1, 1);
      }
      uint64_t v29 = v47;
      unint64_t v31 = v47[2];
      unint64_t v30 = v47[3];
      uint64_t v32 = (void *)(v31 + 1);
      if (v31 >= v30 >> 1)
      {
        unint64_t v37 = (void *)(v31 + 1);
        unint64_t v35 = v31;
        sub_100169AEC(v30 > 1, v31 + 1, 1);
        uint64_t v32 = v37;
        unint64_t v31 = v35;
        uint64_t v29 = v47;
      }
      v29[2] = v32;
      uint64_t v33 = *(unsigned __int8 *)(v4 + 80);
      unint64_t v37 = v29;
      uint64_t result = sub_10017B520(v36, (uint64_t)v29 + ((v33 + 32) & ~v33) + v31 * v21, (uint64_t (*)(void))type metadata accessor for FolderEntity);
      if (v18) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t result = sub_10017B4B8((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FolderEntity);
      if (v18) {
        goto LABEL_4;
      }
    }
LABEL_7:
    int64_t v25 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v25 >= v39) {
      goto LABEL_29;
    }
    unint64_t v26 = *(void *)(v38 + 8 * v25);
    ++v13;
    if (!v26)
    {
      int64_t v13 = v25 + 1;
      if (v25 + 1 >= v39) {
        goto LABEL_29;
      }
      unint64_t v26 = *(void *)(v38 + 8 * v13);
      if (!v26)
      {
        int64_t v13 = v25 + 2;
        if (v25 + 2 >= v39) {
          goto LABEL_29;
        }
        unint64_t v26 = *(void *)(v38 + 8 * v13);
        if (!v26)
        {
          int64_t v13 = v25 + 3;
          if (v25 + 3 >= v39) {
            goto LABEL_29;
          }
          unint64_t v26 = *(void *)(v38 + 8 * v13);
          if (!v26) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v18 = (v26 - 1) & v26;
  }
  int64_t v27 = v25 + 4;
  if (v27 >= v39)
  {
LABEL_29:
    swift_release();
    return (uint64_t)v37;
  }
  unint64_t v26 = *(void *)(v38 + 8 * v27);
  if (v26)
  {
    int64_t v13 = v27;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v13 >= v39) {
      goto LABEL_29;
    }
    unint64_t v26 = *(void *)(v38 + 8 * v13);
    ++v27;
    if (v26) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

unint64_t sub_10017B040()
{
  unint64_t result = qword_10069C860;
  if (!qword_10069C860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069C860);
  }
  return result;
}

unint64_t sub_10017B098()
{
  unint64_t result = qword_10069C868[0];
  if (!qword_10069C868[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10069C868);
  }
  return result;
}

uint64_t sub_10017B0EC()
{
  return sub_1000122EC((unint64_t *)&qword_1006A3B50, (void (*)(uint64_t))type metadata accessor for FolderEntity);
}

unint64_t sub_10017B138()
{
  unint64_t result = qword_10069C880;
  if (!qword_10069C880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069C880);
  }
  return result;
}

uint64_t sub_10017B18C()
{
  return sub_1000122EC((unint64_t *)&unk_1006A2DC0, (void (*)(uint64_t))type metadata accessor for FolderEntity);
}

unint64_t sub_10017B1D8()
{
  unint64_t result = qword_10069C888;
  if (!qword_10069C888)
  {
    sub_10001DFF4(qword_10069C890);
    sub_1000122EC((unint64_t *)&unk_1006A2DC0, (void (*)(uint64_t))type metadata accessor for FolderEntity);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069C888);
  }
  return result;
}

uint64_t sub_10017B284(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for VisibleFoldersQuery(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  *(unsigned char *)(a1 + 19) = *(unsigned char *)(a2 + 19);
  return a1;
}

__n128 initializeWithTake for VisibleFoldersQuery(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u32[0] = a2[1].n128_u32[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for VisibleFoldersQuery(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  *(unsigned char *)(a1 + 19) = *(unsigned char *)(a2 + 19);
  return a1;
}

uint64_t getEnumTagSinglePayload for VisibleFoldersQuery(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 20)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VisibleFoldersQuery(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_DWORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 20) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 20) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisibleFoldersQuery()
{
  return &type metadata for VisibleFoldersQuery;
}

uint64_t sub_10017B450(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10017B4B8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10017B518()
{
  return swift_release();
}

uint64_t sub_10017B520(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_10017B588()
{
  unint64_t result = qword_10069F1F0;
  if (!qword_10069F1F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069F1F0);
  }
  return result;
}

uint64_t sub_10017B5DC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t type metadata accessor for FolderComposerFilterHeader()
{
  return self;
}

void *DeleteChecklistItemsIntent.persistentIdentifier.unsafeMutableAddressor()
{
  return &static DeleteChecklistItemsIntent.persistentIdentifier;
}

unint64_t static DeleteChecklistItemsIntent.persistentIdentifier.getter()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_10017B94C()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  sub_100032974(v6, static DeleteChecklistItemsIntent.title);
  sub_10003293C(v6, (uint64_t)static DeleteChecklistItemsIntent.title);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t DeleteChecklistItemsIntent.title.unsafeMutableAddressor()
{
  if (qword_10069AC58 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for LocalizedStringResource();

  return sub_10003293C(v0, (uint64_t)static DeleteChecklistItemsIntent.title);
}

uint64_t static DeleteChecklistItemsIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_10069AC58 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_10003293C(v2, (uint64_t)static DeleteChecklistItemsIntent.title);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t static DeleteChecklistItemsIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for Locale();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = type metadata accessor for LocalizedStringResource();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v4, 1, 1, v11);
  IntentDescription.init(_:categoryName:searchKeywords:)();
  uint64_t v13 = type metadata accessor for IntentDescription();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 0, 1, v13);
}

uint64_t static DeleteChecklistItemsIntent.parameterSummary.getter()
{
  uint64_t v0 = sub_10002F214(&qword_10069C908);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10002F214(&qword_10069C910);
  __chkstk_darwin(v1);
  sub_10017C0D4();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._countAndFlagsBits = 0x74206574656C6544;
  v2._object = (void *)0xEB00000000206568;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_10002F214(&qword_10069C920);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._object = (void *)0x800000010054CE60;
  v3._countAndFlagsBits = 0xD000000000000010;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

unint64_t sub_10017C0D4()
{
  unint64_t result = qword_10069C918;
  if (!qword_10069C918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069C918);
  }
  return result;
}

uint64_t DeleteChecklistItemsIntent.$entities.getter()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_10017C14C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t DeleteChecklistItemsIntent.entities.getter()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t DeleteChecklistItemsIntent.entities.setter()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t (*DeleteChecklistItemsIntent.entities.modify(void *a1))()
{
  Swift::String v2 = malloc(0x28uLL);
  *a1 = v2;
  void v2[4] = IntentParameter.wrappedValue.modify();
  return sub_10015ACE0;
}

uint64_t sub_10017C240()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t sub_10017C27C(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  uint64_t v6 = v1[2];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_100161724;
  return DeleteChecklistItemsIntent.perform()(a1, v4, v5, v6);
}

uint64_t DeleteChecklistItemsIntent.perform()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[8] = a3;
  v4[9] = a4;
  void v4[6] = a1;
  v4[7] = a2;
  uint64_t v5 = *(void *)(type metadata accessor for ChecklistItemEntity() - 8);
  v4[10] = v5;
  v4[11] = *(void *)(v5 + 64);
  v4[12] = swift_task_alloc();
  v4[13] = swift_task_alloc();
  return _swift_task_switch(sub_10017C408, 0, 0);
}

uint64_t sub_10017C408()
{
  IntentParameter.wrappedValue.getter();
  uint64_t v1 = *(void *)(v0 + 16);
  *(void *)(v0 + 112) = v1;
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 120) = v2;
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 80);
    uint64_t v25 = *(void *)(v0 + 72);
    LODWORD(v4) = *(_DWORD *)(v3 + 80);
    *(_DWORD *)(v0 + 232) = v4;
    uint64_t v4 = v4;
    uint64_t v5 = (v4 + 16) & ~v4;
    uint64_t v6 = *(void *)(v0 + 96);
    unint64_t v7 = (*(void *)(v0 + 88) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(void *)(v0 + 128) = *(void *)(v3 + 72);
    *(void *)(v0 + 136) = 0;
    uint64_t v8 = *(void *)(v0 + 104);
    uint64_t v10 = *(void *)(v0 + 56);
    uint64_t v9 = *(void *)(v0 + 64);
    sub_10017E164(v1 + ((v4 + 32) & ~v4), v8);
    AppDependency.wrappedValue.getter();
    uint64_t v11 = *(void **)(v0 + 32);
    *(void *)(v0 + 144) = [v11 modernManagedObjectContext];

    sub_10017E164(v8, v6);
    uint64_t v12 = swift_allocObject();
    *(void *)(v0 + 152) = v12;
    sub_10017E36C(v6, v12 + v5);
    uint64_t v13 = (void *)(v12 + v7);
    *uint64_t v13 = v10;
    v13[1] = v9;
    void v13[2] = v25;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v14 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v14;
    uint64_t v15 = (char *)sub_10002F214((uint64_t *)&unk_10069C930);
    *uint64_t v14 = v0;
    v14[1] = sub_10017C6F0;
    uint64_t v16 = sub_10017E3D0;
    uint64_t v17 = (void *)(v0 + 24);
    unint64_t v18 = (void *)v12;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = *(void *)(v0 + 64);
    uint64_t v19 = *(void *)(v0 + 72);
    uint64_t v21 = *(void *)(v0 + 56);
    AppDependency.wrappedValue.getter();
    char v22 = *(void **)(v0 + 40);
    *(void *)(v0 + 200) = [v22 modernManagedObjectContext];

    uint64_t v23 = (void *)swift_allocObject();
    *(void *)(v0 + 208) = v23;
    v23[2] = v21;
    v23[3] = v20;
    void v23[4] = v19;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v17 = (void *)swift_task_alloc();
    *(void *)(v0 + 216) = v17;
    void *v17 = v0;
    v17[1] = sub_10017D064;
    uint64_t v15 = (char *)&type metadata for () + 8;
    uint64_t v16 = sub_10017E538;
    unint64_t v18 = v23;
  }
  return NSManagedObjectContext.perform<A>(_:)(v17, v16, v18, v15);
}

uint64_t sub_10017C6F0()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 144);
  swift_task_dealloc();
  swift_release();

  return _swift_task_switch(sub_10017C820, 0, 0);
}

uint64_t sub_10017C820()
{
  uint64_t v1 = *(void **)(v0 + 24);
  *(void *)(v0 + 168) = v1;
  if (!v1) {
    goto LABEL_6;
  }
  self;
  uint64_t v2 = (void *)swift_dynamicCastObjCClass();
  if (!v2)
  {

LABEL_6:
    sub_10017E494(*(void *)(v0 + 104));
    goto LABEL_8;
  }
  uint64_t v3 = v2;
  id v4 = [v2 managedObjectContext];
  *(void *)(v0 + 176) = v4;
  if (v4)
  {
    uint64_t v5 = *(void *)(v0 + 96);
    unint64_t v6 = (*(unsigned __int8 *)(v0 + 232) + 24) & ~(unint64_t)*(unsigned __int8 *)(v0 + 232);
    sub_10017E164(*(void *)(v0 + 104), v5);
    uint64_t v7 = swift_allocObject();
    *(void *)(v0 + 184) = v7;
    *(void *)(v7 + 16) = v3;
    sub_10017E36C(v5, v7 + v6);
    id v8 = v1;
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 192) = v9;
    uint64_t v10 = (char *)sub_10002F214((uint64_t *)&unk_1006A2BA0);
    *uint64_t v9 = v0;
    v9[1] = sub_10017CC40;
    uint64_t v11 = sub_10017E6DC;
    uint64_t v12 = (void *)(v0 + 236);
    uint64_t v13 = (void *)v7;
    goto LABEL_11;
  }
  sub_10017E494(*(void *)(v0 + 104));

LABEL_8:
  uint64_t v14 = *(void *)(v0 + 136) + 1;
  if (v14 == *(void *)(v0 + 120))
  {
    swift_bridgeObjectRelease();
    uint64_t v16 = *(void *)(v0 + 64);
    uint64_t v15 = *(void *)(v0 + 72);
    uint64_t v17 = *(void *)(v0 + 56);
    AppDependency.wrappedValue.getter();
    unint64_t v18 = *(void **)(v0 + 40);
    *(void *)(v0 + 200) = [v18 modernManagedObjectContext];

    uint64_t v19 = (void *)swift_allocObject();
    *(void *)(v0 + 208) = v19;
    void v19[2] = v17;
    v19[3] = v16;
    void v19[4] = v15;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 216) = v12;
    void *v12 = v0;
    v12[1] = sub_10017D064;
    uint64_t v10 = (char *)&type metadata for () + 8;
    uint64_t v11 = sub_10017E538;
    uint64_t v13 = v19;
  }
  else
  {
    *(void *)(v0 + 136) = v14;
    uint64_t v20 = *(unsigned __int8 *)(v0 + 232);
    uint64_t v21 = *(void *)(v0 + 104);
    uint64_t v22 = *(void *)(v0 + 96);
    uint64_t v23 = *(void *)(v0 + 64);
    uint64_t v24 = *(void *)(v0 + 56);
    uint64_t v25 = (v20 + 16) & ~v20;
    unint64_t v26 = (*(void *)(v0 + 88) + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v32 = *(void *)(v0 + 72);
    sub_10017E164(*(void *)(v0 + 112) + ((v20 + 32) & ~v20) + *(void *)(v0 + 128) * v14, v21);
    AppDependency.wrappedValue.getter();
    int64_t v27 = *(void **)(v0 + 32);
    *(void *)(v0 + 144) = [v27 modernManagedObjectContext];

    sub_10017E164(v21, v22);
    uint64_t v28 = swift_allocObject();
    *(void *)(v0 + 152) = v28;
    sub_10017E36C(v22, v28 + v25);
    uint64_t v29 = (void *)(v28 + v26);
    *uint64_t v29 = v24;
    v29[1] = v23;
    v29[2] = v32;
    swift_retain();
    swift_retain();
    swift_retain();
    unint64_t v30 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v30;
    uint64_t v10 = (char *)sub_10002F214((uint64_t *)&unk_10069C930);
    *unint64_t v30 = v0;
    v30[1] = sub_10017C6F0;
    uint64_t v11 = sub_10017E3D0;
    uint64_t v12 = (void *)(v0 + 24);
    uint64_t v13 = (void *)v28;
  }
LABEL_11:
  return NSManagedObjectContext.perform<A>(_:)(v12, v11, v13, v10);
}

uint64_t sub_10017CC40()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 176);
  swift_task_dealloc();
  swift_release();

  return _swift_task_switch(sub_10017CD70, 0, 0);
}

uint64_t sub_10017CD70()
{
  uint64_t v1 = *(void *)(v0 + 104);

  sub_10017E494(v1);
  uint64_t v2 = *(void *)(v0 + 136) + 1;
  if (v2 == *(void *)(v0 + 120))
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = *(void *)(v0 + 64);
    uint64_t v3 = *(void *)(v0 + 72);
    uint64_t v5 = *(void *)(v0 + 56);
    AppDependency.wrappedValue.getter();
    unint64_t v6 = *(void **)(v0 + 40);
    *(void *)(v0 + 200) = [v6 modernManagedObjectContext];

    uint64_t v7 = (void *)swift_allocObject();
    *(void *)(v0 + 208) = v7;
    void v7[2] = v5;
    v7[3] = v4;
    void v7[4] = v3;
    swift_retain();
    swift_retain();
    swift_retain();
    id v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 216) = v8;
    *id v8 = v0;
    v8[1] = sub_10017D064;
    uint64_t v9 = (char *)&type metadata for () + 8;
    uint64_t v10 = sub_10017E538;
    uint64_t v11 = v7;
  }
  else
  {
    *(void *)(v0 + 136) = v2;
    uint64_t v12 = *(unsigned __int8 *)(v0 + 232);
    uint64_t v13 = *(void *)(v0 + 104);
    uint64_t v14 = *(void *)(v0 + 96);
    uint64_t v15 = *(void *)(v0 + 64);
    uint64_t v16 = *(void *)(v0 + 56);
    uint64_t v17 = (v12 + 16) & ~v12;
    unint64_t v18 = (*(void *)(v0 + 88) + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v24 = *(void *)(v0 + 72);
    sub_10017E164(*(void *)(v0 + 112) + ((v12 + 32) & ~v12) + *(void *)(v0 + 128) * v2, v13);
    AppDependency.wrappedValue.getter();
    uint64_t v19 = *(void **)(v0 + 32);
    *(void *)(v0 + 144) = [v19 modernManagedObjectContext];

    sub_10017E164(v13, v14);
    uint64_t v20 = swift_allocObject();
    *(void *)(v0 + 152) = v20;
    sub_10017E36C(v14, v20 + v17);
    uint64_t v21 = (void *)(v20 + v18);
    void *v21 = v16;
    v21[1] = v15;
    v21[2] = v24;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v22 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v22;
    uint64_t v9 = (char *)sub_10002F214((uint64_t *)&unk_10069C930);
    void *v22 = v0;
    v22[1] = sub_10017C6F0;
    uint64_t v10 = sub_10017E3D0;
    id v8 = (void *)(v0 + 24);
    uint64_t v11 = (void *)v20;
  }
  return NSManagedObjectContext.perform<A>(_:)(v8, v10, v11, v9);
}

uint64_t sub_10017D064()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 224) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_10017D1FC;
  }
  else
  {
    uint64_t v4 = *(void **)(v2 + 200);
    swift_release();

    uint64_t v3 = sub_10017D184;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10017D184()
{
  static IntentResult.result<>()();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10017D1FC()
{
  uint64_t v1 = *(void **)(v0 + 200);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10017D280@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = _s11MobileNotes26DeleteChecklistItemsIntentVACycfC_0();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

id sub_10017D2AC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v7 = type metadata accessor for ChecklistItemEntity();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = [a1 textStorage];
  if (!result) {
    goto LABEL_3;
  }
  uint64_t v12 = result;
  id v13 = ICTTAttributeNameParagraphStyle;
  aBlock[7] = v3;
  id v14 = v13;
  id v15 = [v12 ic_range];
  uint64_t v24 = v16;
  id v25 = v15;
  sub_10017E164(a2, (uint64_t)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v17 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v18 = (v9 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = swift_allocObject();
  sub_10017E36C((uint64_t)v10, v19 + v17);
  *(void *)(v19 + v18) = v12;
  *(void *)(v19 + ((v18 + 15) & 0xFFFFFFFFFFFFFFF8)) = a1;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_10017EB0C;
  *(void *)(v20 + 24) = v19;
  aBlock[4] = sub_10017EBEC;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1004A06C8;
  aBlock[3] = &unk_10062EBC8;
  uint64_t v21 = _Block_copy(aBlock);
  id v22 = v12;
  id v23 = a1;
  swift_retain();
  swift_release();
  [v22 enumerateAttribute:v14 inRange:v25 options:v24 usingBlock:0 v21];

  _Block_release(v21);
  LOBYTE(v2sub_1001631A8(0, 1, 0, 1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  id result = (id)swift_release();
  if (v21) {
    __break(1u);
  }
  else {
LABEL_3:
  }
    *a3 = 0;
  return result;
}

void sub_10017D53C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4, uint64_t a5, void *a6, void *a7)
{
  uint64_t v48 = a3;
  id v49 = a7;
  uint64_t v46 = a2;
  id v47 = a6;
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v50 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10002F214((uint64_t *)&unk_1006A4F60);
  __chkstk_darwin(v13);
  id v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10002F214((uint64_t *)&unk_10069C990);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v17);
  id v22 = (char *)&v42 - v21;
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v42 - v23;
  sub_10002F034(a1, (uint64_t)v52, &qword_10069B4D0);
  if (!v53)
  {
    sub_10002B754((uint64_t)v52, &qword_10069B4D0);
    return;
  }
  sub_10017EBF4();
  if ((swift_dynamicCast() & 1) == 0) {
    return;
  }
  id v25 = v51;
  if ([v51 style] == 103)
  {
    uint64_t v43 = a4;
    uint64_t v26 = a5 + *(int *)(type metadata accessor for ChecklistItemID() + 20);
    uint64_t v27 = v50;
    (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v24, v26, v10);
    uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56);
    uint64_t v29 = 1;
    uint64_t v44 = v28;
    v28(v24, 0, 1, v10);
    id v45 = v25;
    id v30 = [v25 uuid];
    if (v30)
    {
      unint64_t v31 = v30;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v29 = 0;
    }
    v44(v22, v29, 1, v10);
    uint64_t v32 = (uint64_t)&v15[*(int *)(v13 + 48)];
    sub_10002F034((uint64_t)v24, (uint64_t)v15, (uint64_t *)&unk_10069C990);
    sub_10002F034((uint64_t)v22, v32, (uint64_t *)&unk_10069C990);
    uint64_t v33 = v50;
    uint64_t v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v50 + 48);
    if (v34((uint64_t)v15, 1, v10) == 1)
    {
      sub_10002B754((uint64_t)v22, (uint64_t *)&unk_10069C990);
      sub_10002B754((uint64_t)v24, (uint64_t *)&unk_10069C990);
      int v35 = v34(v32, 1, v10);
      id v25 = v45;
      if (v35 == 1)
      {
        sub_10002B754((uint64_t)v15, (uint64_t *)&unk_10069C990);
LABEL_14:
        id v39 = objc_allocWithZone((Class)NSAttributedString);
        NSString v40 = String._bridgeToObjectiveC()();
        id v41 = [v39 initWithString:v40];

        [v47 replaceCharactersInRange:v46 withAttributedString:v48];
        [v49 updateModificationDateAndChangeCount];
        *uint64_t v43 = 1;
        goto LABEL_15;
      }
      goto LABEL_12;
    }
    sub_10002F034((uint64_t)v15, (uint64_t)v19, (uint64_t *)&unk_10069C990);
    int v36 = v34(v32, 1, v10);
    id v25 = v45;
    if (v36 == 1)
    {
      sub_10002B754((uint64_t)v22, (uint64_t *)&unk_10069C990);
      sub_10002B754((uint64_t)v24, (uint64_t *)&unk_10069C990);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v19, v10);
LABEL_12:
      sub_10002B754((uint64_t)v15, (uint64_t *)&unk_1006A4F60);
      goto LABEL_15;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v12, v32, v10);
    sub_10017EC34(&qword_10069DE60, (void (*)(uint64_t))&type metadata accessor for UUID);
    char v37 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v38 = *(void (**)(char *, uint64_t))(v33 + 8);
    v38(v12, v10);
    sub_10002B754((uint64_t)v22, (uint64_t *)&unk_10069C990);
    sub_10002B754((uint64_t)v24, (uint64_t *)&unk_10069C990);
    v38(v19, v10);
    sub_10002B754((uint64_t)v15, (uint64_t *)&unk_10069C990);
    if (v37) {
      goto LABEL_14;
    }
  }
LABEL_15:
}

id sub_10017DA90()
{
  AppDependency.wrappedValue.getter();
  id v0 = [v4 modernManagedObjectContext];

  id v4 = 0;
  unsigned int v1 = [v0 save:&v4];

  if (v1) {
    return v4;
  }
  id v3 = v4;
  _convertNSErrorToError(_:)();

  return (id)swift_willThrow();
}

uint64_t _s11MobileNotes26DeleteChecklistItemsIntentVACycfC_0()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v30 = *(void *)(v0 - 8);
  uint64_t v31 = v0;
  __chkstk_darwin(v0);
  uint64_t v29 = (char *)v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v28 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v27 = (char *)v22 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  uint64_t v26 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v8 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Locale();
  __chkstk_darwin(v11 - 8);
  uint64_t v12 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v12 - 8);
  uint64_t v24 = type metadata accessor for LocalizedStringResource();
  uint64_t v13 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  v22[1] = (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002F214((uint64_t *)&unk_10069CE60);
  unint64_t v32 = 0xD000000000000021;
  unint64_t v33 = 0x8000000100549290;
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t v25 = AppDependency.__allocating_init(key:manager:)();
  sub_10002F214((uint64_t *)&unk_10069B130);
  unint64_t v32 = 0xD000000000000024;
  unint64_t v33 = 0x8000000100549260;
  AnyHashable.init<A>(_:)();
  static AppDependencyManager.shared.getter();
  v22[3] = AppDependency.__allocating_init(key:manager:)();
  uint64_t v22[2] = sub_10002F214((uint64_t *)&unk_10069B160);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v15 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 104);
  uint64_t v17 = v23;
  v16(v10, enum case for LocalizedStringResource.BundleDescription.main(_:), v23);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v16(v10, v15, v17);
  uint64_t v18 = v26;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v18, 0, 1, v24);
  uint64_t v34 = 0;
  uint64_t v19 = type metadata accessor for IntentDialog();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v27, 1, 1, v19);
  v20(v28, 1, 1, v19);
  (*(void (**)(char *, void, uint64_t))(v30 + 104))(v29, enum case for InputConnectionBehavior.default(_:), v31);
  sub_10017EC34(qword_1006A4EE0, (void (*)(uint64_t))type metadata accessor for ChecklistItemEntity);
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  return v25;
}

uint64_t sub_10017E164(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ChecklistItemEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10017E1C8()
{
  uint64_t v1 = (int *)(type metadata accessor for ChecklistItemEntity() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 24;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  uint64_t v9 = v6 + *(int *)(type metadata accessor for ChecklistItemID() + 20);
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  v8(v6 + v1[7], v7);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v5, v4);
}

uint64_t sub_10017E36C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ChecklistItemEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_10017E3D0(void *a1@<X8>)
{
  type metadata accessor for ChecklistItemEntity();
  AppDependency.wrappedValue.getter();
  id v2 = ChecklistItemEntity.note(in:)(v3);

  *a1 = v2;
}

uint64_t sub_10017E494(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ChecklistItemEntity();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10017E4F0()
{
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

id sub_10017E538()
{
  return sub_10017DA90();
}

uint64_t sub_10017E558()
{
  uint64_t v1 = (int *)(type metadata accessor for ChecklistItemEntity() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;

  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  uint64_t v9 = v6 + *(int *)(type metadata accessor for ChecklistItemID() + 20);
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  v8(v6 + v1[7], v7);
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v4, v5);
}

id sub_10017E6DC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for ChecklistItemEntity() - 8);
  return sub_10017D2AC(*(void **)(v1 + 16), v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1);
}

unint64_t sub_10017E750()
{
  unint64_t result = qword_10069C940;
  if (!qword_10069C940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069C940);
  }
  return result;
}

uint64_t sub_10017E7A4()
{
  return sub_10017EC34(qword_1006A4EE0, (void (*)(uint64_t))type metadata accessor for ChecklistItemEntity);
}

unint64_t sub_10017E7F4()
{
  unint64_t result = qword_10069C950;
  if (!qword_10069C950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069C950);
  }
  return result;
}

unint64_t sub_10017E84C()
{
  unint64_t result = qword_10069C958;
  if (!qword_10069C958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069C958);
  }
  return result;
}

uint64_t sub_10017E8A0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10017E8BC()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for DeleteChecklistItemsIntent()
{
  return &type metadata for DeleteChecklistItemsIntent;
}

uint64_t sub_10017E8E8()
{
  return sub_10001DFB0(&qword_10069C968, (uint64_t *)&unk_10069C970);
}

uint64_t sub_10017E924()
{
  return sub_10001DFB0((unint64_t *)&qword_10069DE30, (uint64_t *)&unk_10069C980);
}

uint64_t sub_10017E960()
{
  uint64_t v1 = (int *)(type metadata accessor for ChecklistItemEntity() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v12 = v2 | 7;
  unint64_t v4 = (*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  uint64_t v9 = v6 + *(int *)(type metadata accessor for ChecklistItemID() + 20);
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  v8(v6 + v1[7], v7);
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v5 + 8, v12);
}

void sub_10017EB0C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  uint64_t v9 = *(void *)(type metadata accessor for ChecklistItemEntity() - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v11 = (*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = *(void **)(v4 + v11);
  uint64_t v13 = *(void **)(v4 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8));

  sub_10017D53C(a1, a2, a3, a4, v4 + v10, v12, v13);
}

uint64_t sub_10017EBDC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10017EBEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1004A06A0(a1, a2, a3, a4, *(uint64_t (**)(void))(v4 + 16));
}

unint64_t sub_10017EBF4()
{
  unint64_t result = qword_10069C9A0;
  if (!qword_10069C9A0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10069C9A0);
  }
  return result;
}

uint64_t sub_10017EC34(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_10017EEE8()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v1 = (void *)Strong;
  uint64_t v2 = self;
  id v3 = [v2 mainBundle];
  NSString v4 = String._bridgeToObjectiveC()();
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v3 localizedStringForKey:v4 value:v5 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v1 setText:v7];

  uint64_t v8 = swift_unknownObjectWeakLoadStrong();
  if (!v8)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v9 = (void *)v8;
  id v10 = [v2 mainBundle];
  NSString v11 = String._bridgeToObjectiveC()();
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [v10 localizedStringForKey:v11 value:v12 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v9 setText:v14];

  uint64_t v15 = swift_unknownObjectWeakLoadStrong();
  if (!v15)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v16 = (void *)v15;
  uint64_t v17 = self;
  [v17 ic_isVision];
  id v18 = [v2 mainBundle];
  NSString v19 = String._bridgeToObjectiveC()();
  NSString v20 = String._bridgeToObjectiveC()();
  id v21 = [v18 localizedStringForKey:v19 value:v20 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v16 setText:v22];

  uint64_t v23 = swift_unknownObjectWeakLoadStrong();
  if (!v23)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v24 = (void *)v23;
  [v17 ic_isVision];
  id v25 = [v2 mainBundle];
  NSString v26 = String._bridgeToObjectiveC()();
  NSString v27 = String._bridgeToObjectiveC()();
  id v28 = [v25 localizedStringForKey:v26 value:v27 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v24 setText:v29];

  uint64_t v30 = swift_unknownObjectWeakLoadStrong();
  if (!v30)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v31 = (void *)v30;
  [v17 ic_isVision];
  id v32 = [v2 mainBundle];
  NSString v33 = String._bridgeToObjectiveC()();
  NSString v34 = String._bridgeToObjectiveC()();
  id v35 = [v32 localizedStringForKey:v33 value:v34 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v36 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v31 setText:v36];

  uint64_t v37 = swift_unknownObjectWeakLoadStrong();
  if (!v37)
  {
LABEL_15:
    __break(1u);
    return;
  }
  uint64_t v38 = (void *)v37;
  id v39 = [v2 mainBundle];
  NSString v40 = String._bridgeToObjectiveC()();
  NSString v41 = String._bridgeToObjectiveC()();
  id v42 = [v39 localizedStringForKey:v40 value:v41 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v43 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v38 setText:v43];
}